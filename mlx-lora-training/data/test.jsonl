{"prompt":"What is the average explainability score of creative AI applications in 'Europe' and 'North America' in the 'creative_ai' table? with given SQL schema CREATE TABLE creative_ai (application_id INT, name TEXT, region TEXT, explainability_score FLOAT); INSERT INTO creative_ai (application_id, name, region, explainability_score) VALUES (1, 'ApplicationX', 'Europe', 0.87), (2, 'ApplicationY', 'North America', 0.91), (3, 'ApplicationZ', 'Europe', 0.84), (4, 'ApplicationAA', 'North America', 0.93), (5, 'ApplicationAB', 'Europe', 0.89);","completion":"SELECT AVG(explainability_score) FROM creative_ai WHERE region IN ('Europe', 'North America');"}
{"prompt":"Delete all records of rural infrastructure projects in Indonesia that have a completion date before 2010. with given SQL schema CREATE TABLE rural_infrastructure (id INT, project_name TEXT, sector TEXT, country TEXT, completion_date DATE); INSERT INTO rural_infrastructure (id, project_name, sector, country, completion_date) VALUES (1, 'Water Supply Expansion', 'Infrastructure', 'Indonesia', '2008-05-15'), (2, 'Rural Electrification', 'Infrastructure', 'Indonesia', '2012-08-28'), (3, 'Transportation Improvement', 'Infrastructure', 'Indonesia', '2009-12-31');","completion":"DELETE FROM rural_infrastructure WHERE country = 'Indonesia' AND completion_date < '2010-01-01';"}
{"prompt":"How many accidents have been recorded for SpaceX and Blue Origin rocket launches? with given SQL schema CREATE TABLE Accidents (id INT, launch_provider VARCHAR(255), year INT, description TEXT); INSERT INTO Accidents (id, launch_provider, year, description) VALUES (1, 'SpaceX', 2015, 'Falcon 9 explosion'), (2, 'Blue Origin', 2011, 'Propulsion system failure'), (3, 'SpaceX', 2016, 'Falcon 9 explosion');","completion":"SELECT launch_provider, COUNT(*) FROM Accidents GROUP BY launch_provider;"}
{"prompt":"What is the maximum quantity of seafood sold in a single transaction? with given SQL schema CREATE TABLE sales (id INT, location VARCHAR(20), quantity INT, price DECIMAL(5,2)); INSERT INTO sales (id, location, quantity, price) VALUES (1, 'Northeast', 50, 12.99), (2, 'Midwest', 75, 19.99), (3, 'West', 120, 14.49);","completion":"SELECT MAX(quantity) FROM sales;"}
{"prompt":"What is the total budget for movies released before 2010? with given SQL schema CREATE TABLE Movies_Release_Year (id INT, title VARCHAR(100), release_year INT, budget DECIMAL(10,2)); INSERT INTO Movies_Release_Year (id, title, release_year, budget) VALUES (1, 'The Matrix', 1999, 63000000.00), (2, 'Titanic', 1997, 200000000.00), (3, 'The Lord of the Rings: The Fellowship of the Ring', 2001, 93000000.00);","completion":"SELECT SUM(budget) FROM Movies_Release_Year WHERE release_year < 2010;"}
{"prompt":"Add a new attorney named 'Oliver Martinez' with email 'oliver.martinez@lawfirm.com' and phone '555-555-5678' to the 'attorneys' table with given SQL schema CREATE TABLE attorneys (attorney_id INT, attorney_name VARCHAR(50), attorney_email VARCHAR(50), attorney_phone VARCHAR(15));","completion":"INSERT INTO attorneys (attorney_name, attorney_email, attorney_phone) VALUES ('Oliver Martinez', 'oliver.martinez@lawfirm.com', '555-555-5678');"}
{"prompt":"Identify the top 2 plants with the highest CO2 emissions per ton produced. with given SQL schema CREATE TABLE co2_emissions (id INT PRIMARY KEY, plant_name VARCHAR(255), chemical_name VARCHAR(255), co2_emission_per_ton_produced DECIMAL(5,2)); INSERT INTO co2_emissions (id, plant_name, chemical_name, co2_emission_per_ton_produced) VALUES (1, 'Plant A', 'Nitric Acid', 2.3); INSERT INTO co2_emissions (id, plant_name, chemical_name, co2_emission_per_ton_produced) VALUES (2, 'Plant B', 'Acetic Acid', 1.8);","completion":"SELECT plant_name, SUM(co2_emission_per_ton_produced) AS total_co2_emission FROM co2_emissions GROUP BY plant_name ORDER BY total_co2_emission DESC LIMIT 2;"}
{"prompt":"What is the total cost of all climate communication projects that ended after 2010 in 'Antarctica'? with given SQL schema CREATE TABLE climate_communication (project_id INT, project_name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE, total_cost DECIMAL(10,2));","completion":"SELECT SUM(total_cost) FROM climate_communication WHERE location = 'Antarctica' AND end_date >= '2010-12-31';"}
{"prompt":"List all marine species with their conservation status. with given SQL schema CREATE TABLE marine_species (name TEXT, conservation_status TEXT);","completion":"SELECT name, conservation_status FROM marine_species;"}
{"prompt":"What is the average number of publications per researcher for researchers working at the 'National Geographic' organization? with given SQL schema CREATE TABLE researchers (id INT, name VARCHAR(255), organization VARCHAR(255), publications INT); INSERT INTO researchers (id, name, organization, publications) VALUES (1, 'Alice Johnson', 'NOAA', 25); INSERT INTO researchers (id, name, organization, publications) VALUES (2, 'Bob Smith', 'University of Miami', 30); INSERT INTO researchers (id, name, organization, publications) VALUES (3, 'Charlie Brown', 'National Geographic', 50);","completion":"SELECT organization, AVG(publications) as avg_publications FROM researchers WHERE organization = 'National Geographic';"}
{"prompt":"How many decentralized applications have been downloaded from the 'Asia-Pacific' region? with given SQL schema CREATE TABLE dapp_ranking (dapp_id INT, dapp_name VARCHAR(50), dapp_category VARCHAR(30), dapp_rating DECIMAL(3,2), dapp_downloads INT, dapp_region VARCHAR(30)); INSERT INTO dapp_ranking (dapp_id, dapp_name, dapp_category, dapp_rating, dapp_downloads, dapp_region) VALUES (1, 'AsiaPacificDapp', 'Social', 4.3, 2000000, 'Asia-Pacific');","completion":"SELECT SUM(dapp_downloads) FROM dapp_ranking WHERE dapp_region = 'Asia-Pacific';"}
{"prompt":"Identify forests in Canada or the United States with an area larger than 1 million hectares? with given SQL schema CREATE TABLE forests (id INT, name VARCHAR(255), hectares FLOAT, country VARCHAR(255)); INSERT INTO forests (id, name, hectares, country) VALUES (1, 'Amazon Rainforest', 5500000.0, 'Brazil'), (2, 'Daintree Rainforest', 120000.0, 'Australia'), (3, 'Yellowstone', 894000.0, 'USA'), (4, 'Banff National Park', 664000.0, 'Canada');","completion":"SELECT forests.name FROM forests WHERE (forests.country = 'Canada' OR forests.country = 'USA') AND forests.hectares > 1000000;"}
{"prompt":"What is the maximum response time for emergency calls in the city of Los Angeles? with given SQL schema CREATE TABLE emergency_calls (id INT, city VARCHAR(20), response_time INT);","completion":"SELECT MAX(response_time) FROM emergency_calls WHERE city = 'Los Angeles';"}
{"prompt":"What is the total number of police patrols and community engagement events in each district in January 2021? with given SQL schema CREATE TABLE patrols (id INT, district_id INT, date DATE, type TEXT); INSERT INTO patrols (id, district_id, date, type) VALUES (1, 1, '2021-01-01', 'Patrol'), (2, 1, '2021-01-02', 'Community'), (3, 2, '2021-01-01', 'Patrol'), (4, 2, '2021-01-03', 'Community'), (5, 3, '2021-01-04', 'Patrol'), (6, 3, '2021-01-05', 'Community');","completion":"SELECT d.name, SUM(IF(p.type = 'Patrol', 1, 0)) as num_patrols, SUM(IF(p.type = 'Community', 1, 0)) as num_community FROM districts d JOIN patrols p ON d.id = p.district_id WHERE p.date >= '2021-01-01' AND p.date < '2021-02-01' GROUP BY d.id;"}
{"prompt":"What is the average cybersecurity contract value? with given SQL schema CREATE TABLE contracts (id INT, category VARCHAR(255), value DECIMAL(10,2));INSERT INTO contracts (id, category, value) VALUES (1, 'Aircraft', 5000000.00), (2, 'Missiles', 2000000.00), (3, 'Shipbuilding', 8000000.00), (4, 'Cybersecurity', 3000000.00), (5, 'Aircraft', 6000000.00), (6, 'Shipbuilding', 9000000.00);","completion":"SELECT AVG(value) as avg_value FROM contracts WHERE category = 'Cybersecurity';"}
{"prompt":"Delete arms_imports table records where year is before 2000 with given SQL schema CREATE TABLE arms_imports (id INT PRIMARY KEY, country VARCHAR(100), year INT, quantity INT); INSERT INTO arms_imports (id, country, year, quantity) VALUES (1, 'China', 1999, 5000);","completion":"DELETE FROM arms_imports WHERE year < 2000;"}
{"prompt":"What is the average number of military personnel per country involved in peacekeeping operations? with given SQL schema CREATE TABLE Peacekeeping_Operations (id INT, country VARCHAR(50), military_personnel INT); INSERT INTO Peacekeeping_Operations (id, country, military_personnel) VALUES (1, 'United States', 500), (2, 'United Kingdom', 300), (3, 'Canada', 250);","completion":"SELECT AVG(military_personnel) FROM Peacekeeping_Operations;"}
{"prompt":"What is the maximum daily investment for each client? with given SQL schema CREATE TABLE daily_investments (client_id INT, date DATE, investment FLOAT); INSERT INTO daily_investments (client_id, date, investment) VALUES (1, '2022-01-01', 1000.00), (1, '2022-01-02', 2000.00), (2, '2022-01-01', 3000.00), (2, '2022-01-02', 4000.00);","completion":"SELECT client_id, MAX(investment) OVER (PARTITION BY client_id ORDER BY client_id) as max_daily_investment FROM daily_investments;"}
{"prompt":"List the ports with their total cargo weight for 'Fruit' type from the 'CARGO_HANDLING' table. with given SQL schema CREATE TABLE PORTS (ID INT, PortName VARCHAR(30)); CREATE TABLE CARGO_HANDLING (ID INT, PortID INT, CargoType VARCHAR(10), Weight INT); INSERT INTO PORTS (ID, PortName) VALUES (1, 'PortA'), (2, 'PortB'), (3, 'PortC'); INSERT INTO CARGO_HANDLING (ID, PortID, CargoType, Weight) VALUES (1, 1, 'Fruit', 100), (2, 1, 'Fruit', 200), (3, 2, 'Fruit', 300);","completion":"SELECT P.PortName, SUM(CH.Weight) FROM PORTS P JOIN CARGO_HANDLING CH ON P.ID = CH.PortID WHERE CH.CargoType = 'Fruit' GROUP BY P.PortName;"}
{"prompt":"What is the minimum fuel consumption of container ships built in 2016, grouped by container type? with given SQL schema CREATE TABLE container_ships (ship_id INT, ship_name VARCHAR(255), ship_builder VARCHAR(255), year INT, container_type VARCHAR(255), fuel_consumption INT);INSERT INTO container_ships (ship_id, ship_name, ship_builder, year, container_type, fuel_consumption) VALUES (1, 'Ever Golden', 'Imabari Shipbuilding', 2016, 'dry', 230), (2, 'HMM Oslo', 'Hyundai Heavy Industries', 2016, 'refrigerated', 250);","completion":"SELECT container_type, MIN(fuel_consumption) FROM container_ships WHERE year = 2016 GROUP BY container_type;"}
{"prompt":"Which rural areas have the highest prevalence of asthma in children? with given SQL schema CREATE TABLE asthma (id INTEGER, county VARCHAR(255), state VARCHAR(255), age INTEGER, prevalence FLOAT);","completion":"SELECT county, state, AVG(prevalence) AS avg_prevalence FROM asthma WHERE age < 18 AND county LIKE '%rural%' GROUP BY county, state ORDER BY avg_prevalence DESC LIMIT 10;"}
{"prompt":"What is the sum of investments in healthcare for each region? with given SQL schema CREATE TABLE investments (id INT, sector VARCHAR(20), amount DECIMAL(10,2), region VARCHAR(30)); INSERT INTO investments (id, sector, amount, region) VALUES (1, 'Education', 5000.00, 'North America'), (2, 'Healthcare', 7000.00, 'Europe'), (3, 'Education', 6000.00, 'Asia'), (4, 'Healthcare', 8000.00, 'North America'), (5, 'Healthcare', 9000.00, 'Europe');","completion":"SELECT i.region, SUM(i.amount) FROM investments i WHERE i.sector = 'Healthcare' GROUP BY i.region;"}
{"prompt":"Identify the intelligence operations that have been conducted in the last 5 years, their primary objectives, and the number of personnel involved in each operation. with given SQL schema CREATE TABLE intelligence_operations (id INT PRIMARY KEY, operation_name VARCHAR(255), operation_date DATE, primary_objective VARCHAR(255), personnel_count INT);","completion":"SELECT primary_objective, COUNT(*) as num_personnel FROM intelligence_operations WHERE operation_date >= DATEADD(year, -5, GETDATE()) GROUP BY primary_objective;"}
{"prompt":"How many donors are there in the 'South West' region? with given SQL schema CREATE TABLE Donors (id INT, name TEXT, region TEXT); INSERT INTO Donors (id, name, region) VALUES (1, 'Carol', 'South West'), (2, 'Dave', 'South East'), (3, 'Eva', 'South West');","completion":"SELECT COUNT(*) FROM Donors WHERE region = 'South West';"}
{"prompt":"What is the total amount donated to each program? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(255)); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE DonorsPrograms (DonorID INT, ProgramID INT); INSERT INTO DonorsPrograms (DonorID, ProgramID) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 1); CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL(10, 2)); INSERT INTO Donations (DonationID, DonorID, DonationAmount) VALUES (1, 1, 100), (2, 1, 200), (3, 2, 50), (4, 3, 75), (5, 4, 300), (6, 6, 50);","completion":"SELECT Programs.ProgramName, SUM(Donations.DonationAmount) AS TotalDonatedAmount FROM Programs INNER JOIN DonorsPrograms ON Programs.ProgramID = DonorsPrograms.ProgramID INNER JOIN Donations ON DonorsPrograms.DonorID = Donations.DonorID GROUP BY Programs.ProgramName;"}
{"prompt":"What was the average donation amount for each quarter in 2022? with given SQL schema CREATE TABLE Donations (DonationID int, DonationAmount decimal(10,2), DonationDate date); INSERT INTO Donations VALUES (1, 50, '2022-01-01'), (2, 100, '2022-02-01'), (3, 75, '2022-03-01'), (4, 125, '2022-04-01'), (5, 200, '2022-05-01');","completion":"SELECT DATE_FORMAT(DonationDate, '%Y-%m') as Quarter, AVG(DonationAmount) as AvgDonation FROM Donations GROUP BY Quarter ORDER BY Quarter;"}
{"prompt":"Insert a new student with a unique student_id, district_id, and mental_health_score, and update the district's average mental health score accordingly. with given SQL schema CREATE TABLE school_districts (district_id INT, district_name TEXT, average_mental_health_score DECIMAL(5,2)); CREATE TABLE students (student_id INT, district_id INT, mental_health_score INT);","completion":"INSERT INTO students (student_id, district_id, mental_health_score) VALUES (12345, 6789, 75); UPDATE school_districts sd SET sd.average_mental_health_score = (SELECT AVG(s.mental_health_score) FROM students s WHERE s.district_id = sd.district_id) WHERE sd.district_id = 6789;"}
{"prompt":"Which are the courses that are not taken by any students in grade 12 and do not use open pedagogy? with given SQL schema CREATE TABLE Courses (CourseID INT, Name VARCHAR(50), OpenPedagogy BOOLEAN); INSERT INTO Courses (CourseID, Name, OpenPedagogy) VALUES (5, 'English Literature', FALSE); INSERT INTO Courses (CourseID, Name, OpenPedagogy) VALUES (6, 'History', FALSE); INSERT INTO Students (StudentID, Name, MentalHealthScore, GradeLevel) VALUES (8, 'Quinn Purple', 75, 11);","completion":"SELECT Name FROM Courses WHERE NOT EXISTS (SELECT 1 FROM Students WHERE GradeLevel = 12 AND Courses.CourseID = Students.StudentID) AND OpenPedagogy = FALSE;"}
{"prompt":"What is the average salary for each department in 2022? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Department VARCHAR(20), Salary FLOAT, HireDate DATE); INSERT INTO Employees (EmployeeID, Gender, Department, Salary, HireDate) VALUES (1, 'Male', 'IT', 70000, '2022-01-01'), (2, 'Female', 'IT', 65000, '2022-01-01'), (3, 'Male', 'HR', 60000, '2022-01-01'), (4, 'Female', 'Marketing', 80000, '2022-01-01');","completion":"SELECT Department, AVG(Salary) FROM Employees WHERE YEAR(HireDate) = 2022 GROUP BY Department;"}
{"prompt":"How many wind farms were installed in Canada between 2015 and 2018? with given SQL schema CREATE TABLE wind_farms (id INT, name TEXT, country TEXT, installation_year INT);","completion":"SELECT COUNT(*) FROM wind_farms WHERE country = 'Canada' AND installation_year BETWEEN 2015 AND 2018;"}
{"prompt":"List renewable energy projects in India with a budget between $50 million and $200 million. with given SQL schema CREATE TABLE renewable_project (id INT, name VARCHAR(50), country VARCHAR(20), budget FLOAT); INSERT INTO renewable_project (id, name, country, budget) VALUES (1, 'Project 1', 'India', 150.0), (2, 'Project 2', 'India', 75.5), (3, 'Project 3', 'India', 120.0);","completion":"SELECT name FROM renewable_project WHERE country = 'India' AND budget BETWEEN 50.0 AND 200.0;"}
{"prompt":"What is the average carbon price in USD per metric ton, for the last 6 months, in the EU ETS market? with given SQL schema CREATE TABLE carbon_prices (id INT, market VARCHAR(50), date DATE, price FLOAT); INSERT INTO carbon_prices (id, market, date, price) VALUES (1, 'EU ETS', '2022-01-01', 25.0), (2, 'EU ETS', '2022-02-01', 27.0), (3, 'EU ETS', '2022-03-01', 30.0);","completion":"SELECT AVG(price) FROM carbon_prices WHERE market = 'EU ETS' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY market;"}
{"prompt":"What is the average energy rating for commercial buildings in Texas? with given SQL schema CREATE TABLE energy_efficiency (id INT PRIMARY KEY, building_type VARCHAR(255), energy_rating FLOAT, location VARCHAR(255)); INSERT INTO energy_efficiency (id, building_type, energy_rating, location) VALUES (1, 'Residential', 80.0, 'California'); INSERT INTO energy_efficiency (id, building_type, energy_rating, location) VALUES (2, 'Commercial', 70.0, 'Texas');","completion":"SELECT building_type, AVG(energy_rating) FROM energy_efficiency WHERE building_type = 'Commercial' AND location = 'Texas';"}
{"prompt":"Delete all records in the 'oil_rig' table where the 'company' is 'XYZ Inc.' with given SQL schema CREATE TABLE oil_rig (id INT, company VARCHAR(255), location VARCHAR(255), status VARCHAR(255));","completion":"DELETE FROM oil_rig WHERE company = 'XYZ Inc.';"}
{"prompt":"What is the average running speed for each player in the 2020 World Cup? with given SQL schema CREATE TABLE world_cup (player VARCHAR(255), match_id INT, running_speed FLOAT); INSERT INTO world_cup (player, match_id, running_speed) VALUES ('Messi', 1, 25), ('Messi', 2, 26), ('Ronaldo', 1, 24), ('Ronaldo', 2, 27);","completion":"SELECT player, AVG(running_speed) FROM world_cup GROUP BY player;"}
{"prompt":"What is the maximum number of assists provided in a single season by players from European countries? with given SQL schema CREATE TABLE season_stats (season_id INT, player_id INT, assists INT);","completion":"SELECT MAX(assists) FROM season_stats WHERE country IN (SELECT country FROM players WHERE players.country = season_stats.country AND country LIKE 'Europe%');"}
{"prompt":"What is the total number of points scored by players from Brazil in the NBA? with given SQL schema CREATE TABLE players (id INT, name TEXT, country TEXT, points INT);","completion":"SELECT SUM(points) FROM players WHERE country = 'Brazil';"}
{"prompt":"What is the number of medical supplies distributed by each organization, in East Africa, for the last 3 years, and the total cost of the supplies? with given SQL schema CREATE TABLE medical_supplies (supply_id INT, organization_id INT, location VARCHAR(255), supply_type VARCHAR(255), supply_cost DECIMAL(10,2), distribution_date DATE); INSERT INTO medical_supplies VALUES (1, 1, 'Country A', 'Medicine', 5000, '2020-01-01'); INSERT INTO medical_supplies VALUES (2, 1, 'Country A', 'Medical Equipment', 7000, '2021-01-01'); INSERT INTO medical_supplies VALUES (3, 2, 'Country B', 'Vaccines', 10000, '2021-01-01'); INSERT INTO medical_supplies VALUES (4, 2, 'Country B', 'First Aid Kits', 8000, '2020-01-01');","completion":"SELECT organization_id, location as region, COUNT(*) as number_of_supplies, SUM(supply_cost) as total_supply_cost FROM medical_supplies WHERE location = 'East Africa' AND distribution_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY organization_id, location;"}
{"prompt":"What is the total number of NGOs operating in Yemen and how many projects do they have? with given SQL schema CREATE TABLE ngos (id INT, country VARCHAR(255), name VARCHAR(255), project_count INT); INSERT INTO ngos (id, country, name, project_count) VALUES (1, 'Yemen', 'NGO 1', 3), (2, 'Yemen', 'NGO 2', 4);","completion":"SELECT country, SUM(project_count) FROM ngos GROUP BY country;"}
{"prompt":"How many fair trade certified products does each brand have, ordered from the most to least? with given SQL schema CREATE TABLE certifications (certification_id INT, brand_id INT, certification_name VARCHAR(255)); INSERT INTO certifications (certification_id, brand_id, certification_name) VALUES (1, 1, 'Fair trade'), (2, 1, 'GOTS'), (3, 2, 'Fair trade'), (4, 2, 'B Corp');","completion":"SELECT brand_name, COUNT(*) as fair_trade_products FROM certifications JOIN brands ON certifications.brand_id = brands.brand_id WHERE certification_name = 'Fair trade' GROUP BY brand_name ORDER BY fair_trade_products DESC;"}
{"prompt":"What is the total revenue generated by sales of eco-friendly materials? with given SQL schema CREATE TABLE Sales (id INT, item_name VARCHAR(50), material VARCHAR(50), revenue INT); INSERT INTO Sales (id, item_name, material, revenue) VALUES (1, 'Shirt', 'Organic Cotton', 25), (2, 'Pants', 'Hemp', 30), (3, 'Jacket', 'Recycled Polyester', 50), (4, 'Shirt', 'Tencel', 20), (5, 'Skirt', 'Bamboo', 35);","completion":"SELECT SUM(revenue) FROM Sales WHERE material IN ('Organic Cotton', 'Hemp', 'Recycled Polyester', 'Tencel', 'Bamboo');"}
{"prompt":"What are the names and total transactions of all Shariah-compliant financial institutions from the finance database? with given SQL schema CREATE TABLE shariah_compliant_institutions (name VARCHAR(255), total_transactions INT); INSERT INTO shariah_compliant_institutions (name, total_transactions) VALUES ('Institution A', 3000), ('Institution B', 5000);","completion":"SELECT name, SUM(total_transactions) FROM shariah_compliant_institutions;"}
{"prompt":"How many genetic research studies were conducted in the United Kingdom in 2019? with given SQL schema CREATE TABLE genetic_research (id INT, study_name VARCHAR(100), location VARCHAR(100), start_date DATE, end_date DATE);","completion":"SELECT COUNT(*) FROM genetic_research WHERE location = 'United Kingdom' AND start_date <= '2019-12-31' AND end_date >= '2019-01-01';"}
{"prompt":"What is the number of female faculty members in the Physics department who have not been awarded any research grants? with given SQL schema CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50), gender VARCHAR(10)); INSERT INTO faculty (id, name, department, gender) VALUES (1, 'Alice', 'Physics', 'Female'); INSERT INTO faculty (id, name, department, gender) VALUES (2, 'Bob', 'Physics', 'Male'); CREATE TABLE research_grants (id INT, faculty_id INT, amount DECIMAL(10,2)); INSERT INTO research_grants (id, faculty_id, amount) VALUES (1, 2, 10000.00);","completion":"SELECT COUNT(*) FROM faculty f1 WHERE f1.department = 'Physics' AND f1.gender = 'Female' AND NOT EXISTS (SELECT 1 FROM research_grants rg WHERE rg.faculty_id = f1.id);"}
{"prompt":"What was the average revenue per guest for each hotel in Q2 2022? with given SQL schema CREATE TABLE Hotels (HotelID INT, HotelName VARCHAR(50)); INSERT INTO Hotels (HotelID, HotelName) VALUES (1, 'HotelA'), (2, 'HotelB'), (3, 'HotelC'); CREATE TABLE Bookings (BookingID INT, HotelID INT, Guests INT, Revenue DECIMAL(10,2)); INSERT INTO Bookings (BookingID, HotelID, Guests, Revenue) VALUES (1, 1, 2, 150.00), (2, 1, 4, 300.00), (3, 2, 3, 225.00), (4, 2, 1, 75.00), (5, 3, 5, 450.00), (6, 3, 2, 100.00);","completion":"SELECT H.HotelName, AVG(B.Revenue\/B.Guests) as AvgRevenuePerGuest FROM Hotels H INNER JOIN Bookings B ON H.HotelID = B.HotelID WHERE MONTH(B.BookingDate) BETWEEN 5 AND 8 GROUP BY H.HotelName;"}
{"prompt":"What is the maximum temperature recorded in the 'arctic_weather' table for each month in the year 2020, broken down by species ('species' column in the 'arctic_weather' table)? with given SQL schema CREATE TABLE arctic_weather (id INT, date DATE, temperature FLOAT, species VARCHAR(50));","completion":"SELECT MONTH(date) AS month, species, MAX(temperature) AS max_temp FROM arctic_weather WHERE YEAR(date) = 2020 GROUP BY month, species;"}
{"prompt":"What is the average number of visitor reviews for heritage sites in each category? with given SQL schema CREATE TABLE HeritageSitesReviews (ID INT, SiteName VARCHAR(100), Category VARCHAR(50), Reviews INT); INSERT INTO HeritageSitesReviews (ID, SiteName, Category, Reviews) VALUES (1, 'Machu Picchu', 'Archaeological', 5000); INSERT INTO HeritageSitesReviews (ID, SiteName, Category, Reviews) VALUES (2, 'Taj Mahal', 'Architectural', 8000);","completion":"SELECT Category, AVG(Reviews) OVER (PARTITION BY Category) AS AvgReviews FROM HeritageSitesReviews;"}
{"prompt":"What is the distribution of language preservation initiatives by initiative type? with given SQL schema CREATE TABLE language_preservation (id INT, language VARCHAR(255), initiative VARCHAR(255), country VARCHAR(255)); INSERT INTO language_preservation (id, language, initiative, country) VALUES (1, 'Quechua', 'Quechua Education', 'Peru'), (2, 'Gaelic', 'Gaelic Language Revitalization', 'Scotland'); CREATE VIEW language_preservation_by_initiative AS SELECT initiative, COUNT(*) as initiative_count FROM language_preservation GROUP BY initiative;","completion":"SELECT initiative, initiative_count FROM language_preservation_by_initiative;"}
{"prompt":"List all patient_id's from the 'patients' table who have attended therapy sessions in the month of June 2021 with given SQL schema CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name TEXT, date_of_birth DATE); CREATE TABLE therapy_sessions (session_id INT PRIMARY KEY, patient_id INT, therapist_id INT, session_date DATE, session_duration TIME);","completion":"SELECT patients.patient_id FROM patients INNER JOIN therapy_sessions ON patients.patient_id = therapy_sessions.patient_id WHERE MONTH(therapy_sessions.session_date) = 6 AND YEAR(therapy_sessions.session_date) = 2021;"}
{"prompt":"List the names and treatment approaches of therapists who have treated more than 50 patients with depression? with given SQL schema CREATE TABLE therapists (therapist_id INT, name VARCHAR(255), age INT, gender VARCHAR(10)); CREATE TABLE patients (patient_id INT, name VARCHAR(255), age INT, gender VARCHAR(10), condition VARCHAR(255)); CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE);","completion":"SELECT therapists.name, therapists.treatment_approach FROM therapists JOIN (SELECT therapist_id, COUNT(*) AS patient_count FROM patients WHERE condition = 'depression' GROUP BY therapist_id HAVING patient_count > 50) AS patient_counts ON therapists.therapist_id = patient_counts.therapist_id;"}
{"prompt":"What is the number of patients in India who received group therapy? with given SQL schema CREATE TABLE patients (id INT, country VARCHAR(20)); INSERT INTO patients (id, country) VALUES (1, 'India'), (2, 'USA'); CREATE TABLE treatments (id INT, patient_id INT, treatment VARCHAR(20)); INSERT INTO treatments (id, patient_id, treatment) VALUES (1, 1, 'Group Therapy'), (2, 2, 'Individual Therapy');","completion":"SELECT COUNT(*) FROM patients INNER JOIN treatments ON patients.id = treatments.patient_id WHERE treatments.treatment = 'Group Therapy' AND patients.country = 'India';"}
{"prompt":"Show the number of public works projects in California and their average resilience score with given SQL schema CREATE TABLE Infrastructure (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255), is_public_works BOOLEAN, resilience_score INT); INSERT INTO Infrastructure (id, name, type, location, is_public_works, resilience_score) VALUES (1, 'Road A', 'Road', 'California', TRUE, 85); INSERT INTO Infrastructure (id, name, type, location, is_public_works, resilience_score) VALUES (2, 'Bridge B', 'Bridge', 'California', FALSE, 70);","completion":"SELECT COUNT(*) as num_projects, AVG(resilience_score) as avg_resilience FROM Infrastructure WHERE location = 'California' AND is_public_works = TRUE;"}
{"prompt":"calculate the average completion time of projects in the 'public_works' table, partitioned by the project's location and ordered by the average completion time. with given SQL schema CREATE TABLE public_works (id INT, name VARCHAR(50), location VARCHAR(50), start_date DATE, completion_date DATE);","completion":"SELECT location, AVG(DATEDIFF(day, start_date, completion_date)) as avg_completion_time, ROW_NUMBER() OVER (PARTITION BY location ORDER BY AVG(DATEDIFF(day, start_date, completion_date)) DESC) as rn FROM public_works GROUP BY location ORDER BY avg_completion_time DESC;"}
{"prompt":"What is the percentage of parolees who have reoffended in Texas, broken down by gender and race, for the years 2017 and 2018? with given SQL schema CREATE TABLE parolee (parolee_id INT, year INT, gender TEXT, race TEXT, reoffender BOOLEAN); INSERT INTO parolee (parolee_id, year, gender, race, reoffender) VALUES (1, 2017, 'Male', 'White', TRUE); INSERT INTO parolee (parolee_id, year, gender, race, reoffender) VALUES (2, 2017, 'Female', 'Black', FALSE); INSERT INTO parolee (parolee_id, year, gender, race, reoffender) VALUES (3, 2018, 'Male', 'Hispanic', TRUE); INSERT INTO parolee (parolee_id, year, gender, race, reoffender) VALUES (4, 2018, 'Female', 'Asian', FALSE);","completion":"SELECT c.year, c.gender, c.race, COUNT(c.parolee_id) AS parolees, AVG(CAST(c.reoffender AS FLOAT)) * 100 AS reoffender_percentage FROM parolee c WHERE c.year IN (2017, 2018) GROUP BY c.year, c.gender, c.race;"}
{"prompt":"What is the total number of restorative justice cases per district? with given SQL schema CREATE TABLE district (id INT, name VARCHAR(50)); INSERT INTO district (id, name) VALUES (1, 'Downtown'), (2, 'Uptown'), (3, 'Suburbs'); CREATE TABLE restorative_justice (id INT, district_id INT, cases INT); INSERT INTO restorative_justice (id, district_id, cases) VALUES (1, 1, 10), (2, 1, 15), (3, 2, 8), (4, 3, 12);","completion":"SELECT rj.district_id, SUM(rj.cases) AS total_cases FROM restorative_justice rj GROUP BY rj.district_id;"}
{"prompt":"What is the total biomass of marine species in ascending order of depth? with given SQL schema CREATE TABLE biomass (id INT, species TEXT, type TEXT, biomass FLOAT); INSERT INTO biomass (id, species, type, biomass) VALUES (1, 'Anglerfish', 'Trench', 0.5), (2, 'Goblin shark', 'Abyssal', 1.2), (3, 'Hatchetfish', 'Trench', 0.3);","completion":"SELECT type, SUM(biomass) total_biomass FROM biomass GROUP BY type ORDER BY total_biomass ASC;"}
{"prompt":"What is the average rating of movies by director in the Media database? with given SQL schema CREATE TABLE DirectorMoviesRating (MovieTitle VARCHAR(50), Director VARCHAR(50), Rating DECIMAL(3,2)); INSERT INTO DirectorMoviesRating (MovieTitle, Director, Rating) VALUES ('The Godfather', 'Francis Ford Coppola', 9.2), ('The Shawshank Redemption', 'Frank Darabont', 9.3), ('The Godfather: Part II', 'Francis Ford Coppola', 9.0), ('The Dark Knight', 'Christopher Nolan', 9.0), ('Star Wars: Episode IV - A New Hope', 'George Lucas', 8.7);","completion":"SELECT Director, AVG(Rating) as AverageRating FROM DirectorMoviesRating GROUP BY Director;"}
{"prompt":"What is the average rating of movies produced in the US between 2010 and 2020? with given SQL schema CREATE TABLE movies (id INT, title VARCHAR(255), rating FLOAT, production_year INT, country VARCHAR(50)); INSERT INTO movies (id, title, rating, production_year, country) VALUES (1, 'Movie1', 7.5, 2015, 'USA'), (2, 'Movie2', 8.2, 2018, 'USA'), (3, 'Movie3', 6.9, 2012, 'USA');","completion":"SELECT AVG(rating) FROM movies WHERE production_year BETWEEN 2010 AND 2020 AND country = 'USA';"}
{"prompt":"What is the total number of military aircraft sold by GlobalDefense to the Canadian government? with given SQL schema CREATE TABLE GlobalDefense.AircraftSales (id INT, manufacturer VARCHAR(255), model VARCHAR(255), quantity INT, price DECIMAL(10,2), buyer_country VARCHAR(255), sale_date DATE);","completion":"SELECT SUM(quantity) FROM GlobalDefense.AircraftSales WHERE buyer_country = 'Canada' AND manufacturer = 'GlobalDefense';"}
{"prompt":"Update the resource depletion metrics for the 'Aquamarine Arch' mine in Himachal Pradesh, India with given SQL schema CREATE TABLE resource_depletion (mine_id INT, year INT, resource_depletion_rate FLOAT);","completion":"UPDATE resource_depletion SET resource_depletion_rate = 0.08 WHERE mine_id = 9 AND year = 2021;"}
{"prompt":"Which mobile plans have a higher data limit than the average data limit for all mobile plans? with given SQL schema CREATE TABLE mobile_plans (id INT, plan_name VARCHAR(50), data_limit INT);","completion":"SELECT plan_name FROM mobile_plans WHERE data_limit > (SELECT AVG(data_limit) FROM mobile_plans);"}
{"prompt":"How many news items have been published in 'region1'? with given SQL schema CREATE TABLE news (id INT, title VARCHAR(50), region VARCHAR(20)); INSERT INTO news (id, title, region) VALUES (1, 'News1', 'region1'), (2, 'News2', 'region2');","completion":"SELECT COUNT(*) FROM news WHERE region = 'region1';"}
{"prompt":"What is the average word count for articles in the 'opinion' category? with given SQL schema CREATE TABLE news (title VARCHAR(255), author VARCHAR(255), word_count INT, category VARCHAR(255)); INSERT INTO news (title, author, word_count, category) VALUES ('Sample News', 'Jane Smith', 500, 'Opinion');","completion":"SELECT AVG(word_count) FROM news WHERE category = 'Opinion';"}
{"prompt":"What is the total number of donations for each mission_area in the 'Organizations' table? with given SQL schema CREATE TABLE Organizations (org_id INT, name VARCHAR(50), mission_area VARCHAR(20));","completion":"SELECT mission_area, COUNT(*) FROM Organizations GROUP BY mission_area;"}
{"prompt":"What is the total prize money for esports events of the 'Simulation' genre? with given SQL schema CREATE TABLE EsportsEvents (EventID INT PRIMARY KEY, EventName VARCHAR(50), GameName VARCHAR(50), PrizeMoney DECIMAL(10,2), EventDate DATE); INSERT INTO EsportsEvents (EventID, EventName, GameName, PrizeMoney, EventDate) VALUES (1, 'EventA', 'GameA', 10000, '2018-06-01'), (2, 'EventB', 'GameB', 15000, '2019-06-15'), (4, 'EventD', 'GameC', 25000, '2020-01-01'); CREATE TABLE Games (GameID INT PRIMARY KEY, GameName VARCHAR(50), Genre VARCHAR(30), ReleaseDate DATE); INSERT INTO Games (GameID, GameName, Genre, ReleaseDate) VALUES (1, 'GameA', 'Action', '2018-01-01'), (2, 'GameB', 'Adventure', '2019-05-15'), (3, 'GameC', 'Simulation', '2020-01-01');","completion":"SELECT SUM(PrizeMoney) FROM EsportsEvents JOIN Games ON EsportsEvents.GameName = Games.GameName WHERE Games.Genre = 'Simulation';"}
{"prompt":"What is the count of farms in Nigeria that have implemented automation in the last year? with given SQL schema CREATE TABLE farm_automation (id INT, farm_id INT, automation_date DATE); INSERT INTO farm_automation (id, farm_id, automation_date) VALUES (1, 1, '2021-05-01'), (2, 2, '2021-06-15'), (3, 3, '2021-08-01'), (4, 4, '2021-10-01'), (5, 5, '2021-11-01'), (6, 6, '2021-12-15'), (7, 7, '2022-01-01'), (8, 8, '2022-02-01'), (9, 9, '2022-03-01'), (10, 10, '2022-04-15');","completion":"SELECT COUNT(*) FROM farm_automation WHERE automation_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);"}
{"prompt":"How many healthcare services are available in each region, and what is their ranking based on availability? with given SQL schema CREATE TABLE HealthcareServices (Region VARCHAR(255), Service VARCHAR(255)); INSERT INTO HealthcareServices (Region, Service) VALUES ('North', 'Hospital A'), ('South', 'Hospital B'), ('East', 'Clinic C'), ('West', 'Hospital D'), ('North', 'Clinic E'), ('South', 'Hospital F');","completion":"SELECT Region, Service, ROW_NUMBER() OVER (PARTITION BY Region ORDER BY Service) AS Rank FROM HealthcareServices;"}
{"prompt":"List the names of all parks in urban areas with given SQL schema CREATE TABLE parks (park_id INT, area_id INT, park_name TEXT);CREATE TABLE areas (area_id INT, area_type TEXT);","completion":"SELECT p.park_name FROM parks p INNER JOIN areas a ON p.area_id = a.area_id WHERE a.area_type = 'urban';"}
{"prompt":"What is the total production of Neodymium in 2020, for companies in the APAC region? with given SQL schema CREATE TABLE companies (id INT, name TEXT, region TEXT); INSERT INTO companies (id, name, region) VALUES (1, 'CompanyA', 'APAC'), (2, 'CompanyB', 'EMEA'); CREATE TABLE production (year INT, element TEXT, company_id INT, quantity INT); INSERT INTO production (year, element, company_id, quantity) VALUES (2020, 'Neodymium', 1, 500), (2020, 'Neodymium', 2, 300);","completion":"SELECT SUM(quantity) FROM production JOIN companies ON production.company_id = companies.id WHERE production.element = 'Neodymium' AND production.year = 2020 AND companies.region = 'APAC';"}
{"prompt":"What is the change in housing affordability in Portland from Q1 2021 to Q2 2021? with given SQL schema CREATE TABLE portland_housing (id INT, quarter INT, year INT, affordability FLOAT); INSERT INTO portland_housing (id, quarter, year, affordability) VALUES (1, 1, 2021, 80), (2, 2, 2021, 75), (3, 1, 2021, 85), (4, 2, 2021, 80);","completion":"SELECT (MAX(affordability) FILTER (WHERE year = 2021 AND quarter = 2) - MAX(affordability) FILTER (WHERE year = 2021 AND quarter = 1)) FROM portland_housing;"}
{"prompt":"What is the total revenue and food safety risk score for each menu item in 'Fine Dining' restaurants? with given SQL schema CREATE TABLE restaurants (id INT, name VARCHAR(50), category VARCHAR(50)); CREATE TABLE menu_items (id INT, name VARCHAR(50), category VARCHAR(50), last_inspection_date DATE, risk_score INT, revenue INT);","completion":"SELECT r.name AS restaurant, mi.name AS menu_item, mi.risk_score, SUM(mi.revenue) AS total_revenue FROM restaurants r JOIN menu_items mi ON r.category = mi.category WHERE r.category = 'Fine Dining' GROUP BY r.name, mi.name, mi.risk_score;"}
{"prompt":"What is the difference in the total quantity of products sold in the 'apparel' category between this year and last year? with given SQL schema CREATE TABLE sales(sale_id INT, product_category TEXT, year INT, quantity INT); INSERT INTO sales(sale_id, product_category, year, quantity) VALUES (1, 'Apparel', 2021, 200), (2, 'Apparel', 2021, 300), (3, 'Apparel', 2022, 400), (4, 'Apparel', 2022, 500), (5, 'Electronics', 2021, 100), (6, 'Electronics', 2022, 120);","completion":"SELECT product_category, (SUM(CASE WHEN year = 2022 THEN quantity ELSE 0 END) - SUM(CASE WHEN year = 2021 THEN quantity ELSE 0 END)) as quantity_diff FROM sales WHERE product_category = 'Apparel' GROUP BY product_category;"}
{"prompt":"What are the maximum and minimum sizes of space debris for each source type? with given SQL schema CREATE TABLE space_debris (id INT, name VARCHAR(255), source_type VARCHAR(255), location VARCHAR(255), size FLOAT); INSERT INTO space_debris (id, name, source_type, location, size) VALUES (1, 'Defunct Satellite', 'Spacecraft', 'LEO', 5.0);","completion":"SELECT source_type, MAX(size) as max_size, MIN(size) as min_size FROM space_debris GROUP BY source_type;"}
{"prompt":"Show me the cybersecurity policies that were altered in the last week. with given SQL schema CREATE TABLE cybersecurity_policies (id INT, name VARCHAR(50), description TEXT, date DATE); INSERT INTO cybersecurity_policies (id, name, description, date) VALUES (1, 'Incident response policy', 'Outlines the process for responding to security incidents', '2022-05-05');","completion":"SELECT * FROM cybersecurity_policies WHERE date >= DATEADD(week, -1, GETDATE());"}
{"prompt":"Which countries are part of the EU and have had security incidents? with given SQL schema CREATE TABLE security_incidents (id INT, country VARCHAR(50), date DATE);INSERT INTO security_incidents (id, country, date) VALUES (1, 'France', '2022-01-01');INSERT INTO security_incidents (id, country, date) VALUES (2, 'Germany', '2022-01-15');INSERT INTO security_incidents (id, country, date) VALUES (3, 'Canada', '2022-04-01');INSERT INTO security_incidents (id, country, date) VALUES (4, 'United Kingdom', '2022-04-05');","completion":"SELECT DISTINCT country FROM security_incidents WHERE country IN ('France', 'Germany', 'United Kingdom');"}
{"prompt":"What is the total number of multimodal trips taken in Toronto, Canada using public transportation? with given SQL schema CREATE TABLE multimodal_trips_canada (trip_id INT, trip_duration INT, start_time TIMESTAMP, end_time TIMESTAMP, start_station TEXT, end_station TEXT, city TEXT, mode TEXT);","completion":"SELECT COUNT(*) FROM multimodal_trips_canada WHERE city = 'Toronto' AND mode LIKE '%public%';"}
{"prompt":"Find the union names that have no reported workplace injuries. with given SQL schema CREATE TABLE injuries (id INT PRIMARY KEY, union_id INT); CREATE TABLE unions (id INT PRIMARY KEY, name VARCHAR(255)); INSERT INTO injuries (id, union_id) VALUES (1, 1), (2, 2), (3, 3), (4, 1); INSERT INTO unions (id, name) VALUES (1, 'Union A'), (2, 'Union B'), (3, 'Union C'), (4, 'Union D');","completion":"SELECT name FROM unions WHERE id NOT IN (SELECT union_id FROM injuries);"}
{"prompt":"How many unions have more than 5000 members in the 'Education' sector? with given SQL schema CREATE TABLE Unions (id INT, Sector TEXT, Membership INT);","completion":"SELECT COUNT(*) FROM Unions WHERE Sector = 'Education' GROUP BY Sector HAVING COUNT(*) > 5000;"}
{"prompt":"What is the maximum weekly wage for workers in the 'retail' industry in unions? with given SQL schema CREATE TABLE unions (id INT, name TEXT); CREATE TABLE workers (id INT, union_id INT, industry TEXT, wage FLOAT); INSERT INTO unions (id, name) VALUES (1, 'Union Z'), (2, 'Union AA'), (3, 'Union AB'); INSERT INTO workers (id, union_id, industry, wage) VALUES (1, 1, 'retail', 500), (2, 1, 'retail', 550), (3, 2, 'retail', 600), (4, 2, 'retail', 650), (5, 3, 'retail', 700), (6, 3, 'retail', 750);","completion":"SELECT MAX(wage) FROM workers JOIN unions ON workers.union_id = unions.id WHERE industry = 'retail';"}
{"prompt":"Find the average travel time (in days) for vessels traveling between the Port of Valparaiso and the Port of Singapore in the first half of 2021, ranked by the average travel time in ascending order. with given SQL schema CREATE TABLE Routes (route_id INT, departure_port VARCHAR(20), arrival_port VARCHAR(20)); CREATE TABLE VesselTravel (vessel_id INT, route INT, departure_date DATE, travel_time INT); INSERT INTO Routes (route_id, departure_port, arrival_port) VALUES (1, 'Los Angeles', 'Tokyo'), (2, 'Rotterdam', 'New York'), (3, 'Santos', 'Hong Kong'), (4, 'Mumbai', 'Shanghai'), (5, 'Buenos Aires', 'Jakarta'), (6, 'Dakar', 'Lagos'), (7, 'Valparaiso', 'Singapore'); INSERT INTO VesselTravel (vessel_id, route, departure_date, travel_time) VALUES (1, 7, '2021-01-01', 45), (2, 7, '2021-02-01', 46), (3, 7, '2021-03-01', 47), (4, 7, '2021-04-01', 44), (5, 7, '2021-05-01', 45), (6, 7, '2021-06-01', 46);","completion":"SELECT route, AVG(travel_time) as avg_travel_time FROM VesselTravel WHERE route = 7 AND departure_date >= '2021-01-01' AND departure_date < '2021-07-01' GROUP BY route ORDER BY avg_travel_time ASC;"}
{"prompt":"What is the count of vessels that have visited a specific port in a given month? with given SQL schema CREATE TABLE Vessels (id INT, name VARCHAR(50), type VARCHAR(50)); CREATE TABLE PortCalls (id INT, vessel_id INT, port VARCHAR(50), call_date DATE); INSERT INTO Vessels (id, name, type) VALUES (1, 'Vessel1', 'OilTanker'), (2, 'Vessel2', 'BulkCarrier'), (3, 'Vessel3', 'BulkCarrier'); INSERT INTO PortCalls (id, vessel_id, port, call_date) VALUES (1, 1, 'PortA', '2021-01-01'), (2, 1, 'PortB', '2021-02-01'), (3, 2, 'PortA', '2021-03-01'), (4, 3, 'PortA', '2021-03-15'), (5, 1, 'PortA', '2021-04-01');","completion":"SELECT COUNT(PortCalls.id) FROM PortCalls WHERE PortCalls.port = 'PortA' AND PortCalls.call_date >= '2021-03-01' AND PortCalls.call_date <= '2021-03-31';"}
{"prompt":"What is the average landfill tipping fee for each region? with given SQL schema CREATE TABLE Landfill_All (region VARCHAR(20), tipping_fee DECIMAL(5,2)); INSERT INTO Landfill_All (region, tipping_fee) VALUES ('North', 50.00), ('South', 55.00), ('East', 45.00), ('West', 60.00), ('Central', 40.00); CREATE TABLE Waste_Generation_All (industry VARCHAR(20), region VARCHAR(20), waste_quantity INT); INSERT INTO Waste_Generation_All (industry, region, waste_quantity) VALUES ('Manufacturing', 'North', 1000), ('Manufacturing', 'South', 1500), ('Retail', 'North', 500), ('Retail', 'East', 700), ('Agriculture', 'West', 2000), ('Manufacturing', 'West', 2500), ('Retail', 'West', 800);","completion":"SELECT region, AVG(tipping_fee) FROM Landfill_All GROUP BY region;"}
{"prompt":"Update the capacity of a wastewater plant in the wastewater_plants table with given SQL schema CREATE TABLE wastewater_plants (id INT, name VARCHAR(50), location VARCHAR(50), capacity INT);","completion":"UPDATE wastewater_plants SET capacity = 600000 WHERE id = 1;"}
{"prompt":"List algorithmic fairness scores for creative AI applications in Europe, ordered by score in descending order. with given SQL schema CREATE TABLE CreativeAI (application_name TEXT, fairness_score FLOAT, region TEXT); INSERT INTO CreativeAI (application_name, fairness_score, region) VALUES ('AppA', 0.88, 'Europe'), ('AppB', 0.76, 'Europe'), ('AppC', 0.91, 'Europe');","completion":"SELECT * FROM CreativeAI WHERE region = 'Europe' ORDER BY fairness_score DESC;"}
{"prompt":"Show algorithmic fairness scores for creative AI applications in Oceania, grouped by score in ascending order. with given SQL schema CREATE TABLE CreativeAI (application_name TEXT, fairness_score FLOAT, region TEXT); INSERT INTO CreativeAI (application_name, fairness_score, region) VALUES ('AppA', 0.88, 'Oceania'), ('AppB', 0.76, 'Oceania'), ('AppC', 0.91, 'Oceania');","completion":"SELECT * FROM CreativeAI WHERE region = 'Oceania' ORDER BY fairness_score ASC;"}
{"prompt":"What is the average safety score for creative AI applications in Europe? with given SQL schema CREATE TABLE creative_ai (id INT, app_name VARCHAR(50), country VARCHAR(50), safety_score FLOAT); INSERT INTO creative_ai VALUES (1, 'Dreamscope', 'France', 8.5), (2, 'DeepArt', 'Germany', 9.2), (3, 'Artbreeder', 'Spain', 7.9);","completion":"SELECT AVG(safety_score) FROM creative_ai WHERE country IN ('France', 'Germany', 'Spain');"}
{"prompt":"What is the difference between the average satisfaction score of models trained on dataset D and dataset C, for each continent? with given SQL schema CREATE TABLE models (id INT, dataset VARCHAR(20), satisfaction FLOAT, continent VARCHAR(20)); INSERT INTO models VALUES (1, 'datasetD', 4.3, 'Asia'), (2, 'datasetD', 4.5, 'Africa'), (3, 'datasetC', 3.9, 'Antarctica'), (4, 'datasetC', 4.1, 'Antarctica'), (5, 'datasetD', 4.2, 'Europe'), (6, 'datasetC', 3.7, 'Europe');","completion":"SELECT continent, AVG(m.satisfaction) - (SELECT AVG(satisfaction) FROM models m2 WHERE m.continent = m2.continent AND m2.dataset = 'datasetC') FROM models m WHERE m.dataset = 'datasetD' GROUP BY continent;"}
{"prompt":"What is the maximum crop yield in 'South America' in 2021? with given SQL schema CREATE TABLE crop_yields (crop_id INT, crop_name TEXT, region TEXT, year INT, crop_yield INT); INSERT INTO crop_yields (crop_id, crop_name, region, year, crop_yield) VALUES (1, 'Corn', 'South America', 2021, 1200); INSERT INTO crop_yields (crop_id, crop_name, region, year, crop_yield) VALUES (2, 'Potatoes', 'Europe', 2020, 900);","completion":"SELECT MAX(crop_yield) FROM crop_yields WHERE year = 2021 AND region = 'South America';"}
{"prompt":"What are the names and launch dates of all satellites with the type 'Navigation'? with given SQL schema CREATE TABLE Satellite (id INT, name VARCHAR(50), type VARCHAR(50), manufacturer VARCHAR(50), launch_date DATE); INSERT INTO Satellite (id, name, type, manufacturer, launch_date) VALUES (1, 'Landsat 1', 'Earth Observation', 'Boeing', '1972-07-23'); INSERT INTO Satellite (id, name, type, manufacturer, launch_date) VALUES (2, 'Envisat', 'Earth Observation', 'Astrium', '2002-03-01'); INSERT INTO Satellite (id, name, type, manufacturer, launch_date) VALUES (5, 'GPS 1', 'Navigation', 'Rockwell', '1978-02-22');","completion":"SELECT s.name, s.launch_date FROM Satellite s WHERE s.type = 'Navigation';"}
{"prompt":"What is the average habitat preservation funding per square kilometer for each North American conservation area, broken down by conservation area and state? with given SQL schema CREATE TABLE north_american_conservation_areas (id INT, name VARCHAR(255), area_size FLOAT, state VARCHAR(255), funding FLOAT);","completion":"SELECT na.name, na.state, AVG(na.funding \/ na.area_size) as avg_funding_per_sq_km FROM north_american_conservation_areas na GROUP BY na.name, na.state;"}
{"prompt":"What is the ratio of successful community education programs to total programs for each country, ordered by the success rate in descending order? with given SQL schema CREATE TABLE CountryPrograms (Country VARCHAR(255), Programs INT, Success BOOLEAN); INSERT INTO CountryPrograms (Country, Programs, Success) VALUES ('India', 15, true), ('India', 1, false), ('China', 10, true), ('China', 2, false), ('Brazil', 20, true), ('Brazil', 5, false);","completion":"SELECT Country, COUNT(*) FILTER (WHERE Success) * 1.0 \/ COUNT(*) as SuccessRate FROM CountryPrograms GROUP BY Country ORDER BY SuccessRate DESC;"}
{"prompt":"What is the total nutrient value of feed in the 'feeding' table? with given SQL schema CREATE TABLE fish_stock (fish_id INT PRIMARY KEY, species VARCHAR(50), location VARCHAR(50), biomass FLOAT); CREATE TABLE feeding (feed_id INT PRIMARY KEY, feed_type VARCHAR(50), nutrients FLOAT); INSERT INTO feeding (feed_id, feed_type, nutrients) VALUES (1, 'pellets', 350), (2, 'flakes', 280), (3, 'mash', 420);","completion":"SELECT SUM(nutrients) FROM feeding;"}
{"prompt":"How many repeat attendees have visited 'MuseumY' in the past year, and what is the average number of visits per attendee? with given SQL schema CREATE TABLE MuseumY (attendee_id INT, visit_date DATE); CREATE TABLE Attendees (attendee_id INT, first_name VARCHAR(50), last_name VARCHAR(50));","completion":"SELECT AVG(visits) FROM (SELECT a.attendee_id, COUNT(*) AS visits FROM MuseumY m JOIN Attendees a ON m.attendee_id = a.attendee_id WHERE m.visit_date >= DATEADD(year, -1, GETDATE()) GROUP BY a.attendee_id) AS repeat_attendees;"}
{"prompt":"Which songs have the highest and lowest streams within their genre? with given SQL schema CREATE TABLE Music (SongId INT, SongName VARCHAR(50), Artist VARCHAR(50), Genre VARCHAR(50), Streams INT); INSERT INTO Music (SongId, SongName, Artist, Genre, Streams) VALUES (1, 'SongA', 'ArtistX', 'Pop', 1000000), (2, 'SongB', 'ArtistY', 'Rock', 800000), (3, 'SongC', 'ArtistZ', 'Pop', 1200000);","completion":"SELECT SongName, Genre, Streams, RANK() OVER(PARTITION BY Genre ORDER BY Streams DESC) AS Rank FROM Music;"}
{"prompt":"What is the total construction labor cost for plumbers in Georgia? with given SQL schema CREATE TABLE construction_labor (state VARCHAR(20), job VARCHAR(50), cost FLOAT); INSERT INTO construction_labor VALUES ('Georgia', 'Plumber', 58.0), ('Georgia', 'Plumber', 59.0), ('Georgia', 'Carpenter', 52.0);","completion":"SELECT SUM(cost) FROM construction_labor WHERE state = 'Georgia' AND job = 'Plumber';"}
{"prompt":"Find the total rainfall for each country and year, and rank them. with given SQL schema CREATE TABLE RainfallData (Country VARCHAR(50), Year INT, Rainfall DECIMAL(5,2)); INSERT INTO RainfallData (Country, Year, Rainfall) VALUES ('Canada', 2020, 53.1), ('Canada', 2019, 60.2), ('Mexico', 2020, 21.2), ('Mexico', 2019, 22.5);","completion":"SELECT Country, Year, SUM(Rainfall) as TotalRainfall, RANK() OVER (PARTITION BY Year ORDER BY SUM(Rainfall) DESC) as Rank FROM RainfallData GROUP BY Country, Year;"}
{"prompt":"What are the average climate finances spent by organizations in 'americas' and 'europe'? with given SQL schema CREATE TABLE org_climate_finance (region VARCHAR(20), amount FLOAT); INSERT INTO org_climate_finance (region, amount) VALUES ('americas', 30000), ('europe', 45000), ('africa', 35000), ('asia', 25000);","completion":"SELECT AVG(amount) FROM org_climate_finance WHERE region IN ('americas', 'europe');"}
{"prompt":"Delete records of R&D expenditures greater than $100,000 in Q1 2021 with given SQL schema CREATE TABLE rd_expenditures (expenditure_date DATE, amount DECIMAL(10, 2), quarter INT, year INT); INSERT INTO rd_expenditures VALUES ('2021-01-01', 75000, 1, 2021), ('2021-02-01', 50000, 1, 2021), ('2021-03-01', 120000, 1, 2021)","completion":"DELETE FROM rd_expenditures WHERE amount > 100000 AND quarter = 1 AND year = 2021"}
{"prompt":"Average healthcare access score in urban areas by year. with given SQL schema CREATE TABLE HealthcareAccessScore (Area VARCHAR(50), Score INT, Year INT); INSERT INTO HealthcareAccessScore (Area, Score, Year) VALUES ('Urban', 80, 2018), ('Urban', 82, 2019), ('Rural', 70, 2018);","completion":"SELECT Year, AVG(Score) FROM HealthcareAccessScore WHERE Area = 'Urban' GROUP BY Year;"}
{"prompt":"How many males in Texas have accessed healthcare services in the last month? with given SQL schema CREATE TABLE HealthcareAccess (ID INT, Gender VARCHAR(10), AccessDate DATE); INSERT INTO HealthcareAccess (ID, Gender, AccessDate) VALUES (1, 'Male', '2022-01-15');","completion":"SELECT COUNT(*) FROM HealthcareAccess WHERE Gender = 'Male' AND AccessDate >= DATEADD(MONTH, -1, GETDATE()) AND State = 'Texas';"}
{"prompt":"Show the sum of investments by year and industry with given SQL schema CREATE TABLE investments (id INT, investment_year INT, industry VARCHAR(255), investment_amount DECIMAL(10,2)); INSERT INTO investments (id, investment_year, industry, investment_amount) VALUES (1, 2020, 'Tech', 50000.00), (2, 2019, 'Biotech', 20000.00), (3, 2020, 'Tech', 75000.00);","completion":"SELECT investment_year, industry, SUM(investment_amount) as total_investments FROM investments GROUP BY investment_year, industry;"}
{"prompt":"Update the policy advocacy budget for the Native American community in California to $500,000 for the current fiscal year. with given SQL schema CREATE TABLE policy_advocacy_budget (id INT PRIMARY KEY, community VARCHAR(255), state VARCHAR(255), fiscal_year INT, budget DECIMAL(10,2));","completion":"UPDATE policy_advocacy_budget SET budget = 500000.00 WHERE community = 'Native American' AND state = 'California' AND fiscal_year = YEAR(CURDATE());"}
{"prompt":"How many whale sharks have been spotted in each location? with given SQL schema CREATE TABLE whale_sharks (id INT, name TEXT, location TEXT); INSERT INTO whale_sharks (id, name, location) VALUES (1, 'Whale Shark 1', 'Atlantic'), (2, 'Whale Shark 2', 'Pacific'), (3, 'Whale Shark 3', 'Atlantic'), (4, 'Whale Shark 4', 'Indian'), (5, 'Whale Shark 5', 'Atlantic');","completion":"SELECT location, COUNT(*) as spotted_count FROM whale_sharks GROUP BY location;"}
{"prompt":"What is the average depth of all marine protected areas, grouped by country? with given SQL schema CREATE TABLE marine_protected_areas (id INT, country VARCHAR(50), name VARCHAR(50), area_sqkm FLOAT, avg_depth FLOAT); INSERT INTO marine_protected_areas (id, country, name, area_sqkm, avg_depth) VALUES (1, 'Australia', 'Great Barrier Reef', 344400, -2000); INSERT INTO marine_protected_areas (id, country, name, area_sqkm, avg_depth) VALUES (2, 'Canada', 'Gwaii Haanas National Park', 14280, -220);","completion":"SELECT country, AVG(avg_depth) FROM marine_protected_areas GROUP BY country;"}
{"prompt":"What is the total number of transactions for the digital asset 'ETH' on a given date? with given SQL schema CREATE TABLE digital_assets (asset_name VARCHAR(10), transaction_count INT); INSERT INTO digital_assets (asset_name, transaction_count) VALUES ('BTC', 5000), ('ETH', 7000), ('LTC', 3000);","completion":"SELECT transaction_count FROM digital_assets WHERE asset_name = 'ETH';"}
{"prompt":"How many vegan makeup products were sold in India in Q1 of 2022? with given SQL schema CREATE TABLE MakeupSales (sale_id INT, product_id INT, sale_price DECIMAL(5,2), sale_date DATE, is_vegan BOOLEAN, country TEXT); INSERT INTO MakeupSales (sale_id, product_id, sale_price, sale_date, is_vegan, country) VALUES (1, 701, 14.99, '2022-01-25', true, 'India');","completion":"SELECT COUNT(*) FROM MakeupSales WHERE is_vegan = true AND country = 'India' AND sale_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"prompt":"What is the total sales revenue of non-organic skincare products in the North American market? with given SQL schema CREATE TABLE SkincareSales (productID INT, productName VARCHAR(50), region VARCHAR(50), revenue DECIMAL(10,2)); INSERT INTO SkincareSales (productID, productName, region, revenue) VALUES (1, 'Nourishing Cream', 'Europe', 5000.00), (2, 'Soothing Lotion', 'Europe', 7000.00), (3, 'Regenerating Serum', 'Europe', 8000.00), (4, 'Revitalizing Moisturizer', 'North America', 6000.00), (5, 'Purifying Cleanser', 'North America', 9000.00); CREATE TABLE ProductIngredients (productID INT, ingredient VARCHAR(50), organic BOOLEAN); INSERT INTO ProductIngredients (productID, ingredient, organic) VALUES (1, 'Aloe Vera', true), (2, 'Chamomile', true), (3, 'Retinol', false), (4, 'Hyaluronic Acid', false), (5, 'Glycerin', false);","completion":"SELECT SUM(revenue) FROM SkincareSales INNER JOIN ProductIngredients ON SkincareSales.productID = ProductIngredients.productID WHERE organic = false AND region = 'North America';"}
{"prompt":"What was the maximum ticket sales for any event in Tokyo? with given SQL schema CREATE TABLE EventData (id INT, city VARCHAR(50), ticket_sales INT); INSERT INTO EventData (id, city, ticket_sales) VALUES (1, 'Tokyo', 1200), (2, 'Tokyo', 1500), (3, 'Seoul', 1800), (4, 'Seoul', 1000), (5, 'Osaka', 1300);","completion":"SELECT MAX(ticket_sales) FROM EventData WHERE city = 'Tokyo';"}
{"prompt":"Which defense contracts have the highest total value, and what are their respective values? with given SQL schema CREATE TABLE Defense_Contracts (Contract_ID INT, Contract_Name VARCHAR(255), Agency VARCHAR(255), Value DECIMAL(18,2)); INSERT INTO Defense_Contracts (Contract_ID, Contract_Name, Agency, Value) VALUES (1, 'Contract A', 'DOD', 5000000), (2, 'Contract B', 'DOJ', 6000000), (3, 'Contract C', 'DOD', 7000000), (4, 'Contract D', 'CIA', 8000000);","completion":"SELECT Contract_Name, Value FROM (SELECT Contract_Name, Value, ROW_NUMBER() OVER (ORDER BY Value DESC) as Rank FROM Defense_Contracts) as Ranked_Contracts WHERE Rank <= 3;"}
{"prompt":"How many peacekeeping operations were conducted by each country in Q3 of 2018? with given SQL schema CREATE TABLE peacekeeping_operations (operation_id INT, country_id INT, quarter INT, year INT, FOREIGN KEY (country_id) REFERENCES country(id));","completion":"SELECT c.name, COUNT(p.operation_id) as total_operations FROM country c INNER JOIN peacekeeping_operations p ON c.id = p.country_id WHERE p.year = 2018 AND p.quarter BETWEEN 3 AND 3 GROUP BY c.name;"}
{"prompt":"List all transactions with a value greater than $10,000, along with the customer ID and the transaction date, in descending order of transaction date? with given SQL schema CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_value DECIMAL(10, 2), transaction_date DATE); INSERT INTO transactions (transaction_id, customer_id, transaction_value, transaction_date) VALUES (1, 1, 12000, '2021-07-01'), (2, 2, 35000, '2021-06-15'), (3, 1, 8000, '2021-05-05');","completion":"SELECT * FROM transactions WHERE transaction_value > 10000 ORDER BY transaction_date DESC;"}
{"prompt":"What is the average account balance for customers in each investment strategy? with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(50), age INT, region VARCHAR(20), account_balance DECIMAL(10, 2), strategy_name VARCHAR(50)); INSERT INTO customers (customer_id, name, age, region, account_balance, strategy_name) VALUES (1, 'John Doe', 35, 'Southeast', 15000.00, 'Equity'), (2, 'Jane Smith', 45, 'Northeast', 20000.00, 'Bond'), (3, 'Mike Johnson', 50, 'Southeast', 25000.00, 'Equity'), (4, 'Alice Davis', 25, 'Midwest', 10000.00, 'Bond'), (5, 'Bob Brown', 60, 'Northwest', 30000.00, 'Real Estate');","completion":"SELECT strategy_name, AVG(account_balance) FROM customers GROUP BY strategy_name;"}
{"prompt":"What is the total number of high-risk accounts in the Northwest region? with given SQL schema CREATE TABLE accounts_by_region (id INT, region VARCHAR(20), risk_level VARCHAR(10)); INSERT INTO accounts_by_region (id, region, risk_level) VALUES (1, 'Northwest', 'high'), (2, 'Southwest', 'medium'), (3, 'Northwest', 'high');","completion":"SELECT COUNT(*) FROM accounts_by_region WHERE region = 'Northwest' AND risk_level = 'high';"}
{"prompt":"What is the average weight of cargo handled by vessels in the 'Bulk Carrier' type at each port? with given SQL schema CREATE TABLE ports (id INT, name VARCHAR(50), location VARCHAR(50), un_code VARCHAR(10)); CREATE TABLE vessels (id INT, name VARCHAR(50), type VARCHAR(50), year_built INT, port_id INT); CREATE TABLE cargo (id INT, description VARCHAR(50), weight FLOAT, port_id INT, vessel_id INT); CREATE VIEW vessel_cargo AS SELECT v.name AS vessel_name, c.description AS cargo_description, c.weight FROM vessels v JOIN cargo c ON v.id = c.vessel_id;","completion":"SELECT p.name AS port_name, AVG(vc.weight) AS avg_weight FROM ports p JOIN vessels v ON p.id = v.port_id JOIN vessel_cargo vc ON v.name = vc.vessel_name WHERE v.type = 'Bulk Carrier' GROUP BY p.name;"}
{"prompt":"What is the total weight of cargo handled by each port in february_2022 from the cargo_handling table? with given SQL schema CREATE TABLE cargo_handling (transaction_id INT, port VARCHAR(255), date DATE, weight INT); INSERT INTO cargo_handling (transaction_id, port, date, weight) VALUES (1, 'PortA', '2022-02-01', 500), (2, 'PortB', '2022-02-05', 700), (3, 'PortA', '2022-02-10', 400);","completion":"SELECT port, SUM(weight) as february_total_weight FROM cargo_handling WHERE date BETWEEN '2022-02-01' AND '2022-02-28' GROUP BY port;"}
{"prompt":"What is the average salary of employees in factories with a certain certification? with given SQL schema CREATE TABLE factories (factory_id INT, name VARCHAR(100), location VARCHAR(100), certified BOOLEAN); CREATE TABLE employees (employee_id INT, factory_id INT, name VARCHAR(100), position VARCHAR(100), salary INT); INSERT INTO factories (factory_id, name, location, certified) VALUES (1, 'ABC Factory', 'New York', TRUE), (2, 'XYZ Factory', 'California', FALSE), (3, 'LMN Factory', 'Texas', TRUE), (4, 'PQR Factory', 'Canada', FALSE); INSERT INTO employees (employee_id, factory_id, name, position, salary) VALUES (1, 1, 'John Doe', 'Engineer', 70000), (2, 1, 'Jane Smith', 'Manager', 80000), (3, 2, 'Mike Johnson', 'Operator', 60000), (4, 3, 'Sara Brown', 'Engineer', 75000), (5, 3, 'David Williams', 'Manager', 85000), (6, 4, 'Emily Davis', 'Engineer', 90000);","completion":"SELECT AVG(employees.salary) FROM factories INNER JOIN employees ON factories.factory_id = employees.factory_id WHERE factories.certified = TRUE;"}
{"prompt":"What is the minimum and maximum average age of healthcare workers in 'rural_hospitals' table? with given SQL schema CREATE TABLE rural_hospitals (id INT, name TEXT, location TEXT, num_workers INT, avg_age FLOAT); INSERT INTO rural_hospitals (id, name, location, num_workers, avg_age) VALUES (1, 'Rural Hospital A', 'Rural Area 1', 50, 50.1), (2, 'Rural Hospital B', 'Rural Area 2', 75, 48.5);","completion":"SELECT MIN(avg_age), MAX(avg_age) FROM rural_hospitals;"}
{"prompt":"Display the number of unique users who have streamed or downloaded music on each platform in Africa. with given SQL schema CREATE TABLE users (id INT, name TEXT, country TEXT); CREATE TABLE user_actions (id INT, user_id INT, action TEXT, album_id INT, platform TEXT); CREATE VIEW platform_users_africa AS SELECT platform, COUNT(DISTINCT user_id) as user_count FROM user_actions JOIN users u ON user_actions.user_id = u.id WHERE u.country IN ('Nigeria', 'South Africa', 'Egypt', 'Algeria', 'Morocco');","completion":"SELECT platform, user_count FROM platform_users_africa;"}
{"prompt":"What is the average mental health score of students for each grade level, ordered by the average score? with given SQL schema CREATE TABLE grades (grade_id INT, grade_name VARCHAR(50)); INSERT INTO grades VALUES (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'); CREATE TABLE student_mental_health (student_id INT, grade_id INT, mental_health_score INT); INSERT INTO student_mental_health VALUES (1, 1, 85), (2, 1, 80), (3, 2, 90), (4, 2, 80), (5, 3, 75), (6, 3, 70);","completion":"SELECT grade_id, AVG(mental_health_score) as avg_score FROM student_mental_health GROUP BY grade_id ORDER BY avg_score DESC;"}
{"prompt":"How many renewable energy power plants are there in Texas? with given SQL schema CREATE TABLE power_plants (state VARCHAR(255), source_type VARCHAR(255), count INT); INSERT INTO power_plants (state, source_type, count) VALUES ('Texas', 'Wind', 45), ('Texas', 'Solar', 25), ('Texas', 'Hydro', 10);","completion":"SELECT SUM(count) FROM power_plants WHERE state = 'Texas';"}
{"prompt":"What is the maximum solar capacity in Mexico? with given SQL schema CREATE TABLE solar_capacity (id INT, name TEXT, country TEXT, capacity FLOAT);","completion":"SELECT MAX(capacity) FROM solar_capacity WHERE country = 'Mexico';"}
{"prompt":"Count the number of wells drilled by CompanyA with given SQL schema CREATE TABLE wells (id INT, well_name VARCHAR(255), location VARCHAR(255), drill_year INT, company VARCHAR(255)); INSERT INTO wells (id, well_name, location, drill_year, company) VALUES (1, 'Well001', 'Texas', 2020, 'CompanyA'); INSERT INTO wells (id, well_name, location, drill_year, company) VALUES (2, 'Well002', 'Colorado', 2019, 'CompanyB'); INSERT INTO wells (id, well_name, location, drill_year, company) VALUES (3, 'Well003', 'California', 2019, 'CompanyC'); INSERT INTO wells (id, well_name, location, drill_year, company) VALUES (4, 'Well004', 'Texas', 2018, 'CompanyA');","completion":"SELECT COUNT(*) FROM wells WHERE company = 'CompanyA';"}
{"prompt":"What is the average number of points scored by each hockey player in the NHL? with given SQL schema CREATE TABLE hockey_players (id INT, name VARCHAR(50), position VARCHAR(20), points INT); INSERT INTO hockey_players (id, name, position, points) VALUES (1, 'Sidney Crosby', 'Center', 100), (2, 'Alex Ovechkin', 'Left Wing', 110), (3, 'Connor McDavid', 'Center', 120); CREATE TABLE nhl_teams (id INT, team_name VARCHAR(50), players_id INT); INSERT INTO nhl_teams (id, team_name, players_id) VALUES (1, 'Penguins', 1), (2, 'Capitals', 2), (3, 'Oilers', 3);","completion":"SELECT position, AVG(points) FROM hockey_players JOIN nhl_teams ON hockey_players.id = nhl_teams.players_id GROUP BY position;"}
{"prompt":"Find the intersection of AI and accessibility research projects in the EU and those in Africa. with given SQL schema CREATE SCHEMA if not exists accessibility; CREATE TABLE if not exists accessibility.research (id INT PRIMARY KEY, project_name VARCHAR(255), region VARCHAR(255)); INSERT INTO accessibility.research (id, project_name, region) VALUES (1, 'AI for Accessibility EU', 'EU'), (2, 'Accessibility Africa', 'Africa'), (3, 'AI for Accessibility Africa', 'Africa'), (4, 'Accessibility EU', 'EU');","completion":"SELECT project_name FROM accessibility.research WHERE region = 'EU' INTERSECT SELECT project_name FROM accessibility.research WHERE region = 'Africa';"}
{"prompt":"Update the \"registration_date\" of the student \"Sofia Garcia\" in the \"students\" table to \"2021-10-01\" with given SQL schema CREATE TABLE students (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), registration_date DATE);","completion":"UPDATE students SET registration_date = '2021-10-01' WHERE name = 'Sofia Garcia';"}
{"prompt":"What is the average price of eco-friendly materials used in garment production across different countries? with given SQL schema CREATE TABLE eco_materials (id INT, country VARCHAR(50), material VARCHAR(50), price DECIMAL(5,2)); INSERT INTO eco_materials (id, country, material, price) VALUES (1, 'Nepal', 'Organic Cotton', 2.50), (2, 'Bangladesh', 'Hemp', 3.20), (3, 'India', 'Tencel', 2.80);","completion":"SELECT AVG(price) as avg_price, country FROM eco_materials GROUP BY country;"}
{"prompt":"Which sustainable materials are used by companies in the 'Asia-Pacific' region? with given SQL schema CREATE TABLE Companies (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO Companies (id, name, region) VALUES (1, 'CompanyA', 'Asia-Pacific'), (2, 'CompanyB', 'Europe'), (3, 'CompanyC', 'Asia-Pacific'); CREATE TABLE Materials (id INT, company_id INT, material VARCHAR(255), quantity INT); INSERT INTO Materials (id, company_id, material, quantity) VALUES (1, 1, 'Organic cotton', 500), (2, 1, 'Recycled polyester', 300), (3, 2, 'Organic linen', 400), (4, 3, 'Organic cotton', 600), (5, 3, 'Tencel', 700);","completion":"SELECT DISTINCT Materials.material FROM Companies JOIN Materials ON Companies.id = Materials.company_id WHERE Companies.region = 'Asia-Pacific';"}
{"prompt":"List all Shariah-compliant financial products offered in the Southeast Asian region with given SQL schema CREATE TABLE shariah_compliant_products (id INT PRIMARY KEY, product_name VARCHAR(100), region VARCHAR(50)); INSERT INTO shariah_compliant_products (id, product_name, region) VALUES (1, 'Product A', 'Southeast Asia'), (2, 'Product B', 'Middle East'), (3, 'Product C', 'Southeast Asia');","completion":"SELECT product_name FROM shariah_compliant_products WHERE region = 'Southeast Asia';"}
{"prompt":"List the names and account balances for customers who have both a Shariah-compliant mortgage and a socially responsible loan? with given SQL schema CREATE TABLE shariah_mortgages (mortgage_id INT, customer_id INT, customer_name TEXT, account_balance DECIMAL); CREATE TABLE socially_responsible_loans (loan_id INT, customer_id INT, customer_name TEXT, account_balance DECIMAL); CREATE TABLE shariah_loans (loan_id INT, mortgage_id INT);","completion":"SELECT sm.customer_name, sm.account_balance FROM shariah_mortgages sm JOIN shariah_loans sl ON sm.mortgage_id = sl.mortgage_id JOIN socially_responsible_loans srl ON sm.customer_id = srl.customer_id;"}
{"prompt":"How many volunteers are there in total, and how many of them are from Africa? with given SQL schema CREATE TABLE volunteers (id INT, name TEXT, region TEXT); INSERT INTO volunteers (id, name, region) VALUES (1, 'Alice', 'North America'), (2, 'Bob', 'Europe'), (3, 'Charlie', 'Africa');","completion":"SELECT COUNT(*), SUM(region = 'Africa') FROM volunteers;"}
{"prompt":"List all suppliers from India with more than 3 delivery incidents in the last 6 months. with given SQL schema CREATE TABLE FoodSuppliers (supplier_id INTEGER, supplier_name TEXT, country TEXT, delivery_incidents INTEGER, last_delivery_date DATETIME); INSERT INTO FoodSuppliers (supplier_id, supplier_name, country, delivery_incidents, last_delivery_date) VALUES (1, 'Supplier A', 'India', 4, '2022-01-15 12:00:00');","completion":"SELECT supplier_name, country FROM FoodSuppliers WHERE country = 'India' AND delivery_incidents > 3 AND last_delivery_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What was the total number of open data initiatives in Africa in 2018? with given SQL schema CREATE TABLE africa_countries (id INT PRIMARY KEY, country VARCHAR(20)); INSERT INTO africa_countries (id, country) VALUES (1, 'Nigeria'); INSERT INTO africa_countries (id, country) VALUES (2, 'South Africa'); INSERT INTO open_data (id, country, year, num_initiatives) VALUES (1, 'Nigeria', 2018, 20); INSERT INTO open_data (id, country, year, num_initiatives) VALUES (2, 'South Africa', 2018, 30);","completion":"SELECT SUM(num_initiatives) FROM open_data INNER JOIN africa_countries ON open_data.country = africa_countries.country WHERE open_data.year = 2018;"}
{"prompt":"Who are the top 3 donors for open data initiatives in the city of Chicago? with given SQL schema CREATE TABLE donors (id INT, name VARCHAR(100), city VARCHAR(50), amount DECIMAL(10,2)); INSERT INTO donors VALUES (1, 'Donor A', 'Chicago', 5000.00); INSERT INTO donors VALUES (2, 'Donor B', 'Chicago', 10000.00); INSERT INTO donors VALUES (3, 'Donor C', 'Chicago', 7500.00);","completion":"SELECT d.name, d.amount FROM donors d WHERE d.city = 'Chicago' ORDER BY d.amount DESC LIMIT 3;"}
{"prompt":"Who are the top 3 authors with the most citations in the Mathematics department in the past 5 years? with given SQL schema CREATE TABLE authors (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO authors (id, name, department) VALUES (1, 'Author Name', 'Mathematics'); CREATE TABLE publications (id INT, title VARCHAR(100), author VARCHAR(50), journal VARCHAR(50), year INT, cites INT); INSERT INTO publications (id, title, author, journal, year, cites) VALUES (1, 'Publication Title', 'Author Name', 'Journal Name', 2021, 10);","completion":"SELECT author, SUM(cites) as total_cites FROM publications WHERE author IN (SELECT name FROM authors WHERE department = 'Mathematics') AND year BETWEEN YEAR(CURRENT_DATE) - 5 AND YEAR(CURRENT_DATE) GROUP BY author ORDER BY total_cites DESC LIMIT 3;"}
{"prompt":"What is the average renewable energy capacity per project in each country? with given SQL schema CREATE TABLE renewable_energy_projects (project_name TEXT, country TEXT, capacity FLOAT); INSERT INTO renewable_energy_projects VALUES ('ProjectX', 'Country1', 1000.0), ('ProjectY', 'Country1', 1200.0), ('ProjectZ', 'Country2', 800.0), ('ProjectW', 'Country2', 1500.0);","completion":"SELECT project_name, country, capacity, AVG(capacity) OVER (PARTITION BY country) AS avg_capacity FROM renewable_energy_projects;"}
{"prompt":"Which cultural heritage sites in Japan have the highest visitor count? with given SQL schema CREATE TABLE cultural_heritage_sites(site_id INT, site_name VARCHAR(50), country VARCHAR(50), visitor_count INT);","completion":"SELECT site_name, visitor_count FROM cultural_heritage_sites WHERE country = 'Japan' ORDER BY visitor_count DESC LIMIT 5;"}
{"prompt":"How many tunnels in Washington state were constructed after 2010? with given SQL schema CREATE TABLE tunnels (id INT, name TEXT, state TEXT, build_year INT); INSERT INTO tunnels (id, name, state, build_year) VALUES (1, 'WA-1 Underpass', 'WA', 2012);","completion":"SELECT COUNT(*) FROM tunnels WHERE state = 'WA' AND build_year > 2010;"}
{"prompt":"What is the average resilience score for each type of infrastructure project in Texas in 2021? with given SQL schema CREATE TABLE Infrastructure_Projects (Project_ID INT, Project_Name VARCHAR(255), Project_Type VARCHAR(255), Resilience_Score FLOAT, Year INT, State VARCHAR(255));","completion":"SELECT Project_Type, AVG(Resilience_Score) FROM Infrastructure_Projects WHERE Year = 2021 AND State = 'Texas' GROUP BY Project_Type;"}
{"prompt":"What is the total cost of all resilience projects in the state of 'California'? with given SQL schema CREATE TABLE Infrastructure_Projects (id INT, name VARCHAR(100), state VARCHAR(50), cost FLOAT); INSERT INTO Infrastructure_Projects (id, name, state, cost) VALUES (1, 'Seawall Upgrade', 'California', 5000000);","completion":"SELECT SUM(cost) FROM Infrastructure_Projects WHERE state = 'California';"}
{"prompt":"List all active legal technology providers in the justice_schemas.legal_tech_providers table, along with the number of tools they offer. with given SQL schema CREATE TABLE justice_schemas.legal_tech_providers (id INT PRIMARY KEY, name TEXT, is_active BOOLEAN, num_tools INT);","completion":"SELECT name, num_tools FROM justice_schemas.legal_tech_providers WHERE is_active = TRUE;"}
{"prompt":"Delete pollution records from the ocean_pollution table that are older than 10 years. with given SQL schema CREATE TABLE ocean_pollution (id INT, pollution_type VARCHAR(255), pollution_date DATE); INSERT INTO ocean_pollution (id, pollution_type, pollution_date) VALUES (1, 'Oil Spill', '2010-01-01'), (2, 'Plastic Waste', '2021-01-01');","completion":"DELETE FROM ocean_pollution WHERE pollution_date < (CURRENT_DATE - INTERVAL '10 years');"}
{"prompt":"Find marine pollution control projects that started after 2015, ordered by budget with given SQL schema CREATE TABLE pollution_control_projects (id INT PRIMARY KEY, project_name VARCHAR(255), start_date DATE, end_date DATE, budget FLOAT);","completion":"SELECT * FROM pollution_control_projects WHERE start_date > '2015-01-01' ORDER BY budget;"}
{"prompt":"List all whale shark sightings in the Pacific Ocean. with given SQL schema CREATE TABLE marine_sightings (id INT, species TEXT, location TEXT, date DATE); INSERT INTO marine_sightings (id, species, location, date) VALUES (1, 'Whale Shark', 'Monterey Bay', '2022-08-01'), (2, 'Whale Shark', 'Hawaii', '2022-07-15');","completion":"SELECT species, location, date FROM marine_sightings WHERE species = 'Whale Shark' AND location LIKE '%Pacific%';"}
{"prompt":"What are the maximum and minimum depths of the Arctic Ocean? with given SQL schema CREATE TABLE ocean_depths (ocean TEXT, max_depth FLOAT, min_depth FLOAT); INSERT INTO ocean_depths (ocean, max_depth, min_depth) VALUES ('Atlantic Ocean', 9218.0, 200.0); INSERT INTO ocean_depths (ocean, max_depth, min_depth) VALUES ('Arctic Ocean', 5600.0, 4000.0);","completion":"SELECT ocean, max_depth, min_depth FROM ocean_depths WHERE ocean = 'Arctic Ocean';"}
{"prompt":"How many movies were released each year? with given SQL schema CREATE TABLE movies (id INT, title TEXT, release_year INT); INSERT INTO movies (id, title, release_year) VALUES (1, 'Movie1', 2005), (2, 'Movie2', 2007), (3, 'Movie3', 2010), (4, 'Movie4', 2015), (5, 'Movie5', 2018);","completion":"SELECT release_year, COUNT(*) FROM movies GROUP BY release_year;"}
{"prompt":"What are the menu items with a sustainability score above 90 and their corresponding categories? with given SQL schema CREATE TABLE Menu (menu_id INT, item_name VARCHAR(50), category VARCHAR(50), sustainability_score INT); INSERT INTO Menu (menu_id, item_name, category, sustainability_score) VALUES (1, 'Quinoa Salad', 'Entree', 92), (2, 'Carrot Cake', 'Dessert', 88);","completion":"SELECT category, item_name FROM Menu WHERE sustainability_score > 90;"}
{"prompt":"What is the total cost of ingredients for gluten-free dishes in the healthy menu? with given SQL schema CREATE TABLE ingredients (id INT, dish_id INT, name TEXT, cost FLOAT, is_gluten_free BOOLEAN); INSERT INTO ingredients (id, dish_id, name, cost, is_gluten_free) VALUES (1, 1, 'Quinoa', 2.00, true), (2, 1, 'Olive Oil', 1.50, true), (3, 2, 'Chickpeas', 2.75, false), (4, 2, 'Coconut Milk', 3.00, true), (5, 3, 'Beef', 8.00, false);","completion":"SELECT SUM(cost) FROM ingredients WHERE is_gluten_free = true;"}
{"prompt":"Insert a new mining operation 'Operation E' in Australia with water consumption of 500 cubic meters with given SQL schema CREATE TABLE mining_operations (operation_id INT, operation_name VARCHAR(50), location VARCHAR(50)); CREATE TABLE water_consumption (operation_id INT, water_consumption_cubic_meters INT); INSERT INTO mining_operations (operation_id, operation_name, location) VALUES (1, 'Operation A', 'USA'), (2, 'Operation B', 'Canada'), (3, 'Operation C', 'Mexico'); INSERT INTO water_consumption (operation_id, water_consumption_cubic_meters) VALUES (1, 1000), (2, 1500), (3, 500);","completion":"INSERT INTO mining_operations (operation_id, operation_name, location) VALUES (4, 'Operation E', 'Australia'); INSERT INTO water_consumption (operation_id, water_consumption_cubic_meters) VALUES (4, 500);"}
{"prompt":"What is the total number of employees by role at each mining site in the Western US? with given SQL schema CREATE TABLE mining_sites(id INT, name VARCHAR, location VARCHAR); CREATE TABLE employees(id INT, site_id INT, gender VARCHAR, role VARCHAR); INSERT INTO mining_sites(id, name, location) VALUES (1, 'Delta Mining', 'Western US'), (2, 'Echo Mining', 'Eastern US'), (3, 'Charlie Mining', 'Western US'); INSERT INTO employees(id, site_id, gender, role) VALUES (1, 1, 'Male', 'Engineer'), (2, 1, 'Female', 'Operator'), (3, 2, 'Male', 'Manager'), (4, 2, 'Female', 'Engineer'), (5, 3, 'Male', 'Operator'), (6, 3, 'Female', 'Manager');","completion":"SELECT mining_sites.name, role, COUNT(*) FROM mining_sites INNER JOIN employees ON mining_sites.id = employees.site_id GROUP BY mining_sites.name, role, location;"}
{"prompt":"Delete any customer records with data usage below 5 GB. with given SQL schema CREATE TABLE customers (id INT, name TEXT, data_usage FLOAT); INSERT INTO customers (id, name, data_usage) VALUES (1, 'John Doe', 12.5), (2, 'Jane Smith', 4.0), (3, 'Mike Johnson', 7.5);","completion":"DELETE FROM customers WHERE data_usage < 5.0;"}
{"prompt":"What is the total number of customer complaints regarding mobile and broadband services by region? with given SQL schema CREATE TABLE complaints (complaint_id INT, complaint_type VARCHAR(255), region VARCHAR(255)); INSERT INTO complaints (complaint_id, complaint_type, region) VALUES (1, 'Mobile', 'North'), (2, 'Broadband', 'South'), (3, 'Mobile', 'East'), (4, 'Broadband', 'West'), (5, 'Mobile', 'North'), (6, 'Broadband', 'South'), (7, 'Mobile', 'East'), (8, 'Broadband', 'West');","completion":"SELECT region, COUNT(*) AS total_complaints FROM complaints WHERE complaint_type IN ('Mobile', 'Broadband') GROUP BY region;"}
{"prompt":"Delete all comments made by users under 18 years old. with given SQL schema CREATE TABLE comments (id INT, user_id INT, article_id INT, comment TEXT, created_at DATETIME); INSERT INTO comments (id, user_id, article_id, comment, created_at) VALUES (1, 123, 456, 'Great article!', '2021-12-20 15:22:00');","completion":"DELETE FROM comments WHERE DATEDIFF('day', created_at, NOW()) < 18 * 365"}
{"prompt":"What is the minimum depth at which a deep-sea expedition has been conducted in the Atlantic Ocean? with given SQL schema CREATE TABLE deep_sea_expeditions (expedition_id INT, location VARCHAR(255), depth INT);","completion":"SELECT MIN(depth) FROM deep_sea_expeditions WHERE location = 'Atlantic Ocean';"}
{"prompt":"Identify the top 2 teams with the highest number of kills in a specific game category. with given SQL schema CREATE TABLE GameStats (Team VARCHAR(50), Game VARCHAR(50), Kills INT); INSERT INTO GameStats (Team, Game, Kills) VALUES ('Team A', 'FPS Game', 500); INSERT INTO GameStats (Team, Game, Kills) VALUES ('Team B', 'FPS Game', 450); INSERT INTO GameStats (Team, Game, Kills) VALUES ('Team C', 'FPS Game', 600); INSERT INTO GameStats (Team, Game, Kills) VALUES ('Team A', 'RPG Game', 300); INSERT INTO GameStats (Team, Game, Kills) VALUES ('Team B', 'RPG Game', 400); INSERT INTO GameStats (Team, Game, Kills) VALUES ('Team C', 'RPG Game', 550);","completion":"SELECT Team, SUM(Kills) AS TotalKills FROM GameStats WHERE Game = 'FPS Game' GROUP BY Team ORDER BY TotalKills DESC FETCH FIRST 2 ROWS ONLY;"}
{"prompt":"Update the 'player_achievements' table to mark achievements as 'completed' where the achievement_difficulty is 'easy' with given SQL schema CREATE TABLE player_achievements (achievement_id INT, player_id INT, achievement_name TEXT, achievement_difficulty TEXT); INSERT INTO player_achievements (achievement_id, player_id, achievement_name, achievement_difficulty) VALUES (1, 1, 'First Blood', 'easy'), (2, 2, 'Double Kill', 'medium'), (3, 3, 'Triple Kill', 'hard');","completion":"WITH easy_achievements AS (UPDATE player_achievements SET completed = 'true' WHERE achievement_difficulty = 'easy') SELECT * FROM easy_achievements;"}
{"prompt":"Which region has the highest number of esports events? with given SQL schema CREATE TABLE Events (EventID INT, Region VARCHAR(10)); INSERT INTO Events (EventID, Region) VALUES (1, 'NA'), (2, 'EU'), (3, 'APAC');","completion":"SELECT Region, COUNT(*) as EventCount FROM Events GROUP BY Region ORDER BY EventCount DESC LIMIT 1"}
{"prompt":"Delete soil moisture data for sensor 010 before 2023-02-28 with given SQL schema CREATE TABLE SoilMoistureData (date DATE, moisture FLOAT, sensor_id INT, FOREIGN KEY (sensor_id) REFERENCES SensorData(sensor_id));","completion":"DELETE FROM SoilMoistureData   WHERE sensor_id = 10 AND date < '2023-02-28';"}
{"prompt":"What is the total budget allocated to public services in the state of New York, and what percentage of the total state budget does this represent? with given SQL schema CREATE TABLE budget_allocation (state VARCHAR(20), category VARCHAR(20), budget FLOAT); INSERT INTO budget_allocation (state, category, budget) VALUES ('New York', 'Education', 15000000), ('New York', 'Healthcare', 20000000), ('New York', 'Transportation', 10000000), ('New York', 'Infrastructure', 12000000); CREATE TABLE total_budget (state VARCHAR(20), total_budget FLOAT); INSERT INTO total_budget (state, total_budget) VALUES ('New York', 200000000);","completion":"SELECT (budget \/ total_budget) * 100 as percentage FROM budget_allocation INNER JOIN total_budget ON budget_allocation.state = total_budget.state WHERE budget_allocation.state = 'New York' AND budget_allocation.category = 'Public services';"}
{"prompt":"What are the top 3 countries with the most rare earth element production? with given SQL schema CREATE TABLE production (country VARCHAR(50), production INT); INSERT INTO production (country, production) VALUES ('China', 105000), ('USA', 38000), ('Australia', 20000), ('India', 2800), ('Brazil', 1200);","completion":"SELECT country FROM production ORDER BY production DESC LIMIT 3;"}
{"prompt":"Count the number of properties in Austin with a listing price below $400,000 and sustainable features. with given SQL schema CREATE TABLE properties (id INT, city VARCHAR(20), listing_price INT, sustainable BOOLEAN); INSERT INTO properties (id, city, listing_price, sustainable) VALUES (1, 'Austin', 350000, true); INSERT INTO properties (id, city, listing_price, sustainable) VALUES (2, 'Austin', 450000, false);","completion":"SELECT COUNT(*) FROM properties WHERE city = 'Austin' AND listing_price < 400000 AND sustainable = true;"}
{"prompt":"What is the average property value in historically underrepresented communities? with given SQL schema CREATE TABLE Property_Value_History (Property_ID INT, Underrepresented VARCHAR(20), Property_Value INT); INSERT INTO Property_Value_History (Property_ID, Underrepresented, Property_Value) VALUES (1, 'Yes', 1000000), (2, 'No', 800000), (3, 'Yes', 1200000), (4, 'No', 900000); CREATE TABLE Property_Details (Property_ID INT, Underrepresented VARCHAR(20)); INSERT INTO Property_Details (Property_ID, Underrepresented) VALUES (1, 'Yes'), (2, 'No'), (3, 'Yes'), (4, 'No');","completion":"SELECT AVG(Property_Value) FROM Property_Value_History pvh JOIN Property_Details pd ON pvh.Property_ID = pd.Property_ID WHERE Underrepresented = 'Yes';"}
{"prompt":"How many wind power projects were completed in Germany and Sweden in 2019 and 2020? with given SQL schema CREATE TABLE wind_projects_2 (project_id INT, country VARCHAR(50), completion_year INT); INSERT INTO wind_projects_2 (project_id, country, completion_year) VALUES (1, 'Germany', 2019), (2, 'Sweden', 2020), (3, 'Germany', 2018), (4, 'Sweden', 2019), (5, 'Germany', 2020), (6, 'Sweden', 2018);","completion":"SELECT country, COUNT(*) FROM wind_projects_2 WHERE completion_year IN (2019, 2020) GROUP BY country;"}
{"prompt":"What is the average energy efficiency rating for residential buildings in the United States, grouped by state? with given SQL schema CREATE TABLE Residential_Buildings (state VARCHAR(255), rating INT); INSERT INTO Residential_Buildings (state, rating) VALUES ('California', 80), ('Texas', 75), ('New York', 85);","completion":"SELECT state, AVG(rating) AS avg_rating FROM Residential_Buildings GROUP BY state;"}
{"prompt":"Find the number of vegetarian dishes that are not offered at any restaurant. with given SQL schema CREATE TABLE dishes (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO dishes (id, name, type) VALUES (1, 'Quinoa Salad', 'vegetarian'), (2, 'Chickpea Curry', 'vegetarian'), (3, 'Cheeseburger', 'non-vegetarian'); CREATE TABLE restaurants (id INT, name VARCHAR(255)); CREATE TABLE menus (id INT, dish_id INT, restaurant_id INT); INSERT INTO menus (id, dish_id, restaurant_id) VALUES (1, 1, 1), (2, 2, 1), (3, 3, 2);","completion":"SELECT COUNT(*) FROM dishes WHERE type = 'vegetarian' AND id NOT IN (SELECT dish_id FROM menus);"}
{"prompt":"What is the total revenue for 'Breakfast' menu items in the 'Downtown' location? with given SQL schema CREATE TABLE menus (menu_id INT, dish_name VARCHAR(50), dish_type VARCHAR(50), price DECIMAL(5,2), sales INT, location VARCHAR(50));  CREATE TABLE revenue (menu_id INT, date DATE, revenue INT);","completion":"SELECT SUM(r.revenue) FROM menus m JOIN revenue r ON m.menu_id = r.menu_id WHERE m.dish_type = 'Breakfast' AND m.location = 'Downtown';"}
{"prompt":"Create a view to display suppliers with a sustainability score greater than 80 with given SQL schema CREATE VIEW sustainable_suppliers AS SELECT * FROM suppliers WHERE sustainability_score > 80;","completion":"CREATE VIEW sustainable_suppliers AS SELECT * FROM suppliers WHERE sustainability_score > 80;"}
{"prompt":"Display the number of employees working in each store in Canada. with given SQL schema CREATE TABLE employees (employee_id INT, store_id INT, first_name VARCHAR(50), last_name VARCHAR(50), role VARCHAR(50), hourly_wage DECIMAL(5,2)); CREATE TABLE stores (store_id INT, location VARCHAR(50), country VARCHAR(50)); CREATE VIEW store_employee_view AS SELECT stores.store_id, stores.location, stores.country, COUNT(employees.employee_id) as num_employees FROM stores LEFT JOIN employees ON stores.store_id = employees.store_id GROUP BY stores.store_id, stores.location, stores.country;","completion":"SELECT location, num_employees FROM store_employee_view WHERE country = 'Canada';"}
{"prompt":"What is the total mass of space objects in high Earth orbit? with given SQL schema CREATE TABLE space_objects_heo (id INT, name VARCHAR(255), mass FLOAT, orbit VARCHAR(255)); INSERT INTO space_objects_heo (id, name, mass, orbit) VALUES (1, 'Space Object 1', 1000.0, 'High Earth Orbit'), (2, 'Space Object 2', 1500.0, 'High Earth Orbit');","completion":"SELECT SUM(mass) FROM space_objects_heo;"}
{"prompt":"What is the percentage of male and female fans who participated in athlete wellbeing programs in the last 6 months, by age group? with given SQL schema CREATE TABLE wellbeing_participants (fan_id INT, gender VARCHAR(50), age INT, last_event_date DATE); INSERT INTO wellbeing_participants (fan_id, gender, age, last_event_date) VALUES (1, 'Male', 25, '2022-01-01'), (2, 'Female', 35, '2022-02-01'), (3, 'Male', 28, '2022-03-01'), (4, 'Female', 45, '2022-04-01'), (5, 'Male', 32, '2022-05-01');","completion":"SELECT age_group, gender, COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM wellbeing_participants WHERE gender = age_group AND last_event_date >= CURDATE() - INTERVAL 6 MONTH) AS percentage FROM (SELECT CASE WHEN age < 30 THEN '18-29' WHEN age < 40 THEN '30-39' ELSE '40+' END AS age_group, gender FROM wellbeing_participants WHERE last_event_date >= CURDATE() - INTERVAL 6 MONTH) AS age_groups GROUP BY age_group, gender;"}
{"prompt":"What is the total revenue generated by the Los Angeles Lakers from merchandise sales in Q1 of 2021? with given SQL schema CREATE TABLE merchandise_sales(id INT, team VARCHAR(50), quarter VARCHAR(10), revenue DECIMAL(5,2)); INSERT INTO merchandise_sales(id, team, quarter, revenue) VALUES (1, 'Los Angeles Lakers', 'Q1', 550000.00), (2, 'Los Angeles Lakers', 'Q2', 600000.00), (3, 'Los Angeles Lakers', 'Q3', 700000.00);","completion":"SELECT SUM(revenue) FROM merchandise_sales WHERE team = 'Los Angeles Lakers' AND quarter = 'Q1' AND year = 2021;"}
{"prompt":"Remove the 'Zero-day exploit' record from the 'exploits' table with given SQL schema CREATE TABLE exploits (id INT, name VARCHAR, description TEXT, date_discovered DATE); INSERT INTO exploits (id, name, description, date_discovered) VALUES (1, 'Zero-day exploit', 'Exploit for a previously unknown vulnerability', '2022-03-15');","completion":"DELETE FROM exploits WHERE name='Zero-day exploit';"}
{"prompt":"What is the average severity of vulnerabilities in the 'Malware' category? with given SQL schema CREATE TABLE vulnerabilities (id INT, name TEXT, category TEXT, severity TEXT, date_discovered DATE); INSERT INTO vulnerabilities (id, name, category, severity, date_discovered) VALUES (1, 'Remote Code Execution', 'Malware', 'Critical', '2022-01-01');","completion":"SELECT AVG(severity = 'Critical') + AVG(severity = 'High') * 0.75 + AVG(severity = 'Medium') * 0.5 + AVG(severity = 'Low') * 0.25 as average FROM vulnerabilities WHERE category = 'Malware';"}
{"prompt":"How many bicycle-sharing systems are available in the 'transportation_systems' table? with given SQL schema CREATE TABLE transportation_systems (id INT PRIMARY KEY, system_name VARCHAR(50), system_type VARCHAR(50), location VARCHAR(50)); INSERT INTO transportation_systems (id, system_name, system_type, location) VALUES (1, 'NYC Citi Bike', 'Bicycle-Sharing', 'New York'); INSERT INTO transportation_systems (id, system_name, system_type, location) VALUES (2, 'London Santander Cycles', 'Bicycle-Sharing', 'London');","completion":"SELECT COUNT(*) FROM transportation_systems WHERE system_type = 'Bicycle-Sharing';"}
{"prompt":"What is the maximum number of bike-share trips in a day in Paris? with given SQL schema CREATE TABLE bike_trips (trip_id INT, city VARCHAR(20), trips_per_day INT); INSERT INTO bike_trips (trip_id, city, trips_per_day) VALUES (1, 'Paris', 3000), (2, 'Paris', 2500), (3, 'Paris', 3500);","completion":"SELECT MAX(trips_per_day) FROM bike_trips WHERE city = 'Paris';"}
{"prompt":"What is the average claim amount in the 'East' region? with given SQL schema CREATE TABLE Claims (ClaimID INT, PolicyID INT, Amount INT, Region VARCHAR(10)); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (1, 101, 500, 'North'); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (2, 102, 750, 'South'); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (3, 103, 300, 'East');","completion":"SELECT AVG(Amount) FROM Claims WHERE Region = 'East';"}
{"prompt":"What is the total number of electric vehicles adopted in Canada and the UK? with given SQL schema CREATE TABLE ElectricVehicleAdoptionCAUK (Model VARCHAR(20), Country VARCHAR(10), AdoptionRate FLOAT, IsCAUK BIT);","completion":"SELECT SUM(AdoptionRate) FROM ElectricVehicleAdoptionCAUK WHERE IsCAUK IN (1, 2);"}
{"prompt":"Show the number of visitors for each exhibition type with given SQL schema CREATE TABLE Exhibitions (id INT, name VARCHAR(255), type VARCHAR(255)); CREATE TABLE Tickets (id INT, visitor_id INT, exhibition_id INT);","completion":"SELECT Exhibitions.type, COUNT(Tickets.visitor_id) FROM Exhibitions JOIN Tickets ON Exhibitions.id = Tickets.exhibition_id GROUP BY Exhibitions.type;"}
{"prompt":"How many landfills are there in Tokyo with a capacity over 100,000 tons? with given SQL schema CREATE TABLE landfills(location VARCHAR(50), capacity INT); INSERT INTO landfills(location, capacity) VALUES ('Tokyo', 120000), ('Tokyo', 90000), ('Osaka', 150000), ('Osaka', 80000), ('Kyoto', 50000);","completion":"SELECT COUNT(*) FROM landfills WHERE location = 'Tokyo' AND capacity > 100000;"}
{"prompt":"What is the maximum duration of 'Yoga' workouts in the 'workout_data' table? with given SQL schema CREATE TABLE workout_data (user_id INT, workout_type VARCHAR(20), duration INT); INSERT INTO workout_data (user_id, workout_type, duration) VALUES (1, 'Running', 30), (1, 'Cycling', 60), (2, 'Yoga', 45), (3, 'Pilates', 50), (1, 'Running', 45), (2, 'Yoga', 60), (3, 'Pilates', 75), (1, 'Running', 75), (2, 'Yoga', 90), (3, 'Pilates', 105);","completion":"SELECT MAX(duration) as max_duration FROM workout_data WHERE workout_type = 'Yoga';"}
{"prompt":"What is the total investment in agricultural innovation in the 'Investment_Data' table for each crop type? with given SQL schema CREATE TABLE Investment_Data (investment_id INT, crop_type TEXT, investment_amount INT); INSERT INTO Investment_Data (investment_id, crop_type, investment_amount) VALUES (1, 'Corn', 50000), (2, 'Soybeans', 75000), (3, 'Wheat', 60000);","completion":"SELECT crop_type, SUM(investment_amount) FROM Investment_Data GROUP BY crop_type;"}
{"prompt":"List the top 3 countries with the highest number of satellites launched with given SQL schema CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(50), LaunchDate DATE, Manufacturer VARCHAR(50), Country VARCHAR(50), Weight DECIMAL(10,2)); INSERT INTO Satellites (SatelliteID, Name, LaunchDate, Manufacturer, Country, Weight) VALUES (1, 'Kompsat-5', '2013-08-10', 'KARI', 'South Korea', 1250.00), (2, 'GSAT-7', '2013-09-30', 'ISRO', 'India', 2650.00), (3, 'Haiyang-2B', '2011-11-15', 'CNSA', 'China', 1100.00);","completion":"SELECT Country, COUNT(*) as SatelliteCount, RANK() OVER(ORDER BY COUNT(*) DESC) as Rank FROM Satellites GROUP BY Country HAVING COUNT(*) > 0 ORDER BY Rank;"}
{"prompt":"What is the total number of fish in fish farms located in the North Atlantic Ocean? with given SQL schema CREATE TABLE fish_farms (id INT, name TEXT, location TEXT, number_of_fish INT); INSERT INTO fish_farms (id, name, location, number_of_fish) VALUES (1, 'Farm A', 'North Atlantic Ocean', 1000), (2, 'Farm B', 'South Atlantic Ocean', 1200), (3, 'Farm C', 'North Atlantic Ocean', 1500);","completion":"SELECT SUM(number_of_fish) FROM fish_farms WHERE location = 'North Atlantic Ocean';"}
{"prompt":"What was the total attendance at poetry readings in San Francisco? with given SQL schema CREATE TABLE events (id INT, event_type VARCHAR(50), city VARCHAR(50), attendance INT); INSERT INTO events (id, event_type, city, attendance) VALUES (1, 'Poetry Reading', 'San Francisco', 50), (2, 'Music Concert', 'Los Angeles'), (3, 'Poetry Reading', 'San Francisco', 75);","completion":"SELECT SUM(attendance) FROM events WHERE event_type = 'Poetry Reading' AND city = 'San Francisco';"}
{"prompt":"What's the average rating of K-dramas released between 2016 and 2018? with given SQL schema CREATE TABLE kdramas (id INT, title VARCHAR(255), release_year INT, rating DECIMAL(3,2)); INSERT INTO kdramas (id, title, release_year, rating) VALUES (1, 'Goblin', 2016, 9.2), (2, 'Descendants of the Sun', 2016, 8.9), (3, 'Stranger', 2017, 8.8), (4, 'Hotel Del Luna', 2019, 8.5);","completion":"SELECT AVG(rating) FROM kdramas WHERE release_year BETWEEN 2016 AND 2018;"}
{"prompt":"How many cases were opened in 2021? with given SQL schema CREATE TABLE cases (id INT, open_date DATE); INSERT INTO cases (id, open_date) VALUES (1, '2021-01-05'), (2, '2022-02-10'), (3, '2021-07-20'), (4, '2021-12-31');","completion":"SELECT COUNT(*) FROM cases WHERE YEAR(open_date) = 2021;"}
{"prompt":"What is the number of flu cases in each region? with given SQL schema CREATE TABLE flu_cases(id INT, patient_id INT, region TEXT, date DATE);","completion":"SELECT region, COUNT(*) FROM flu_cases GROUP BY region;"}
{"prompt":"What is the obesity rate among adults in North American countries in 2019? with given SQL schema CREATE TABLE ObesityRates (Country VARCHAR(50), Continent VARCHAR(50), Year INT, ObesityRate FLOAT); INSERT INTO ObesityRates (Country, Continent, Year, ObesityRate) VALUES ('Canada', 'North America', 2019, 26.8), ('Mexico', 'North America', 2019, 32.4), ('USA', 'North America', 2019, 36.2);","completion":"SELECT Country, Continent, ObesityRate FROM ObesityRates WHERE Continent = 'North America' AND Year = 2019;"}
{"prompt":"Update the common name of the scientific name \"Loligo opalescens\" to \"California market squid\". with given SQL schema CREATE TABLE marine_species (scientific_name TEXT, common_name TEXT); INSERT INTO marine_species (scientific_name, common_name) VALUES ('Loligo opalescens', 'California market squid');","completion":"UPDATE marine_species SET common_name = 'California market squid' WHERE scientific_name = 'Loligo opalescens';"}
{"prompt":"What is the minimum depth at which a marine species can be found? with given SQL schema CREATE TABLE marine_species_depths (species TEXT, min_depth FLOAT);","completion":"SELECT MIN(min_depth) FROM marine_species_depths;"}
{"prompt":"What is the minimum ocean temperature, grouped by ocean basin? with given SQL schema CREATE TABLE ocean_temperature (id INT, location VARCHAR(255), temperature FLOAT, ocean_basin VARCHAR(255)); INSERT INTO ocean_temperature (id, location, temperature, ocean_basin) VALUES (1, 'Hawaii', 27, 'Pacific'); INSERT INTO ocean_temperature (id, location, temperature, ocean_basin) VALUES (2, 'Gibraltar', 14, 'Atlantic'); INSERT INTO ocean_temperature (id, location, temperature, ocean_basin) VALUES (3, 'Darwin', 29, 'Indian');","completion":"SELECT ocean_basin, MIN(temperature) FROM ocean_temperature GROUP BY ocean_basin;"}
{"prompt":"What is the total number of transactions performed by all decentralized applications? with given SQL schema CREATE TABLE transactions (id INT, app_id INT, timestamp TIMESTAMP); INSERT INTO transactions (id, app_id, timestamp) VALUES (1, 1, '2022-01-01 10:00:00'), (2, 1, '2022-01-01 12:00:00'), (3, 2, '2022-01-01 14:00:00');","completion":"SELECT COUNT(*) FROM transactions;"}
{"prompt":"Create a table to store ingredient sourcing information with given SQL schema CREATE TABLE ingredient_sourcing (ingredient_id INT, supplier_id INT, sourcing_date DATE, PRIMARY KEY (ingredient_id, sourcing_date));","completion":"CREATE TABLE ingredient_sourcing (ingredient_id INT, supplier_id INT, sourcing_date DATE, PRIMARY KEY (ingredient_id, sourcing_date));"}
{"prompt":"What is the maximum number of pieces created by an artist who has used oil as a medium? with given SQL schema CREATE TABLE artists_oil (artist_id INT, name VARCHAR(50), medium VARCHAR(50), pieces INT);","completion":"SELECT MAX(pieces) FROM artists_oil WHERE medium = 'oil';"}
{"prompt":"What is the earliest year a peacekeeping operation was conducted in 'Asia'? with given SQL schema CREATE TABLE Peacekeeping_Years (id INT, location VARCHAR(30), year INT); INSERT INTO Peacekeeping_Years (id, location, year) VALUES (1, 'Asia', 1990), (2, 'Asia', 2000);","completion":"SELECT MIN(year) FROM Peacekeeping_Years WHERE location = 'Asia';"}
{"prompt":"What is the total number of peacekeeping operations conducted by each country, ranked from highest to lowest? with given SQL schema CREATE TABLE PeacekeepingOperations (Country VARCHAR(50), Year INT, Operations INT); INSERT INTO PeacekeepingOperations (Country, Year, Operations) VALUES ('USA', 2020, 15), ('China', 2020, 10), ('France', 2020, 12), ('USA', 2021, 18), ('China', 2021, 14), ('France', 2021, 16);","completion":"SELECT Country, SUM(Operations) OVER (PARTITION BY Country ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS TotalOperations, RANK() OVER (ORDER BY SUM(Operations) DESC) AS PeacekeepingRank FROM PeacekeepingOperations GROUP BY Country ORDER BY PeacekeepingRank;"}
{"prompt":"Calculate the number of unique clients living in 'Sydney' with transactions during the month of 'February'. with given SQL schema CREATE TABLE clients (id INT, name TEXT, city TEXT); CREATE TABLE transactions (client_id INT, transaction_time TIMESTAMP); INSERT INTO clients (id, name, city) VALUES (1, 'Ivan', 'Sydney'), (2, 'Judy', 'Sydney'), (3, 'Ken', 'Melbourne'); INSERT INTO transactions (client_id, transaction_time) VALUES (1, '2022-02-05 11:00:00'), (1, '2022-03-03 16:30:00'), (2, '2022-02-12 09:45:00');","completion":"SELECT COUNT(DISTINCT clients.id) FROM clients JOIN transactions ON clients.id = transactions.client_id WHERE clients.city = 'Sydney' AND DATE_TRUNC('month', transactions.transaction_time) = '2022-02-01';"}
{"prompt":"Get average returns of ETFs with expense ratio < 0.2 in the past year with given SQL schema CREATE TABLE etfs (etf_id INT PRIMARY KEY, symbol VARCHAR(10), expense_ratio DECIMAL(5, 4)); CREATE TABLE etf_returns (return_id INT PRIMARY KEY, etf_id INT, year INT, avg_return DECIMAL(5, 2));","completion":"SELECT e.symbol, AVG(r.avg_return) FROM etfs e JOIN etf_returns r ON e.etf_id = r.etf_id WHERE e.expense_ratio < 0.2 GROUP BY e.symbol;"}
{"prompt":"What is the maximum cargo weight handled by port 'Hong Kong' and 'Shanghai'? with given SQL schema CREATE TABLE ports (port_id INT, port_name VARCHAR(255)); INSERT INTO ports (port_id, port_name) VALUES (1, 'Hong Kong'), (2, 'Shanghai'), (3, 'Shenzhen'); CREATE TABLE cargo (cargo_id INT, port_id INT, weight FLOAT); INSERT INTO cargo (cargo_id, port_id, weight) VALUES (1, 1, 30000), (2, 1, 25000), (3, 2, 20000), (4, 3, 18000);","completion":"SELECT MAX(weight) FROM cargo WHERE port_name IN ('Hong Kong', 'Shanghai');"}
{"prompt":"What is the most common type of cargo for each vessel? with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), status VARCHAR(50)); CREATE TABLE cargo (cargo_id INT, vessel_id INT, cargo_type VARCHAR(50), weight INT);","completion":"SELECT V.vessel_name, cargo_type, COUNT(cargo_type) AS frequency FROM cargo C JOIN vessels V ON C.vessel_id = V.vessel_id GROUP BY V.vessel_name, cargo_type ORDER BY frequency DESC;"}
{"prompt":"List the top three categories of workforce development programs with the highest budget increases. with given SQL schema CREATE TABLE programs (program_id INT, program_name VARCHAR(50), budget DECIMAL(10, 2), category VARCHAR(50), budget_date DATE);","completion":"SELECT category, SUM(budget - LAG(budget) OVER (PARTITION BY category ORDER BY budget_date)) as total_budget_increase FROM programs GROUP BY category ORDER BY total_budget_increase DESC LIMIT 3;"}
{"prompt":"What are the names and locations of all factories with a workforce diversity score above 85? with given SQL schema CREATE TABLE factories (factory_id INT, name TEXT, location TEXT, diversity_score FLOAT);","completion":"SELECT name, location FROM factories WHERE diversity_score > 85;"}
{"prompt":"Update the number of listens to 200 for artist id 1 in the music_consumption table with given SQL schema CREATE TABLE music_consumption (id INT, platform VARCHAR(50), listens INT, artist_id INT);","completion":"UPDATE music_consumption SET listens = 200 WHERE artist_id = 1;"}
{"prompt":"Which artists have released music in multiple decades, but not consecutively? with given SQL schema CREATE TABLE ArtistDecades (ArtistID int, DecadeStartYear int, DecadeEndYear int); INSERT INTO ArtistDecades VALUES (1, 1970, 1980); INSERT INTO ArtistDecades VALUES (1, 2000, 2010); INSERT INTO ArtistDecades VALUES (2, 1990, 2000); INSERT INTO ArtistDecades VALUES (2, 2010, 2020);","completion":"SELECT ArtistID FROM ArtistDecades WHERE DecadeEndYear % 10 = 0 AND DecadeStartYear % 10 != 0 INTERSECT SELECT ArtistID FROM ArtistDecades WHERE DecadeEndYear % 10 != 0 AND DecadeStartYear % 10 = 0;"}
{"prompt":"Which cities have donors but no active programs? with given SQL schema CREATE TABLE Donors (id INT, donor_name VARCHAR(50), email VARCHAR(50), city VARCHAR(50)); INSERT INTO Donors (id, donor_name, email, city) VALUES (3, 'Maria Garcia', 'mariagarcia@example.com', 'Miami'), (4, 'Hiroshi Tanaka', 'hiroshitanaka@example.com', 'San Francisco'); CREATE TABLE Programs (id INT, program_name VARCHAR(50), city VARCHAR(50)); INSERT INTO Programs (id, program_name, city) VALUES (3, 'Disaster Relief', 'New York'), (4, 'Refugee Support', 'Seattle');","completion":"SELECT city FROM Donors WHERE city NOT IN (SELECT city FROM Programs);"}
{"prompt":"What is the total energy produced by geothermal power in Indonesia in 2019? with given SQL schema CREATE TABLE geothermal_power (id INT, name TEXT, country TEXT, energy_produced FLOAT);","completion":"SELECT SUM(energy_produced) FROM geothermal_power WHERE country = 'Indonesia' AND YEAR(production_date) = 2019;"}
{"prompt":"What is the difference in total points scored between the home and away games for each team in the 2020 baseball season? with given SQL schema CREATE TABLE baseball_season (team_id INT, team_name VARCHAR(50), games_played INT, points_home INT, points_away INT); INSERT INTO baseball_season (team_id, team_name, games_played, points_home, points_away) VALUES (1, 'TeamA', 162, 850, 720);","completion":"SELECT team_name, (points_home - points_away) as diff FROM baseball_season;"}
{"prompt":"What is the total number of schools in rural areas? with given SQL schema CREATE TABLE schools (id INT, name VARCHAR(255), level VARCHAR(255), location VARCHAR(255)); INSERT INTO schools (id, name, level, location) VALUES (1, 'School A', 'Primary', 'Rural'), (2, 'School B', 'Secondary', 'Urban');","completion":"SELECT COUNT(*) FROM schools WHERE location = 'Rural';"}
{"prompt":"List all customers who have a Shariah-compliant finance product and a high financial wellbeing score with given SQL schema CREATE TABLE customers (customer_id INT, has_shariah_compliant_finance BOOLEAN, financial_wellbeing DECIMAL(10,2)); CREATE TABLE shariah_finance (customer_id INT, product VARCHAR(255));","completion":"SELECT customers.customer_id, shariah_finance.product, customers.financial_wellbeing FROM customers INNER JOIN shariah_finance ON customers.customer_id = shariah_finance.customer_id WHERE customers.has_shariah_compliant_finance = TRUE AND customers.financial_wellbeing > 7;"}
{"prompt":"Rank customers by total deposits in Shariah-compliant accounts, with ties given the same rank. with given SQL schema CREATE TABLE deposits (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10,2), deposit_date DATE);","completion":"SELECT customer_id, RANK() OVER (ORDER BY SUM(balance) DESC) as deposit_rank FROM deposits WHERE account_type = 'Shariah-compliant' GROUP BY customer_id;"}
{"prompt":"What is the total revenue for each warehouse after a 10% discount? with given SQL schema CREATE TABLE warehouse_revenue (warehouse_id VARCHAR(5), revenue DECIMAL(10,2)); INSERT INTO warehouse_revenue (warehouse_id, revenue) VALUES ('LA', 10000.00), ('NY', 20000.00), ('CH', 15000.00), ('MI', 5000.00), ('AT', 25000.00);","completion":"SELECT warehouse_id, revenue * 0.9 FROM warehouse_revenue;"}
{"prompt":"What is the distribution of biotech startup funding sources? with given SQL schema CREATE TABLE funding_sources (funding_source_id INT, funding_source_type VARCHAR(20)); INSERT INTO funding_sources (funding_source_id, funding_source_type) VALUES (1, 'Venture capital'), (2, 'Angel investors'), (3, 'Grants'), (4, 'Crowdfunding');","completion":"SELECT funding_source_type, COUNT(*) FROM funding_sources GROUP BY funding_source_type"}
{"prompt":"What is the total number of biosensors developed in the Asia-Pacific region? with given SQL schema CREATE SCHEMA if not exists biosensors;CREATE TABLE if not exists biosensors.sensors (id INT, name VARCHAR(100), location VARCHAR(100)); INSERT INTO biosensors.sensors (id, name, location) VALUES (1, 'SensorA', 'Seoul'), (2, 'SensorB', 'Beijing'), (3, 'SensorC', 'Sydney'), (4, 'SensorD', 'Tokyo');","completion":"SELECT COUNT(*) FROM biosensors.sensors WHERE location = 'Asia-Pacific';"}
{"prompt":"How many research grants were awarded to the Computer Science department in the year 2020? with given SQL schema CREATE TABLE grant (id INT, department VARCHAR(50), amount INT, grant_date DATE); INSERT INTO grant (id, department, amount, grant_date) VALUES (1, 'Computer Science', 50000, '2020-01-01'), (2, 'Computer Science', 75000, '2020-04-15'), (3, 'Mechanical Engineering', 60000, '2019-12-31');","completion":"SELECT COUNT(*) FROM grant WHERE department = 'Computer Science' AND YEAR(grant_date) = 2020;"}
{"prompt":"List faculty diversity metrics including the number of female, male, and non-binary faculty members in the Mathematics department with given SQL schema CREATE TABLE Department (id INT, name VARCHAR(255)); INSERT INTO Department (id, name) VALUES (1, 'Computer Science'), (2, 'Physics'), (3, 'Mathematics'), (4, 'English'); CREATE TABLE Faculty (id INT, name VARCHAR(255), gender VARCHAR(10), department_id INT); INSERT INTO Faculty (id, name, gender, department_id) VALUES (1, 'John Doe', 'Male', 1), (2, 'Jane Smith', 'Female', 3), (3, 'Jamie Johnson', 'Non-binary', 2), (4, 'Alice Davis', 'Female', 3), (5, 'Bob Brown', 'Male', 1);","completion":"SELECT f.gender, COUNT(*) as num_faculty FROM Faculty f WHERE f.department_id = (SELECT id FROM Department WHERE name = 'Mathematics') GROUP BY f.gender;"}
{"prompt":"What is the total number of research grants awarded by department? with given SQL schema CREATE TABLE department (dept_name TEXT); INSERT INTO department (dept_name) VALUES ('Engineering'), ('Business'), ('Liberal Arts'); CREATE TABLE research_grants (grant_id INTEGER, dept_name TEXT, grant_amount INTEGER); INSERT INTO research_grants (grant_id, dept_name, grant_amount) VALUES (1, 'Engineering', 50000), (2, 'Business', 75000), (3, 'Liberal Arts', 30000);","completion":"SELECT dept_name, SUM(grant_amount) FROM research_grants GROUP BY dept_name;"}
{"prompt":"What is the maximum energy consumption by a green building project in Asia? with given SQL schema CREATE TABLE green_buildings (id INT, name VARCHAR(50), country VARCHAR(50), energy_consumption INT); INSERT INTO green_buildings (id, name, country, energy_consumption) VALUES (1, 'GreenHub', 'India', 1200), (2, 'EcoTower', 'China', 1500), (3, 'SolarVista', 'Japan', 1800), (4, 'WindHaven', 'India', 2000), (5, 'SolarCity', 'China', 2500), (6, 'EcoRail', 'Japan', 3000);","completion":"SELECT MAX(energy_consumption) FROM green_buildings WHERE country = 'India' OR country = 'China' OR country = 'Japan';"}
{"prompt":"What is the distribution of users by age group for each virtual tour? with given SQL schema CREATE TABLE virtual_tour_users (user_id INT, tour_id INT, age_group TEXT); INSERT INTO virtual_tour_users (user_id, tour_id, age_group) VALUES (1, 1, '18-24'), (2, 1, '25-34'), (3, 1, '35-44'), (4, 2, '18-24'), (5, 2, '35-44'), (6, 2, '45-54'), (7, 3, '25-34'), (8, 3, '45-54'), (9, 3, '55-64');","completion":"SELECT tour_id, age_group, COUNT(*) as user_count FROM virtual_tour_users GROUP BY tour_id, age_group;"}
{"prompt":"Find the number of unique endangered languages in Oceania and their corresponding traditional art forms. with given SQL schema CREATE TABLE languages (language VARCHAR(255), region VARCHAR(255), arts VARCHAR(255)); INSERT INTO languages (language, region, arts) VALUES ('Language1', 'Oceania', 'Art1, Art2'), ('Language2', 'Oceania', 'Art3'), ('Language3', 'Asia', 'Art4');","completion":"SELECT language, arts FROM languages WHERE region = 'Oceania' INTERSECT SELECT endangered_languages FROM endangered_languages;"}
{"prompt":"What is the total number of traditional art pieces created in each region with a population greater than 500,000? with given SQL schema CREATE TABLE regions (id INT, name TEXT, population INT); INSERT INTO regions (id, name, population) VALUES (1, 'West Africa', 6000000), (2, 'Amazon Basin', 500000); CREATE TABLE art_pieces (id INT, region_id INT, type TEXT, year INT); INSERT INTO art_pieces (id, region_id, type, year) VALUES (1, 1, 'Mask', 2000), (2, 1, 'Statue', 1950), (3, 2, 'Painting', 2020);","completion":"SELECT r.name, COUNT(ap.id) FROM regions r JOIN art_pieces ap ON r.id = ap.region_id WHERE r.population > 500000 GROUP BY r.id;"}
{"prompt":"What is the total number of traditional art pieces in North American museums? with given SQL schema CREATE TABLE ArtPieces (museum VARCHAR(50), country VARCHAR(50), type VARCHAR(50), quantity INT); INSERT INTO ArtPieces (museum, country, type, quantity) VALUES ('Metropolitan Museum of Art', 'USA', 'traditional art', 500), ('National Gallery of Art', 'USA', 'traditional art', 400), ('Museo Nacional de Antropolog\u00eda', 'Mexico', 'traditional art', 600);","completion":"SELECT SUM(quantity) FROM ArtPieces WHERE type = 'traditional art' AND country IN ('USA', 'Mexico') AND region = 'North America';"}
{"prompt":"Which mental health conditions were treated most frequently in Canada during 2022? with given SQL schema CREATE TABLE patients (id INT, country VARCHAR(255)); CREATE TABLE treatments (id INT, patient_id INT, treatment_date DATE); CREATE TABLE conditions (id INT, patient_id INT, condition VARCHAR(255)); INSERT INTO patients (id, country) VALUES (1, 'Canada'), (2, 'Canada'); INSERT INTO treatments (id, patient_id, treatment_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-02-15'), (3, 2, '2022-06-30'); INSERT INTO conditions (id, patient_id, condition) VALUES (1, 1, 'depression'), (2, 1, 'anxiety'), (3, 2, 'depression');","completion":"SELECT conditions.condition, COUNT(conditions.condition) AS count FROM conditions JOIN patients ON conditions.patient_id = patients.id JOIN treatments ON patients.id = treatments.patient_id WHERE patients.country = 'Canada' AND treatments.treatment_date >= '2022-01-01' AND treatments.treatment_date < '2023-01-01' GROUP BY conditions.condition ORDER BY count DESC LIMIT 1;"}
{"prompt":"List all legal aid clinics in the justice_schemas.legal_aid_clinics table that have been operational for more than five years. with given SQL schema CREATE TABLE justice_schemas.legal_aid_clinics (id INT PRIMARY KEY, clinic_name TEXT, years_operational INT);","completion":"SELECT clinic_name FROM justice_schemas.legal_aid_clinics WHERE years_operational > 5;"}
{"prompt":"How many marine conservation initiatives were launched in the Indian Ocean in 2015 and 2016? with given SQL schema CREATE TABLE marine_conservation_initiatives (id INT, name TEXT, year INT, region TEXT);","completion":"SELECT COUNT(*) FROM marine_conservation_initiatives WHERE region = 'Indian Ocean' AND year IN (2015, 2016);"}
{"prompt":"How many pollution control initiatives are in the South Pacific Ocean? with given SQL schema CREATE TABLE SouthPacificPollution (initiative_name TEXT, location TEXT); INSERT INTO SouthPacificPollution (initiative_name, location) VALUES ('Clean Oceans Project', 'South Pacific Ocean'), ('Sustainable Fishing Initiative', 'South Pacific Ocean'); CREATE TABLE Oceans (ocean TEXT, initiative_count INTEGER); INSERT INTO Oceans (ocean, initiative_count) VALUES ('South Pacific Ocean', NULL);","completion":"SELECT Oceans.ocean, COUNT(SouthPacificPollution.initiative_name) FROM Oceans LEFT JOIN SouthPacificPollution ON Oceans.ocean = SouthPacificPollution.location GROUP BY Oceans.ocean;"}
{"prompt":"How many species of marine life are present in the Southern Ocean? with given SQL schema CREATE TABLE marine_life (species_name TEXT, location TEXT); INSERT INTO marine_life (species_name, location) VALUES ('Crabeater Seal', 'Southern Ocean'), ('Ross Seal', 'Southern Ocean'), ('Southern Elephant Seal', 'Southern Ocean'), ('Leopard Seal', 'Southern Ocean'), ('Weddell Seal', 'Southern Ocean');","completion":"SELECT COUNT(DISTINCT species_name) FROM marine_life WHERE location = 'Southern Ocean';"}
{"prompt":"What are the names and locations of marine research stations in the Atlantic Ocean? with given SQL schema CREATE TABLE Research_Station (station_name VARCHAR(50), latitude NUMERIC(8,2), longitude NUMERIC(8,2), ocean_name VARCHAR(50)); INSERT INTO Research_Station (station_name, latitude, longitude, ocean_name) VALUES ('Station A', 40.7128, -74.0060, 'Atlantic'), ('Station B', 34.0522, -118.2437, 'Indian');","completion":"SELECT Research_Station.station_name, latitude, longitude FROM Research_Station WHERE ocean_name = 'Atlantic';"}
{"prompt":"What is the average depth of ocean floor mapping projects located in the Arctic region? with given SQL schema CREATE TABLE ocean_floor_mapping(id INT, region VARCHAR(20), depth FLOAT); INSERT INTO ocean_floor_mapping(id, region, depth) VALUES (1, 'Pacific', 5000.5), (2, 'Atlantic', 4500.3), (3, 'Arctic', 3800.0), (4, 'Indian', 4200.0);","completion":"SELECT AVG(depth) FROM ocean_floor_mapping WHERE region = 'Arctic';"}
{"prompt":"What is the total frequency of news content for each genre in the media_content table? with given SQL schema CREATE TABLE media_content (id INT, genre VARCHAR(50), frequency INT); INSERT INTO media_content (id, genre, frequency) VALUES (1, 'News - Print', 50), (2, 'News - Online', 100), (3, 'News - TV', 150);","completion":"SELECT genre, SUM(frequency) FROM media_content WHERE genre LIKE 'News%' GROUP BY genre;"}
{"prompt":"What is the average quantity of vegan dishes sold per day in the Los Angeles region? with given SQL schema CREATE TABLE orders (item_id INT, quantity INT, order_date DATE); INSERT INTO orders (item_id, quantity, order_date) VALUES (1, 20, '2021-01-01'), (2, 30, '2021-01-02'), (1, 15, '2021-01-03');","completion":"SELECT AVG(quantity) FROM orders JOIN menu ON orders.item_id = menu.item_id WHERE menu.dish_type = 'vegan' AND menu.region = 'Los Angeles' GROUP BY order_date;"}
{"prompt":"Find the mobile subscribers with consecutive speed drops greater than 25% for the last 3 months, ordered by subscription IDs. with given SQL schema CREATE TABLE mobile_usage_detailed (subscriber_id INT, month INT, speed FLOAT); INSERT INTO mobile_usage_detailed (subscriber_id, month, speed) VALUES (1, 1, 100), (1, 2, 80), (1, 3, 70), (2, 1, 200), (2, 2, 180), (2, 3, 160), (3, 1, 150), (3, 2, 130), (3, 3, 110);","completion":"SELECT subscriber_id, speed, month FROM (SELECT subscriber_id, speed, month, LAG(speed, 1) OVER (PARTITION BY subscriber_id ORDER BY month) as prev_speed, LAG(speed, 2) OVER (PARTITION BY subscriber_id ORDER BY month) as prev_prev_speed FROM mobile_usage_detailed) t WHERE t.speed < 0.75 * t.prev_speed AND t.speed < 0.75 * t.prev_prev_speed ORDER BY subscriber_id;"}
{"prompt":"How many mobile subscribers are there in each region? with given SQL schema CREATE TABLE mobile_subscribers (id INT, region VARCHAR(10), plan VARCHAR(20)); INSERT INTO mobile_subscribers (id, region, plan) VALUES (1, 'urban', 'PlanA'), (2, 'rural', 'PlanB'), (3, 'urban', 'PlanC'), (4, 'urban', 'PlanA'), (5, 'rural', 'PlanD');","completion":"SELECT region, COUNT(*) FROM mobile_subscribers GROUP BY region;"}
{"prompt":"What is the total number of broadband subscribers from urban areas? with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, plan_id INT, subscriber_location VARCHAR(50)); INSERT INTO broadband_subscribers (subscriber_id, plan_id, subscriber_location) VALUES (1, 1, 'Urban'), (2, 2, 'Rural'), (3, 3, 'Urban'); CREATE TABLE broadband_plans (plan_id INT, plan_name VARCHAR(50), download_speed INT, upload_speed INT); INSERT INTO broadband_plans (plan_id, plan_name, download_speed, upload_speed) VALUES (1, 'Plan X', 120, 20), (2, 'Plan Y', 80, 15), (3, 'Plan Z', 150, 30);","completion":"SELECT COUNT(*) FROM broadband_subscribers WHERE subscriber_location = 'Urban';"}
{"prompt":"Identify the number of unique causes supported by volunteers from different countries. with given SQL schema CREATE TABLE volunteers (id INT, name VARCHAR(100), country VARCHAR(50), cause VARCHAR(50)); INSERT INTO volunteers VALUES (1, 'John Doe', 'USA', 'Environment'); INSERT INTO volunteers VALUES (2, 'Jane Smith', 'Canada', 'Animals');","completion":"SELECT country, COUNT(DISTINCT cause) as unique_causes FROM volunteers GROUP BY country;"}
{"prompt":"How many players are there in each gender? with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'), (2, 30, 'Female', 'Canada');","completion":"SELECT Gender, COUNT(*) as NumPlayers FROM Players GROUP BY Gender;"}
{"prompt":"Update the genre of all games with the name 'Civilization' to 'Simulation' with given SQL schema CREATE TABLE games (id INT PRIMARY KEY, name VARCHAR(50), genre VARCHAR(50)); INSERT INTO games (id, name, genre) VALUES (1, 'Starcraft', 'Strategy'); INSERT INTO games (id, name, genre) VALUES (2, 'Civilization', 'Strategy');","completion":"UPDATE games SET genre = 'Simulation' WHERE name = 'Civilization';"}
{"prompt":"List the number of IoT sensors in the 'PrecisionFarming' schema that have a 'moisture' measurement and were installed after 2019-01-01. with given SQL schema CREATE SCHEMA PrecisionFarming; CREATE TABLE IoT_Sensors (sensor_id INT, sensor_name VARCHAR(50), measurement VARCHAR(50), install_date DATE); INSERT INTO PrecisionFarming.IoT_Sensors (sensor_id, sensor_name, measurement, install_date) VALUES (4, 'Sensor4', 'moisture', '2020-01-01'), (5, 'Sensor5', 'moisture', '2019-06-15'), (6, 'Sensor6', 'temperature', '2021-03-02'), (7, 'Sensor7', 'humidity', '2018-12-31');","completion":"SELECT COUNT(*) FROM PrecisionFarming.IoT_Sensors WHERE measurement = 'moisture' AND install_date > '2019-01-01';"}
{"prompt":"What is the average co-ownership price per square foot in the Bay Area? with given SQL schema CREATE TABLE bay_area_prop (id INT, address TEXT, price FLOAT, size FLOAT, co_ownership BOOLEAN); INSERT INTO bay_area_prop (id, address, price, size, co_ownership) VALUES (1, '123 Main St', 800000, 1500, TRUE), (2, '456 Oak St', 1000000, 2000, FALSE);","completion":"SELECT AVG(price \/ size) FROM bay_area_prop WHERE co_ownership = TRUE;"}
{"prompt":"What is the change in co-ownership cost per property between consecutive rows, ordered by the 'co_ownership' table's ID? with given SQL schema CREATE TABLE co_ownership (id INT, city VARCHAR(255), co_ownership_cost INT, property_id INT); INSERT INTO co_ownership (id, city, co_ownership_cost, property_id) VALUES (1, 'Seattle', 550000, 101), (2, 'Seattle', 560000, 102), (3, 'Portland', 420000, 103), (4, 'Portland', 430000, 104), (5, 'Portland', 440000, 105);","completion":"SELECT id, city, co_ownership_cost, LAG(co_ownership_cost) OVER (PARTITION BY city ORDER BY id) AS previous_co_ownership_cost, co_ownership_cost - LAG(co_ownership_cost) OVER (PARTITION BY city ORDER BY id) AS cost_change FROM co_ownership ORDER BY id;"}
{"prompt":"What is the total square footage of all properties in urban areas with affordable housing? with given SQL schema CREATE TABLE urban_areas (id INT, area VARCHAR(20), affordable BOOLEAN); INSERT INTO urban_areas (id, area, affordable) VALUES (1, 'City A', true), (2, 'City B', false), (3, 'City C', true); CREATE TABLE properties (id INT, area VARCHAR(20), size INT); INSERT INTO properties (id, area, size) VALUES (1, 'City A', 1500), (2, 'City B', 2000), (3, 'City C', 1000), (4, 'City A', 1200);","completion":"SELECT SUM(size) FROM properties JOIN urban_areas ON properties.area = urban_areas.area WHERE urban_areas.affordable = true;"}
{"prompt":"What is the average capacity of renewable energy projects for each country? with given SQL schema CREATE TABLE projects (name TEXT, type TEXT, capacity INTEGER, country TEXT); INSERT INTO projects (name, type, capacity, country) VALUES ('Project 1', 'Wind', 100, 'USA'), ('Project 2', 'Solar', 200, 'Germany'), ('Project 3', 'Wind', 300, 'France');","completion":"SELECT country, AVG(capacity) FROM projects GROUP BY country"}
{"prompt":"Which menu item in 'Bistro Italiano' has the highest sales? with given SQL schema CREATE TABLE Sales (restaurant_name TEXT, menu_item TEXT, sales INTEGER); INSERT INTO Sales (restaurant_name, menu_item, sales) VALUES ('Bistro Italiano', 'Lasagna', 125), ('Bistro Italiano', 'Pizza Margherita', 98), ('Bistro Italiano', 'Tiramisu', 83);","completion":"SELECT menu_item, MAX(sales) FROM Sales WHERE restaurant_name = 'Bistro Italiano';"}
{"prompt":"How many space objects are there in total? with given SQL schema CREATE TABLE space_objects_count (id INT, name VARCHAR(255)); INSERT INTO space_objects_count (id, name) VALUES (1, 'Space Object 1'), (2, 'Space Object 2'), (3, 'Space Object 3');","completion":"SELECT COUNT(*) FROM space_objects_count;"}
{"prompt":"How many astronauts are from 'Brazil'? with given SQL schema CREATE TABLE AstronautData (id INT, name VARCHAR(50), country VARCHAR(50), height FLOAT, weight FLOAT, blood_pressure FLOAT); INSERT INTO AstronautData (id, name, country, height, weight, blood_pressure) VALUES (1, 'John', 'USA', 180, 80, 120), (2, 'Jane', 'Canada', 170, 70, 110), (3, 'Alex', 'Brazil', 190, 90, 130), (4, 'Elena', 'Russia', 165, 60, 115);","completion":"SELECT COUNT(*) FROM AstronautData WHERE country = 'Brazil';"}
{"prompt":"Which cybersecurity policies in the 'cybersecurity_policies' table were last updated on a specific date? with given SQL schema CREATE TABLE cybersecurity_policies (id INT PRIMARY KEY, policy_name TEXT, policy_text TEXT, last_updated DATE);","completion":"SELECT policy_name, last_updated FROM cybersecurity_policies WHERE last_updated = '2022-01-01';"}
{"prompt":"How many artworks were created by 'Vincent van Gogh'? with given SQL schema CREATE TABLE artworks (id INT PRIMARY KEY, title VARCHAR(255), artist VARCHAR(255), year INT);","completion":"SELECT COUNT(*) FROM artworks WHERE artist = 'Vincent van Gogh';"}
{"prompt":"What is the average age of visitors who attended the \"Modern Art\" exhibition? with given SQL schema CREATE TABLE visitor_attendance (visitor_id INT, visitor_age INT, exhibition_id INT); INSERT INTO visitor_attendance (visitor_id, visitor_age, exhibition_id) VALUES (1, 30, 2);","completion":"SELECT AVG(visitor_age) FROM visitor_attendance JOIN exhibitions ON visitor_attendance.exhibition_id = exhibitions.exhibition_id WHERE exhibitions.exhibition_name = 'Modern Art';"}
{"prompt":"What is the average water consumption per capita in Tokyo and Seoul for the year 2019? with given SQL schema CREATE TABLE asia_population (id INT, city VARCHAR(50), population INT, year INT); INSERT INTO asia_population (id, city, population, year) VALUES (1, 'Tokyo', 9000000, 2019); INSERT INTO asia_population (id, city, population, year) VALUES (2, 'Seoul', 7000000, 2019); CREATE TABLE asia_water_consumption (id INT, city VARCHAR(50), water_consumption FLOAT, year INT); INSERT INTO asia_water_consumption (id, city, water_consumption, year) VALUES (1, 'Tokyo', 1500000000, 2019); INSERT INTO asia_water_consumption (id, city, water_consumption, year) VALUES (2, 'Seoul', 1200000000, 2019);","completion":"SELECT AVG(awc.water_consumption \/ ap.population) FROM asia_water_consumption awc INNER JOIN asia_population ap ON awc.city = ap.city WHERE awc.year = 2019;"}
{"prompt":"What is the total water consumption in liters for residential users in July 2021? with given SQL schema CREATE TABLE water_consumption (user_category VARCHAR(20), consumption FLOAT, usage_date DATE); INSERT INTO water_consumption (user_category, consumption, usage_date) VALUES ('residential', 150, '2021-07-01'), ('commercial', 250, '2021-07-01'), ('residential', 160, '2021-07-02'), ('commercial', 240, '2021-07-02');","completion":"SELECT SUM(consumption) FROM water_consumption WHERE user_category = 'residential' AND usage_date >= '2021-07-01' AND usage_date <= '2021-07-31';"}
{"prompt":"What is the total distance walked by members in each age group? with given SQL schema CREATE TABLE workouts (workout_id INT, member_id INT, distance FLOAT); INSERT INTO workouts (workout_id, member_id, distance) VALUES (1, 1, 2.5), (2, 2, 3.2), (3, 3, 1.8);","completion":"SELECT AVG(distance) as avg_distance, FLOOR(AGE(FROM_DATE(NOW(), '2020-01-01')) \/ 5) * 5 as age_group FROM workouts JOIN members ON workouts.member_id = members.member_id GROUP BY age_group;"}
{"prompt":"Delete unsafe AI algorithms with incidents greater than 200 in 2022 with given SQL schema CREATE TABLE unsafe_ai_algorithms (algorithm_name VARCHAR(255), incidents INT, year INT); INSERT INTO unsafe_ai_algorithms (algorithm_name, incidents, year) VALUES ('ALG1', 120, 2022), ('ALG2', 150, 2022), ('ALG3', 80, 2022), ('ALG4', 200, 2022), ('ALG5', 70, 2022), ('ALG6', 190, 2022), ('ALG7', 130, 2022), ('ALG8', 100, 2022);","completion":"DELETE FROM unsafe_ai_algorithms WHERE incidents > 200 AND year = 2022;"}
{"prompt":"Compare the number of economic diversification projects in two regions, one in Europe and one in Oceania, by showing the project type and the number of projects in each region. with given SQL schema CREATE TABLE economic_diversification (region VARCHAR(50), project_type VARCHAR(50), project_start_date DATE);","completion":"SELECT 'Europe' as region, project_type, COUNT(*) as project_count FROM economic_diversification WHERE region = 'Europe' UNION ALL SELECT 'Oceania' as region, project_type, COUNT(*) as project_count FROM economic_diversification WHERE region = 'Oceania';"}
{"prompt":"Delete all aircraft models that were manufactured before 2000 from the aircraft_manufacturing table with given SQL schema CREATE TABLE aircraft_manufacturing (id INT PRIMARY KEY, model VARCHAR(100), manufacturer VARCHAR(100), year_manufactured INT);","completion":"DELETE FROM aircraft_manufacturing WHERE year_manufactured < 2000;"}
{"prompt":"What is the maximum number of flights operated by a single astronaut? with given SQL schema CREATE TABLE flights (flight_id INT, astronaut_id INT, num_flights INT); INSERT INTO flights (flight_id, astronaut_id, num_flights) VALUES (1, 1, 100), (2, 2, 50), (3, 3, 150);","completion":"SELECT MAX(num_flights) FROM flights;"}
{"prompt":"Insert a new record into the 'habitat_preservation' table with the following details: 'habitat_preservation_id' as 3, 'location_id' as 2, 'preservation_method' as 'Planting new trees', 'start_date' as '2022-01-01', 'end_date' as '2023-12-31', 'area_preserved' as 500 with given SQL schema CREATE TABLE habitat_preservation (habitat_preservation_id INT PRIMARY KEY, location_id INT, preservation_method VARCHAR(50), start_date DATE, end_date DATE, area_preserved INT);","completion":"INSERT INTO habitat_preservation (habitat_preservation_id, location_id, preservation_method, start_date, end_date, area_preserved) VALUES (3, 2, 'Planting new trees', '2022-01-01', '2023-12-31', 500);"}
{"prompt":"What is the total area of marine protected areas in the Atlantic Ocean that are larger than 100000 square kilometers? with given SQL schema CREATE TABLE MarineProtectedAreas (ocean VARCHAR(50), area_size INT); INSERT INTO MarineProtectedAreas (ocean, area_size) VALUES ('Atlantic Ocean', 150000), ('Atlantic Ocean', 120000), ('Atlantic Ocean', 90000), ('Pacific Ocean', 180000), ('Pacific Ocean', 160000), ('Pacific Ocean', 130000);","completion":"SELECT SUM(area_size) as total_area FROM MarineProtectedAreas WHERE ocean = 'Atlantic Ocean' AND area_size > 100000;"}
{"prompt":"What was the total funding for 'Art' programs in 'Texas' and 'California'? with given SQL schema CREATE TABLE Programs (program_id INT, program_name VARCHAR(50), focus VARCHAR(50), state VARCHAR(50), funding_amount DECIMAL(10, 2)); INSERT INTO Programs (program_id, program_name, focus, state, funding_amount) VALUES (1, 'Art Troupe', 'Art', 'Texas', 15000.00), (2, 'Theater Classes', 'Theater', 'California', 12000.00);","completion":"SELECT SUM(funding_amount) FROM Programs WHERE (state = 'Texas' OR state = 'California') AND focus = 'Art';"}
{"prompt":"What are the total number of movies released in the 'Comedy' genre and the 'Action' genre, combined, that have a production budget over 100 million dollars? with given SQL schema CREATE TABLE Movies (MovieId INT, Title VARCHAR(100), Genre VARCHAR(50), ReleaseYear INT, ProductionBudget DECIMAL(10,2));","completion":"SELECT SUM(CASE WHEN Genre IN ('Comedy', 'Action') THEN 1 ELSE 0 END) AS TotalComedyAndActionMovies, SUM(CASE WHEN Genre IN ('Comedy', 'Action') AND ProductionBudget > 100000000 THEN 1 ELSE 0 END) AS TotalComedyAndActionBlockbusters FROM Movies;"}
{"prompt":"What is the total revenue generated by African-American movies released in 2020? with given SQL schema CREATE TABLE african_american_movies (id INT PRIMARY KEY, name VARCHAR(255), release_year INT, revenue INT); INSERT INTO african_american_movies (id, name, release_year, revenue) VALUES (1, 'Black Panther', 2020, 150000000), (2, 'Us', 2020, 175000000), (3, 'Harriet', 2020, 45000000);","completion":"SELECT SUM(revenue) FROM african_american_movies WHERE release_year = 2020;"}
{"prompt":"Insert a new compliance violation for dispensary 1 on 2022-01-05 with the description 'Expired products'. with given SQL schema CREATE TABLE compliance_violations (id INT, dispensary_id INT, violation_date DATE, description TEXT); INSERT INTO compliance_violations (id, dispensary_id, violation_date, description) VALUES (1, 1, '2021-02-15', 'Inadequate labeling'), (2, 2, '2021-03-02', 'Improper storage'), (3, 3, '2021-06-28', 'Expired products');","completion":"INSERT INTO compliance_violations (dispensary_id, violation_date, description) VALUES (1, '2022-01-05', 'Expired products');"}
{"prompt":"Who are the top 3 customers by total purchases from the 'Green Earth' dispensary? with given SQL schema CREATE TABLE Customers (CustomerID INT, CustomerName VARCHAR(255)); CREATE TABLE Purchases (PurchaseID INT, CustomerID INT, DispensaryName VARCHAR(255), TotalPaid DECIMAL(10,2)); INSERT INTO Customers (CustomerID, CustomerName) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Jim Brown'), (4, 'Jake White'); INSERT INTO Purchases (PurchaseID, CustomerID, DispensaryName, TotalPaid) VALUES (1, 1, 'Green Earth', 100.00), (2, 1, 'Green Earth', 200.00), (3, 2, 'Green Earth', 150.00), (4, 3, 'Green Earth', 50.00), (5, 4, 'Green Earth', 300.00);","completion":"SELECT CustomerName, SUM(TotalPaid) AS TotalPurchases FROM Customers JOIN Purchases ON Customers.CustomerID = Purchases.CustomerID WHERE DispensaryName = 'Green Earth' GROUP BY CustomerName ORDER BY TotalPurchases DESC LIMIT 3;"}
{"prompt":"How many cases did attorney 'Jane Doe' handle in total? with given SQL schema CREATE TABLE Attorneys (AttorneyID int, Name varchar(50), Specialty varchar(50)); INSERT INTO Attorneys (AttorneyID, Name, Specialty) VALUES (2, 'Jane Doe', 'Civil'); CREATE TABLE Cases (CaseID int, ClientID int, Category varchar(50), AttorneyID int); INSERT INTO Cases (CaseID, ClientID, Category, AttorneyID) VALUES (301, 3, 'Civil', 2);","completion":"SELECT COUNT(*) as TotalCases FROM Cases WHERE AttorneyID = (SELECT AttorneyID FROM Attorneys WHERE Name = 'Jane Doe');"}
{"prompt":"Show the chemical name and its production cost for the lowest costing chemical with given SQL schema CREATE TABLE chemical_costs (chemical VARCHAR(20), cost FLOAT); INSERT INTO chemical_costs (chemical, cost) VALUES ('Eco-friendly Polymer', 425.50), ('Nano Polymer', 402.12), ('Smart Polymer', 450.00), ('Carbon Nanotube', 600.00), ('Graphene', 650.00), ('Buckyball', 680.00);","completion":"SELECT chemical, cost FROM chemical_costs ORDER BY cost ASC LIMIT 1;"}
{"prompt":"Which countries received shipments of Chemical E in the last 3 months? with given SQL schema CREATE TABLE shipments (id INT, product VARCHAR(255), shipped_to VARCHAR(255), shipped_date DATE); INSERT INTO shipments (id, product, shipped_to, shipped_date) VALUES (1, 'Chemical A', 'Canada', '2022-05-21'), (2, 'Chemical B', 'USA', '2022-04-15'), (3, 'Chemical A', 'Canada', '2022-07-05'), (4, 'Chemical E', 'Mexico', '2022-06-10'), (5, 'Chemical E', 'Brazil', '2022-06-25');","completion":"SELECT DISTINCT shipped_to FROM shipments WHERE product = 'Chemical E' AND shipped_date >= '2022-04-01'"}
{"prompt":"List the number of community health centers and infectious disease tracking facilities in 'southwest' regions. with given SQL schema CREATE TABLE centers (id INT, name TEXT, region TEXT); INSERT INTO centers (id, name, region) VALUES (1, 'Center A', 'southwest'); INSERT INTO centers (id, name, region) VALUES (2, 'Center B', 'northeast'); INSERT INTO centers (id, name, region) VALUES (3, 'Center C', 'northwest'); CREATE TABLE diseases (id INT, name TEXT, region TEXT); INSERT INTO diseases (id, name, region) VALUES (1, 'Disease A', 'southwest'); INSERT INTO diseases (id, name, region) VALUES (2, 'Disease B', 'southeast');","completion":"SELECT COUNT(*) FROM ( (SELECT * FROM centers WHERE region = 'southwest') UNION (SELECT * FROM diseases WHERE region = 'southwest') );"}
{"prompt":"What is the total production (in metric tons) of organic crops in Oceania, broken down by crop type? with given SQL schema CREATE TABLE organic_crops (crop_id INT, crop_name TEXT, country TEXT, production_tons FLOAT); INSERT INTO organic_crops (crop_id, crop_name, country, production_tons) VALUES (1, 'Wheat', 'Australia', 1500.0), (2, 'Barley', 'New Zealand', 1200.0), (3, 'Corn', 'Papua New Guinea', 2000.0);","completion":"SELECT crop_name, SUM(production_tons) FROM organic_crops WHERE country = 'Oceania' GROUP BY crop_name;"}
{"prompt":"Update the accommodation type for a student with a StudentID of 2 from 'Assistive Listening Devices' to 'Sign Language Interpretation'. with given SQL schema CREATE TABLE StudentAccommodations (StudentID INT, StudentName VARCHAR(255), DisabilityType VARCHAR(255), AccommodationType VARCHAR(255), GraduationYear INT); INSERT INTO StudentAccommodations (StudentID, StudentName, DisabilityType, AccommodationType, GraduationYear) VALUES (1, 'John Doe', 'Visual Impairment', 'Sign Language Interpretation', 2018), (2, 'Jane Smith', 'Hearing Impairment', 'Assistive Listening Devices', NULL), (3, 'Michael Johnson', 'Mobility Impairment', 'Assistive Technology', 2019), (4, 'Sara Johnson', 'Physical Disability', 'Mobility Assistance', 2022);","completion":"UPDATE StudentAccommodations SET AccommodationType = 'Sign Language Interpretation' WHERE StudentID = 2;"}
{"prompt":"What is the total number of disability support programs offered in urban and rural areas, and the percentage of total programs for each area type? with given SQL schema CREATE TABLE programs (program_id INT, program_name VARCHAR(255), area_type VARCHAR(255));","completion":"SELECT area_type, COUNT(*) as total_programs, ROUND(COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM programs) , 2) as percentage_of_total FROM programs WHERE area_type IN ('urban', 'rural') GROUP BY area_type;"}
{"prompt":"Who are the top 5 decentralized applications by transaction volume in South America? with given SQL schema CREATE TABLE dapps (id INT, name VARCHAR(50), daily_tx_volume INT); INSERT INTO dapps (id, name, daily_tx_volume) VALUES (1, 'App1', 1000), (2, 'App2', 2000), (3, 'App3', 3000), (4, 'App4', 4000), (5, 'App5', 5000), (6, 'App6', 6000);","completion":"SELECT name, SUM(daily_tx_volume) as total_tx_volume, RANK() OVER (ORDER BY SUM(daily_tx_volume) DESC) as rank FROM dapps WHERE region = 'South America' GROUP BY name;"}
{"prompt":"How many wildlife habitats in South Africa have a total area greater than 50000 hectares? with given SQL schema CREATE TABLE wildlife_habitats (id INT, name TEXT, area REAL, country TEXT);","completion":"SELECT COUNT(*) FROM wildlife_habitats WHERE country = 'South Africa' GROUP BY country HAVING SUM(area) > 50000;"}
{"prompt":"Provide the number of wildlife species in the 'Amazon' region. with given SQL schema CREATE TABLE wildlife_species (region VARCHAR(255), species INT); INSERT INTO wildlife_species (region, species) VALUES ('Amazon', 500), ('Congo', 400), ('Boreal', 300), ('Temperate', 600);","completion":"SELECT region, SUM(species) FROM wildlife_species WHERE region = 'Amazon';"}
{"prompt":"What is the total area of wildlife habitats for each country? with given SQL schema CREATE TABLE country_habitat (country VARCHAR(255), habitat_name VARCHAR(255), area_ha INT); INSERT INTO country_habitat (country, habitat_name, area_ha) VALUES ('Canada', 'Habitat1', 5000), ('Canada', 'Habitat2', 7000), ('USA', 'Habitat3', 8000), ('USA', 'Habitat4', 6000), ('Mexico', 'Habitat5', 9000);","completion":"SELECT country, SUM(area_ha) FROM country_habitat GROUP BY country;"}
{"prompt":"Which country sources the most organic ingredients for cosmetics? with given SQL schema CREATE TABLE cosmetics.ingredient_sourcing (ingredient_id INT, ingredient_name VARCHAR(50), country VARCHAR(50), is_organic BOOLEAN); INSERT INTO cosmetics.ingredient_sourcing (ingredient_id, ingredient_name, country, is_organic) VALUES (1, 'Aloe Vera', 'Mexico', true), (2, 'Jojoba Oil', 'Argentina', true), (3, 'Rosehip Oil', 'Chile', true), (4, 'Shea Butter', 'Ghana', true), (5, 'Coconut Oil', 'Philippines', false);","completion":"SELECT country, SUM(is_organic) as total_organic_ingredients FROM cosmetics.ingredient_sourcing GROUP BY country ORDER BY total_organic_ingredients DESC LIMIT 1;"}
{"prompt":"Delete all records in the Makeup table with a Revenue less than 25000. with given SQL schema CREATE TABLE Makeup (Brand VARCHAR(50), Category VARCHAR(50), Revenue DECIMAL(10,2)); INSERT INTO Makeup (Brand, Category, Revenue) VALUES ('BrandA', 'Cruelty-Free', 50000), ('BrandB', 'Cruelty-Free', 40000), ('BrandC', 'Cruelty-Free', 30000), ('BrandD', 'Not Cruelty-Free', 15000), ('BrandE', 'Not Cruelty-Free', 20000);","completion":"DELETE FROM Makeup WHERE Revenue < 25000;"}
{"prompt":"Identify the most frequently purchased beauty product by customers from the US. with given SQL schema CREATE TABLE customer_purchases (customer_id INT, product_name VARCHAR(50), purchase_date DATE, country VARCHAR(50)); INSERT INTO customer_purchases (customer_id, product_name, purchase_date, country) VALUES (1, 'Lipstick', '2021-01-01', 'US'), (2, 'Mascara', '2021-01-05', 'US'), (3, 'Lipstick', '2021-01-10', 'CA'), (4, 'Lipstick', '2021-01-15', 'US'), (5, 'Foundation', '2021-01-20', 'US');","completion":"SELECT product_name, COUNT(*) as purchase_count FROM customer_purchases WHERE country = 'US' GROUP BY product_name ORDER BY purchase_count DESC LIMIT 1;"}
{"prompt":"What is the total revenue of cruelty-free skincare products in Belgium? with given SQL schema CREATE TABLE CrueltyFreeSkincare (product VARCHAR(255), country VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO CrueltyFreeSkincare (product, country, revenue) VALUES ('Cleanser', 'Belgium', 600), ('Toner', 'Belgium', 700), ('Moisturizer', 'Belgium', 800);","completion":"SELECT SUM(revenue) FROM CrueltyFreeSkincare WHERE country = 'Belgium';"}
{"prompt":"How many cultural events were held in Canada in 2021? with given SQL schema CREATE TABLE CulturalEvents (id INT, country VARCHAR(20), year INT, events_held INT); INSERT INTO CulturalEvents (id, country, year, events_held) VALUES (1, 'Canada', 2021, 100), (2, 'USA', 2021, 150), (3, 'Canada', 2020, 75);","completion":"SELECT SUM(events_held) FROM CulturalEvents WHERE country = 'Canada' AND year = 2021;"}
{"prompt":"What are the names and maintenance costs of all military equipment in the Atlantic region with a maintenance cost less than $5000? with given SQL schema CREATE TABLE MilitaryEquipment (equipment_id INT, name VARCHAR(255), region VARCHAR(255), maintenance_cost FLOAT); INSERT INTO MilitaryEquipment (equipment_id, name, region, maintenance_cost) VALUES (1, 'Tank A', 'Pacific', 5000), (2, 'Helicopter B', 'Pacific', 7000), (3, 'Ship C', 'Atlantic', 4000);","completion":"SELECT name, maintenance_cost FROM MilitaryEquipment WHERE region = 'Atlantic' AND maintenance_cost < 5000;"}
{"prompt":"How many military innovation patents were filed by China in 2015? with given SQL schema CREATE TABLE patents (id INT, country VARCHAR(255), year INT, patent_name VARCHAR(255)); INSERT INTO patents (id, country, year, patent_name) VALUES (1, 'China', 2015, 'Directed Energy Weapon');","completion":"SELECT COUNT(*) FROM patents WHERE country = 'China' AND year = 2015;"}
{"prompt":"What is the total humanitarian assistance provided (in USD) by each country in the 'humanitarian_assistance' table, for operations in 'Africa'? with given SQL schema CREATE TABLE humanitarian_assistance (id INT, country VARCHAR(50), region VARCHAR(50), amount INT);","completion":"SELECT country, SUM(amount) as total_assistance FROM humanitarian_assistance WHERE region = 'Africa' GROUP BY country;"}
{"prompt":"What is the total number of military innovation patents issued to each country in the last 3 years? with given SQL schema CREATE TABLE Military_Innovation_Patents (id INT, country VARCHAR(50), year INT); CREATE TABLE Countries (id INT, name VARCHAR(50), region VARCHAR(50));","completion":"SELECT co.name, COUNT(mi.year) FROM Military_Innovation_Patents mi INNER JOIN Countries co ON mi.country = co.name WHERE mi.year BETWEEN (YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY co.name;"}
{"prompt":"What is the total investment of clients with the last name \"Patel\" in any fund? with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(50), investment FLOAT); CREATE TABLE fund_investments (client_id INT, fund_name VARCHAR(50), investment FLOAT);","completion":"SELECT SUM(investment) FROM clients INNER JOIN fund_investments ON clients.client_id = fund_investments.client_id WHERE clients.name LIKE '%Patel';"}
{"prompt":"Retrieve all details of vessels that have a capacity greater than 10000 TEUs with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), vessel_type VARCHAR(50), capacity INT); INSERT INTO vessels VALUES (1, 'Ever Ace', 'Container Ship', 24000); INSERT INTO vessels VALUES (2, 'Seaspan Rely', 'Container Ship', 15000); INSERT INTO vessels VALUES (3, 'Gas Leader', 'LNG Carrier', 145000); INSERT INTO vessels VALUES (4, 'Ocean Titan', 'Bulk Carrier', 120000);","completion":"SELECT * FROM vessels WHERE capacity > 10000;"}
{"prompt":"What is the average tonnage of all cargo handled in the 'cargo_handling' table for the month of April? with given SQL schema CREATE TABLE cargo_handling (id INT, cargo_id INT, handling_date DATE, tonnage INT, PRIMARY KEY(id));","completion":"SELECT AVG(tonnage) FROM cargo_handling WHERE MONTH(handling_date) = 4;"}
{"prompt":"Show the number of workers employed in ethical manufacturing for each factory. with given SQL schema CREATE TABLE factories(factory_id INT, name TEXT, location TEXT); CREATE TABLE ethical_manufacturing(factory_id INT, worker_count INT);","completion":"SELECT f.name, SUM(em.worker_count) as total_workers FROM factories f JOIN ethical_manufacturing em ON f.factory_id = em.factory_id GROUP BY f.name;"}
{"prompt":"What is the total number of hospital beds in hospitals in Texas that specialize in cancer treatment? with given SQL schema CREATE TABLE hospitals (id INT, name VARCHAR(50), state VARCHAR(25), num_beds INT, specialty VARCHAR(50)); INSERT INTO hospitals (id, name, state, num_beds, specialty) VALUES (1, 'Hospital A', 'Texas', 60, 'cancer'), (2, 'Hospital B', 'Texas', 30, 'general practice'), (3, 'Hospital C', 'California', 75, 'cardiology');","completion":"SELECT SUM(num_beds) FROM hospitals WHERE state = 'Texas' AND specialty = 'cancer';"}
{"prompt":"Calculate the overall average age of teachers with given SQL schema SELECT AVG(Age) as AverageAge FROM Teachers;","completion":"SELECT AVG(Age) as AverageAge FROM Teachers;"}
{"prompt":"What is the average mental health score for students in traditional courses? with given SQL schema CREATE TABLE students (student_id INT, course_id INT, mental_health_score INT); INSERT INTO students (student_id, course_id, mental_health_score) VALUES (6, 15, 80), (7, 16, 85), (8, 17, 70), (9, 18, 90), (10, 19, 65); CREATE TABLE courses (course_id INT, course_type VARCHAR(20)); INSERT INTO courses (course_id, course_type) VALUES (15, 'Traditional'), (16, 'Open Pedagogy'), (17, 'Traditional'), (18, 'Open Pedagogy'), (19, 'Open Pedagogy');","completion":"SELECT AVG(students.mental_health_score) FROM students JOIN courses ON students.course_id = courses.course_id WHERE courses.course_type = 'Traditional';"}
{"prompt":"What is the average salary of male and female employees in the 'employees' table? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(255), gender VARCHAR(255), country VARCHAR(255), salary DECIMAL(10,2)); INSERT INTO employees (id, name, gender, country, salary) VALUES (1, 'John Doe', 'Male', 'USA', 50000); INSERT INTO employees (id, name, gender, country, salary) VALUES (2, 'Jane Smith', 'Female', 'Canada', 60000); INSERT INTO employees (id, name, gender, country, salary) VALUES (3, 'Alice Johnson', 'Female', 'USA', 55000);","completion":"SELECT gender, AVG(salary) FROM employees GROUP BY gender;"}
{"prompt":"What is the production count for well 'A01' in the 'Gulf of Mexico'? with given SQL schema CREATE TABLE wells (well_id VARCHAR(10), well_location VARCHAR(20)); INSERT INTO wells (well_id, well_location) VALUES ('A01', 'Gulf of Mexico'); CREATE TABLE production (well_id VARCHAR(10), production_count INT); INSERT INTO production (well_id, production_count) VALUES ('A01', 5000);","completion":"SELECT production_count FROM production WHERE well_id = 'A01';"}
{"prompt":"Which athletes have the most gold medals in the Winter Olympics? with given SQL schema CREATE TABLE winter_olympics (athlete TEXT, gold INT, silver INT, bronze INT, year INT);","completion":"SELECT athlete, SUM(gold) FROM winter_olympics GROUP BY athlete ORDER BY SUM(gold) DESC LIMIT 1;"}
{"prompt":"Which basketball players have scored the most points in a single season? with given SQL schema CREATE TABLE points (player_id INT, name TEXT, team TEXT, position TEXT, points_per_game FLOAT, season_points INT); INSERT INTO points (player_id, name, team, position, points_per_game, season_points) VALUES (1, 'Stephen Curry', 'Golden State Warriors', 'Guard', 32.0, 2454), (2, 'LeBron James', 'Los Angeles Lakers', 'Forward', 25.0, 2173);","completion":"SELECT p.name, p.season_points FROM points p ORDER BY p.season_points DESC;"}
{"prompt":"How many organizations provide 'food_support' in 'refugee_camps' and 'disaster_zones'? with given SQL schema CREATE TABLE refugee_camps (id INT, num_orgs INT, services VARCHAR(50));CREATE TABLE disaster_zones (id INT, num_orgs INT, services VARCHAR(50));","completion":"SELECT SUM(num_orgs) FROM refugee_camps WHERE services LIKE '%food_support%' UNION SELECT SUM(num_orgs) FROM disaster_zones WHERE services LIKE '%food_support%';"}
{"prompt":"Add a new eco-friendly factory with employee details. with given SQL schema CREATE TABLE factories (id INT, name VARCHAR(50), country VARCHAR(50), eco_friendly BOOLEAN, workers INT); INSERT INTO factories (id, name, country, eco_friendly, workers) VALUES (1, 'Factory A', 'India', true, 200), (2, 'Factory B', 'Bangladesh', false, 150);","completion":"INSERT INTO factories (id, name, country, eco_friendly, workers) VALUES (3, 'Green Mill', 'Vietnam', true, 300);"}
{"prompt":"What is the minimum wage in factories in Africa? with given SQL schema CREATE TABLE FactoryWages (factory_id INT, wage DECIMAL); INSERT INTO FactoryWages (factory_id, wage) VALUES (1, 5.00), (2, 7.00), (3, 4.00); CREATE TABLE Factories (factory_id INT, region VARCHAR(50)); INSERT INTO Factories (factory_id, region) VALUES (1, 'Africa'), (2, 'Europe'), (3, 'Asia');","completion":"SELECT MIN(wage) FROM FactoryWages INNER JOIN Factories ON FactoryWages.factory_id = Factories.factory_id WHERE Factories.region = 'Africa';"}
{"prompt":"What is the minimum wage in factories, by country, for the last 3 years? with given SQL schema CREATE SCHEMA ethical_fashion; CREATE TABLE factories (factory_id INT, country VARCHAR(255), wage FLOAT, year INT); INSERT INTO factories VALUES (1,'USA',9.0,2020),(2,'USA',9.5,2019),(3,'USA',8.5,2018),(4,'Canada',12.0,2020),(5,'Canada',11.5,2019),(6,'Canada',10.5,2018);","completion":"SELECT country, year, MIN(wage) OVER (PARTITION BY country) FROM ethical_fashion.factories WHERE year BETWEEN 2018 AND 2020 ORDER BY country, year;"}
{"prompt":"How many textile factories are present in each region and their respective waste generation? with given SQL schema CREATE TABLE textile_factories (factory_name VARCHAR(255), region VARCHAR(255), waste_generation INT);","completion":"SELECT region, COUNT(*) as factory_count, SUM(waste_generation) as total_waste FROM textile_factories GROUP BY region;"}
{"prompt":"Which Shariah-compliant financial institutions offer socially responsible loans in Southeast Asia? with given SQL schema CREATE TABLE financial_institutions (name TEXT, location TEXT, shariah_compliant BOOLEAN); CREATE TABLE loans (institution_name TEXT, loan_type TEXT, socially_responsible BOOLEAN); INSERT INTO financial_institutions (name, location, shariah_compliant) VALUES ('ABC Bank', 'Singapore', TRUE), ('Islamic Finance Corporation', 'Malaysia', TRUE); INSERT INTO loans (institution_name, loan_type, socially_responsible) VALUES ('ABC Bank', 'Microfinance Loan', TRUE), ('Islamic Finance Corporation', 'Green Loan', TRUE);","completion":"SELECT f.name FROM financial_institutions f INNER JOIN loans l ON f.name = l.institution_name WHERE f.shariah_compliant = TRUE AND l.socially_responsible = TRUE AND f.location LIKE 'Southeast%';"}
{"prompt":"How many dairy-free desserts are available in France? with given SQL schema CREATE TABLE Desserts(id INT, name TEXT, is_dairy_free BOOLEAN, country TEXT); INSERT INTO Desserts(id, name, is_dairy_free, country) VALUES (1, 'Fruit Salad', TRUE, 'France'), (2, 'Chocolate Mousse', FALSE, 'France');","completion":"SELECT COUNT(*) FROM Desserts WHERE is_dairy_free = TRUE AND country = 'France';"}
{"prompt":"Delete all shipments with item XYZ with given SQL schema CREATE TABLE shipments(id INT, item VARCHAR(255), load_date DATE); INSERT INTO shipments VALUES(1, 'XYZ', '2022-01-01'), (2, 'ABC', '2022-02-01');","completion":"DELETE FROM shipments WHERE item = 'XYZ';"}
{"prompt":"List the top 2 countries with the most bioprocess engineering patents in 2021. with given SQL schema CREATE SCHEMA if not exists bioprocess;CREATE TABLE if not exists bioprocess.patents (id INT, year INT, country VARCHAR(255), patent_count INT); INSERT INTO bioprocess.patents (id, year, country, patent_count) VALUES (1, 2020, 'USA', 1200), (2, 2021, 'Germany', 900), (3, 2021, 'China', 1500), (4, 2020, 'India', 700), (5, 2021, 'Brazil', 800);","completion":"SELECT country, SUM(patent_count) as total_patent_count FROM bioprocess.patents WHERE year = 2021 GROUP BY country ORDER BY total_patent_count DESC LIMIT 2;"}
{"prompt":"Count the number of public hearings held in each district in the last 6 months with given SQL schema CREATE TABLE PublicHearings (HearingID INT, District TEXT, HearingDate DATE); INSERT INTO PublicHearings (HearingID, District, HearingDate) VALUES (1, 'District1', '2023-01-01'), (2, 'District2', '2023-02-15'), (3, 'District1', '2023-03-01');","completion":"SELECT District, COUNT(*) FROM PublicHearings WHERE HearingDate >= DATEADD(month, -6, GETDATE()) GROUP BY District;"}
{"prompt":"What was the average funding for 'Climate Change' initiatives provided by the US in 2021? with given SQL schema CREATE TABLE USFunding (Funder VARCHAR(50), Sector VARCHAR(50), FundingAmount NUMERIC(15,2), Year INT); INSERT INTO USFunding (Funder, Sector, FundingAmount, Year) VALUES ('US', 'Climate Change', 450000, 2021), ('US', 'Climate Change', 500000, 2021), ('US', 'Climate Change', 350000, 2021);","completion":"SELECT AVG(FundingAmount) FROM USFunding WHERE Sector = 'Climate Change' AND Year = 2021 AND Funder = 'US';"}
{"prompt":"How many solar power projects were completed in California since 2015 with a budget over $5 million? with given SQL schema CREATE TABLE projects (id INT, state VARCHAR(20), year_completed INT, budget FLOAT, project_type VARCHAR(20)); INSERT INTO projects (id, state, year_completed, budget, project_type) VALUES (1, 'California', 2014, 4000000, 'Wind'), (2, 'California', 2016, 6000000, 'Solar'), (3, 'California', 2017, 3000000, 'Solar'), (4, 'California', 2018, 7000000, 'Wind');","completion":"SELECT COUNT(*) FROM projects WHERE state = 'California' AND year_completed >= 2015 AND project_type = 'Solar' AND budget > 5000000;"}
{"prompt":"Calculate the total revenue of virtual tourism events in the United States. with given SQL schema CREATE TABLE events (id INT, name TEXT, country TEXT, type TEXT, revenue INT); INSERT INTO events (id, name, country, type, revenue) VALUES (1, 'Virtual Tourism New York', 'USA', 'virtual', 30000), (2, 'Virtual Tourism Los Angeles', 'USA', 'virtual', 40000);","completion":"SELECT SUM(revenue) FROM events WHERE country = 'USA' AND type = 'virtual';"}
{"prompt":"Count the number of indigenous communities in each Arctic country. with given SQL schema CREATE TABLE indigenous_communities (id INT, community_name VARCHAR, country VARCHAR);","completion":"SELECT country, COUNT(DISTINCT community_name) as community_count FROM indigenous_communities GROUP BY country;"}
{"prompt":"What is the minimum age of patients who received therapy in Colorado? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender TEXT, treatment TEXT, state TEXT); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (1, 30, 'Female', 'CBT', 'Texas'); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (2, 45, 'Male', 'DBT', 'California'); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (3, 25, 'Non-binary', 'Therapy', 'Washington'); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (4, 18, 'Male', 'Therapy', 'Colorado');","completion":"SELECT MIN(age) FROM patients WHERE treatment = 'Therapy' AND state = 'Colorado';"}
{"prompt":"What is the total budget of mental health campaigns launched in 'Northeast' region in 2022? with given SQL schema CREATE TABLE campaigns_2022 (campaign_id INT, name VARCHAR(50), budget INT, region VARCHAR(50)); INSERT INTO campaigns_2022 (campaign_id, name, budget, region) VALUES (1, 'Hope Rises', 10000, 'Northeast'), (2, 'Mindful Living', 12000, 'Northeast'), (3, 'Emotional Wellbeing', 15000, 'Midwest');","completion":"SELECT SUM(budget) FROM campaigns_2022 WHERE region = 'Northeast';"}
{"prompt":"What is the youngest age of a patient diagnosed with depression in 2021? with given SQL schema CREATE TABLE diagnoses (patient_id INT, age INT, diagnosis_name VARCHAR(50), diagnosis_date DATE); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (6, 22, 'Depression', '2021-08-18'); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (7, 35, 'Depression', '2021-12-11'); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (8, 42, 'Depression', '2021-05-03');","completion":"SELECT MIN(age) FROM diagnoses WHERE diagnosis_name = 'Depression' AND YEAR(diagnosis_date) = 2021;"}
{"prompt":"What is the minimum cost of tunnel projects in the Central region? with given SQL schema CREATE TABLE InfrastructureProjects (id INT, name VARCHAR(100), region VARCHAR(50), project_type VARCHAR(50), cost FLOAT); INSERT INTO InfrastructureProjects (id, name, region, project_type, cost) VALUES (1, 'Denver Tunnel', 'Central', 'tunnel', 20000000);","completion":"SELECT MIN(cost) FROM InfrastructureProjects WHERE region = 'Central' AND project_type = 'tunnel';"}
{"prompt":"Summarize the total number of eco-tourists who visited Japan, Thailand, and Indonesia in Q1 and Q2 of 2021 with given SQL schema CREATE TABLE EcoTouristsQ1Q2 (country VARCHAR(255), quarter INT, eco_tourists INT); INSERT INTO EcoTouristsQ1Q2 (country, quarter, eco_tourists) VALUES ('Japan', 1, 1100000), ('Japan', 2, 1300000), ('Thailand', 1, 1500000), ('Thailand', 2, 1700000), ('Indonesia', 1, 1900000), ('Indonesia', 2, 2100000);","completion":"SELECT country, SUM(eco_tourists) AS total_eco_tourists FROM EcoTouristsQ1Q2 WHERE country IN ('Japan', 'Thailand', 'Indonesia') AND quarter IN (1, 2) GROUP BY country;"}
{"prompt":"Insert a new marine species record for the Mariana Trench with ID 4, species 'Angler Fish', location 'Mariana Trench', year 2019, and population 100. with given SQL schema CREATE TABLE marine_species_research (id INT, species TEXT, location TEXT, year INT, population INT);","completion":"INSERT INTO marine_species_research (id, species, location, year, population) VALUES (4, 'Angler Fish', 'Mariana Trench', 2019, 100);"}
{"prompt":"List the top 3 most represented ethnicities in movies produced in the USA. with given SQL schema CREATE TABLE movies (title VARCHAR(255), production_country VARCHAR(64), lead_actor_ethnicity VARCHAR(64));","completion":"SELECT lead_actor_ethnicity, COUNT(*) AS count FROM movies WHERE production_country = 'USA' GROUP BY lead_actor_ethnicity ORDER BY count DESC LIMIT 3;"}
{"prompt":"What is the average quantity of 'Local Greens' sold per day in the Southeast region? with given SQL schema CREATE TABLE Daily_Region_Sales(Date DATE, Region VARCHAR(20), Menu_Item VARCHAR(30), Quantity INT); INSERT INTO Daily_Region_Sales(Date, Region, Menu_Item, Quantity) VALUES('2022-01-01', 'Southeast', 'Local Greens', 10), ('2022-01-02', 'Southeast', 'Local Greens', 15);","completion":"SELECT AVG(Quantity) as Average_Quantity FROM Daily_Region_Sales WHERE Menu_Item = 'Local Greens' AND Region = 'Southeast';"}
{"prompt":"What are the total copper exports and CO2 emissions from Chile between 2016 and 2018? with given SQL schema CREATE TABLE chile_copper_export (year INT, export_amount FLOAT); INSERT INTO chile_copper_export (year, export_amount) VALUES (2016, 15000.0), (2017, 16000.0), (2018, 17000.0); CREATE TABLE chile_co2_emission (year INT, emission FLOAT); INSERT INTO chile_co2_emission (year, emission) VALUES (2016, 100.0), (2017, 105.0), (2018, 110.0);","completion":"SELECT SUM(chile_copper_export.export_amount), SUM(chile_co2_emission.emission) FROM chile_copper_export INNER JOIN chile_co2_emission ON chile_copper_export.year = chile_co2_emission.year WHERE chile_copper_export.year BETWEEN 2016 AND 2018;"}
{"prompt":"What is the average productivity of miners in Australia, and what is the total production volume of the mining companies they work for? with given SQL schema CREATE TABLE miners (miner_id INT, miner_name TEXT, company_id INT, productivity INT); CREATE TABLE mining_companies (company_id INT, company_name TEXT, production_volume INT); INSERT INTO miners (miner_id, miner_name, company_id, productivity) VALUES (1, 'Mike Brown', 1, 10), (2, 'Sarah Lee', 1, 12), (3, 'Tom White', 2, 15); INSERT INTO mining_companies (company_id, company_name, production_volume) VALUES (1, 'XYZ Mining', 500), (2, 'ABC Mining', 700);","completion":"SELECT AVG(miners.productivity), SUM(mining_companies.production_volume) FROM miners INNER JOIN mining_companies ON miners.company_id = mining_companies.company_id WHERE miners.miner_name LIKE '%Australia%';"}
{"prompt":"Which mining operations have a higher than average environmental impact? with given SQL schema CREATE TABLE mining_operations (operation_id INT, operation_name VARCHAR(50), environmental_impact DECIMAL(5,2)); INSERT INTO mining_operations (operation_id, operation_name, environmental_impact) VALUES (1, 'Operation A', 3.2), (2, 'Operation B', 4.5), (3, 'Operation C', 2.9);","completion":"SELECT operation_name FROM mining_operations WHERE environmental_impact > (SELECT AVG(environmental_impact) FROM mining_operations);"}
{"prompt":"What is the total number of broadband customers and the total connection speed in Mbps for each region in 2021? with given SQL schema CREATE TABLE subscribers (id INT, service VARCHAR(10), region VARCHAR(10)); INSERT INTO subscribers (id, service, region) VALUES (1, 'broadband', 'Northwest'), (2, 'mobile', 'Northwest'), (3, 'broadband', 'Southwest'), (4, 'mobile', 'Southwest'); CREATE TABLE speeds (subscriber_id INT, connection_speed INT, year INT); INSERT INTO speeds (subscriber_id, connection_speed, year) VALUES (1, 550, 2021), (1, 555, 2022), (2, 450, 2021), (2, 460, 2022), (3, 650, 2021), (3, 660, 2022), (4, 400, 2021), (4, 410, 2022);","completion":"SELECT subscribers.region, COUNT(subscribers.id) AS total_customers, SUM(speeds.connection_speed) AS total_speed FROM subscribers JOIN speeds ON subscribers.id = speeds.subscriber_id WHERE subscribers.service = 'broadband' AND speeds.year = 2021 GROUP BY subscribers.region;"}
{"prompt":"What is the total number of subscribers in each product category? with given SQL schema CREATE TABLE product_subscribers (subscriber_id INT, name VARCHAR(255), region VARCHAR(255), mobile_number VARCHAR(20), broadband_speed DECIMAL(10, 2), product_category VARCHAR(255));","completion":"SELECT product_category, COUNT(*) AS num_subscribers FROM product_subscribers GROUP BY product_category;"}
{"prompt":"What is the minimum streaming revenue for users in Japan? with given SQL schema CREATE TABLE japan_streaming (user_id INT, revenue DECIMAL(10, 2)); INSERT INTO japan_streaming (user_id, revenue) VALUES (1, 12.99), (2, 9.99), (3, 15.99);","completion":"SELECT MIN(revenue) AS min_revenue FROM japan_streaming;"}
{"prompt":"Who are the top 3 donors in 2022? with given SQL schema CREATE TABLE donations (donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (donor_id, donation_amount, donation_date) VALUES (1, 50.00, '2021-01-01'), (2, 100.00, '2021-02-14'), (3, 550.00, '2022-01-01'), (4, 300.00, '2022-02-12'), (5, 800.00, '2022-12-31');","completion":"SELECT donor_id, SUM(donation_amount) as total_donated FROM donations WHERE YEAR(donation_date) = 2022 GROUP BY donor_id ORDER BY total_donated DESC LIMIT 3;"}
{"prompt":"Show esports events with a prize pool between the maximum and minimum prize pools in the 'Esports_Events_NA' table. with given SQL schema CREATE TABLE Esports_Events (EventID INT, EventName VARCHAR(100), Location VARCHAR(100), PrizePool DECIMAL(10, 2)); INSERT INTO Esports_Events (EventID, EventName, Location, PrizePool) VALUES (1, 'EventA', 'USA', 100000), (2, 'EventB', 'Canada', 150000), (3, 'EventC', 'Mexico', 75000); CREATE TABLE Esports_Events_NA (EventID INT, EventName VARCHAR(100), Location VARCHAR(100), PrizePool DECIMAL(10, 2)); INSERT INTO Esports_Events_NA (EventID, EventName, Location, PrizePool) VALUES (1, 'EventX', 'USA', 20000), (2, 'EventY', 'Canada', 25000), (3, 'EventZ', 'Mexico', 18000);","completion":"SELECT * FROM Esports_Events WHERE PrizePool BETWEEN (SELECT MAX(PrizePool) FROM Esports_Events_NA) AND (SELECT MIN(PrizePool) FROM Esports_Events_NA);"}
{"prompt":"What is the minimum age of players who play multiplayer games? with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, MaxPlayers INT); INSERT INTO Players (PlayerID, Age, MaxPlayers) VALUES (1, 20, 5);","completion":"SELECT MIN(Age) FROM Players WHERE MaxPlayers > 1;"}
{"prompt":"Find the number of co-owned properties sold in each neighborhood in the last year. with given SQL schema CREATE TABLE Neighborhoods (NeighborhoodID INT, NeighborhoodName VARCHAR(255)); CREATE TABLE Properties (PropertyID INT, NeighborhoodID INT, Sold DATE, CoOwned BOOLEAN);","completion":"SELECT NeighborhoodName, COUNT(*) AS CoOwnedPropertiesSoldCount FROM Properties JOIN Neighborhoods ON Properties.NeighborhoodID = Neighborhoods.NeighborhoodID WHERE CoOwned = 1 AND Sold >= DATEADD(year, -1, CURRENT_TIMESTAMP) GROUP BY NeighborhoodName;"}
{"prompt":"What is the total CO2 emissions (in metric tons) of the carbon offset program 'Plant a Tree'? with given SQL schema CREATE TABLE carbon_offset (id INT, name TEXT, co2_emissions FLOAT); INSERT INTO carbon_offset (id, name, co2_emissions) VALUES (1, 'Plant a Tree', 1000.0), (2, 'Recycle Electronics', 1500.0);","completion":"SELECT SUM(co2_emissions) FROM carbon_offset WHERE name = 'Plant a Tree';"}
{"prompt":"Display the number of sustainable menu items for each restaurant and the percentage of the menu that is sustainable. with given SQL schema CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255)); CREATE TABLE MenuItems (MenuID int, MenuName varchar(255), RestaurantID int, IsSustainable bit);","completion":"SELECT R.RestaurantName, COUNT(MI.IsSustainable) as SustainableCount, (COUNT(MI.IsSustainable) * 100.0 \/ (SELECT COUNT(*) FROM MenuItems WHERE RestaurantID = R.RestaurantID)) as SustainablePercentage FROM Restaurants R INNER JOIN MenuItems MI ON R.RestaurantID = MI.RestaurantID GROUP BY R.RestaurantID;"}
{"prompt":"Add a new product sourced from a circular supply chain with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(50), sourcing_type VARCHAR(50));","completion":"INSERT INTO products (product_id, product_name, sourcing_type) VALUES (4, 'Product D', 'Circular');"}
{"prompt":"Create a table named 'products' with given SQL schema CREATE TABLE products( product_id INT PRIMARY KEY, name VARCHAR(255), supplier_id INT, quantity_sold INT, price DECIMAL(5,2));","completion":"CREATE TABLE products( product_id INT PRIMARY KEY, name VARCHAR(255), supplier_id INT, quantity_sold INT, price DECIMAL(5,2));"}
{"prompt":"What is the average price of products in the 'Electronics' category that are produced using circular supply chains? with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT, category TEXT, is_circular_supply_chain BOOLEAN, price DECIMAL); INSERT INTO products (product_id, product_name, category, is_circular_supply_chain, price) VALUES (1, 'Refurbished Smartphone', 'Electronics', TRUE, 299.99), (2, 'Reconditioned Laptop', 'Electronics', TRUE, 599.99), (3, 'New Headphones', 'Electronics', FALSE, 99.99);","completion":"SELECT AVG(price) FROM products WHERE category = 'Electronics' AND is_circular_supply_chain = TRUE;"}
{"prompt":"What is the total number of space missions launched by Japan and the USA? with given SQL schema CREATE TABLE space_missions (id INT, mission_name VARCHAR(255), launch_country VARCHAR(255), launch_date DATE); INSERT INTO space_missions (id, mission_name, launch_country, launch_date) VALUES (1, 'Sputnik 1', 'Russia', '1957-10-04'); INSERT INTO space_missions (id, mission_name, launch_country, launch_date) VALUES (2, 'Explorer 1', 'USA', '1958-01-31'); INSERT INTO space_missions (id, mission_name, launch_country, launch_date) VALUES (3, 'Hayabusa', 'Japan', '2003-05-09');","completion":"SELECT SUM(cnt) FROM (SELECT launch_country, COUNT(*) AS cnt FROM space_missions WHERE launch_country IN ('Japan', 'USA') GROUP BY launch_country) AS subquery;"}
{"prompt":"What is the maximum number of fans that attended a single game in the MLB? with given SQL schema CREATE TABLE attendance (id INT, team VARCHAR(50), location VARCHAR(50), fans INT); INSERT INTO attendance (id, team, location, fans) VALUES (1, 'TeamA', 'Home', 1000), (2, 'TeamA', 'Away', 800), (3, 'TeamB', 'Home', 1200), (4, 'TeamB', 'Away', 1500), (5, 'TeamC', 'Home', 2000), (6, 'TeamC', 'Away', 1800);","completion":"SELECT MAX(fans) FROM attendance;"}
{"prompt":"Find the number of unique IP addresses associated with malware activity in the 'Asia-Pacific' region in the past week. with given SQL schema CREATE TABLE malware_activity_v2 (id INT, ip_address VARCHAR(15), malware_type VARCHAR(255), region VARCHAR(100), last_seen DATE); INSERT INTO malware_activity_v2 (id, ip_address, malware_type, region, last_seen) VALUES (4, '10.0.0.2', 'wannacry', 'Asia-Pacific', '2022-01-12'), (5, '10.0.0.3', 'ransomware', 'Asia-Pacific', '2022-01-15'), (6, '10.0.0.4', 'virut', 'Asia-Pacific', '2022-01-18');","completion":"SELECT COUNT(DISTINCT ip_address) FROM malware_activity_v2 WHERE region = 'Asia-Pacific' AND last_seen >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK);"}
{"prompt":"What is the average severity of vulnerabilities found in the 'Network' section for the last month? with given SQL schema CREATE TABLE vulnerabilities (id INT, section VARCHAR(50), severity INT, vulnerability_date DATE); INSERT INTO vulnerabilities (id, section, severity, vulnerability_date) VALUES (1, 'Network', 7, '2022-01-01'), (2, 'Application', 5, '2022-01-02');","completion":"SELECT AVG(severity) as avg_severity FROM vulnerabilities WHERE section = 'Network' AND vulnerability_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"How many electric vehicles does each manufacturer have in the 'vehicle_data' table? with given SQL schema CREATE TABLE vehicle_data (id INT PRIMARY KEY, make VARCHAR(50), model VARCHAR(50), vehicle_type VARCHAR(50), is_ev BOOLEAN, registration_date DATE); INSERT INTO vehicle_data (id, make, model, vehicle_type, is_ev, registration_date) VALUES (1, 'Tesla', 'Model 3', 'Sedan', true, '2020-01-01'); INSERT INTO vehicle_data (id, make, model, vehicle_type, is_ev, registration_date) VALUES (2, 'Nissan', 'Leaf', 'Hatchback', true, '2019-05-15');","completion":"SELECT make, COUNT(*) FROM vehicle_data WHERE is_ev = true GROUP BY make;"}
{"prompt":"What is the total revenue for each retail store in the Northern region? with given SQL schema CREATE TABLE sales (store_id INT, region TEXT, revenue INT); INSERT INTO sales (store_id, region, revenue) VALUES (1, 'Northern', 25000), (2, 'Northern', 30000), (3, 'Northern', 20000);","completion":"SELECT store_id, SUM(revenue) as total_revenue FROM sales WHERE region = 'Northern' GROUP BY store_id;"}
{"prompt":"List the policy numbers, claim amounts, and claim dates for policies that have more than two claims and the total claim amount exceeds $5000 with given SQL schema CREATE TABLE policies (policy_number INT);CREATE TABLE claims (claim_id INT, policy_number INT, claim_amount DECIMAL(10,2), claim_date DATE);","completion":"SELECT p.policy_number, c.claim_amount, c.claim_date FROM policies p INNER JOIN claims c ON p.policy_number = c.policy_number GROUP BY p.policy_number, c.claim_amount, c.claim_date HAVING COUNT(c.claim_id) > 2 AND SUM(c.claim_amount) > 5000;"}
{"prompt":"List all unique cargo types and their respective total weights for vessels 'X' and 'Y' from the 'cargo_tracking' and 'vessels' tables with given SQL schema CREATE TABLE cargo_tracking (cargo_id INT, cargo_type TEXT, weight FLOAT, vessel_id INT); CREATE TABLE vessels (vessel_id INT, vessel_name TEXT);","completion":"SELECT c.cargo_type, SUM(c.weight) as total_weight FROM cargo_tracking c INNER JOIN vessels v ON c.vessel_id = v.vessel_id WHERE v.vessel_name IN ('X', 'Y') GROUP BY c.cargo_type;"}
{"prompt":"Identify the recycling rates for all plastic waste in the year 2020 across different regions. with given SQL schema CREATE TABLE waste_type (waste_type VARCHAR(50)); INSERT INTO waste_type (waste_type) VALUES ('Plastic'), ('Paper'), ('Glass'); CREATE TABLE recycling_rates (waste_type VARCHAR(50), region VARCHAR(50), recycling_rate DECIMAL(5,2)); INSERT INTO recycling_rates (waste_type, region, recycling_rate) VALUES ('Plastic', 'North', 0.35), ('Plastic', 'South', 0.40), ('Plastic', 'East', 0.45), ('Plastic', 'West', 0.50);","completion":"SELECT wt.waste_type, r.region, r.recycling_rate FROM recycling_rates r JOIN waste_type wt ON r.waste_type = wt.waste_type WHERE wt.waste_type = 'Plastic' AND r.year = 2020;"}
{"prompt":"What is the correlation between rainfall and water consumption in Phoenix? with given SQL schema CREATE TABLE Rainfall (Year INT, Rainfall FLOAT); INSERT INTO Rainfall (Year, Rainfall) VALUES (2017, 200.5), (2018, 190.2); CREATE TABLE Household_Water_Usage (Household_ID INT, City VARCHAR(20), Year INT, Water_Consumption FLOAT); INSERT INTO Household_Water_Usage (Household_ID, City, Year, Water_Consumption) VALUES (1, 'Phoenix', 2017, 130.5), (2, 'Phoenix', 2018, 120.2);","completion":"SELECT CORR(Rainfall, Water_Consumption) FROM Rainfall, Household_Water_Usage WHERE Rainfall.Year = Household_Water_Usage.Year AND City = 'Phoenix';"}
{"prompt":"What is the average salary of employees in the Manufacturing department? with given SQL schema CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (3, 'Mike', 'Smith', 'Manufacturing', 78000.00), (4, 'Lucy', 'Johnson', 'Testing', 82000.00);","completion":"SELECT AVG(Salary) AS AvgSalary FROM Employees WHERE Department = 'Manufacturing';"}
{"prompt":"What is the ratio of community education programs to animals in each habitat type? with given SQL schema CREATE TABLE education (id INT, type VARCHAR(50), programs INT); INSERT INTO education (id, type, programs) VALUES (1, 'Forest', 10), (2, 'Savannah', 5), (3, 'Wetlands', 15); CREATE TABLE animal_population (id INT, type VARCHAR(50), animals INT); INSERT INTO animal_population (id, type, animals) VALUES (1, 'Forest', 200), (2, 'Savannah', 300), (3, 'Wetlands', 400);","completion":"SELECT a.type, programs\/animals as ratio FROM education a JOIN animal_population b ON a.type = b.type;"}
{"prompt":"What is the total funding received by the 'Theater' program in the 'Funding' table? with given SQL schema CREATE TABLE Funding (id INT, program VARCHAR(50), location VARCHAR(50), date DATE, amount DECIMAL(10,2)); INSERT INTO Funding (id, program, location, date, amount) VALUES (1, 'Theater', 'California', '2022-01-01', 10000);","completion":"SELECT SUM(amount) FROM Funding WHERE program = 'Theater';"}
{"prompt":"What was the total revenue from art classes by age group in Q3 2022? with given SQL schema CREATE TABLE ArtClasses (ClassID INT, AgeGroup VARCHAR(50), StartDate DATE, EndDate DATE, Price DECIMAL(10,2)); INSERT INTO ArtClasses (ClassID, AgeGroup, StartDate, EndDate, Price) VALUES (1, '5-10', '2022-07-01', '2022-07-31', 100.00), (2, '11-15', '2022-07-01', '2022-07-31', 150.00);","completion":"SELECT SUM(Price) AS TotalRevenue, AgeGroup FROM ArtClasses WHERE MONTH(StartDate) BETWEEN 7 AND 9 GROUP BY AgeGroup;"}
{"prompt":"How many TV shows were released by network per year? with given SQL schema CREATE TABLE tv_shows (id INT, title VARCHAR(100), network VARCHAR(100), release_year INT); INSERT INTO tv_shows (id, title, network, release_year) VALUES (1, 'Show1', 'Network1', 2021), (2, 'Show2', 'Network2', 2021), (3, 'Show3', 'Network1', 2020);","completion":"SELECT network, release_year, COUNT(*) as shows_released FROM tv_shows GROUP BY network, release_year;"}
{"prompt":"How many cultivation licenses have been revoked in Massachusetts in the last month? with given SQL schema CREATE TABLE Licenses (id INT, type TEXT, issue_date DATE, revoke_date DATE);","completion":"SELECT COUNT(*) FROM Licenses WHERE type = 'cultivation' AND revoke_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"How many new raw materials were added in the 'Plastic Production' department in the last week? with given SQL schema CREATE TABLE Raw_Materials (raw_material_id INT, department VARCHAR(20), raw_material_description VARCHAR(100), supply_date DATE);","completion":"SELECT COUNT(*) FROM Raw_Materials WHERE department = 'Plastic Production' AND supply_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"}
{"prompt":"What is the total cost for each project per month? with given SQL schema create table CostData (Project varchar(255), Cost int, Timestamp datetime); insert into CostData values ('Project1', 1000, '2022-01-01 00:00:00'), ('Project2', 1500, '2022-01-02 00:00:00'), ('Project1', 1200, '2022-01-03 00:00:00');","completion":"select Project, DATE_PART('month', Timestamp) as Month, SUM(Cost) as TotalCost from CostData group by Project, Month;"}
{"prompt":"List all climate mitigation projects in Oceania and their respective end dates. with given SQL schema CREATE TABLE climate_mitigation (project_name VARCHAR(255), region VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO climate_mitigation (project_name, region, start_date, end_date) VALUES ('Coral Reef Restoration', 'Oceania', '2020-01-01', '2022-12-31'); INSERT INTO climate_mitigation (project_name, region, start_date, end_date) VALUES ('Mangrove Planting', 'Oceania', '2019-06-15', '2021-05-31');","completion":"SELECT project_name, end_date FROM climate_mitigation WHERE region = 'Oceania';"}
{"prompt":"What is the average investment in climate finance projects in East Asia in the last 5 years? with given SQL schema CREATE TABLE climate_finance_projects (project_id INT, project_type VARCHAR(50), region VARCHAR(50), investment_amount FLOAT, investment_year INT); INSERT INTO climate_finance_projects (project_id, project_type, region, investment_amount, investment_year) VALUES (1, 'climate finance', 'East Asia', 3000000, 2017), (2, 'climate finance', 'East Asia', 3500000, 2018), (3, 'climate finance', 'East Asia', 4000000, 2019), (4, 'climate finance', 'East Asia', 4500000, 2020), (5, 'climate finance', 'East Asia', 5000000, 2021), (6, 'climate finance', 'South East Asia', 2000000, 2018), (7, 'climate finance', 'East Asia', 5500000, 2017), (8, 'climate finance', 'East Asia', 6000000, 2016);","completion":"SELECT AVG(investment_amount) FROM climate_finance_projects WHERE region = 'East Asia' AND investment_year BETWEEN 2017 AND 2021;"}
{"prompt":"What is the minimum temperature increase in Europe in any year since 2000, and what is the year in which it occurred? with given SQL schema CREATE TABLE temperature_data (id INT, region VARCHAR(255), year INT, temperature FLOAT); INSERT INTO temperature_data (id, region, year, temperature) VALUES (1, 'Europe', 2000, 12.3);","completion":"SELECT region, MIN(temperature) AS min_temp, year FROM temperature_data WHERE region = 'Europe' GROUP BY region, year HAVING min_temp = (SELECT MIN(temperature) FROM temperature_data WHERE region = 'Europe');"}
{"prompt":"What is the total number of electric vehicles sold in Africa per year since 2015? with given SQL schema CREATE TABLE VehicleSales (year INT, continent VARCHAR(255), vehicle_type VARCHAR(255), sales INT); INSERT INTO VehicleSales (year, continent, vehicle_type, sales) VALUES (2015, 'Africa', 'Electric', 100), (2016, 'Africa', 'Electric', 200), (2017, 'Africa', 'Electric', 300), (2018, 'Africa', 'Electric', 400), (2019, 'Africa', 'Electric', 500), (2020, 'Africa', 'Electric', 600);","completion":"SELECT year, SUM(sales) AS electric_vehicle_sales FROM VehicleSales WHERE continent = 'Africa' AND vehicle_type = 'Electric' GROUP BY year;"}
{"prompt":"Find the maximum Series B funding amount in the E-Learning sector. with given SQL schema CREATE TABLE funding (id INT, startup_id INT, round TEXT, amount FLOAT);","completion":"SELECT MAX(amount) FROM funding WHERE round = 'Series B' AND industry = 'E-Learning';"}
{"prompt":"Find the number of companies founded by women in each country. with given SQL schema CREATE TABLE Companies (id INT, name TEXT, industry TEXT, country TEXT, founder_gender TEXT); INSERT INTO Companies (id, name, industry, country, founder_gender) VALUES (1, 'Acme Inc', 'Tech', 'USA', 'Female'); INSERT INTO Companies (id, name, industry, country, founder_gender) VALUES (2, 'Beta Corp', 'Biotech', 'Canada', 'Male'); INSERT INTO Companies (id, name, industry, country, founder_gender) VALUES (3, 'Delta LLC', 'Fintech', 'USA', 'Female'); INSERT INTO Companies (id, name, industry, country, founder_gender) VALUES (4, 'Epsilon Ltd', 'Renewable Energy', 'UK', 'Male');","completion":"SELECT country, COUNT(*) as num_female_founded FROM Companies WHERE founder_gender = 'Female' GROUP BY country;"}
{"prompt":"What is the average funding amount for companies founded by women? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founded_date DATE, founder_gender TEXT); INSERT INTO companies (id, name, founded_date, founder_gender) VALUES (1, 'Acme Inc', '2010-01-01', 'female'); INSERT INTO companies (id, name, founded_date, founder_gender) VALUES (2, 'Beta Corp', '2015-05-15', 'male');","completion":"SELECT AVG(funding_amount) FROM investments JOIN companies ON investments.company_id = companies.id WHERE companies.founder_gender = 'female';"}
{"prompt":"What is the total funding for startups in the 'Software' industry founded before 2015? with given SQL schema CREATE TABLE startups(id INT, name TEXT, founded_year INT, industry TEXT, total_funding DECIMAL(10,2)); INSERT INTO startups (id, name, founded_year, industry, total_funding) VALUES (1, 'Acme Inc', 2010, 'Tech', 1500000.00); INSERT INTO startups (id, name, founded_year, industry, total_funding) VALUES (2, 'Beta Corp', 2015, 'Biotech', 2000000.00); INSERT INTO startups (id, name, founded_year, industry, total_funding) VALUES (3, 'Gamma Startup', 2018, 'Software', 500000.00);","completion":"SELECT SUM(total_funding) FROM startups WHERE industry = 'Software' AND founded_year < 2015;"}
{"prompt":"List all accommodation requests with their approval status and date approved, if applicable, for students with visual impairments? with given SQL schema CREATE TABLE Students (StudentID int, StudentName varchar(50), DisabilityType varchar(50)); INSERT INTO Students (StudentID, StudentName, DisabilityType) VALUES (1, 'John Doe', 'Visual Impairment'), (2, 'Jane Smith', 'Mobility Impairment'), (3, 'Michael Johnson', 'Learning Disability'); CREATE TABLE AccommodationRequests (RequestID int, StudentID int, RequestDate date, ApprovalStatus varchar(50)); INSERT INTO AccommodationRequests (RequestID, StudentID, RequestDate, ApprovalStatus) VALUES (1, 1, '2021-01-01', 'Approved'), (2, 1, '2021-02-01', 'Pending'), (3, 2, '2021-03-01', 'Approved'), (4, 3, '2021-04-01', 'Denied');","completion":"SELECT StudentName, DisabilityType, ApprovalStatus, RequestDate as DateApproved FROM AccommodationRequests AR JOIN Students S ON AR.StudentID = S.StudentID WHERE DisabilityType = 'Visual Impairment' AND ApprovalStatus <> 'Pending';"}
{"prompt":"What is the total budget allocated for disability support programs in the year 2025, ordered by the amount of budget allocated? with given SQL schema CREATE TABLE DisabilitySupportPrograms (ProgramID INT, ProgramName VARCHAR(255), Budget DECIMAL(10,2), Year INT); INSERT INTO DisabilitySupportPrograms (ProgramID, ProgramName, Budget, Year) VALUES (1, 'Sign Language Interpretation', 50000, 2023), (2, 'Assistive Technology', 75000, 2023), (3, 'Accessible Transportation', 120000, 2023), (4, 'Adaptive Equipment', 60000, 2024), (5, 'Disability Awareness Training', 80000, 2024); INSERT INTO DisabilitySupportPrograms (ProgramID, ProgramName, Budget, Year) VALUES (6, 'Inclusive Curriculum Development', 90000, 2025), (7, 'Disability Advocacy', 100000, 2025), (8, 'Accessible Housing', 110000, 2025);","completion":"SELECT ProgramName, Budget FROM DisabilitySupportPrograms WHERE Year = 2025 ORDER BY Budget DESC;"}
{"prompt":"What is the maximum depth of marine species in the 'marine_species' table, grouped by their phylum? with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(255), phylum VARCHAR(255), depth FLOAT); INSERT INTO marine_species (id, name, phylum, depth) VALUES (1, 'Pacific salmon', 'Chordata', 50.0), (2, 'Hawaiian monk seal', 'Chordata', 500.0), (3, 'Sea anemone', 'Cnidaria', 0.01);","completion":"SELECT phylum, MAX(depth) AS max_depth FROM marine_species GROUP BY phylum;"}
{"prompt":"What is the total number of marine protected areas in each ocean basin? with given SQL schema CREATE TABLE marine_protected_areas (area_id INTEGER, area_name TEXT, ocean_basin TEXT);","completion":"SELECT ocean_basin, COUNT(area_id) FROM marine_protected_areas GROUP BY ocean_basin;"}
{"prompt":"What is the average number of smart contracts developed per developer in Africa? with given SQL schema CREATE TABLE developers (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO developers (id, name, country) VALUES (1, 'Eve', 'Nigeria'), (2, 'Frank', 'South Africa'), (3, 'Grace', 'Egypt'); CREATE TABLE smart_contracts (id INT, name VARCHAR(50), developer_id INT); INSERT INTO smart_contracts (id, name, developer_id) VALUES (1, 'SC1', 1), (2, 'SC2', 1), (3, 'SC3', 2), (4, 'SC4', 3);","completion":"SELECT AVG(sc_per_dev) FROM (SELECT COUNT(*) as sc_per_dev FROM smart_contracts sc INNER JOIN developers d ON sc.developer_id = d.id GROUP BY d.id) as subquery;"}
{"prompt":"What is the change in crime rate for each category, between this year and last year, for the same time period? with given SQL schema CREATE TABLE CrimeStatistics (ID INT, CrimeType VARCHAR(50), Date TIMESTAMP, Count INT); INSERT INTO CrimeStatistics (ID, CrimeType, Date, Count) VALUES (1, 'Theft', '2022-01-01 00:00:00', 100), (2, 'Vandalism', '2022-01-01 00:00:00', 50), (3, 'Theft', '2022-01-02 00:00:00', 120), (4, 'Vandalism', '2022-01-02 00:00:00', 60), (5, 'Theft', '2021-01-01 00:00:00', 80), (6, 'Vandalism', '2021-01-01 00:00:00', 40), (7, 'Theft', '2021-01-02 00:00:00', 90), (8, 'Vandalism', '2021-01-02 00:00:00', 45);","completion":"SELECT CrimeType, (SUM(Count) OVER (PARTITION BY CrimeType ORDER BY EXTRACT(YEAR FROM Date) ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING)) - SUM(Count) OVER (PARTITION BY CrimeType ORDER BY EXTRACT(YEAR FROM Date)) AS CrimeRateChange FROM CrimeStatistics WHERE Date BETWEEN DATE_TRUNC('year', CURRENT_DATE - INTERVAL '1 year') AND CURRENT_DATE;"}
{"prompt":"Identify artists who created art pieces between 1850 and 1900. with given SQL schema CREATE TABLE art_timeline (id INT, artist_name VARCHAR(255), title VARCHAR(255), year INT); INSERT INTO art_timeline (id, artist_name, title, year) VALUES (1, 'Gustav Klimt', 'The Kiss', 1907), (2, 'Claude Monet', 'Water Lilies', 1899), (3, 'Paul C\u00e9zanne', 'The Card Players', 1892);","completion":"SELECT artist_name FROM art_timeline WHERE year BETWEEN 1850 AND 1900 GROUP BY artist_name HAVING COUNT(DISTINCT year) > 1;"}
{"prompt":"Calculate the average unemployment rate for veterans in H1 2022 with given SQL schema CREATE TABLE veteran_employment (quarter VARCHAR(10), total_veterans INT, unemployed_veterans INT);","completion":"SELECT AVG(unemployed_veterans\/total_veterans) FROM veteran_employment WHERE quarter IN ('Q1 2022', 'Q2 2022');"}
{"prompt":"What is the average account balance for clients in Asia in Q2 2022? with given SQL schema CREATE TABLE accounts (client_id INT, balance DECIMAL(10,2), country VARCHAR(50), account_date DATE); INSERT INTO accounts (client_id, balance, country, account_date) VALUES (1, 12000.00, 'India', '2022-04-01'), (2, 25000.00, 'China', '2022-05-15'), (3, 18000.00, 'Japan', '2022-06-01');","completion":"SELECT AVG(balance) as avg_balance FROM accounts WHERE country IN ('India', 'China', 'Japan') AND account_date BETWEEN '2022-04-01' AND '2022-06-30';"}
{"prompt":"List the top 3 ports with the highest total gross tonnage of container vessels. with given SQL schema CREATE TABLE Port (PortID INT, PortName VARCHAR(50), City VARCHAR(50), Country VARCHAR(50)); INSERT INTO Port (PortID, PortName, City, Country) VALUES (1, 'Port of Los Angeles', 'Los Angeles', 'USA'); INSERT INTO Port (PortID, PortName, City, Country) VALUES (2, 'Port of Rotterdam', 'Rotterdam', 'Netherlands'); CREATE TABLE Vessel (VesselID INT, VesselName VARCHAR(50), GrossTonnage INT, VesselType VARCHAR(50), PortID INT); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage, VesselType, PortID) VALUES (1, 'Ever Ace', 235000, 'Container', 1); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage, VesselType, PortID) VALUES (2, 'Algeciras', 128000, 'Ro-Ro', 2);","completion":"SELECT p.PortName, SUM(v.GrossTonnage) AS TotalGrossTonnage FROM Vessel v JOIN Port p ON v.PortID = p.PortID WHERE VesselType = 'Container' GROUP BY p.PortName ORDER BY TotalGrossTonnage DESC LIMIT 3;"}
{"prompt":"Identify the total number of military personnel and their corresponding rank for each branch and country in the 'military_personnel' table, sorted by the total number of personnel in descending order. with given SQL schema CREATE TABLE military_personnel (id INT, branch VARCHAR(255), rank VARCHAR(255), country VARCHAR(255), personnel INT);","completion":"SELECT branch, country, SUM(personnel) as total_personnel FROM military_personnel GROUP BY branch, country ORDER BY total_personnel DESC;"}
{"prompt":"What is the total number of cybersecurity incidents for each country? with given SQL schema CREATE TABLE cybersecurity_incidents (country TEXT, year INT, num_incidents INT); INSERT INTO cybersecurity_incidents (country, year, num_incidents) VALUES ('USA', 2019, 50000), ('UK', 2019, 7000), ('China', 2019, 12000), ('USA', 2020, 55000), ('UK', 2020, 8000), ('China', 2020, 15000);","completion":"SELECT country, SUM(num_incidents) as total_incidents FROM cybersecurity_incidents GROUP BY country;"}
{"prompt":"List the total number of unique users who have streamed music in each country? with given SQL schema CREATE TABLE music_streams (user_id INT, genre VARCHAR(255), listening_time FLOAT, country_code CHAR(2)); CREATE TABLE countries (country_code CHAR(2), country_name VARCHAR(255));","completion":" SELECT cs.country_name, COUNT(DISTINCT ms.user_id) as num_users FROM music_streams ms JOIN country_summary cs ON ms.country_code = cs.country_code GROUP BY cs.country_name; "}
{"prompt":"Find the average amount donated by donors from the USA. with given SQL schema CREATE TABLE Donors (DonorID INT, Name TEXT, Address TEXT, Country TEXT); INSERT INTO Donors (DonorID, Name, Address, Country) VALUES (1, 'John Doe', '123 Main St', 'USA'); INSERT INTO Donors (DonorID, Name, Address, Country) VALUES (2, 'Jane Smith', '456 Elm St', 'Canada'); CREATE TABLE Donations (DonationID INT, DonorID INT, Amount DECIMAL, DonationDate DATE); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (1, 1, 50.00, '2021-01-01'); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (2, 1, 75.00, '2021-03-15'); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (3, 2, 100.00, '2021-12-31');","completion":"SELECT AVG(Amount) as AverageDonation FROM Donors JOIN Donations ON Donors.DonorID = Donations.DonorID WHERE Donors.Country = 'USA';"}
{"prompt":"What is the average donation amount for donors from the USA? with given SQL schema CREATE TABLE Donors (id INT, name TEXT, country TEXT, donation FLOAT, quarter TEXT, year INT); INSERT INTO Donors (id, name, country, donation, quarter, year) VALUES (1, 'Charlie', 'USA', 100.0, 'Q2', 2021), (2, 'David', 'Mexico', 150.0, 'Q2', 2021), (3, 'Eve', 'Canada', 75.0, 'Q2', 2021), (4, 'Frank', 'USA', 200.0, 'Q3', 2021);","completion":"SELECT AVG(donation) FROM Donors WHERE country = 'USA';"}
{"prompt":"What is the maximum number of professional development courses completed by a teacher in '2021'? with given SQL schema CREATE TABLE teacher_professional_development (teacher_name VARCHAR(20), course_name VARCHAR(30), completion_date DATE); INSERT INTO teacher_professional_development (teacher_name, course_name, completion_date) VALUES ('Teacher A', 'Course 1', '2021-01-05'), ('Teacher A', 'Course 2', '2021-03-20'), ('Teacher B', 'Course 3', '2021-06-15'), ('Teacher B', 'Course 4', '2021-08-02'), ('Teacher C', 'Course 5', '2021-10-10'), ('Teacher C', 'Course 6', '2021-12-18');","completion":"SELECT teacher_name, MAX(cnt) as max_courses FROM (SELECT teacher_name, COUNT(course_name) as cnt FROM teacher_professional_development WHERE EXTRACT(YEAR FROM completion_date) = 2021 GROUP BY teacher_name) as subquery;"}
{"prompt":"How many energy storage projects were installed in China between 2010 and 2020? with given SQL schema CREATE TABLE storage_projects (name TEXT, country TEXT, technology TEXT, year_built INTEGER); INSERT INTO storage_projects (name, country, technology, year_built) VALUES ('Talcher Thermal', 'India', 'Pumped Hydro', 1985); INSERT INTO storage_projects (name, country, technology, year_built) VALUES ('Kameng', 'India', 'Pumped Hydro', 2015);","completion":"SELECT COUNT(*) FROM storage_projects WHERE country = 'China' AND year_built BETWEEN 2010 AND 2020;"}
{"prompt":"What was the total gas production in 'Alaska' for the first 6 months of 2020? with given SQL schema CREATE TABLE wells (well_id INT, field VARCHAR(50), region VARCHAR(50), production_oil FLOAT, production_gas FLOAT, production_date DATE); INSERT INTO wells (well_id, field, region, production_oil, production_gas, production_date) VALUES (1, 'Prudhoe Bay', 'Alaska', 12000.0, 8000.0, '2020-01-01'), (2, 'Kuparuk River', 'Alaska', 8000.0, 6000.0, '2020-03-01');","completion":"SELECT SUM(production_gas) FROM wells WHERE region = 'Alaska' AND MONTH(production_date) <= 6 AND YEAR(production_date) = 2020;"}
{"prompt":"What is the average attendance at NFL games? with given SQL schema CREATE TABLE nfl_games (game_date DATE, home_team VARCHAR(100), away_team VARCHAR(100), attendance INT); INSERT INTO nfl_games VALUES ('2022-01-09', 'Los Angeles Rams', 'Arizona Cardinals', 74200), ('2022-01-09', 'Tampa Bay Buccaneers', 'Philadelphia Eagles', 65890), ('2022-01-09', 'Dallas Cowboys', 'San Francisco 49ers', 93753);","completion":"SELECT AVG(attendance) FROM nfl_games;"}
{"prompt":"What is the total quantity of organic cotton sourced from India and Pakistan? with given SQL schema CREATE TABLE textile_sources (source_id INT, country VARCHAR(50), material VARCHAR(50)); INSERT INTO textile_sources (source_id, country, material) VALUES (1, 'India', 'Organic Cotton'), (2, 'Pakistan', 'Organic Cotton'); CREATE TABLE quantities (quantity_id INT, source_id INT, quantity INT); INSERT INTO quantities (quantity_id, source_id, quantity) VALUES (1, 1, 1000), (2, 2, 1500);","completion":"SELECT SUM(q.quantity) FROM quantities q INNER JOIN textile_sources ts ON q.source_id = ts.source_id WHERE ts.country IN ('India', 'Pakistan') AND ts.material = 'Organic Cotton';"}
{"prompt":"What is the total revenue earned from size-diverse garments, per country, for countries in South America? with given SQL schema CREATE TABLE Orders (order_id INT, customer_id INT, garment_id INT, revenue INT); INSERT INTO Orders (order_id, customer_id, garment_id, revenue) VALUES (1, 1, 1, 100), (2, 2, 3, 200); CREATE TABLE Garments (garment_id INT, garment_name TEXT, size_diverse BOOLEAN, country_of_origin TEXT); INSERT INTO Garments (garment_id, garment_name, size_diverse, country_of_origin) VALUES (1, 'EcoDress', TRUE, 'Brazil'), (2, 'GreenShirt', FALSE, 'Colombia'), (3, 'FairTrousers', TRUE, 'Argentina');","completion":"SELECT g.country_of_origin, SUM(o.revenue) FROM Orders o JOIN Garments g ON o.garment_id = g.garment_id WHERE g.country_of_origin LIKE 'South% America%' AND g.size_diverse = TRUE GROUP BY g.country_of_origin;"}
{"prompt":"What is the average loan amount for clients in Turkey and Iran? with given SQL schema CREATE TABLE loans (id INT, client_name VARCHAR(50), country VARCHAR(50), amount DECIMAL(10,2), date DATE); INSERT INTO loans (id, client_name, country, amount, date) VALUES (1, 'Ali', 'Turkey', 6000, '2022-01-01'); INSERT INTO loans (id, client_name, country, amount, date) VALUES (2, 'Fatima', 'Iran', 7000, '2022-01-02');","completion":"SELECT AVG(amount) FROM loans WHERE country IN ('Turkey', 'Iran');"}
{"prompt":"What is the average transaction value for Shariah-compliant investments in the United States? with given SQL schema CREATE TABLE shariah_investments (id INT, investment_type VARCHAR(255), value DECIMAL(10,2), country VARCHAR(255));","completion":"SELECT AVG(value) FROM shariah_investments WHERE country = 'United States';"}
{"prompt":"How many food safety incidents were reported in 2020? with given SQL schema CREATE TABLE incidents (id INT, date TEXT, location TEXT, type TEXT); INSERT INTO incidents (id, date, location, type) VALUES (1, '2020-01-01', 'China', 'Contamination'), (2, '2019-12-31', 'US', 'Allergens');","completion":"SELECT COUNT(*) FROM incidents WHERE date LIKE '2020%';"}
{"prompt":"What is the minimum salary for faculty members in the College of Arts and Humanities? with given SQL schema CREATE TABLE if not exists FACULTY(id INT, name TEXT, department TEXT, position TEXT, salary INT);","completion":"SELECT MIN(salary) FROM FACULTY WHERE department = 'College of Arts and Humanities';"}
{"prompt":"What is the total carbon offset of initiatives in the 'CarbonOffsetInitiatives' table? with given SQL schema CREATE TABLE CarbonOffsetInitiatives (id INT, initiative_name VARCHAR(50), location VARCHAR(50), carbon_offset_tons INT);","completion":"SELECT SUM(carbon_offset_tons) FROM CarbonOffsetInitiatives;"}
{"prompt":"Who are the top 3 artists with the longest artist statements in the database? with given SQL schema CREATE TABLE artist_statements (artist_name TEXT, statement_length INTEGER); INSERT INTO artist_statements (artist_name, statement_length) VALUES ('Yayoi Kusama', 200), ('Marina Abramovic', 250), ('Jeff Koons', 300);","completion":"SELECT artist_name, statement_length FROM artist_statements ORDER BY statement_length DESC LIMIT 3;"}
{"prompt":"What is the average annual precipitation in the past 10 years for each weather station? with given SQL schema CREATE TABLE WeatherStation (ID INT, Name VARCHAR(100), Location VARCHAR(100), Elevation FLOAT, AnnualPrecipitation FLOAT); INSERT INTO WeatherStation (ID, Name, Location, Elevation, AnnualPrecipitation) VALUES (1, 'Station A', 'Arctic Circle', 100, 450); INSERT INTO WeatherStation (ID, Name, Location, Elevation, AnnualPrecipitation) VALUES (2, 'Station B', 'North Pole', 200, 300);","completion":"SELECT Name, AVG(AnnualPrecipitation) OVER (PARTITION BY Name ORDER BY Name ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS AvgAnnualPrecipitation FROM WeatherStation WHERE YEAR(CurrentDate) - YEAR(DateInstalled) BETWEEN 1 AND 10;"}
{"prompt":"How many traditional art forms were added to the database in the last month? with given SQL schema CREATE TABLE TraditionalArts (ArtForm varchar(50), AddedDate date); INSERT INTO TraditionalArts (ArtForm, AddedDate) VALUES ('Batik', '2022-01-01'), ('Ukara Stitching', '2022-01-15'), ('Tingatinga Painting', '2022-02-10');","completion":"SELECT COUNT(*) FROM (SELECT * FROM TraditionalArts WHERE AddedDate >= DATEADD(MONTH, -1, GETDATE())) t;"}
{"prompt":"What is the total number of legal aid services provided to individuals in rural areas in the state of California in 2021? with given SQL schema CREATE TABLE legal_aid_services (id INT, location VARCHAR(255), state VARCHAR(255), year INT, services_provided INT); INSERT INTO legal_aid_services (id, location, state, year, services_provided) VALUES (1, 'Rural Area', 'California', 2021, 1000), (2, 'Urban Area', 'California', 2021, 2000), (3, 'Suburban Area', 'California', 2021, 1500);","completion":"SELECT SUM(services_provided) FROM legal_aid_services WHERE state = 'California' AND location = 'Rural Area' AND year = 2021;"}
{"prompt":"What is the average depth of all marine life research sites? with given SQL schema CREATE TABLE marine_sites (site_id INT, site_name TEXT, max_depth FLOAT); INSERT INTO marine_sites (site_id, site_name, max_depth) VALUES (1, 'Research Site A', 3000.5), (2, 'Research Site B', 5500.2), (3, 'Research Site C', 2000.0);","completion":"SELECT AVG(max_depth) FROM marine_sites;"}
{"prompt":"Who are the top content creators in terms of representation? with given SQL schema CREATE TABLE content_creators (id INT, name VARCHAR, country VARCHAR, views INT, represents_group BOOLEAN); INSERT INTO content_creators (id, name, country, views, represents_group) VALUES (1, 'CreatorA', 'USA', 100000, true); INSERT INTO content_creators (id, name, country, views, represents_group) VALUES (2, 'CreatorB', 'Canada', 150000, false);","completion":"SELECT name, views FROM content_creators WHERE represents_group = true ORDER BY views DESC LIMIT 5;"}
{"prompt":"List all mining sites located in 'California' from the 'mining_sites' table. with given SQL schema CREATE TABLE mining_sites (site_id INT, site_name VARCHAR(100), state VARCHAR(50));","completion":"SELECT site_name FROM mining_sites WHERE state = 'California';"}
{"prompt":"List all mobile subscribers who have not made any network infrastructure investments in the last 6 months. with given SQL schema CREATE TABLE subscribers (id INT, subscriber_type VARCHAR(10)); CREATE TABLE investments (id INT, subscriber_id INT, investment_date DATE); INSERT INTO subscribers (id, subscriber_type) VALUES (1, 'Mobile'), (2, 'Broadband'); INSERT INTO investments (id, subscriber_id, investment_date) VALUES (1, 1, '2022-02-01'), (2, 2, '2022-03-15');","completion":"SELECT s.id, s.subscriber_type FROM subscribers s LEFT JOIN investments i ON s.id = i.subscriber_id WHERE i.subscriber_id IS NULL OR i.investment_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"List all mobile subscribers who have not used any data in the last month. with given SQL schema CREATE TABLE subscribers(id INT, last_data_usage_date DATE, monthly_data_usage DECIMAL(5,2)); INSERT INTO subscribers(id, last_data_usage_date, monthly_data_usage) VALUES (1, '2022-01-15', 3.5), (2, '2022-02-10', 4.2), (3, '2022-03-05', 0.0);","completion":"SELECT id, last_data_usage_date, monthly_data_usage FROM subscribers WHERE monthly_data_usage = 0 AND last_data_usage_date < DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"List all artists who have performed in a music festival in both the US and Canada. with given SQL schema CREATE TABLE Artists (id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE Festivals (id INT, artist_id INT, country VARCHAR(255));","completion":"SELECT Artists.name FROM Artists INNER JOIN Festivals ON Artists.id = Festivals.artist_id WHERE Artists.country = 'US' AND Festivals.country = 'Canada' GROUP BY Artists.name HAVING COUNT(DISTINCT Festivals.country) = 2;"}
{"prompt":"What is the average time spent by users on a news article, grouped by their geographical regions and article categories? with given SQL schema CREATE TABLE user_sessions (session_id INT, user_region VARCHAR(255), article_category VARCHAR(255), time_spent INT); INSERT INTO user_sessions (session_id, user_region, article_category, time_spent) VALUES (1, 'North America', 'Politics', 600), (2, 'Europe', 'Sports', 300), (3, 'Asia', 'Entertainment', 450);","completion":"SELECT user_region, article_category, AVG(time_spent) AS avg_time_spent FROM user_sessions GROUP BY user_region, article_category;"}
{"prompt":"What is the total word count of articles published by 'John Doe' in the 'media' schema? with given SQL schema CREATE TABLE media.articles (article_id INT, title VARCHAR(100), author VARCHAR(100), word_count INT); INSERT INTO media.articles (article_id, title, author, word_count) VALUES (1, 'Article 1', 'John Doe', 500), (2, 'Article 2', 'Jane Doe', 600);","completion":"SELECT SUM(word_count) FROM media.articles WHERE author = 'John Doe';"}
{"prompt":"Select the names, games, and scores of players who have a higher score than the player with the highest score in game A. with given SQL schema CREATE TABLE Players (PlayerID INT, Name VARCHAR(50), Game VARCHAR(50), Score INT); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (1, 'John Doe', 'GameA', 1000); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (2, 'Jane Doe', 'GameB', 2000); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (3, 'Alice', 'GameA', 1500); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (4, 'Bob', 'GameA', 1200);","completion":"SELECT Name, Game, Score FROM Players WHERE Game = 'GameA' AND Score > (SELECT MAX(Score) FROM Players WHERE Game = 'GameA');"}
{"prompt":"What is the percentage of players who prefer FPS and action genres out of the total number of players? with given SQL schema CREATE TABLE TotalPlayers (PlayerID INT, Genre VARCHAR(10)); INSERT INTO TotalPlayers (PlayerID, Genre) VALUES (1, 'FPS'), (2, 'Action'), (3, 'FPS'), (4, 'Action');","completion":"SELECT COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM TotalPlayers) FROM TotalPlayers WHERE Genre IN ('FPS', 'Action');"}
{"prompt":"Calculate the average precipitation in the 'weather_data_2022' table for wheat fields in France. with given SQL schema CREATE TABLE weather_data_2022 (crop_type VARCHAR(50), location VARCHAR(50), precipitation FLOAT, reading_date DATE); INSERT INTO weather_data_2022 (crop_type, location, precipitation, reading_date) VALUES ('Wheat', 'France', 12.6, '2022-06-01'); INSERT INTO weather_data_2022 (crop_type, location, precipitation, reading_date) VALUES ('Wheat', 'France', 13.2, '2022-06-02');","completion":"SELECT AVG(precipitation) FROM weather_data_2022 WHERE crop_type = 'Wheat' AND location = 'France';"}
{"prompt":"What is the average temperature in each country for the month of June, sorted by the highest average temperature? with given SQL schema CREATE TABLE WeatherData (id INT, Country VARCHAR(255), Temperature INT, Timestamp DATETIME); INSERT INTO WeatherData (id, Country, Temperature, Timestamp) VALUES (1, 'Mexico', 30, '2022-06-01 12:00:00'), (2, 'Canada', 20, '2022-06-01 12:00:00');","completion":"SELECT Country, AVG(Temperature) as AvgTemp FROM WeatherData WHERE Timestamp BETWEEN '2022-06-01 00:00:00' AND '2022-06-30 23:59:59' GROUP BY Country ORDER BY AvgTemp DESC;"}
{"prompt":"What was the average budget allocated to public services in District G and H in 2021? with given SQL schema CREATE TABLE Budget (District VARCHAR(10), Year INT, Amount INT); INSERT INTO Budget VALUES ('District G', 2021, 1500000), ('District G', 2021, 1400000), ('District H', 2021, 1300000), ('District H', 2021, 1200000);","completion":"SELECT AVG(Amount) FROM Budget WHERE District IN ('District G', 'District H') AND Year = 2021;"}
{"prompt":"What is the maximum market price of Terbium in China for 2017? with given SQL schema CREATE TABLE Terbium_Market_Prices (id INT, year INT, country VARCHAR(255), market_price FLOAT);","completion":"SELECT MAX(market_price) FROM Terbium_Market_Prices WHERE year = 2017 AND country = 'China';"}
{"prompt":"Get the total revenue from sustainable and non-sustainable sources with given SQL schema CREATE TABLE SustainableSourcing (sourcing_id INT, revenue_id INT, is_sustainable BOOLEAN); INSERT INTO SustainableSourcing (sourcing_id, revenue_id, is_sustainable) VALUES (1, 1, TRUE); INSERT INTO SustainableSourcing (sourcing_id, revenue_id, is_sustainable) VALUES (2, 2, FALSE);","completion":"SELECT SUM(CASE WHEN is_sustainable THEN revenue_amount ELSE 0 END) AS sustainable_revenue, SUM(CASE WHEN NOT is_sustainable THEN revenue_amount ELSE 0 END) AS non_sustainable_revenue FROM Revenue JOIN SustainableSourcing ON Revenue.revenue_id = SustainableSourcing.revenue_id;"}
{"prompt":"Identify the average food safety score for restaurants in the \"urban\" area. with given SQL schema CREATE TABLE inspections (restaurant_id INT, score INT, area VARCHAR(255));INSERT INTO inspections (restaurant_id, score, area) VALUES (1, 95, 'urban'), (2, 85, 'urban'), (3, 90, 'suburban'), (4, 80, 'rural'), (5, 92, 'urban');","completion":"SELECT AVG(inspections.score) FROM inspections WHERE inspections.area = 'urban';"}
{"prompt":"What is the maximum revenue generated in a single day from delivery orders? with given SQL schema CREATE TABLE Orders (id INT, order_channel VARCHAR(50), price DECIMAL(10,2), date DATE);  CREATE VIEW Delivery_Orders AS SELECT price FROM Orders WHERE order_channel = 'delivery';","completion":"SELECT MAX(SUM(price)) FROM Delivery_Orders GROUP BY date;"}
{"prompt":"What was the maximum daily revenue for each restaurant in 2022? with given SQL schema CREATE TABLE daily_revenue (restaurant_name TEXT, daily_revenue NUMERIC, date DATE); INSERT INTO daily_revenue (restaurant_name, daily_revenue, date) VALUES ('ABC Bistro', 700, '2022-01-01'), ('ABC Bistro', 800, '2022-01-02'), ('XYZ Caf\u00e9', 400, '2022-01-01'), ('XYZ Caf\u00e9', 450, '2022-01-02');","completion":"SELECT restaurant_name, MAX(daily_revenue) as max_daily_revenue FROM daily_revenue GROUP BY restaurant_name;"}
{"prompt":"What is the total mass of space debris in Medium Earth Orbit (MEO) that was launched before 2010? with given SQL schema CREATE TABLE space_debris(id INT, name VARCHAR(255), launch_date DATE, launch_site VARCHAR(255), orbit VARCHAR(255), mass FLOAT); INSERT INTO space_debris VALUES (1, 'Metop-A', '2006-10-19', 'Baikonur Cosmodrome', 'MEO', 4000); INSERT INTO space_debris VALUES (2, 'COSMOS 2486', '2008-09-26', 'Plesetsk', 'MEO', 1200); INSERT INTO space_debris VALUES (3, 'Galileo IOV-1', '2011-10-21', 'Centre Spatial Guyanais', 'MEO', 670);","completion":"SELECT SUM(mass) FROM space_debris WHERE orbit = 'MEO' AND launch_date < '2010-01-01';"}
{"prompt":"How many new fans have signed up for the fan club in the last 30 days, sorted by their sign-up date? with given SQL schema CREATE TABLE fan_club_members (id INT, sign_up_date DATE);","completion":"SELECT COUNT(*) FROM fan_club_members WHERE sign_up_date >= CURDATE() - INTERVAL 30 DAY ORDER BY sign_up_date;"}
{"prompt":"How many unique cities have hosted the Olympics in the 'olympics_history' table? with given SQL schema CREATE TABLE olympics_history (edition INT, year INT, city VARCHAR(50), country VARCHAR(50));","completion":"SELECT COUNT(DISTINCT city) FROM olympics_history;"}
{"prompt":"What is the average ticket price for basketball games in New York? with given SQL schema CREATE TABLE stadiums (name VARCHAR(255), city VARCHAR(255), capacity INT, avg_ticket_price DECIMAL(5,2)); INSERT INTO stadiums (name, city, capacity, avg_ticket_price) VALUES ('Madison Square Garden', 'New York', 20000, 150.50);","completion":"SELECT avg(avg_ticket_price) FROM stadiums WHERE city = 'New York' AND sport = 'Basketball';"}
{"prompt":"Which threat intelligence sources have provided the most false positives in the last quarter? with given SQL schema CREATE TABLE false_positives(id INT, source VARCHAR(50), category VARCHAR(50), date DATE);","completion":"SELECT source, COUNT(*) as total_false_positives FROM false_positives WHERE date > DATE(NOW()) - INTERVAL 90 DAY AND category = 'false positive' GROUP BY source;"}
{"prompt":"List all bike-share stations in New York with more than 20 bikes available. with given SQL schema CREATE TABLE bike_stations (station_id INT, city VARCHAR(20), bikes_available INT); INSERT INTO bike_stations (station_id, city, bikes_available) VALUES (1, 'New York', 25), (2, 'New York', 18), (3, 'New York', 32);","completion":"SELECT * FROM bike_stations WHERE city = 'New York' AND bikes_available > 20;"}
{"prompt":"What is the average speed of high-speed trains in Beijing, China? with given SQL schema CREATE TABLE high_speed_trains (train_id INT, trip_duration INT, start_time TIMESTAMP, end_time TIMESTAMP, start_station TEXT, end_station TEXT, city TEXT, line TEXT);","completion":"SELECT AVG(trip_duration \/ (end_time - start_time)) FROM high_speed_trains WHERE city = 'Beijing' AND line LIKE '%high-speed%';"}
{"prompt":"What is the percentage of trips that are multimodal? with given SQL schema CREATE TABLE trips (user_id INT, trip_date DATE, trip_count INT, mode1 VARCHAR(50), mode2 VARCHAR(50));","completion":"SELECT AVG(CASE WHEN mode1 <> mode2 THEN 1 ELSE 0 END) as avg_multimodal FROM trips;"}
{"prompt":"What is the total number of vehicles sold in 'sales_data' view that have a speed greater than or equal to 80 mph? with given SQL schema CREATE VIEW sales_data AS SELECT id, vehicle_type, avg_speed, sales FROM vehicle_sales WHERE sales > 20000;","completion":"SELECT SUM(sales) FROM sales_data WHERE avg_speed >= 80;"}
{"prompt":"Calculate the average retail sales revenue per 'Jeans' item in Mexico in 2021. with given SQL schema CREATE TABLE RetailSales (id INT, garment_type VARCHAR(20), country VARCHAR(20), revenue DECIMAL(10, 2), year INT); INSERT INTO RetailSales (id, garment_type, country, revenue, year) VALUES (1, 'Dress', 'Mexico', 75.50, 2021), (2, 'Shirt', 'Mexico', 120.00, 2021), (3, 'Pant', 'Mexico', 100.00, 2021), (4, 'Jacket', 'Mexico', 150.00, 2021), (5, 'Shirt', 'Mexico', 50.00, 2021), (6, 'Dress', 'Mexico', 60.00, 2021), (7, 'Jeans', 'Mexico', 80.00, 2021), (8, 'Jeans', 'Mexico', 90.00, 2021), (9, 'Jeans', 'Mexico', 70.00, 2021);","completion":"SELECT AVG(revenue) as avg_revenue_per_item FROM RetailSales WHERE garment_type = 'Jeans' AND country = 'Mexico' AND year = 2021;"}
{"prompt":"What was the average sustainability score for the 'Autumn 2021' collection? with given SQL schema CREATE TABLE garment_data_2 (garment_id INT, collection VARCHAR(20), sustainability_score FLOAT); INSERT INTO garment_data_2 (garment_id, collection, sustainability_score) VALUES (1, 'Autumn 2019', 7.5), (2, 'Winter 2019', 8.1), (3, 'Autumn 2020', 8.6), (4, 'Winter 2020', 8.3), (5, 'Autumn 2021', 9.1), (6, 'Winter 2021', 8.9), (7, 'Autumn 2022', 9.3);","completion":"SELECT AVG(sustainability_score) FROM garment_data_2 WHERE collection = 'Autumn 2021';"}
{"prompt":"Display policy_id and sum_insured for policies where the sum insured is less than 60000 and policyholder gender is female with given SQL schema CREATE TABLE policy_info (policy_id INT, premium FLOAT, sum_insured INT); CREATE TABLE policyholder (policy_id INT, first_name VARCHAR(50), last_name VARCHAR(50), gender VARCHAR(50)); INSERT INTO policy_info (policy_id, premium, sum_insured) VALUES (1, 1200.50, 60000), (2, 2500.00, 70000), (3, 1800.00, 90000), (4, 1500.00, 40000), (5, 1700.00, 50000); INSERT INTO policyholder (policy_id, first_name, last_name, gender) VALUES (1, 'Jane', 'Doe', 'Female'), (2, 'John', 'Doe', 'Male'), (3, 'Jim', 'Smith', 'Male'), (4, 'Anna', 'Johnson', 'Female'), (5, 'David', 'Lee', 'Male');","completion":"SELECT policy_info.policy_id, policy_info.sum_insured FROM policy_info INNER JOIN policyholder ON policy_info.policy_id = policyholder.policy_id WHERE policy_info.sum_insured < 60000 AND policyholder.gender = 'Female';"}
{"prompt":"Count the number of safety tests passed by vehicles in the 'safety_testing' table with given SQL schema CREATE TABLE safety_testing (id INT PRIMARY KEY, make VARCHAR(50), model VARCHAR(50), year INT, tests_passed INT);","completion":"SELECT COUNT(*) FROM safety_testing WHERE tests_passed IS NOT NULL;"}
{"prompt":"How many autonomous driving research papers were published in the year 2021 in the 'research_papers' table? with given SQL schema CREATE TABLE research_papers (paper_id INT, title VARCHAR(100), author VARCHAR(50), publication_date DATE);","completion":"SELECT COUNT(*) FROM research_papers WHERE YEAR(publication_date) = 2021 AND author = 'Wayve';"}
{"prompt":"How many autonomous vehicle crash tests were successful in the 'autonomous_testing' view? with given SQL schema CREATE VIEW autonomous_testing AS SELECT vehicle_make VARCHAR(50), test_result VARCHAR(10) FROM safety_testing WHERE test_type = 'autonomous';","completion":"SELECT COUNT(*) FROM autonomous_testing WHERE test_result = 'successful';"}
{"prompt":"List the vessels that have had safety incidents in the last 12 months, ordered by the number of incidents in descending order. with given SQL schema CREATE TABLE Vessels (vessel_id INT, vessel_name VARCHAR(30)); CREATE TABLE SafetyIncidents (incident_id INT, vessel_id INT, incident_date DATE); INSERT INTO Vessels (vessel_id, vessel_name) VALUES (1, 'Ever Given'), (2, 'Ever Summit'), (3, 'Ever Leader'); INSERT INTO SafetyIncidents (incident_id, vessel_id, incident_date) VALUES (1, 1, '2021-03-23'), (2, 1, '2021-06-17'), (3, 2, '2021-01-15'), (4, 2, '2021-04-29');","completion":"SELECT vessel_name, COUNT(*) as incidents FROM SafetyIncidents JOIN Vessels ON SafetyIncidents.vessel_id = Vessels.vessel_id WHERE incident_date >= DATEADD(year, -1, GETDATE()) GROUP BY vessel_name ORDER BY incidents DESC;"}
{"prompt":"What is the total cargo weight for vessels that arrived in the US between July 2021 and December 2021? with given SQL schema CREATE TABLE vessel_performance (id INT, name TEXT, speed DECIMAL(5,2), arrived_date DATE, country TEXT, cargo_weight INT); INSERT INTO vessel_performance (id, name, speed, arrived_date, country, cargo_weight) VALUES (1, 'Vessel A', 15.2, '2021-07-05', 'US', 5000), (2, 'Vessel B', 17.8, '2021-08-10', 'US', 6000), (3, 'Vessel C', 13.6, '2021-12-18', 'US', 7000);","completion":"SELECT SUM(cargo_weight) FROM vessel_performance WHERE arrived_date BETWEEN '2021-07-01' AND '2021-12-31' AND country = 'US';"}
{"prompt":"How many circular economy initiatives were implemented in the Latin America region in 2020? with given SQL schema CREATE TABLE circular_economy_initiatives (region VARCHAR(255), year INT, initiative_id INT); INSERT INTO circular_economy_initiatives (region, year, initiative_id) VALUES ('Latin America', 2020, 1), ('Latin America', 2020, 2), ('Latin America', 2020, 3);","completion":"SELECT COUNT(initiative_id) FROM circular_economy_initiatives WHERE region = 'Latin America' AND year = 2020;"}
{"prompt":"What is the combined landfill capacity for 'City A' and 'City B'? with given SQL schema CREATE TABLE landfill_capacity (city VARCHAR(255), capacity INT); INSERT INTO landfill_capacity (city, capacity) VALUES ('City A', 500000), ('City B', 600000);","completion":"SELECT SUM(capacity) FROM (SELECT capacity FROM landfill_capacity WHERE city = 'City A' UNION ALL SELECT capacity FROM landfill_capacity WHERE city = 'City B') AS combined_capacity;"}
{"prompt":"Find the sensor with the maximum water level in the 'sensor_data' table with given SQL schema CREATE TABLE sensor_data (sensor_id INT, water_level FLOAT, timestamp TIMESTAMP);","completion":"SELECT sensor_id, MAX(water_level) as max_water_level FROM sensor_data;"}
{"prompt":"Find the number of AI ethics issues reported in South America, Central America, and the Caribbean, and provide a breakdown by issue category. with given SQL schema CREATE TABLE ethics_issues (issue_id INT, issue_date DATE, country VARCHAR(255), issue_category VARCHAR(255)); INSERT INTO ethics_issues (issue_id, issue_date, country, issue_category) VALUES (1, '2022-01-01', 'Colombia', 'Bias'), (2, '2022-02-01', 'Brazil', 'Explainability'), (3, '2022-03-01', 'Cuba', 'Transparency');","completion":"SELECT issue_category, COUNT(*) as num_issues FROM ethics_issues WHERE country IN ('South America', 'Central America', 'Caribbean') GROUP BY issue_category;"}
{"prompt":"Who are the top 3 countries with the most creative AI algorithm explainability issues? with given SQL schema CREATE TABLE creative_ai_algorithm_explainability (issue_id INT PRIMARY KEY, ai_algorithm_id INT, issue_date DATE, country VARCHAR(255));","completion":"SELECT country, COUNT(*) AS issue_count FROM creative_ai_algorithm_explainability GROUP BY country ORDER BY issue_count DESC LIMIT 3;"}
{"prompt":"What are the names and launch dates of satellites deployed by SpaceTech Inc.? with given SQL schema CREATE TABLE Satellites (satellite_id INT, name VARCHAR(50), launch_date DATE, manufacturer VARCHAR(50)); INSERT INTO Satellites (satellite_id, name, launch_date, manufacturer) VALUES (1, 'Sat1', '2020-01-01', 'SpaceTech Inc.');","completion":"SELECT name, launch_date FROM Satellites WHERE manufacturer = 'SpaceTech Inc.';"}
{"prompt":"What is the maximum habitat size for any animal in the 'animal_habitat' table? with given SQL schema CREATE TABLE animal_habitat (habitat_id INT, animal_name VARCHAR(50), habitat_size INT); INSERT INTO animal_habitat (habitat_id, animal_name, habitat_size) VALUES (1, 'Polar Bear', 15000), (2, 'Elephant', 1000), (3, 'Lion', 700);","completion":"SELECT MAX(habitat_size) FROM animal_habitat;"}
{"prompt":"What is the gender breakdown of attendees for the 'African Art' event? with given SQL schema CREATE TABLE Events (EventID INT PRIMARY KEY, EventName VARCHAR(255), Attendance INT); CREATE TABLE Audience (AudienceID INT PRIMARY KEY, Age INT, Gender VARCHAR(10), Occupation VARCHAR(255), EventID INT, FOREIGN KEY (EventID) REFERENCES Events(EventID)); INSERT INTO Events (EventID, EventName, Attendance) VALUES (1, 'African Art', 850); INSERT INTO Audience (AudienceID, Age, Gender, Occupation, EventID) VALUES (1, 33, 'Female', 'Art Teacher', 1), (2, 42, 'Male', 'Art Collector', 1), (3, 30, 'Non-binary', 'Art Conservator', 1), (4, 45, 'Female', 'African Art Specialist', 1);","completion":"SELECT Audience.Gender, COUNT(*) AS Attendance FROM Audience INNER JOIN Events ON Audience.EventID = Events.EventID WHERE Events.EventName = 'African Art' GROUP BY Audience.Gender;"}
{"prompt":"How many times has music from the United States been streamed in Africa in the last 3 years? with given SQL schema CREATE TABLE music (id INT, title VARCHAR(100), artist_country VARCHAR(50), streams INT); INSERT INTO music (id, title, artist_country, streams) VALUES (1, 'MusicA', 'United States', 1000000); INSERT INTO music (id, title, artist_country, streams) VALUES (2, 'MusicB', 'United States', 1200000);","completion":"SELECT SUM(streams) FROM music WHERE artist_country = 'United States' AND (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM date(substr(title, 7, 4)))) BETWEEN 1 AND 3;"}
{"prompt":"Identify the top 2 states with the highest average construction wages in 2020 with given SQL schema CREATE TABLE labor_statistics (state VARCHAR(255), year INTEGER, avg_wage DECIMAL(5,2)); INSERT INTO labor_statistics (state, year, avg_wage) VALUES ('Oregon', 2020, 26.50), ('Oregon', 2019, 25.75), ('Florida', 2020, 24.25), ('Washington', 2020, 27.50), ('California', 2020, 25.25);","completion":"SELECT state, AVG(avg_wage) FROM labor_statistics WHERE year = 2020 GROUP BY state ORDER BY AVG(avg_wage) DESC LIMIT 2;"}
{"prompt":"What is the average cost of commercial building permits in the state of California for the year 2019? with given SQL schema CREATE TABLE building_permits (permit_type TEXT, state TEXT, cost INTEGER, year INTEGER);INSERT INTO building_permits (permit_type, state, cost, year) VALUES ('Residential', 'California', 200000, 2019), ('Commercial', 'California', 800000, 2019), ('Industrial', 'California', 500000, 2019);","completion":"SELECT AVG(cost) FROM building_permits WHERE state = 'California' AND year = 2019 AND permit_type = 'Commercial';"}
{"prompt":"Create a table to store client demographics with given SQL schema CREATE TABLE client_demographics (client_id INT PRIMARY KEY, client_name VARCHAR(255));","completion":"CREATE TABLE client_demographics (client_id INT PRIMARY KEY, client_name VARCHAR(255));"}
{"prompt":"Insert a new client named 'Alex Juarez' into the 'clients' table and assign them a unique client_id. with given SQL schema CREATE TABLE clients (client_id INT PRIMARY KEY AUTO_INCREMENT, client_name VARCHAR(255));","completion":"INSERT INTO clients (client_name) VALUES ('Alex Juarez');"}
{"prompt":"What is the total billable hours for attorney John Doe? with given SQL schema CREATE TABLE Attorneys (AttorneyID INT, Name VARCHAR(50), Title VARCHAR(50)); INSERT INTO Attorneys (AttorneyID, Name, Title) VALUES (1, 'John Doe', 'Partner'); CREATE TABLE TimeEntries (EntryID INT, AttorneyID INT, Hours DECIMAL(10,2)); INSERT INTO TimeEntries (EntryID, AttorneyID, Hours) VALUES (1, 1, 5.00), (2, 1, 7.50);","completion":"SELECT SUM(Hours) FROM TimeEntries WHERE AttorneyID = (SELECT AttorneyID FROM Attorneys WHERE Name = 'John Doe');"}
{"prompt":"How many healthcare facilities are there in total, by type, in the database? with given SQL schema CREATE TABLE hospitals (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO hospitals (id, name, location, type) VALUES (1, 'Hospital A', 'City A', 'General'); INSERT INTO hospitals (id, name, location, type) VALUES (2, 'Hospital B', 'City B', 'Pediatric'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO clinics (id, name, location, type) VALUES (1, 'Clinic C', 'City C', 'Dental'); INSERT INTO clinics (id, name, location, type) VALUES (2, 'Clinic D', 'City D', 'General'); CREATE TABLE long_term_care (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO long_term_care (id, name, location, type) VALUES (1, 'LT Care A', 'City A', 'Nursing'); INSERT INTO long_term_care (id, name, location, type) VALUES (2, 'LT Care B', 'City B', 'Assisted Living');","completion":"SELECT type, COUNT(*) FROM hospitals GROUP BY type UNION SELECT type, COUNT(*) FROM clinics GROUP BY type UNION SELECT type, COUNT(*) FROM long_term_care GROUP BY type;"}
{"prompt":"What is the average age of patients who received a flu shot in 2020, grouped by their gender? with given SQL schema CREATE TABLE patients (id INT, gender VARCHAR(10), age INT, flu_shot BOOLEAN, shot_date DATE); INSERT INTO patients (id, gender, age, flu_shot, shot_date) VALUES (1, 'Male', 45, true, '2020-02-01'); INSERT INTO patients (id, gender, age, flu_shot, shot_date) VALUES (2, 'Female', 50, false, NULL); INSERT INTO patients (id, gender, age, flu_shot, shot_date) VALUES (3, 'Non-binary', 30, true, '2020-03-15');","completion":"SELECT AVG(age) as avg_age, gender FROM patients WHERE flu_shot = true AND YEAR(shot_date) = 2020 GROUP BY gender;"}
{"prompt":"What is the number of cancer screenings performed, by gender? with given SQL schema CREATE TABLE cancer_screenings (gender VARCHAR(6), num_screenings INT); INSERT INTO cancer_screenings (gender, num_screenings) VALUES ('Male', 120000), ('Female', 180000);","completion":"SELECT gender, SUM(num_screenings) as total_screenings FROM cancer_screenings GROUP BY gender;"}
{"prompt":"What is the total number of organic farms in the 'farm_data' table, grouped by country? with given SQL schema CREATE TABLE farm_data (farm_id INT, farm_name VARCHAR(255), country VARCHAR(255), is_organic BOOLEAN); INSERT INTO farm_data (farm_id, farm_name, country, is_organic) VALUES (1, 'Farm1', 'CountryA', true), (2, 'Farm2', 'CountryB', false), (3, 'Farm3', 'CountryA', true), (4, 'Farm4', 'CountryC', true);","completion":"SELECT country, COUNT(*) as total_organic_farms FROM farm_data WHERE is_organic = true GROUP BY country;"}
{"prompt":"What is the total production (in metric tons) of organic crops in Europe, broken down by crop type? with given SQL schema CREATE TABLE organic_crops (crop_id INT, crop_name TEXT, country TEXT, production_tons FLOAT); INSERT INTO organic_crops (crop_id, crop_name, country, production_tons) VALUES (1, 'Wheat', 'France', 1500.0), (2, 'Barley', 'Germany', 1200.0), (3, 'Corn', 'Italy', 2000.0);","completion":"SELECT crop_name, SUM(production_tons) FROM organic_crops WHERE country = 'Europe' GROUP BY crop_name;"}
{"prompt":"Which smart contracts have a transaction count greater than 1000 and were deployed in the last 30 days? with given SQL schema CREATE TABLE smart_contracts (contract_address VARCHAR(42), deployment_date DATE); INSERT INTO smart_contracts (contract_address, deployment_date) VALUES ('0x123', '2022-01-01'), ('0x456', '2022-01-15'), ('0x789', '2022-02-01'); CREATE TABLE transactions (contract_address VARCHAR(42), transaction_date DATE); INSERT INTO transactions (contract_address, transaction_date) VALUES ('0x123', '2022-01-01'), ('0x123', '2022-01-02'), ('0x456', '2022-01-16'), ('0x456', '2022-01-17'), ('0x789', '2022-02-01'), ('0x789', '2022-02-02');","completion":"SELECT contract_address FROM smart_contracts s JOIN transactions t ON s.contract_address = t.contract_address WHERE s.deployment_date >= DATEADD(day, -30, CURRENT_DATE) GROUP BY contract_address HAVING COUNT(*) > 1000;"}
{"prompt":"Who is the top token holder for a specific digital asset? with given SQL schema CREATE TABLE token_holders (holder_id INT, address VARCHAR(42), asset_id INT, balance DECIMAL(20, 2));","completion":"SELECT ah.address, SUM(th.balance) FROM token_holders th JOIN digital_assets da ON th.asset_id = da.asset_id GROUP BY ah.address ORDER BY SUM(th.balance) DESC LIMIT 1;"}
{"prompt":"Calculate the total quantity of products sold and group by supplier name, for products in the \"Haircare\" category. with given SQL schema CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2)); CREATE TABLE sales (id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, date DATE); CREATE VIEW sales_per_product AS SELECT sales.product_id, products.name, products.category, SUM(sales.quantity) as quantity_sold FROM sales JOIN products ON sales.product_id = products.id GROUP BY sales.product_id, products.name, products.category, sales.supplier_id;","completion":"SELECT sales_per_product.category as product_category, supplier_id, SUM(quantity_sold) as total_quantity_sold FROM sales_per_product WHERE product_category = 'Haircare' GROUP BY product_category, supplier_id;"}
{"prompt":"List all products that are both vegan and cruelty-free, ordered by name in ascending order. with given SQL schema CREATE TABLE products (product_id INT, name VARCHAR(255), category VARCHAR(255), vegan BOOLEAN, cruelty_free BOOLEAN);","completion":"SELECT * FROM products WHERE vegan = TRUE AND cruelty_free = TRUE ORDER BY name ASC;"}
{"prompt":"Which countries produce cruelty-free skincare products and how many are there? with given SQL schema CREATE TABLE cruelty_free_products (country VARCHAR(255), cruelty_free BOOLEAN, product_count INTEGER); INSERT INTO cruelty_free_products (country, cruelty_free, product_count) VALUES ('France', true, 2000), ('USA', false, 3000), ('Canada', true, 1000), ('Australia', true, 1500);","completion":"SELECT country, SUM(product_count) as total_products FROM cruelty_free_products WHERE cruelty_free = true GROUP BY country;"}
{"prompt":"How many emergency response vehicles are stationed in each borough? with given SQL schema CREATE TABLE borough (id INT, name TEXT); INSERT INTO borough (id, name) VALUES (1, 'Brooklyn'); INSERT INTO borough (id, name) VALUES (2, 'Queens'); CREATE TABLE stations (id INT, borough_id INT, num_vehicles INT); INSERT INTO stations (id, borough_id, num_vehicles) VALUES (1, 1, 12); INSERT INTO stations (id, borough_id, num_vehicles) VALUES (2, 2, 15);","completion":"SELECT b.name, s.num_vehicles FROM stations s JOIN borough b ON s.borough_id = b.id;"}
{"prompt":"What is the average response time for emergency calls in CityA, grouped by incident type? with given SQL schema CREATE TABLE EmergencyCalls (CallID INT, City VARCHAR(50), IncidentType VARCHAR(50), ResponseTime INT); INSERT INTO EmergencyCalls VALUES (1, 'CityA', 'Fire', 8), (2, 'CityA', 'Medical', 12); CREATE TABLE IncidentTypes (IncidentType VARCHAR(50), TypeDescription VARCHAR(50)); INSERT INTO IncidentTypes VALUES ('Fire', 'Building Fire'), ('Medical', 'Medical Emergency');","completion":"SELECT IncidentType, AVG(ResponseTime) FROM EmergencyCalls EC INNER JOIN IncidentTypes IT ON EC.IncidentType = IT.IncidentType WHERE City = 'CityA' GROUP BY IncidentType;"}
{"prompt":"What is the count of incidents for each type at each location, and what is the percentage of the total count for each location? with given SQL schema CREATE TABLE incidents(id INT, location VARCHAR(255), type VARCHAR(255), timestamp TIMESTAMP);","completion":"SELECT location, type, COUNT(*) as incident_count, incident_count * 100.0 \/ SUM(COUNT(*)) OVER (PARTITION BY location) as percentage FROM incidents GROUP BY location, type;"}
{"prompt":"What is the maximum and minimum response time for fire departments in each city in the state of Ohio? with given SQL schema CREATE TABLE fire_department_oh (id INT, city VARCHAR(255), response_time INT);","completion":"SELECT city, MIN(response_time) as min_response_time, MAX(response_time) as max_response_time FROM fire_department_oh GROUP BY city;"}
{"prompt":"Which defense agency has the highest total contract value in Texas? with given SQL schema CREATE TABLE Agency_Contracts (Agency VARCHAR(255), Contract_Value INT, State VARCHAR(255)); INSERT INTO Agency_Contracts (Agency, Contract_Value, State) VALUES ('DOD', 1000000, 'Texas'), ('DOJ', 1500000, 'Texas'), ('DOD', 1200000, 'California'), ('CIA', 800000, 'Texas');","completion":"SELECT Agency, SUM(Contract_Value) as Total_Contract_Value FROM Agency_Contracts WHERE State = 'Texas' GROUP BY Agency ORDER BY Total_Contract_Value DESC;"}
{"prompt":"Delete all records in the 'equipment' table where the 'type' is 'ground' with given SQL schema CREATE TABLE equipment (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(20)); INSERT INTO equipment (id, name, type) VALUES (1, 'M1 Abrams', 'ground'), (2, 'F-15 Eagle', 'air'), (3, 'Los Angeles', 'sea');","completion":"DELETE FROM equipment WHERE type = 'ground';"}
{"prompt":"List all transactions involving customers from the US in February 2022. with given SQL schema CREATE TABLE customers (customer_id INT, customer_name TEXT, country TEXT); CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_date DATE);","completion":"SELECT t.transaction_id, c.customer_name, c.country, t.transaction_date FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE c.country = 'US' AND t.transaction_date BETWEEN '2022-02-01' AND '2022-02-28';"}
{"prompt":"Which customers have made a transaction over 500 in the \"risk_management\" category? with given SQL schema CREATE TABLE customers (id INT, name VARCHAR(50), category VARCHAR(50)); INSERT INTO customers (id, name, category) VALUES (1, 'John Doe', 'risk_management'); INSERT INTO customers (id, name, category) VALUES (2, 'Jane Smith', 'compliance'); INSERT INTO customers (id, name, category) VALUES (3, 'Jim Brown', 'risk_management'); CREATE TABLE transactions (id INT, customer_id INT, amount DECIMAL(10, 2)); INSERT INTO transactions (id, customer_id, amount) VALUES (1, 1, 500.00); INSERT INTO transactions (id, customer_id, amount) VALUES (2, 1, 200.00); INSERT INTO transactions (id, customer_id, amount) VALUES (3, 2, 100.00); INSERT INTO transactions (id, customer_id, amount) VALUES (4, 3, 750.00);","completion":"SELECT c.name FROM customers c INNER JOIN transactions t ON c.id = t.customer_id WHERE c.category = 'risk_management' AND t.amount > 500;"}
{"prompt":"Update the max_capacity of a vessel with given SQL schema fleet(vessel_id, vessel_name, max_capacity, build_year, type, flag)","completion":"UPDATE fleet SET max_capacity = 13000 WHERE vessel_id = 3002;"}
{"prompt":"What is the average salary for workers in the renewable energy sector in the US and Canada? with given SQL schema CREATE TABLE worker_salaries (employee_id INT, country VARCHAR(50), sector VARCHAR(50), salary FLOAT);","completion":"SELECT AVG(salary) FROM worker_salaries WHERE country IN ('USA', 'Canada') AND sector = 'Renewable Energy';"}
{"prompt":"Which excavation sites have more than 10 artifacts? with given SQL schema CREATE TABLE ExcavationSite (SiteID INT, SiteName VARCHAR(50)); INSERT INTO ExcavationSite (SiteID, SiteName) VALUES (1, 'Site A'), (2, 'Site B'), (3, 'Site C'); CREATE TABLE Artifact (ArtifactID INT, SiteID INT, ObjectType VARCHAR(50)); INSERT INTO Artifact (ArtifactID, SiteID, ObjectType) VALUES (1, 1, 'Pottery'), (2, 1, 'Tool'), (3, 2, 'Statue'), (4, 2, 'Bead'), (5, 3, 'Bead'), (6, 3, 'Bead'), (7, 3, 'Bead'), (8, 3, 'Bead'), (9, 3, 'Bead'), (10, 3, 'Bead'), (11, 3, 'Bead');","completion":"SELECT e.SiteName FROM ExcavationSite e JOIN Artifact a ON e.SiteID = a.SiteID GROUP BY e.SiteName HAVING COUNT(a.ArtifactID) > 10;"}
{"prompt":"What is the total revenue of rural hospitals that have a trauma center? with given SQL schema CREATE TABLE hospitals (id INT, location VARCHAR(20), trauma_center BOOLEAN, revenue INT); INSERT INTO hospitals (id, location, trauma_center, revenue) VALUES (1, 'rural', TRUE, 1000000);","completion":"SELECT SUM(revenue) FROM hospitals WHERE location = 'rural' AND trauma_center = TRUE;"}
{"prompt":"List the intelligence operations and their corresponding threat levels, and rank them based on their threat level and budget. with given SQL schema CREATE TABLE intel_ops_threat (id INT, operation VARCHAR, threat VARCHAR, budget INT); INSERT INTO intel_ops_threat (id, operation, threat, budget) VALUES (1, 'Operation Red Folder', 'High', 5000000), (2, 'Operation Black Vault', 'Medium', 7000000), (3, 'Operation Blue Sail', 'Low', 6000000);","completion":"SELECT operation, threat, budget, ROW_NUMBER() OVER (PARTITION BY threat ORDER BY budget DESC) as rank FROM intel_ops_threat;"}
{"prompt":"What is the diversity ratio (percentage of non-male employees) in each department? with given SQL schema CREATE TABLE Employees (EmployeeID int, Department varchar(20), Gender varchar(10)); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (1, 'Marketing', 'Male'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (2, 'Marketing', 'Female'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (3, 'IT', 'Male'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (4, 'IT', 'Non-binary');","completion":"SELECT Department, (COUNT(CASE WHEN Gender <> 'Male' THEN 1 END) \/ COUNT(*)) * 100 AS DiversityRatio FROM Employees GROUP BY Department;"}
{"prompt":"Find the number of energy efficiency policies in countries with more than 20 GW of solar capacity with given SQL schema CREATE TABLE energy_efficiency (id INT, name TEXT, country TEXT); INSERT INTO energy_efficiency (id, name, country) VALUES (1, 'Energy Efficiency Standard', 'Germany'); INSERT INTO energy_efficiency (id, name, country) VALUES (2, 'Energy Conservation Act', 'India'); INSERT INTO energy_efficiency (id, name, country) VALUES (3, 'Energy Efficiency Resource Standard', 'US'); INSERT INTO renewable_sources (id, name, country, capacity) VALUES (4, 'Solar', 'India', 30); INSERT INTO renewable_sources (id, name, country, capacity) VALUES (5, 'Solar', 'US', 60);","completion":"SELECT COUNT(*) FROM energy_efficiency WHERE country IN (SELECT country FROM renewable_sources WHERE name = 'Solar' AND capacity > 20);"}
{"prompt":"What is the total installed capacity of hydroelectric power plants in Brazil and Canada? with given SQL schema CREATE TABLE hydroelectric_power (country TEXT, capacity INTEGER); INSERT INTO hydroelectric_power (country, capacity) VALUES ('Brazil', 104000), ('Canada', 78000), ('China', 350000), ('United States', 100000), ('Russia', 45000);","completion":"(SELECT capacity FROM hydroelectric_power WHERE country = 'Brazil') UNION (SELECT capacity FROM hydroelectric_power WHERE country = 'Canada');"}
{"prompt":"What is the total number of points scored by each team in the NBA this season? with given SQL schema CREATE TABLE nba_teams (team_name TEXT, points_scored INT); INSERT INTO nba_teams (team_name, points_scored) VALUES ('Cavaliers', 8000), ('Warriors', 8500), ('Celtics', 7500);","completion":"SELECT team_name, SUM(points_scored) FROM nba_teams GROUP BY team_name;"}
{"prompt":"What is the average amount of donations given by donors from the United States, per transaction, for the year 2020? with given SQL schema CREATE TABLE donors (donor_id INT, donor_name VARCHAR(50), donor_country VARCHAR(50), donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donors (donor_id, donor_name, donor_country, donation_amount, donation_date) VALUES (1, 'John Doe', 'USA', 50.00, '2020-01-01');","completion":"SELECT AVG(donation_amount) FROM donors WHERE donor_country = 'USA' AND YEAR(donation_date) = 2020;"}
{"prompt":"Which organizations focus on ethical AI in each continent? with given SQL schema CREATE TABLE ethics_by_continent (continent VARCHAR(50), name VARCHAR(50), focus VARCHAR(50)); INSERT INTO ethics_by_continent (continent, name, focus) VALUES ('Asia', 'Ethics Asia', 'Ethical AI'), ('Africa', 'AI for Good', 'Ethical AI');","completion":"SELECT continent, name FROM ethics_by_continent WHERE focus = 'Ethical AI';"}
{"prompt":"Find the daily ridership for a specific train line with given SQL schema CREATE TABLE train_trip (trip_id INT, trip_date DATE, line_name VARCHAR(50), num_passengers INT);","completion":"SELECT trip_date, SUM(num_passengers) AS daily_ridership FROM train_trip WHERE line_name = 'Red Line' GROUP BY trip_date;"}
{"prompt":"What is the average distance and frequency for routes with a distance greater than 7 km and a frequency of at least 120? with given SQL schema CREATE TABLE route (route_id INT, start_station VARCHAR(255), end_station VARCHAR(255), distance FLOAT, frequency INT); INSERT INTO route (route_id, start_station, end_station, distance, frequency) VALUES (3, 'Station C', 'Station D', 7.2, 120); INSERT INTO route (route_id, start_station, end_station, distance, frequency) VALUES (4, 'Station D', 'Station E', 6.5, 100);","completion":"SELECT route_id, AVG(distance) as avg_distance, AVG(frequency) as avg_frequency FROM route WHERE distance > 7 AND frequency >= 120 GROUP BY route_id;"}
{"prompt":"Update the 'GOTS' status of all manufacturers in the 'Africa' region to 'Yes'. with given SQL schema CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50), Region VARCHAR(50), GOTS VARCHAR(5)); INSERT INTO Manufacturers (ManufacturerID, ManufacturerName, Region, GOTS) VALUES (1, 'EcoFriendlyFabrics', 'Europe', 'No'), (2, 'GreenYarns', 'Asia', 'No'), (3, 'SustainableTextiles', 'Africa', 'No'), (4, 'EcoWeaves', 'Europe', 'Yes');","completion":"UPDATE Manufacturers SET GOTS = 'Yes' WHERE Region = 'Africa';"}
{"prompt":"What is the total quantity of materials used by each producer in the 'ethical_materials' table? with given SQL schema CREATE TABLE ethical_materials (id INT, producer VARCHAR(20), material VARCHAR(20), quantity INT); INSERT INTO ethical_materials (id, producer, material, quantity) VALUES (1, 'EcoFabrics', 'cotton', 8000), (2, 'GreenYarn', 'wool', 5000), (3, 'EcoFabrics', 'polyester', 3000), (4, 'GreenYarn', 'cotton', 6000), (5, 'SustainaFiber', 'silk', 9000);","completion":"SELECT producer, SUM(quantity) AS total_quantity FROM ethical_materials GROUP BY producer;"}
{"prompt":"What is the minimum sustainability score for each textile material? with given SQL schema CREATE TABLE TextileSources (SourceID INT, Country VARCHAR(255), Material VARCHAR(255), SustainabilityScore INT); INSERT INTO TextileSources (SourceID, Country, Material, SustainabilityScore) VALUES (1, 'India', 'Cotton', 85), (2, 'Brazil', 'Rayon', 70), (3, 'USA', 'Hemp', 90), (4, 'China', 'Polyester', 60);","completion":"SELECT Material, MIN(SustainabilityScore) AS MinSustainabilityScore FROM TextileSources GROUP BY Material;"}
{"prompt":"How many clients have taken out socially responsible loans in each country? with given SQL schema CREATE TABLE socially_responsible_loans(client_id INT, country VARCHAR(25));INSERT INTO socially_responsible_loans(client_id, country) VALUES (1, 'Malaysia'), (2, 'UAE'), (3, 'Indonesia'), (4, 'Saudi Arabia'), (5, 'Malaysia'), (6, 'UAE');","completion":"SELECT country, COUNT(DISTINCT client_id) as num_clients FROM socially_responsible_loans GROUP BY country;"}
{"prompt":"What is the total amount of Shariah-compliant loans issued by each financial institution in Oceania? with given SQL schema CREATE TABLE financial_institutions (institution_id INT, institution_name TEXT); INSERT INTO financial_institutions (institution_id, institution_name) VALUES (1, 'Islamic Bank Oceania'), (2, 'Al Baraka Bank Oceania'), (3, 'Islamic Finance House Oceania'); CREATE TABLE loans (loan_id INT, institution_id INT, loan_type TEXT, amount FLOAT); INSERT INTO loans (loan_id, institution_id, loan_type, amount) VALUES (1, 1, 'Shariah-compliant', 5000), (2, 1, 'conventional', 7000), (3, 2, 'Shariah-compliant', 4000), (4, 2, 'Shariah-compliant', 6000), (5, 3, 'conventional', 8000);","completion":"SELECT institution_id, SUM(amount) FROM loans WHERE loan_type = 'Shariah-compliant' AND institution_id IN (SELECT institution_id FROM financial_institutions WHERE institution_name LIKE '%Oceania%') GROUP BY institution_id;"}
{"prompt":"What is the total income of clients in Canada who are socially responsible investors? with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(100), age INT, country VARCHAR(50), income DECIMAL(10,2), is_socially_responsible_investor BOOLEAN);  INSERT INTO clients (client_id, name, age, country, income, is_socially_responsible_investor) VALUES (12, 'Emily Chen', 40, 'Canada', 80000, true);","completion":"SELECT SUM(income) FROM clients WHERE country = 'Canada' AND is_socially_responsible_investor = true;"}
{"prompt":"Find the number of donations made by first-time donors in the last quarter. with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationType TEXT, DonationAmount FLOAT); INSERT INTO Donations (DonationID, DonorID, DonationDate, DonationType, DonationAmount) VALUES (1, 1, '2021-01-01', 'Individual', 100), (2, 2, '2021-02-01', 'Corporate', 5000);","completion":"SELECT COUNT(*) FROM (SELECT DonationID FROM Donations WHERE DonationType = 'Individual' AND DonationDate >= DATEADD(quarter, -1, CURRENT_DATE) EXCEPT SELECT DonationID FROM PreviousDonations) AS FirstTimeDonors;"}
{"prompt":"How many volunteers helped in the education programs in 2021? with given SQL schema CREATE TABLE volunteers (id INT, name TEXT, program TEXT, hours FLOAT, volunteer_date DATE); INSERT INTO volunteers (id, name, program, hours, volunteer_date) VALUES (1, 'Jim Brown', 'Education', 5, '2021-02-03'); INSERT INTO volunteers (id, name, program, hours, volunteer_date) VALUES (2, 'Karen Green', 'Health', 3, '2021-06-15');","completion":"SELECT COUNT(*) FROM volunteers WHERE program = 'Education' AND volunteer_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"What is the total donation amount by each program in Q1 2022? with given SQL schema CREATE TABLE program (pid INT, pname VARCHAR(255)); INSERT INTO program (pid, pname) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE donation (did INT, pid INT, donation_date DATE, amount DECIMAL(10, 2)); INSERT INTO donation (did, pid, donation_date, amount) VALUES (1, 1, '2022-01-05', 500), (2, 2, '2022-01-10', 750), (3, 3, '2022-03-20', 600);","completion":"SELECT p.pname, SUM(d.amount) as total_donation FROM donation d JOIN program p ON d.pid = p.pid WHERE d.donation_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY p.pname;"}
{"prompt":"Which programs have the highest and lowest average donation amounts? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, DonationAmount DECIMAL(10,2)); INSERT INTO Programs (ProgramID, ProgramName, DonationAmount) VALUES (1, 'Education', 500.00), (2, 'Healthcare', 250.00);","completion":"SELECT ProgramName, AVG(DonationAmount) AS AvgDonation FROM Programs GROUP BY ProgramName ORDER BY AvgDonation DESC, ProgramName ASC;"}
{"prompt":"Delete all records with a best-before date earlier than tomorrow from the FoodSafetyRecords.PerishableGoods table. with given SQL schema CREATE TABLE FoodSafetyRecords.PerishableGoods (itemName TEXT, bestBeforeDate DATE);","completion":"DELETE FROM FoodSafetyRecords.PerishableGoods WHERE bestBeforeDate < DATEADD(day, 1, CURDATE());"}
{"prompt":"Insert new food safety records for locations \"A123\", \"B456\", and \"C789\" with given SQL schema CREATE TABLE food_safety_records (id INT, location VARCHAR(255), inspection_date DATE, violation_count INT);","completion":"INSERT INTO food_safety_records (location, inspection_date, violation_count) VALUES ('A123', '2022-03-01', 0), ('B456', '2022-03-05', 2), ('C789', '2022-03-10', 1);"}
{"prompt":"What is the percentage of meals that meet the daily recommended nutrient intake for customers in Indonesia? with given SQL schema CREATE TABLE meals (id INT, customer_id INT, calories INT, daily_recommended_intake INT); INSERT INTO meals (id, customer_id, calories, daily_recommended_intake) VALUES (1, 1, 1000, 2200), (2, 1, 700, 2200), (3, 2, 800, 2300); CREATE TABLE customers (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO customers (id, name, country) VALUES (1, 'Budi Santosa', 'Indonesia'), (2, 'Dewi Sartika', 'Indonesia');","completion":"SELECT (COUNT(*) FILTER (WHERE meals.calories >= (meals.daily_recommended_intake * 0.8))) * 100.0 \/ COUNT(*) AS percentage FROM meals JOIN customers ON meals.customer_id = customers.id WHERE customers.country = 'Indonesia';"}
{"prompt":"How many shipments were handled by each warehouse in the first quarter of 2021? with given SQL schema CREATE TABLE Warehouse (id INT, country VARCHAR(255), city VARCHAR(255), opened_date DATE); INSERT INTO Warehouse (id, country, city, opened_date) VALUES (1, 'Germany', 'Frankfurt', '2019-01-01'), (2, 'France', 'Lyon', '2020-01-01'); CREATE TABLE Shipments (id INT, warehouse_id INT, shipped_date DATE);","completion":"SELECT w.country, w.city, COUNT(s.id) AS shipment_count FROM Warehouse w JOIN Shipments s ON w.id = s.warehouse_id WHERE s.shipped_date >= '2021-01-01' AND s.shipped_date < '2021-04-01' GROUP BY w.id;"}
{"prompt":"What is the average delivery time for ground freight from 'Toronto' to 'Montreal'? with given SQL schema CREATE TABLE ground_freight_routes (route_id INT, origin VARCHAR(255), destination VARCHAR(255), transit_time INT); INSERT INTO ground_freight_routes (route_id, origin, destination, transit_time) VALUES (1, 'Toronto', 'Montreal', 7), (2, 'Toronto', 'New York', 12), (3, 'Montreal', 'Boston', 8);","completion":"SELECT AVG(transit_time) FROM ground_freight_routes WHERE origin = 'Toronto' AND destination = 'Montreal';"}
{"prompt":"How many biosensors have been developed in each country? with given SQL schema CREATE TABLE biosensors(id INT, name VARCHAR(50), country VARCHAR(50), development_date DATE);INSERT INTO biosensors (id, name, country, development_date) VALUES (1, 'BioSensorA', 'USA', '2021-03-01');INSERT INTO biosensors (id, name, country, development_date) VALUES (2, 'BioSensorB', 'Canada', '2020-12-10');INSERT INTO biosensors (id, name, country, development_date) VALUES (3, 'BioSensorC', 'USA', '2019-09-25');","completion":"SELECT country, COUNT(*) AS biosensors_per_country FROM biosensors GROUP BY country ORDER BY biosensors_per_country DESC;"}
{"prompt":"Insert a new record in the 'Research_Grants' table with the following details: Grant_ID = 30, Grant_Title = 'Artificial Intelligence for Healthcare', Start_Date = '2023-01-01', End_Date = '2025-12-31', Grant_Amount = 1200000, Grant_Status = 'Active with given SQL schema CREATE TABLE Research_Grants (Grant_ID INT, Grant_Title VARCHAR(100), Start_Date DATE, End_Date DATE, Grant_Amount DECIMAL(10, 2), Grant_Status VARCHAR(20));","completion":"INSERT INTO Research_Grants (Grant_ID, Grant_Title, Start_Date, End_Date, Grant_Amount, Grant_Status) VALUES (30, 'Artificial Intelligence for Healthcare', '2023-01-01', '2025-12-31', 1200000, 'Active');"}
{"prompt":"What is the number of smart city initiatives implemented in each country? with given SQL schema CREATE TABLE smart_city_initiatives (initiative_id INT, country VARCHAR(50), city VARCHAR(100), status VARCHAR(50)); INSERT INTO smart_city_initiatives (initiative_id, country, city, status) VALUES (1, 'France', 'Paris', 'Implemented');","completion":"SELECT country, COUNT(*) as implemented_initiatives FROM smart_city_initiatives WHERE status = 'Implemented' GROUP BY country;"}
{"prompt":"What is the average rating of historical sites in Egypt? with given SQL schema CREATE TABLE site_ratings(site_id INT, rating FLOAT); INSERT INTO site_ratings (site_id, rating) VALUES (1, 4.5), (2, 4.7); CREATE TABLE site_info(site_id INT, name TEXT, country TEXT); INSERT INTO site_info (site_id, name, country) VALUES (1, 'Historic Site', 'Egypt'), (2, 'Modern Building', 'Egypt');","completion":"SELECT AVG(rating) FROM site_info si INNER JOIN site_ratings sr ON si.site_id = sr.site_id WHERE si.country = 'Egypt' AND sr.rating IS NOT NULL;"}
{"prompt":"What is the engagement rate of virtual tours in European hotels? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT); INSERT INTO hotels (hotel_id, hotel_name, country) VALUES (1, 'Hotel A', 'France'), (2, 'Hotel B', 'Germany'), (3, 'Hotel C', 'Italy'), (4, 'Hotel D', 'Spain'); CREATE TABLE virtual_tours (hotel_id INT, tour_name TEXT, views INT); INSERT INTO virtual_tours (hotel_id, tour_name, views) VALUES (1, 'Tour A', 100), (2, 'Tour B', 200), (3, 'Tour C', 300), (4, 'Tour D', 400), (5, 'Tour E', 500);","completion":"SELECT country, AVG(views \/ (SELECT SUM(views) FROM virtual_tours WHERE hotel_id = hotels.hotel_id) * 100) as engagement_rate FROM hotels INNER JOIN virtual_tours ON hotels.hotel_id = virtual_tours.hotel_id GROUP BY country;"}
{"prompt":"Count the number of French Impressionist paintings in the collection. with given SQL schema CREATE TABLE art_collection (id INT, art_name VARCHAR(50), artist_name VARCHAR(50), style VARCHAR(50));","completion":"SELECT COUNT(*) as impressionist_count FROM art_collection WHERE artist_name = 'French' AND style = 'Impressionism';"}
{"prompt":"What is the average price of paintings from African artists in our collection? with given SQL schema CREATE TABLE Artworks (id INT, title VARCHAR(50), price DECIMAL(10,2), medium VARCHAR(50), artist_nationality VARCHAR(50)); CREATE TABLE Collections (id INT, name VARCHAR(50), continent VARCHAR(50));","completion":"SELECT AVG(Artworks.price) FROM Artworks INNER JOIN Collections ON Artworks.artist_nationality = Collections.continent WHERE Artworks.medium = 'Painting' AND Collections.continent = 'Africa';"}
{"prompt":"What is the total value of surrealist art pieces? with given SQL schema CREATE TABLE ArtPieces (id INT, title VARCHAR(50), galleryId INT, year INT, value INT, style VARCHAR(20)); INSERT INTO ArtPieces (id, title, galleryId, year, value, style) VALUES (1, 'Piece 1', 1, 2000, 10000, 'Impressionism'), (2, 'Piece 2', 1, 2010, 15000, 'Surrealism'), (3, 'Piece 3', 2, 2020, 20000, 'Cubism'), (4, 'Piece 4', 3, 1990, 5000, 'Surrealism'), (5, 'Piece 5', NULL, 1874, 25000, 'Impressionism');","completion":"SELECT SUM(value) FROM ArtPieces WHERE style = 'Surrealism';"}
{"prompt":"Calculate the average number of bridges constructed per year in the Pacific Northwest, and the total bridge construction cost for each year since 2000. with given SQL schema CREATE TABLE bridge_projects (id INT, project_name VARCHAR(255), location VARCHAR(255), construction_year INT, length FLOAT, cost INT); INSERT INTO bridge_projects (id, project_name, location, construction_year, length, cost) VALUES (1, 'I-5 Bridge Replacement', 'Pacific Northwest', 2002, 2.5, 12000000), (2, 'Highway 101 Bridge Construction', 'Pacific Northwest', 2005, 1.8, 8000000), (3, 'I-405 Bridge Rehabilitation', 'Pacific Northwest', 2010, 3.2, 15000000);","completion":"SELECT construction_year, AVG(length) AS avg_bridges_per_year, SUM(cost) AS total_cost FROM bridge_projects WHERE location = 'Pacific Northwest' AND construction_year >= 2000 GROUP BY construction_year;"}
{"prompt":"What are the names and types of bridges in California? with given SQL schema CREATE TABLE Bridges (Name VARCHAR(255), Type VARCHAR(255), State VARCHAR(255)); INSERT INTO Bridges (Name, Type, State) VALUES ('Golden Gate', 'Suspension', 'California');","completion":"SELECT Name, Type FROM Bridges WHERE State = 'California';"}
{"prompt":"What is the average budget for all projects in the infrastructure development database? with given SQL schema CREATE TABLE if not exists Projects (id INT, name VARCHAR(50), type VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO Projects (id, name, type, budget) VALUES (1, 'Seawall', 'Resilience', 5000000.00), (2, 'Floodgate', 'Resilience', 3000000.00), (3, 'Bridge', 'Transportation', 8000000.00), (4, 'Highway', 'Transportation', 12000000.00);","completion":"SELECT AVG(budget) FROM Projects;"}
{"prompt":"How many sustainable tourism initiatives are there in total and how many are there in each continent? with given SQL schema CREATE TABLE Sustainable_Initiatives_Global (id INT, name VARCHAR(50), location VARCHAR(50), continent VARCHAR(50)); INSERT INTO Sustainable_Initiatives_Global (id, name, location, continent) VALUES (1, 'Green Safari', 'Africa', 'Africa'), (2, 'Eco-Lodge Project', 'Africa', 'Africa'), (3, 'Sustainable Beach Resort', 'Americas', 'Americas'), (4, 'Community-Based Tourism', 'Asia', 'Asia'), (5, 'Island Conservation Project', 'Australia', 'Australia'), (6, 'Glacier Preservation Initiative', 'Antarctica', 'Antarctica');","completion":"SELECT continent, COUNT(*) as num_initiatives FROM Sustainable_Initiatives_Global GROUP BY continent; SELECT COUNT(*) as total_initiatives FROM Sustainable_Initiatives_Global;"}
{"prompt":"What is the percentage change in the number of tourists visiting Japan from India between March and April? with given SQL schema CREATE TABLE tourism (date DATE, host_country VARCHAR(50), visitor_country VARCHAR(50), number_of_tourists INT); INSERT INTO tourism (date, host_country, visitor_country, number_of_tourists) VALUES ('2022-03-01', 'Japan', 'India', 10000), ('2022-04-01', 'Japan', 'India', 12000);","completion":"SELECT (SUM(number_of_tourists) - LAG(SUM(number_of_tourists)) OVER (PARTITION BY visitor_country ORDER BY date)) \/ LAG(SUM(number_of_tourists)) OVER (PARTITION BY visitor_country ORDER BY date) * 100.0 as percentage_change FROM tourism WHERE host_country = 'Japan' AND visitor_country = 'India';"}
{"prompt":"Identify legal technology initiatives and their respective countries, excluding those launched before 2010. with given SQL schema CREATE TABLE historical_legal_tech (id INT, initiative VARCHAR(255), launch_date DATE, country VARCHAR(255)); INSERT INTO historical_legal_tech (id, initiative, launch_date, country) VALUES (1, 'Legacy AI Platform', '2005-02-28', 'US'), (2, 'Traditional Contracts', '2000-01-01', 'Canada'), (3, 'Legal Chatbot', '2011-08-15', 'US');","completion":"SELECT initiative, country FROM historical_legal_tech WHERE launch_date >= '2010-01-01' ORDER BY country;"}
{"prompt":"What is the total number of marine life research stations and pollution control initiatives in the Southern Ocean? with given SQL schema CREATE TABLE marine_life_research_stations (id INT, name VARCHAR(255), region VARCHAR(255)); CREATE TABLE pollution_control_initiatives (id INT, name VARCHAR(255), region VARCHAR(255));","completion":"SELECT SUM(cnt) FROM (SELECT COUNT(*) cnt FROM marine_life_research_stations WHERE region = 'Southern Ocean' UNION ALL SELECT COUNT(*) FROM pollution_control_initiatives WHERE region = 'Southern Ocean') x;"}
{"prompt":"What is the total quantity of locally sourced ingredients used in dishes? with given SQL schema CREATE TABLE ingredients (ingredient VARCHAR(255), is_local BOOLEAN); INSERT INTO ingredients VALUES ('Carrots', TRUE); INSERT INTO ingredients VALUES ('Celery', FALSE); CREATE TABLE dish_ingredients (ingredient VARCHAR(255), dish VARCHAR(255), quantity INT); INSERT INTO dish_ingredients VALUES ('Carrots', 'Carrot Soup', 5); INSERT INTO dish_ingredients VALUES ('Celery', 'Chicken Soup', 3);","completion":"SELECT SUM(quantity) AS total_local_ingredients FROM dish_ingredients DI INNER JOIN ingredients I ON DI.ingredient = I.ingredient WHERE I.is_local = TRUE;"}
{"prompt":"What is the geopolitical risk level for 'Country Y' in 2021? with given SQL schema CREATE TABLE geopolitical_risks_2 (country varchar(255), year int, risk_level int); INSERT INTO geopolitical_risks_2 (country, year, risk_level) VALUES ('Country X', 2022, 3), ('Country X', 2021, 2), ('Country Y', 2021, 5);","completion":"SELECT risk_level FROM geopolitical_risks_2 WHERE country = 'Country Y' AND year = 2021;"}
{"prompt":"How many mobile customers in the telecom company's database live in each city? with given SQL schema CREATE TABLE mobile_customers (customer_id INT, city VARCHAR(20)); INSERT INTO mobile_customers (customer_id, city) VALUES (1, 'Seattle'), (2, 'Seattle'), (3, 'Portland');","completion":"SELECT city, COUNT(*) FROM mobile_customers GROUP BY city;"}
{"prompt":"How many unique sources are there in the 'investigative_journalism' category? with given SQL schema CREATE TABLE articles (article_id INT, title VARCHAR(50), category VARCHAR(20), source VARCHAR(20)); INSERT INTO articles (article_id, title, category, source) VALUES (1, 'Investigative Article 1', 'investigative_journalism', 'Source A'), (2, 'Investigative Article 2', 'investigative_journalism', 'Source B'), (3, 'News Article 1', 'news', 'Source A');","completion":"SELECT COUNT(DISTINCT source) FROM articles WHERE category = 'investigative_journalism';"}
{"prompt":"What is the difference in ocean acidity levels between the Atlantic and Pacific Oceans? with given SQL schema CREATE TABLE ocean_ph (location TEXT, ph FLOAT); INSERT INTO ocean_ph (location, ph) VALUES ('Atlantic Ocean', 8.1), ('Pacific Ocean', 7.9), ('Indian Ocean', 8.0), ('Southern Ocean', 8.1), ('North Pacific Ocean', 8.2);","completion":"SELECT MAX(ph) - MIN(ph) FROM ocean_ph WHERE location IN ('Atlantic Ocean', 'Pacific Ocean');"}
{"prompt":"What is the total amount donated by each donor in each country? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, RecipientID INT, Amount DECIMAL(10,2), Country TEXT); INSERT INTO Donations (DonationID, DonorID, RecipientID, Amount, Country) VALUES (1, 1, 101, 1000.00, 'USA'), (2, 1, 102, 2000.00, 'Canada'), (3, 2, 101, 500.00, 'USA'), (4, 3, 103, 3000.00, 'Mexico');","completion":"SELECT DonorName, Country, SUM(Amount) AS TotalDonated FROM Donations GROUP BY DonorName, Country;"}
{"prompt":"What is the name of the game genre with the most players? with given SQL schema CREATE TABLE player (player_id INT, name VARCHAR(50), age INT, game_genre VARCHAR(20)); INSERT INTO player (player_id, name, age, game_genre) VALUES (1, 'John Doe', 25, 'Racing'); INSERT INTO player (player_id, name, age, game_genre) VALUES (2, 'Jane Smith', 30, 'RPG'); INSERT INTO player (player_id, name, age, game_genre) VALUES (3, 'Alice Johnson', 35, 'Racing');","completion":"SELECT game_genre FROM player GROUP BY game_genre ORDER BY COUNT(*) DESC LIMIT 1;"}
{"prompt":"Delete records in the 'sensor_data' table where the 'sensor_type' is 'temperature' and the reading is greater than 30 with given SQL schema CREATE TABLE sensor_data (sensor_id INT, sensor_type VARCHAR(20), reading FLOAT, timestamp TIMESTAMP);","completion":"DELETE FROM sensor_data WHERE sensor_type = 'temperature' AND reading > 30;"}
{"prompt":"Update the 'location' column for the 'field' table where 'field_id' is 501 to 'Brazil' with given SQL schema CREATE TABLE field (field_id INT, name VARCHAR(50), location VARCHAR(50));","completion":"UPDATE field SET location = 'Brazil' WHERE field_id = 501;"}
{"prompt":"Identify cities with the highest citizen feedback ratings and the corresponding number of public services provided in each city. with given SQL schema CREATE TABLE cities (city_id INT, city_name VARCHAR(255), region VARCHAR(255)); CREATE TABLE public_services (service_id INT, service_name VARCHAR(255), city_id INT, rating INT);","completion":"SELECT c.city_name, MAX(ps.rating) as max_rating, COUNT(ps.service_id) as num_services FROM cities c JOIN public_services ps ON c.city_id = ps.city_id GROUP BY c.city_name HAVING MAX(ps.rating) >= ALL (SELECT MAX(ps2.rating) FROM public_services ps2 GROUP BY ps2.city_id);"}
{"prompt":"What is the policy impact on air quality in industrial regions? with given SQL schema CREATE TABLE air_quality (air_quality_id INT, region VARCHAR(20), pollution_level INT); INSERT INTO air_quality (air_quality_id, region, pollution_level) VALUES (1, 'North', 60), (2, 'North', 65), (3, 'South', 40), (4, 'South', 42), (5, 'East', 50), (6, 'East', 55), (7, 'West', 30), (8, 'West', 32); CREATE TABLE policies (policy_id INT, region VARCHAR(20), policy_type VARCHAR(20), start_date DATE); INSERT INTO policies (policy_id, region, policy_type, start_date) VALUES (1, 'North', 'Industrial', '2015-01-01'), (2, 'South', 'Green', '2016-01-01'), (3, 'East', 'Industrial', '2017-01-01'), (4, 'West', 'Green', '2018-01-01');","completion":"SELECT aq.region, AVG(aq.pollution_level) AS avg_pollution, p.policy_type FROM air_quality aq INNER JOIN policies p ON aq.region = p.region WHERE p.policy_type = 'Industrial' OR p.policy_type = 'Green' GROUP BY aq.region, p.policy_type;"}
{"prompt":"What is the total budget allocated for education and healthcare services in 2020, for regions with a population over 1 million? with given SQL schema CREATE TABLE regions (id INT, name TEXT, population INT); INSERT INTO regions (id, name, population) VALUES (1, 'RegionA', 1200000), (2, 'RegionB', 700000), (3, 'RegionC', 2000000); CREATE TABLE budget (service TEXT, year INT, amount INT, region_id INT); INSERT INTO budget (service, year, amount, region_id) VALUES ('Education', 2020, 5000000, 1), ('Healthcare', 2020, 7000000, 1), ('Education', 2020, 3000000, 3), ('Healthcare', 2020, 6000000, 3);","completion":"SELECT SUM(b.amount) FROM budget b INNER JOIN regions r ON b.region_id = r.id WHERE b.service IN ('Education', 'Healthcare') AND b.year = 2020 AND r.population > 1000000;"}
{"prompt":"What was the maximum budget allocated for transportation in each region? with given SQL schema CREATE TABLE Budget (region VARCHAR(255), category VARCHAR(255), amount INT); INSERT INTO Budget (region, category, amount) VALUES ('North', 'Transportation', 3000000), ('South', 'Transportation', 4000000), ('East', 'Transportation', 5000000), ('West', 'Transportation', 2000000);","completion":"SELECT region, MAX(amount) FROM Budget WHERE category = 'Transportation' GROUP BY region;"}
{"prompt":"List all Dysprosium transactions with prices over 50 dollars in European countries. with given SQL schema CREATE TABLE dysprosium_transactions (country VARCHAR(20), element VARCHAR(20), price DECIMAL(5,2), transaction_date DATE); INSERT INTO dysprosium_transactions (country, element, price, transaction_date) VALUES ('France', 'Dysprosium', 60, '2020-01-01'), ('Germany', 'Dysprosium', 45, '2020-02-01'), ('France', 'Dysprosium', 70, '2020-03-01');","completion":"SELECT * FROM dysprosium_transactions WHERE country IN ('France', 'Germany') AND element = 'Dysprosium' AND price > 50;"}
{"prompt":"What is the minimum size, in square feet, of properties with inclusive housing policies in the city of Washington D.C.? with given SQL schema CREATE TABLE property (id INT, size INT, city VARCHAR(20), inclusive_housing_policy BOOLEAN);","completion":"SELECT MIN(size) FROM property WHERE city = 'Washington D.C.' AND inclusive_housing_policy = TRUE;"}
{"prompt":"What is the average CO2 emission (in metric tons) for the top 5 most populous countries in Africa? with given SQL schema CREATE TABLE co2_emissions (country VARCHAR(100), population INT, co2_emissions FLOAT); INSERT INTO co2_emissions (country, population, co2_emissions) VALUES ('Nigeria', 206 million, 5.2), ('Egypt', 102 million, 3.2), ('South Africa', 59 million, 9.4), ('Ethiopia', 115 million, 0.7), ('Kenya', 53 million, 1.3);","completion":"SELECT AVG(co2_emissions) FROM (SELECT co2_emissions FROM co2_emissions WHERE country IN ('Nigeria', 'Egypt', 'South Africa', 'Ethiopia', 'Kenya') ORDER BY population DESC LIMIT 5) subquery;"}
{"prompt":"Determine the percentage of sales for each product category in each state with given SQL schema CREATE TABLE sales (sale_id INT, product_id INT, product_category VARCHAR(255), sales FLOAT, state VARCHAR(255)); INSERT INTO sales (sale_id, product_id, product_category, sales, state) VALUES (1, 1, 'Electronics', 100, 'WA'), (2, 2, 'Clothing', 200, 'NY'), (3, 3, 'Electronics', 150, 'CA');","completion":"SELECT s1.product_category, s1.state, SUM(s1.sales) \/ (SELECT SUM(s2.sales) FROM sales s2 WHERE s2.state = s1.state) FROM sales s1 GROUP BY s1.product_category, s1.state;"}
{"prompt":"Which spacecraft have been used in the most missions? with given SQL schema CREATE TABLE spacecraft (craft_name VARCHAR(50), manufacturer VARCHAR(50), first_flight DATE, total_flights INT);","completion":"SELECT craft_name, total_flights FROM spacecraft ORDER BY total_flights DESC LIMIT 5;"}
{"prompt":"Delete all records from the 'fan_demographics' table where the location is 'Texas' with given SQL schema CREATE TABLE fan_demographics (age INT, gender VARCHAR(10), location VARCHAR(20)); INSERT INTO fan_demographics (age, gender, location) VALUES (35, 'Female', 'California'), (28, 'Male', 'Texas');","completion":"DELETE FROM fan_demographics WHERE location = 'Texas';"}
{"prompt":"What is the total revenue for VR headset ticket sales by team, per month? with given SQL schema CREATE TABLE ticket_sales (ticket_sale_id INT, team_id INT, sale_quarter INT, sale_year INT, quantity INT, is_vr BOOLEAN); CREATE TABLE teams (team_id INT, team_name VARCHAR(255), sport_id INT); INSERT INTO ticket_sales VALUES (1, 101, 1, 2020, 500, true), (2, 102, 2, 2020, 750, false), (3, 101, 3, 2020, 800, true), (4, 103, 4, 2020, 600, false); INSERT INTO teams VALUES (101, 'TeamA', 1), (102, 'TeamB', 2), (103, 'TeamC', 1);","completion":"SELECT t.team_name, DATE_TRUNC('month', make_date(sale_year, sale_quarter*3, 1)) as sale_month, SUM(quantity * CASE WHEN is_vr THEN 200 ELSE 100 END) as total_revenue FROM ticket_sales ts JOIN teams t ON ts.team_id = t.team_id GROUP BY t.team_name, sale_month;"}
{"prompt":"Find the total number of unique IP addresses involved in ransomware and phishing attacks in the last six months, excluding any repeat offenders. with given SQL schema CREATE TABLE attack_ips (ip_address TEXT, attack_type TEXT, occurrence_count INT, last_updated DATETIME);INSERT INTO attack_ips (ip_address, attack_type, occurrence_count, last_updated) VALUES ('192.168.0.1', 'Ransomware', 2, '2022-03-01 10:00:00'), ('192.168.0.2', 'Phishing', 1, '2022-03-02 11:00:00'), ('192.168.0.3', 'Ransomware', 3, '2022-03-03 12:00:00'), ('192.168.0.4', 'Phishing', 4, '2022-03-04 13:00:00'), ('192.168.0.5', 'Ransomware', 1, '2022-03-05 14:00:00');","completion":"SELECT ip_address FROM attack_ips WHERE attack_type IN ('Ransomware', 'Phishing') AND last_updated >= DATEADD(month, -6, GETDATE()) GROUP BY ip_address HAVING COUNT(*) = 1;"}
{"prompt":"What is the average CO2 emission of public buses in Los Angeles and London? with given SQL schema CREATE TABLE public_buses(id INT, make VARCHAR(20), model VARCHAR(20), city VARCHAR(20), co2_emission FLOAT);","completion":"SELECT AVG(co2_emission) FROM public_buses WHERE city IN ('Los Angeles', 'London');"}
{"prompt":"What is the total quantity of 'Tencel Lyocell' and 'Bamboo Viscose' fabrics in stock? with given SQL schema CREATE TABLE inventory (id INT PRIMARY KEY, fabric_name VARCHAR(50), size VARCHAR(10), quantity INT, color VARCHAR(10)); INSERT INTO inventory (id, fabric_name, size, quantity, color) VALUES (1, 'Organic Cotton', 'S', 100, 'White'); INSERT INTO inventory (id, fabric_name, size, quantity, color) VALUES (2, 'Tencel Lyocell', 'M', 75, 'Green'); INSERT INTO inventory (id, fabric_name, size, quantity, color) VALUES (3, 'Bamboo Viscose', 'L', 50, 'Natural');","completion":"SELECT SUM(quantity) as total_quantity FROM inventory WHERE fabric_name IN ('Tencel Lyocell', 'Bamboo Viscose');"}
{"prompt":"What is the average number of union members per workplace in the healthcare sector? with given SQL schema CREATE TABLE workplaces (id INT, name TEXT, location TEXT, sector TEXT, total_employees INT, union_members INT, successful_cb BOOLEAN, cb_year INT);","completion":"SELECT AVG(union_members \/ total_employees) FROM workplaces WHERE sector = 'healthcare';"}
{"prompt":"What is the total number of auto shows attended by each manufacturer? with given SQL schema CREATE TABLE Auto_Shows (id INT, manufacturer VARCHAR(50), show_name VARCHAR(50), year INT); CREATE TABLE Manufacturers (id INT, name VARCHAR(50));","completion":"SELECT Manufacturers.name, COUNT(DISTINCT Auto_Shows.show_name) FROM Auto_Shows JOIN Manufacturers ON Auto_Shows.manufacturer = Manufacturers.name GROUP BY Manufacturers.name;"}
{"prompt":"What is the total number of electric vehicles sold in 'California' in the 'sales' schema? with given SQL schema CREATE TABLE sales_regions (id INT, name VARCHAR(50));   CREATE TABLE sales (id INT, region_id INT, vehicle_count INT);   CREATE TABLE vehicles (id INT, type VARCHAR(50));   INSERT INTO sales_regions VALUES (1, 'California');   INSERT INTO sales VALUES (1, 1, 5000);   INSERT INTO vehicles VALUES (1, 'electric');","completion":"SELECT SUM(sales.vehicle_count) FROM sales INNER JOIN sales_regions ON sales.region_id = sales_regions.id INNER JOIN vehicles ON sales.id = vehicles.id WHERE vehicles.type = 'electric' AND sales_regions.name = 'California';"}
{"prompt":"How many vessels have not had an inspection in the past year? with given SQL schema CREATE TABLE safety_records(id INT, vessel_name VARCHAR(50), inspection_date DATE); CREATE TABLE vessels(id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO vessels(id, name, country) VALUES (1, 'Vessel A', 'Philippines'), (2, 'Vessel B', 'Philippines'); INSERT INTO safety_records(id, vessel_name, inspection_date) VALUES (1, 'Vessel A', '2022-01-01');","completion":"SELECT COUNT(*) FROM vessels WHERE name NOT IN (SELECT vessel_name FROM safety_records WHERE inspection_date BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW());"}
{"prompt":"Which states have a landfill tipping fee greater than $60? with given SQL schema CREATE TABLE landfill (state VARCHAR(2), tipping_fee DECIMAL(5,2)); INSERT INTO landfill (state, tipping_fee) VALUES ('NY', 65.30), ('NJ', 71.50), ('CA', 51.75);","completion":"SELECT state, AVG(tipping_fee) as avg_tipping_fee FROM landfill GROUP BY state HAVING avg_tipping_fee > 60;"}
{"prompt":"Calculate the average daily water consumption in 'DailyWaterUsage' table for the month of January with given SQL schema CREATE TABLE DailyWaterUsage (day DATE, usage INT, month DATE);","completion":"SELECT AVG(usage) FROM DailyWaterUsage WHERE month = '2022-01-01'::DATE;"}
{"prompt":"Update records in the 'creative_applications' table where the 'application_name' is 'AI Poet' and the 'user_rating' is less than 4 with given SQL schema CREATE TABLE creative_applications (id INT PRIMARY KEY, application_name VARCHAR(50), art_form VARCHAR(20), num_users INT, user_rating INT);","completion":"UPDATE creative_applications SET user_rating = user_rating + 2 WHERE application_name = 'AI Poet' AND user_rating < 4;"}
{"prompt":"What is the number of agricultural innovation patents filed by each organization? with given SQL schema CREATE TABLE innovation_patents (org VARCHAR(50), patent_count INT); INSERT INTO innovation_patents (org, patent_count) VALUES ('Agritech Inc.', 15), ('FarmMate', 20), ('GreenFields', 25);","completion":"SELECT org, patent_count FROM innovation_patents;"}
{"prompt":"What is the percentage of accidents for each aircraft model? with given SQL schema CREATE SCHEMA if not exists aerospace;CREATE TABLE if not exists aerospace.aircraft (id INT PRIMARY KEY, name VARCHAR(50), model VARCHAR(50), accidents INT); INSERT INTO aerospace.aircraft (id, name, model, accidents) VALUES (1, 'Boeing', '737', 3), (2, 'Boeing', '747', 2), (3, 'Airbus', 'A320', 6);","completion":"SELECT model, (SUM(accidents) OVER (PARTITION BY model) * 100.0 \/ (SELECT SUM(accidents) FROM aerospace.aircraft)) as accident_percentage FROM aerospace.aircraft;"}
{"prompt":"Delete the 'Forest Friends' program record in the 'education_programs' table with given SQL schema CREATE TABLE education_programs (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), attendance INT, target_audience VARCHAR(50));","completion":"DELETE FROM education_programs WHERE name = 'Forest Friends';"}
{"prompt":"Determine the total population of each animal with given SQL schema CREATE TABLE if not exists animal_population (id INT, animal VARCHAR(255), country VARCHAR(255), population INT); INSERT INTO animal_population (id, animal, country, population) VALUES (1, 'Tiger', 'India', 2500), (2, 'Tiger', 'Bangladesh', 150), (3, 'Elephant', 'India', 5000), (4, 'Elephant', 'Sri Lanka', 2500);","completion":"SELECT animal, SUM(population) FROM animal_population GROUP BY animal;"}
{"prompt":"Find the total population of each animal species in the reserve, ordered by total population in descending order. with given SQL schema CREATE TABLE animal_population (species VARCHAR(255), reserve VARCHAR(255), population INT); INSERT INTO animal_population (species, reserve, population) VALUES ('Tiger', 'Bandhavgarh', 63), ('Lion', 'Savuti', 50), ('Elephant', 'Kruger', 250);","completion":"SELECT species, SUM(population) AS total_population FROM animal_population GROUP BY species ORDER BY total_population DESC;"}
{"prompt":"What is the maximum feeding rate by feed type and farm size? with given SQL schema CREATE TABLE Feed ( id INT PRIMARY KEY, type VARCHAR(50) ); CREATE TABLE Farm ( id INT PRIMARY KEY, feed_id INT, size INT, FOREIGN KEY (feed_id) REFERENCES Feed(id) ); CREATE TABLE FeedingRate ( farm_id INT, feed_id INT, rate INT, FOREIGN KEY (farm_id) REFERENCES Farm(id), FOREIGN KEY (feed_id) REFERENCES Feed(id) );","completion":"SELECT Feed.type, Farm.size, MAX(FeedingRate.rate) FROM Feed INNER JOIN FeedingRate ON Feed.id = FeedingRate.feed_id INNER JOIN Farm ON FeedingRate.farm_id = Farm.id GROUP BY Feed.type, Farm.size;"}
{"prompt":"What is the total biomass of fish in each farming region? with given SQL schema CREATE TABLE FarmingRegions (RegionID INT, RegionName VARCHAR(50), Biomass INT); INSERT INTO FarmingRegions VALUES (1, 'Atlantic Coast', 1200), (2, 'Gulf Coast', 1800), (3, 'Pacific Coast', 2500);","completion":"SELECT RegionName, SUM(Biomass) FROM FarmingRegions GROUP BY RegionName;"}
{"prompt":"Determine the percentage of funding for each program with given SQL schema CREATE TABLE program_funding (program_id INT, amount DECIMAL(10,2)); INSERT INTO program_funding (program_id, amount) VALUES (1, 5000.00), (2, 7000.00), (3, 3000.00);","completion":"SELECT p.name, (SUM(f.amount)\/(SELECT SUM(amount) FROM program_funding))*100 AS percentage FROM program_funding f JOIN programs p ON f.program_id = p.id GROUP BY p.id;"}
{"prompt":"How many dance performances had more than 50 attendees? with given SQL schema CREATE TABLE dance (id INT, num_attendees INT); INSERT INTO dance (id, num_attendees) VALUES (1, 40), (2, 60), (3, 30), (4, 70), (5, 20);","completion":"SELECT COUNT(*) FROM dance WHERE num_attendees > 50;"}
{"prompt":"What is the total funding received by dance programs in urban areas? with given SQL schema CREATE SCHEMA if not exists arts_culture; CREATE TABLE if not exists arts_culture.programs(program_id INT, program_name VARCHAR(50), location VARCHAR(20), category VARCHAR(20)); CREATE TABLE if not exists arts_culture.funding(funding_id INT, program_id INT, amount INT);","completion":"SELECT SUM(funding.amount) FROM arts_culture.funding JOIN arts_culture.programs ON funding.program_id = programs.program_id WHERE programs.location = 'urban' AND programs.category = 'dance';"}
{"prompt":"Insert a new TV show into the database? with given SQL schema CREATE TABLE tv_shows (id INT, title VARCHAR(100), genre VARCHAR(50), viewership INT);","completion":"INSERT INTO tv_shows (id, title, genre, viewership) VALUES (4, 'Show7', 'Crime', 5000000);"}
{"prompt":"Delete records from the 'communication_campaigns' table where the 'start_date' is before 2010-01-01 with given SQL schema CREATE TABLE communication_campaigns (id INT, campaign VARCHAR(255), start_date DATE, end_date DATE);","completion":"DELETE FROM communication_campaigns WHERE start_date < '2010-01-01';"}
{"prompt":"How many climate communication projects were initiated before 2018 in the European region? with given SQL schema CREATE TABLE climate_communication_projects (project_id INT, project_name VARCHAR(255), start_year INT, region VARCHAR(255)); INSERT INTO climate_communication_projects (project_id, project_name, start_year, region) VALUES (1, 'European Climate Change Awareness Campaign', 2014, 'Europe'), (2, 'Global Warming Education Program', 2017, 'Global');","completion":"SELECT COUNT(*) FROM climate_communication_projects WHERE start_year < 2018 AND region = 'Europe';"}
{"prompt":"Update the 'infection_rates' table with new data with given SQL schema CREATE TABLE infection_rates (id INT PRIMARY KEY, state VARCHAR(50), infection_rate FLOAT); INSERT INTO infection_rates (id, state, infection_rate) VALUES (1, 'Texas', 5.6);","completion":"UPDATE infection_rates SET infection_rate = 5.7 WHERE state = 'Texas';"}
{"prompt":"What is the obesity prevalence in Australia? with given SQL schema CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255)); INSERT INTO countries (id, name, continent) VALUES (1, 'Afghanistan', 'Asia'); CREATE TABLE health_metrics (id INT PRIMARY KEY, country_id INT, metric_type VARCHAR(255), metric_value DECIMAL(3,2)); INSERT INTO health_metrics (id, country_id, metric_type, metric_value) VALUES (1, 1, 'Obesity Prevalence', 32.5), (2, 1, 'Diabetes Prevalence', 12.0);","completion":"SELECT metric_value FROM health_metrics WHERE metric_type = 'Obesity Prevalence' AND country_id = (SELECT id FROM countries WHERE name = 'Australia');"}
{"prompt":"What is the average diversity metric for companies founded in the same year as the company with the highest funding amount? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founding_date DATE, diversity_metric FLOAT); INSERT INTO companies (id, name, founding_date, diversity_metric) VALUES (1, 'InnoVentures', '2012-01-01', 0.75);","completion":"SELECT AVG(diversity_metric) FROM companies WHERE YEAR(founding_date) = (SELECT YEAR(founding_date) FROM companies WHERE funding_amount = (SELECT MAX(funding_amount) FROM funding_records JOIN companies ON funding_records.company_id = companies.id));"}
{"prompt":"What is the total area of farmland for each crop type? with given SQL schema CREATE TABLE crop (id INT PRIMARY KEY, name VARCHAR(50), area_in_hectares INT); INSERT INTO crop (id, name, area_in_hectares) VALUES (1, 'Corn', 30000), (2, 'Soybeans', 25000), (3, 'Wheat', 20000);","completion":"SELECT name, SUM(area_in_hectares) FROM crop GROUP BY name;"}
{"prompt":"Which farmers are located in Asia? with given SQL schema CREATE TABLE Farmers (id INT, name VARCHAR(50), location VARCHAR(50), expertise VARCHAR(50)); INSERT INTO Farmers (id, name, location, expertise) VALUES (1, 'Bella Chen', 'Asia', 'Rice Farming');","completion":"SELECT * FROM Farmers WHERE location = 'Asia';"}
{"prompt":"What is the average disability accommodation cost per program by state, ordered from highest to lowest? with given SQL schema CREATE TABLE Disability_Accommodations (State VARCHAR(2), Program VARCHAR(50), Cost DECIMAL(5,2)); INSERT INTO Disability_Accommodations VALUES ('CA', 'ASL Interpretation', 1500.00), ('CA', 'Wheelchair Ramp', 3500.00), ('NY', 'ASL Interpretation', 1200.00), ('NY', 'Wheelchair Ramp', 3200.00);","completion":"SELECT AVG(Cost) as Avg_Cost, State FROM Disability_Accommodations GROUP BY State ORDER BY Avg_Cost DESC;"}
{"prompt":"What is the regulatory status of digital assets that have been involved in more than 1000 transactions? with given SQL schema CREATE TABLE digital_assets_regulatory (asset_id INT, asset_name VARCHAR(50), network VARCHAR(10), status VARCHAR(20)); INSERT INTO digital_assets_regulatory (asset_id, asset_name, network, status) VALUES (1, 'ETH', 'ETH', 'Unregulated'); CREATE TABLE transactions (transaction_id INT, asset_id INT, block_number INT);","completion":"SELECT d.asset_name, d.status FROM digital_assets_regulatory d JOIN (SELECT asset_id, COUNT(transaction_id) as transaction_count FROM transactions GROUP BY asset_id) t ON d.asset_id = t.asset_id WHERE t.transaction_count > 1000;"}
{"prompt":"What is the minimum age of a tree in the Trees table? with given SQL schema CREATE TABLE Trees (id INT, species VARCHAR(255), age INT); INSERT INTO Trees (id, species, age) VALUES (1, 'Oak', 50), (2, 'Pine', 30), (3, 'Maple', 40);","completion":"SELECT MIN(age) FROM Trees;"}
{"prompt":"What is the total revenue of organic cosmetics sold in the UK in Q3 2021? with given SQL schema CREATE TABLE Cosmetics_Sales (SaleID int, ProductName varchar(100), SaleDate date, QuantitySold int, Price decimal(5,2), Organic bit); INSERT INTO Cosmetics_Sales (SaleID, ProductName, SaleDate, QuantitySold, Price, Organic) VALUES (1, 'Organic Lip Balm', '2021-07-05', 100, 4.50, 1); INSERT INTO Cosmetics_Sales (SaleID, ProductName, SaleDate, QuantitySold, Price, Organic) VALUES (2, 'Natural Skin Cream', '2021-10-10', 200, 12.99, 1);","completion":"SELECT SUM(QuantitySold * Price) FROM Cosmetics_Sales WHERE Organic = 1 AND SaleDate >= '2021-07-01' AND SaleDate <= '2021-09-30';"}
{"prompt":"What is the total sales revenue of organic skincare products? with given SQL schema CREATE TABLE SkincareSales (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), revenue DECIMAL(10,2), is_organic BOOLEAN);","completion":"SELECT SUM(revenue) FROM SkincareSales WHERE is_organic = TRUE;"}
{"prompt":"What is the total number of emergency incidents by type in 2022 in Portland?\" with given SQL schema CREATE TABLE emergency_incidents (id INT, type VARCHAR(255), city VARCHAR(255), incident_date DATE); INSERT INTO emergency_incidents (id, type, city, incident_date) VALUES (1, 'Medical', 'Portland', '2022-01-01');","completion":"SELECT type, COUNT(*) as total FROM emergency_incidents WHERE city = 'Portland' AND incident_date >= '2022-01-01' AND incident_date < '2023-01-01' GROUP BY type;"}
{"prompt":"How many clients have a compliance status of 'Non-compliant'? with given SQL schema CREATE TABLE regulatory_compliance (client_id INT, compliance_status VARCHAR(50), compliance_date DATE); INSERT INTO regulatory_compliance (client_id, compliance_status, compliance_date) VALUES (3, 'Compliant', '2022-02-15'); INSERT INTO regulatory_compliance (client_id, compliance_status, compliance_date) VALUES (4, 'Non-compliant', '2022-02-20');","completion":"SELECT COUNT(*) as number_of_non_compliant_clients FROM regulatory_compliance WHERE compliance_status = 'Non-compliant';"}
{"prompt":"What are the names and locations of factories with unethical labor practices? with given SQL schema CREATE TABLE factories (factory_id INT, name TEXT, location TEXT, practices TEXT);","completion":"SELECT name, location FROM factories WHERE practices = 'unethical';"}
{"prompt":"What is the average age of all female individuals from the 'ancient_burials' table? with given SQL schema CREATE TABLE ancient_burials (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), grave_contents VARCHAR(255)); INSERT INTO ancient_burials (id, name, age, gender, grave_contents) VALUES (1, 'John Doe', 45, 'Male', 'Pottery, coins'), (2, 'Jane Doe', 30, 'Female', 'Beads, pottery');","completion":"SELECT AVG(age) FROM ancient_burials WHERE gender = 'Female';"}
{"prompt":"How many social impact investments were made in India in 2020? with given SQL schema CREATE TABLE investments (id INT, investment_year INT, investment_type VARCHAR(50), country VARCHAR(50));","completion":"SELECT COUNT(*) FROM investments WHERE investment_year = 2020 AND country = 'India' AND investment_type = 'social impact';"}
{"prompt":"How many military personnel are in each department in the 'MilitaryPersonnel' table? with given SQL schema CREATE TABLE MilitaryPersonnel (id INT PRIMARY KEY, name VARCHAR(50), rank VARCHAR(50), country VARCHAR(50), department VARCHAR(50)); INSERT INTO MilitaryPersonnel (id, name, rank, country, department) VALUES (1, 'Mohammed Al-Hassan', 'Captain', 'Saudi Arabia', 'Navy'); INSERT INTO MilitaryPersonnel (id, name, rank, country, department) VALUES (2, 'Jessica Chen', 'Lieutenant', 'Taiwan', 'Air Force'); INSERT INTO MilitaryPersonnel (id, name, rank, country, department) VALUES (3, 'Alexei Ivanov', 'Sergeant', 'Ukraine', 'Army');","completion":"SELECT department, COUNT(*) FROM MilitaryPersonnel GROUP BY department;"}
{"prompt":"List all the unique song-genre combinations, based on the 'genre' and 'song' tables, with no duplicates. with given SQL schema CREATE TABLE genre (genre_id INT, genre_name VARCHAR(255)); CREATE TABLE song (song_id INT, song_name VARCHAR(255), genre_id INT);","completion":"SELECT DISTINCT s.song_id, g.genre_id FROM genre g INNER JOIN song s ON g.genre_id = s.genre_id;"}
{"prompt":"What is the average revenue per stream for the \"Rock\" genre? with given SQL schema CREATE TABLE music_streaming (id INT, artist VARCHAR(50), song VARCHAR(50), genre VARCHAR(20), streamed_on DATE, revenue DECIMAL(10,2), streams INT); CREATE VIEW genre_revenue AS SELECT genre, SUM(revenue) AS total_revenue, SUM(streams) AS total_streams FROM music_streaming GROUP BY genre;","completion":"SELECT total_revenue \/ total_streams AS avg_revenue_per_stream FROM genre_revenue WHERE genre = 'Rock';"}
{"prompt":"What is the percentage of plays for each track on a given playlist, ordered from highest to lowest? with given SQL schema CREATE TABLE playlist_tracks (playlist_id INT, track_id INT, plays INT);  CREATE VIEW track_plays AS SELECT playlist_id, track_id, SUM(plays) as total_plays FROM playlist_tracks GROUP BY playlist_id, track_id;  CREATE VIEW total_plays_per_playlist AS SELECT playlist_id, SUM(total_plays) as total_plays FROM track_plays GROUP BY playlist_id;  CREATE VIEW percentage_of_plays AS SELECT pt.playlist_id, pt.track_id, pt.total_plays, pt.total_plays\/tppp.total_plays as percentage FROM track_plays pt JOIN total_plays_per_playlist tppp ON pt.playlist_id = tppp.playlist_id ORDER BY percentage DESC;","completion":"SELECT * FROM percentage_of_plays;"}
{"prompt":"How many volunteers signed up for each program in the last week? with given SQL schema CREATE TABLE Volunteers (VolunteerID INT, Name TEXT, ProgramID INT, VolunteerDate DATE); CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Volunteers (VolunteerID, Name, ProgramID, VolunteerDate) VALUES (1, 'John Doe', 1, '2021-05-01'), (2, 'Jane Smith', 2, '2021-05-03'); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Health');","completion":"SELECT COUNT(VolunteerID) AS NumVolunteers, Programs.ProgramName FROM Volunteers INNER JOIN Programs ON Volunteers.ProgramID = Programs.ProgramID WHERE VolunteerDate >= DATEADD(week, -1, GETDATE()) GROUP BY Programs.ProgramName"}
{"prompt":"How many professional development courses were completed by teachers in the English department? with given SQL schema CREATE TABLE teachers (teacher_id INT, department_id INT, teacher_name VARCHAR(255)); INSERT INTO teachers VALUES (1, 1, 'Ms. Hernandez'); INSERT INTO teachers VALUES (2, 2, 'Mr. Johnson'); CREATE TABLE departments (department_id INT, department_name VARCHAR(255)); INSERT INTO departments VALUES (1, 'English'); INSERT INTO departments VALUES (2, 'Physical Education'); CREATE TABLE course_enrollment (enrollment_id INT, teacher_id INT, course_id INT);","completion":"SELECT d.department_name, COUNT(c.course_id) FROM course_enrollment ce INNER JOIN teachers t ON ce.teacher_id = t.teacher_id INNER JOIN departments d ON t.department_id = d.department_id WHERE d.department_name = 'English';"}
{"prompt":"What is the average mental health score for male teachers? with given SQL schema CREATE TABLE teachers (id INT, name VARCHAR(50), gender VARCHAR(10), years_experience INT); INSERT INTO teachers (id, name, gender, years_experience) VALUES (1, 'John Doe', 'Male', 5);","completion":"SELECT AVG(m.mental_health_score) as average_score FROM teachers t JOIN teacher_mental_health m ON t.id = m.teacher_id WHERE t.gender = 'Male';"}
{"prompt":"What is the average mental health score of female students? with given SQL schema CREATE TABLE students (student_id INT, gender VARCHAR(10), school_id INT, mental_health_score INT); INSERT INTO students (student_id, gender, school_id, mental_health_score) VALUES (1, 'Female', 1001, 75), (2, 'Female', 1001, 80), (3, 'Male', 1002, 60);","completion":"SELECT AVG(s.mental_health_score) as avg_mental_health_score FROM students s WHERE s.gender = 'Female';"}
{"prompt":"What is the distribution of mental health scores for students in each grade? with given SQL schema CREATE TABLE student_grades (student_id INT, grade INT, mental_health_score INT); INSERT INTO student_grades (student_id, grade, mental_health_score) VALUES (1, 9, 75), (2, 9, 80), (3, 10, 60), (4, 10, 65), (5, 11, 85), (6, 11, 90), (7, 12, 70), (8, 12, 75), (9, 12, 80);","completion":"SELECT grade, AVG(mental_health_score) AS avg_score, STDDEV(mental_health_score) AS stddev_score FROM student_grades GROUP BY grade;"}
{"prompt":"What is the minimum salary for each job title in the IT department? with given SQL schema CREATE TABLE JobSalaries (JobTitle VARCHAR(50), EmployeeSalary DECIMAL(10,2), Department VARCHAR(50)); INSERT INTO JobSalaries (JobTitle, EmployeeSalary, Department) VALUES ('Software Engineer', 80000.00, 'IT'), ('Software Engineer', 85000.00, 'IT');","completion":"SELECT JobTitle, MIN(EmployeeSalary) FROM JobSalaries WHERE Department = 'IT' GROUP BY JobTitle;"}
{"prompt":"Delete records in the \"power_plants\" table where the \"fuel_type\" is 'coal' and the \"capacity_mw\" is less than 100 with given SQL schema CREATE TABLE power_plants ( id INT PRIMARY KEY, name VARCHAR(255), fuel_type VARCHAR(50), capacity_mw INT ); INSERT INTO power_plants (id, name, fuel_type, capacity_mw) VALUES (1, 'Plant A', 'coal', 50), (2, 'Plant B', 'gas', 200), (3, 'Plant C', 'wind', 150);","completion":"DELETE FROM power_plants WHERE fuel_type = 'coal' AND capacity_mw < 100;"}
{"prompt":"What is the total energy storage capacity (GWh) added in Australia and Canada since 2018? with given SQL schema CREATE TABLE energy_storage (id INT, name TEXT, country TEXT, capacity FLOAT, year INT); INSERT INTO energy_storage (id, name, country, capacity, year) VALUES (1, 'Hornsdale Power Reserve', 'Australia', 100, 2018), (2, 'Manitoba-Minnesota Transmission Project', 'Canada', 800, 2018), (3, 'Tesla Big Battery', 'Australia', 100, 2019), (4, 'Cameron-Clarendon II', 'Canada', 800, 2019);","completion":"SELECT SUM(capacity) FROM energy_storage WHERE country IN ('Australia', 'Canada') AND year >= 2018;"}
{"prompt":"What is the total number of hours volunteered for 'Women Empowerment' programs in '2019'? with given SQL schema CREATE TABLE Volunteers (volunteer_id INT, volunteer_name VARCHAR(255)); CREATE TABLE Volunteer_Hours (volunteer_id INT, hours_donated INT, volunteer_date DATE, program_area VARCHAR(255)); INSERT INTO Volunteers (volunteer_id, volunteer_name) VALUES (2, 'Laura Johnson'); INSERT INTO Volunteer_Hours (volunteer_id, hours_donated, volunteer_date, program_area) VALUES (2, 15, '2019-01-01', 'Women Empowerment');","completion":"SELECT SUM(Volunteer_Hours.hours_donated) FROM Volunteer_Hours INNER JOIN Volunteers ON Volunteer_Hours.volunteer_id = Volunteers.volunteer_id WHERE Volunteer_Hours.program_area = 'Women Empowerment' AND YEAR(Volunteer_Hours.volunteer_date) = 2019;"}
{"prompt":"How many labor violations have been reported in the supply chain for vegan leather products? with given SQL schema CREATE TABLE VeganLeatherSupplyChain (id INT, labor_violation ENUM('yes','no'));","completion":"SELECT COUNT(*) FROM VeganLeatherSupplyChain WHERE labor_violation = 'yes';"}
{"prompt":"What is the total revenue generated from the sales of products made from recycled materials in the North American market? with given SQL schema CREATE TABLE products (product_id INT, material VARCHAR(20), price DECIMAL(5,2), market VARCHAR(20)); INSERT INTO products (product_id, material, price, market) VALUES (1, 'recycled polyester', 70.00, 'North America'), (2, 'recycled cotton', 80.00, 'North America'), (3, 'recycled nylon', 90.00, 'Europe'), (4, 'recycled polyester', 75.00, 'North America'), (5, 'recycled wool', 100.00, 'North America');","completion":"SELECT SUM(sales.quantity * products.price) FROM sales JOIN products ON sales.product_id = products.product_id WHERE products.market = 'North America' AND products.material LIKE '%recycled%';"}
{"prompt":"What is the total number of likes received by posts containing the hashtag \"#climateaction\" in India, in the past month, and how many of these posts were sponsored? with given SQL schema CREATE TABLE posts (id INT, country VARCHAR(255), hashtags VARCHAR(255), likes INT, sponsored BOOLEAN, created_at TIMESTAMP);","completion":"SELECT SUM(likes) as total_likes, SUM(sponsored) as sponsored_posts FROM posts WHERE hashtags LIKE '%#climateaction%' AND country = 'India' AND created_at > NOW() - INTERVAL '1 month';"}
{"prompt":"What is the total number of posts made by users from the top 3 countries with the most followers? with given SQL schema CREATE TABLE users (id INT, name VARCHAR(50), country VARCHAR(2), followers INT); INSERT INTO users (id, name, country, followers) VALUES (1, 'Alice', 'US', 1000), (2, 'Bob', 'IN', 2000), (3, 'Charlie', 'CA', 1500), (4, 'David', 'US', 2500), (5, 'Eve', 'US', 3000);","completion":"SELECT COUNT(*) as total_posts FROM posts INNER JOIN (SELECT country, MAX(followers) as max_followers FROM users GROUP BY country LIMIT 3) as top_countries ON posts.user_id = top_countries.country;"}
{"prompt":"What was the average number of comments per post in Oceania in the last month? with given SQL schema CREATE TABLE comments_posts(region VARCHAR(20), post_date DATE, comments INT, posts INT); INSERT INTO comments_posts(region, post_date, comments, posts) VALUES('Oceania', '2021-09-01', 10, 10), ('Oceania', '2021-09-02', 12, 12), ('Oceania', '2021-09-03', 14, 14), ('Oceania', '2021-09-04', 16, 16), ('Oceania', '2021-09-05', 18, 18), ('Oceania', '2021-09-06', 20, 20), ('Oceania', '2021-09-07', 22, 22);","completion":"SELECT AVG(comments\/posts) FROM comments_posts WHERE region = 'Oceania' AND post_date >= DATEADD(month, -1, CURRENT_DATE)"}
{"prompt":"What is the maximum number of items of clothing produced per week by factories in Bangladesh and Vietnam, and how many factories can produce that many items? with given SQL schema CREATE TABLE factory_production (factory_id INT, factory_name VARCHAR(50), country VARCHAR(50), items_per_week INT); INSERT INTO factory_production VALUES (1, 'Factory A', 'Bangladesh', 5000); INSERT INTO factory_production VALUES (2, 'Factory B', 'Bangladesh', 6000); INSERT INTO factory_production VALUES (3, 'Factory C', 'Vietnam', 7000); INSERT INTO factory_production VALUES (4, 'Factory D', 'Vietnam', 5500);","completion":"SELECT MAX(items_per_week) as max_items, COUNT(*) as num_factories FROM factory_production WHERE country IN ('Bangladesh', 'Vietnam') HAVING items_per_week = MAX(items_per_week);"}
{"prompt":"What is the total amount of socially responsible loans issued by financial institutions in the European region for the year 2021? with given SQL schema CREATE TABLE financial_institutions (institution_id INT, institution_name TEXT, region TEXT);CREATE TABLE loans (loan_id INT, institution_id INT, loan_amount INT, issue_date DATE); INSERT INTO financial_institutions (institution_id, institution_name, region) VALUES (1, 'Institution A', 'Asia'), (2, 'Institution B', 'Europe'), (3, 'Institution C', 'Europe'); INSERT INTO loans (loan_id, institution_id, loan_amount, issue_date) VALUES (1, 1, 5000, '2021-01-01'), (2, 1, 7000, '2021-06-15'), (3, 2, 6000, '2021-03-20'), (4, 3, 8000, '2021-05-10');","completion":"SELECT SUM(loan_amount) FROM loans JOIN financial_institutions ON loans.institution_id = financial_institutions.institution_id WHERE region = 'Europe' AND EXTRACT(YEAR FROM issue_date) = 2021 AND loans.loan_amount IN (SELECT loan_amount FROM loans WHERE loan_amount >= 0);"}
{"prompt":"What was the total amount donated by individuals in the US in Q2 2022? with given SQL schema CREATE TABLE donors (id INT, name TEXT, country TEXT, donation_amount DECIMAL, donation_date DATE); INSERT INTO donors (id, name, country, donation_amount, donation_date) VALUES (1, 'John Doe', 'USA', 50.00, '2022-04-01'); INSERT INTO donors (id, name, country, donation_amount, donation_date) VALUES (2, 'Jane Smith', 'USA', 100.00, '2022-04-15');","completion":"SELECT SUM(donation_amount) FROM donors WHERE country = 'USA' AND donation_date BETWEEN '2022-04-01' AND '2022-06-30';"}
{"prompt":"Which warehouse has the lowest quantity of item 'ORG-01'? with given SQL schema CREATE TABLE warehouse (id INT, name VARCHAR(255), location VARCHAR(255)); INSERT INTO warehouse (id, name, location) VALUES (1, 'NY', 'New York'), (2, 'LA', 'Los Angeles'); CREATE TABLE inventory (item_code VARCHAR(255), quantity INT, warehouse_id INT); INSERT INTO inventory (item_code, quantity, warehouse_id) VALUES ('EGG-01', 300, 1), ('APP-01', 200, 1), ('ORG-01', 150, 1), ('ORG-01', 50, 2);","completion":"SELECT warehouse_id, MIN(quantity) FROM inventory WHERE item_code = 'ORG-01' GROUP BY warehouse_id;"}
{"prompt":"Find the total number of virtual tour bookings by users from Asia? with given SQL schema CREATE TABLE user_profiles (user_id INT, name VARCHAR(50), region VARCHAR(30)); CREATE TABLE user_bookings (booking_id INT, user_id INT, tour_id INT, booking_date DATE); INSERT INTO user_profiles (user_id, name, region) VALUES (1, 'Hiroshi', 'Japan'), (2, 'Mei-Ling', 'China'), (3, 'Siti', 'Indonesia'), (4, 'Heinz', 'Germany'); INSERT INTO user_bookings (booking_id, user_id, tour_id, booking_date) VALUES (1, 1, 2, '2022-01-01'), (2, 1, 3, '2022-01-02'), (3, 2, 1, '2022-01-01'), (4, 3, 2, '2022-01-03'), (5, 4, 1, '2022-01-01');","completion":"SELECT COUNT(*) FROM user_bookings JOIN user_profiles ON user_bookings.user_id = user_profiles.user_id WHERE user_profiles.region = 'Asia';"}
{"prompt":"What is the maximum revenue generated by eco-tours in a single month in 2022? with given SQL schema CREATE TABLE eco_tours (id INT, name TEXT, revenue DECIMAL(10, 2), tour_date DATE); INSERT INTO eco_tours (id, name, revenue, tour_date) VALUES (1, 'Rainforest Adventure', 12000.00, '2022-03-20'), (2, 'Marine Life Encounter', 15000.00, '2022-08-05'), (3, 'Mountain Biking Tour', 9000.00, '2022-11-27');","completion":"SELECT MAX(monthly_revenue) FROM (SELECT EXTRACT(MONTH FROM tour_date) AS month, SUM(revenue) AS monthly_revenue FROM eco_tours WHERE YEAR(tour_date) = 2022 GROUP BY EXTRACT(MONTH FROM tour_date)) AS subquery;"}
{"prompt":"Show the distribution of hotel tech adoption timelines in South America. with given SQL schema CREATE TABLE tech_adoption (hotel_id INT, location VARCHAR(20), adoption_date DATE);","completion":"SELECT YEAR(adoption_date) as adoption_year, COUNT(hotel_id) as num_hotels FROM tech_adoption WHERE location = 'South America' GROUP BY adoption_year"}
{"prompt":"How many works were exhibited in the year 1950? with given SQL schema CREATE TABLE exhibitions (exhibition_id INT PRIMARY KEY, exhibition_name TEXT, year INT, location TEXT);CREATE TABLE exhibits (exhibit_id INT PRIMARY KEY, work_id INT, exhibition_id INT, FOREIGN KEY (work_id) REFERENCES works(work_id), FOREIGN KEY (exhibition_id) REFERENCES exhibitions(exhibition_id));INSERT INTO exhibitions (exhibition_id, exhibition_name, year, location) VALUES (1, 'Documenta', 1950, 'Kassel, Germany'); INSERT INTO exhibits (exhibit_id, work_id, exhibition_id) VALUES (1, 1, 1);","completion":"SELECT COUNT(*) FROM exhibits e JOIN exhibitions ex ON e.exhibition_id = ex.exhibition_id WHERE ex.year = 1950;"}
{"prompt":"What is the average founding year of all art galleries in the database? with given SQL schema CREATE TABLE art_galleries (name TEXT, founding_year INTEGER); INSERT INTO art_galleries (name, founding_year) VALUES ('Uffizi Gallery', 1581), ('Louvre Museum', 1793), ('Prado Museum', 1819);","completion":"SELECT AVG(founding_year) FROM art_galleries;"}
{"prompt":"What is the total value of all 'Expressionist' artworks? with given SQL schema CREATE TABLE Artworks (artwork_id INT, style VARCHAR(20), price DECIMAL(10,2)); INSERT INTO Artworks (artwork_id, style, price) VALUES (1, 'Impressionist', 1200.00), (2, 'Expressionist', 2000.00), (3, 'Impressionist', 1800.00), (4, 'Expressionist', 2500.00), (5, 'Impressionist', 1500.00);","completion":"SELECT SUM(price) FROM Artworks WHERE style = 'Expressionist';"}
{"prompt":"Add a record for a depression screening campaign with given SQL schema CREATE TABLE public_awareness_campaigns (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, start_date DATE, end_date DATE);","completion":"INSERT INTO public_awareness_campaigns (id, name, description, start_date, end_date) VALUES (1, 'Depression Screening Campaign', 'A nationwide campaign aimed at increasing depression awareness and screening.', '2022-05-01', '2022-05-31');"}
{"prompt":"Find the average age of patients who received group therapy in India? with given SQL schema CREATE TABLE patient_demographics (patient_id INT, age INT, treatment VARCHAR(255), country VARCHAR(255)); INSERT INTO patient_demographics (patient_id, age, treatment, country) VALUES (1, 28, 'Group', 'India'); INSERT INTO patient_demographics (patient_id, age, treatment, country) VALUES (2, 32, 'Individual', 'India');","completion":"SELECT AVG(age) FROM patient_demographics WHERE treatment = 'Group' AND country = 'India';"}
{"prompt":"Which projects were completed before 2022 in the Transportation_Infrastructure table? with given SQL schema CREATE TABLE Transportation_Infrastructure (id INT, project_name VARCHAR(50), completion_date DATE); INSERT INTO Transportation_Infrastructure (id, project_name, completion_date) VALUES (1, 'Light Rail Extension', '2023-01-01'); INSERT INTO Transportation_Infrastructure (id, project_name, completion_date) VALUES (2, 'Bicycle Lane Network', '2024-05-15');","completion":"SELECT project_name FROM Transportation_Infrastructure WHERE completion_date < '2022-01-01';"}
{"prompt":"Which destinations had more than 50 international tourists in 2020 and 2021? with given SQL schema CREATE TABLE tourism_stats (country VARCHAR(50), visitors INT, year INT); INSERT INTO tourism_stats (country, visitors, year) VALUES ('Italy', 61, 2020), ('Canada', 55, 2020), ('Italy', 63, 2021), ('Canada', 57, 2021);","completion":"SELECT country FROM tourism_stats WHERE visitors > 50 AND year IN (2020, 2021) GROUP BY country HAVING COUNT(DISTINCT year) = 2;"}
{"prompt":"Update the name of the research vessel 'RV Ocean Explorer' to 'RV Ocean Guardian'. with given SQL schema CREATE TABLE research_vessels (id INT, name VARCHAR(50), type VARCHAR(20), year INT); INSERT INTO research_vessels (id, name, type, year) VALUES (1, 'RV Ocean Explorer', 'Oceanographic', 2015), (2, 'RV Deep Diver', 'Underwater', 2018), (3, 'RV Sea Rover', 'Hydrographic', 2020);","completion":"UPDATE research_vessels SET name = 'RV Ocean Guardian' WHERE name = 'RV Ocean Explorer';"}
{"prompt":"Which countries have no military equipment sales from any defense contractors? with given SQL schema CREATE TABLE military_equipment_sales (sale_id INT, country VARCHAR(50), equipment_type VARCHAR(50), sale_amount DECIMAL(10,2));","completion":"SELECT country FROM military_equipment_sales GROUP BY country HAVING COUNT(*) = 0;"}
{"prompt":"What is the total revenue for concerts in Canada for artists who identify as non-binary and are from Asia in 2023? with given SQL schema CREATE TABLE concert_events (event_id INT, artist_id INT, event_date DATE, event_location VARCHAR(255), attendance INT, revenue DECIMAL(10,2), country VARCHAR(50)); INSERT INTO concert_events (event_id, artist_id, event_date, event_location, attendance, revenue, country) VALUES (1, 1, '2023-01-01', 'NYC', 15000, 500000.00, 'Canada'); CREATE TABLE artist_demographics (artist_id INT, artist_name VARCHAR(255), gender VARCHAR(50), ethnicity VARCHAR(50), country VARCHAR(50)); INSERT INTO artist_demographics (artist_id, artist_name, gender, ethnicity, country) VALUES (1, 'Li Zhang', 'non-binary', 'Asian', 'Canada');","completion":"SELECT SUM(revenue) FROM concert_events ce JOIN artist_demographics ad ON ce.artist_id = ad.artist_id WHERE ce.country = 'Canada' AND ad.gender = 'non-binary' AND ad.ethnicity = 'Asian' AND ce.event_date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"What is the total revenue from concert ticket sales for artists who identify as transgender, in the last year? with given SQL schema CREATE TABLE concerts (id INT, artist_id INT, location VARCHAR(255), revenue DECIMAL(10,2), concert_date DATE); CREATE TABLE artists (id INT, gender VARCHAR(255));","completion":"SELECT SUM(revenue) FROM concerts INNER JOIN artists ON concerts.artist_id = artists.id WHERE artists.gender LIKE '%transgender%' AND concert_date >= NOW() - INTERVAL 1 YEAR;"}
{"prompt":"Find the top 5 donors by summed donation amounts for each country? with given SQL schema CREATE TABLE Donors (DonorID INT, Country VARCHAR(50)); INSERT INTO Donors (DonorID, Country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'Australia'), (5, 'UK'), (6, 'USA'), (7, 'Canada'), (8, 'Mexico'), (9, 'Germany'), (10, 'USA'); CREATE TABLE Donations (DonationID INT, DonorID INT, Amount DECIMAL(10, 2)); INSERT INTO Donations (DonationID, DonorID, Amount) VALUES (1, 1, 500), (2, 1, 250), (3, 2, 300), (4, 3, 1000), (5, 3, 500), (6, 4, 200), (7, 5, 800), (8, 6, 300), (9, 6, 500), (10, 7, 250), (11, 8, 100), (12, 9, 1500), (13, 10, 400);","completion":"SELECT d.Country, d.DonorID, SUM(donations.Amount) AS TotalDonated FROM Donors d JOIN Donations ON d.DonorID = Donations.DonorID GROUP BY d.Country, d.DonorID ORDER BY TotalDonated DESC LIMIT 5;"}
{"prompt":"Insert new records into the game_sessions table with the following data: (1, 1, 'Deathmatch', 1), (2, 2, 'Team Deathmatch', 2), (3, 3, 'Free for All', 3) with given SQL schema CREATE TABLE game_sessions (session_id INT, player_id INT, game_mode VARCHAR(20), map_id INT);","completion":"INSERT INTO game_sessions (session_id, player_id, game_mode, map_id) VALUES (1, 1, 'Deathmatch', 1), (2, 2, 'Team Deathmatch', 2), (3, 3, 'Free for All', 3);"}
{"prompt":"Count the number of images taken for each crop variety in the month of June with given SQL schema CREATE TABLE images (id INT, crop_variety VARCHAR(50), timestamp DATETIME); INSERT INTO images (id, crop_variety, timestamp) VALUES (1, 'Corn', '2022-06-01 10:00:00'), (2, 'Soybean', '2022-06-02 10:00:00'), (3, 'Cotton', '2022-05-31 10:00:00');","completion":"SELECT crop_variety, COUNT(*) as total_images FROM images WHERE MONTH(timestamp) = 6 GROUP BY crop_variety;"}
{"prompt":"How many public healthcare facilities and public parks are there in total, in the 'StateData' schema's 'StateHealthcare' and 'StateParks' tables? with given SQL schema CREATE SCHEMA StateData; CREATE TABLE StateHealthcare (Name varchar(255), Type varchar(255)); INSERT INTO StateHealthcare (Name, Type) VALUES ('FacilityA', 'Public'), ('FacilityB', 'Public'), ('FacilityC', 'Private'); CREATE TABLE StateParks (Name varchar(255), Type varchar(255)); INSERT INTO StateParks (Name, Type) VALUES ('ParkA', 'Public'), ('ParkB', 'Public'), ('ParkC', 'Private');","completion":"SELECT COUNT(*) FROM StateData.StateHealthcare WHERE Type = 'Public' UNION ALL SELECT COUNT(*) FROM StateData.StateParks WHERE Type = 'Public';"}
{"prompt":"What was the average citizen feedback score for District C and D in 2022? with given SQL schema CREATE TABLE CitizenFeedback (District VARCHAR(10), Year INT, Score INT); INSERT INTO CitizenFeedback VALUES ('District C', 2022, 8), ('District C', 2022, 9), ('District D', 2022, 7), ('District D', 2022, 6);","completion":"SELECT AVG(Score) FROM CitizenFeedback WHERE District IN ('District C', 'District D') AND Year = 2022;"}
{"prompt":"Increase the price of Promethium in Canada by 15% for 2022 and later. with given SQL schema CREATE TABLE prices (year INT, element VARCHAR(10), country VARCHAR(10), price DECIMAL(5,2)); INSERT INTO prices (year, element, country, price) VALUES (2017, 'Promethium', 'Canada', 25.5), (2018, 'Promethium', 'Canada', 26.2), (2019, 'Promethium', 'Canada', 28.1), (2020, 'Promethium', 'Canada', 30.5), (2021, 'Promethium', 'Canada', 32.8), (2022, 'Promethium', 'Canada', 35.2);","completion":"UPDATE prices SET price = price * 1.15 WHERE element = 'Promethium' AND country = 'Canada' AND year >= 2022;"}
{"prompt":"Insert new records for the rare earth elements gadolinium and terbium into the production table with given SQL schema CREATE TABLE production ( id INT PRIMARY KEY, element VARCHAR(10), quantity INT, production_date DATE);","completion":"INSERT INTO production (element, quantity, production_date) VALUES ('gadolinium', 150, '2015-03-17'), ('terbium', 200, '2016-06-23');"}
{"prompt":"What is the minimum energy production cost of wind farms in Spain? with given SQL schema CREATE TABLE wind_farm_costs (id INT, name TEXT, country TEXT, energy_production_cost FLOAT); INSERT INTO wind_farm_costs (id, name, country, energy_production_cost) VALUES (1, 'Las Tiesas', 'Spain', 0.045), (2, 'Eolo', 'Spain', 0.050);","completion":"SELECT MIN(energy_production_cost) FROM wind_farm_costs WHERE country = 'Spain';"}
{"prompt":"Show the number of workers in factories that have passed the ethical labor audit. with given SQL schema CREATE TABLE factories (id INT, name TEXT, audit_passed BOOLEAN); CREATE TABLE workers (factory_id INT, worker_id INT); INSERT INTO factories VALUES (1, 'Factory A', TRUE), (2, 'Factory B', FALSE); INSERT INTO workers VALUES (1, 1), (1, 2), (2, 3);","completion":"SELECT COUNT(DISTINCT workers.worker_id) FROM workers INNER JOIN factories ON workers.factory_id = factories.id WHERE factories.audit_passed = TRUE;"}
{"prompt":"What is the total quantity of product A sold in all stores? with given SQL schema CREATE TABLE WAREHOUSE (store_id INT, product VARCHAR(255), quantity INT); INSERT INTO WAREHOUSE (store_id, product, quantity) VALUES (1, 'Product A', 200), (2, 'Product A', 300), (3, 'Product B', 150);","completion":"SELECT SUM(quantity) FROM WAREHOUSE WHERE product = 'Product A';"}
{"prompt":"What is the average severity of vulnerabilities found in the last quarter for each product? with given SQL schema CREATE TABLE vulnerabilities (id INT, timestamp TIMESTAMP, product VARCHAR(255), vulnerability_severity VARCHAR(255)); INSERT INTO vulnerabilities (id, timestamp, product, vulnerability_severity) VALUES (1, '2020-10-01 12:00:00', 'Product A', 'High'), (2, '2020-11-02 10:30:00', 'Product B', 'Medium');","completion":"SELECT product, AVG(case when vulnerability_severity = 'High' then 3 when vulnerability_severity = 'Medium' then 2 when vulnerability_severity = 'Low' then 1 else 0 end) as avg_severity FROM vulnerabilities WHERE timestamp >= NOW() - INTERVAL 3 MONTH GROUP BY product;"}
{"prompt":"What is the total number of vulnerabilities found in the 'Finance' department? with given SQL schema CREATE TABLE department (id INT, name VARCHAR(255)); INSERT INTO department (id, name) VALUES (1, 'Finance'), (2, 'IT'); CREATE TABLE vulnerabilities (id INT, department_id INT, severity VARCHAR(255)); INSERT INTO vulnerabilities (id, department_id, severity) VALUES (1, 1, 'High'), (2, 1, 'Medium'), (3, 2, 'Low');","completion":"SELECT COUNT(*) FROM vulnerabilities WHERE department_id = (SELECT id FROM department WHERE name = 'Finance');"}
{"prompt":"What is the average number of trips per day on public transportation in Tokyo and Seoul? with given SQL schema CREATE TABLE daily_trips (trip_id INT, city VARCHAR(20), trips INT, day DATE); INSERT INTO daily_trips (trip_id, city, trips, day) VALUES (1, 'Tokyo', 500000, '2022-01-01'), (2, 'Tokyo', 600000, '2022-01-02'), (3, 'Seoul', 400000, '2022-01-01'), (4, 'Seoul', 300000, '2022-01-02');","completion":"SELECT city, AVG(trips) FROM daily_trips GROUP BY city, day ORDER BY day;"}
{"prompt":"What is the total number of electric vehicle sales for each city? with given SQL schema CREATE TABLE electric_vehicles (id INT, city_id INT, model VARCHAR(50), year INT, sales INT); INSERT INTO electric_vehicles (id, city_id, model, year, sales) VALUES (4, 3, 'Audi e-Tron', 2022, 40000); INSERT INTO electric_vehicles (id, city_id, model, year, sales) VALUES (5, 3, 'Hyundai Kona Electric', 2021, 25000);","completion":"SELECT city_id, SUM(sales) FROM electric_vehicles GROUP BY city_id;"}
{"prompt":"How many men's garments were sold in Mexico in Q4 2020? with given SQL schema CREATE TABLE mexico_mens_garments (garment_type VARCHAR(255), sales_quantity INT, quarter INT, year INT); INSERT INTO mexico_mens_garments (garment_type, sales_quantity, quarter, year) VALUES ('Pants', 400, 4, 2020), ('Shirt', 500, 4, 2020);","completion":"SELECT SUM(sales_quantity) FROM mexico_mens_garments WHERE quarter = 4 AND year = 2020;"}
{"prompt":"What is the total number of workers employed by unions in the 'manufacturing' sector? with given SQL schema CREATE TABLE unions (id INT, sector VARCHAR(20)); INSERT INTO unions (id, sector) VALUES (1, 'manufacturing'), (2, 'technology');","completion":"SELECT COUNT(*) FROM unions WHERE sector = 'manufacturing';"}
{"prompt":"What is the total number of vehicles sold in 'California' and 'Texas' in the 'sales' table? with given SQL schema CREATE TABLE sales (region VARCHAR(10), vehicle_count INT); INSERT INTO sales VALUES ('California', 5000), ('Texas', 6000), ('Florida', 4000), ('California', 5500), ('Texas', 6500);","completion":"SELECT SUM(vehicle_count) FROM sales WHERE region IN ('California', 'Texas');"}
{"prompt":"What is the maximum number of daily visitors for digital exhibitions in Mexico in 2022? with given SQL schema CREATE TABLE Digital_Exhibitions_Mexico (id INT, year INT, visitors_per_day INT);","completion":"SELECT MAX(visitors_per_day) FROM Digital_Exhibitions_Mexico WHERE year = 2022;"}
{"prompt":"What was the recycling rate for 'Organic' and 'Electronic' waste types in 'UrbanArea' in 2020? with given SQL schema CREATE TABLE recycling_rates(waste_type VARCHAR(50), location VARCHAR(50), year INT, rate FLOAT); INSERT INTO recycling_rates(waste_type, location, year, rate) VALUES('Organic', 'UrbanArea', 2020, 0.6), ('Organic', 'UrbanArea', 2019, 0.55), ('Electronic', 'UrbanArea', 2020, 0.4), ('Electronic', 'UrbanArea', 2019, 0.35);","completion":"SELECT waste_type, rate FROM recycling_rates WHERE location = 'UrbanArea' AND year = 2020 AND waste_type IN ('Organic', 'Electronic');"}
{"prompt":"What is the total number of algorithms in the 'AI_Safety' schema that have a complexity score lower than 5 and an accuracy score over 0.9? with given SQL schema CREATE SCHEMA AI_Safety;CREATE TABLE Algorithms (algo_id INT, complexity_score INT, accuracy_score FLOAT); INSERT INTO AI_Safety.Algorithms (algo_id, complexity_score, accuracy_score) VALUES (1, 6, 0.95), (2, 4, 0.9), (3, 7, 0.8);","completion":"SELECT COUNT(*) FROM AI_Safety.Algorithms WHERE complexity_score < 5 AND accuracy_score > 0.9;"}
{"prompt":"What is the average community development initiative budget per country, ordered by the largest budget? with given SQL schema CREATE TABLE Country (CountryID INT, CountryName VARCHAR(100)); INSERT INTO Country VALUES (1,'Canada'),(2,'Mexico'),(3,'Brazil'); CREATE TABLE CommunityDevelopment (ProjectID INT, CountryID INT, Budget DECIMAL(10,2)); INSERT INTO CommunityDevelopment VALUES (1,1,50000),(2,1,75000),(3,2,100000),(4,3,125000),(5,3,150000);","completion":"SELECT CountryName, AVG(Budget) AS AvgBudget FROM Country JOIN CommunityDevelopment ON Country.CountryID = CommunityDevelopment.CountryID GROUP BY CountryName ORDER BY AvgBudget DESC;"}
{"prompt":"What is the percentage of community development projects completed in 'Caribbean' in 2020? with given SQL schema CREATE TABLE community_projects (project_id INT, project_name TEXT, location TEXT, completion_year INT); INSERT INTO community_projects (project_id, project_name, location, completion_year) VALUES (1, 'Community Center', 'Southern Region, Caribbean', 2020); INSERT INTO community_projects (project_id, project_name, location, completion_year) VALUES (2, 'Park Renovation', 'Northern Region, Caribbean', 2019); INSERT INTO community_projects (project_id, project_name, location, completion_year) VALUES (3, 'Library Construction', 'Caribbean', 2020);","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM community_projects WHERE location = 'Caribbean')) FROM community_projects WHERE completion_year = 2020 AND location = 'Caribbean';"}
{"prompt":"What is the success rate of agricultural innovation projects in rural areas of Indonesia? with given SQL schema CREATE TABLE indonesia_projects (project_id INT, project_name VARCHAR(50), location VARCHAR(20), success BOOLEAN); INSERT INTO indonesia_projects (project_id, project_name, location, success) VALUES (1, 'Solar Pump Irrigation', 'rural', true), (2, 'Organic Farming Training', 'urban', true), (3, 'Agroforestry Development', 'rural', false);","completion":"SELECT 100.0 * SUM(success) \/ COUNT(*) FROM indonesia_projects WHERE location = 'rural';"}
{"prompt":"Which community development initiatives in Bangladesh received the most funding in 2020? with given SQL schema CREATE TABLE initiatives (id INT, initiative_name VARCHAR(100), country VARCHAR(50), year INT, funding FLOAT); INSERT INTO initiatives (id, initiative_name, country, year, funding) VALUES (1, 'Green Villages', 'Bangladesh', 2018, 500000), (2, 'Solar Energy for All', 'Bangladesh', 2019, 600000), (3, 'Water for Life', 'Bangladesh', 2020, 700000), (4, 'Education for All', 'Bangladesh', 2020, 800000);","completion":"SELECT initiative_name, MAX(funding) FROM initiatives WHERE country = 'Bangladesh' AND year = 2020 GROUP BY initiative_name;"}
{"prompt":"What is the total number of animals in protected habitats for each region? with given SQL schema CREATE TABLE ProtectedHabitats (id INT, animal_id INT, size FLOAT, region VARCHAR(255)); INSERT INTO ProtectedHabitats (id, animal_id, size, region) VALUES (1, 1, 5.6, 'Africa'), (2, 2, 3.2, 'Asia'), (3, 3, 7.8, 'Africa');","completion":"SELECT region, COUNT(animal_id) FROM ProtectedHabitats GROUP BY region;"}
{"prompt":"Which community education programs are associated with habitats that need urgent preservation efforts? with given SQL schema CREATE TABLE habitats (id INT, habitat_name VARCHAR(50), preservation_status VARCHAR(20)); CREATE TABLE education_programs (id INT, habitat_id INT, coordinator_name VARCHAR(50), urgency VARCHAR(10));","completion":"SELECT e.coordinator_name FROM education_programs e INNER JOIN habitats h ON e.habitat_id = h.id WHERE h.preservation_status = 'Urgent';"}
{"prompt":"How many arts education programs were funded by 'Montreal Arts Council' in 'Montreal' in 2021, and what was the total funding amount? with given SQL schema CREATE TABLE Education (program_id INT, city VARCHAR(20), funding_source VARCHAR(20), year INT, total_funding DECIMAL(10,2)); INSERT INTO Education (program_id, city, funding_source, year, total_funding) VALUES (1, 'Montreal', 'Montreal Arts Council', 2021, 12000), (2, 'Montreal', 'Montreal Arts Council', 2021, 15000);","completion":"SELECT COUNT(*), SUM(total_funding) FROM Education WHERE city = 'Montreal' AND funding_source = 'Montreal Arts Council' AND year = 2021;"}
{"prompt":"Insert new records for a community outreach program. with given SQL schema CREATE TABLE Programs (program_id INT, program_name VARCHAR(255), location VARCHAR(255), num_participants INT, impact_assessment DECIMAL(3,2));","completion":"INSERT INTO Programs (program_id, program_name, location, num_participants, impact_assessment) VALUES (5, 'Community Outreach', 'Chicago, IL', 35, 8.2);"}
{"prompt":"What is the median hourly wage for construction laborers in Louisiana? with given SQL schema CREATE TABLE la_wages (job VARCHAR(20), hourly_wage FLOAT); INSERT INTO la_wages (job, hourly_wage) VALUES ('Construction laborer', 17.4), ('Carpenter', 21.9), ('Electrician', 25.6);","completion":"SELECT AVG(hourly_wage) FROM la_wages WHERE job = 'Construction laborer';"}
{"prompt":"How many cases were won by attorney Patel in the last 2 years, categorized by practice area? with given SQL schema CREATE TABLE cases (case_id INT, attorney_name VARCHAR(255), win_status BOOLEAN, case_date DATE, practice_area VARCHAR(255)); INSERT INTO cases (case_id, attorney_name, win_status, case_date, practice_area) VALUES (1, 'Patel', true, '2019-01-01', 'Family'), (2, 'Thompson', false, '2020-05-15', 'Civil'), (3, 'Garcia', true, '2021-07-20', 'Criminal'), (4, 'Smith', false, '2020-12-31', 'Family'), (5, 'Brown', true, '2020-06-20', 'Civil');","completion":"SELECT practice_area, COUNT(*) FROM cases WHERE attorney_name = 'Patel' AND win_status = true AND case_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) GROUP BY practice_area;"}
{"prompt":"Update the billing rate for an attorney with given SQL schema CREATE TABLE attorneys (id INT, name VARCHAR(50), cases_handled INT, region VARCHAR(50), billable_rate DECIMAL(10,2)); INSERT INTO attorneys (id, name, cases_handled, region, billable_rate) VALUES (1, 'John Lee', 40, 'Northeast', 200.00); INSERT INTO attorneys (id, name, cases_handled, region, billable_rate) VALUES (2, 'Jane Doe', 50, 'Southwest', 250.00);","completion":"UPDATE attorneys SET billable_rate = 225.00 WHERE name = 'John Lee';"}
{"prompt":"Calculate the moving average of chemical waste production for each facility, for the last 6 months. with given SQL schema CREATE TABLE facility_waste (facility_id INT, date DATE, waste_amount FLOAT); INSERT INTO facility_waste (facility_id, date, waste_amount) VALUES (1, '2022-01-01', 500), (1, '2022-02-01', 550), (1, '2022-03-01', 600), (1, '2022-04-01', 650), (1, '2022-05-01', 700), (1, '2022-06-01', 750), (2, '2022-01-01', 400), (2, '2022-02-01', 450), (2, '2022-03-01', 500), (2, '2022-04-01', 550), (2, '2022-05-01', 600), (2, '2022-06-01', 650);","completion":"SELECT facility_id, AVG(waste_amount) OVER (PARTITION BY facility_id ORDER BY date ROWS BETWEEN 5 PRECEDING AND CURRENT ROW) as moving_average FROM facility_waste;"}
{"prompt":"Delete all records from the 'equipment' table where the 'equipment_type' is 'tank' with given SQL schema CREATE TABLE equipment (equipment_id INT, equipment_type VARCHAR(20));","completion":"DELETE FROM equipment WHERE equipment_type = 'tank';"}
{"prompt":"How much have countries invested in climate communication in Asia? with given SQL schema CREATE TABLE CommInvestment (Country TEXT, Investment_Amount NUMERIC); INSERT INTO CommInvestment (Country, Investment_Amount) VALUES ('China', 5000000), ('Japan', 4000000), ('India', 3000000);","completion":"SELECT SUM(Investment_Amount) FROM CommInvestment WHERE Country IN ('China', 'Japan', 'India') AND Investment_Amount IS NOT NULL;"}
{"prompt":"List the names and funding amounts of the top 3 largest climate finance projects in 2019 with given SQL schema CREATE TABLE climate_finance (project_name VARCHAR(100), year INT, funding_amount INT); INSERT INTO climate_finance (project_name, year, funding_amount) VALUES ('Green Energy Transition Fund', 2019, 5000), ('Climate Adaptation for Coastal Communities', 2019, 3000), ('Sustainable Agriculture Investment Program', 2019, 4000), ('Renewable Energy Infrastructure Project', 2019, 2000), ('Clean Transportation Initiative', 2019, 6000), ('Climate Disaster Relief Fund', 2019, 7000), ('Carbon Capture and Storage Project', 2019, 8000), ('Eco-City Development Program', 2019, 9000), ('Climate Research and Innovation Center', 2019, 10000), ('Global Climate Action Alliance', 2019, 11000);","completion":"SELECT project_name, funding_amount FROM climate_finance WHERE year = 2019 ORDER BY funding_amount DESC LIMIT 3;"}
{"prompt":"What is the average budget for climate change mitigation projects in Europe, and which countries have the most mitigation projects? with given SQL schema CREATE TABLE climate_projects_eu (project_name VARCHAR(50), country VARCHAR(50), project_type VARCHAR(50), budget NUMERIC(12,2)); INSERT INTO climate_projects_eu (project_name, country, project_type, budget) VALUES ('Green Cities', 'Germany', 'Mitigation', 10000.00), ('Renewable Energy', 'France', 'Mitigation', 15000.00), ('Carbon Capture', 'UK', 'Mitigation', 20000.00);","completion":"SELECT country, AVG(budget) FROM climate_projects_eu WHERE project_type = 'Mitigation' AND country IN ('Europe') GROUP BY country;"}
{"prompt":"What is the combined attendance of the Climate Summit and the Adaptation Conference? with given SQL schema CREATE TABLE conferences (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), year INT, attendance INT); INSERT INTO conferences (id, name, location, year, attendance) VALUES (1, 'Climate Summit', 'Paris', 2015, 40000); INSERT INTO conferences (id, name, location, year, attendance) VALUES (2, 'Adaptation Conference', 'Tokyo', 2016, 30000);","completion":"SELECT SUM(attendance) FROM conferences WHERE name IN ('Climate Summit', 'Adaptation Conference');"}
{"prompt":"What is the average R&D expenditure per clinical trial, ranked by average expenditure? with given SQL schema CREATE TABLE RDExpenses (TrialID int, Department varchar(50), Expenditure decimal(18,2)); INSERT INTO RDExpenses (TrialID, Department, Expenditure) VALUES (1, 'Research', 1500000.00), (2, 'Development', 1800000.00), (3, 'ClinicalTrials', 2500000.00), (4, 'Regulatory', 1000000.00);","completion":"SELECT Department, AVG(Expenditure), ROW_NUMBER() OVER (ORDER BY AVG(Expenditure) DESC) as ExpenseRank FROM RDExpenses GROUP BY Department;"}
{"prompt":"What was the average R&D expenditure for drugs approved in 2019? with given SQL schema CREATE TABLE rd_expenditure (drug_class TEXT, year INTEGER, expenditure INTEGER);","completion":"SELECT AVG(expenditure) FROM rd_expenditure WHERE year = 2019 AND status = 'approved';"}
{"prompt":"Find the number of medical research grants, by institution and year. with given SQL schema CREATE TABLE grants (id INT, institution VARCHAR, year INT, amount INT);","completion":"SELECT g.institution, g.year, COUNT(g.id) AS num_grants FROM grants g GROUP BY g.institution, g.year;"}
{"prompt":"What is the total number of patients who have had a flu shot in the last 6 months in California? with given SQL schema CREATE TABLE Patients (PatientID INT, FluShot DATE, State TEXT); INSERT INTO Patients (PatientID, FluShot, State) VALUES (1, '2021-08-01', 'California');","completion":"SELECT COUNT(*) FROM Patients WHERE FluShot >= DATEADD(month, -6, GETDATE()) AND State = 'California';"}
{"prompt":"How many startups in each country have a female founder? with given SQL schema CREATE TABLE startup (id INT, name TEXT, country TEXT, founder_gender TEXT); INSERT INTO startup (id, name, country, founder_gender) VALUES (1, 'Epsilon Enterprises', 'USA', 'Female'); INSERT INTO startup (id, name, country, founder_gender) VALUES (2, 'Zeta Ltd', 'Canada', 'Male'); INSERT INTO startup (id, name, country, founder_gender) VALUES (3, 'Eta Inc', 'Mexico', 'Female');","completion":"SELECT s.country, COUNT(*) FROM startup s WHERE s.founder_gender = 'Female' GROUP BY s.country;"}
{"prompt":"Identify organic farming research institutions not located in the Midwest. with given SQL schema CREATE TABLE research_institutes (id INT, name VARCHAR(50), type VARCHAR(50), focus VARCHAR(50), location VARCHAR(50)); INSERT INTO research_institutes (id, name, type, focus, location) VALUES (1, 'Rodale Institute', 'Non-profit', 'Organic farming research', 'Pennsylvania'); INSERT INTO research_institutes (id, name, type, focus, location) VALUES (2, 'Land Institute', 'Non-profit', 'Perennial crop research', 'Kansas'); INSERT INTO research_institutes (id, name, type, focus, location) VALUES (3, 'Organic Farming Research Foundation', 'Non-profit', 'Organic farming research', 'California');","completion":"SELECT name FROM research_institutes WHERE focus = 'Organic farming research' AND location != 'Midwest';"}
{"prompt":"What are the names and locations of disability services facilities with a rating of 4 or higher? with given SQL schema CREATE TABLE facilities (facility_id INT, facility_name VARCHAR(255), facility_location VARCHAR(255), facility_rating INT);","completion":"SELECT facility_name, facility_location FROM facilities WHERE facility_rating >= 4;"}
{"prompt":"What is the number of students who received accommodations by month and accommodation type? with given SQL schema CREATE TABLE Accommodations (StudentID INT, AccommodationType VARCHAR(50), AccommodationDate DATE); INSERT INTO Accommodations (StudentID, AccommodationType, AccommodationDate) VALUES (1, 'Sign Language Interpreter', '2021-01-01'); CREATE TABLE Students (StudentID INT, StudentName VARCHAR(50), GraduationYear INT); INSERT INTO Students (StudentID, StudentName, GraduationYear) VALUES (1, 'Jacob Taylor', 2023);","completion":"SELECT MONTH(AccommodationDate) as Month, AccommodationType, COUNT(*) as Total FROM Accommodations JOIN Students ON Accommodations.StudentID = Students.StudentID GROUP BY Month, AccommodationType;"}
{"prompt":"Insert a new record into the species table for a fish species found in the Indian Ocean with given SQL schema CREATE TABLE species (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), population INT, habitat VARCHAR(255));","completion":"INSERT INTO species (id, name, type, population, habitat) VALUES (18, 'Parrotfish', 'Fish', 25000, 'Indian Ocean');"}
{"prompt":"What is the average timber volume for each country in tropical rainforests over the last 3 years? with given SQL schema CREATE TABLE country_timber (id INT, country VARCHAR(30), region VARCHAR(20), year INT, volume FLOAT);","completion":"SELECT country, region, AVG(volume) as avg_volume FROM country_timber WHERE region = 'Tropical' AND year BETWEEN 2019 AND 2021 GROUP BY country, region;"}
{"prompt":"Insert new data into the 'cosmetic_ingredients' table for a vegan eyeshadow product by brand 'Ara' with ingredients 'Mica', 'Iron Oxide', 'Titanium Dioxide' and 'Zinc Oxide'. with given SQL schema CREATE TABLE cosmetic_ingredients (ingredient_id INT, product_name TEXT, brand_name TEXT, ingredient_type TEXT);","completion":"INSERT INTO cosmetic_ingredients (ingredient_id, product_name, brand_name, ingredient_type) VALUES (NULL, 'Vegan Eyeshadow', 'Ara', 'Ingredient'); INSERT INTO cosmetic_ingredients (ingredient_id, product_name, brand_name, ingredient_type, ingredient_name) SELECT ingredient_id, 'Vegan Eyeshadow', 'Ara', 'Ingredient', 'Mica' FROM cosmetic_ingredients WHERE ingredient_name = 'Mica' UNION ALL SELECT NULL, 'Vegan Eyeshadow', 'Ara', 'Ingredient', 'Iron Oxide' UNION ALL SELECT NULL, 'Vegan Eyeshadow', 'Ara', 'Ingredient', 'Titanium Dioxide' UNION ALL SELECT NULL, 'Vegan Eyeshadow', 'Ara', 'Ingredient', 'Zinc Oxide';"}
{"prompt":"Delete all records from the crime_statistics table where the 'crime_type' column is 'Trespassing' and the 'date' column is '2022-05-15'? with given SQL schema CREATE TABLE crime_statistics (crime_type VARCHAR(255), crime_count INT, date DATE); INSERT INTO crime_statistics (crime_type, crime_count, date) VALUES (NULL, NULL, NULL);","completion":"DELETE FROM crime_statistics WHERE crime_type = 'Trespassing' AND date = '2022-05-15';"}
{"prompt":"What is the total number of crime incidents reported in each sector, sorted by the number of incidents in descending order? with given SQL schema CREATE TABLE sector (id INT, name TEXT, location TEXT); INSERT INTO sector (id, name, location) VALUES (1, 'Sector A', 'Downtown'), (2, 'Sector B', 'Uptown'); CREATE TABLE incidents (id INT, sector_id INT, type TEXT, timestamp DATETIME); INSERT INTO incidents (id, sector_id, type, timestamp) VALUES (1, 1, 'Theft', '2022-01-01 10:00:00'), (2, 2, 'Vandalism', '2022-01-02 12:00:00');","completion":"SELECT sector.name, COUNT(incidents.id) AS incident_count FROM sector LEFT JOIN incidents ON sector.id = incidents.sector_id GROUP BY sector.name ORDER BY incident_count DESC;"}
{"prompt":"What is the 'value' of 'inventory' for item 'DEF456'? with given SQL schema CREATE TABLE inventory (item VARCHAR(50), value FLOAT); INSERT INTO inventory (item, value) VALUES ('ABC123', 2000.00), ('DEF456', 3000.00);","completion":"SELECT value FROM inventory WHERE item = 'DEF456';"}
{"prompt":"What is the average investment in sustainable agriculture per country? with given SQL schema CREATE TABLE investments (id INT, country VARCHAR(50), sector VARCHAR(50), amount FLOAT); INSERT INTO investments (id, country, sector, amount) VALUES (1, 'Canada', 'Sustainable Agriculture', 500000), (2, 'Mexico', 'Renewable Energy', 750000), (3, 'Canada', 'Sustainable Agriculture', 600000);","completion":"SELECT country, AVG(amount) as avg_investment FROM investments WHERE sector = 'Sustainable Agriculture' GROUP BY country;"}
{"prompt":"What are the names and ranks of all military personnel in country W who were demoted in the year 2019? with given SQL schema CREATE TABLE military_demotions (id INT, name TEXT, country TEXT, rank TEXT, demotion_year INT);INSERT INTO military_demotions (id, name, country, rank, demotion_year) VALUES (1, 'John Doe', 'Country W', 'Colonel', 2019);","completion":"SELECT name, rank FROM military_demotions WHERE country = 'Country W' AND demotion_year = 2019;"}
{"prompt":"What is the number of intelligence personnel in each department in the UK government? with given SQL schema CREATE TABLE intelligence_personnel_uk (id INT, department TEXT, position TEXT, country TEXT); INSERT INTO intelligence_personnel_uk (id, department, position, country) VALUES (1, 'MI5', 'Analyst', 'UK'), (2, 'MI6', 'Agent', 'UK'), (3, 'GCHQ', 'Engineer', 'UK');","completion":"SELECT i.department, COUNT(i.id) as total_personnel FROM intelligence_personnel_uk i WHERE i.country = 'UK' GROUP BY i.department;"}
{"prompt":"What is the total number of military personnel in the USA and the average salary for each country? with given SQL schema CREATE TABLE military_personnel (id INT, name TEXT, rank TEXT, country TEXT, salary INT); INSERT INTO military_personnel (id, name, rank, country, salary) VALUES (1, 'John Doe', 'Colonel', 'USA', 80000), (2, 'Jane Smith', 'Captain', 'USA', 60000);","completion":"SELECT mc.country, AVG(mc.salary) as avg_salary, COUNT(mc.id) as total_personnel FROM military_personnel mc GROUP BY mc.country;"}
{"prompt":"How many programs were held in each month of 2022? with given SQL schema CREATE TABLE programs (program_id INT, program_name VARCHAR(50), program_date DATE);","completion":"SELECT EXTRACT(MONTH FROM program_date) AS month, COUNT(*) AS num_programs FROM programs WHERE YEAR(program_date) = 2022 GROUP BY month;"}
{"prompt":"Show the top 5 employees who have been in training the longest, ordered by total training hours in descending order. with given SQL schema CREATE TABLE trainings (training_id INT, emp_id INT, training_hours INT); INSERT INTO trainings (training_id, emp_id, training_hours) VALUES (1, 1, 10), (2, 1, 5), (3, 2, 15), (4, 3, 20), (5, 4, 12), (6, 2, 8);","completion":"SELECT emp_id, SUM(training_hours) as total_training_hours FROM trainings GROUP BY emp_id ORDER BY total_training_hours DESC LIMIT 5;"}
{"prompt":"What is the racial and ethnic diversity of the company? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(255), race VARCHAR(255), ethnicity VARCHAR(255)); INSERT INTO employees (id, name, race, ethnicity) VALUES (1, 'John Doe', 'White', 'Not Hispanic or Latino'), (2, 'Jane Smith', 'Asian', 'Not Hispanic or Latino'), (3, 'Alice Johnson', 'Black or African American', 'Not Hispanic or Latino'), (4, 'Bob Brown', 'Hispanic or Latino', 'Mexican'), (5, 'Charlie Davis', 'White', 'Not Hispanic or Latino');","completion":"SELECT race, COUNT(*) as num_employees, CONCAT(ROUND(COUNT(*) \/ (SELECT COUNT(*) FROM employees) * 100, 2), '%') as percent_of_employees FROM employees GROUP BY race;"}
{"prompt":"How many renewable energy projects were completed in Colombia and Peru in 2020 and 2021? with given SQL schema CREATE TABLE latam_renewable_projects (country VARCHAR(20), year INT, num_projects INT); INSERT INTO latam_renewable_projects (country, year, num_projects) VALUES ('Colombia', 2020, 15), ('Colombia', 2021, 18), ('Peru', 2020, 22), ('Peru', 2021, 25);","completion":"SELECT SUM(num_projects) FROM latam_renewable_projects WHERE country IN ('Colombia', 'Peru') AND year BETWEEN 2020 AND 2021;"}
{"prompt":"What is the total energy efficiency savings in USD for the state of Texas in 2020? with given SQL schema CREATE TABLE energy_efficiency (state VARCHAR(20), savings DECIMAL(10,2), year INT); INSERT INTO energy_efficiency (state, savings, year) VALUES ('Texas', 500.00, 2020), ('Texas', 750.00, 2020), ('Texas', 600.00, 2020);","completion":"SELECT SUM(savings) FROM energy_efficiency WHERE state = 'Texas' AND year = 2020;"}
{"prompt":"Identify the total number of offshore drilling platforms in the North Sea and Gulf of Mexico from the 'InfrastructureData' table. with given SQL schema CREATE TABLE InfrastructureData (region VARCHAR(50), country VARCHAR(50), platform_type VARCHAR(50), quantity INT); INSERT INTO InfrastructureData (region, country, platform_type, quantity) VALUES ('North Sea', 'UK', 'offshore_drilling', 120), ('North Sea', 'Norway', 'offshore_drilling', 150), ('Gulf of Mexico', 'USA', 'offshore_drilling', 200), ('Gulf of Mexico', 'Mexico', 'offshore_drilling', 180), ('South China Sea', 'China', 'offshore_drilling', 130);","completion":"SELECT SUM(quantity) FROM InfrastructureData WHERE (region = 'North Sea' AND platform_type = 'offshore_drilling') OR (region = 'Gulf of Mexico' AND platform_type = 'offshore_drilling');"}
{"prompt":"Add a new bus route from 'Chinatown' to 'Airport' with given SQL schema CREATE TABLE bus_routes (route_id INT PRIMARY KEY, start_location TEXT, end_location TEXT);","completion":"INSERT INTO bus_routes (route_id, start_location, end_location) VALUES (2, 'Chinatown', 'Airport');"}
{"prompt":"How many labor disputes were there in each factory, by year? with given SQL schema CREATE TABLE labor_disputes (dispute_date DATE, factory VARCHAR(255), dispute_type VARCHAR(255));","completion":"SELECT factory, DATE_TRUNC('year', dispute_date) AS dispute_year, COUNT(*) AS num_disputes FROM labor_disputes GROUP BY factory, dispute_year;"}
{"prompt":"What is the average number of posts per user in each region? with given SQL schema CREATE TABLE users (id INT, region VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, content TEXT); INSERT INTO users (id, region) VALUES (1, 'Asia'), (2, 'Africa'), (3, 'Europe'), (4, 'America'); INSERT INTO posts (id, user_id, content) VALUES (1, 1, 'Hello'), (2, 1, 'World'), (3, 2, 'AI'), (4, 2, 'Data'), (5, 3, 'Science');","completion":"SELECT users.region, AVG(posts.user_id) FROM posts JOIN users ON posts.user_id = users.id GROUP BY users.region;"}
{"prompt":"List the fashion trends of 2021 with sales greater than 1500? with given SQL schema CREATE TABLE trends_2021 (id INT, product VARCHAR(20), sales INT); INSERT INTO trends_2021 (id, product, sales) VALUES (1, 'Dress', 1200); INSERT INTO trends_2021 (id, product, sales) VALUES (2, 'Skirt', 1800);","completion":"SELECT product FROM trends_2021 WHERE sales > 1500;"}
{"prompt":"What is the percentage of sales by designer? with given SQL schema CREATE TABLE ClothingSales (ItemID INT, ItemName TEXT, Designer TEXT, Quantity INT); INSERT INTO ClothingSales (ItemID, ItemName, Designer, Quantity) VALUES (1, 'Top', 'DesignerA', 250), (2, 'Pants', 'DesignerB', 300), (3, 'Dress', 'DesignerC', 150);","completion":"SELECT Designer, 100.0 * SUM(Quantity) \/ (SELECT SUM(Quantity) FROM ClothingSales) as PercentageOfSales FROM ClothingSales GROUP BY Designer;"}
{"prompt":"Delete records of donors who haven't donated in the last 12 months from the 'donations' table. with given SQL schema CREATE TABLE donations (donation_id INT, donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (donation_id, donor_id, donation_amount, donation_date) VALUES (1, 2, 1000, '2022-02-14');","completion":"DELETE FROM donations WHERE donation_date < NOW() - INTERVAL 12 MONTH;"}
{"prompt":"What is the total number of volunteers who have completed more than 25 hours of service in the \"Food Security\" program? with given SQL schema CREATE TABLE Volunteers (VolunteerID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Email VARCHAR(50), Hours INT, Program VARCHAR(50));","completion":"SELECT SUM(Hours) FROM Volunteers WHERE Program = 'Food Security' AND Hours > 25;"}
{"prompt":"How many suppliers provide non-GMO ingredients for Italian dishes? with given SQL schema CREATE TABLE Suppliers (id INT, provides_non_gmo BOOLEAN, serves_cuisine VARCHAR(20)); INSERT INTO Suppliers (id, provides_non_gmo, serves_cuisine) VALUES (1, true, 'Italian'), (2, false, 'Italian'), (3, true, 'Chinese');","completion":"SELECT COUNT(*) FROM Suppliers WHERE provides_non_gmo = true AND serves_cuisine = 'Italian';"}
{"prompt":"Show annual energy consumption for our sustainable seafood processing plants, in kWh. with given SQL schema CREATE TABLE plants (id INT, name TEXT, type TEXT, annual_energy_consumption DECIMAL); INSERT INTO plants (id, name, type, annual_energy_consumption) VALUES (1, 'Seafood Haven', 'Sustainable', 1230000);","completion":"SELECT name, annual_energy_consumption FROM plants WHERE type = 'Sustainable';"}
{"prompt":"List all biotech startup funding events greater than $20M in the USA and their respective dates. with given SQL schema CREATE TABLE startups_funding (id INT, name VARCHAR(50), location VARCHAR(50), funding FLOAT, funding_date DATE); INSERT INTO startups_funding (id, name, location, funding, funding_date) VALUES (1, 'StartupC', 'USA', 25000000, '2022-03-15'); INSERT INTO startups_funding (id, name, location, funding, funding_date) VALUES (2, 'StartupD', 'USA', 18000000, '2022-02-20');","completion":"SELECT name, funding_date FROM startups_funding WHERE location = 'USA' AND funding > 20000000;"}
{"prompt":"Show the total cost of bioprocess engineering projects in Germany and France. with given SQL schema CREATE TABLE bioprocess_engineering (id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO bioprocess_engineering (id, project_name, location, cost) VALUES (1, 'ProjectA', 'Germany', 3500000); INSERT INTO bioprocess_engineering (id, project_name, location, cost) VALUES (2, 'ProjectB', 'France', 4000000);","completion":"SELECT SUM(cost) FROM bioprocess_engineering WHERE location IN ('Germany', 'France');"}
{"prompt":"What is the average age of female bioprocess engineers in Germany? with given SQL schema CREATE TABLE bioprocess_engineers (id INT, name TEXT, age INT, gender TEXT, country TEXT); INSERT INTO bioprocess_engineers (id, name, age, gender, country) VALUES (1, 'Alice', 35, 'Female', 'Germany');","completion":"SELECT AVG(age) FROM bioprocess_engineers WHERE gender = 'Female' AND country = 'Germany';"}
{"prompt":"Find the number of graduate students in each department, excluding those enrolled in the 'Physics' department. with given SQL schema CREATE TABLE graduate_students (id INT, department VARCHAR(20), enrollment_status VARCHAR(10)); INSERT INTO graduate_students (id, department, enrollment_status) VALUES (1, 'Physics', 'Enrolled'), (2, 'Mathematics', 'Enrolled'), (3, 'Chemistry', 'Enrolled'), (4, 'English', 'Not Enrolled'), (5, 'Physics', 'Not Enrolled');","completion":"SELECT department, COUNT(*) as num_students FROM graduate_students WHERE department NOT IN ('Physics') GROUP BY department;"}
{"prompt":"What is the average number of research grants awarded per department in the 'research_grants' table, excluding departments with less than 3 grants? with given SQL schema CREATE TABLE research_grants (id INT, department VARCHAR(255), amount FLOAT); INSERT INTO research_grants (id, department, amount) VALUES (1, 'Physics', 100000), (2, 'Physics', 200000), (3, 'Mathematics', 150000), (4, 'Chemistry', 250000), (5, 'Chemistry', 300000), (6, 'Biology', 50000);","completion":"SELECT AVG(grant_count) FROM (SELECT department, COUNT(*) AS grant_count FROM research_grants GROUP BY department HAVING COUNT(*) >= 3) AS subquery;"}
{"prompt":"What is the maximum amount of research grant received by a faculty member in the Arts and Humanities department? with given SQL schema CREATE TABLE grants_faculty (id INT, department VARCHAR(50), faculty_name VARCHAR(50), amount DECIMAL(10,2), grant_date DATE); INSERT INTO grants_faculty (id, department, faculty_name, amount, grant_date) VALUES (1, 'Arts and Humanities', 'Grace', 12000.00, '2018-06-10'), (2, 'Arts and Humanities', 'Harry', 18000.00, '2019-12-20'), (3, 'Arts and Humanities', 'Ida', 20000.00, '2020-08-05');","completion":"SELECT MAX(amount) FROM grants_faculty WHERE department = 'Arts and Humanities';"}
{"prompt":"How many green buildings are there in each zip code? with given SQL schema CREATE TABLE Zip (zip_code INT, zip_name VARCHAR(50)); CREATE TABLE Building (building_id INT, building_name VARCHAR(50), building_type VARCHAR(50), zip_code INT);","completion":"SELECT Zip.zip_name, COUNT(*) as num_buildings FROM Zip JOIN Building ON Zip.zip_code = Building.zip_code WHERE Building.building_type = 'green' GROUP BY Zip.zip_name;"}
{"prompt":"What is the total CO2 emission of buildings constructed before 2000, grouped by city? with given SQL schema CREATE TABLE Buildings (id INT, city VARCHAR(50), co2_emission FLOAT, construction_year INT); INSERT INTO Buildings (id, city, co2_emission, construction_year) VALUES (1, 'NYC', 1200.5, 2020), (2, 'LA', 1500.3, 2019), (3, 'SF', 900.2, 2020), (4, 'NYC', 1800.7, 1999), (5, 'LA', 1300.5, 1998);","completion":"SELECT city, SUM(co2_emission) FROM Buildings WHERE construction_year < 2000 GROUP BY city;"}
{"prompt":"How has the number of sustainable tourism activities in Indonesia changed over the past year? with given SQL schema CREATE TABLE indonesia_sustainable_tourism (month INT, country TEXT, num_activities INT); INSERT INTO indonesia_sustainable_tourism (month, country, num_activities) VALUES (1, 'Indonesia', 120), (2, 'Indonesia', 125), (3, 'Indonesia', 130), (4, 'Indonesia', 140), (5, 'Indonesia', 150), (6, 'Indonesia', 160), (7, 'Indonesia', 170), (8, 'Indonesia', 180), (9, 'Indonesia', 190), (10, 'Indonesia', 200), (11, 'Indonesia', 210), (12, 'Indonesia', 220);","completion":"SELECT month, num_activities FROM indonesia_sustainable_tourism;"}
{"prompt":"What is the average energy savings per hotel in Egypt? with given SQL schema CREATE TABLE HotelEnergy (HotelID INT, Country VARCHAR(50), EnergySavings FLOAT); INSERT INTO HotelEnergy (HotelID, Country, EnergySavings) VALUES (1, 'Egypt', 200), (2, 'Egypt', 250);","completion":"SELECT AVG(EnergySavings) FROM HotelEnergy WHERE Country = 'Egypt';"}
{"prompt":"Add new records to \"traditional_music\" table with given SQL schema CREATE TABLE IF NOT EXISTS traditional_music (id INT, name VARCHAR(255), origin VARCHAR(255)); INSERT INTO traditional_music VALUES (1, 'Mbira', 'Zimbabwe');","completion":"INSERT INTO traditional_music (id, name, origin) VALUES (2, 'Didgeridoo', 'Australia'), (3, 'Kora', 'West Africa');"}
{"prompt":"List the traditional arts that have been represented in the most heritage sites, ordered by the number of heritage sites in descending order. with given SQL schema CREATE TABLE Arts (ArtID INT, ArtName TEXT, ArtType TEXT); INSERT INTO Arts (ArtID, ArtName, ArtType) VALUES (1001, 'Pottery', 'Ceramics'), (1002, 'Weaving', 'Textiles'), (1003, 'Dance', 'Performing Arts'); CREATE TABLE SiteArts (SiteID INT, ArtID INT); INSERT INTO SiteArts (SiteID, ArtID) VALUES (1001, 1001), (1002, 1001), (1003, 1001), (1004, 1002), (1005, 1002);","completion":"SELECT ArtType, COUNT(SiteID) AS Number_Of_Sites FROM SiteArts JOIN Arts ON SiteArts.ArtID = Arts.ArtID GROUP BY ArtType ORDER BY Number_Of_Sites DESC;"}
{"prompt":"What is the total number of tourists visiting historical sites in Europe? with given SQL schema CREATE TABLE tourism (destination VARCHAR(50), category VARCHAR(50), number_of_tourists INT); INSERT INTO tourism (destination, category, number_of_tourists) VALUES ('Colosseum', 'Historical', 50000), ('Louvre', 'Historical', 80000), ('Acropolis', 'Historical', 60000);","completion":"SELECT SUM(number_of_tourists) FROM tourism WHERE category = 'Historical';"}
{"prompt":"Insert a new record into the 'offenders' table with given SQL schema CREATE TABLE offenders (id INT PRIMARY KEY, name VARCHAR(255), age INT, state VARCHAR(2));","completion":"INSERT INTO offenders (id, name, age, state) VALUES (1, 'Jamal Johnson', 34, 'IL');"}
{"prompt":"What is the average time taken to resolve cases for each mediator? with given SQL schema CREATE TABLE mediators (mediator_id INT, name TEXT); INSERT INTO mediators (mediator_id, name) VALUES (1, 'John'), (2, 'Jane'), (3, 'Mike'); CREATE TABLE cases (case_id INT, mediator_id INT, date TEXT, resolved_date TEXT); INSERT INTO cases (case_id, mediator_id, date, resolved_date) VALUES (1, 1, '2022-01-01', '2022-01-15'), (2, 1, '2022-02-01', '2022-02-28'), (3, 2, '2022-03-01', '2022-03-15'), (4, 3, '2022-04-01', '2022-04-30');","completion":"SELECT mediators.name, AVG(DATEDIFF('day', cases.date, cases.resolved_date)) as average_time_to_resolve FROM mediators INNER JOIN cases ON mediators.mediator_id = cases.mediator_id GROUP BY mediators.name;"}
{"prompt":"Count the number of underwater volcanoes in the Pacific Ocean. with given SQL schema CREATE TABLE OceanFloorFeatures (id INT, ocean_id INT, feature VARCHAR(20)); INSERT INTO OceanFloorFeatures (id, ocean_id, feature) VALUES (1, 1, 'Volcano'), (2, 1, 'Mountain'), (3, 2, 'Volcano'), (4, 2, 'Trench');","completion":"SELECT COUNT(*) FROM OceanFloorFeatures JOIN Oceans ON OceanFloorFeatures.ocean_id = Oceans.id WHERE Oceans.name = 'Pacific' AND OceanFloorFeatures.feature = 'Volcano';"}
{"prompt":"How many whale shark sightings were reported in the Indian Ocean in 2020? with given SQL schema CREATE TABLE whale_shark_sightings (year INT, location TEXT, sightings INT); INSERT INTO whale_shark_sightings (year, location, sightings) VALUES (2018, 'Indian Ocean', 120), (2019, 'Indian Ocean', 150), (2020, 'Indian Ocean', 170);","completion":"SELECT sightings FROM whale_shark_sightings WHERE year = 2020 AND location = 'Indian Ocean';"}
{"prompt":"Add a new TV show to the 'shows' table with the title 'New TV Show', release year 2022, and id 5 with given SQL schema CREATE TABLE shows (id INT, title TEXT, release_year INT);","completion":"INSERT INTO shows (id, title, release_year) VALUES (5, 'New TV Show', 2022);"}
{"prompt":"What are the names of the actors who have acted in the same movie as the director? with given SQL schema CREATE TABLE movies (id INT, title TEXT, actor TEXT, director TEXT);","completion":"SELECT DISTINCT actor FROM movies WHERE director IN (SELECT actor FROM movies);"}
{"prompt":"What is the average labor productivity by mine type in the past 12 months? with given SQL schema CREATE TABLE mine_labor_productivity (mine_type VARCHAR(255), productivity NUMERIC, measurement_date DATE); INSERT INTO mine_labor_productivity (mine_type, productivity, measurement_date) VALUES ('open_pit', 1234, '2021-08-01'), ('underground', 2345, '2021-08-01'), ('open_pit', 5432, '2021-07-01'), ('underground', 6789, '2021-07-01');","completion":"SELECT mine_type, AVG(productivity) as avg_productivity FROM (SELECT mine_type, productivity, measurement_date, ROW_NUMBER() OVER (PARTITION BY mine_type ORDER BY measurement_date DESC) as rn FROM mine_labor_productivity WHERE measurement_date >= DATEADD(month, -12, CURRENT_DATE)) t WHERE rn = 1 GROUP BY mine_type;"}
{"prompt":"What is the total number of employees working in the mining industry in each country in the Middle East? with given SQL schema CREATE TABLE mining_companies (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE employees (company_id INT, num_employees INT, employee_country VARCHAR(50)); INSERT INTO mining_companies (id, name, country) VALUES (1, 'Negev Mining', 'Israel'), (2, 'Arabian Drilling', 'Saudi Arabia'); INSERT INTO employees (company_id, num_employees, employee_country) VALUES (1, 500, 'Israel'), (1, 550, 'Israel'), (2, 700, 'Saudi Arabia');","completion":"SELECT mc.country, SUM(e.num_employees) as total_employees FROM mining_companies mc INNER JOIN employees e ON mc.id = e.company_id WHERE e.employee_country = mc.country AND mc.continent = 'Asia' GROUP BY mc.country;"}
{"prompt":"Delete the record of the reader with the ID of 6 if it exists. with given SQL schema CREATE TABLE readers (id INT, name VARCHAR(50), age INT, preference VARCHAR(50)); INSERT INTO readers (id, name, age, preference) VALUES (1, 'John Doe', 30, 'technology'), (2, 'Jane Smith', 45, 'sports'), (3, 'Bob Johnson', 28, 'politics'), (6, 'Mateo Garcia', 29, 'international');","completion":"DELETE FROM readers WHERE id = 6;"}
{"prompt":"How many news articles were published in the 'international' section in the last month? with given SQL schema CREATE TABLE news_articles (id INT, title VARCHAR(100), section VARCHAR(50), publication_date DATE); INSERT INTO news_articles (id, title, section, publication_date) VALUES (1, 'Article 1', 'international', '2022-01-01'), (2, 'Article 2', 'national', '2022-02-01'), (3, 'Article 3', 'international', '2022-02-15');","completion":"SELECT COUNT(*) FROM news_articles WHERE section = 'international' AND publication_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"What is the total number of articles written by each author in each region? with given SQL schema CREATE TABLE authors (id INT, name TEXT); CREATE TABLE regions (id INT, name TEXT); CREATE TABLE articles (id INT, title TEXT, content TEXT, author_id INT, region_id INT); INSERT INTO authors (id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'); INSERT INTO regions (id, name) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West'); INSERT INTO articles (id, title, content, author_id, region_id) VALUES (1, 'Article 1', 'Content 1', 1, 1), (2, 'Article 2', 'Content 2', 2, 2), (3, 'Article 3', 'Content 3', 1, 3), (4, 'Article 4', 'Content 4', 2, 4);","completion":"SELECT authors.name, regions.name, COUNT(articles.id) FROM authors INNER JOIN articles ON authors.id = articles.author_id INNER JOIN regions ON regions.id = articles.region_id GROUP BY authors.name, regions.name;"}
{"prompt":"What is the total donation amount per region in the 'Donations' table? with given SQL schema CREATE TABLE Regions (RegionID int, RegionName varchar(50)); CREATE TABLE Donations (DonationID int, DonorID int, Amount decimal(10,2), RegionID int); INSERT INTO Regions (RegionID, RegionName) VALUES (1, 'North America'), (2, 'South America'), (3, 'Europe'), (4, 'Asia'), (5, 'Africa'); INSERT INTO Donations (DonationID, DonorID, Amount, RegionID) VALUES (1, 1001, 200.00, 1), (2, 1002, 300.00, 1), (3, 1003, 500.00, 3), (4, 1004, 150.00, 2), (5, 1005, 800.00, 4);","completion":"SELECT r.RegionName, SUM(d.Amount) as TotalDonationPerRegion FROM Donations d JOIN Regions r ON d.RegionID = r.RegionID GROUP BY r.RegionName;"}
{"prompt":"What is the maximum number of marine species ever observed in a single day in the Baltic Sea? with given SQL schema CREATE TABLE marine_species_observations (observation_id INTEGER, observation_date DATE, species_name TEXT, ocean TEXT, number_of_observations INTEGER);","completion":"SELECT MAX(number_of_observations) FROM marine_species_observations WHERE ocean = 'Baltic Sea' AND observation_date BETWEEN '2000-01-01' AND '2022-12-31' GROUP BY ocean, DATE_TRUNC('day', observation_date);"}
{"prompt":"What is the number of players who have played more than 100 minutes? with given SQL schema CREATE TABLE player_sessions (id INT, player_name TEXT, playtime INT); INSERT INTO player_sessions (id, player_name, playtime) VALUES (1, 'Olivia', 120); INSERT INTO player_sessions (id, player_name, playtime) VALUES (2, 'Olivia', 150); INSERT INTO player_sessions (id, player_name, playtime) VALUES (3, 'William', 200);","completion":"SELECT COUNT(*) FROM player_sessions WHERE playtime > 100;"}
{"prompt":"How many esports events were held in Europe in 2022? with given SQL schema CREATE TABLE esports_events (id INT, year INT, location VARCHAR(20)); INSERT INTO esports_events (id, year, location) VALUES (1, 2022, 'USA'), (2, 2022, 'Germany'), (3, 2021, 'France');","completion":"SELECT COUNT(*) FROM esports_events WHERE year = 2022 AND location LIKE 'Europe%';"}
{"prompt":"Show the total prize pool for each game with given SQL schema CREATE TABLE esports_events (event_id INT PRIMARY KEY, name VARCHAR(50), date DATE, game VARCHAR(50), location VARCHAR(50), prize_pool DECIMAL(10,2));","completion":"SELECT game, SUM(prize_pool) as total_prize_pool FROM esports_events GROUP BY game;"}
{"prompt":"What is the average age of players who use virtual reality devices in 2021? with given SQL schema CREATE TABLE PlayerDevices (PlayerID INT, Age INT, Device VARCHAR(50), Year INT); INSERT INTO PlayerDevices (PlayerID, Age, Device, Year) VALUES (1, 25, 'Oculus Rift', 2020); INSERT INTO PlayerDevices (PlayerID, Age, Device, Year) VALUES (2, 32, 'HTC Vive', 2021); INSERT INTO PlayerDevices (PlayerID, Age, Device, Year) VALUES (3, 19, 'Oculus Quest', 2021);","completion":"SELECT AVG(Age) FROM PlayerDevices WHERE Year = 2021 AND Device IS NOT NULL;"}
{"prompt":"How many public pools in the Recreation department have a budget over $200,000? with given SQL schema CREATE TABLE Recreation_Dept (ID INT, Facility VARCHAR(255), Budget FLOAT); INSERT INTO Recreation_Dept (ID, Facility, Budget) VALUES (1, 'Public Pool', 300000), (2, 'Public Pool', 150000), (3, 'Community Center', 200000);","completion":"SELECT COUNT(*) FROM Recreation_Dept WHERE Facility = 'Public Pool' AND Budget > 200000;"}
{"prompt":"What is the total budget allocated for services in the Social Services department that start with the letter 'C'? with given SQL schema CREATE TABLE Social_Services_Dept (ID INT, Service VARCHAR(255), Budget FLOAT); INSERT INTO Social_Services_Dept (ID, Service, Budget) VALUES (1, 'Child Care', 600000), (2, 'Counseling', 700000), (3, 'Elder Care', 800000);","completion":"SELECT SUM(Budget) FROM Social_Services_Dept WHERE Service LIKE 'C%';"}
{"prompt":"What is the highest energy rating for properties in the 'green_buildings' table? with given SQL schema CREATE TABLE green_buildings (id INT, square_footage FLOAT, energy_rating INT);","completion":"SELECT MAX(energy_rating) FROM green_buildings;"}
{"prompt":"What is the average energy efficiency rating for residential buildings in the \"CleanEnergy\" schema? with given SQL schema CREATE TABLE ResidentialEfficiency (building_id INT, rating FLOAT, city VARCHAR(50), state VARCHAR(50)); INSERT INTO ResidentialEfficiency (building_id, rating, city, state) VALUES (1, 92.5, 'SanFrancisco', 'CA'), (2, 88.3, 'Austin', 'TX');","completion":"SELECT AVG(rating) FROM CleanEnergy.ResidentialEfficiency;"}
{"prompt":"Show the minimum quantity of products in the 'gifts' category with given SQL schema CREATE TABLE products (product_id INT, category VARCHAR(20), quantity INT); INSERT INTO products (product_id, category, quantity) VALUES (1, 'gifts', 5), (2, 'gifts', 10), (3, 'gifts', 15);","completion":"SELECT MIN(quantity) FROM products WHERE category = 'gifts';"}
{"prompt":"What is the average number of satellites owned by countries with space programs? with given SQL schema CREATE TABLE countries (id INTEGER, name TEXT, num_satellites INTEGER); INSERT INTO countries (id, name, num_satellites) VALUES (1, 'USA', 1500), (2, 'Russia', 1200), (3, 'China', 800), (4, 'India', 300), (5, 'Japan', 250), (6, 'Germany', 150), (7, 'France', 120), (8, 'Italy', 100); CREATE TABLE space_programs (id INTEGER, country TEXT); INSERT INTO space_programs (id, country) VALUES (1, 'USA'), (2, 'Russia'), (3, 'China'), (4, 'India'), (5, 'Japan'), (6, 'Germany'), (7, 'France'), (8, 'Italy');","completion":"SELECT AVG(num_satellites) FROM countries INNER JOIN space_programs ON countries.name = space_programs.country;"}
{"prompt":"What is the maximum number of space missions by astronauts from Japan? with given SQL schema CREATE TABLE Astronauts (AstronautId INT, Name VARCHAR(50), Age INT, Nationality VARCHAR(50), SpaceMissions INT); INSERT INTO Astronauts (AstronautId, Name, Age, Nationality, SpaceMissions) VALUES (5, 'Soichi Noguchi', 55, 'Japan', 6);","completion":"SELECT Nationality, MAX(SpaceMissions) FROM Astronauts WHERE Nationality = 'Japan';"}
{"prompt":"What is the total mass of space debris larger than 10 cm in Low Earth Orbit (LEO)? with given SQL schema CREATE TABLE space_debris(id INT, name VARCHAR(255), launch_date DATE, launch_site VARCHAR(255), orbit VARCHAR(255), mass FLOAT); INSERT INTO space_debris VALUES (1, 'Fengyun 1C', '1999-11-15', 'Xichang', 'LEO', 1500); INSERT INTO space_debris VALUES (2, 'COSMOS 2421', '2001-11-25', 'Plesetsk', 'LEO', 850); INSERT INTO space_debris VALUES (3, 'COSMOS 2251', '1993-07-16', 'Plesetsk', 'LEO', 900);","completion":"SELECT SUM(mass) FROM space_debris WHERE orbit = 'LEO' AND mass > 10;"}
{"prompt":"Which spacecraft have astronauts with Texas residency flown? with given SQL schema CREATE TABLE Spacecraft (Id INT, Name VARCHAR(50), ManufacturerId INT); CREATE TABLE Astronaut (Id INT, Name VARCHAR(50), SpacecraftId INT, Residence VARCHAR(50));","completion":"SELECT DISTINCT s.Name FROM Spacecraft s JOIN Astronaut a ON s.Id = a.SpacecraftId WHERE a.Residence = 'Texas';"}
{"prompt":"Calculate the average ticket price for each sports team with given SQL schema CREATE TABLE sports_teams (team_id INT, team_name VARCHAR(50)); INSERT INTO sports_teams (team_id, team_name) VALUES (1, 'TeamA'), (2, 'TeamB'); CREATE TABLE ticket_sales (ticket_id INT, team_id INT, price DECIMAL(5,2)); INSERT INTO ticket_sales (ticket_id, team_id, price) VALUES (1, 1, 75.50), (2, 1, 85.20), (3, 2, 65.00), (4, 2, 75.00);","completion":"SELECT s.team_name, AVG(t.price) FROM sports_teams s INNER JOIN ticket_sales t ON s.team_id = t.team_id GROUP BY s.team_name;"}
{"prompt":"What are the total ticket sales for the warriors in the ticket_sales table? with given SQL schema CREATE TABLE ticket_sales (team_name TEXT, sale_date DATE, quantity_sold INTEGER);","completion":"SELECT SUM(quantity_sold) FROM ticket_sales WHERE team_name = 'warriors';"}
{"prompt":"Which electric vehicles have the highest and lowest adoption rates in 'london'? with given SQL schema CREATE TABLE if not exists vehicle_types (vehicle_type varchar(20)); INSERT INTO vehicle_types (vehicle_type) VALUES ('tesla'), ('nissan'), ('bmw'); CREATE TABLE if not exists adoption_rates (vehicle_type varchar(20), city varchar(20), adoption_rate float); INSERT INTO adoption_rates (vehicle_type, city, adoption_rate) VALUES ('tesla', 'london', 45.2), ('nissan', 'london', 30.1), ('bmw', 'london', 24.7), ('tesla', 'london', 45.5), ('nissan', 'london', 30.3), ('bmw', 'london', 24.9);","completion":"SELECT vehicle_type, MAX(adoption_rate) as highest_rate, MIN(adoption_rate) as lowest_rate FROM adoption_rates WHERE city = 'london' GROUP BY vehicle_type;"}
{"prompt":"What is the total revenue for eco-friendly footwear in Germany in Q2 2021? with given SQL schema CREATE TABLE sales (item_code VARCHAR(20), item_name VARCHAR(50), category VARCHAR(50), country VARCHAR(50), sale_date DATE, revenue DECIMAL(10,2), is_eco_friendly BOOLEAN);","completion":"SELECT SUM(revenue) as total_revenue FROM sales WHERE category LIKE '%footwear%' AND country = 'Germany' AND is_eco_friendly = TRUE AND sale_date BETWEEN '2021-04-01' AND '2021-06-30';"}
{"prompt":"What is the average policy duration for policyholders in the West region with a risk score between 600 and 800? with given SQL schema CREATE TABLE Policyholders (PolicyID INT, RiskScore INT, Region VARCHAR(10), PolicyDuration INT); INSERT INTO Policyholders VALUES (1, 700, 'West', 36); INSERT INTO Policyholders VALUES (2, 400, 'East', 24);","completion":"SELECT AVG(p.PolicyDuration) as AvgPolicyDuration FROM Policyholders p WHERE p.Region = 'West' AND p.RiskScore BETWEEN 600 AND 800;"}
{"prompt":"What is the total number of members in 'manufacturing_unions'? with given SQL schema CREATE TABLE manufacturing_unions.members (id INT, name TEXT, union_member BOOLEAN);","completion":"SELECT COUNT(*) FROM manufacturing_unions.members WHERE union_member = TRUE;"}
{"prompt":"What is the total number of workers in each industry? with given SQL schema CREATE TABLE if not exists industry (industry_id INT, industry_name TEXT, total_workers INT); INSERT INTO industry (industry_id, industry_name, total_workers) VALUES (1, 'manufacturing', 5000), (2, 'technology', 7000), (3, 'healthcare', 6000), (4, 'finance', 4000), (5, 'retail', 3000);","completion":"SELECT industry_name, SUM(total_workers) FROM industry GROUP BY industry_name;"}
{"prompt":"What is the number of gasoline vehicles sold in 'Florida' in the 'sales' table? with given SQL schema CREATE TABLE sales (region VARCHAR(10), vehicle_type VARCHAR(10), vehicle_count INT); INSERT INTO sales VALUES ('California', 'electric', 5000), ('Texas', 'gasoline', 6000), ('Florida', 'gasoline', 3000), ('California', 'hybrid', 5500), ('Texas', 'electric', 6500), ('Florida', 'electric', 2500);","completion":"SELECT SUM(vehicle_count) FROM sales WHERE region = 'Florida' AND vehicle_type = 'gasoline';"}
{"prompt":"List all unique types of cargo loaded onto vessels in the Atlantic region. with given SQL schema CREATE TABLE vessels (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO vessels (id, name, region) VALUES (1, 'VesselA', 'Pacific'), (2, 'VesselB', 'Atlantic'), (3, 'VesselC', 'Pacific'); CREATE TABLE cargo (id INT, vessel_id INT, cargo_type VARCHAR(255)); INSERT INTO cargo (id, vessel_id, cargo_type) VALUES (1, 1, 'Fuel'), (2, 1, 'Containers'), (3, 2, 'Fuel'), (4, 3, 'Containers');","completion":"SELECT DISTINCT cargo_type FROM cargo c JOIN vessels v ON c.vessel_id = v.id WHERE v.region = 'Atlantic';"}
{"prompt":"What is the average cargo quantity per vessel for each vessel type? with given SQL schema CREATE TABLE Vessels (Id INT, Name VARCHAR(50), Type VARCHAR(50), Flag VARCHAR(50)); INSERT INTO Vessels (Id, Name, Type, Flag) VALUES (1, 'Aurelia', 'Tanker', 'Panama'); INSERT INTO Vessels (Id, Name, Type, Flag) VALUES (2, 'Barracuda', 'Bulk Carrier', 'Marshall Islands'); CREATE TABLE Cargo (Id INT, VesselId INT, CargoType VARCHAR(50), Quantity INT); INSERT INTO Cargo (Id, VesselId, CargoType, Quantity) VALUES (1, 1, 'Oil', 5000); INSERT INTO Cargo (Id, VesselId, CargoType, Quantity) VALUES (2, 2, 'Coal', 8000);","completion":"SELECT Vessels.Type, AVG(Cargo.Quantity) as AverageCargoQuantity FROM Cargo JOIN Vessels ON Cargo.VesselId = Vessels.Id GROUP BY Vessels.Type;"}
{"prompt":"What was the average speed for vessels in the Arctic Circle in July 2020? with given SQL schema CREATE TABLE vessels(id INT, name VARCHAR(100), region VARCHAR(50));CREATE TABLE speeds(id INT, vessel_id INT, speed FLOAT, speed_date DATE);","completion":"SELECT AVG(speed) FROM speeds JOIN vessels ON speeds.vessel_id = vessels.id WHERE region = 'Arctic Circle' AND speed_date BETWEEN '2020-07-01' AND '2020-07-31';"}
{"prompt":"How many recycling plants in Canada process exactly 5 types of waste? with given SQL schema CREATE TABLE recycling_plants (name TEXT, country TEXT, waste_types INTEGER); INSERT INTO recycling_plants (name, country, waste_types) VALUES ('Recycling Plant 1', 'Canada', 6), ('Recycling Plant 2', 'Canada', 4), ('Recycling Plant 3', 'Canada', 5), ('Recycling Plant 4', 'Canada', 5), ('Recycling Plant 5', 'Canada', 3);","completion":"SELECT COUNT(*) FROM recycling_plants WHERE country = 'Canada' AND waste_types = 5;"}
{"prompt":"What is the quarterly recycling rate for 'Plastic' in 'Australia' from Q1 2020 to Q2 2020? with given SQL schema CREATE TABLE australia_recycling_rates (quarter VARCHAR(10), year INT, material VARCHAR(20), recycling_rate DECIMAL(5,2)); INSERT INTO australia_recycling_rates (quarter, year, material, recycling_rate) VALUES ('Q1', 2020, 'Plastic', 0.35), ('Q2', 2020, 'Plastic', 0.40);","completion":"SELECT quarter, recycling_rate FROM australia_recycling_rates WHERE material = 'Plastic' AND (year = 2020 AND quarter IN ('Q1', 'Q2'));"}
{"prompt":"Add a new record for a member with id 27, name 'Fatima Ahmed' and email 'fatimaahmed@example.com' into the members table if no such member already exists with given SQL schema CREATE TABLE members (id INT, name VARCHAR(50), email VARCHAR(50));","completion":"INSERT INTO members (id, name, email) SELECT 27, 'Fatima Ahmed', 'fatimaahmed@example.com' FROM dual WHERE NOT EXISTS (SELECT * FROM members WHERE id = 27);"}
{"prompt":"Calculate the total number of steps taken by users in January 2021. with given SQL schema CREATE TABLE DailySteps (user_id INT, steps INT, activity_date DATE); INSERT INTO DailySteps (user_id, steps, activity_date) VALUES (1, 12000, '2021-01-01'), (2, 8000, '2021-01-02'), (3, 15000, '2021-01-03');","completion":"SELECT SUM(steps) FROM DailySteps WHERE activity_date BETWEEN '2021-01-01' AND '2021-01-31';"}
{"prompt":"How many creative AI applications were developed in the 'americas' region in 2022? with given SQL schema CREATE TABLE creative_ai (region TEXT, year INTEGER, applications INTEGER); INSERT INTO creative_ai (region, year, applications) VALUES ('americas', 2022, 25), ('europe', 2022, 30), ('asia', 2022, 35);","completion":"SELECT SUM(applications) FROM creative_ai WHERE region = 'americas' AND year = 2022;"}
{"prompt":"How many agricultural innovation projects were completed in India between 2015 and 2019?' with given SQL schema CREATE TABLE agricultural_innovation_projects (id INT, country VARCHAR(255), start_year INT, end_year INT, completed INT); INSERT INTO agricultural_innovation_projects (id, country, start_year, end_year, completed) VALUES (1, 'India', 2015, 2019, 1);","completion":"SELECT COUNT(*) FROM agricultural_innovation_projects WHERE country = 'India' AND start_year <= 2019 AND end_year >= 2015 AND completed = 1;"}
{"prompt":"What is the minimum investment per project in the 'infrastructure_projects' table? with given SQL schema CREATE TABLE infrastructure_projects (id INT, project VARCHAR(50), investment FLOAT); INSERT INTO infrastructure_projects (id, project, investment) VALUES (1, 'Road Construction', 25000.0); INSERT INTO infrastructure_projects (id, project, investment) VALUES (2, 'Water Supply', 30000.0); INSERT INTO infrastructure_projects (id, project, investment) VALUES (3, 'Electricity Grid', 40000.0);","completion":"SELECT MIN(investment) FROM infrastructure_projects;"}
{"prompt":"How many tickets were sold for cultural events in Q1 2022? with given SQL schema CREATE TABLE Events (EventID INT, EventType VARCHAR(50), StartDate DATE, EndDate DATE); INSERT INTO Events (EventID, EventType, StartDate, EndDate) VALUES (1, 'Dance Performance', '2022-04-01', '2022-04-03'), (2, 'Theater Performance', '2022-01-01', '2022-01-31'), (3, 'Cultural Festival', '2022-01-15', '2022-01-30'); CREATE TABLE Tickets (TicketID INT, EventID INT, Quantity INT); INSERT INTO Tickets (TicketID, EventID, Quantity) VALUES (1, 1, 100), (2, 2, 200), (3, 3, 150);","completion":"SELECT SUM(Quantity) FROM Events INNER JOIN Tickets ON Events.EventID = Tickets.EventID WHERE Events.EventType = 'Cultural Festival' AND QUARTER(StartDate) = 1;"}
{"prompt":"What is the maximum marketing cost for TV shows in the 'Drama' genre? with given SQL schema CREATE TABLE TVShowMarketing (show_id INT, genre VARCHAR(255), marketing_cost DECIMAL(5,2)); INSERT INTO TVShowMarketing (show_id, genre, marketing_cost) VALUES (1, 'Drama', 1000000.00), (2, 'Comedy', 750000.00), (3, 'Drama', 1500000.00);","completion":"SELECT MAX(marketing_cost) FROM TVShowMarketing WHERE genre = 'Drama';"}
{"prompt":"Delete the permit with number 2021-020 with given SQL schema CREATE TABLE building_permits (permit_number TEXT, contractor TEXT); INSERT INTO building_permits (permit_number, contractor) VALUES ('2021-020', 'Contractor Name');","completion":"WITH cte AS (DELETE FROM building_permits WHERE permit_number = '2021-020') SELECT * FROM cte;"}
{"prompt":"How many construction projects were completed in each month of 2021? with given SQL schema CREATE TABLE project_timeline (id INT, project VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO project_timeline (id, project, start_date, end_date) VALUES (1, 'Office Building', '2021-01-01', '2021-04-30'), (2, 'Residential Apartments', '2021-03-01', '2021-08-01'), (3, 'School', '2021-06-15', '2021-10-15');","completion":"SELECT MONTH(start_date) AS month, COUNT(*) AS projects FROM project_timeline WHERE YEAR(start_date) = 2021 AND end_date IS NOT NULL GROUP BY month;"}
{"prompt":"What is the total revenue for the top 5 dispensaries in Colorado in Q1 of 2023? with given SQL schema CREATE TABLE dispensary_sales (id INT, dispensary_name VARCHAR(255), state VARCHAR(255), revenue DECIMAL(10, 2), sale_date DATE);","completion":"SELECT SUM(revenue) FROM dispensary_sales WHERE state = 'Colorado' AND sale_date BETWEEN '2023-01-01' AND '2023-03-31' AND dispensary_name IN (SELECT dispensary_name FROM dispensary_sales WHERE state = 'Colorado' AND sale_date BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY dispensary_name ORDER BY SUM(revenue) DESC LIMIT 5);"}
{"prompt":"Which strain was the best seller in Colorado in 2021? with given SQL schema CREATE TABLE sales (id INT, state VARCHAR(50), year INT, strain VARCHAR(50), quantity INT); INSERT INTO sales (id, state, year, strain, quantity) VALUES (1, 'Colorado', 2021, 'Blue Dream', 500), (2, 'Colorado', 2021, 'Gorilla Glue', 700), (3, 'Colorado', 2022, 'Blue Dream', 800);","completion":"SELECT strain, SUM(quantity) as total_quantity FROM sales WHERE state = 'Colorado' AND year = 2021 GROUP BY strain ORDER BY total_quantity DESC LIMIT 1;"}
{"prompt":"What is the success rate of cases handled by attorneys who have passed the bar exam in the state where they practice? with given SQL schema CREATE TABLE Cases (CaseID int, AttorneyID int, Outcome text); INSERT INTO Cases (CaseID, AttorneyID, Outcome) VALUES (1, 1, 'won'); CREATE TABLE Attorneys (AttorneyID int, State text, BarPassed text); INSERT INTO Attorneys (AttorneyID, State, BarPassed) VALUES (1, 'California', 'yes');","completion":"SELECT AVG(CASE WHEN Outcome = 'won' THEN 1.0 ELSE 0.0 END) as SuccessRate FROM Cases C INNER JOIN Attorneys A ON C.AttorneyID = A.AttorneyID WHERE A.BarPassed = 'yes';"}
{"prompt":"What is the total number of clients for each attorney? with given SQL schema CREATE TABLE clients (client_id INT PRIMARY KEY, attorney_id INT, client_name VARCHAR(50), case_opened_date DATE);","completion":"SELECT attorney_id, COUNT(client_id) FROM clients GROUP BY attorney_id;"}
{"prompt":"Update the climate communication ROI for projects in Oceania with the latest regional average. with given SQL schema CREATE TABLE climate_communication (project VARCHAR(50), country VARCHAR(50), roi FLOAT, date DATE); CREATE TABLE regional_roi (region VARCHAR(50), roi FLOAT, date DATE); INSERT INTO climate_communication (project, country, roi, date) VALUES ('Climate Change Guide', 'Australia', 1.3, '2021-01-01'); INSERT INTO climate_communication (project, country, roi, date) VALUES ('Ocean Conservation', 'New Zealand', 1.2, '2021-01-01'); INSERT INTO regional_roi (region, roi, date) VALUES ('Oceania', 1.25, '2021-01-01');","completion":"UPDATE climate_communication SET roi = (SELECT roi FROM regional_roi WHERE region = 'Oceania' AND climate_communication.date = regional_roi.date) WHERE country IN ('Australia', 'New Zealand');"}
{"prompt":"What is the average annual rainfall in Asia for the last 5 years? with given SQL schema CREATE TABLE rainfall_asia (country VARCHAR(20), year INT, rainfall DECIMAL(5,2)); INSERT INTO rainfall_asia VALUES ('AS', 2015, 12.1), ('AS', 2016, 12.3), ('AS', 2017, 12.5), ('AS', 2018, 12.7), ('AS', 2019, 12.9);","completion":"SELECT AVG(rainfall) FROM rainfall_asia WHERE country = 'AS' AND year BETWEEN 2015 AND 2019;"}
{"prompt":"What is the number of 'climate communication' campaigns launched in 'Asia' in '2023' from the 'communication' table? with given SQL schema CREATE TABLE communication (region VARCHAR(255), campaigns INT, year INT);","completion":"SELECT COUNT(*) FROM communication WHERE region = 'Asia' AND year = 2023;"}
{"prompt":"What is the maximum age of patients with HIV in Australia? with given SQL schema CREATE TABLE Patients (ID INT, Gender VARCHAR(10), Age INT, Disease VARCHAR(20), Country VARCHAR(30), Diagnosis_Date DATE); INSERT INTO Patients (ID, Gender, Age, Disease, Country, Diagnosis_Date) VALUES (1, 'Male', 50, 'HIV', 'Australia', '2020-02-01');","completion":"SELECT MAX(Age) FROM Patients WHERE Disease = 'HIV' AND Country = 'Australia';"}
{"prompt":"What is the sum of funding amounts for companies founded in the last 5 years that have a female CEO? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founding_date DATE, CEO_gender TEXT); INSERT INTO companies (id, name, founding_date, CEO_gender) VALUES (1, 'BioHealth', '2019-01-01', 'Female');","completion":"SELECT SUM(funding_amount) FROM funding_records JOIN companies ON funding_records.company_id = companies.id WHERE companies.founding_date >= DATEADD(year, -5, CURRENT_DATE) AND companies.CEO_gender = 'Female';"}
{"prompt":"List all startups that have not raised any funding with given SQL schema CREATE TABLE startups (id INT, name TEXT, funding_raised INT); CREATE TABLE investments (id INT, startup_id INT, funding_amount INT);","completion":"SELECT startups.name FROM startups LEFT JOIN investments ON startups.id = investments.startup_id WHERE investments.funding_amount IS NULL;"}
{"prompt":"Get the total number of inclusion efforts in the InclusionEfforts table for a specific location. with given SQL schema CREATE TABLE InclusionEfforts (effortID INT, effortType VARCHAR(50), location VARCHAR(50), effortStatus VARCHAR(50));","completion":"SELECT location, COUNT(*) FROM InclusionEfforts WHERE effortStatus = 'Completed' GROUP BY location;"}
{"prompt":"List all instructors and number of students they support with accommodations. with given SQL schema CREATE TABLE Instructors (id INT, name VARCHAR(50), title VARCHAR(50));","completion":"SELECT i.name, COUNT(a.student_id) as supported_students FROM Instructors i JOIN Accommodations a ON i.id = a.instructor_id GROUP BY i.name;"}
{"prompt":"What is the total number of museum visitors from historically underrepresented communities in the last 2 years? with given SQL schema CREATE TABLE MuseumVisitors (visit_date DATE, community_type VARCHAR(50), num_visitors INT); INSERT INTO MuseumVisitors (visit_date, community_type, num_visitors) VALUES ('2020-01-01', 'African American', 120), ('2020-01-02', 'African American', 150), ('2020-01-03', 'Latinx', 80), ('2021-01-04', 'Latinx', 90), ('2021-02-01', 'Native American', 120), ('2021-02-02', 'Native American', 150), ('2021-03-03', 'Asian Pacific Islander', 80), ('2021-03-04', 'Asian Pacific Islander', 90);","completion":"SELECT SUM(num_visitors) FROM MuseumVisitors WHERE community_type IN ('African American', 'Latinx', 'Native American', 'Asian Pacific Islander') AND visit_date >= DATEADD(YEAR, -2, GETDATE());"}
{"prompt":"Generate a table 'threat_analysis' to store detailed analysis of threat intelligence metrics with given SQL schema CREATE TABLE threat_analysis (id INT PRIMARY KEY, analysis_date DATE, threat_level VARCHAR(10), analysis TEXT);","completion":"CREATE TABLE threat_analysis (id INT PRIMARY KEY, analysis_date DATE, threat_level VARCHAR(10), analysis TEXT);"}
{"prompt":"What is the total defense spending by the United States for each year from 2015 to 2020? with given SQL schema CREATE TABLE defense_spending (year INT, amount DECIMAL); INSERT INTO defense_spending (year, amount) VALUES (2015, 600), (2016, 610), (2017, 620), (2018, 630), (2019, 640), (2020, 650);","completion":"SELECT year, SUM(amount) FROM defense_spending WHERE year BETWEEN 2015 AND 2020 GROUP BY year;"}
{"prompt":"Show the total assets under management (AUM) for each investment strategy. with given SQL schema CREATE TABLE investment_strategies (strategy_id INT, strategy VARCHAR(20)); INSERT INTO investment_strategies (strategy_id, strategy) VALUES (1, 'Conservative'), (2, 'Moderate'), (3, 'Aggressive'); CREATE TABLE client_strategy (client_id INT, strategy_id INT); INSERT INTO client_strategy (client_id, strategy_id) VALUES (1, 2), (2, 3), (3, 1);","completion":"SELECT cs.strategy, SUM(value) AS total_aum FROM client_strategy cs JOIN clients c ON cs.client_id = c.client_id JOIN assets a ON c.client_id = a.client_id GROUP BY cs.strategy;"}
{"prompt":"Compare the prevalence of diabetes among Indigenous populations in rural and urban areas. with given SQL schema CREATE TABLE patients (id INT, age INT, diagnosis VARCHAR(20), ethnicity VARCHAR(20), residence VARCHAR(10)); INSERT INTO patients (id, age, diagnosis, ethnicity, residence) VALUES (1, 65, 'diabetes', 'Indigenous', 'rural'), (2, 45, 'asthma', 'Latino', 'urban'), (3, 70, 'diabetes', 'Indigenous', 'urban');","completion":"SELECT (SELECT COUNT(*) FROM patients WHERE diagnosis = 'diabetes' AND ethnicity = 'Indigenous' AND residence = 'rural') \/ (SELECT COUNT(*) FROM patients WHERE ethnicity = 'Indigenous' AND residence = 'rural') AS rural_diabetes_prevalence, (SELECT COUNT(*) FROM patients WHERE diagnosis = 'diabetes' AND ethnicity = 'Indigenous' AND residence = 'urban') \/ (SELECT COUNT(*) FROM patients WHERE ethnicity = 'Indigenous' AND residence = 'urban') AS urban_diabetes_prevalence;"}
{"prompt":"What is the average number of military personnel per base in 'Africa' and 'South America'? with given SQL schema CREATE TABLE MilitaryBases (ID INT, BaseName VARCHAR(50), Country VARCHAR(50), Personnel INT); INSERT INTO MilitaryBases (ID, BaseName, Country, Personnel) VALUES (1, 'Base1', 'Africa', 500); INSERT INTO MilitaryBases (ID, BaseName, Country, Personnel) VALUES (2, 'Base2', 'South America', 700); INSERT INTO MilitaryBases (ID, BaseName, Country, Personnel) VALUES (3, 'Base3', 'Africa', 600);","completion":"SELECT AVG(Personnel) FROM MilitaryBases WHERE Country IN ('Africa', 'South America');"}
{"prompt":"What is the total revenue for each genre of music in the United States for the year 2020? with given SQL schema CREATE TABLE music_genres (genre VARCHAR(255), country VARCHAR(255), revenue FLOAT); INSERT INTO music_genres (genre, country, revenue) VALUES ('Pop', 'USA', 10000.0), ('Rock', 'USA', 8000.0), ('Jazz', 'USA', 5000.0);","completion":"SELECT genre, SUM(revenue) as total_revenue FROM music_genres WHERE country = 'USA' AND YEAR(event_date) = 2020 GROUP BY genre;"}
{"prompt":"How many programs were successfully completed in the 'Programs' table? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(50), Status VARCHAR(10)); INSERT INTO Programs (ProgramID, ProgramName, Status) VALUES (1, 'Education', 'Completed'), (2, 'Health', 'In-Progress');","completion":"SELECT COUNT(*) FROM Programs WHERE Status = 'Completed';"}
{"prompt":"What is the total budget allocated for each program in the year 2021? with given SQL schema CREATE TABLE Programs (ProgramID int, ProgramName varchar(255), Budget decimal(10,2)); INSERT INTO Programs VALUES (1, 'Education', 50000), (2, 'Healthcare', 75000), (3, 'Environment', 60000);","completion":"SELECT ProgramName, SUM(Budget) OVER (PARTITION BY ProgramName) as TotalBudget FROM Programs WHERE YEAR(ProgramStartDate) = 2021;"}
{"prompt":"What is the total number of volunteer signups in each region in 2028, including any duplicates? with given SQL schema CREATE TABLE Volunteers (VolunteerID INT, Name TEXT, Region TEXT);CREATE TABLE VolunteerSignups (SignupID INT, VolunteerID INT, SignupDate DATE);","completion":"SELECT V.Region, COUNT(V.VolunteerID) as TotalSignups  FROM Volunteers V JOIN VolunteerSignups S ON V.VolunteerID = S.VolunteerID WHERE YEAR(SignupDate) = 2028 GROUP BY V.Region;"}
{"prompt":"What is the percentage of teachers who have completed more than 20 hours of professional development? with given SQL schema CREATE TABLE teachers (teacher_id INT, teacher_name TEXT, hours INT); INSERT INTO teachers VALUES (1, 'Jane Doe', 30); INSERT INTO teachers VALUES (2, 'John Smith', 15); INSERT INTO teachers VALUES (3, 'Mary Johnson', 40); INSERT INTO teachers VALUES (4, 'David Kim', 25);","completion":"SELECT 100.0 * AVG(CASE WHEN hours > 20 THEN 1 ELSE 0 END) as percentage FROM teachers;"}
{"prompt":"What is the minimum salary for employees who joined the company in the summer? with given SQL schema CREATE TABLE Employees (EmployeeID int, HireDate date, Salary decimal(10,2)); INSERT INTO Employees (EmployeeID, HireDate, Salary) VALUES (1, '2021-06-01', 70000.00), (2, '2021-07-15', 75000.00), (3, '2021-08-31', 65000.00);","completion":"SELECT MIN(Salary) FROM Employees WHERE MONTH(HireDate) IN (6, 7, 8);"}
{"prompt":"What is the average age of cricket players in the 'cricket_players' table? with given SQL schema CREATE TABLE cricket_players (player_id INT, name VARCHAR(50), age INT, country VARCHAR(50)); INSERT INTO cricket_players (player_id, name, age, country) VALUES (1, 'Virat Kohli', 33, 'India'); INSERT INTO cricket_players (player_id, name, age, country) VALUES (2, 'Joe Root', 31, 'England');","completion":"SELECT AVG(age) FROM cricket_players;"}
{"prompt":"Who are the top 3 goal scorers in the FIFA World Cup? with given SQL schema CREATE TABLE world_cup_goals (player_name TEXT, goals INT); INSERT INTO world_cup_goals (player_name, goals) VALUES ('Miroslav Klose', 16), ('Ronaldo', 15), ('Gerd Muller', 14);","completion":"SELECT player_name, goals FROM world_cup_goals ORDER BY goals DESC LIMIT 3;"}
{"prompt":"Who has the highest number of wins as a coach for each team in a season? with given SQL schema CREATE TABLE Coach (CoachID int, CoachName varchar(50), TeamID int); CREATE TABLE Match (MatchID int, HomeTeamID int, AwayTeamID int, HomeTeamResult varchar(5));  INSERT INTO Coach (CoachID, CoachName, TeamID) VALUES (1, 'Jose Mourinho', 1), (2, 'Pep Guardiola', 1), (3, 'Jurgen Klopp', 2), (4, 'Mauricio Pochettino', 2); INSERT INTO Match (MatchID, HomeTeamID, AwayTeamID, HomeTeamResult) VALUES (1, 1, 2, 'Win'), (2, 2, 1, 'Loss'), (3, 1, 2, 'Draw'), (4, 2, 1, 'Win'), (5, 1, 3, 'Win');","completion":"SELECT c.TeamID, c.CoachName, COUNT(CASE WHEN h.HomeTeamResult = 'Win' THEN 1 END) + COUNT(CASE WHEN a.HomeTeamResult = 'Win' THEN 1 END) AS Wins FROM Coach c LEFT JOIN Match h ON c.TeamID = h.HomeTeamID AND h.HomeTeamResult = 'Win' LEFT JOIN Match a ON c.TeamID = a.AwayTeamID AND a.HomeTeamResult = 'Win' GROUP BY c.TeamID, c.CoachName ORDER BY Wins DESC;"}
{"prompt":"What is the average donation amount for each age group? with given SQL schema CREATE TABLE DonorAges (Id INT, AgeGroup VARCHAR(20), DonationAmount DECIMAL(10, 2)); INSERT INTO DonorAges (Id, AgeGroup, DonationAmount) VALUES (1, '18-35', 100.00), (2, '36-50', 150.00), (3, '51-65', 75.00), (4, '18-35', 50.00);","completion":"SELECT AgeGroup, AVG(DonationAmount) FROM DonorAges GROUP BY AgeGroup;"}
{"prompt":"List all social good technology programs launched in the first half of the year 2022. with given SQL schema CREATE TABLE Social_Good_Tech (Month INT, Program VARCHAR(255)); INSERT INTO Social_Good_Tech (Month, Program) VALUES (1, 'EduTech'), (2, 'HealthTech'), (3, 'AgriTech'), (4, 'FinTech'), (5, 'EduTech'), (6, 'HealthTech');","completion":"SELECT DISTINCT Program FROM Social_Good_Tech WHERE Month BETWEEN 1 AND 6;"}
{"prompt":"What is the average fare collected per trip for buses in the city of Seattle? with given SQL schema CREATE TABLE buses (id INT, city VARCHAR(20)); INSERT INTO buses (id, city) VALUES (1, 'Seattle'), (2, 'New York'); CREATE TABLE fares (id INT, bus_id INT, fare DECIMAL(5,2)); INSERT INTO fares (id, bus_id, fare) VALUES (1, 1, 3.50), (2, 1, 3.75), (3, 2, 2.00);","completion":"SELECT AVG(f.fare) FROM fares f JOIN buses b ON f.bus_id = b.id WHERE b.city = 'Seattle';"}
{"prompt":"What are the top 5 most active cities in terms of user posts on the social media platform, MyTweet? with given SQL schema CREATE TABLE cities (city_id INT, city_name VARCHAR(255));CREATE TABLE user_posts (post_id INT, user_id INT, city_id INT, post_text VARCHAR(255)); INSERT INTO cities VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Chicago'), (4, 'Houston'), (5, 'Phoenix'); INSERT INTO user_posts VALUES (1, 1, 1, 'Hello from NY'), (2, 2, 2, 'LA is amazing'), (3, 3, 3, 'Chicago deep dish is the best'), (4, 4, 4, 'I love Houston'), (5, 5, 5, 'Phoenix is hot');","completion":"SELECT c.city_name, COUNT(up.city_id) as post_count FROM cities c INNER JOIN user_posts up ON c.city_id = up.city_id GROUP BY c.city_name ORDER BY post_count DESC LIMIT 5;"}
{"prompt":"Who were the top 3 content creators in terms of likes received on their posts in January 2022? with given SQL schema CREATE SCHEMA content; CREATE TABLE creators(creator_id INT, name VARCHAR(255), total_likes INT); INSERT INTO creators (creator_id, name, total_likes) VALUES (1, 'Alice', 5000); INSERT INTO creators (creator_id, name, total_likes) VALUES (2, 'Bob', 7000);","completion":"SELECT name, SUM(total_likes) AS total_likes_january FROM content.creators WHERE MONTH(created_date) = 1 GROUP BY name ORDER BY total_likes_january DESC LIMIT 3;"}
{"prompt":"What is the average financial wellbeing score in Q2 2022 for customers with a Shariah-compliant finance account? with given SQL schema CREATE TABLE shariah_compliant_customers (customer_id INT, shariah_compliant_account BOOLEAN, financial_wellbeing_score INT, wellbeing_assessment_date DATE); INSERT INTO shariah_compliant_customers (customer_id, shariah_compliant_account, financial_wellbeing_score, wellbeing_assessment_date) VALUES (1, true, 70, '2022-04-01'), (2, false, 65, '2022-04-05'), (3, true, 80, '2022-05-01'), (4, false, 60, '2022-05-10');","completion":"SELECT AVG(financial_wellbeing_score) FROM shariah_compliant_customers WHERE shariah_compliant_account = true AND wellbeing_assessment_date BETWEEN '2022-04-01' AND '2022-06-30';"}
{"prompt":"What is the maximum amount invested by a client in Shariah-compliant funds? with given SQL schema CREATE TABLE shariah_compliant_funds_investments (investment_id INT, client_id INT, amount_invested INT); INSERT INTO shariah_compliant_funds_investments (investment_id, client_id, amount_invested) VALUES (1, 1, 5000), (2, 2, 7000), (3, 3, 8000); CREATE TABLE clients (client_id INT, client_name TEXT); INSERT INTO clients (client_id, client_name) VALUES (1, 'Ahmed'), (2, 'Fatima'), (3, 'Hamza');","completion":"SELECT clients.client_name, MAX(shariah_compliant_funds_investments.amount_invested) FROM clients JOIN shariah_compliant_funds_investments ON clients.client_id = shariah_compliant_funds_investments.client_id;"}
{"prompt":"What is the total quantity of dairy products sold in each country? with given SQL schema CREATE TABLE Countries (CountryID INT, CountryName VARCHAR(50));CREATE TABLE Products (ProductID INT, ProductName VARCHAR(50), Dairy BOOLEAN, QuantitySold INT); INSERT INTO Countries VALUES (1, 'USA'), (2, 'Canada'); INSERT INTO Products VALUES (1, 'Cheese', true, 100), (2, 'Milk', true, 150), (3, 'Eggs', true, 200), (4, 'Tofu', false, 50);","completion":"SELECT c.CountryName, p.ProductName, SUM(p.QuantitySold) as TotalQuantitySold FROM Countries c JOIN Products p ON c.CountryID = 1 GROUP BY c.CountryName, p.ProductName HAVING p.Dairy = true;"}
{"prompt":"What are the total sales and quantity of goods sold by each salesperson, grouped by city? with given SQL schema CREATE TABLE salesperson (id INT, name TEXT, city TEXT); CREATE TABLE sales (id INT, salesperson_id INT, product TEXT, quantity INT, total_sales FLOAT);","completion":"SELECT s.name, s.city, SUM(s.total_sales) as total_sales, SUM(s.quantity) as total_quantity FROM sales s JOIN salesperson sp ON s.salesperson_id = sp.id GROUP BY s.city, s.name;"}
{"prompt":"Delete all records in the public_parks table where the number of visitors is less than 5000000? with given SQL schema CREATE TABLE public_parks (park_name TEXT, state TEXT, visitors INT); INSERT INTO public_parks VALUES ('Central Park', 'New York', 40000000); INSERT INTO public_parks VALUES ('Golden Gate Park', 'California', 13000000); INSERT INTO public_parks VALUES ('Lincoln Park', 'Illinois', 20000000); INSERT INTO public_parks VALUES ('Balboa Park', 'California', 12000000); INSERT INTO public_parks VALUES ('Lake Park', 'Wisconsin', 3000000);","completion":"DELETE FROM public_parks WHERE visitors < 5000000;"}
{"prompt":"What is the total number of open data initiatives in the healthcare sector? with given SQL schema CREATE TABLE open_data_initiatives (id INT, sector TEXT); INSERT INTO open_data_initiatives (id, sector) VALUES (1, 'Education'), (2, 'Healthcare'), (3, 'Healthcare'), (4, 'Education');","completion":"SELECT COUNT(*) FROM open_data_initiatives WHERE sector = 'Healthcare';"}
{"prompt":"What is the average GPA of graduate students in the Computer Science department? with given SQL schema CREATE TABLE students (id INT, department VARCHAR(255), GPA DECIMAL(3,2)); INSERT INTO students (id, department, GPA) VALUES (1, 'Computer Science', 3.8), (2, 'Computer Science', 3.6), (3, 'Mathematics', 3.9);","completion":"SELECT AVG(GPA) FROM students WHERE department = 'Computer Science';"}
{"prompt":"List the number of mental health appointments for each gender, in descending order. with given SQL schema CREATE TABLE Gender (ID INT, Gender TEXT); INSERT INTO Gender (ID, Gender) VALUES (1, 'Male'); INSERT INTO Gender (ID, Gender) VALUES (2, 'Female'); INSERT INTO Gender (ID, Gender) VALUES (3, 'Non-binary'); CREATE TABLE MentalHealthAppointment (AppointmentID INT, GenderID INT);","completion":"SELECT GenderID, COUNT(AppointmentID) as NumAppointments FROM MentalHealthAppointment GROUP BY GenderID ORDER BY NumAppointments DESC;"}
{"prompt":"What is the percentage of community health workers who speak Spanish, and how does this vary by state? with given SQL schema CREATE TABLE community_health_workers_lang (worker_id INT, state VARCHAR(2), speaks_spanish BOOLEAN); INSERT INTO community_health_workers_lang (worker_id, state, speaks_spanish) VALUES (1, 'CA', TRUE), (2, 'NY', FALSE), (3, 'TX', TRUE);","completion":"SELECT c.state, (COUNT(*) FILTER (WHERE c.speaks_spanish = TRUE)) * 100.0 \/ COUNT(*) as pct_spanish_speakers FROM community_health_workers_lang c GROUP BY c.state;"}
{"prompt":"What is the total number of community health workers in New York and California? with given SQL schema CREATE TABLE community_health_workers (id INT, name TEXT, state TEXT); INSERT INTO community_health_workers (id, name, state) VALUES (1, 'John Doe', 'California'); INSERT INTO community_health_workers (id, name, state) VALUES (2, 'Jane Smith', 'California'); INSERT INTO community_health_workers (id, name, state) VALUES (3, 'Maria Garcia', 'New York'); INSERT INTO community_health_workers (id, name, state) VALUES (4, 'David Kim', 'California');","completion":"SELECT COUNT(*) FROM community_health_workers WHERE state IN ('New York', 'California');"}
{"prompt":"What is the name and location of the top 3 most donated heritage sites? with given SQL schema CREATE TABLE HeritageSites (SiteID int, Name varchar(100), Location varchar(100), TotalDonations decimal(10,2)); INSERT INTO HeritageSites (SiteID, Name, Location, TotalDonations) VALUES (1, 'Machu Picchu', 'Peru', 500000.00), (2, 'Great Wall', 'China', 700000.00), (3, 'Petra', 'Jordan', 600000.00);","completion":"SELECT Name, Location FROM (SELECT Name, Location, ROW_NUMBER() OVER (ORDER BY TotalDonations DESC) as rn FROM HeritageSites) t WHERE rn <= 3;"}
{"prompt":"Which heritage sites have the most and least visitor reviews? with given SQL schema CREATE TABLE HeritageSites (ID INT, SiteName VARCHAR(100), Location VARCHAR(100), Category VARCHAR(50), Reviews INT); INSERT INTO HeritageSites (ID, SiteName, Location, Category, Reviews) VALUES (1, 'Machu Picchu', 'Peru', 'Archaeological', 5000); INSERT INTO HeritageSites (ID, SiteName, Location, Category, Reviews) VALUES (2, 'Angkor Wat', 'Cambodia', 'Archaeological', 7000);","completion":"SELECT SiteName, Reviews, ROW_NUMBER() OVER (ORDER BY Reviews DESC) AS Rank, COUNT(*) OVER () AS TotalSites FROM HeritageSites;"}
{"prompt":"List the unique species of marine life in the 'Marine Life Species' table. with given SQL schema CREATE TABLE marine_life_species (id INT, species_name VARCHAR(255), classification TEXT, habitat TEXT, conservation_status TEXT);","completion":"SELECT DISTINCT species_name FROM marine_life_species;"}
{"prompt":"What are the names and specializations of researchers who have published reports on cetacean species? with given SQL schema CREATE TABLE Researchers ( id INT PRIMARY KEY, name VARCHAR(255), age INT, specialization VARCHAR(255)); CREATE TABLE Reports ( id INT PRIMARY KEY, researcher_id INT, species_id INT, title VARCHAR(255)); CREATE TABLE Species ( id INT PRIMARY KEY, name VARCHAR(255), family VARCHAR(255), population INT);","completion":"SELECT Researchers.name, Researchers.specialization FROM Researchers JOIN Reports ON Researchers.id = Reports.researcher_id JOIN Species ON Reports.species_id = Species.id WHERE Species.family = 'Cetacean';"}
{"prompt":"What are the top 5 most frequently ordered dishes by customers in NY? with given SQL schema CREATE TABLE customer (customer_id INT, name VARCHAR(50), zip VARCHAR(10));CREATE TABLE orders (order_id INT, customer_id INT, dish VARCHAR(50), price DECIMAL(5,2));","completion":"SELECT o.dish, COUNT(*) as count FROM customer c JOIN orders o ON c.customer_id = o.customer_id WHERE c.zip = '10001' GROUP BY o.dish ORDER BY count DESC LIMIT 5;"}
{"prompt":"What is the average price of menu items in each category, excluding items with inventory_count = 0? with given SQL schema CREATE TABLE menu (menu_id INT, item_name VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2), inventory_count INT, last_updated TIMESTAMP);","completion":"SELECT category, AVG(price) as avg_price FROM menu WHERE inventory_count > 0 GROUP BY category;"}
{"prompt":"Calculate the average sales of each military equipment type in the Middle East. with given SQL schema CREATE TABLE EquipmentTypes (id INT, product VARCHAR(50)); CREATE TABLE EquipmentSales (id INT, equipment_type_id INT, region VARCHAR(50), year INT, sales FLOAT); INSERT INTO EquipmentTypes (id, product) VALUES (1, 'Tank'); INSERT INTO EquipmentTypes (id, product) VALUES (2, 'Fighter Jet'); INSERT INTO EquipmentSales (id, equipment_type_id, region, year, sales) VALUES (1, 1, 'Middle East', 2020, 2500000); INSERT INTO EquipmentSales (id, equipment_type_id, region, year, sales) VALUES (2, 2, 'Middle East', 2020, 6000000);","completion":"SELECT EquipmentTypes.product, AVG(EquipmentSales.sales) FROM EquipmentTypes INNER JOIN EquipmentSales ON EquipmentTypes.id = EquipmentSales.equipment_type_id WHERE EquipmentSales.region = 'Middle East' GROUP BY EquipmentTypes.product;"}
{"prompt":"Determine the average monthly data usage for customers in each region. with given SQL schema CREATE TABLE subscribers_2 (id INT, region VARCHAR(20), data_usage FLOAT); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (1, 'western', 8000); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (2, 'eastern', 10000);","completion":"SELECT region, AVG(data_usage) FROM subscribers_2 GROUP BY region;"}
{"prompt":"Show the number of rock songs released in the 1990s. with given SQL schema CREATE TABLE Songs (song_id INT, artist_id INT, title VARCHAR(100), release_year INT);","completion":"SELECT COUNT(song_id) FROM Songs WHERE release_year BETWEEN 1990 AND 1999 AND genre = 'rock';"}
{"prompt":"Identify the top 3 regions with the highest average donation per volunteer, from the 'Volunteer_Donation' table, grouped by Region. with given SQL schema CREATE TABLE Volunteer_Donation (VolunteerID INT, Region VARCHAR(50), Donation DECIMAL(10, 2));","completion":"SELECT Region, AVG(Donation) AS Average_Donation, ROW_NUMBER() OVER (ORDER BY AVG(Donation) DESC) AS Rank FROM Volunteer_Donation GROUP BY Region HAVING COUNT(*) > 5 ORDER BY Rank;"}
{"prompt":"What is the total number of marine species in the Atlantic Ocean that are affected by ocean acidification? with given SQL schema CREATE TABLE marine_species (id INT, species_name VARCHAR(255), ocean VARCHAR(255), affected_by_acidification BOOLEAN); INSERT INTO marine_species (id, species_name, ocean, affected_by_acidification) VALUES (1, 'Species 1', 'Atlantic', TRUE), (2, 'Species 2', 'Atlantic', FALSE), (3, 'Species 3', 'Pacific', TRUE), (4, 'Species 4', 'Indian', FALSE);","completion":"SELECT COUNT(*) FROM marine_species WHERE ocean = 'Atlantic' AND affected_by_acidification = TRUE;"}
{"prompt":"Which causes have received the most funding from donors aged 25-34 in the effective altruism movement? with given SQL schema CREATE TABLE donor_demographics (donor_id INT, age INT, cause VARCHAR(50), donation DECIMAL(10,2)); INSERT INTO donor_demographics (donor_id, age, cause, donation) VALUES (1, 27, 'Global Health', 2000.00), (2, 29, 'Education', 3000.00), (3, 31, 'Environment', 2500.00), (4, 26, 'Animal Welfare', 1500.00), (5, 32, 'Human Rights', 4000.00);","completion":"SELECT cause, SUM(donation) FROM donor_demographics WHERE age BETWEEN 25 AND 34 GROUP BY cause ORDER BY SUM(donation) DESC;"}
{"prompt":"Display the number of players who earned an achievement on '2022-01-01' in 'player_achievements' table with given SQL schema CREATE TABLE player_achievements (player_id INT, achievement_name VARCHAR(255), date_earned DATE);","completion":"SELECT COUNT(player_id) FROM player_achievements WHERE date_earned = '2022-01-01';"}
{"prompt":"How many players in each country are part of the \"InternationalGamers\" community? with given SQL schema CREATE TABLE Players (PlayerID INT PRIMARY KEY, Name VARCHAR(50), GamingCommunity VARCHAR(50), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Name, GamingCommunity, Country) VALUES (1, 'John Doe', 'InternationalGamers', 'USA'), (2, 'Jane Smith', 'InternationalGamers', 'Canada'), (3, 'Alice Johnson', 'InternationalGamers', 'Mexico'), (4, 'Peter Kim', 'InternationalGamers', 'South Korea');","completion":"SELECT Country, COUNT(DISTINCT PlayerID) FROM Players WHERE GamingCommunity = 'InternationalGamers' GROUP BY Country;"}
{"prompt":"Add new satellite imagery for farm_id 222 with given SQL schema CREATE TABLE satellite_imagery (id INT, farm_id INT, image_url VARCHAR(255), capture_date DATE);","completion":"INSERT INTO satellite_imagery (id, farm_id, image_url, capture_date) VALUES (7, 222, 'https:\/\/example.com\/image1.jpg', '2022-05-30');"}
{"prompt":"Insert new records into the 'livestock_health' table with values (1, 'cow', 'healthy', '2022-06-15 15:20:00') with given SQL schema CREATE TABLE livestock_health (health_id INT, animal_type VARCHAR(20), health_status VARCHAR(20), timestamp TIMESTAMP);","completion":"INSERT INTO livestock_health (health_id, animal_type, health_status, timestamp) VALUES (1, 'cow', 'healthy', '2022-06-15 15:20:00');"}
{"prompt":"What is the maximum property price in wheelchair-accessible neighborhoods in Singapore? with given SQL schema CREATE TABLE Singapore_Neighborhoods (Neighborhood_Name TEXT, Wheelchair_Accessibility BOOLEAN); INSERT INTO Singapore_Neighborhoods (Neighborhood_Name, Wheelchair_Accessibility) VALUES ('Orchard', true), ('Marina Bay', true), ('Chinatown', false), ('Little India', false), ('Bugis', true); CREATE TABLE Singapore_Properties (Neighborhood_Name TEXT, Property_Price INTEGER); INSERT INTO Singapore_Properties (Neighborhood_Name, Property_Price) VALUES ('Orchard', 2000000), ('Marina Bay', 3000000), ('Chinatown', 1500000), ('Little India', 1200000), ('Bugis', 1800000);","completion":"SELECT MAX(Singapore_Properties.Property_Price) FROM Singapore_Properties INNER JOIN Singapore_Neighborhoods ON Singapore_Properties.Neighborhood_Name = Singapore_Neighborhoods.Neighborhood_Name WHERE Singapore_Neighborhoods.Wheelchair_Accessibility = true;"}
{"prompt":"What is the average price for vegetarian menu items in 'Gourmet G'? with given SQL schema CREATE TABLE Menu (Restaurant VARCHAR(255), Item VARCHAR(255), Vegan BOOLEAN, Price DECIMAL(5,2)); INSERT INTO Menu (Restaurant, Item, Vegan, Price) VALUES ('Gourmet G', 'Steak', FALSE, 25.99), ('Gourmet G', 'Chicken Parmesan', FALSE, 21.99), ('Gourmet G', 'Vegetable Lasagna', TRUE, 18.99), ('Gourmet G', 'Portobello Burger', TRUE, 17.99);","completion":"SELECT AVG(Price) FROM Menu WHERE Restaurant = 'Gourmet G' AND Vegan = TRUE;"}
{"prompt":"What's the average age of athletes in 'athlete_details' table, grouped by their sport? with given SQL schema CREATE TABLE athlete_details (athlete_id INT, name VARCHAR(50), sport VARCHAR(20), age INT); INSERT INTO athlete_details (athlete_id, name, sport, age) VALUES (1, 'John Doe', 'Basketball', 25), (2, 'Jane Smith', 'Soccer', 30);","completion":"SELECT sport, AVG(age) FROM athlete_details GROUP BY sport;"}
{"prompt":"How many security incidents were there per month in the last year, broken down by severity level? with given SQL schema CREATE TABLE security_incidents (id INT, incident_date DATE, severity INT); INSERT INTO security_incidents (id, incident_date, severity) VALUES (1, '2021-01-01', 3), (2, '2021-02-01', 2);","completion":"SELECT DATEPART(year, incident_date) as year, DATEPART(month, incident_date) as month, severity, COUNT(*) as count FROM security_incidents WHERE incident_date >= DATEADD(year, -1, GETDATE()) GROUP BY DATEPART(year, incident_date), DATEPART(month, incident_date), severity ORDER BY year, month, severity;"}
{"prompt":"What was the total revenue for each category of accessories in the United Kingdom in Q3 2021? with given SQL schema CREATE TABLE sales (item_code VARCHAR(20), item_name VARCHAR(50), category VARCHAR(50), country VARCHAR(50), sale_date DATE, revenue DECIMAL(10,2));","completion":"SELECT category, SUM(revenue) as total_revenue FROM sales WHERE country = 'United Kingdom' AND category LIKE '%accessories%' AND sale_date BETWEEN '2021-07-01' AND '2021-09-30' GROUP BY category;"}
{"prompt":"Find the total number of policies issued by 'Department A' and 'Department B'? with given SQL schema CREATE TABLE policies (id INT, policy_number TEXT, department TEXT); INSERT INTO policies (id, policy_number, department) VALUES (1, 'P1234', 'Department A'); INSERT INTO policies (id, policy_number, department) VALUES (2, 'P5678', 'Department B'); INSERT INTO policies (id, policy_number, department) VALUES (3, 'P9012', 'Department C');","completion":"SELECT COUNT(*) FROM policies WHERE department IN ('Department A', 'Department B');"}
{"prompt":"List the top 2 countries with the highest water consumption in the current month. with given SQL schema CREATE TABLE water_consumption (country VARCHAR(255), consumption FLOAT, date DATE); INSERT INTO water_consumption (country, consumption, date) VALUES ('Brazil', 20000, '2022-05-01'); INSERT INTO water_consumption (country, consumption, date) VALUES ('Egypt', 25000, '2022-05-01');","completion":"SELECT country, consumption FROM (SELECT country, consumption, ROW_NUMBER() OVER (ORDER BY consumption DESC) as rank FROM water_consumption WHERE date >= '2022-05-01' GROUP BY country, consumption) subquery WHERE rank <= 2;"}
{"prompt":"What is the average monthly water consumption per household in Arizona for the months of June, July, and August? with given SQL schema CREATE TABLE arizona_households (id INT, water_consumption FLOAT, month VARCHAR(10)); INSERT INTO arizona_households (id, water_consumption, month) VALUES (1, 1500, 'June'), (2, 1800, 'July'), (3, 1200, 'August');","completion":"SELECT AVG(water_consumption) FROM arizona_households WHERE month IN ('June', 'July', 'August') GROUP BY month;"}
{"prompt":"What is the maximum number of AI ethics complaints received by organizations in South Asia, and which organization received it? with given SQL schema CREATE TABLE south_asia_ethics_complaints (organization VARCHAR(255), region VARCHAR(255), year INT, num_complaints INT); INSERT INTO south_asia_ethics_complaints (organization, region, year, num_complaints) VALUES ('Organization A', 'India', 2018, 50), ('Organization B', 'Pakistan', 2019, 60), ('Organization C', 'Bangladesh', 2020, 70);","completion":"SELECT MAX(num_complaints) as max_complaints, organization FROM south_asia_ethics_complaints WHERE region = 'South Asia' GROUP BY organization HAVING max_complaints = (SELECT MAX(num_complaints) FROM south_asia_ethics_complaints WHERE region = 'South Asia');"}
{"prompt":"What is the average age of male and female farmers in the 'rural_development' schema? with given SQL schema CREATE TABLE farmers(id INT, name VARCHAR(50), age INT, gender VARCHAR(50)); INSERT INTO farmers VALUES (1, 'John Doe', 45, 'Male'); INSERT INTO farmers VALUES (2, 'Jane Smith', 35, 'Female');","completion":"SELECT gender, AVG(age) as avg_age FROM farmers GROUP BY gender;"}
{"prompt":"Who are the top 5 countries with the highest economic diversification index for agricultural projects? with given SQL schema CREATE TABLE Projects (id INT, project_id INT, project_type VARCHAR(20), economic_diversification_index DECIMAL(5,2), country VARCHAR(20)); INSERT INTO Projects (id, project_id, project_type, economic_diversification_index, country) VALUES (1, 3001, 'Agricultural', 78.90, 'Mexico'), (2, 3002, 'Infrastructure', 67.56, 'Colombia'), (3, 3003, 'Agricultural', 85.21, 'Peru'), (4, 3004, 'Agricultural', 92.34, 'Ecuador'), (5, 3005, 'Agricultural', 65.89, 'Bolivia');","completion":"SELECT country, economic_diversification_index FROM Projects WHERE project_type = 'Agricultural' ORDER BY economic_diversification_index DESC LIMIT 5;"}
{"prompt":"Determine the number of animals in the animal_population table, partitioned by animal_species and ordered by the animal count in descending order. with given SQL schema CREATE TABLE animal_population (id INT, animal_species VARCHAR(255), animal_age VARCHAR(255)); INSERT INTO animal_population (id, animal_species, animal_age) VALUES (1, 'Giraffe', 'Juvenile'), (2, 'Panda', 'Adult'), (3, 'Panda', 'Adult'), (4, 'Lion', 'Cub'), (5, 'Lion', 'Cub'), (6, 'Zebra', 'Juvenile');","completion":"SELECT animal_species, COUNT(*) AS animal_count, RANK() OVER (ORDER BY COUNT(*) DESC) AS rank FROM animal_population GROUP BY animal_species;"}
{"prompt":"What is the average water temperature for the Shrimp farm for the last 30 days? with given SQL schema CREATE TABLE FarmTemperature (farm_id INT, date DATE, temperature DECIMAL(5,2)); INSERT INTO FarmTemperature (farm_id, date, temperature) VALUES (3, '2022-03-01', 24.8), (3, '2022-03-02', 24.9);","completion":"SELECT AVG(temperature) avg_temp FROM FarmTemperature WHERE farm_id = 3 AND date >= (SELECT DATEADD(day, -30, GETDATE()));"}
{"prompt":"What is the minimum biomass of fish in each species in the fish_stock table? with given SQL schema CREATE TABLE fish_stock (species VARCHAR(50), biomass INT); INSERT INTO fish_stock (species, biomass) VALUES ('Tilapia', 500), ('Tilapia', 700), ('Salmon', 800);","completion":"SELECT species, MIN(biomass) FROM fish_stock GROUP BY species;"}
{"prompt":"What is the maximum labor cost per square foot for construction projects in Florida over $6,000,000? with given SQL schema CREATE TABLE Labor_Cost_Per_Square_Foot (id INT, project_name TEXT, state TEXT, budget INT, labor_cost_per_square_foot FLOAT); INSERT INTO Labor_Cost_Per_Square_Foot (id, project_name, state, budget, labor_cost_per_square_foot) VALUES (1, 'Mega Mall', 'Florida', 7000000, 65.0), (2, 'Apartment Complex', 'Florida', 5500000, 50.0);","completion":"SELECT MAX(labor_cost_per_square_foot) FROM Labor_Cost_Per_Square_Foot WHERE state = 'Florida' AND budget > 6000000;"}
{"prompt":"How many cases were opened in 2020? with given SQL schema CREATE TABLE CaseDates (CaseID INT, OpenDate DATE); INSERT INTO CaseDates (CaseID, OpenDate) VALUES (1, '2020-01-01'), (2, '2019-12-31'), (3, '2020-03-15');","completion":"SELECT COUNT(*) FROM CaseDates WHERE YEAR(OpenDate) = 2020;"}
{"prompt":"Which suppliers have provided raw materials for the production of chemicals with high environmental impact? with given SQL schema CREATE TABLE suppliers (id INT, name TEXT); INSERT INTO suppliers (id, name) VALUES (1, 'Supplier1'), (2, 'Supplier2'), (3, 'Supplier3'); CREATE TABLE chemicals (id INT, name TEXT, environmental_impact INT); INSERT INTO chemicals (id, name, environmental_impact) VALUES (1, 'ChemA', 10), (2, 'ChemB', 20), (3, 'ChemC', 15); CREATE TABLE raw_materials (chemical_id INT, supplier_id INT); INSERT INTO raw_materials (chemical_id, supplier_id) VALUES (1, 1), (1, 2), (2, 3), (3, 1);","completion":"SELECT s.name FROM suppliers s INNER JOIN raw_materials rm ON s.id = rm.supplier_id INNER JOIN chemicals c ON rm.chemical_id = c.id WHERE c.environmental_impact > 10;"}
{"prompt":"What is the total funding allocated for climate adaptation in 'Europe'? with given SQL schema CREATE TABLE climate_funding (id INT, allocation FLOAT, initiative_type TEXT, region_id INT); CREATE TABLE regions (id INT, region TEXT); INSERT INTO climate_funding (id, allocation, initiative_type, region_id) VALUES (1, 500000.00, 'Mitigation', 1), (2, 750000.00, 'Adaptation', 2), (3, 300000.00, 'Communication', 1); INSERT INTO regions (id, region) VALUES (1, 'Americas'), (2, 'Europe'), (3, 'Asia');","completion":"SELECT SUM(allocation) FROM climate_funding INNER JOIN regions ON climate_funding.region_id = regions.id WHERE regions.region = 'Europe' AND climate_funding.initiative_type = 'Adaptation';"}
{"prompt":"What are the top 3 countries with the highest R&D expenditures in 2020? with given SQL schema CREATE TABLE rd_expenditures (country VARCHAR(50), year INT, amount FLOAT); INSERT INTO rd_expenditures (country, year, amount) VALUES ('USA', 2020, 70000000), ('China', 2020, 40000000), ('Germany', 2020, 30000000);","completion":"SELECT country, SUM(amount) as total_expenditure FROM rd_expenditures WHERE year = 2020 GROUP BY country ORDER BY total_expenditure DESC LIMIT 3;"}
{"prompt":"What is the most common type of cancer in Australia? with given SQL schema CREATE TABLE cancer_data (id INT, country VARCHAR(20), type VARCHAR(20), cases INT); INSERT INTO cancer_data (id, country, type, cases) VALUES (1, 'Australia', 'Breast', 15000), (2, 'Australia', 'Lung', 12000), (3, 'Australia', 'Colon', 10000);","completion":"SELECT type, cases FROM cancer_data WHERE country = 'Australia' ORDER BY cases DESC LIMIT 1;"}
{"prompt":"Count the number of startups founded by underrepresented minorities in the healthcare industry with given SQL schema CREATE TABLE company (id INT, name TEXT, industry TEXT, founding_year INT, founder_gender TEXT, founder_race TEXT); INSERT INTO company (id, name, industry, founding_year, founder_gender, founder_race) VALUES (1, 'Diverse Health', 'Healthcare', 2015, 'Female', 'African American'); INSERT INTO company (id, name, industry, founding_year, founder_gender, founder_race) VALUES (2, 'Careforce', 'Healthcare', 2020, 'Male', 'Latino');","completion":"SELECT COUNT(*) FROM company WHERE industry = 'Healthcare' AND (founder_gender = 'Female' AND founder_race = 'African American') OR (founder_gender = 'Male' AND founder_race = 'Latino')"}
{"prompt":"What is the total production of 'wheat' and 'rice' by small farmers in 'Asia'? with given SQL schema CREATE TABLE farmers (id INT, name TEXT, country TEXT); INSERT INTO farmers (id, name, country) VALUES (1, 'John', 'India'), (2, 'Jane', 'China'), (3, 'Alice', 'Japan'); CREATE TABLE crops (id INT, farmer_id INT, name TEXT, yield INT); INSERT INTO crops (id, farmer_id, name, yield) VALUES (1, 1, 'wheat', 500), (2, 1, 'rice', 800), (3, 2, 'wheat', 700), (4, 2, 'rice', 900), (5, 3, 'wheat', 600), (6, 3, 'rice', 1000);","completion":"SELECT SUM(yield) FROM crops JOIN farmers ON crops.farmer_id = farmers.id WHERE farmers.country = 'Asia' AND crops.name IN ('wheat', 'rice');"}
{"prompt":"What marine species have been observed in both the Arctic and Southern Oceans? with given SQL schema CREATE TABLE oceans (ocean_id INT, name VARCHAR(50)); CREATE TABLE species (species_id INT, name VARCHAR(50), ocean_id INT); INSERT INTO oceans VALUES (1, 'Arctic'), (2, 'Antarctic (Southern)'), (3, 'Indian'); INSERT INTO species VALUES (1, 'Polar Bear', 1), (2, 'Penguin', 2), (3, 'Seal', 2), (4, 'Clownfish', 3), (5, 'Shark', 1), (6, 'Dolphin', 2), (7, 'Turtle', 3), (8, 'Squid', 2), (9, 'Polar Bear', 2);","completion":"SELECT s.name FROM species s WHERE s.ocean_id IN (1, 2) GROUP BY s.name HAVING COUNT(DISTINCT s.ocean_id) = 2;"}
{"prompt":"Find the minimum transaction amount for 'ETH'. with given SQL schema CREATE TABLE digital_assets (asset_id varchar(10), asset_name varchar(10)); INSERT INTO digital_assets (asset_id, asset_name) VALUES ('ETH', 'Ethereum'), ('BTC', 'Bitcoin'); CREATE TABLE transactions (transaction_id serial, asset_id varchar(10), transaction_amount numeric); INSERT INTO transactions (asset_id, transaction_amount) VALUES ('ETH', 120), ('ETH', 230), ('BTC', 500), ('ETH', 100);","completion":"SELECT MIN(transaction_amount) FROM transactions WHERE asset_id = 'ETH';"}
{"prompt":"What is the average carbon sequestration per hectare for each region? with given SQL schema CREATE TABLE carbon_sequestration(region VARCHAR(255), sequestration FLOAT, area INT); INSERT INTO carbon_sequestration(region, sequestration, area) VALUES ('North', 5.6, 1000), ('South', 4.8, 1500), ('East', 6.2, 1200), ('West', 5.1, 1800);","completion":"SELECT region, AVG(sequestration) FROM carbon_sequestration;"}
{"prompt":"List all ingredients used in products from a specific brand. with given SQL schema CREATE TABLE ingredients (product_id INT, brand_id INT, ingredient VARCHAR(50)); INSERT INTO ingredients (product_id, brand_id, ingredient) VALUES (1, 1, 'Water'), (1, 1, 'Glycerin'), (2, 2, 'Aqua'), (2, 2, 'Parabens'), (3, 3, 'Shea Butter'), (3, 3, 'Essential Oils'), (4, 4, 'Petroleum'), (4, 4, 'Mineral Oil'), (5, 5, 'Jojoba Oil'), (5, 5, 'Vitamin E'); CREATE TABLE brands (brand_id INT, brand_name VARCHAR(50)); INSERT INTO brands (brand_id, brand_name) VALUES (1, 'Lush'), (2, 'The Body Shop'), (3, 'Est\u00e9e Lauder'), (4, 'Urban Decay'), (5, 'Maybelline');","completion":"SELECT ingredient FROM ingredients INNER JOIN brands ON ingredients.brand_id = brands.brand_id WHERE brand_name = 'Lush';"}
{"prompt":"Delete all skincare products with 'Sensitive' in their name with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(255), category VARCHAR(255), price DECIMAL(10,2)); INSERT INTO products (product_id, product_name, category, price) VALUES (1, 'Sensitive Skin Cleanser', 'Skincare', 17.99), (2, 'Gentle Makeup Remover', 'Skincare', 12.99), (3, 'Nourishing Sensitive Face Cream', 'Skincare', 22.99);","completion":"DELETE FROM products WHERE category = 'Skincare' AND product_name LIKE '%Sensitive%';"}
{"prompt":"How many new cosmetic products were launched by each brand in the last 12 months, ordered by the number of new products in descending order? with given SQL schema CREATE TABLE products (product_id INT, brand_id INT, launch_date DATE); INSERT INTO products (product_id, brand_id, launch_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2021-06-15'), (3, 2, '2022-03-01'), (4, 2, '2021-12-31'), (5, 3, '2021-09-01'); CREATE TABLE brands (brand_id INT, name VARCHAR(255)); INSERT INTO brands (brand_id, name) VALUES (1, 'BrandA'), (2, 'BrandB'), (3, 'BrandC');","completion":"SELECT brands.name, COUNT(*) as num_new_products FROM products JOIN brands ON products.brand_id = brands.brand_id WHERE products.launch_date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY brands.name ORDER BY num_new_products DESC;"}
{"prompt":"What was the average response time for fire incidents in January 2022? with given SQL schema CREATE TABLE fire_incidents (id INT, incident_date DATE, response_time INT); INSERT INTO fire_incidents (id, incident_date, response_time) VALUES (1, '2022-01-01', 34), (2, '2022-01-02', 28), (3, '2022-01-03', 45);","completion":"SELECT AVG(response_time) FROM fire_incidents WHERE incident_date BETWEEN '2022-01-01' AND '2022-01-31';"}
{"prompt":"What is the average attendance at events organized by cultural institutions in France? with given SQL schema CREATE TABLE cultural_events (id INT, name VARCHAR(255), date DATE, country VARCHAR(255), attendance INT); INSERT INTO cultural_events (id, name, date, country, attendance) VALUES (1, 'Art Exhibition', '2020-02-01', 'France', 1500), (2, 'Theatre Performance', '2020-03-15', 'France', 800);","completion":"SELECT AVG(attendance) FROM cultural_events WHERE country = 'France';"}
{"prompt":"Provide the number of threat intelligence reports generated per month for the past year, for the Asia-Pacific region. with given SQL schema CREATE TABLE threat_intelligence (report_id INT, report_date DATE, region TEXT); INSERT INTO threat_intelligence (report_id, report_date, region) VALUES (1, '2022-01-15', 'Asia-Pacific'), (2, '2022-03-10', 'Asia-Pacific'), (3, '2021-12-25', 'Asia-Pacific');","completion":"SELECT DATE_FORMAT(report_date, '%Y-%m') as month, COUNT(*) as reports FROM threat_intelligence WHERE region = 'Asia-Pacific' AND report_date >= '2021-01-01' GROUP BY month;"}
{"prompt":"What is the average transaction amount in EUR by city for the month of May 2022? with given SQL schema CREATE TABLE customers (customer_id INT, customer_city VARCHAR(30)); CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_amount DECIMAL(10,2), transaction_date DATE, transaction_currency VARCHAR(3));","completion":"SELECT customer_city, AVG(transaction_amount) as average_transaction_amount FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id WHERE transaction_date BETWEEN '2022-05-01' AND '2022-05-31' AND transaction_currency = 'EUR' GROUP BY customer_city;"}
{"prompt":"What is the total transaction value for each month of the year 2021? with given SQL schema CREATE TABLE transactions (transaction_id INT, transaction_date DATE, transaction_category VARCHAR(255), transaction_value DECIMAL(10,2)); INSERT INTO transactions (transaction_id, transaction_date, transaction_category, transaction_value) VALUES (1, '2021-01-02', 'Food', 50.00), (2, '2021-01-05', 'Electronics', 300.00), (3, '2021-02-10', 'Clothing', 150.00);","completion":"SELECT YEAR(transaction_date) as year, MONTH(transaction_date) as month, SUM(transaction_value) as total_value FROM transactions WHERE transaction_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY year, month;"}
{"prompt":"List the total number of workers in each department across all manufacturing plants with given SQL schema CREATE TABLE departments (department_id INT, department_name VARCHAR(255), plant_id INT); INSERT INTO departments (department_id, department_name, plant_id) VALUES (1, 'Production', 1), (2, 'Quality Control', 1), (3, 'Engineering', 1), (4, 'Administration', 1), (1, 'Production', 2), (2, 'Quality Control', 2), (3, 'Engineering', 2), (4, 'Administration', 2); CREATE TABLE workers (worker_id INT, worker_name VARCHAR(255), department_id INT); INSERT INTO workers (worker_id, worker_name, department_id) VALUES (1, 'John Smith', 1), (2, 'Jane Doe', 1), (3, 'Bob Johnson', 2), (4, 'Alice Williams', 2), (5, 'Charlie Brown', 3), (6, 'Sally Green', 4);","completion":"SELECT d.department_name, COUNT(w.worker_id) as worker_count FROM departments d JOIN workers w ON d.department_id = w.department_id GROUP BY d.department_name;"}
{"prompt":"What is the average salary of 'engineer' workers in each factory? with given SQL schema CREATE TABLE factories (factory_id INT, factory_name VARCHAR(20)); INSERT INTO factories VALUES (1, 'Factory X'), (2, 'Factory Y'), (3, 'Factory Z'); CREATE TABLE roles (role_id INT, role_name VARCHAR(20)); INSERT INTO roles VALUES (1, 'engineer'), (2, 'manager'), (3, 'assistant'); CREATE TABLE workers (worker_id INT, factory_id INT, role_id INT, salary DECIMAL(5,2)); INSERT INTO workers VALUES (1, 1, 1, 50000.00), (2, 1, 2, 70000.00), (3, 2, 1, 55000.00), (4, 2, 3, 40000.00), (5, 3, 1, 60000.00);","completion":"SELECT f.factory_name, AVG(salary) FROM workers w INNER JOIN factories f ON w.factory_id = f.factory_id INNER JOIN roles r ON w.role_id = r.role_id WHERE r.role_name = 'engineer' GROUP BY f.factory_name;"}
{"prompt":"How many healthcare workers are there in the \"rural_healthcenters\" table? with given SQL schema CREATE TABLE rural_healthcenters (id INT, name TEXT, location TEXT, position TEXT); INSERT INTO rural_healthcenters (id, name, location, position) VALUES (1, 'Healthcenter A', 'Rural Area 1', 'Doctor'), (2, 'Healthcenter B', 'Rural Area 2', 'Nurse'), (3, 'Healthcenter C', 'Rural Area 3', 'Admin');","completion":"SELECT COUNT(*) FROM rural_healthcenters;"}
{"prompt":"What is the total number of medical facilities in rural Vietnam? with given SQL schema CREATE TABLE medical_facilities (id INT, name TEXT, location TEXT); INSERT INTO medical_facilities (id, name, location) VALUES (1, 'Facility A', 'Rural');","completion":"SELECT COUNT(*) FROM medical_facilities WHERE location = 'Rural';"}
{"prompt":"Calculate the number of donations to human rights organizations in the USA. with given SQL schema CREATE TABLE organization (org_id INT PRIMARY KEY, name VARCHAR(255), industry VARCHAR(255), country VARCHAR(255)); INSERT INTO organization (org_id, name, industry, country) VALUES (5, 'Human Rights USA', 'Nonprofit', 'USA');","completion":"SELECT COUNT(*) FROM (SELECT donation.donation_id FROM donation JOIN organization ON donation.org_id = organization.org_id WHERE organization.country = 'USA' AND organization.industry = 'Nonprofit' AND organization.name = 'Human Rights USA') AS donation_subquery;"}
{"prompt":"What is the average annual budget for military technology in Europe, and how has it changed over the past 5 years? with given SQL schema CREATE TABLE military_budget (id INT, year INT, country TEXT, budget FLOAT); INSERT INTO military_budget (id, year, country, budget) VALUES (1, 2018, 'France', 50000000), (2, 2018, 'Germany', 60000000), (3, 2018, 'UK', 70000000), (4, 2019, 'France', 55000000), (5, 2019, 'Germany', 65000000), (6, 2019, 'UK', 75000000), (7, 2020, 'France', 60000000), (8, 2020, 'Germany', 70000000), (9, 2020, 'UK', 80000000);","completion":"SELECT AVG(budget) as avg_annual_budget, year FROM military_budget WHERE country IN ('France', 'Germany', 'UK') GROUP BY year;"}
{"prompt":"What is the number of intelligence personnel with experience greater than 5 years in the 'Intelligence_Personnel' table? with given SQL schema CREATE TABLE Intelligence_Personnel (id INT, name VARCHAR(50), role VARCHAR(50), age INT, experience INT); INSERT INTO Intelligence_Personnel (id, name, role, age, experience) VALUES (1, 'Charlie Brown', 'Analyst', 30, 5); INSERT INTO Intelligence_Personnel (id, name, role, age, experience) VALUES (2, 'Diana Ross', 'Agent', 35, 10);","completion":"SELECT COUNT(*) FROM Intelligence_Personnel WHERE experience > 5;"}
{"prompt":"What is the total number of volunteers and donors who are not from the United States or Canada? with given SQL schema CREATE TABLE Volunteers (id INT, name TEXT, country TEXT); INSERT INTO Volunteers (id, name, country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'); CREATE TABLE Donors (id INT, name TEXT, country TEXT); INSERT INTO Donors (id, name, country) VALUES (1, 'Alice Johnson', 'USA'), (2, 'Bob Brown', 'Canada'); CREATE TABLE VolunteersAndDonors (id INT, name TEXT, country TEXT); INSERT INTO VolunteersAndDonors (id, name, country) SELECT * FROM Volunteers UNION ALL SELECT * FROM Donors;","completion":"SELECT COUNT(*) FROM VolunteersAndDonors WHERE country NOT IN ('USA', 'Canada');"}
{"prompt":"List all employees who have not completed any training programs, along with their department and position. with given SQL schema CREATE TABLE Employees (EmployeeID int, FirstName varchar(50), LastName varchar(50), Department varchar(50), Position varchar(50)); CREATE TABLE TrainingPrograms (TrainingID int, EmployeeID int, ProgramName varchar(50)); CREATE TABLE EmployeeTrainings (TrainingID int, EmployeeID int, CompletionDate date);","completion":"SELECT e.EmployeeID, e.FirstName, e.LastName, e.Department, e.Position FROM Employees e LEFT JOIN TrainingPrograms tp ON e.EmployeeID = tp.EmployeeID LEFT JOIN EmployeeTrainings et ON tp.TrainingID = et.TrainingID AND e.EmployeeID = et.EmployeeID WHERE et.CompletionDate IS NULL;"}
{"prompt":"Insert a new record into the 'energy_storage' table for a flow battery with 5 MWh capacity, located in 'Quebec' with given SQL schema CREATE TABLE energy_storage (id INT PRIMARY KEY, technology VARCHAR(255), capacity FLOAT, location VARCHAR(255));","completion":"INSERT INTO energy_storage (technology, capacity, location) VALUES ('flow', 5, 'Quebec');"}
{"prompt":"Calculate the total production from wells in the North Sea with given SQL schema CREATE TABLE wells (id INT, well_name VARCHAR(100), location VARCHAR(50), status VARCHAR(20), production FLOAT); INSERT INTO wells VALUES (1, 'Well A', 'North Sea', 'Producing', 1000.5); INSERT INTO wells VALUES (2, 'Well B', 'Gulf of Mexico', 'Abandoned', 1200.3); INSERT INTO wells VALUES (3, 'Well C', 'Gulf of Mexico', 'Producing', 1500.2); INSERT INTO wells VALUES (4, 'Well D', 'North Sea', 'Producing', 2000.7); INSERT INTO wells VALUES (5, 'Well E', 'North Sea', 'Idle', 0);","completion":"SELECT SUM(production) FROM wells WHERE location = 'North Sea';"}
{"prompt":"How many offshore wells were drilled in the Gulf of Mexico in each year since 2016? with given SQL schema CREATE TABLE OffshoreWells (WellName TEXT, DrillDate DATE, Location TEXT); INSERT INTO OffshoreWells (WellName, DrillDate, Location) VALUES ('Well1', '2016-05-01', 'Gulf of Mexico'), ('Well2', '2017-07-15', 'Gulf of Mexico'), ('Well3', '2018-03-28', 'Gulf of Mexico');","completion":"SELECT COUNT(*) AS WellCount, EXTRACT(YEAR FROM DrillDate) AS Year  FROM OffshoreWells WHERE Location = 'Gulf of Mexico' GROUP BY Year;"}
{"prompt":"Which football teams have the highest number of wins in the 2021-2022 season? with given SQL schema CREATE TABLE football_teams (team_id INT, team_name VARCHAR(50), wins INT); INSERT INTO football_teams (team_id, team_name, wins) VALUES (1, 'Barcelona', 25), (2, 'Real Madrid', 27), (3, 'Manchester United', 22);","completion":"SELECT team_name, wins FROM football_teams ORDER BY wins DESC LIMIT 2;"}
{"prompt":"Delete records in the supplier_ethics table where the country is 'Bangladesh' and certification is not 'Fair Trade' with given SQL schema CREATE TABLE supplier_ethics (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), certification VARCHAR(255)); INSERT INTO supplier_ethics (id, name, country, certification) VALUES (1, 'Supplier A', 'Bangladesh', 'Fair Trade'), (2, 'Supplier B', 'Bangladesh', 'SA8000'), (3, 'Supplier C', 'India', 'Fair Trade');","completion":"DELETE FROM supplier_ethics WHERE country = 'Bangladesh' AND certification != 'Fair Trade';"}
{"prompt":"Delete posts older than 30 days with given SQL schema CREATE TABLE posts (id INT PRIMARY KEY, user_id INT, title TEXT, created_at DATETIME, FOREIGN KEY (user_id) REFERENCES users(id));","completion":"DELETE FROM posts WHERE created_at < NOW() - INTERVAL 30 DAY;"}
{"prompt":"List all programs and their total budget with given SQL schema CREATE TABLE programs (id INT, name VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO programs (id, name, budget) VALUES (1, 'Education', 50000.00); INSERT INTO programs (id, name, budget) VALUES (2, 'Healthcare', 75000.00);","completion":"SELECT name, SUM(budget) as total_budget FROM programs GROUP BY name;"}
{"prompt":"What is the average price of free-range eggs per store? with given SQL schema CREATE TABLE Stores (store_id INT, store_name VARCHAR(255)); CREATE TABLE Products (product_id INT, product_name VARCHAR(255), is_free_range BOOLEAN, price INT); CREATE TABLE Inventory (store_id INT, product_id INT, quantity INT);","completion":"SELECT s.store_name, AVG(p.price) as avg_price FROM Inventory i JOIN Stores s ON i.store_id = s.store_id JOIN Products p ON i.product_id = p.product_id WHERE p.is_free_range = TRUE AND p.product_category = 'egg' GROUP BY s.store_name;"}
{"prompt":"What is the average delivery time for shipments to the Southeast region, grouped by shipment type? with given SQL schema CREATE SCHEMA IF NOT EXISTS logistics;CREATE TABLE IF NOT EXISTS shipments (shipment_id INT,region VARCHAR(20),shipment_type VARCHAR(20),delivery_time INT);INSERT INTO shipments (shipment_id, region, shipment_type, delivery_time) VALUES (1, 'Southeast', 'domestic', 3), (2, 'Northeast', 'international', 7), (3, 'Southeast', 'domestic', 2);","completion":"SELECT shipment_type, AVG(delivery_time) FROM logistics.shipments WHERE region = 'Southeast' GROUP BY shipment_type;"}
{"prompt":"What is the total quantity of items shipped per warehouse to each country? with given SQL schema CREATE TABLE Shipments (id INT, WarehouseId INT, Product VARCHAR(50), Quantity INT, Destination VARCHAR(50), ShippedDate DATE); INSERT INTO Shipments (id, WarehouseId, Product, Quantity, Destination, ShippedDate) VALUES (1, 1, 'Laptop', 50, 'Toronto, Canada', '2022-01-01'); INSERT INTO Shipments (id, WarehouseId, Product, Quantity, Destination, ShippedDate) VALUES (2, 1, 'Monitor', 75, 'Sydney, Australia', '2022-01-05'); INSERT INTO Shipments (id, WarehouseId, Product, Quantity, Destination, ShippedDate) VALUES (3, 2, 'Keyboard', 100, 'Berlin, Germany', '2022-01-07');","completion":"SELECT WarehouseId, Destination, SUM(Quantity) AS TotalQuantity FROM Shipments GROUP BY WarehouseId, Destination;"}
{"prompt":"What is the total amount of budget allocated for each sector by the state government for the year 2021? with given SQL schema CREATE TABLE sector (id INT, name VARCHAR); INSERT INTO sector (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Transport'), (4, 'Housing'); CREATE TABLE budget (id INT, sector_id INT, amount INT, year INT); INSERT INTO budget (id, sector_id, amount, year) VALUES (1, 1, 5000000, 2021), (2, 2, 7000000, 2021), (3, 3, 9000000, 2021), (4, 4, 6000000, 2021);","completion":"SELECT sector_id, SUM(amount) as total_budget FROM budget WHERE year = 2021 GROUP BY sector_id;"}
{"prompt":"Create a view for health equity metrics with given SQL schema CREATE TABLE health_equity (id INT PRIMARY KEY, state VARCHAR(2), year INT, disparity_rate FLOAT);","completion":"CREATE OR REPLACE VIEW health_equity_view AS SELECT * FROM health_equity;"}
{"prompt":"List the number of virtual tours in India and Argentina. with given SQL schema CREATE TABLE virtual_tours (tour_id INT, location VARCHAR(255), type VARCHAR(255)); INSERT INTO virtual_tours (tour_id, location, type) VALUES (1, 'India Virtual Tour', 'virtual'), (2, 'Argentina Virtual Tour', 'virtual');","completion":"SELECT COUNT(*) FROM virtual_tours WHERE location IN ('India', 'Argentina');"}
{"prompt":"What is the total number of sustainable tour packages sold by each vendor, including virtual packages? with given SQL schema CREATE TABLE Vendors (VendorID INT, VendorName VARCHAR(50)); INSERT INTO Vendors (VendorID, VendorName) VALUES (1, 'GreenVacations'), (2, 'EcoTours'), (3, 'SustainableJourneys'); CREATE TABLE Packages (PackageID INT, VendorID INT, PackageType VARCHAR(20), Sales INT); INSERT INTO Packages (PackageID, VendorID, PackageType, Sales) VALUES (1, 1, 'Sustainable', 500), (2, 1, 'Virtual', 300), (3, 2, 'Sustainable', 700), (4, 2, 'Virtual', 600), (5, 3, 'Sustainable', 800), (6, 3, 'Virtual', 400), (7, 1, 'Sustainable', 400), (8, 2, 'Sustainable', 600), (9, 3, 'Sustainable', 700), (10, 1, 'Virtual', 500), (11, 2, 'Virtual', 700), (12, 3, 'Virtual', 600);","completion":"SELECT V.VendorName, SUM(P.Sales) as TotalSales FROM Vendors V INNER JOIN Packages P ON V.VendorID = P.VendorID GROUP BY V.VendorName;"}
{"prompt":"Maximum number of visitors for Impressionist exhibitions in London? with given SQL schema CREATE TABLE Exhibitions (id INT, exhibition_name VARCHAR(50), location VARCHAR(30), visitors INT, art_period VARCHAR(20), start_date DATE); INSERT INTO Exhibitions (id, exhibition_name, location, visitors, art_period, start_date) VALUES (1, 'Exhibition1', 'London', 800, 'Impressionist', '2018-01-01');","completion":"SELECT MAX(visitors) FROM Exhibitions WHERE art_period = 'Impressionist' AND location = 'London';"}
{"prompt":"Insert new records into the 'officers' table with officer_id 4, 5, first_name 'James', 'Karen', last_name 'Davis' with given SQL schema CREATE TABLE officers (officer_id INT, first_name VARCHAR(20), last_name VARCHAR(20));","completion":"INSERT INTO officers (officer_id, first_name, last_name) VALUES (4, 'James', 'Davis'), (5, 'Karen', 'Davis');"}
{"prompt":"Identify the number of whale sightings in the Arctic Ocean by year. with given SQL schema CREATE TABLE WhaleSightings (id INT, year INT, location VARCHAR(255)); INSERT INTO WhaleSightings (id, year, location) VALUES (1, 2020, 'Arctic Ocean'); INSERT INTO WhaleSightings (id, year, location) VALUES (2, 2019, 'Arctic Ocean');","completion":"SELECT year, COUNT(*) FROM WhaleSightings WHERE location = 'Arctic Ocean' GROUP BY year;"}
{"prompt":"What is the total quantity of a specific dish sold on a given date? with given SQL schema CREATE TABLE dishes (id INT, name TEXT, type TEXT, price DECIMAL, inventory INT); INSERT INTO dishes (id, name, type, price, inventory) VALUES (1, 'Pizza Margherita', 'Veg', 7.50, 50), (2, 'Chicken Alfredo', 'Non-Veg', 12.00, 30), (3, 'Veggie Delight Sandwich', 'Veg', 6.50, 75); CREATE TABLE sales (id INT, dish_id INT, quantity INT, date DATE); INSERT INTO sales (id, dish_id, quantity, date) VALUES (1, 2, 3, '2022-01-01'), (2, 1, 2, '2022-01-02'), (3, 3, 1, '2022-01-03');","completion":"SELECT SUM(quantity) as total_quantity_sold FROM sales WHERE dish_id = 1 AND date = '2022-01-02';"}
{"prompt":"What is the total quantity of ingredients sourced from local farmers? with given SQL schema CREATE TABLE suppliers (supplier_id INT, supplier_name VARCHAR(50), location VARCHAR(50)); INSERT INTO suppliers VALUES (1, 'Green Acres', 'Local'), (2, 'Sunrise Farms', 'Out of State'), (3, 'Farm Fresh', 'Local'); CREATE TABLE inventory (ingredient_id INT, ingredient_name VARCHAR(50), supplier_id INT, quantity INT); INSERT INTO inventory VALUES (1, 'Tomatoes', 1, 100), (2, 'Chicken', 2, 50), (3, 'Lettuce', 3, 80);","completion":"SELECT SUM(inventory.quantity) FROM inventory INNER JOIN suppliers ON inventory.supplier_id = suppliers.supplier_id WHERE suppliers.location = 'Local';"}
{"prompt":"What is the minimum production rate of zinc mines in India? with given SQL schema CREATE TABLE zinc_mines (id INT, name TEXT, location TEXT, production_rate INT); INSERT INTO zinc_mines (id, name, location, production_rate) VALUES (1, 'Rampura Agucha', 'India', 5000), (2, 'Zawar', 'India', 4000);","completion":"SELECT MIN(production_rate) FROM zinc_mines WHERE location = 'India';"}
{"prompt":"What is the maximum data usage for prepaid mobile customers in the Midwest region in the past month? with given SQL schema CREATE TABLE usage(customer_id INT, data_usage INT, usage_date DATE); CREATE TABLE customers(id INT, type VARCHAR(10), region VARCHAR(10));","completion":"SELECT MAX(usage.data_usage) FROM usage JOIN customers ON usage.customer_id = customers.id WHERE customers.type = 'prepaid' AND customers.region = 'Midwest' AND usage.usage_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"Which mobile subscribers have not made a call in the last 60 days? with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, last_call_date DATETIME); INSERT INTO mobile_subscribers (subscriber_id, last_call_date) VALUES (1, '2022-01-15'), (2, '2022-02-03'), (3, NULL), (4, '2022-01-20'), (5, '2022-03-05');","completion":"SELECT subscriber_id FROM mobile_subscribers WHERE last_call_date IS NULL OR last_call_date < DATE_SUB(CURDATE(), INTERVAL 60 DAY);"}
{"prompt":"What is the total revenue for each concert by city, ordered by total revenue? with given SQL schema CREATE TABLE Concerts (ConcertID INT, Artist VARCHAR(50), City VARCHAR(50), Revenue DECIMAL(10,2)); INSERT INTO Concerts (ConcertID, Artist, City, Revenue) VALUES (1, 'Taylor Swift', 'Los Angeles', 500000.00), (2, 'BTS', 'New York', 750000.00), (3, 'Adele', 'London', 600000.00);","completion":"SELECT City, SUM(Revenue) as TotalRevenue FROM Concerts GROUP BY City ORDER BY TotalRevenue DESC;"}
{"prompt":"Create a table for storing volunteer information and insert a record for a volunteer. with given SQL schema CREATE TABLE volunteers (id INT, name VARCHAR(255), hours DECIMAL(10, 2));","completion":"INSERT INTO volunteers (id, name, hours) VALUES (1, 'Sarah Jones', 50.50);"}
{"prompt":"How many unique donors have contributed to Canadian non-profit organizations since January 1, 2020? with given SQL schema CREATE TABLE donors_canada (id INT, donor_name TEXT, country TEXT, donation_amount DECIMAL, donation_date DATE); INSERT INTO donors_canada (id, donor_name, country, donation_amount, donation_date) VALUES (1, 'Alexander Smith', 'Canada', 100.00, '2020-08-03'); INSERT INTO donors_canada (id, donor_name, country, donation_amount, donation_date) VALUES (2, 'Sophia Johnson', 'Canada', 75.00, '2020-11-12');","completion":"SELECT COUNT(DISTINCT donor_name) FROM donors_canada WHERE country = 'Canada' AND donation_date >= '2020-01-01';"}
{"prompt":"Which countries have the highest ocean acidification levels in the Southern Ocean? with given SQL schema CREATE TABLE southern_ocean (id INT, name VARCHAR(100), region VARCHAR(50)); CREATE TABLE country_acidification (id INT, country VARCHAR(100), acidification_level FLOAT, ocean_id INT); INSERT INTO southern_ocean (id, name, region) VALUES (1, 'Southern Ocean', 'Southern'); INSERT INTO country_acidification (id, country, acidification_level, ocean_id) VALUES (1, 'Argentina', 9.8, 1), (2, 'Chile', 9.6, 1);","completion":"SELECT country, acidification_level FROM country_acidification ca INNER JOIN southern_ocean s ON ca.ocean_id = s.id ORDER BY acidification_level DESC;"}
{"prompt":"List the top 3 recipient countries with the highest total donation amounts in the past year? with given SQL schema CREATE TABLE Donations (DonationID INT, DonationDate DATE, RecipientCountry VARCHAR(50), DonationAmount NUMERIC(15,2));","completion":"SELECT RecipientCountry, SUM(DonationAmount) as TotalDonations FROM Donations WHERE DonationDate >= DATEADD(year, -1, CURRENT_TIMESTAMP) GROUP BY RecipientCountry ORDER BY TotalDonations DESC LIMIT 3;"}
{"prompt":"Display the top 10 players with the highest total playtime in 'player_stats' table with given SQL schema CREATE TABLE player_stats (player_id INT, player_name VARCHAR(255), game_name VARCHAR(255), total_playtime INT);","completion":"SELECT player_name, SUM(total_playtime) AS total_playtime FROM player_stats GROUP BY player_name ORDER BY total_playtime DESC LIMIT 10;"}
{"prompt":"What are the budget allocations for the top 2 most expensive public facilities in the state of California? with given SQL schema CREATE TABLE public_facilities (name TEXT, state TEXT, budget_allocation INT); INSERT INTO public_facilities (name, state, budget_allocation) VALUES ('Facility A', 'California', 600000), ('Facility B', 'California', 550000), ('Facility C', 'California', 500000);","completion":"SELECT name, budget_allocation FROM public_facilities WHERE state = 'California' ORDER BY budget_allocation DESC LIMIT 2;"}
{"prompt":"What is the total number of public hospitals in cities with a population greater than 1 million? with given SQL schema CREATE TABLE City (id INT, name VARCHAR(50), population INT, num_hospitals INT); INSERT INTO City (id, name, population, num_hospitals) VALUES (1, 'Mumbai', 20411274, 50); INSERT INTO City (id, name, population, num_hospitals) VALUES (2, 'S\u00e3o Paulo', 21846507, 75); INSERT INTO City (id, name, population, num_hospitals) VALUES (3, 'Seoul', 9733509, 35);","completion":"SELECT name, SUM(num_hospitals) as 'Total Public Hospitals' FROM City WHERE population > 1000000 GROUP BY name;"}
{"prompt":"Get the number of carbon offset programs implemented by year with given SQL schema CREATE TABLE carbon_offset_programs (program_id INT, program_name VARCHAR(255), start_year INT, end_year INT);","completion":"SELECT start_year, COUNT(*) as num_programs FROM carbon_offset_programs GROUP BY start_year ORDER BY start_year;"}
{"prompt":"Calculate the revenue for each restaurant, considering only transactions that occurred after a specific date (e.g., '2022-01-01'). with given SQL schema CREATE TABLE Restaurants (id INT, name VARCHAR(255), city VARCHAR(255), revenue FLOAT); CREATE TABLE Transactions (id INT, rest_id INT, date DATE, amount FLOAT);","completion":"SELECT R.name, SUM(T.amount) as revenue FROM Restaurants R JOIN Transactions T ON R.id = T.rest_id WHERE T.date > '2022-01-01' GROUP BY R.name;"}
{"prompt":"What is the daily revenue trend for all restaurants? with given SQL schema CREATE TABLE daily_revenue (date DATE, restaurant_id INT, revenue FLOAT); INSERT INTO daily_revenue VALUES ('2021-01-01', 1, 500), ('2021-01-02', 1, 700), ('2021-01-03', 1, 600), ('2021-01-01', 2, 800), ('2021-01-02', 2, 900), ('2021-01-03', 2, 700);","completion":"SELECT date, restaurant_id, revenue FROM daily_revenue;"}
{"prompt":"What is the total revenue generated by organic menu items in Seattle? with given SQL schema CREATE TABLE MenuItems (menu_item_id INT, menu_item VARCHAR(50), price INT, cost INT, location VARCHAR(50), organic BOOLEAN); INSERT INTO MenuItems (menu_item_id, menu_item, price, cost, location, organic) VALUES (1, 'Grilled Chicken Salad', 12, 4, 'Seattle', TRUE), (2, 'Cheeseburger', 8, 3, 'Seattle', FALSE), (3, 'Veggie Burger', 9, 3, 'Seattle', TRUE);","completion":"SELECT SUM(price - cost) AS total_revenue FROM MenuItems WHERE location = 'Seattle' AND organic = TRUE;"}
{"prompt":"Which menu items are served at all locations? with given SQL schema CREATE TABLE menu_items(menu_item VARCHAR(255), location VARCHAR(255)); INSERT INTO menu_items(menu_item, location) VALUES ('Burger', 'Location1'), ('Pizza', 'Location2'), ('Pasta', 'Location1'), ('Salad', 'Location2'), ('Burger', 'Location3'), ('Pizza', 'Location3');","completion":"SELECT menu_item FROM menu_items GROUP BY menu_item HAVING COUNT(DISTINCT location) = (SELECT COUNT(DISTINCT location) FROM menu_items);"}
{"prompt":"What is the total number of security incidents that occurred in the last month and were resolved within 24 hours? with given SQL schema create table incidents (id int, date date, resolved date, sector varchar(255)); insert into incidents values (1, '2022-01-01', '2022-01-02', 'retail'); insert into incidents values (2, '2022-01-05', '2022-01-06', 'retail'); insert into incidents values (3, '2022-01-10', null, 'financial services'); insert into incidents values (4, '2022-02-01', '2022-02-02', 'financial services'); insert into incidents values (5, '2022-07-01', '2022-07-02', 'healthcare');","completion":"SELECT COUNT(*) FROM incidents WHERE DATEDIFF(resolved, date) <= 1 AND date >= '2022-01-01' AND date < '2022-02-01';"}
{"prompt":"Which cybersecurity policies were added or updated in the last month and apply to cloud infrastructure in the financial sector? with given SQL schema CREATE TABLE Policies (policy_id INT, policy_name VARCHAR(50), policy_date DATE, policy_category VARCHAR(50), policy_applies_to VARCHAR(50), policy_target_sector VARCHAR(50));","completion":"SELECT policy_id, policy_name FROM Policies WHERE policy_category = 'cloud infrastructure' AND policy_target_sector = 'financial' AND (policy_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE OR (policy_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND EXISTS (SELECT * FROM Policies AS updated_policies WHERE updated_policies.policy_id = Policies.policy_id AND updated_policies.policy_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE)));"}
{"prompt":"Find the maximum number of electric vehicles sold in a single month with given SQL schema CREATE TABLE Sales (SaleID INT, Month INT, Year INT, Electric BOOLEAN); INSERT INTO Sales (SaleID, Month, Year, Electric) VALUES (1, 1, 2020, true), (2, 1, 2020, false), (3, 2, 2020, true), (4, 2, 2020, true), (5, 3, 2020, false), (6, 3, 2020, false);","completion":"SELECT MAX(COUNT(*)) as MaxSales FROM Sales WHERE Electric = true GROUP BY Month, Year;"}
{"prompt":"How many autonomous cars were sold in 2020 and 2021 in the autonomous_vehicles table? with given SQL schema CREATE TABLE autonomous_vehicles (year INT, model VARCHAR(20), sales INT); INSERT INTO autonomous_vehicles (year, model, sales) VALUES (2020, 'Model A', 1000), (2021, 'Model A', 1200), (2020, 'Model B', 800), (2021, 'Model B', 1100);","completion":"SELECT SUM(sales) FROM autonomous_vehicles WHERE year IN (2020, 2021) AND model IN ('Model A', 'Model B');"}
{"prompt":"What is the average safety rating achieved by electric vehicles at the Detroit Auto Show? with given SQL schema CREATE TABLE ElectricVehicleSafety (VehicleID INT, SafetyRating INT, Make TEXT, Model TEXT, ShowName TEXT);","completion":"SELECT AVG(SafetyRating) FROM ElectricVehicleSafety WHERE Make LIKE '%electric%' AND ShowName = 'Detroit Auto Show';"}
{"prompt":"Calculate the total downtime (in hours) for 'VesselR' during its maintenance periods in Q2 of 2020. with given SQL schema CREATE TABLE Vessels (vessel_name VARCHAR(255)); INSERT INTO Vessels (vessel_name) VALUES ('VesselR'), ('VesselS'); CREATE TABLE Maintenance (vessel_name VARCHAR(255), maintenance_start_date DATE, maintenance_end_date DATE); INSERT INTO Maintenance (vessel_name, maintenance_start_date, maintenance_end_date) VALUES ('VesselR', '2020-04-10', '2020-04-12'), ('VesselR', '2020-06-25', '2020-06-28'), ('VesselS', '2020-08-01', '2020-08-03');","completion":"SELECT SUM(DATEDIFF(hour, maintenance_start_date, maintenance_end_date)) FROM Maintenance WHERE vessel_name = 'VesselR' AND maintenance_start_date BETWEEN '2020-04-01' AND '2020-06-30';"}
{"prompt":"Count the number of vessels that have loaded cargo. with given SQL schema CREATE TABLE VesselCargo (VesselID INT, CargoID INT); INSERT INTO VesselCargo (VesselID, CargoID) VALUES (1, 1), (2, 2), (3, 3), (4, NULL), (5, 5);","completion":"SELECT COUNT(DISTINCT VesselID) FROM VesselCargo WHERE CargoID IS NOT NULL;"}
{"prompt":"Calculate the average usage_amount for the residential category in the water_usage table with given SQL schema CREATE TABLE water_usage ( date DATE, usage_category VARCHAR(20), region VARCHAR(20), usage_amount INT ); INSERT INTO water_usage (date, usage_category, region, usage_amount) VALUES ( '2022-07-01', 'Residential', 'Northeast', 15000), ('2022-07-02', 'Industrial', 'Midwest', 200000), ('2022-07-03', 'Agricultural', 'West', 800000);","completion":"SELECT AVG(usage_amount) FROM water_usage WHERE usage_category = 'Residential';"}
{"prompt":"List all the water conservation initiatives in each country in 2020. with given SQL schema CREATE TABLE water_conservation (initiative_name VARCHAR(50), country VARCHAR(30), year INT, initiative_type VARCHAR(30));","completion":"SELECT country, initiative_name FROM water_conservation WHERE year=2020 GROUP BY country;"}
{"prompt":"What was the change in water consumption between 2020 and 2021 for each city? with given SQL schema CREATE TABLE city_water_usage (city VARCHAR(50), year INT, consumption INT); INSERT INTO city_water_usage (city, year, consumption) VALUES ('CityA', 2019, 1200), ('CityA', 2020, 1500), ('CityA', 2021, 1700), ('CityB', 2019, 1000), ('CityB', 2020, 1100), ('CityB', 2021, 1300);","completion":"SELECT a.city, (a.consumption - b.consumption) AS consumption_change FROM city_water_usage a INNER JOIN city_water_usage b ON a.city = b.city AND a.year = 2021 AND b.year = 2020;"}
{"prompt":"Find the intersection of AI safety and algorithmic fairness datasets? with given SQL schema CREATE TABLE AI_Safety (dataset_name TEXT, purpose TEXT); CREATE TABLE Algorithmic_Fairness (dataset_name TEXT, metric TEXT);","completion":"SELECT AI_Safety.dataset_name FROM AI_Safety INNER JOIN Algorithmic_Fairness ON AI_Safety.dataset_name = Algorithmic_Fairness.dataset_name;"}
{"prompt":"How many economic diversification efforts were successful in South Africa between 2015 and 2021? with given SQL schema CREATE TABLE economic_diversification_efforts (id INT, country VARCHAR(20), success BOOLEAN, start_year INT, end_year INT); INSERT INTO economic_diversification_efforts (id, country, success, start_year, end_year) VALUES (1, 'South Africa', true, 2015, 2021), (2, 'South Africa', false, 2014, 2016);","completion":"SELECT COUNT(*) FROM economic_diversification_efforts WHERE country = 'South Africa' AND start_year >= 2015 AND end_year <= 2021 AND success = true;"}
{"prompt":"How many rural infrastructure projects in the 'rural_development' schema have a type that starts with the letter 'E'? with given SQL schema CREATE SCHEMA IF NOT EXISTS rural_development;CREATE TABLE IF NOT EXISTS rural_development.infrastructure_projects (type VARCHAR(255), id INT);INSERT INTO rural_development.infrastructure_projects (type, id) VALUES ('road_construction', 1), ('electricity_distribution', 2), ('railway_construction', 3), ('housing_development', 4);","completion":"SELECT COUNT(*) FROM rural_development.infrastructure_projects WHERE type LIKE 'E%';"}
{"prompt":"How many women-led farming initiatives were successful in the past year in the Asia-Pacific region, grouped by country? with given SQL schema CREATE TABLE farming_projects (id INT, leader_gender TEXT, project_status TEXT, country TEXT); INSERT INTO farming_projects (id, leader_gender, project_status, country) VALUES (1, 'female', 'successful', 'Nepal'), (2, 'male', 'unsuccessful', 'India'), (3, 'female', 'successful', 'Indonesia');","completion":"SELECT country, COUNT(*) FROM farming_projects WHERE leader_gender = 'female' AND project_status = 'successful' AND country IN ('Asia', 'Pacific') GROUP BY country;"}
{"prompt":"Remove all movies with a production budget greater than 300000000 with given SQL schema CREATE TABLE movies (id INT, title TEXT, production_budget INT);","completion":"DELETE FROM movies WHERE production_budget > 300000000;"}
{"prompt":"What was the minimum price per gram of the Gelato strain in Nevada in 2022? with given SQL schema CREATE TABLE inventory (id INT, state VARCHAR(50), year INT, strain VARCHAR(50), price FLOAT, grams INT); INSERT INTO inventory (id, state, year, strain, price, grams) VALUES (1, 'Nevada', 2022, 'Gelato', 12.0, 10), (2, 'Nevada', 2022, 'Gelato', 10.0, 15), (3, 'Nevada', 2023, 'Gelato', 14.0, 12);","completion":"SELECT MIN(price\/grams) FROM inventory WHERE state = 'Nevada' AND year = 2022 AND strain = 'Gelato';"}
{"prompt":"Display the total billing information for each attorney with given SQL schema CREATE TABLE billing_information (bill_id INT PRIMARY KEY, attorney_id INT, amount DECIMAL(10,2), bill_date DATE);","completion":"SELECT attorney_id, SUM(amount) FROM billing_information GROUP BY attorney_id;"}
{"prompt":"How many cases were opened in 'july' 2019 and closed in 'october' 2019? with given SQL schema CREATE TABLE cases (case_id INT, case_open_date DATE, case_close_date DATE);","completion":"SELECT COUNT(*) FROM cases WHERE case_open_date BETWEEN '2019-07-01' AND '2019-07-31' AND case_close_date BETWEEN '2019-10-01' AND '2019-10-31';"}
{"prompt":"Identify attorneys who have never handled cases in the 'West' region but have in the 'North' or 'South'. with given SQL schema CREATE TABLE attorney_regions(attorney_id INT, region VARCHAR(20)); INSERT INTO attorney_regions(attorney_id, region) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West'), (5, 'West'), (6, 'North'); CREATE TABLE handled_cases(attorney_id INT, case_id INT); INSERT INTO handled_cases(attorney_id, case_id) VALUES (1, 101), (2, 102), (3, 103), (4, 104), (5, 105), (6, 106), (1, 107), (1, 108);","completion":"SELECT h.attorney_id FROM attorney_regions h LEFT JOIN handled_cases i ON h.attorney_id = i.attorney_id WHERE h.region IN ('North', 'South') AND h.region != 'West' AND i.attorney_id IS NOT NULL AND h.attorney_id NOT IN (SELECT attorney_id FROM attorney_regions WHERE region = 'West');"}
{"prompt":"What is the maximum production capacity of the chemical manufacturing plants located in Canada? with given SQL schema CREATE TABLE chemical_plants (id INT, plant_name VARCHAR(100), country VARCHAR(50), production_capacity INT); INSERT INTO chemical_plants (id, plant_name, country, production_capacity) VALUES (1, 'Canada Plant 1', 'Canada', 5000), (2, 'Canada Plant 2', 'Canada', 7000);","completion":"SELECT MAX(production_capacity) FROM chemical_plants WHERE country = 'Canada';"}
{"prompt":"What is the total number of electric vehicle charging stations installed in each state of the United States in 2022? with given SQL schema CREATE TABLE charging_stations_us (id INT, location VARCHAR(50), state VARCHAR(50), year INT, size INT); INSERT INTO charging_stations_us (id, location, state, year, size) VALUES (1, 'Los Angeles', 'California', 2022, 500); INSERT INTO charging_stations_us (id, location, state, year, size) VALUES (2, 'New York', 'New York', 2022, 600); INSERT INTO charging_stations_us (id, location, state, year, size) VALUES (3, 'Chicago', 'Illinois', 2022, 700); INSERT INTO charging_stations_us (id, location, state, year, size) VALUES (4, 'Houston', 'Texas', 2022, 400);","completion":"SELECT state, COUNT(size) FROM charging_stations_us WHERE year = 2022 GROUP BY state;"}
{"prompt":"What is the average R&D expenditure for drugs that were approved in the US market? with given SQL schema CREATE TABLE r_and_d_expenditures (drug_name TEXT, expenditures INTEGER); INSERT INTO r_and_d_expenditures (drug_name, expenditures) VALUES ('DrugA', 5000000); INSERT INTO r_and_d_expenditures (drug_name, expenditures) VALUES ('DrugC', 6000000); INSERT INTO r_and_d_expenditures (drug_name, expenditures) VALUES ('DrugD', 4000000); CREATE TABLE drug_approval (drug_name TEXT, market TEXT, approval_date DATE); INSERT INTO drug_approval (drug_name, market, approval_date) VALUES ('DrugA', 'US', '2016-01-01'); INSERT INTO drug_approval (drug_name, market, approval_date) VALUES ('DrugC', 'US', '2017-04-20');","completion":"SELECT AVG(expenditures) FROM r_and_d_expenditures JOIN drug_approval ON r_and_d_expenditures.drug_name = drug_approval.drug_name WHERE drug_approval.market = 'US';"}
{"prompt":"What is the total number of disability accommodations requested and approved by department? with given SQL schema CREATE TABLE Accommodation_Data (Request_ID INT, Request_Date DATE, Accommodation_Type VARCHAR(50), Request_Status VARCHAR(10), Department VARCHAR(50));","completion":"SELECT Department, COUNT(*) as Total_Requests FROM Accommodation_Data WHERE Request_Status = 'Approved' GROUP BY Department;"}
{"prompt":"Delete wildlife habitat data for Australia before 2015 with given SQL schema CREATE TABLE wildlife_habitat (country_code CHAR(3), year INT, habitat_area INT); INSERT INTO wildlife_habitat (country_code, year, habitat_area) VALUES ('AUS', 2015, 120000), ('AUS', 2010, 110000), ('NZL', 2015, 90000);","completion":"DELETE FROM wildlife_habitat WHERE country_code = 'AUS' AND year < 2015;"}
{"prompt":"What is the total volume of timber harvested in tropical rainforests for the year 2020? with given SQL schema CREATE TABLE rainforests (id INT, name VARCHAR(255), country VARCHAR(255), volume DECIMAL(10,2)); INSERT INTO rainforests (id, name, country, volume) VALUES (1, 'Amazon Rainforest', 'Brazil', 50.50), (2, 'Congo Rainforest', 'Congo', 35.25), (3, 'Southeast Asian Rainforest', 'Indonesia', 42.10);","completion":"SELECT SUM(volume) FROM rainforests WHERE country IN ('Brazil', 'Congo', 'Indonesia') AND YEAR(harvest_date) = 2020 AND type = 'tropical';"}
{"prompt":"Show veteran employment statistics for each state in the 'veteran_employment' table with given SQL schema CREATE TABLE veteran_employment (employee_id INT, state VARCHAR(2), job_title VARCHAR(50), employment_date DATE);","completion":"SELECT state, COUNT(*) as veteran_employees FROM veteran_employment WHERE state IN ('CA', 'NY', 'TX', 'FL', 'PA') GROUP BY state;"}
{"prompt":"What is the total cargo handling time for all ports? with given SQL schema CREATE TABLE ports (port_id INT, cargo_handling_time INT); INSERT INTO ports (port_id, cargo_handling_time) VALUES (1, 500), (2, 700), (3, 300);","completion":"SELECT SUM(cargo_handling_time) FROM ports;"}
{"prompt":"Which vessels have not had their annual inspections in the last 3 years? with given SQL schema CREATE TABLE Vessels (ID INT, Name TEXT, LastInspection DATE); INSERT INTO Vessels (ID, Name, LastInspection) VALUES (1, 'Vessel 1', '2020-01-01'), (2, 'Vessel 2', '2018-01-01');","completion":"SELECT Name FROM Vessels WHERE DATEDIFF(year, LastInspection, GETDATE()) >= 3;"}
{"prompt":"List all suppliers from the Asia-Pacific region who have supplied materials to ManufacturerC with given SQL schema CREATE TABLE Suppliers (supplier_id INT, supplier_name VARCHAR(50), region VARCHAR(50)); INSERT INTO Suppliers (supplier_id, supplier_name, region) VALUES (1, 'Supplier1', 'Asia-Pacific'), (2, 'Supplier2', 'Europe'); CREATE TABLE Supplies (supplier_id INT, manufacturer_id INT, material VARCHAR(50), quantity INT); INSERT INTO Supplies (supplier_id, manufacturer_id, material, quantity) VALUES (1, 3, 'Material1', 50), (2, 3, 'Material2', 75); CREATE TABLE Manufacturers (manufacturer_id INT, manufacturer_name VARCHAR(50), region VARCHAR(50)); INSERT INTO Manufacturers (manufacturer_id, manufacturer_name, region) VALUES (3, 'ManufacturerC', 'North America');","completion":"SELECT s.supplier_name FROM Suppliers s INNER JOIN Supplies sp ON s.supplier_id = sp.supplier_id INNER JOIN Manufacturers m ON sp.manufacturer_id = m.manufacturer_id WHERE m.region = 'North America' AND m.manufacturer_name = 'ManufacturerC' AND s.region = 'Asia-Pacific';"}
{"prompt":"Find the number of healthcare providers in each type of facility in the rural healthcare system. with given SQL schema CREATE TABLE Providers (ID INT, Name TEXT, Type TEXT, FacilityType TEXT); INSERT INTO Providers VALUES (1, 'Dr. Smith', 'Doctor', 'Hospital'); INSERT INTO Providers VALUES (2, 'Jane Doe, RN', 'Nurse', 'Clinic'); INSERT INTO Providers VALUES (3, 'Mobile Medical Unit', 'Clinic', 'Mobile');","completion":"SELECT FacilityType, COUNT(*) AS Total FROM Providers GROUP BY FacilityType;"}
{"prompt":"Show companies with below average ESG scores in the education sector. with given SQL schema INSERT INTO companies (id, name, country, sector, ESG_score) VALUES (4, 'EdCo', 'US', 'Education', 70.0), (5, 'LearnCo', 'UK', 'Education', 80.0);","completion":"SELECT * FROM companies WHERE sector = 'Education' AND ESG_score < (SELECT AVG(ESG_score) FROM companies WHERE sector = 'Education');"}
{"prompt":"Determine the number of unique donors who made donations in the last month from the 'donations' table. with given SQL schema CREATE TABLE donations (id INT, donor_name VARCHAR(50), donation_date DATE, amount DECIMAL(10,2));","completion":"SELECT COUNT(DISTINCT donor_name) FROM donations WHERE donation_date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"How many volunteers joined after participating in a community outreach event in '2020'? with given SQL schema CREATE TABLE volunteer_events (id INT, event_name TEXT, year INT, num_volunteers INT); INSERT INTO volunteer_events (id, event_name, year, num_volunteers) VALUES (1, 'Youth Mentoring Program', 2020, 120), (2, 'Feeding the Homeless', 2020, 180), (3, 'Climate Action Rally', 2020, 90);","completion":"SELECT SUM(num_volunteers) FROM volunteer_events WHERE year = 2020 AND event_name IN (SELECT event_name FROM volunteer_events WHERE year = 2020 AND num_volunteers > 0);"}
{"prompt":"What was the budget for the Marketing department in each quarter of 2019? with given SQL schema CREATE TABLE Department_Budget (id INT, department VARCHAR(50), category VARCHAR(50), amount FLOAT, budget_date DATE); INSERT INTO Department_Budget (id, department, category, amount, budget_date) VALUES (1, 'Marketing', 'Advertising', 20000, '2019-01-01'); INSERT INTO Department_Budget (id, department, category, amount, budget_date) VALUES (2, 'Marketing', 'Promotions', 15000, '2019-02-01');","completion":"SELECT department, QUARTER(budget_date) as quarter, SUM(amount) as total_budget FROM Department_Budget WHERE YEAR(budget_date) = 2019 AND department = 'Marketing' GROUP BY department, quarter;"}
{"prompt":"What is the maximum mental health score of students in 'Fall 2021'? with given SQL schema CREATE TABLE student_mental_health (student_id INT, mental_health_score INT, date DATE); INSERT INTO student_mental_health (student_id, mental_health_score, date) VALUES (1, 80, '2021-09-01'), (2, 85, '2021-09-01'), (3, 70, '2021-09-02');","completion":"SELECT MAX(mental_health_score) FROM student_mental_health WHERE date = '2021-09-01';"}
{"prompt":"Create a view to display all employees' ages and ethnicities with given SQL schema CREATE TABLE EmployeeDemographics (EmployeeID INT PRIMARY KEY, Age INT, Gender VARCHAR(10), Ethnicity VARCHAR(20));","completion":"CREATE VIEW EmployeeAgesEthnicities AS SELECT Age, Ethnicity FROM EmployeeDemographics;"}
{"prompt":"What is the average salary of employees who identify as Latinx in the Engineering department? with given SQL schema CREATE TABLE Employees (EmployeeID int, Name varchar(50), Gender varchar(10), Department varchar(50), Salary decimal(10,2), Ethnicity varchar(50)); INSERT INTO Employees (EmployeeID, Name, Gender, Department, Salary, Ethnicity) VALUES (1, 'Juan Garcia', 'Male', 'Engineering', 85000.00, 'Latinx'); INSERT INTO Employees (EmployeeID, Name, Gender, Department, Salary, Ethnicity) VALUES (2, 'Maria Rodriguez', 'Female', 'Engineering', 90000.00, 'Latinx');","completion":"SELECT AVG(Salary) FROM Employees WHERE Department = 'Engineering' AND Ethnicity = 'Latinx';"}
{"prompt":"List all the hockey players and their respective positions. with given SQL schema CREATE TABLE players (id INT, name VARCHAR(50), position VARCHAR(20), sport VARCHAR(20)); INSERT INTO players (id, name, position, sport) VALUES (1, 'Sidney Crosby', 'Center', 'Hockey'); INSERT INTO players (id, name, position, sport) VALUES (2, 'Alex Ovechkin', 'Left Wing', 'Hockey');","completion":"SELECT name, position FROM players WHERE sport = 'Hockey';"}
{"prompt":"List the top 5 players with the highest points per game, including their team name and average points per game. with given SQL schema CREATE TABLE players (id INT, name TEXT, team TEXT, points_per_game DECIMAL(5,2)); INSERT INTO players (id, name, team, points_per_game) VALUES (1, 'John Doe', 'Team A', 15.6), (2, 'Jane Smith', 'Team B', 18.2), (3, 'Maria Garcia', 'Team A', 20.1), (4, 'James Johnson', 'Team C', 14.5), (5, 'Emily Davis', 'Team B', 16.8);","completion":"SELECT p.name, p.team, AVG(p.points_per_game) as avg_points_per_game FROM players p GROUP BY p.name, p.team ORDER BY avg_points_per_game DESC LIMIT 5;"}
{"prompt":"Which team has the highest number of wins in the 'basketball_games' table? with given SQL schema CREATE TABLE basketball_teams (team_id INT, name VARCHAR(50)); CREATE TABLE basketball_games (game_id INT, home_team INT, away_team INT, home_team_score INT, away_team_score INT); INSERT INTO basketball_teams (team_id, name) VALUES (1, 'Boston Celtics'), (2, 'Los Angeles Lakers'), (3, 'Chicago Bulls'); INSERT INTO basketball_games (game_id, home_team, away_team, home_team_score, away_team_score) VALUES (1, 1, 2, 85, 80), (2, 2, 3, 95, 90), (3, 3, 1, 75, 85);","completion":"SELECT name AS team, MAX(home_team_wins + away_team_wins) AS highest_wins FROM (SELECT name, CASE WHEN home_team = team_id AND home_team_score > away_team_score THEN 1 ELSE 0 END + CASE WHEN away_team = team_id AND away_team_score > home_team_score THEN 1 ELSE 0 END AS home_team_wins, CASE WHEN home_team = team_id AND home_team_score < away_team_score THEN 1 ELSE 0 END + CASE WHEN away_team = team_id AND away_team_score < home_team_score THEN 1 ELSE 0 END AS away_team_wins FROM basketball_teams JOIN basketball_games ON basketball_teams.team_id = basketball_games.home_team OR basketball_teams.team_id = basketball_games.away_team) AS subquery GROUP BY name;"}
{"prompt":"How many volunteers with 'Medical' skills were assigned before a volunteer with 'Engineering' skills? with given SQL schema CREATE TABLE volunteers_ext (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), skill VARCHAR(50), assignment_date DATE, end_date DATE); INSERT INTO volunteers_ext (id, name, age, gender, skill, assignment_date, end_date) VALUES (1, 'David', 25, 'Male', 'Medical', '2022-06-01', '2022-09-30'), (2, 'Emma', 30, 'Female', 'Engineering', '2022-07-15', '2023-06-30');","completion":"SELECT COUNT(*) FROM (SELECT skill, assignment_date, LAG(skill) OVER (ORDER BY assignment_date) AS prev_skill FROM volunteers_ext WHERE skill = 'Medical') t WHERE prev_skill = 'Engineering';"}
{"prompt":"Which communities in Africa have received the most humanitarian aid, and what is the total amount of aid received? with given SQL schema CREATE TABLE communities (id INT, name TEXT, country TEXT); INSERT INTO communities (id, name, country) VALUES (1, 'Community A', 'Kenya'), (2, 'Community B', 'Somalia'), (3, 'Community C', 'South Africa'); CREATE TABLE aid (id INT, community INT, amount FLOAT); INSERT INTO aid (id, community, amount) VALUES (1, 1, 500), (2, 2, 750), (3, 1, 250);","completion":"SELECT c.name, SUM(a.amount) as total_aid FROM communities c JOIN aid a ON c.id = a.community WHERE c.country = 'Africa' GROUP BY c.name ORDER BY total_aid DESC LIMIT 1;"}
{"prompt":"What is the total fare collected for each train line? with given SQL schema CREATE TABLE train_lines (line_id INT, line_name TEXT); CREATE TABLE fares (fare_id INT, line_id INT, fare DECIMAL); INSERT INTO train_lines VALUES (1, 'Line 1'), (2, 'Line 2'), (3, 'Line 3'); INSERT INTO fares VALUES (1, 1, 3.50), (2, 1, 3.50), (3, 2, 4.25), (4, 3, 5.00), (5, 3, 5.00);","completion":"SELECT train_lines.line_name, SUM(fares.fare) AS total_fare FROM train_lines INNER JOIN fares ON train_lines.line_id = fares.line_id GROUP BY train_lines.line_id;"}
{"prompt":"What was the total fare collected on the 'Green Line' on March 15th, 2021? with given SQL schema CREATE SCHEMA trans schemas.trans; CREATE TABLE green_line (route_id INT, fare FLOAT, date DATE); INSERT INTO green_line (route_id, fare, date) VALUES (101, 2.50, '2021-03-15'), (101, 2.50, '2021-03-15'), (101, 2.50, '2021-03-15'), (101, 2.50, '2021-03-15');","completion":"SELECT SUM(fare) FROM green_line WHERE route_id = 101 AND date = '2021-03-15';"}
{"prompt":"Which station on the 'Red' line has the lowest fare collection? with given SQL schema CREATE TABLE routes (line VARCHAR(10), station VARCHAR(20)); INSERT INTO routes (line, station) VALUES ('Red', 'Station X'), ('Red', 'Station Y'), ('Red', 'Station Z'); CREATE TABLE fares (station VARCHAR(20), revenue DECIMAL(10, 2)); INSERT INTO fares (station, revenue) VALUES ('Station X', 3000), ('Station X', 3500), ('Station Y', 2000), ('Station Z', 1500), ('Station Z', 1800);","completion":"SELECT station, MIN(revenue) FROM fares WHERE station IN (SELECT station FROM routes WHERE line = 'Red') GROUP BY station;"}
{"prompt":"Delete the product with the highest price in the 'Sustainable' category. with given SQL schema CREATE TABLE products (product_id INT, name TEXT, category TEXT, price FLOAT); INSERT INTO products (product_id, name, category, price) VALUES (1, 'Dress', 'Fair Trade', 80.0); INSERT INTO products (product_id, name, category, price) VALUES (2, 'Shirt', 'Fair Trade', 60.0);","completion":"DELETE FROM products WHERE price = (SELECT MAX(price) FROM products WHERE category = 'Sustainable');"}
{"prompt":"Show the percentage of sustainable material used by each brand as compared to the total quantity of sustainable material used by all brands. with given SQL schema CREATE TABLE Total_Sustainable_Material(Total_Quantity INT); INSERT INTO Total_Sustainable_Material(Total_Quantity) VALUES (2200);","completion":"SELECT Brand_Name, (SUM(Quantity) * 100.0 \/ (SELECT Total_Quantity FROM Total_Sustainable_Material)) as Percentage FROM Brands GROUP BY Brand_Name;"}
{"prompt":"What is the total CO2 emission from transportation for each country in the ethical fashion supply chain? with given SQL schema CREATE TABLE transportation (id INT, country VARCHAR(255), co2_emission_kg INT, orders INT); INSERT INTO transportation VALUES (1, 'Italy', 150, 2000), (2, 'Germany', 120, 1500), (3, 'Italy', 180, 3000), (4, 'Brazil', 80, 1000);","completion":"SELECT country, SUM(co2_emission_kg) FROM transportation GROUP BY country;"}
{"prompt":"Show me the total ad revenue generated per month for a specific advertiser (AdvertiserID = 1001) with given SQL schema CREATE TABLE advertiser (advertiser_id INT, name VARCHAR(50)); CREATE TABLE ad_revenue (advertiser_id INT, revenue DECIMAL(10, 2), month_year DATE); INSERT INTO advertiser (advertiser_id, name) VALUES (1001, 'ABC Company'), (1002, 'XYZ Inc'); INSERT INTO ad_revenue (advertiser_id, revenue, month_year) VALUES (1001, 5000.50, '2022-01-01'), (1001, 6000.25, '2022-02-01'), (1002, 4000.00, '2022-01-01');","completion":"SELECT DATE_FORMAT(month_year, '%Y-%m') AS month, SUM(revenue) AS total_revenue FROM ad_revenue WHERE advertiser_id = 1001 GROUP BY month;"}
{"prompt":"What is the minimum Shariah-compliant loan amount issued in the last quarter of 2021? with given SQL schema CREATE TABLE loans (id INT, amount DECIMAL, date DATE, loan_type VARCHAR); INSERT INTO loans (id, amount, date, loan_type) VALUES (1, 5000, '2021-09-05', 'Shariah-compliant'), (2, 7000, '2021-10-07', 'socially responsible'), (3, 9000, '2021-11-03', 'Shariah-compliant'), (4, 11000, '2021-12-31', 'Shariah-compliant');","completion":"SELECT MIN(amount) FROM loans WHERE EXTRACT(YEAR FROM date) = 2021 AND EXTRACT(QUARTER FROM date) = 4 AND loan_type = 'Shariah-compliant';"}
{"prompt":"What is the average donation amount and number of donations for each program in the 'programs' and 'donations' tables? with given SQL schema CREATE TABLE programs (program_id INT, program_name TEXT); CREATE TABLE donations (donation_id INT, donor_id INT, program_id INT, donation_amount FLOAT); INSERT INTO programs (program_id, program_name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); INSERT INTO donations (donation_id, donor_id, program_id, donation_amount) VALUES (1, 1, 1, 50.00), (2, 2, 1, 100.00), (3, 3, 2, 150.00);","completion":"SELECT p.program_name, AVG(d.donation_amount) as avg_donation, COUNT(d.donation_id) as num_donations FROM programs p JOIN donations d ON p.program_id = d.program_id GROUP BY p.program_name;"}
{"prompt":"How many shipments were made from each country? with given SQL schema CREATE TABLE shipments (shipment_id INT, country TEXT); INSERT INTO shipments (shipment_id, country) VALUES (1, 'Germany'), (2, 'France'), (3, 'Germany'), (4, 'Spain'), (5, 'France');","completion":"SELECT country, COUNT(*) as total_shipments FROM shipments GROUP BY country;"}
{"prompt":"What is the total quantity of items with type 'E' or type 'F' in warehouse O and warehouse P? with given SQL schema CREATE TABLE warehouse_o(item_id INT, item_type VARCHAR(10), quantity INT);CREATE TABLE warehouse_p(item_id INT, item_type VARCHAR(10), quantity INT);INSERT INTO warehouse_o(item_id, item_type, quantity) VALUES (1, 'E', 200), (2, 'F', 300), (3, 'E', 50), (4, 'F', 400);INSERT INTO warehouse_p(item_id, item_type, quantity) VALUES (1, 'E', 150), (2, 'F', 250), (3, 'E', 40), (4, 'F', 350);","completion":"SELECT quantity FROM warehouse_o WHERE item_type IN ('E', 'F') UNION ALL SELECT quantity FROM warehouse_p WHERE item_type IN ('E', 'F');"}
{"prompt":"Which parcel_delivery routes have a distance greater than 1000 kilometers? with given SQL schema CREATE TABLE parcel_delivery (route_id INT, start_location VARCHAR(255), end_location VARCHAR(255), distance INT); INSERT INTO parcel_delivery (route_id, start_location, end_location, distance) VALUES (1, 'New York', 'Los Angeles', 4000), (2, 'Chicago', 'Miami', 2500), (3, 'Toronto', 'Vancouver', 3500), (4, 'London', 'Glasgow', 800), (5, 'Paris', 'Berlin', 1200);","completion":"SELECT route_id, start_location, end_location, distance FROM parcel_delivery WHERE distance > 1000;"}
{"prompt":"Show the total budget allocated to healthcare programs in each department from the 'government_budget' database. with given SQL schema CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE programs (id INT PRIMARY KEY, name VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id), budget INT); INSERT INTO departments (id, name) VALUES (1, 'Health and Human Services'); INSERT INTO departments (id, name) VALUES (2, 'Education');","completion":"SELECT departments.name, SUM(programs.budget) as total_budget FROM departments INNER JOIN programs ON departments.id = programs.department_id WHERE programs.name LIKE '%healthcare%' GROUP BY departments.name;"}
{"prompt":"What is the total revenue generated from eco-friendly tours in France? with given SQL schema CREATE TABLE tours (id INT, country VARCHAR(20), type VARCHAR(20), revenue FLOAT); INSERT INTO tours (id, country, type, revenue) VALUES (1, 'France', 'Eco-friendly', 5000.0), (2, 'Italy', 'Regular', 4000.0);","completion":"SELECT SUM(revenue) FROM tours WHERE country = 'France' AND type = 'Eco-friendly';"}
{"prompt":"Who are the top 3 artists with the most artworks in the 'Cubism' category, excluding artists who have less than 5 artworks in total? with given SQL schema CREATE TABLE Artists (ArtistID INT PRIMARY KEY, Name TEXT); CREATE TABLE Artworks (ArtworkID INT PRIMARY KEY, Title TEXT, ArtistID INT, Category TEXT, Quantity INT);","completion":"SELECT Artists.Name FROM Artists INNER JOIN Artworks ON Artists.ArtistID = Artworks.ArtistID WHERE Artworks.Category = 'Cubism' GROUP BY Artists.Name HAVING SUM(Artworks.Quantity) > 5 ORDER BY SUM(Artworks.Quantity) DESC LIMIT 3;"}
{"prompt":"Which indigenous communities share a region with the snow leopard? with given SQL schema CREATE TABLE IndigenousCommunities (id INT PRIMARY KEY, name VARCHAR(100), population INT, region VARCHAR(50)); INSERT INTO IndigenousCommunities (id, name, population, region) VALUES (2, 'Nenets', 45000, 'Arctic'), (3, 'Sami', 80000, 'Arctic');","completion":"SELECT IndigenousCommunities.name FROM IndigenousCommunities INNER JOIN Species ON IndigenousCommunities.region = Species.region WHERE Species.name = 'Snow Leopard';"}
{"prompt":"What is the number of patients who identified as Indigenous and received therapy in H2 2021? with given SQL schema CREATE TABLE patients (id INT, race VARCHAR(25), therapy_date DATE); INSERT INTO patients (id, race, therapy_date) VALUES (1, 'Indigenous', '2021-07-15'), (2, 'White', '2021-08-20'), (3, 'Hispanic or Latino', '2021-07-03'), (4, 'Asian', '2021-09-10'), (5, 'Indigenous', '2021-08-08'), (6, 'White', '2021-09-25'), (7, 'Hispanic or Latino', '2021-07-12'), (8, 'Asian', '2021-08-02');","completion":"SELECT COUNT(*) FROM patients WHERE race = 'Indigenous' AND therapy_date >= '2021-07-01' AND therapy_date < '2022-01-01';"}
{"prompt":"Get the number of bridges built in each decade since 1950 with given SQL schema CREATE TABLE Bridges (bridge_id int, bridge_name varchar(255), year int, location varchar(255));","completion":"SELECT (year - 1900) \/ 10 AS decade, COUNT(*) FROM Bridges WHERE year >= 1950 GROUP BY decade;"}
{"prompt":"What is the minimum, maximum, and average age of victims who have participated in restorative justice programs, by location? with given SQL schema CREATE TABLE victims (id INT, age INT, gender TEXT, ethnicity TEXT, location TEXT); INSERT INTO victims (id, age, gender, ethnicity, location) VALUES (1, 45, 'Female', 'Hispanic', 'Texas'), (2, 67, 'Male', 'Asian', 'California'), (3, 34, 'Female', 'African American', 'New York'); CREATE TABLE restorative_justice_participants (id INT, victim_id INT, program_id INT); INSERT INTO restorative_justice_participants (id, victim_id, program_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3);","completion":"SELECT location, MIN(v.age) AS min_age, MAX(v.age) AS max_age, AVG(v.age) AS avg_age FROM victims v JOIN restorative_justice_participants rjp ON v.id = rjp.victim_id GROUP BY location;"}
{"prompt":"Show the total number of marine protected areas in the Pacific Ocean with given SQL schema CREATE TABLE marine_protected_areas (area_name TEXT, location TEXT, size_km INTEGER); INSERT INTO marine_protected_areas (area_name, location, size_km) VALUES ('Mariana Trench Marine National Monument', 'Pacific Ocean', 95804), ('Papah\u0101naumoku\u0101kea Marine National Monument', 'Pacific Ocean', 1397970), ('Rose Atoll Marine National Monument', 'Pacific Ocean', 11628);","completion":"SELECT COUNT(*) FROM marine_protected_areas WHERE location = 'Pacific Ocean';"}
{"prompt":"List the names and publication years of Middle Eastern authors who have published books in the 'Non-fiction' genre. with given SQL schema CREATE TABLE authors (id INT PRIMARY KEY, name VARCHAR(255), ethnicity VARCHAR(255)); INSERT INTO authors (id, name, ethnicity) VALUES (1, 'Rania Abouzeid', 'Middle Eastern'); INSERT INTO authors (id, name, ethnicity) VALUES (2, 'Khaled Hosseini', 'Middle Eastern'); CREATE TABLE books (id INT PRIMARY KEY, title VARCHAR(255), author_id INT, publication_year INT, genre VARCHAR(255)); INSERT INTO books (id, title, author_id, publication_year, genre) VALUES (1, 'No Turning Back', 1, 2018, 'Non-fiction'); INSERT INTO books (id, title, author_id, publication_year, genre) VALUES (2, 'The Kite Runner', 2, 2003, 'Fiction'); INSERT INTO books (id, title, author_id, publication_year, genre) VALUES (3, 'A Thousand Splendid Suns', 2, 2007, 'Fiction'); CREATE TABLE genres (id INT PRIMARY KEY, genre VARCHAR(255)); INSERT INTO genres (id, genre) VALUES (1, 'Fiction'); INSERT INTO genres (id, genre) VALUES (2, 'Non-fiction');","completion":"SELECT a.name, b.publication_year FROM authors a INNER JOIN books b ON a.id = b.author_id INNER JOIN genres g ON b.genre = g.genre WHERE a.ethnicity = 'Middle Eastern' AND g.genre = 'Non-fiction';"}
{"prompt":"Determine the percentage of women in the workforce by department. with given SQL schema CREATE TABLE departments (id INT, name TEXT, workforce FLOAT, female_workforce FLOAT);","completion":"SELECT name, (female_workforce\/workforce)*100 as percentage_of_women FROM departments ORDER BY percentage_of_women DESC;"}
{"prompt":"What is the number of employees in each department, ordered from the highest to the lowest? with given SQL schema CREATE TABLE mining_operations (id INT, name VARCHAR(50), department VARCHAR(50), age INT);","completion":"SELECT department, COUNT(*) AS count FROM mining_operations GROUP BY department ORDER BY count DESC;"}
{"prompt":"What is the percentage of mobile customers who are using 4G networks in each city? with given SQL schema CREATE TABLE mobile_networks (id INT, customer_id INT, network_type VARCHAR(50));","completion":"SELECT city, 100.0 * SUM(CASE WHEN network_type = '4G' THEN 1 ELSE 0 END) \/ COUNT(*) AS pct FROM mobile_networks JOIN mobile_subscribers ON mobile_networks.customer_id = mobile_subscribers.id GROUP BY city;"}
{"prompt":"What is the total data usage for each mobile plan in a given month? with given SQL schema CREATE TABLE subscriber_data (subscriber_id INT, plan_id INT, data_usage DECIMAL(10,2), usage_month VARCHAR(7)); INSERT INTO subscriber_data (subscriber_id, plan_id, data_usage, usage_month) VALUES (1, 1, 2.00, 'Jan-2022'), (2, 2, 8.00, 'Jan-2022'), (3, 3, 25.00, 'Jan-2022'), (4, 1, 3.00, 'Jan-2022'), (5, 2, 10.00, 'Jan-2022'), (6, 3, 30.00, 'Jan-2022');","completion":"SELECT plan_id, SUM(data_usage) AS total_data_usage FROM subscriber_data WHERE usage_month = 'Jan-2022' GROUP BY plan_id;"}
{"prompt":"How many concert tickets were sold in Europe in 2020? with given SQL schema CREATE TABLE tickets (ticket_id INT, concert_id INT, location VARCHAR(255), year INT, quantity INT); INSERT INTO tickets (ticket_id, concert_id, location, year, quantity) VALUES (1, 1, 'London', 2020, 500);","completion":"SELECT SUM(quantity) FROM tickets WHERE location LIKE 'Europe%' AND year = 2020;"}
{"prompt":"How many streams did each song by an artist get in a given month? with given SQL schema CREATE TABLE Songs (id INT, artist_id INT, title VARCHAR(50)); CREATE TABLE Streams (id INT, song_id INT, date DATE, streams INT); INSERT INTO Songs (id, artist_id, title) VALUES (1, 1, 'Shake it Off'), (2, 1, 'Blank Space'), (3, 2, 'Humble'), (4, 2, 'DNA'); INSERT INTO Streams (id, song_id, date, streams) VALUES (1, 1, '2022-01-01', 1000), (2, 1, '2022-01-02', 1500), (3, 2, '2022-01-01', 2000), (4, 2, '2022-01-02', 2500), (5, 3, '2022-01-01', 3000), (6, 3, '2022-01-02', 3500), (7, 4, '2022-01-01', 4000), (8, 4, '2022-01-02', 4500);","completion":"SELECT s.title, SUM(s.streams) as total_streams FROM Songs s JOIN Streams st ON s.id = st.song_id WHERE st.date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY s.title;"}
{"prompt":"Insert a new artist 'SZA' with the genre 'R&B' and 5 million monthly listeners in the 'artists' table. with given SQL schema CREATE TABLE artists (id INT, name VARCHAR(255), genre VARCHAR(255), monthly_listeners BIGINT);","completion":"INSERT INTO artists (name, genre, monthly_listeners) VALUES ('SZA', 'R&B', 5000000);"}
{"prompt":"Calculate the average temperature of the ocean floor in the Indian Ocean. with given SQL schema CREATE TABLE ocean_floor_temperatures (location TEXT, temperature REAL); INSERT INTO ocean_floor_temperatures (location, temperature) VALUES ('Indian Ocean', '4.5'), ('Atlantic Ocean', '5.2');","completion":"SELECT AVG(temperature) FROM ocean_floor_temperatures WHERE location = 'Indian Ocean';"}
{"prompt":"What is the average age of players who play VR games and their total spending on games? with given SQL schema CREATE TABLE players (id INT, name VARCHAR(50), age INT, country VARCHAR(50)); INSERT INTO players (id, name, age, country) VALUES (1, 'John Doe', 25, 'USA'), (2, 'Jane Smith', 30, 'Canada'); CREATE TABLE games (id INT, name VARCHAR(50), type VARCHAR(50), price DECIMAL(5,2)); INSERT INTO games (id, name, type, price) VALUES (1, 'Game1', 'VR', 40.00), (2, 'Game2', 'Non-VR', 20.00); CREATE TABLE player_games (player_id INT, game_id INT); INSERT INTO player_games (player_id, game_id) VALUES (1, 1), (2, 1), (1, 2);","completion":"SELECT AVG(players.age), SUM(games.price) FROM players INNER JOIN player_games ON players.id = player_games.player_id INNER JOIN games ON player_games.game_id = games.id WHERE games.type = 'VR';"}
{"prompt":"Delete records from the \"sensor_data\" table where the \"sensor_id\" is 3 with given SQL schema CREATE TABLE sensor_data (sensor_id INT, temp FLOAT, humidity FLOAT, light_level INT, timestamp TIMESTAMP);","completion":"DELETE FROM sensor_data WHERE sensor_id = 3;"}
{"prompt":"How many public service delivery requests were received from each age group of citizens in 2022? with given SQL schema CREATE TABLE Requests (Age_Group TEXT, Year INTEGER, Num_Requests INTEGER); INSERT INTO Requests (Age_Group, Year, Num_Requests) VALUES ('18-30', 2022, 200), ('31-50', 2022, 300), ('51-65', 2022, 250), ('66+', 2022, 150);","completion":"SELECT Age_Group, SUM(Num_Requests) FROM Requests WHERE Year = 2022 GROUP BY Age_Group;"}
{"prompt":"What is the sum of lanthanum imports to Norway and Sweden for the years 2018 and 2019? with given SQL schema CREATE TABLE lanthanum_imports (year INT, country TEXT, quantity INT); INSERT INTO lanthanum_imports (year, country, quantity) VALUES (2018, 'Norway', 150), (2019, 'Norway', 160), (2018, 'Sweden', 140), (2019, 'Sweden', 150);","completion":"SELECT SUM(quantity) FROM lanthanum_imports WHERE country IN ('Norway', 'Sweden') AND year IN (2018, 2019);"}
{"prompt":"How many properties are there in total for each co-ownership model? with given SQL schema CREATE TABLE coownership_model (model_id INT, property_id INT); INSERT INTO coownership_model (model_id, property_id) VALUES (1, 1), (2, 1), (1, 2), (2, 2), (1, 3);","completion":"SELECT cm.model_id, COUNT(*) as total_properties FROM coownership_model cm GROUP BY cm.model_id;"}
{"prompt":"What is the minimum property tax for properties in the table 'co_ownership' that are located in the city of New York? with given SQL schema CREATE TABLE co_ownership (id INT, property_tax FLOAT, city VARCHAR(20)); INSERT INTO co_ownership (id, property_tax, city) VALUES (1, 5000, 'Chicago'), (2, 7000, 'New York'), (3, 3000, 'Los Angeles');","completion":"SELECT MIN(property_tax) FROM co_ownership WHERE city = 'New York';"}
{"prompt":"What is the average energy efficiency score for buildings in each country, ordered by the highest average score? with given SQL schema CREATE TABLE Buildings (id INT, country VARCHAR(50), city VARCHAR(50), efficiency_score INT); INSERT INTO Buildings VALUES (1, 'USA', 'NYC', 75), (2, 'USA', 'LA', 60), (3, 'Canada', 'Toronto', 80), (4, 'Canada', 'Vancouver', 85), (5, 'Mexico', 'Mexico City', 65);","completion":"SELECT country, AVG(efficiency_score) AS avg_efficiency_score  FROM Buildings GROUP BY country ORDER BY avg_efficiency_score DESC;"}
{"prompt":"Which menu categories have a daily revenue greater than the average daily revenue? with given SQL schema CREATE TABLE menu_engineering (menu_category VARCHAR(255), daily_revenue DECIMAL(10,2)); INSERT INTO menu_engineering (menu_category, daily_revenue) VALUES ('Appetizers', 500.00), ('Entrees', 2500.00), ('Desserts', 1000.00);","completion":"SELECT menu_category, daily_revenue FROM menu_engineering WHERE daily_revenue > (SELECT AVG(daily_revenue) FROM menu_engineering);"}
{"prompt":"Show the names of suppliers that provide materials for at least 3 products. with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT); CREATE TABLE materials (material_id INT, material_name TEXT, product_id INT, supplier_id INT); INSERT INTO products (product_id, product_name) VALUES (1, 'Product A'), (2, 'Product B'), (3, 'Product C'), (4, 'Product D'), (5, 'Product E'); INSERT INTO materials (material_id, material_name, product_id, supplier_id) VALUES (1, 'Material 1', 1, 101), (2, 'Material 2', 1, 102), (3, 'Material 3', 2, 103), (4, 'Material 4', 3, 101), (5, 'Material 5', 3, 102), (6, 'Material 6', 4, 103), (7, 'Material 7', 5, 101), (8, 'Material 8', 5, 102), (9, 'Material 9', 5, 103);","completion":"SELECT supplier_id FROM materials GROUP BY supplier_id HAVING COUNT(DISTINCT product_id) >= 3;"}
{"prompt":"What are the names and launch dates of all astronauts who have participated in space missions? with given SQL schema CREATE TABLE Astronaut (Id INT, FirstName VARCHAR(50), LastName VARCHAR(50), BirthDate DATETIME, Gender VARCHAR(10), Nationality VARCHAR(50), MissionId INT); INSERT INTO Astronaut (Id, FirstName, LastName, BirthDate, Gender, Nationality, MissionId) VALUES (5, 'Neil', 'Armstrong', '1930-08-05', 'Male', 'United States', 1);","completion":"SELECT FirstName, LastName, LaunchDate FROM Astronaut a JOIN SpaceMission sm ON a.MissionId = sm.Id;"}
{"prompt":"What is the total cost of Mars rover missions that have successfully landed? with given SQL schema CREATE TABLE mars_rovers (id INT PRIMARY KEY, name VARCHAR(255), mission_type VARCHAR(255), agency VARCHAR(255), cost FLOAT, launched_date DATE, landed_date DATE);","completion":"SELECT SUM(cost) FROM mars_rovers WHERE mission_type = 'Lander' AND landed_date IS NOT NULL;"}
{"prompt":"How many fans from the \"Fans\" table live in the state of New York and have never attended a game? with given SQL schema CREATE TABLE fans (id INT, name VARCHAR(50), state VARCHAR(50), games_attended INT);","completion":"SELECT COUNT(*) FROM fans WHERE state = 'New York' AND games_attended = 0;"}
{"prompt":"How many unique user accounts have been accessing the system in the past month? with given SQL schema CREATE TABLE user_activity (id INT, user_id INT, activity_time TIMESTAMP);","completion":"SELECT COUNT(DISTINCT user_id) as unique_users FROM user_activity WHERE activity_time >= NOW() - INTERVAL '1 month';"}
{"prompt":"List all autonomous bus routes and their operating companies in Tokyo, Japan. with given SQL schema CREATE TABLE autonomous_buses (bus_id INT, route VARCHAR(100), company VARCHAR(100), city VARCHAR(50));","completion":"SELECT route, company FROM autonomous_buses WHERE city = 'Tokyo';"}
{"prompt":"What is the distribution of trips by mode of transport? with given SQL schema CREATE TABLE trips (user_id INT, trip_date DATE, mode VARCHAR(50), trip_count INT);","completion":"SELECT mode, SUM(trip_count) as total_trips FROM trips GROUP BY mode;"}
{"prompt":"Get the count of 'Vegan Leather Shoes' orders in France with a quantity greater than 3. with given SQL schema CREATE TABLE garments (id INT, name VARCHAR(255), category VARCHAR(255), country VARCHAR(255)); INSERT INTO garments (id, name, category, country) VALUES (1, 'Vegan Leather Shoes', 'Footwear', 'France'); CREATE TABLE orders (id INT, garment_id INT, quantity INT, order_date DATE);","completion":"SELECT COUNT(*) FROM orders INNER JOIN garments ON orders.garment_id = garments.id WHERE garments.name = 'Vegan Leather Shoes' AND garments.country = 'France' AND orders.quantity > 3;"}
{"prompt":"What is the average CO2 emissions for the garment manufacturing process for each collection? with given SQL schema CREATE TABLE emissions (collection VARCHAR(20), co2_emissions INT); INSERT INTO emissions (collection, co2_emissions) VALUES ('Spring 2021', 10000), ('Fall 2021', 12000), ('Winter 2021', 15000), ('Spring 2022', 18000);","completion":"SELECT collection, AVG(co2_emissions) FROM emissions GROUP BY collection;"}
{"prompt":"How many workplace safety incidents were reported in the Construction industry in 2021? with given SQL schema CREATE TABLE WorkplaceSafety (id INT, year INT, industry VARCHAR(255), incidents INT); INSERT INTO WorkplaceSafety (id, year, industry, incidents) VALUES (1, 2021, 'Construction', 12);","completion":"SELECT incidents FROM WorkplaceSafety WHERE industry = 'Construction' AND year = 2021;"}
{"prompt":"List the collective bargaining agreements and their expiration dates for the 'agriculture' sector with given SQL schema CREATE TABLE agriculture_cb_expirations (id INT, sector VARCHAR(20), expiration_date DATE); INSERT INTO agriculture_cb_expirations (id, sector, expiration_date) VALUES (1, 'agriculture', '2023-01-01'), (2, 'agriculture', '2022-12-31');","completion":"SELECT * FROM agriculture_cb_expirations WHERE sector = 'agriculture';"}
{"prompt":"What is the average age of members in unions advocating for 'CivilRights'? with given SQL schema CREATE TABLE UnionMembership (member_id INT, union_id INT); CREATE TABLE Unions (union_id INT, cause TEXT, member_count INT, member_age INT);","completion":"SELECT AVG(Unions.member_age) FROM UnionMembership INNER JOIN Unions ON UnionMembership.union_id = Unions.union_id WHERE Unions.cause = 'CivilRights';"}
{"prompt":"What is the union with the fewest members in the education sector? with given SQL schema CREATE TABLE unions (id INT, name TEXT, industry TEXT, members INT); INSERT INTO unions (id, name, industry, members) VALUES (1, 'AFT', 'Education', 1600000), (2, 'NEA', 'Education', 3000000), (3, 'UFT', 'Education', 200000), (4, 'AFT Local 1', 'Education', 15000), (5, 'AFT Local 2', 'Education', 10000);","completion":"SELECT name FROM unions WHERE industry = 'Education' ORDER BY members LIMIT 1;"}
{"prompt":"Find the top 2 car makes with the highest safety ratings, considering the average rating for each make across all models. with given SQL schema CREATE TABLE SafetyRatings (id INT, make VARCHAR(20), model VARCHAR(20), rating FLOAT); INSERT INTO SafetyRatings (id, make, model, rating) VALUES (1, 'Tesla', 'Model S', 5.3), (2, 'Tesla', 'Model 3', 5.1), (3, 'Volvo', 'XC60', 5.2), (4, 'Volvo', 'XC90', 5.0), (5, 'Honda', 'Civic', 4.8), (6, 'Honda', 'Accord', 4.9);","completion":"SELECT make, AVG(rating) AS avg_rating FROM SafetyRatings GROUP BY make ORDER BY avg_rating DESC LIMIT 2;"}
{"prompt":"How many safety tests have been conducted for each type of vehicle in 2022? with given SQL schema CREATE TABLE TestTypes (Id INT, TestType VARCHAR(20)); CREATE TABLE SafetyTests (Id INT, VehicleId INT, TestTypeId INT, TestDate DATE); INSERT INTO TestTypes (Id, TestType) VALUES (1, 'Crash Test'), (2, 'Emission Test'), (3, 'Safety Feature Test'); INSERT INTO SafetyTests (Id, VehicleId, TestTypeId, TestDate) VALUES (1, 1, 1, '2022-01-01'), (2, 1, 2, '2022-01-02'), (3, 2, 1, '2022-01-03'), (4, 2, 2, '2022-01-04'), (5, 3, 1, '2022-01-05');","completion":"SELECT TestTypes.TestType, COUNT(*) FROM TestTypes INNER JOIN SafetyTests ON TestTypes.Id = SafetyTests.TestTypeId WHERE YEAR(TestDate) = 2022 GROUP BY TestTypes.TestType;"}
{"prompt":"Update the 'safety_score' for the 'vehicle_make' 'Polestar' in the 'safety_ratings' table to 95 with given SQL schema CREATE TABLE safety_ratings (vehicle_make VARCHAR(255), safety_score INT);","completion":"UPDATE safety_ratings SET safety_score = 95 WHERE vehicle_make = 'Polestar';"}
{"prompt":"Identify the states with the highest wastewater treatment plant construction rates between 2005 and 2015, excluding Texas. with given SQL schema CREATE TABLE wastewater_plants(state VARCHAR(20), year INT, num_plants INT); INSERT INTO wastewater_plants VALUES ('Texas', 2005, 10), ('Texas', 2006, 12), ('Texas', 2007, 14), ('New York', 2005, 5), ('New York', 2006, 6), ('New York', 2007, 7), ('California', 2005, 15), ('California', 2006, 17), ('California', 2007, 19);","completion":"SELECT state, AVG(num_plants) AS avg_construction_rate FROM wastewater_plants WHERE state != 'Texas' AND year BETWEEN 2005 AND 2007 GROUP BY state ORDER BY avg_construction_rate DESC LIMIT 2;"}
{"prompt":"Insert records into the 'drought_impact' table for the 'West' region with a 'severity' rating of 'low' and a 'year' of 2021 with given SQL schema CREATE TABLE drought_impact (region VARCHAR(20), severity VARCHAR(10), year INT);","completion":"INSERT INTO drought_impact (region, severity, year) VALUES ('West', 'low', 2021);"}
{"prompt":"List members who did more than 10 yoga workouts and their total yoga workouts. with given SQL schema CREATE TABLE membership_data (member_id INT, join_date DATE); CREATE TABLE workout_data (workout_id INT, member_id INT, workout_type VARCHAR(20), workout_date DATE);","completion":"SELECT m.member_id, m.join_date, COUNT(w.workout_id) as total_yoga_workouts FROM membership_data m JOIN workout_data w ON m.member_id = w.member_id WHERE w.workout_type = 'yoga' GROUP BY m.member_id HAVING COUNT(w.workout_id) > 10;"}
{"prompt":"Display economic diversification efforts and their respective program managers from the 'rural_development' database with given SQL schema CREATE TABLE economic_diversification (id INT, effort VARCHAR(50), description TEXT, program_manager VARCHAR(50)); INSERT INTO economic_diversification (id, effort, description, program_manager) VALUES (1, 'Renewable Energy', 'Promoting clean energy alternatives', 'John Doe'); INSERT INTO economic_diversification (id, effort, description, program_manager) VALUES (2, 'Artisanal Crafts', 'Supporting local artisans and their crafts', 'Jane Smith');","completion":"SELECT effort, program_manager FROM economic_diversification;"}
{"prompt":"Show the types of economic diversification initiatives and the number of community members involved in each from the 'economic_diversification' and 'community_development' tables with given SQL schema CREATE TABLE economic_diversification (initiative_id INT, initiative_name VARCHAR(50), member_id INT); CREATE TABLE community_development (member_id INT, member_name VARCHAR(50), age INT);","completion":"SELECT e.initiative_name, COUNT(c.member_id) FROM economic_diversification e INNER JOIN community_development c ON e.member_id = c.member_id GROUP BY e.initiative_name;"}
{"prompt":"What is the total number of animals in the 'animal_population' table, grouped by species? with given SQL schema CREATE TABLE animal_population (species VARCHAR(50), animal_count INT);","completion":"SELECT species, SUM(animal_count) FROM animal_population GROUP BY species;"}
{"prompt":"Which species of fish has the highest average daily growth rate in the Americas? with given SQL schema CREATE TABLE FishGrowth (SiteID INT, Species VARCHAR(255), DailyGrowthRate FLOAT, Region VARCHAR(255)); INSERT INTO FishGrowth (SiteID, Species, DailyGrowthRate, Region) VALUES (1, 'Tilapia', 0.02, 'Americas'), (2, 'Salmon', 0.03, 'Americas'), (3, 'Tilapia', 0.015, 'Asia-Pacific'), (4, 'Salmon', 0.025, 'Europe');","completion":"SELECT Species, AVG(DailyGrowthRate) as AvgDailyGrowthRate FROM FishGrowth WHERE Region = 'Americas' GROUP BY Species ORDER BY AvgDailyGrowthRate DESC LIMIT 1;"}
{"prompt":"What is the total funding_amount for art_exhibit events in Q4 2020? with given SQL schema CREATE TABLE art_exhibit_funding_q4_2020 (id INT, funding_amount INT, event_date DATE); INSERT INTO art_exhibit_funding_q4_2020 (id, funding_amount, event_date) VALUES (1, 10000, '2020-10-01'), (2, 15000, '2020-11-01'), (3, 12000, '2020-12-01');","completion":"SELECT SUM(funding_amount) FROM art_exhibit_funding_q4_2020 WHERE MONTH(event_date) BETWEEN 10 AND 12;"}
{"prompt":"How many building permits were issued per month in 2020? with given SQL schema CREATE TABLE building_permits (id INT, permit_number INT, issue_date DATE, permit_type VARCHAR(255));","completion":"SELECT DATE_FORMAT(issue_date, '%Y-%m') as month, COUNT(*) as permits_issued FROM building_permits WHERE YEAR(issue_date) = 2020 GROUP BY month;"}
{"prompt":"What is the total salary paid to construction workers who worked on sustainable building projects in Washington? with given SQL schema CREATE TABLE ConstructionLaborStatistics (id INT, name VARCHAR(50), job VARCHAR(50), salary INT); INSERT INTO ConstructionLaborStatistics VALUES (1, 'Charles Doe', 'Carpenter', 50000); INSERT INTO ConstructionLaborStatistics VALUES (2, 'Diana Smith', 'Electrician', 60000); CREATE TABLE BuildingTypes (id INT, building_type VARCHAR(50)); INSERT INTO BuildingTypes VALUES (1, 'Sustainable'); INSERT INTO BuildingTypes VALUES (2, 'Non-Sustainable'); CREATE TABLE WorkerBuildings (worker_id INT, building_id INT); INSERT INTO WorkerBuildings VALUES (1, 1); INSERT INTO WorkerBuildings VALUES (2, 2);","completion":"SELECT SUM(cls.salary) FROM ConstructionLaborStatistics cls JOIN WorkerBuildings wb ON cls.id = wb.worker_id JOIN BuildingTypes bt ON wb.building_id = bt.id WHERE bt.building_type = 'Sustainable' AND state = 'Washington';"}
{"prompt":"Calculate the total billing amount for cases with a precedent set in the last 3 years for French law. with given SQL schema CREATE TABLE Cases (CaseID INT, PrecedentYear INT, PrecedentType VARCHAR(255)); INSERT INTO Cases (CaseID, PrecedentYear, PrecedentType) VALUES (1, 2018, 'French'); INSERT INTO Cases (CaseID, PrecedentYear, PrecedentType) VALUES (2, 2019, 'French'); INSERT INTO Cases (CaseID, PrecedentYear, PrecedentType) VALUES (3, 2020, 'French'); CREATE TABLE Precedents (CaseID INT, BillingAmount INT); INSERT INTO Precedents (CaseID, BillingAmount) VALUES (1, 2000); INSERT INTO Precedents (CaseID, BillingAmount) VALUES (2, 3000); INSERT INTO Precedents (CaseID, BillingAmount) VALUES (3, 1000);","completion":"SELECT SUM(BillingAmount) FROM Precedents JOIN Cases ON Precedents.CaseID = Cases.CaseID WHERE PrecedentYear >= YEAR(CURRENT_DATE) - 3 AND PrecedentType = 'French';"}
{"prompt":"Select the total number of cases won by attorneys in the 'Boston' office. with given SQL schema CREATE TABLE offices (office_id INT, office_name VARCHAR(20)); INSERT INTO offices (office_id, office_name) VALUES (1, 'Boston'), (2, 'New York'), (3, 'Chicago'); CREATE TABLE cases (case_id INT, attorney_id INT, office_id INT, case_outcome VARCHAR(10)); INSERT INTO cases (case_id, attorney_id, office_id, case_outcome) VALUES (1, 101, 1, 'Won'), (2, 102, 1, 'Lost'), (3, 103, 2, 'Won');","completion":"SELECT COUNT(*) FROM cases c JOIN offices o ON c.office_id = o.office_id WHERE o.office_name = 'Boston' AND c.case_outcome = 'Won';"}
{"prompt":"Update the 'crops' table to set the 'irrigation' column to 'Drip' for all entries where the crop_name is 'Tomato'. with given SQL schema CREATE TABLE crops (id INT, crop_name VARCHAR(255), irrigation VARCHAR(255)); INSERT INTO crops (id, crop_name, irrigation) VALUES (1, 'Tomato', 'Sprinkler'), (2, 'Potato', 'Furrow'), (3, 'Corn', 'None');","completion":"UPDATE crops SET irrigation = 'Drip' WHERE crop_name = 'Tomato';"}
{"prompt":"How many policy advocacy initiatives were implemented in each state in the last 5 years? with given SQL schema CREATE TABLE Policy_Advocacy_Initiatives (state VARCHAR(255), initiation_date DATE); INSERT INTO Policy_Advocacy_Initiatives (state, initiation_date) VALUES ('California', '2017-01-01'), ('Texas', '2018-01-01'), ('New York', '2016-01-01'), ('Florida', '2019-01-01'), ('Illinois', '2015-01-01');","completion":"SELECT state, COUNT(*) as num_initiatives FROM Policy_Advocacy_Initiatives WHERE initiation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) GROUP BY state;"}
{"prompt":"What is the total number of students with and without disabilities in each academic year? with given SQL schema CREATE TABLE students (student_id INT, student_name TEXT, disability BOOLEAN, year INT); INSERT INTO students (student_id, student_name, disability, year) VALUES (1, 'Alice', true, 2018), (2, 'Bob', false, 2018), (3, 'Carol', true, 2019), (4, 'Dave', false, 2019);","completion":"SELECT year, SUM(CASE WHEN disability THEN 1 ELSE 0 END) AS students_with_disabilities, SUM(CASE WHEN NOT disability THEN 1 ELSE 0 END) AS students_without_disabilities FROM students GROUP BY year;"}
{"prompt":"List the regulatory frameworks in the 'United States' that have enacted blockchain-related legislation. with given SQL schema CREATE TABLE us_regulatory_frameworks (framework_name TEXT, country TEXT);","completion":"SELECT framework_name FROM us_regulatory_frameworks WHERE country = 'United States' AND framework_name LIKE '%blockchain%';"}
{"prompt":"What is the total number of digital assets issued by companies based in the United States? with given SQL schema CREATE TABLE digital_assets (id INT, name TEXT, company TEXT, country TEXT); INSERT INTO digital_assets (id, name, company, country) VALUES (1, 'ExampleAsset1', 'ExampleCompany1', 'United States');","completion":"SELECT COUNT(*) FROM digital_assets WHERE country = 'United States' AND company IS NOT NULL;"}
{"prompt":"What is the minimum investment of clients in the \"Commodity\" fund? with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(50), investment FLOAT); CREATE TABLE fund_investments (client_id INT, fund_name VARCHAR(50), investment FLOAT);","completion":"SELECT MIN(clients.investment) FROM clients INNER JOIN fund_investments ON clients.client_id = fund_investments.client_id WHERE fund_investments.fund_name = 'Commodity';"}
{"prompt":"What is the total transaction amount by month for the US? with given SQL schema CREATE TABLE transactions (user_id INT, transaction_amount DECIMAL(10, 2), transaction_date DATE, country VARCHAR(255)); INSERT INTO transactions (user_id, transaction_amount, transaction_date, country) VALUES (1, 50.00, '2022-01-01', 'US'), (2, 100.50, '2022-02-02', 'US'), (3, 200.00, '2022-03-03', 'US');","completion":"SELECT DATE_FORMAT(transaction_date, '%Y-%m') as month, SUM(transaction_amount) as total_transaction_amount FROM transactions WHERE country = 'US' GROUP BY month;"}
{"prompt":"Calculate the average downtime for each manufacturing process with given SQL schema CREATE TABLE manufacturing_processes (process_id INT, process_name VARCHAR(255), downtime INT); INSERT INTO manufacturing_processes (process_id, process_name, downtime) VALUES (1, 'Process A', 10), (2, 'Process B', 15), (3, 'Process C', 20), (4, 'Process D', 25);","completion":"SELECT process_name, AVG(downtime) as avg_downtime FROM manufacturing_processes GROUP BY process_name;"}
{"prompt":"What is the minimum salary of employees working in factories that are located in a specific city and have a production output above a certain threshold? with given SQL schema CREATE TABLE factories (factory_id INT, name VARCHAR(100), location VARCHAR(100), production_output INT); CREATE TABLE employees (employee_id INT, factory_id INT, name VARCHAR(100), position VARCHAR(100), salary INT); INSERT INTO factories (factory_id, name, location, production_output) VALUES (1, 'ABC Factory', 'New York', 5500), (2, 'XYZ Factory', 'Los Angeles', 4000), (3, 'LMN Factory', 'Houston', 6000), (4, 'PQR Factory', 'Toronto', 7000); INSERT INTO employees (employee_id, factory_id, name, position, salary) VALUES (1, 1, 'John Doe', 'Engineer', 70000), (2, 1, 'Jane Smith', 'Manager', 80000), (3, 2, 'Mike Johnson', 'Operator', 60000), (4, 3, 'Sara Brown', 'Engineer', 75000), (5, 3, 'David Williams', 'Manager', 85000), (6, 4, 'Emily Davis', 'Engineer', 90000);","completion":"SELECT MIN(employees.salary) FROM factories INNER JOIN employees ON factories.factory_id = employees.factory_id WHERE factories.location = 'Los Angeles' AND factories.production_output > 5000;"}
{"prompt":"Calculate the average distance to the nearest rural healthcare facility in Argentina and Colombia. with given SQL schema CREATE TABLE healthcare_facilities (facility_id INT, country VARCHAR(20), distance_km FLOAT); INSERT INTO healthcare_facilities (facility_id, country, distance_km) VALUES (1, 'Argentina', 10.5), (2, 'Colombia', 12.3);","completion":"SELECT AVG(distance_km) FROM healthcare_facilities WHERE country IN ('Argentina', 'Colombia');"}
{"prompt":"Update track duration based on album release year with given SQL schema CREATE TABLE tracks (id INT PRIMARY KEY, title VARCHAR(255), duration FLOAT, album_id INT, FOREIGN KEY (album_id) REFERENCES albums(id)); CREATE TABLE albums (id INT PRIMARY KEY, title VARCHAR(255), release_year INT);","completion":"UPDATE tracks SET duration = duration * (release_year \/ 2020.0) WHERE album_id IN (SELECT id FROM albums WHERE release_year > 2000);"}
{"prompt":"What was the total donation amount for each program's first-time donors in 2022? with given SQL schema CREATE TABLE Programs (program_id INT, program_name VARCHAR(50)); CREATE TABLE Donations (donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE, program_id INT);","completion":"SELECT p.program_name, SUM(d.donation_amount) FROM Programs p JOIN Donations d ON p.program_id = d.program_id WHERE d.donor_id IN (SELECT donor_id FROM Donations WHERE YEAR(donation_date) = 2022 GROUP BY donor_id HAVING COUNT(*) = 1) GROUP BY p.program_name;"}
{"prompt":"Create a view combining student mental health and demographic data with given SQL schema CREATE TABLE student_demographics (student_id INT, age INT, gender TEXT);","completion":"CREATE VIEW student_info AS SELECT smh.student_id, smh.mental_health_score, sd.age, sd.gender FROM student_mental_health smh INNER JOIN student_demographics sd ON smh.student_id = sd.student_id;"}
{"prompt":"Find the top 3 employees with the highest salaries in the \"employee\" and \"salary\" tables with given SQL schema CREATE TABLE employee (id INT, name TEXT); CREATE TABLE salary (id INT, employee_id INT, salary DECIMAL);","completion":"SELECT e.name, s.salary FROM employee e JOIN salary s ON e.id = s.employee_id WHERE (SELECT COUNT(*) FROM salary s2 WHERE s2.salary > s.salary) < 3 ORDER BY s.salary DESC;"}
{"prompt":"Find the top 2 countries with the highest total installed capacity for wind energy. with given SQL schema CREATE TABLE Country (CountryName VARCHAR(50), InstalledCapacity INT); INSERT INTO Country (CountryName, InstalledCapacity) VALUES ('Country1', 1000), ('Country2', 1500), ('Country3', 1200), ('Country4', 800);","completion":"SELECT CountryName, SUM(InstalledCapacity) AS TotalCapacity FROM Country GROUP BY CountryName ORDER BY TotalCapacity DESC FETCH FIRST 2 ROWS ONLY;"}
{"prompt":"Find the number of wells drilled in Texas in 2020 with given SQL schema CREATE TABLE wells (id INT, state VARCHAR(255), date DATE); INSERT INTO wells (id, state, date) VALUES (1, 'Texas', '2020-01-01'); INSERT INTO wells (id, state, date) VALUES (2, 'Texas', '2020-02-01');","completion":"SELECT COUNT(*) FROM wells WHERE state = 'Texas' AND YEAR(date) = 2020;"}
{"prompt":"What is the production rate for the well with the highest production rate? with given SQL schema CREATE TABLE wells (well_id INT, well_type VARCHAR(10), location VARCHAR(20), production_rate FLOAT); INSERT INTO wells (well_id, well_type, location, production_rate) VALUES (1, 'offshore', 'Gulf of Mexico', 1000), (2, 'onshore', 'Texas', 800), (3, 'offshore', 'North Sea', 1200);","completion":"SELECT production_rate FROM (SELECT well_id, well_type, location, production_rate, ROW_NUMBER() OVER (ORDER BY production_rate DESC) rn FROM wells) t WHERE rn = 1;"}
{"prompt":"Who has the highest number of rebounds for the Raptors? with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Raptors'); CREATE TABLE games (game_id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, home_team_rebounds INT, away_team_rebounds INT); INSERT INTO games (game_id, home_team_id, away_team_id, home_team_score, away_team_score, home_team_rebounds, away_team_rebounds) VALUES (1, 1, 2, 100, 90, 50, 40), (2, 2, 1, 80, 85, 45, 55), (3, 1, 3, 110, 105, 60, 50), (4, 4, 1, 70, 75, 30, 40);","completion":"SELECT home_team_rebounds, away_team_rebounds, (home_team_rebounds + away_team_rebounds) as total_rebounds FROM games WHERE home_team_id = (SELECT team_id FROM teams WHERE team_name = 'Raptors') OR away_team_id = (SELECT team_id FROM teams WHERE team_name = 'Raptors') ORDER BY total_rebounds DESC LIMIT 1;"}
{"prompt":"For the AI_ethics_guidelines table, return the organization_name, guideline_text, and review_date for the row with the minimum review_date, in ascending order. with given SQL schema CREATE TABLE AI_ethics_guidelines (organization_name VARCHAR(255), guideline_text TEXT, review_date DATE);","completion":"SELECT organization_name, guideline_text, review_date FROM AI_ethics_guidelines WHERE review_date = (SELECT MIN(review_date) FROM AI_ethics_guidelines);"}
{"prompt":"Which users have posted ads and have more than 10 followers? with given SQL schema CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), followers INT); CREATE TABLE ads (id INT PRIMARY KEY, post_id INT, clicks INT, views INT, user_id INT); INSERT INTO users (id, name, age, gender, followers) VALUES (1, 'Kai', 22, 'Non-binary', 15); INSERT INTO users (id, name, age, gender, followers) VALUES (2, 'Lea', 25, 'Female', 20); INSERT INTO ads (id, post_id, clicks, views, user_id) VALUES (1, 1, 10, 50, 1); INSERT INTO ads (id, post_id, clicks, views, user_id) VALUES (2, 2, 5, 25, 2);","completion":"SELECT users.name FROM users INNER JOIN ads ON users.id = ads.user_id WHERE users.followers > 10;"}
{"prompt":"Show fabric and country of origin with given SQL schema CREATE TABLE sustainable_fabric (id INT PRIMARY KEY, fabric VARCHAR(25), country_of_origin VARCHAR(20)); INSERT INTO sustainable_fabric (id, fabric, country_of_origin) VALUES (1, 'Organic Cotton', 'India'), (2, 'Tencel', 'Austria'), (3, 'Hemp', 'China'), (4, 'Recycled Polyester', 'Japan');","completion":"SELECT fabric, country_of_origin FROM sustainable_fabric;"}
{"prompt":"What is the total quantity of size 8 and size 9 women's shoes sold in the United Kingdom? with given SQL schema CREATE TABLE sales_2 (id INT, product VARCHAR(20), size INT, quantity INT, country VARCHAR(20)); INSERT INTO sales_2 VALUES (1, 'shoes', 8, 200, 'UK'), (2, 'shoes', 9, 150, 'UK'), (3, 'shoes', 7, 100, 'UK');","completion":"SELECT SUM(s.quantity) FROM sales_2 s WHERE s.product = 'shoes' AND s.size IN (8, 9) AND s.country = 'UK';"}
{"prompt":"Update the 'financial_wellbeing' table to reflect a decrease in the stress level of a client in Mexico. with given SQL schema CREATE TABLE financial_wellbeing (client_id INT, stress_level INT, country VARCHAR(50)); INSERT INTO financial_wellbeing VALUES (8, 45, 'Mexico');","completion":"UPDATE financial_wellbeing SET stress_level = 40 WHERE client_id = 8 AND country = 'Mexico';"}
{"prompt":"How many non-gluten-free items are available in the bakery category? with given SQL schema CREATE TABLE inventory (id INT, category TEXT, item TEXT, gluten_free BOOLEAN); INSERT INTO inventory (id, category, item, gluten_free) VALUES (1, 'bakery', 'Baguette', false), (2, 'bakery', 'Gluten-Free Brownies', true), (3, 'produce', 'Apples', null), (4, 'bakery', 'Croissants', false);","completion":"SELECT COUNT(*) FROM inventory WHERE category = 'bakery' AND gluten_free = false;"}
{"prompt":"What is the name and address of the public library with the highest circulation in the city of Chicago? with given SQL schema CREATE TABLE public_libraries (name VARCHAR(255), city VARCHAR(255), address VARCHAR(255), circulation INT); INSERT INTO public_libraries (name, city, address, circulation) VALUES ('Chicago Public Library', 'Chicago', '400 S State St', 3000000); INSERT INTO public_libraries (name, city, address, circulation) VALUES ('Harold Washington Library Center', 'Chicago', '400 S State St', 5000000);","completion":"SELECT name, address FROM public_libraries WHERE city = 'Chicago' AND circulation = (SELECT MAX(circulation) FROM public_libraries WHERE city = 'Chicago');"}
{"prompt":"What is the total amount of research grants awarded to the Physics department in 2021 and 2022? with given SQL schema CREATE TABLE departments (id INT, department_name VARCHAR(255)); CREATE TABLE research_grants (id INT, grant_name VARCHAR(255), grant_amount INT, department_id INT, grant_year INT, PRIMARY KEY (id), FOREIGN KEY (department_id) REFERENCES departments(id)); INSERT INTO departments (id, department_name) VALUES (1, 'Physics'), (2, 'Mathematics'), (3, 'Computer Science'); INSERT INTO research_grants (id, grant_name, grant_amount, department_id, grant_year) VALUES (1, 'Grant1', 50000, 1, 2021), (2, 'Grant2', 75000, 2, 2022), (3, 'Grant3', 100000, 3, 2021), (4, 'Grant4', 125000, 1, 2022);","completion":"SELECT SUM(grant_amount) as total_grant_amount FROM research_grants WHERE department_id = (SELECT id FROM departments WHERE department_name = 'Physics') AND grant_year IN (2021, 2022);"}
{"prompt":"Delete all green buildings in Japan with a silver rating. with given SQL schema CREATE TABLE green_buildings (building_id INT, building_name VARCHAR(255), country VARCHAR(255), rating VARCHAR(255));","completion":"DELETE FROM green_buildings WHERE country = 'Japan' AND rating = 'silver';"}
{"prompt":"What is the total installed capacity of renewable energy projects in each country in the European Union? with given SQL schema CREATE TABLE renewable_energy_projects (project_id INT, project_name VARCHAR(255), country VARCHAR(255), installed_capacity FLOAT); CREATE TABLE eu_countries (country_code VARCHAR(255), country_name VARCHAR(255));","completion":"SELECT e.country_name, SUM(r.installed_capacity) FROM renewable_energy_projects r INNER JOIN eu_countries e ON r.country = e.country_code GROUP BY e.country_name;"}
{"prompt":"How many mental health parity violations were reported by gender? with given SQL schema CREATE TABLE MentalHealthParityGender (ViolationID INT, Gender VARCHAR(255), ViolationDate DATE); INSERT INTO MentalHealthParityGender (ViolationID, Gender, ViolationDate) VALUES (1, 'Female', '2022-01-01'), (2, 'Male', '2022-02-01'), (3, 'Female', '2022-03-01');","completion":"SELECT Gender, COUNT(*) as ViolationCount FROM MentalHealthParityGender GROUP BY Gender;"}
{"prompt":"Identify the number of UNESCO World Heritage sites in Asia with virtual tourism offerings. with given SQL schema CREATE TABLE world_heritage_sites (site_id INT, site_name TEXT, country TEXT, has_virtual_tour BOOLEAN); INSERT INTO world_heritage_sites (site_id, site_name, country, has_virtual_tour) VALUES (1, 'Angkor Wat', 'Cambodia', true), (2, 'Forbidden City', 'China', false), (3, 'Taj Mahal', 'India', true);","completion":"SELECT COUNT(*) FROM world_heritage_sites WHERE has_virtual_tour = true AND country IN (SELECT name FROM countries WHERE continent = 'Asia');"}
{"prompt":"Show the number of hotels that have adopted AI technology in the city of San Francisco with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, has_adopted_ai BOOLEAN);","completion":"SELECT COUNT(*) FROM hotels WHERE city = 'San Francisco' AND has_adopted_ai = TRUE;"}
{"prompt":"What is the most common type of crime in each district? with given SQL schema CREATE TABLE Crimes (CrimeID INT, District VARCHAR(15), CrimeType VARCHAR(20)); INSERT INTO Crimes (CrimeID, District, CrimeType) VALUES (1, 'District1', 'Theft'), (2, 'District2', 'Assault'), (3, 'District1', 'Vandalism');","completion":"SELECT District, CrimeType FROM Crimes GROUP BY District;"}
{"prompt":"Insert new marine debris records into the marine_debris table. with given SQL schema CREATE TABLE marine_debris (id INT, debris_type VARCHAR(255), debris_date DATE); INSERT INTO marine_debris (id, debris_type, debris_date) VALUES (1, 'Fishing Net', '2022-01-01'), (2, 'Plastic Bottle', '2022-02-01');","completion":"INSERT INTO marine_debris (id, debris_type, debris_date) VALUES (3, 'Microplastic', '2022-03-01'), (4, 'Abandoned Net', '2022-04-01');"}
{"prompt":"List all the unique locations where pollution monitoring has been conducted, along with the number of records for each location. with given SQL schema CREATE TABLE Pollution ( id INT PRIMARY KEY, location VARCHAR(255), pollutant VARCHAR(255), level FLOAT);","completion":"SELECT location, COUNT(*) as record_count FROM Pollution GROUP BY location;"}
{"prompt":"Retrieve the names of all marine species with a conservation status of 'Critically Endangered' with given SQL schema CREATE TABLE red_list_data (id INT, species TEXT, conservation_status TEXT);","completion":"SELECT species FROM red_list_data WHERE conservation_status = 'Critically Endangered';"}
{"prompt":"How many times has each dish been ordered for takeout? with given SQL schema CREATE TABLE dishes (dish_id INT, dish_name VARCHAR(255)); CREATE TABLE orders (order_id INT, order_date DATE, dish_id INT, order_type VARCHAR(255)); INSERT INTO dishes (dish_id, dish_name) VALUES (1, 'Cheese Burger'), (2, 'French Fries'), (3, 'Caesar Salad'), (4, 'Coke'); INSERT INTO orders (order_id, order_date, dish_id, order_type) VALUES (1, '2022-03-01', 1, 'takeout'), (2, '2022-03-01', 3, 'dine in'), (3, '2022-03-02', 2, 'takeout'), (4, '2022-03-02', 4, 'takeout');","completion":"SELECT dish_name, COUNT(*) as total_takeout_orders FROM orders WHERE order_type = 'takeout' GROUP BY dish_name;"}
{"prompt":"What is the total number of military equipment sold by Lockheed Martin to the Canadian government in 2020? with given SQL schema CREATE TABLE military_sales (supplier VARCHAR(255), buyer VARCHAR(255), equipment VARCHAR(255), year INTEGER, quantity INTEGER); INSERT INTO military_sales (supplier, buyer, equipment, year, quantity) VALUES ('Lockheed Martin', 'Canadian Government', 'F-35 Fighter Jet', 2020, 12), ('Lockheed Martin', 'Canadian Government', 'C-130 Hercules', 2020, 3);","completion":"SELECT SUM(quantity) FROM military_sales WHERE supplier = 'Lockheed Martin' AND buyer = 'Canadian Government' AND year = 2020;"}
{"prompt":"Which miner has the lowest CO2 emissions in Africa? with given SQL schema CREATE TABLE environmental_impact (miner_name VARCHAR(50), country VARCHAR(50), co2_emissions INT, year INT, PRIMARY KEY (miner_name, year));INSERT INTO environmental_impact (miner_name, country, co2_emissions, year) VALUES ('Anna Taylor', 'South Africa', 120, 2020), ('Laura Johnson', 'Egypt', 100, 2020), ('Brian Kim', 'Ghana', 150, 2020);CREATE VIEW miner_year_co2_emissions AS SELECT miner_name, country, co2_emissions, year, ROW_NUMBER() OVER(PARTITION BY miner_name ORDER BY co2_emissions ASC) as emission_rank FROM environmental_impact;","completion":"SELECT context.miner_name, context.country, sql.co2_emissions, sql.emission_rank FROM environmental_impact sql JOIN miner_year_co2_emissions context ON sql.miner_name = context.miner_name WHERE context.emission_rank = 1 AND sql.country = 'Africa'"}
{"prompt":"How many employees work at each mine, categorized by their job types? with given SQL schema CREATE TABLE Mine (MineID int, MineName varchar(50), Location varchar(50)); CREATE TABLE Employee (EmployeeID int, EmployeeName varchar(50), JobType varchar(50), MineID int); INSERT INTO Mine VALUES (1, 'ABC Mine', 'Colorado'), (2, 'DEF Mine', 'Wyoming'), (3, 'GHI Mine', 'West Virginia'); INSERT INTO Employee VALUES (1, 'John Doe', 'Miner', 1), (2, 'Jane Smith', 'Engineer', 1), (3, 'Michael Lee', 'Miner', 2), (4, 'Emily Johnson', 'Admin', 2), (5, 'Robert Brown', 'Miner', 3), (6, 'Sophia Davis', 'Engineer', 3);","completion":"SELECT MineName, JobType, COUNT(*) as EmployeeCount FROM Employee INNER JOIN Mine ON Employee.MineID = Mine.MineID GROUP BY MineName, JobType;"}
{"prompt":"How many workforce diversity incidents were reported in the Southern region in 2020, excluding those reported in January? with given SQL schema CREATE TABLE diversity_incidents (incident_id INT, region_id INT, incident_date DATE); INSERT INTO diversity_incidents (incident_id, region_id, incident_date) VALUES (1, 1, '2020-02-01'), (2, 1, '2020-03-01'), (3, 2, '2020-01-01'); CREATE TABLE region (region_id INT, region_name VARCHAR(20)); INSERT INTO region (region_id, region_name) VALUES (1, 'Southern'), (2, 'Northern');","completion":"SELECT region_id, COUNT(incident_id) FROM diversity_incidents WHERE region_id = 1 AND incident_date BETWEEN '2020-02-01' AND '2020-12-31' GROUP BY region_id;"}
{"prompt":"Update the Machinery table to change the Type of MachineryID 2 to 'Bulldozer'. with given SQL schema CREATE TABLE Machinery (MachineryID INT, Type VARCHAR(50), Age INT); INSERT INTO Machinery (MachineryID, Type, Age) VALUES (1, 'Excavator', 10); INSERT INTO Machinery (MachineryID, Type, Age) VALUES (2, 'Dumper', 12); INSERT INTO Machinery (MachineryID, Type, Age) VALUES (3, 'Shovel', 16);","completion":"UPDATE Machinery SET Type = 'Bulldozer' WHERE MachineryID = 2;"}
{"prompt":"Update a compliance record's regulation and description in the compliance table with given SQL schema CREATE TABLE compliance (compliance_id INT, regulation VARCHAR(100), description VARCHAR(255), compliance_date DATE);","completion":"UPDATE compliance SET regulation = 'Data Privacy', description = 'Complied with data privacy regulations' WHERE compliance_id = 4001;"}
{"prompt":"Which artist has the highest total ticket sales? with given SQL schema CREATE TABLE tickets (artist_name TEXT, tickets_sold INT); INSERT INTO tickets (artist_name, tickets_sold) VALUES ('Taylor Swift', 1250000), ('BTS', 1500000), ('Adele', 1000000);","completion":"SELECT artist_name, SUM(tickets_sold) as total_tickets_sold FROM tickets GROUP BY artist_name ORDER BY total_tickets_sold DESC LIMIT 1;"}
{"prompt":"What is the average word count of news articles published in the \"articles\" table by month? with given SQL schema CREATE TABLE articles (id INT, title VARCHAR(100), publication_date DATE, word_count INT);","completion":"SELECT EXTRACT(MONTH FROM publication_date) AS month, AVG(word_count) AS avg_word_count FROM articles GROUP BY month;"}
{"prompt":"What is the average word count of news articles written by investigative journalists? with given SQL schema CREATE TABLE reporters (id INT, name VARCHAR(50), gender VARCHAR(10), age INT, position VARCHAR(20), country VARCHAR(50)); INSERT INTO reporters (id, name, gender, age, position, country) VALUES (1, 'Anna Smith', 'Female', 35, 'News Reporter', 'USA'); INSERT INTO reporters (id, name, gender, age, position, country) VALUES (2, 'Mike Johnson', 'Male', 40, 'Investigative Journalist', 'Canada'); INSERT INTO reporters (id, name, gender, age, position, country) VALUES (3, 'Sofia Rodriguez', 'Female', 32, 'Investigative Journalist', 'Mexico'); CREATE TABLE news_articles (id INT, title VARCHAR(100), content TEXT, publication_date DATE, reporter_id INT); INSERT INTO news_articles (id, title, content, publication_date, reporter_id) VALUES (1, 'News Article 1', 'Content of News Article 1', '2021-01-01', 2); INSERT INTO news_articles (id, title, content, publication_date, reporter_id) VALUES (2, 'News Article 2', 'Content of News Article 2', '2021-02-01', 3);","completion":"SELECT AVG(LENGTH(content) - LENGTH(REPLACE(content, ' ', '')) + 1) AS avg_word_count FROM news_articles WHERE reporter_id IN (SELECT id FROM reporters WHERE position = 'Investigative Journalist');"}
{"prompt":"What is the total amount donated by donors in the 'Regular Donors' category? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50), Category VARCHAR(20)); INSERT INTO Donors (DonorID, DonorName, Category) VALUES (1, 'John Doe', 'Young Donors'), (2, 'Jane Smith', 'Regular Donors'), (3, 'Alice Johnson', 'Young Donors'); CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL(10,2));","completion":"SELECT SUM(DonationAmount) FROM Donations INNER JOIN Donors ON Donations.DonorID = Donors.DonorID WHERE Donors.Category = 'Regular Donors';"}
{"prompt":"Delete records of players who joined after 2020-01-01 from the 'Player' table with given SQL schema CREATE TABLE Player (Player_ID INT, Name VARCHAR(50), Date_Joined DATE); INSERT INTO Player (Player_ID, Name, Date_Joined) VALUES (1, 'John Doe', '2019-06-15'), (2, 'Jane Smith', '2020-03-08'), (3, 'Alice Johnson', '2021-02-22');","completion":"DELETE FROM Player WHERE Date_Joined > '2020-01-01';"}
{"prompt":"Find the number of IoT sensors installed in each farm that use Sprinkler irrigation. with given SQL schema CREATE TABLE IoT_Sensors (id INT, sensor_type VARCHAR(50), Farm_id INT); INSERT INTO IoT_Sensors (id, sensor_type, Farm_id) VALUES (1, 'Soil Moisture', 1), (2, 'Temperature', 1), (3, 'Humidity', 2); CREATE TABLE Irrigation (id INT, Farm_id INT, irrigation_type VARCHAR(50), duration INT); INSERT INTO Irrigation (id, Farm_id, irrigation_type, duration) VALUES (1, 1, 'Sprinkler', 30), (2, 2, 'Drip', 45);","completion":"SELECT f.id, COUNT(s.id) FROM Farmers f JOIN Irrigation i ON f.id = i.Farm_id JOIN IoT_Sensors s ON f.id = s.Farm_id WHERE i.irrigation_type = 'Sprinkler' GROUP BY f.id;"}
{"prompt":"Identify the renewable energy project with the highest carbon offset (in tonnes) in 'projects' schema? with given SQL schema CREATE SCHEMA IF NOT EXISTS projects; CREATE TABLE IF NOT EXISTS projects.carbon_offset (offset_id INT, project_id INT, offset_tonnes INT); INSERT INTO projects.carbon_offset (offset_id, project_id, offset_tonnes) VALUES (1, 1, 5000), (2, 2, 7000), (3, 3, 6000);","completion":"SELECT project_id, MAX(offset_tonnes) as max_offset FROM projects.carbon_offset GROUP BY project_id;"}
{"prompt":"Find the total revenue for each cuisine type with given SQL schema CREATE TABLE Restaurants (RestaurantID int, CuisineType varchar(255)); INSERT INTO Restaurants (RestaurantID, CuisineType) VALUES (1, 'Italian'), (2, 'Mexican'), (3, 'Chinese'); CREATE TABLE Sales (SaleID int, RestaurantID int, Revenue decimal(10,2)); INSERT INTO Sales (SaleID, RestaurantID, Revenue) VALUES (1, 1, 500.00), (2, 2, 750.00), (3, 3, 300.00);","completion":"SELECT R.CuisineType, SUM(S.Revenue) as TotalRevenue FROM Restaurants R INNER JOIN Sales S ON R.RestaurantID = S.RestaurantID GROUP BY R.CuisineType;"}
{"prompt":"How many restaurants are there in each country? with given SQL schema CREATE TABLE restaurant (restaurant_id INT, country VARCHAR(50)); INSERT INTO restaurant (restaurant_id, country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'USA'), (4, 'Mexico');","completion":"SELECT country, COUNT(*) FROM restaurant GROUP BY country;"}
{"prompt":"What is the minimum price of vegan dishes in San Francisco? with given SQL schema CREATE TABLE Restaurants (id INT, name VARCHAR(50), city VARCHAR(20)); CREATE TABLE Menu (id INT, restaurant_id INT, dish VARCHAR(50), category VARCHAR(20), price DECIMAL(5,2)); INSERT INTO Restaurants (id, name, city) VALUES (1, 'VeganVibes', 'San Francisco'); INSERT INTO Menu (id, restaurant_id, dish, category, price) VALUES (1, 1, 'Tofu Stir Fry', 'Vegan', 9.99);","completion":"SELECT MIN(price) FROM Menu JOIN Restaurants ON Menu.restaurant_id = Restaurants.id WHERE Restaurants.city = 'San Francisco' AND category = 'Vegan';"}
{"prompt":"What is the total revenue for 'Italian' category in '2023'? with given SQL schema CREATE TABLE RestaurantRevenue (category VARCHAR(20), year INT, revenue FLOAT); INSERT INTO RestaurantRevenue (category, year, revenue) VALUES ('Italian', 2023, 25000.00),('Italian', 2023, 28000.00),('Italian', 2023, 30000.00);","completion":"SELECT SUM(revenue) FROM RestaurantRevenue WHERE category = 'Italian' AND year = 2023;"}
{"prompt":"List the top 3 most expensive eco-friendly products in Europe and their suppliers. with given SQL schema CREATE TABLE Suppliers (supplierID INT, supplierName VARCHAR(50), country VARCHAR(50)); CREATE TABLE Products (productID INT, productName VARCHAR(50), price DECIMAL(10,2), ecoFriendly BOOLEAN, supplierID INT);","completion":"SELECT P.productName, P.price, S.supplierName FROM (SELECT * FROM Products WHERE ecoFriendly = TRUE ORDER BY price DESC LIMIT 3) P JOIN Suppliers S ON P.supplierID = S.supplierID;"}
{"prompt":"What are the names and launch dates of satellites launched by SpaceX? with given SQL schema CREATE TABLE satellites (id INT, name VARCHAR(255), launch_date DATE); INSERT INTO satellites (id, name, launch_date) VALUES (1, 'Dragon', '2012-12-08'); INSERT INTO satellites (id, name, launch_date) VALUES (2, 'Falcon', '2013-09-29');","completion":"SELECT name, launch_date FROM satellites WHERE manufacturer = 'SpaceX';"}
{"prompt":"Insert a new record for the spacecraft 'Artemis III' into the Spacecrafts table with given SQL schema CREATE TABLE Spacecrafts (SpacecraftID INT, Name VARCHAR(50), Manufacturer VARCHAR(50), YearManufactured INT);","completion":"INSERT INTO Spacecrafts (SpacecraftID, Name, Manufacturer, YearManufactured) VALUES (3, 'Artemis III', 'NASA', 2022);"}
{"prompt":"What is the maximum number of spacewalks for each astronaut? with given SQL schema CREATE TABLE Spacewalks (id INT, astronaut_id INT, duration FLOAT, mission TEXT); CREATE TABLE Astronauts (id INT, name TEXT);","completion":"SELECT a.name, MAX(sw.id) FROM Astronauts a JOIN Spacewalks sw ON a.id = sw.astronaut_id GROUP BY a.name;"}
{"prompt":"What is the distribution of fan demographics by age range for each team? with given SQL schema CREATE TABLE fan_demographics_team (id INT, team VARCHAR(50), age_range VARCHAR(20)); INSERT INTO fan_demographics_team (id, team, age_range) VALUES (1, 'TeamA', '18-24'), (2, 'TeamA', '25-34'), (3, 'TeamB', '18-24'), (4, 'TeamB', '35-44'), (5, 'TeamB', '45-54');","completion":"SELECT team, age_range, COUNT(*) as count FROM fan_demographics_team GROUP BY team, age_range;"}
{"prompt":"What are the names of the policies related to the transportation sector? with given SQL schema CREATE TABLE policies (id INT, sector VARCHAR(20), name VARCHAR(50)); INSERT INTO policies (id, sector, name) VALUES (1, 'Transportation', 'Safety Regulations'), (2, 'Financial', 'Financial Regulation');","completion":"SELECT name FROM policies WHERE sector = 'Transportation';"}
{"prompt":"Count the number of 'Train' records in the 'PublicTransit' table where 'state' is 'California' with given SQL schema CREATE TABLE PublicTransit (transit_id INT, transit_type VARCHAR(20), city VARCHAR(20), state VARCHAR(20)); INSERT INTO PublicTransit (transit_id, transit_type, city, state) VALUES (1, 'Bus', 'New York', 'New York'), (2, 'Subway', 'New York', 'New York'), (3, 'Train', 'Los Angeles', 'California');","completion":"SELECT COUNT(*) FROM PublicTransit WHERE transit_type = 'Train' AND state = 'California';"}
{"prompt":"How many autonomous taxis were in operation in San Francisco as of January 1, 2022? with given SQL schema CREATE TABLE autonomous_taxis( taxi_id INT, taxi_type VARCHAR(50), operation_start_date DATE, operation_end_date DATE, city VARCHAR(50));","completion":"SELECT COUNT(*) FROM autonomous_taxis WHERE taxi_type = 'autonomous' AND operation_end_date >= '2022-01-01' AND operation_start_date <= '2022-01-01' AND city = 'San Francisco';"}
{"prompt":"List all garments in the \"Spring 2023\" collection that are made of silk or cotton. with given SQL schema CREATE TABLE Spring2023 (garment_id INT, garment_name VARCHAR(50), material VARCHAR(50)); INSERT INTO Spring2023 (garment_id, garment_name, material) VALUES (1, 'Linen Blend Dress', 'Linen-Hemp Blend'), (2, 'Silk Top', 'Silk'), (3, 'Recycled Polyester Skirt', 'Recycled Polyester'), (4, 'Cotton Shirt', 'Cotton');","completion":"SELECT garment_name FROM Spring2023 WHERE material IN ('Silk', 'Cotton');"}
{"prompt":"What is the number of employees in the 'education' industry? with given SQL schema CREATE TABLE if not exists employment (id INT, industry VARCHAR, number_of_employees INT); INSERT INTO employment (id, industry, number_of_employees) VALUES (1, 'manufacturing', 5000), (2, 'technology', 8000), (3, 'healthcare', 7000), (4, 'retail', 6000), (5, 'education', 9000);","completion":"SELECT SUM(number_of_employees) FROM employment WHERE industry = 'education';"}
{"prompt":"What is the total number of workers in unions involved in collective bargaining in each state? with given SQL schema CREATE TABLE unions (id INT, state VARCHAR(2), workers INT); CREATE VIEW collective_bargaining AS SELECT * FROM unions WHERE issue = 'collective_bargaining';","completion":"SELECT state, SUM(workers) FROM collective_bargaining GROUP BY state;"}
{"prompt":"What is the total waste generated in South Asia in the year 2020? with given SQL schema CREATE TABLE WasteGeneration (country VARCHAR(50), year INT, waste_generated_kg FLOAT);","completion":"SELECT SUM(waste_generated_kg) FROM WasteGeneration WHERE country IN ('India', 'Pakistan', 'Bangladesh', 'Sri Lanka', 'Afghanistan', 'Nepal', 'Bhutan') AND year = 2020;"}
{"prompt":"What was the minimum glass recycling rate in 2019 for South America and Africa? with given SQL schema CREATE TABLE RecyclingRates (year INT, region VARCHAR(50), material VARCHAR(50), recycling_rate FLOAT); INSERT INTO RecyclingRates (year, region, material, recycling_rate) VALUES (2019, 'North America', 'Glass', 0.3), (2019, 'Europe', 'Glass', 0.45), (2019, 'Asia', 'Glass', 0.4), (2019, 'South America', 'Glass', 0.2), (2019, 'Africa', 'Glass', 0.1);","completion":"SELECT MIN(recycling_rate) FROM RecyclingRates WHERE year = 2019 AND material = 'Glass' AND region IN ('South America', 'Africa');"}
{"prompt":"How many members in the West region have a premium membership? with given SQL schema CREATE TABLE memberships (id INT, member_type VARCHAR(50), region VARCHAR(50));","completion":"SELECT COUNT(*) FROM memberships WHERE member_type = 'Premium' AND region = 'West';"}
{"prompt":"SELECT MemberID, COUNT(*) as WorkoutCountToday FROM Workouts WHERE Date = CURRENT_DATE GROUP BY MemberID ORDER BY WorkoutCountToday DESC; with given SQL schema CREATE TABLE Workouts (WorkoutID INT, MemberID INT, WorkoutType VARCHAR(20), Duration INT, Date DATE); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutType, Duration, Date) VALUES (11, 1013, 'Pilates', 45, '2023-03-01'); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutType, Duration, Date) VALUES (12, 1014, 'Cycling', 60, '2023-03-01');","completion":"SELECT MemberID, WorkoutType, DATE_TRUNC('week', Date) as Week, AVG(Duration) as AverageWorkoutDurationPerWeek FROM Workouts GROUP BY MemberID, WorkoutType, Week ORDER BY Week DESC;"}
{"prompt":"How many economic diversification projects were completed in '2019'? with given SQL schema CREATE TABLE economic_diversification (id INT, project_name VARCHAR(50), sector VARCHAR(50), start_date DATE, end_date DATE, budget FLOAT); INSERT INTO economic_diversification (id, project_name, sector, start_date, end_date, budget) VALUES (1, 'Renewable Energy Investment', 'Economic Diversification', '2018-01-01', '2019-12-31', 750000);","completion":"SELECT COUNT(*) FROM economic_diversification WHERE YEAR(end_date) = 2019;"}
{"prompt":"What is the maximum and minimum population of animals for each species? with given SQL schema CREATE TABLE animal_population (species VARCHAR(50), population INT); INSERT INTO animal_population (species, population) VALUES ('Tiger', 300), ('Lion', 250), ('Elephant', 500), ('Giraffe', 200);","completion":"SELECT species, MIN(population) OVER (PARTITION BY species) as min_population, MAX(population) OVER (PARTITION BY species) as max_population FROM animal_population ORDER BY species;"}
{"prompt":"What is the total conservation funding per region for the last 5 years? with given SQL schema CREATE TABLE conservation_funding (id INT, region VARCHAR(255), funding FLOAT, year INT);","completion":"SELECT region, SUM(funding) as total_funding, EXTRACT(YEAR FROM date_trunc('year', current_date)) - sequence AS years_ago FROM conservation_funding, generate_series(1, 5) sequence GROUP BY region, sequence ORDER BY years_ago DESC;"}
{"prompt":"What is the average dissolved oxygen level for each species in our fish farms? with given SQL schema CREATE TABLE fish_farms (id INT, name TEXT, location TEXT, water_type TEXT); INSERT INTO fish_farms (id, name, location, water_type) VALUES (1, 'Farm A', 'Seattle', 'Saltwater'); INSERT INTO fish_farms (id, name, location, water_type) VALUES (2, 'Farm B', 'Portland', 'Freshwater'); CREATE TABLE fish_species (id INT, name TEXT, average_dissolved_oxygen FLOAT); INSERT INTO fish_species (id, name, average_dissolved_oxygen) VALUES (1, 'Salmon', 6.5); INSERT INTO fish_species (id, name, average_dissolved_oxygen) VALUES (2, 'Trout', 7.0); CREATE TABLE fish_inventory (fish_farm_id INT, fish_species_id INT, quantity INT); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (1, 1, 500); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (1, 2, 300); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (2, 1, 400); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (2, 2, 600);","completion":"SELECT fs.name AS species_name, AVG(av.dissolved_oxygen) AS avg_dissolved_oxygen FROM fish_inventory fi JOIN fish_farms ff ON fi.fish_farm_id = ff.id JOIN fish_species fs ON fi.fish_species_id = fs.id JOIN (SELECT fish_species_id, AVG(dissolved_oxygen) AS dissolved_oxygen FROM water_quality GROUP BY fish_species_id) av ON fs.id = av.fish_species_id GROUP BY fs.name;"}
{"prompt":"What is the average water temperature in the Pacific Ocean for the month of July? with given SQL schema CREATE TABLE pacific_ocean_temp (id INT, date DATE, temp FLOAT); INSERT INTO pacific_ocean_temp (id, date, temp) VALUES (1, '2021-07-01', 20.5), (2, '2021-07-02', 21.2), (3, '2021-07-03', 22.0);","completion":"SELECT AVG(temp) FROM pacific_ocean_temp WHERE EXTRACT(MONTH FROM date) = 7 AND EXTRACT(YEAR FROM date) = 2021 AND ocean_name = 'Pacific Ocean';"}
{"prompt":"List the building permits issued in New York City for the construction of multi-family buildings since 2015. with given SQL schema CREATE TABLE building_permits (permit_id INT, city VARCHAR(50), building_type VARCHAR(20), issue_date DATE); INSERT INTO building_permits (permit_id, city, building_type, issue_date) VALUES (1, 'NYC', 'Multi-family', '2015-04-01'), (2, 'NYC', 'Single-family', '2016-08-15'), (3, 'LA', 'Multi-family', '2017-12-25');","completion":"SELECT permit_id, city, building_type, issue_date FROM building_permits WHERE city = 'NYC' AND building_type = 'Multi-family' AND issue_date >= '2015-01-01';"}
{"prompt":"What is the average project timeline for sustainable building projects in the city of Seattle? with given SQL schema CREATE TABLE project (id INT, name VARCHAR(255), city VARCHAR(255), timeline FLOAT);CREATE TABLE sustainable_building (id INT, project_id INT, sustainable_practice VARCHAR(255));","completion":"SELECT AVG(project.timeline) FROM project INNER JOIN sustainable_building ON project.id = sustainable_building.project_id WHERE project.city = 'Seattle';"}
{"prompt":"How many climate mitigation projects were initiated in Latin America since 2015? with given SQL schema CREATE TABLE mitigation_projects (project_id INT, year INT, region VARCHAR(255));","completion":"SELECT COUNT(*) FROM mitigation_projects WHERE year >= 2015 AND region = 'Latin America';"}
{"prompt":"What was the total investment in climate communication in Europe and Central Asia in 2019? with given SQL schema CREATE TABLE climate_investments (id INT, region VARCHAR(50), category VARCHAR(50), year INT, investment FLOAT); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (1, 'Western Europe', 'Climate Communication', 2018, 500000); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (2, 'Eastern Europe', 'Climate Adaptation', 2019, 700000); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (3, 'Central Asia', 'Climate Communication', 2019, 800000);","completion":"SELECT SUM(investment) FROM climate_investments WHERE category = 'Climate Communication' AND (region = 'Europe' OR region = 'Central Asia') AND year = 2019;"}
{"prompt":"Find the number of clinical trials for 'DrugE' that ended in phase 3? with given SQL schema CREATE TABLE clinical_trials (drug_name TEXT, phase INT); INSERT INTO clinical_trials (drug_name, phase) VALUES ('DrugE', 3), ('DrugF', 2);","completion":"SELECT COUNT(*) FROM clinical_trials WHERE drug_name = 'DrugE' AND phase = 3;"}
{"prompt":"How many cases of Measles were reported in Brazil in 2014? with given SQL schema CREATE TABLE measles_reports (id INT, disease VARCHAR(50), location VARCHAR(50), year INT, reported INT); INSERT INTO measles_reports (id, disease, location, year, reported) VALUES (1, 'Measles', 'Brazil', 2014, 1760), (2, 'Measles', 'Brazil', 2013, 3254);","completion":"SELECT reported FROM measles_reports WHERE disease = 'Measles' AND location = 'Brazil' AND year = 2014;"}
{"prompt":"Display the number of exits by year with given SQL schema CREATE TABLE exit (id INT, company_id INT, exit_year INT, exit_type TEXT);","completion":"SELECT exit_year, COUNT(*) FROM exit GROUP BY exit_year;"}
{"prompt":"What is the average disability accommodation budget by state? with given SQL schema CREATE TABLE disability_accommodations_state (accom_id INT, accom_name TEXT, budget DECIMAL(10,2), state_id INT);CREATE TABLE states (state_id INT, state_name TEXT);","completion":"SELECT s.state_name, AVG(da.budget) AS avg_budget FROM disability_accommodations_state da INNER JOIN states s ON da.state_id = s.state_id GROUP BY s.state_name;"}
{"prompt":"What is the maximum population size of all marine species in the North Atlantic, grouped by conservation status?\" with given SQL schema CREATE TABLE marine_species_population (species_name VARCHAR(255), region VARCHAR(255), max_population_size FLOAT, conservation_status VARCHAR(255)); INSERT INTO marine_species_population (species_name, region, max_population_size, conservation_status) VALUES ('Basking Shark', 'North Atlantic', 2000, 'Fully Protected'), ('Great White Shark', 'North Atlantic', 3000, 'Partially Protected'), ('North Atlantic Right Whale', 'North Atlantic', 400, 'Fully Protected');","completion":"SELECT conservation_status, MAX(max_population_size) as max_population_size FROM marine_species_population WHERE region = 'North Atlantic' GROUP BY conservation_status;"}
{"prompt":"List the dapps that have deployed the fewest smart contracts in the 'Polygon' network. with given SQL schema CREATE TABLE polygon_dapps (dapp_name VARCHAR(20), network VARCHAR(20), smart_contracts INT); INSERT INTO polygon_dapps (dapp_name, network, smart_contracts) VALUES ('QuickSwap', 'Polygon', 20), ('Dfyn', 'Polygon', 30), ('MaticNetwork', 'Polygon', 40);","completion":"SELECT dapp_name, network, smart_contracts, DENSE_RANK() OVER (ORDER BY smart_contracts ASC) as rank FROM polygon_dapps WHERE network = 'Polygon';"}
{"prompt":"What is the number of smart contracts developed by individuals from underrepresented communities in the Ethereum network? with given SQL schema CREATE TABLE if not exists smart_contracts (contract_id INT, contract_address VARCHAR(255), developer_community VARCHAR(255)); INSERT INTO smart_contracts (contract_id, contract_address, developer_community) VALUES (1, '0x123...', 'Women in Tech'), (2, '0x456...', 'Minority Ethnic Group'), (3, '0x789...', 'LGBTQ+'), (4, '0xabc...', 'People with Disabilities'), (5, '0xdef...', 'Indigenous People'), (6, '0xghi...', 'Young Developers');","completion":"SELECT COUNT(*) FROM smart_contracts WHERE developer_community IN ('Women in Tech', 'Minority Ethnic Group', 'LGBTQ+', 'People with Disabilities', 'Indigenous People', 'Young Developers');"}
{"prompt":"What is the maximum safety rating for products in the skincare category that are not tested on animals? with given SQL schema CREATE TABLE Products (id INT, ProductName VARCHAR(50), Category VARCHAR(50), Price DECIMAL(5,2), IsCrueltyFree BOOLEAN); CREATE TABLE ProductSafety (id INT, ProductID INT, SafetyRating DECIMAL(3,2), TestDate DATE); CREATE TABLE CrueltyFreeCertification (id INT, ProductID INT, CertificationDate DATE);","completion":"SELECT MAX(PS.SafetyRating) as HighestSafetyRating FROM ProductSafety PS JOIN Products P ON PS.ProductID = P.id JOIN CrueltyFreeCertification CFC ON P.id = CFC.ProductID WHERE P.Category = 'skincare' AND P.IsCrueltyFree = TRUE AND CFC.CertificationDate IS NOT NULL;"}
{"prompt":"Which ingredients used in cosmetics are sourced from countries with high biodiversity and have been certified as organic? with given SQL schema CREATE TABLE Ingredients (Ingredient_ID INT, Ingredient_Name TEXT, Is_Organic BOOLEAN); INSERT INTO Ingredients (Ingredient_ID, Ingredient_Name, Is_Organic) VALUES (1, 'Aloe Vera', true), (2, 'Shea Butter', true), (3, 'Palm Oil', false); CREATE TABLE Ingredient_Sources (Ingredient_ID INT, Source_Country TEXT); INSERT INTO Ingredient_Sources (Ingredient_ID, Source_Country) VALUES (1, 'Mexico'), (2, 'Ghana'), (3, 'Indonesia');","completion":"SELECT I.Ingredient_Name FROM Ingredients I INNER JOIN Ingredient_Sources ISrc ON I.Ingredient_ID = ISrc.Ingredient_ID WHERE I.Is_Organic = true AND ISrc.Source_Country IN ('Brazil', 'Indonesia', 'Colombia', 'Madagascar', 'Peru');"}
{"prompt":"Show the number of threat occurrences per threat type and month in the 'threat_intelligence' table with given SQL schema CREATE TABLE threat_intelligence (threat_id INT, threat_type VARCHAR(50), threat_level VARCHAR(10), occurrence_date DATE);","completion":"SELECT EXTRACT(MONTH FROM occurrence_date) as month, threat_type, COUNT(*) as threat_count FROM threat_intelligence GROUP BY month, threat_type;"}
{"prompt":"Show veteran employment statistics for the year 2020 with given SQL schema CREATE TABLE veteran_employment (year INT, total_veterans INT, employed_veterans INT, unemployed_veterans INT);","completion":"SELECT * FROM veteran_employment WHERE year = 2020;"}
{"prompt":"What is the total number of peacekeeping operations in the Middle East and their average duration? with given SQL schema CREATE TABLE PeacekeepingOperationsMiddleEast (id INT, operation VARCHAR(50), location VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO PeacekeepingOperationsMiddleEast (id, operation, location, start_date, end_date) VALUES (1, 'Operation Iraqi Freedom', 'Iraq', '2003-03-20', '2011-12-15'), (2, 'Operation Enduring Freedom', 'Afghanistan', '2001-10-07', '2014-12-28');","completion":"SELECT COUNT(*) AS total_operations, AVG(end_date - start_date) AS avg_duration FROM PeacekeepingOperationsMiddleEast;"}
{"prompt":"What is the average transaction amount for retail customers in New York? with given SQL schema CREATE TABLE retail_customers (customer_id INT, name VARCHAR(50), state VARCHAR(20), transaction_amount DECIMAL(10,2)); INSERT INTO retail_customers (customer_id, name, state, transaction_amount) VALUES (1, 'John Doe', 'NY', 120.50), (2, 'Jane Smith', 'NY', 75.30);","completion":"SELECT AVG(transaction_amount) FROM retail_customers WHERE state = 'NY';"}
{"prompt":"What is the total assets of clients who have invested in both stocks and bonds? with given SQL schema CREATE TABLE clients (client_id INT, name TEXT, age INT, gender TEXT, total_assets DECIMAL(10,2)); INSERT INTO clients VALUES (1, 'John Doe', 35, 'Male', 250000.00), (2, 'Jane Smith', 45, 'Female', 500000.00); CREATE TABLE investments (client_id INT, investment_type TEXT); INSERT INTO investments VALUES (1, 'Stocks'), (1, 'Bonds'), (2, 'Stocks');","completion":"SELECT c.total_assets FROM clients c INNER JOIN investments i ON c.client_id = i.client_id WHERE i.investment_type IN ('Stocks', 'Bonds') GROUP BY c.client_id HAVING COUNT(DISTINCT i.investment_type) = 2;"}
{"prompt":"Show the total tonnage of cargo handled by each port in the South America region, ranked in descending order, including ports with no cargo. with given SQL schema CREATE TABLE ports(port_id INT, port_name TEXT, region TEXT);CREATE TABLE cargo(cargo_id INT, port_id INT, tonnage INT);INSERT INTO ports VALUES (1,'Port A','South America'),(2,'Port B','North America'),(3,'Port C','South America');INSERT INTO cargo VALUES (1,1,500),(2,1,800),(3,2,300),(4,3,500),(5,1,700);","completion":"SELECT p.port_name, COALESCE(SUM(c.tonnage),0) as total_tonnage FROM ports p LEFT JOIN cargo c ON p.port_id = c.port_id WHERE p.region = 'South America' GROUP BY p.port_name ORDER BY total_tonnage DESC;"}
{"prompt":"Add a new record to the 'resources' table for a rural health center in India. with given SQL schema CREATE SCHEMA rural; CREATE TABLE rural.resources (id INT, resource_type TEXT, country TEXT);","completion":"INSERT INTO rural.resources (id, resource_type, country) VALUES (1, 'rural health center', 'India');"}
{"prompt":"What is the average budget of military technology programs in the Asia-Pacific region, excluding programs with a budget over $500 million? with given SQL schema CREATE TABLE MilitaryBudget (region VARCHAR(255), program VARCHAR(255), budget DECIMAL(10,2)); INSERT INTO MilitaryBudget (region, program, budget) VALUES ('Asia-Pacific', 'ProgramA', 400000000.00), ('Asia-Pacific', 'ProgramB', 600000000.00), ('Europe', 'ProgramC', 300000000.00);","completion":"SELECT AVG(budget) FROM MilitaryBudget WHERE region = 'Asia-Pacific' AND budget <= 500000000;"}
{"prompt":"What is the total budget for program 'Sports' in 2021? with given SQL schema CREATE TABLE Budget (program_id INT, program_name VARCHAR(255), year INT, allocated_budget DECIMAL(10, 2)); INSERT INTO Budget (program_id, program_name, year, allocated_budget) VALUES (4, 'Sports', 2021, 5000.00), (1, 'Arts', 2020, 2000.00), (2, 'Education', 2020, 3000.00), (3, 'Environment', 2020, 4000.00), (4, 'Sports', 2020, 4500.00);","completion":"SELECT SUM(allocated_budget) FROM Budget WHERE program_name = 'Sports' AND year = 2021;"}
{"prompt":"Who are the top 3 donors in terms of total donation amount? with given SQL schema CREATE TABLE Donors (DonorID int, Name varchar(100), TotalDonations decimal(10,2)); INSERT INTO Donors (DonorID, Name, TotalDonations) VALUES (1, 'John Doe', 150.00); INSERT INTO Donors (DonorID, Name, TotalDonations) VALUES (2, 'Jane Smith', 250.00);","completion":"SELECT Name, TotalDonations FROM Donors ORDER BY TotalDonations DESC LIMIT 3;"}
{"prompt":"Alter 'Courses' table to add a column 'StudentsEnrolled' with given SQL schema CREATE TABLE Students (StudentId INT, Name VARCHAR(50), Age INT); INSERT INTO Students (StudentId, Name, Age) VALUES (1001, 'John Doe', 16); CREATE VIEW StudentNames AS SELECT * FROM Students; CREATE TABLE Courses (CourseId INT, CourseName VARCHAR(50), Instructor VARCHAR(50), StudentsEnrolled INT); INSERT INTO Courses (CourseId, CourseName, Instructor, StudentsEnrolled) VALUES (1001, 'Introduction to Programming', 'Mr. Smith', 0);","completion":"ALTER TABLE Courses ADD COLUMN StudentsEnrolled INT;"}
{"prompt":"How many employees were hired in each month of 2022? with given SQL schema CREATE TABLE Employees (EmployeeID INT, HireDate DATE); INSERT INTO Employees (EmployeeID, HireDate) VALUES (1, '2022-01-15'); INSERT INTO Employees (EmployeeID, HireDate) VALUES (2, '2022-02-01');","completion":"SELECT EXTRACT(MONTH FROM HireDate) AS Month, COUNT(*) AS NumberOfHires FROM Employees WHERE HireDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Month;"}
{"prompt":"How many wells are there in total in the 'CaspianSea' schema? with given SQL schema CREATE TABLE CaspianSea.wells (well_id INT); INSERT INTO CaspianSea.wells (well_id) VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);","completion":"SELECT COUNT(*) FROM CaspianSea.wells;"}
{"prompt":"Update the 'oil_production' value for the record with 'well_id' = 2 in the 'production_figures' table to 2000 with given SQL schema CREATE TABLE production_figures (well_id INT, year INT, oil_production INT, gas_production INT); INSERT INTO production_figures (well_id, year, oil_production, gas_production) VALUES (1, 2019, 1000, 2000000); INSERT INTO production_figures (well_id, year, oil_production, gas_production) VALUES (2, 2020, 1500, 2500000);","completion":"UPDATE production_figures SET oil_production = 2000 WHERE well_id = 2;"}
{"prompt":"How many educational institutions in 'refugee_camps' have 'education_support' as one of their services? with given SQL schema CREATE TABLE refugee_camps (id INT, name VARCHAR(50), type VARCHAR(50), num_edu_institutions INT, services VARCHAR(50));","completion":"SELECT num_edu_institutions FROM refugee_camps WHERE services LIKE '%education_support%';"}
{"prompt":"Which organizations have contributed more than $50,000 for 'Community Development' sector in 'South America'? with given SQL schema CREATE TABLE Contributions_South_America (id INT, organization VARCHAR(50), sector VARCHAR(50), amount DECIMAL(10,2));","completion":"SELECT organization FROM Contributions_South_America WHERE sector = 'Community Development' AND amount > 50000 AND location = 'South America';"}
{"prompt":"What is the minimum budget for an AI project in Europe? with given SQL schema CREATE TABLE ai_projects (id INT, country VARCHAR(255), budget DECIMAL(10, 2)); INSERT INTO ai_projects (id, country, budget) VALUES (1, 'Germany', 400000.00), (2, 'France', 350000.00), (3, 'UK', 300000.00), (4, 'Spain', 450000.00);","completion":"SELECT MIN(budget) FROM ai_projects WHERE country = 'UK';"}
{"prompt":"What is the total number of employees working in companies that have implemented ethical AI? with given SQL schema CREATE TABLE Companies (id INT, name TEXT, has_ethical_ai BOOLEAN, num_employees INT); INSERT INTO Companies (id, name, has_ethical_ai, num_employees) VALUES (1, 'TechCo', true, 1000), (2, 'GreenTech', true, 1500), (3, 'EthicalLabs', true, 750), (4, 'Tech4All', false, 800), (5, 'InclusiveTech', false, 1200);","completion":"SELECT SUM(num_employees) FROM Companies WHERE has_ethical_ai = true;"}
{"prompt":"What is the minimum number of bikes available at each station in Paris? with given SQL schema CREATE TABLE bike_stations (station_id INT, city VARCHAR(50), num_bikes INT); INSERT INTO bike_stations (station_id, city, num_bikes) VALUES (1, 'Paris', 15), (2, 'Paris', 20), (3, 'Paris', 10);","completion":"SELECT station_id, MIN(num_bikes) FROM bike_stations WHERE city = 'Paris' GROUP BY station_id;"}
{"prompt":"What is the percentage of accessible buses and trams in the fleet? with given SQL schema CREATE TABLE fleet (vehicle_id INT, type VARCHAR(50), accessibility BOOLEAN); INSERT INTO fleet VALUES (1, 'Bus', TRUE), (2, 'Bus', FALSE), (3, 'Tram', TRUE), (4, 'Tram', TRUE);","completion":"SELECT type, (COUNT(*) FILTER (WHERE accessibility = TRUE) * 100.0 \/ COUNT(*)) AS percentage FROM fleet GROUP BY type;"}
{"prompt":"Update the material_waste table to set recycling_rate to 35 for all materials with type as 'Plastic' with given SQL schema CREATE TABLE material_waste (id INT PRIMARY KEY, material_name VARCHAR(255), type VARCHAR(255), recycling_rate INT); INSERT INTO material_waste (id, material_name, type, recycling_rate) VALUES (1, 'Bottle', 'Plastic', 30), (2, 'Bag', 'Plastic', 25), (3, 'Frame', 'Metal', 40);","completion":"UPDATE material_waste SET recycling_rate = 35 WHERE type = 'Plastic';"}
{"prompt":"What is the average carbon footprint of clothing items made with recycled materials? with given SQL schema CREATE TABLE RecycledClothing (id INT, carbon_footprint DECIMAL(5,2)); INSERT INTO RecycledClothing VALUES (1, 10.50), (2, 12.00), (3, 11.25);","completion":"SELECT AVG(carbon_footprint) FROM RecycledClothing;"}
{"prompt":"Which materials in the 'inventory' table have a quantity of at least 100 and are not used in the production of any product in the 'products' table? with given SQL schema CREATE TABLE inventory(id INT, material VARCHAR(255), quantity INT); CREATE TABLE products(id INT, material VARCHAR(255), quantity INT); INSERT INTO inventory(id, material, quantity) VALUES (1, 'organic cotton', 75), (2, 'conventional cotton', 100), (3, 'organic cotton', 30), (4, 'hemp', 60); INSERT INTO products(id, material, quantity) VALUES (1, 'organic cotton', 150), (2, 'conventional cotton', 200), (3, 'hemp', 100);","completion":"SELECT material FROM inventory i WHERE quantity >= 100 AND NOT EXISTS (SELECT * FROM products p WHERE i.material = p.material);"}
{"prompt":"What is the average fabric waste (in kg) for each textile supplier in the NY region? with given SQL schema CREATE TABLE TextileSuppliers (SupplierID INT, SupplierName TEXT, Region TEXT, AvgFabricWaste FLOAT); INSERT INTO TextileSuppliers (SupplierID, SupplierName, Region, AvgFabricWaste) VALUES (1, 'Supplier1', 'NY', 15.5), (2, 'Supplier2', 'NY', 12.3), (3, 'Supplier3', 'NJ', 18.6);","completion":"SELECT Region, AVG(AvgFabricWaste) FROM TextileSuppliers WHERE Region = 'NY' GROUP BY Region;"}
{"prompt":"What is the name and sensitivity of the biosensor technology with the lowest sensitivity? with given SQL schema CREATE SCHEMA if not exists biosensors;CREATE TABLE if not exists biosensors.technologies(id INT, name TEXT, sensitivity FLOAT);INSERT INTO biosensors.technologies(id, name, sensitivity) VALUES (1, 'TechnologyA', 95.2), (2, 'TechnologyB', 98.7), (3, 'TechnologyC', 99.4);","completion":"SELECT name, sensitivity FROM biosensors.technologies ORDER BY sensitivity ASC LIMIT 1;"}
{"prompt":"Which graduate students have not received any research grants? with given SQL schema CREATE TABLE grad_students (id INT, name TEXT, department TEXT); INSERT INTO grad_students (id, name, department) VALUES (1, 'John Doe', 'Computer Science'), (2, 'Jane Smith', 'Mathematics'); CREATE TABLE research_grants (id INT, student_id INT, title TEXT); INSERT INTO research_grants (id, student_id, title) VALUES (1, 3, 'Machine Learning'), (2, 4, 'Graph Theory');","completion":"SELECT g.name FROM grad_students g LEFT JOIN research_grants r ON g.id = r.student_id WHERE r.id IS NULL;"}
{"prompt":"Which smart city initiatives have been implemented in a given city? with given SQL schema CREATE TABLE City (city_id INT, city_name VARCHAR(50)); CREATE TABLE Initiative (initiative_id INT, initiative_name VARCHAR(50), city_id INT);","completion":"SELECT Initiative.initiative_name FROM City JOIN Initiative ON City.city_id = Initiative.city_id WHERE City.city_name = 'CityName';"}
{"prompt":"Delete all records from the \"virtual_tours\" table where the \"platform\" is \"WebXR\" with given SQL schema CREATE TABLE virtual_tours (id INT, name VARCHAR(50), platform VARCHAR(50));","completion":"DELETE FROM virtual_tours WHERE platform = 'WebXR';"}
{"prompt":"Delete the record for the 'Virtual Tour of the Great Wall' from the database. with given SQL schema CREATE TABLE tours (id INT, name TEXT, location TEXT); INSERT INTO tours (id, name, location) VALUES (1, 'Virtual Tour of the Great Wall', 'China');","completion":"DELETE FROM tours WHERE name = 'Virtual Tour of the Great Wall' AND location = 'China';"}
{"prompt":"What is the ranking of hotels in the 'asia_hotels' view by online travel agency bookings? with given SQL schema CREATE VIEW asia_hotels AS SELECT * FROM hotels WHERE continent = 'Asia'; CREATE VIEW online_travel_agency_bookings AS SELECT hotel_id, COUNT(*) as bookings FROM online_travel_agency GROUP BY hotel_id;","completion":"SELECT name, ROW_NUMBER() OVER (ORDER BY bookings DESC) as ranking FROM asia_hotels JOIN online_travel_agency_bookings ON asia_hotels.id = online_travel_agency_bookings.hotel_id;"}
{"prompt":"What is the maximum and minimum temperature difference between any two Arctic research stations? with given SQL schema CREATE TABLE arctic_stations (id INT, name TEXT, location TEXT, temperature DECIMAL(5,2)); INSERT INTO arctic_stations (id, name, location, temperature) VALUES (1, 'Station A', 'Greenland', 2.3), (2, 'Station B', 'Canada', -5.2);","completion":"SELECT a.name as station1, b.name as station2, MAX(ABS(a.temperature - b.temperature)) as temp_diff FROM arctic_stations a, arctic_stations b ORDER BY temp_diff DESC LIMIT 1"}
{"prompt":"How many whale species are in the Southern Ocean? with given SQL schema CREATE TABLE SouthernOcean (whale_species TEXT, population INT); INSERT INTO SouthernOcean (whale_species, population) VALUES ('Blue Whale', 2500), ('Fin Whale', 4000), ('Humpback Whale', 1500);","completion":"SELECT COUNT(whale_species) FROM SouthernOcean WHERE whale_species LIKE '%Whale%';"}
{"prompt":"List all unique marine species observed in 'north_pole' and 'south_pole'. with given SQL schema CREATE TABLE polar_species_observations (id INTEGER, species_name VARCHAR(255), pole VARCHAR(255));","completion":"SELECT DISTINCT species_name FROM polar_species_observations WHERE pole IN ('North Pole', 'South Pole');"}
{"prompt":"What is the minimum temperature (in degrees Celsius) recorded in the Indian Ocean in the last decade? with given SQL schema CREATE TABLE ocean_temperature (year INT, location TEXT, temperature FLOAT); INSERT INTO ocean_temperature (year, location, temperature) VALUES (2011, 'Indian Ocean', 26.0), (2012, 'Indian Ocean', 26.5), (2013, 'Indian Ocean', 27.0), (2014, 'Indian Ocean', 27.5), (2015, 'Indian Ocean', 28.0), (2016, 'Indian Ocean', 28.5), (2017, 'Indian Ocean', 29.0), (2018, 'Indian Ocean', 29.5), (2019, 'Indian Ocean', 30.0), (2020, 'Indian Ocean', 30.5);","completion":"SELECT MIN(temperature) FROM ocean_temperature WHERE year BETWEEN 2011 AND 2020 AND location = 'Indian Ocean';"}
{"prompt":"What is the total population of all marine species in the Pacific ocean? with given SQL schema CREATE TABLE marine_species (id INT, name TEXT, population INT, location TEXT); INSERT INTO marine_species (id, name, population, location) VALUES (1, 'Dolphin', 50, 'Atlantic'); INSERT INTO marine_species (id, name, population, location) VALUES (2, 'Turtle', 25, 'Atlantic'); INSERT INTO marine_species (id, name, population, location) VALUES (3, 'Shark', 100, 'Pacific');","completion":"SELECT SUM(population) FROM marine_species WHERE location = 'Pacific';"}
{"prompt":"How many shows were released in each genre, and what is the total runtime for each genre? with given SQL schema CREATE TABLE shows (id INT, title VARCHAR(100), genre VARCHAR(50), country VARCHAR(50), release_year INT, runtime INT);","completion":"SELECT genre, COUNT(*), SUM(runtime) FROM shows GROUP BY genre;"}
{"prompt":"What is the total runtime of TV shows with diverse casts? with given SQL schema CREATE TABLE tv_shows (show_id INT, runtime_minutes INT, cast_diverse BOOLEAN);","completion":"SELECT SUM(runtime_minutes) FROM tv_shows WHERE cast_diverse = TRUE;"}
{"prompt":"What was the average military equipment sales price per quarter in 2019? with given SQL schema CREATE TABLE equipment_sales(id INT, quarter INT, year INT, equipment VARCHAR(255), price FLOAT);","completion":"SELECT quarter, AVG(price) FROM equipment_sales WHERE year = 2019 GROUP BY quarter;"}
{"prompt":"What is the total CO2 emission for each equipment type, excluding equipment that is older than 8 years? with given SQL schema CREATE TABLE EmissionData (EquipmentID INT, EquipmentType VARCHAR(50), CO2Emission INT, Age INT); INSERT INTO EmissionData (EquipmentID, EquipmentType, CO2Emission, Age) VALUES (1, 'Excavator', 50, 8); INSERT INTO EmissionData (EquipmentID, EquipmentType, CO2Emission, Age) VALUES (2, 'Haul Truck', 70, 7); INSERT INTO EmissionData (EquipmentID, EquipmentType, CO2Emission, Age) VALUES (3, 'Shovel', 30, 6); INSERT INTO EmissionData (EquipmentID, EquipmentType, CO2Emission, Age) VALUES (4, 'Drilling Rig', 40, 3);","completion":"SELECT EquipmentType, SUM(CO2Emission) as TotalCO2Emission FROM EmissionData WHERE Age <= 8 GROUP BY EquipmentType;"}
{"prompt":"What are the top 5 countries with the most broadband subscribers? with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, country VARCHAR(50)); INSERT INTO broadband_subscribers (subscriber_id, country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'Brazil'), (5, 'USA'), (6, 'Canada'), (7, 'Germany'), (8, 'France'); CREATE TABLE country_codes (country VARCHAR(50), code CHAR(2)); INSERT INTO country_codes (country, code) VALUES ('USA', 'US'), ('Canada', 'CA'), ('Mexico', 'MX'), ('Brazil', 'BR'), ('Germany', 'DE'), ('France', 'FR');","completion":"SELECT bs.country, COUNT(bs.subscriber_id) AS num_subscribers FROM broadband_subscribers bs JOIN country_codes cc ON bs.country = cc.country GROUP BY bs.country ORDER BY num_subscribers DESC LIMIT 5;"}
{"prompt":"What is the total number of postpaid and prepaid mobile subscribers in each region? with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, subscriber_type VARCHAR(10), region VARCHAR(20)); INSERT INTO mobile_subscribers (subscriber_id, subscriber_type, region) VALUES (1, 'postpaid', 'West'), (2, 'prepaid', 'East'), (3, 'postpaid', 'North'), (4, 'prepaid', 'South'), (5, 'postpaid', 'East');","completion":"SELECT region, COUNT(*) as total_subscribers FROM mobile_subscribers GROUP BY region;"}
{"prompt":"How many non-profit organizations are there in the 'social_services' sector with an annual revenue greater than $500,000? with given SQL schema CREATE TABLE organizations (org_id INT, org_name TEXT, sector TEXT, annual_revenue FLOAT); INSERT INTO organizations (org_id, org_name, sector, annual_revenue) VALUES (1, 'Habitat for Humanity', 'social_services', 600000.00), (2, 'Red Cross', 'emergency_services', 800000.00);","completion":"SELECT COUNT(*) FROM organizations WHERE sector = 'social_services' AND annual_revenue > 500000.00;"}
{"prompt":"What is the mission statement for the nonprofit with the lowest average grant amount? with given SQL schema CREATE TABLE Nonprofits (NonprofitID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), MissionStatement TEXT); CREATE TABLE Grants (GrantID INT, DonorID INT, NonprofitID INT, GrantAmount DECIMAL(10,2), Date DATE);","completion":"SELECT MissionStatement FROM Nonprofits N WHERE N.NonprofitID = (SELECT G.NonprofitID FROM Grants G GROUP BY G.NonprofitID ORDER BY AVG(GrantAmount) ASC LIMIT 1);"}
{"prompt":"Insert a new record into the \"DeepSeaExploration\" table with values (1, 'Atlantic Ocean', 'Successful') with given SQL schema CREATE TABLE DeepSeaExploration (Id INT, Location VARCHAR(20), Status VARCHAR(10));","completion":"INSERT INTO DeepSeaExploration (Id, Location, Status) VALUES (1, 'Atlantic Ocean', 'Successful');"}
{"prompt":"What is the maximum score achieved in the 'scores' table? with given SQL schema CREATE TABLE scores (player_id INT, game_id INT, score FLOAT); INSERT INTO scores VALUES (1, 1, 95.6), (2, 1, 98.7), (3, 2, 85.2), (4, 2, 88.3), (5, 3, 120.5), (6, 3, 125.8);","completion":"SELECT MAX(score) FROM scores;"}
{"prompt":"List the top 3 countries with the most players in Mobile games. with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20), FavoriteGame VARCHAR(10)); INSERT INTO Players (PlayerID, Age, Gender, Country, FavoriteGame) VALUES (1, 25, 'Male', 'USA', 'Mobile'); INSERT INTO Players (PlayerID, Age, Gender, Country, FavoriteGame) VALUES (2, 30, 'Female', 'Canada', 'Mobile'); INSERT INTO Players (PlayerID, Age, Gender, Country, FavoriteGame) VALUES (3, 22, 'Male', 'Mexico', 'Mobile');","completion":"SELECT Country, COUNT(PlayerID) as NumberOfPlayers FROM Players WHERE FavoriteGame = 'Mobile' GROUP BY Country ORDER BY NumberOfPlayers DESC LIMIT 3;"}
{"prompt":"Show the youngest player from the 'PlayerData' table with given SQL schema CREATE TABLE PlayerData (PlayerID INT, Name VARCHAR(50), Age INT, Country VARCHAR(50)); INSERT INTO PlayerData (PlayerID, Name, Age, Country) VALUES ('1', 'John Doe', '25', 'USA'), ('2', 'Jane Smith', '30', 'Canada'), ('3', 'Mike Johnson', '22', 'USA'), ('4', 'Sarah Lee', '28', 'Canada'), ('5', 'Lucas Martinez', '35', 'Mexico');","completion":"SELECT * FROM PlayerData ORDER BY Age LIMIT 1;"}
{"prompt":"What is the average age of players who play multiplayer games? with given SQL schema CREATE TABLE players (id INT, age INT, multiplayer BOOLEAN); INSERT INTO players (id, age, multiplayer) VALUES (1, 25, true), (2, 30, false), (3, 22, true), (4, 35, true);","completion":"SELECT AVG(age) FROM players WHERE multiplayer = true;"}
{"prompt":"What is the minimum price per kilogram of Gadolinium imported by South Korea from all countries in the last 5 years? with given SQL schema CREATE TABLE Gadolinium_Imports (id INT PRIMARY KEY, year INT, importing_country VARCHAR(20), exporting_country VARCHAR(20), quantity INT, price PER_KG); INSERT INTO Gadolinium_Imports (id, year, importing_country, exporting_country, quantity, price) VALUES (1, 2017, 'South Korea', 'Australia', 15, 17), (2, 2018, 'South Korea', 'Australia', 16, 18), (3, 2019, 'South Korea', 'Australia', 17, 19), (4, 2020, 'South Korea', 'Australia', 18, 20), (5, 2021, 'South Korea', 'Australia', 19, 21), (6, 2017, 'South Korea', 'China', 16, 18), (7, 2018, 'South Korea', 'China', 17, 19), (8, 2019, 'South Korea', 'China', 18, 20), (9, 2020, 'South Korea', 'China', 19, 21), (10, 2021, 'South Korea', 'China', 20, 22);","completion":"SELECT MIN(price) FROM Gadolinium_Imports WHERE importing_country = 'South Korea' GROUP BY year ORDER BY year DESC LIMIT 5;"}
{"prompt":"Insert new inclusive housing policies in Boston. with given SQL schema CREATE TABLE policies(id INT, city TEXT, policy TEXT); INSERT INTO policies(id, city, policy) VALUES (1, 'Boston', 'Policy 1');","completion":"INSERT INTO policies(id, city, policy) VALUES (2, 'Boston', 'Policy 2');"}
{"prompt":"List the number of affordable housing units in each neighborhood of San Francisco. with given SQL schema CREATE TABLE affordable_housing (id INT, neighborhood VARCHAR(30), num_units INT); INSERT INTO affordable_housing (id, neighborhood, num_units) VALUES (1, 'Mission', 100), (2, 'SoMa', 150), (3, 'Haight-Ashbury', 120), (4, 'Richmond', 80), (5, 'Sunset', 130), (6, 'Tenderloin', 140), (7, 'Chinatown', 90), (8, 'Nob Hill', 70), (9, 'Pacific Heights', 60), (10, 'Marina', 50);","completion":"SELECT neighborhood, num_units FROM affordable_housing;"}
{"prompt":"What is the total number of co-owned properties in each location type? with given SQL schema CREATE TABLE co_ownership_location_count ( id INT PRIMARY KEY, location VARCHAR(255), count INT ); INSERT INTO co_ownership_location_count (id, location, count) VALUES (1, 'urban', 30), (2, 'rural', 15), (3, 'suburban', 20);","completion":"SELECT location, SUM(count) FROM co_ownership_location_count WHERE location IN ('urban', 'rural') GROUP BY location;"}
{"prompt":"What is the total number of inclusive housing policies in each city? with given SQL schema CREATE TABLE inclusive_housing (id INT, city VARCHAR(20), policy VARCHAR(50), start_date DATE); INSERT INTO inclusive_housing (id, city, policy, start_date) VALUES (1, 'Boston', 'Accessible Housing Regulations', '2018-01-01'), (2, 'Boston', 'Affordable Housing Requirements', '2019-05-01'), (3, 'Chicago', 'Fair Housing Ordinance', '2017-12-15');","completion":"SELECT city, COUNT(DISTINCT policy) as num_policies FROM inclusive_housing GROUP BY city;"}
{"prompt":"How many products in each category are available in the inventory? with given SQL schema CREATE TABLE products (product_id int, name varchar(255), category varchar(255), quantity int); INSERT INTO products (product_id, name, category, quantity) VALUES (1, 'Organic Cotton T-Shirt', 'Clothing', 100), (2, 'Regular Cotton T-Shirt', 'Clothing', 150), (3, 'Reusable Water Bottle', 'Home', 200), (4, 'LED Light Bulb', 'Electronics', 50);","completion":"SELECT category, COUNT(*) FROM products GROUP BY category;"}
{"prompt":"What is the total quantity of products manufactured using ethical labor practices in each country? with given SQL schema CREATE TABLE country_ethical_chains (country VARCHAR(255), product_id INT, quantity INT, ethical_labor BOOLEAN, FOREIGN KEY (product_id) REFERENCES products(id));","completion":"SELECT country, SUM(quantity) FROM country_ethical_chains WHERE ethical_labor = TRUE GROUP BY country;"}
{"prompt":"Find the number of operational satellites in low Earth orbit. with given SQL schema CREATE TABLE Satellites (Satellite_ID INT, Name VARCHAR(100), Orbit VARCHAR(50), Operational BOOLEAN); INSERT INTO Satellites (Satellite_ID, Name, Orbit, Operational) VALUES (1, 'Starlink-1', 'Low Earth Orbit', TRUE), (2, 'Galaxy 1R', 'Geostationary Orbit', FALSE);","completion":"SELECT COUNT(*) FROM Satellites WHERE Orbit = 'Low Earth Orbit' AND Operational = TRUE;"}
{"prompt":"What is the average age of astronauts from Japan? with given SQL schema CREATE TABLE astronauts (astronaut_id INT, name VARCHAR(255), gender VARCHAR(255), age INT, country VARCHAR(255), missions INT); INSERT INTO astronauts (astronaut_id, name, gender, age, country, missions) VALUES (1, 'Takao Doi', 'Male', 71, 'Japan', 3);","completion":"SELECT AVG(age) as avg_age FROM astronauts WHERE country = 'Japan';"}
{"prompt":"What is the total number of spacecraft sent to Mars by any space agency? with given SQL schema CREATE TABLE mars_missions (id INT, mission_name VARCHAR(255), agency VARCHAR(255)); INSERT INTO mars_missions (id, mission_name, agency) VALUES (1, 'Viking 1', 'NASA'); INSERT INTO mars_missions (id, mission_name, agency) VALUES (2, 'Mars 3', 'Roscosmos');","completion":"SELECT COUNT(*) FROM mars_missions;"}
{"prompt":"Identify the number of unique ticket buyers from California who attended more than three games in the last season. with given SQL schema CREATE TABLE ticket_sales (ticket_id INT, buyer_name VARCHAR(50), state VARCHAR(2), game_count INT);","completion":"SELECT COUNT(DISTINCT buyer_name) FROM ticket_sales WHERE state = 'CA' AND game_count > 3;"}
{"prompt":"What is the percentage of security incidents that were phishing attacks in the last quarter? with given SQL schema CREATE TABLE incident_types (incident_type_id INT, incident_type VARCHAR(255)); INSERT INTO incident_types (incident_type_id, incident_type) VALUES (1, 'Phishing'), (2, 'Malware'), (3, 'Ransomware'), (4, 'DDoS'), (5, 'Insider Threat'), (6, 'Data Breach');","completion":"SELECT (COUNT(*) FILTER (WHERE incident_type = 'Phishing') * 100.0 \/ COUNT(*)) as phishing_percentage FROM incidents WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);"}
{"prompt":"List all machinery malfunctions that affected union members in Texas since 2018-01-01, ordered by severity. with given SQL schema CREATE TABLE WorkplaceSafety (id INT PRIMARY KEY, union_id INT, incident_date DATE, incident_type VARCHAR(20), severity INT); CREATE TABLE UnionMembers (id INT PRIMARY KEY, name VARCHAR(50), state VARCHAR(2), union_id INT, FOREIGN KEY (union_id) REFERENCES UnionNegotiations(union_id)); CREATE TABLE UnionNegotiations (id INT PRIMARY KEY, union_id INT);","completion":"SELECT w.incident_date, w.incident_type, w.severity FROM WorkplaceSafety w JOIN UnionNegotiations n ON w.union_id = n.union_id JOIN UnionMembers m ON n.union_id = m.union_id WHERE m.state = 'TX' AND w.incident_date >= '2018-01-01' AND w.incident_type = 'Machinery Malfunction' ORDER BY w.severity DESC;"}
{"prompt":"Compute the average safety rating for hybrid vehicles with given SQL schema CREATE TABLE safety_ratings (id INT, vehicle_type VARCHAR(20), safety_rating DECIMAL(3,2)); INSERT INTO safety_ratings (id, vehicle_type, safety_rating) VALUES (1, 'EV', 4.5), (2, 'EV', 4.7), (3, 'Hybrid', 4.3), (4, 'Hybrid', 4.6), (5, 'Conventional', 4.2);","completion":"SELECT AVG(safety_rating) FROM safety_ratings WHERE vehicle_type = 'Hybrid';"}
{"prompt":"What is the total number of electric vehicles sold in each city in Canada? with given SQL schema CREATE TABLE if not exists EVSales (Id int, Vehicle varchar(100), City varchar(100), Quantity int); INSERT INTO EVSales (Id, Vehicle, City, Quantity) VALUES (1, 'Tesla Model 3', 'Toronto', 1000), (2, 'Nissan Leaf', 'Vancouver', 800), (3, 'Chevrolet Bolt', 'Montreal', 1200), (4, 'Tesla Model X', 'Calgary', 600), (5, 'Tesla Model S', 'Ottawa', 900);","completion":"SELECT City, SUM(Quantity) FROM EVSales WHERE Country = 'Canada' GROUP BY City;"}
{"prompt":"How many visitors attended the Modern Art exhibition from the United States? with given SQL schema CREATE TABLE exhibitions (exhibition_id INT, name VARCHAR(255)); INSERT INTO exhibitions (exhibition_id, name) VALUES (1, 'Art of the Renaissance'), (2, 'Modern Art'); CREATE TABLE visitors (visitor_id INT, exhibition_id INT, country VARCHAR(50)); INSERT INTO visitors (visitor_id, exhibition_id, country) VALUES (1, 1, 'USA'), (2, 1, 'Canada'), (3, 2, 'USA'), (4, 2, 'Mexico'), (5, 2, 'Canada');","completion":"SELECT COUNT(visitor_id) as num_visitors FROM visitors WHERE exhibition_id = 2 AND country = 'USA';"}
{"prompt":"find the total attendance for exhibits 1 and 2 with given SQL schema CREATE TABLE exhibition_statistics (exhibit_id INT, attendance INT); INSERT INTO exhibition_statistics (exhibit_id, attendance) VALUES (1, 500), (2, 750);","completion":"SELECT SUM(attendance) FROM exhibition_statistics WHERE exhibit_id IN (1, 2);"}
{"prompt":"Update wastewater treatment records from 'New York' to have a 5% higher water volume with given SQL schema CREATE TABLE wastewater_treatment ( id INT PRIMARY KEY, location VARCHAR(255), treatment_date DATE, water_volume INT);","completion":"UPDATE wastewater_treatment SET water_volume = water_volume * 1.05 WHERE location = 'New York';"}
{"prompt":"What is the average water usage in Florida in 2020? with given SQL schema CREATE TABLE water_usage(state VARCHAR(20), year INT, usage FLOAT);","completion":"SELECT AVG(usage) FROM water_usage WHERE state='Florida' AND year=2020;"}
{"prompt":"Show the total workout duration for each workout type, excluding the ones that have a duration less than 30 minutes. with given SQL schema CREATE TABLE workout_data_ext(id INT, member_id INT, workout_type VARCHAR(20), workout_duration INT, country VARCHAR(20), additional_data VARCHAR(20)); INSERT INTO workout_data_ext(id, member_id, workout_type, workout_duration, country, additional_data) VALUES (1, 1, 'Running', 60, 'USA', 'Trail'), (2, 2, 'Yoga', 20, 'Canada', 'Home'), (3, 3, 'Running', 45, 'USA', 'Track');","completion":"SELECT workout_type, SUM(workout_duration) FROM workout_data_ext WHERE workout_duration >= 30 GROUP BY workout_type;"}
{"prompt":"List community development initiatives and their funding sources from the 'rural_development' database with given SQL schema CREATE TABLE community_development (id INT, initiative VARCHAR(50), description TEXT, lead_organization VARCHAR(50), funding_source VARCHAR(50)); INSERT INTO community_development (id, initiative, description, lead_organization, funding_source) VALUES (1, 'Youth Center', 'A place for local youth to gather and learn', 'Local NGO', 'Government Grant'); INSERT INTO community_development (id, initiative, description, lead_organization, funding_source) VALUES (2, 'Community Garden', 'A green space for residents to grow food', 'Municipal Government', 'Local Donations');","completion":"SELECT initiative, lead_organization, funding_source FROM community_development;"}
{"prompt":"What is the total budget for all agricultural innovation projects in the 'rural_infrastructure' table? with given SQL schema CREATE TABLE rural_infrastructure (project_name VARCHAR(255), project_type VARCHAR(255), budget INT); INSERT INTO rural_infrastructure (project_name, project_type, budget) VALUES ('Greenhouse Project', 'Agricultural Innovation', 50000), ('Drip Irrigation System', 'Agricultural Innovation', 30000);","completion":"SELECT SUM(budget) FROM rural_infrastructure WHERE project_type = 'Agricultural Innovation';"}
{"prompt":"How many successful orbital launches did Russia have in 2021? with given SQL schema CREATE TABLE RussianLaunches (id INT, launch_date DATE, launch_result VARCHAR(10), launch_country VARCHAR(50));","completion":"SELECT COUNT(*) FROM RussianLaunches WHERE launch_date BETWEEN '2021-01-01' AND '2021-12-31' AND launch_result = 'Success';"}
{"prompt":"What is the average delivery time for satellites by manufacturer, considering only successful launches? with given SQL schema CREATE TABLE SatelliteLaunch ( id INT, satellite_name VARCHAR(255), manufacturer VARCHAR(255), launch_outcome VARCHAR(255), launch_date DATE); INSERT INTO SatelliteLaunch (id, satellite_name, manufacturer, launch_outcome, launch_date) VALUES (1, 'Sat1', 'SpaceTech Inc.', 'successful', '2018-12-12'), (2, 'Sat2', 'Galactic Systems', 'unsuccessful', '2019-06-28'), (3, 'Sat3', 'SpaceTech Inc.', 'successful', '2021-03-02');","completion":"SELECT manufacturer, AVG(DATEDIFF(launch_date, (SELECT MIN(launch_date) FROM SatelliteLaunch sl2 WHERE sl2.manufacturer = sl.manufacturer AND launch_outcome = 'successful'))) AS avg_delivery_time FROM SatelliteLaunch sl WHERE launch_outcome = 'successful' GROUP BY manufacturer;"}
{"prompt":"What is the total cost of aircraft orders for each manufacturer? with given SQL schema CREATE TABLE aircraft_orders (order_id INT, aircraft_id INT, manufacturer VARCHAR(50), cost DECIMAL(10,2)); CREATE TABLE aircraft (aircraft_id INT, manufacturer VARCHAR(50));","completion":"SELECT manufacturer, SUM(cost) as total_cost FROM aircraft_orders JOIN aircraft ON aircraft_orders.aircraft_id = aircraft.aircraft_id GROUP BY manufacturer;"}
{"prompt":"How many animals of each type were in rehabilitation centers as of January 1, 2020? with given SQL schema CREATE TABLE AnimalRehabilitation (center_id INT, animal_type VARCHAR(20), num_animals INT, date DATE); INSERT INTO AnimalRehabilitation (center_id, animal_type, num_animals, date) VALUES (1, 'Tiger', 10, '2019-12-31'), (1, 'Elephant', 15, '2019-12-31'), (2, 'Tiger', 12, '2019-12-31'), (2, 'Elephant', 18, '2019-12-31'), (3, 'Tiger', 8, '2019-12-31'), (3, 'Elephant', 20, '2019-12-31');","completion":"SELECT animal_type, num_animals FROM AnimalRehabilitation WHERE date = '2020-01-01';"}
{"prompt":"How many music_concerts were held in Paris and Berlin? with given SQL schema CREATE TABLE music_concerts (id INT, concert_location VARCHAR(50)); INSERT INTO music_concerts (id, concert_location) VALUES (1, 'Paris'), (2, 'Berlin'), (3, 'London'), (4, 'New York');","completion":"SELECT COUNT(*) FROM music_concerts WHERE concert_location IN ('Paris', 'Berlin');"}
{"prompt":"What was the number of attendees for events in the 'Theater' category? with given SQL schema CREATE TABLE event_attendance (id INT, event_id INT, attendee_count INT); INSERT INTO event_attendance (id, event_id, attendee_count) VALUES (1, 1, 250), (2, 2, 320), (3, 3, 175); CREATE TABLE events (id INT, category VARCHAR(10)); INSERT INTO events (id, category) VALUES (1, 'Dance'), (2, 'Music'), (3, 'Theater');","completion":"SELECT SUM(attendee_count) FROM event_attendance JOIN events ON event_attendance.event_id = events.id WHERE events.category = 'Theater';"}
{"prompt":"What was the total expenditure by each department in the last fiscal quarter? with given SQL schema CREATE TABLE Expenditures (ExpenseID INT, ExpenseDate DATE, ExpenseType VARCHAR(20), ExpenseAmount DECIMAL(10,2)); INSERT INTO Expenditures (ExpenseID, ExpenseDate, ExpenseType, ExpenseAmount) VALUES (1, '2022-04-01', 'Marketing', 15000.00), (2, '2022-05-01', 'Operations', 25000.00), (3, '2022-06-01', 'Marketing', 18000.00);","completion":"SELECT ExpenseType, SUM(ExpenseAmount) FROM Expenditures WHERE ExpenseDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND ExpenseDate < LAST_DAY(CURDATE()) GROUP BY ExpenseType;"}
{"prompt":"Insert a new record for 'DrugG' sales in 'Q4 2021' with '7000' units sold. with given SQL schema CREATE TABLE sales (drug_name TEXT, quarter TEXT, year INTEGER, units_sold INTEGER);","completion":"INSERT INTO sales (drug_name, quarter, year, units_sold) VALUES ('DrugG', 'Q4', 2021, 7000);"}
{"prompt":"How many innovations have been made in the African region since 2016? with given SQL schema CREATE TABLE region (id INT, region VARCHAR(50)); INSERT INTO region (id, region) VALUES (1, 'North America'); INSERT INTO region (id, region) VALUES (2, 'Europe'); INSERT INTO region (id, region) VALUES (3, 'Africa'); CREATE TABLE innovation_region (id INT, innovation_id INT, region_id INT); INSERT INTO innovation_region (id, innovation_id, region_id) VALUES (1, 1, 1); INSERT INTO innovation_region (id, innovation_id, region_id) VALUES (2, 2, 2); INSERT INTO innovation_region (id, innovation_id, region_id) VALUES (3, 3, 3); CREATE TABLE innovation (id INT, year INT); INSERT INTO innovation (id, year) VALUES (1, 2015); INSERT INTO innovation (id, year) VALUES (2, 2016); INSERT INTO innovation (id, year) VALUES (3, 2017);","completion":"SELECT COUNT(*) FROM innovation i INNER JOIN innovation_region ir ON i.id = ir.innovation_id INNER JOIN region r ON ir.region_id = r.id WHERE r.region = 'Africa' AND i.year >= 2016;"}
{"prompt":"List funding amounts and corresponding diversity scores for companies founded in 2018 with given SQL schema CREATE TABLE companies (id INT, name VARCHAR(50), founding_year INT, diversity_score DECIMAL(3,2)); CREATE TABLE funds (id INT, company_id INT, funding_amount DECIMAL(10,2)); INSERT INTO companies VALUES (1, 'Acme Corp', 2018, 0.85); INSERT INTO companies VALUES (2, 'Beta Inc', 2015, 0.70); INSERT INTO funds VALUES (1, 1, 50000); INSERT INTO funds VALUES (2, 2, 75000);","completion":"SELECT companies.name, funds.funding_amount, companies.diversity_score FROM companies INNER JOIN funds ON companies.id = funds.company_id WHERE companies.founding_year = 2018;"}
{"prompt":"List the diversity metrics for startups founded in '2018'. with given SQL schema CREATE TABLE diversity_metrics (id INT, startup_name VARCHAR(50), founding_year INT, female_founders INT, underrepresented_teams INT);","completion":"SELECT startup_name, female_founders, underrepresented_teams FROM diversity_metrics WHERE founding_year = 2018;"}
{"prompt":"List all marine protected areas in the Pacific Ocean. with given SQL schema CREATE TABLE marine_protected_areas (area_id INTEGER, area_name TEXT, ocean_basin TEXT);","completion":"SELECT area_name FROM marine_protected_areas WHERE ocean_basin = 'Pacific Ocean';"}
{"prompt":"Delete records in the species table where the common_name is 'White Oak' with given SQL schema CREATE TABLE species (id INT PRIMARY KEY, common_name TEXT, scientific_name TEXT, region TEXT); INSERT INTO species (id, common_name, scientific_name, region) VALUES (1, 'White Oak', 'Quercus alba', 'North America');","completion":"DELETE FROM species WHERE common_name = 'White Oak';"}
{"prompt":"What is the average carbon sequestration rate for forests in tropical regions? with given SQL schema CREATE TABLE forests (id INT, name VARCHAR(50), region VARCHAR(50), carbon_sequestration_rate DECIMAL(5,2)); INSERT INTO forests (id, name, region, carbon_sequestration_rate) VALUES (1, 'Forest 1', 'Tropical', 2.50), (2, 'Forest 2', 'Temperate', 1.80), (3, 'Forest 3', 'Tropical', 3.20), (4, 'Forest 4', 'Temperate', 2.00);","completion":"SELECT AVG(f.carbon_sequestration_rate) FROM forests f WHERE f.region = 'Tropical';"}
{"prompt":"What is the total area of all wildlife habitats, in hectares, for each type of habitat? with given SQL schema CREATE TABLE wildlife_habitat_2 (id INT, habitat_type VARCHAR(255), area FLOAT); INSERT INTO wildlife_habitat_2 (id, habitat_type, area) VALUES (1, 'Forest', 150000.0), (2, 'Wetlands', 120000.0), (3, 'Forest', 200000.0), (4, 'Grasslands', 180000.0), (5, 'Desert', 100000.0);","completion":"SELECT habitat_type, SUM(area) FROM wildlife_habitat_2 GROUP BY habitat_type;"}
{"prompt":"List the top 5 countries with the highest average foundation sales revenue in H2 2021. with given SQL schema CREATE TABLE cosmetics_sales(country VARCHAR(255), product_type VARCHAR(255), sales_quantity INT, sales_revenue DECIMAL(10,2));","completion":"SELECT country, AVG(sales_revenue) as avg_rev FROM cosmetics_sales WHERE product_type = 'foundation' AND sales_date BETWEEN '2021-07-01' AND '2021-12-31' GROUP BY country ORDER BY avg_rev DESC LIMIT 5;"}
{"prompt":"Insert a new record into the 'FireDepartments' table with the following data: '890', 'Eastside Fire Department', 2000 with given SQL schema CREATE TABLE FireDepartments (DepartmentID INT PRIMARY KEY, DepartmentName VARCHAR(50), EstablishedYear INT);","completion":"INSERT INTO FireDepartments (DepartmentID, DepartmentName, EstablishedYear) VALUES (890, 'Eastside Fire Department', 2000);"}
{"prompt":"What is the maximum number of crimes reported in a single day in 'Harbor' district? with given SQL schema CREATE TABLE daily_crimes (date DATE, district VARCHAR(20), crimes_reported INT); INSERT INTO daily_crimes (date, district, crimes_reported) VALUES ('2022-01-01', 'Harbor', 3), ('2022-01-02', 'Harbor', 5), ('2022-01-03', 'Harbor', 4), ('2022-01-04', 'Harbor', 2), ('2022-01-05', 'Harbor', 7);","completion":"SELECT MAX(crimes_reported) FROM daily_crimes WHERE district = 'Harbor';"}
{"prompt":"Calculate the total ticket revenue for events in the 'events' table. with given SQL schema CREATE TABLE events (event_id INT, name VARCHAR(50), location VARCHAR(50), date DATE, type VARCHAR(50), ticket_price DECIMAL(5,2), attendance INT);","completion":"SELECT SUM(ticket_price * attendance) as total_revenue FROM events;"}
{"prompt":"How many veteran employment applications were submitted in California in 2018? with given SQL schema CREATE TABLE Veteran_Employment (ID INT, State VARCHAR(50), Year INT, Applications INT); INSERT INTO Veteran_Employment (ID, State, Year, Applications) VALUES (1, 'California', 2016, 200), (2, 'California', 2018, 300), (3, 'New_York', 2017, 250);","completion":"SELECT Applications FROM Veteran_Employment WHERE State = 'California' AND Year = 2018;"}
{"prompt":"How many peacekeeping operations were led by the Association of Southeast Asian Nations (ASEAN) in the past decade? with given SQL schema CREATE SCHEMA if not exists peacekeeping;CREATE TABLE if not exists asean_operations (id INT, operation_name VARCHAR(255), operation_start_date DATE, operation_end_date DATE); INSERT INTO asean_operations (id, operation_name, operation_start_date, operation_end_date) VALUES (1, 'ASEAN Peacekeeping Force', '2011-05-15', '2022-01-01');","completion":"SELECT COUNT(*) FROM asean_operations WHERE operation_start_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 10 YEAR) AND CURRENT_DATE;"}
{"prompt":"What is the maximum number of peacekeeping troops deployed by any country in a single peacekeeping operation? with given SQL schema CREATE TABLE PeacekeepingTroops (TroopID INT, OperationID INT, Country VARCHAR(50), NumberOfTroops INT);","completion":"SELECT OperationID, MAX(NumberOfTroops) FROM PeacekeepingTroops GROUP BY OperationID;"}
{"prompt":"What is the total number of military innovation projects and military personnel for each country involved in defense diplomacy? with given SQL schema CREATE TABLE defense_diplomacy (id INT, country VARCHAR, military_personnel INT, project_count INT);","completion":"SELECT country, SUM(military_personnel) AS total_military_personnel, SUM(project_count) AS total_projects FROM defense_diplomacy GROUP BY country;"}
{"prompt":"How many high-risk accounts are in the Asia-Pacific region with a balance greater than $100,000? with given SQL schema CREATE TABLE accounts (id INT, region VARCHAR(20), risk_level VARCHAR(10), balance DECIMAL(15, 2)); INSERT INTO accounts (id, region, risk_level, balance) VALUES (1, 'Asia-Pacific', 'high', 120000.00), (2, 'Europe', 'medium', 80000.00), (3, 'North America', 'low', 50000.00), (4, 'Asia-Pacific', 'high', 150000.00);","completion":"SELECT COUNT(*) FROM accounts WHERE region = 'Asia-Pacific' AND risk_level = 'high' AND balance > 100000.00;"}
{"prompt":"List all clients with their age and the total number of investments they made? with given SQL schema CREATE TABLE clients (client_id INT, name TEXT, age INT, gender TEXT); INSERT INTO clients VALUES (1, 'John Doe', 35, 'Male'), (2, 'Jane Smith', 45, 'Female'), (3, 'Bob Johnson', 50, 'Male'); CREATE TABLE investments (client_id INT, investment_type TEXT); INSERT INTO investments VALUES (1, 'Stocks'), (1, 'Bonds'), (2, 'Stocks'), (2, 'Mutual Funds'), (3, 'Mutual Funds'), (3, 'Real Estate');","completion":"SELECT c.age, COUNT(i.investment_type) AS num_investments FROM clients c LEFT JOIN investments i ON c.client_id = i.client_id GROUP BY c.client_id;"}
{"prompt":"Find the total unloaded cargo weight in the US for each flag. with given SQL schema CREATE TABLE ports (port_id INT, port_name TEXT, country TEXT, unloaded_weight FLOAT, vessel_flag TEXT); INSERT INTO ports (port_id, port_name, country, unloaded_weight, vessel_flag) VALUES (1, 'Los Angeles', 'USA', 9876543.21, 'Panama'), (2, 'New York', 'USA', 7654321.89, 'Liberia'), (3, 'Houston', 'USA', 3218976.54, 'Marshall Islands');","completion":"SELECT vessel_flag, SUM(unloaded_weight) AS total_weight FROM ports WHERE country = 'USA' GROUP BY vessel_flag;"}
{"prompt":"List the ports that have been visited by vessels with a maximum cargo capacity of over 20000 tons in Q4 2020. with given SQL schema CREATE TABLE Port_Visits (id INT, vessel VARCHAR(255), capacity INT, port VARCHAR(255), time DATETIME); INSERT INTO Port_Visits (id, vessel, capacity, port, time) VALUES (1, 'Arctic Explorer', 25000, 'Oslo', '2020-12-01 10:00:00'), (2, 'Sea Titan', 18000, 'Reykjavik', '2020-11-15 15:30:00');","completion":"SELECT DISTINCT port FROM Port_Visits PV JOIN (SELECT vessel, capacity FROM Vessels WHERE capacity > 20000) V ON PV.vessel = V.vessel WHERE MONTH(time) BETWEEN 10 AND 12 AND YEAR(time) = 2020;"}
{"prompt":"What is the total production output of factories in each country? with given SQL schema CREATE TABLE factories (factory_id INT, name VARCHAR(100), location VARCHAR(100), country VARCHAR(100), production_output INT); INSERT INTO factories (factory_id, name, location, country, production_output) VALUES (1, 'ABC Factory', 'New York', 'USA', 5500), (2, 'XYZ Factory', 'California', 'USA', 4000), (3, 'LMN Factory', 'Texas', 'USA', 6000), (4, 'PQR Factory', 'Toronto', 'Canada', 7000);","completion":"SELECT country, SUM(production_output) FROM factories GROUP BY country;"}
{"prompt":"Determine the percentage change in national security budgets for the last 3 years, per region. with given SQL schema CREATE TABLE budgets (budget_year INT, region_id INT, budget_amount INT); INSERT INTO budgets (budget_year, region_id, budget_amount) VALUES (2019, 1, 500), (2020, 1, 600), (2021, 1, 700), (2019, 2, 400), (2020, 2, 450), (2021, 2, 500);","completion":"SELECT budget_year, region_id, budget_amount, (budget_amount - LAG(budget_amount, 1) OVER (PARTITION BY region_id ORDER BY budget_year)) * 100.0 \/ LAG(budget_amount, 1) OVER (PARTITION BY region_id ORDER BY budget_year) as percentage_change FROM budgets WHERE budget_year >= YEAR(CURRENT_DATE) - 3;"}
{"prompt":"List all cybersecurity incidents and their respective severity levels in the Asia-Pacific region since 2020. with given SQL schema CREATE TABLE cybersecurity_incidents (id INT PRIMARY KEY, incident_name VARCHAR(255), severity INT, date DATE); INSERT INTO cybersecurity_incidents (id, incident_name, severity, date) VALUES (1, 'SolarWinds Hack', 9, '2020-03-26');","completion":"SELECT incident_name, severity FROM cybersecurity_incidents WHERE date >= '2020-01-01' AND location LIKE '%Asia-Pacific%';"}
{"prompt":"Show all cybersecurity strategies along with their respective authors. with given SQL schema CREATE TABLE cybersecurity_strategies (id INT, strategy VARCHAR(50), author VARCHAR(30)); INSERT INTO cybersecurity_strategies (id, strategy, author) VALUES (1, 'Zero Trust Architecture', 'John Smith'); INSERT INTO cybersecurity_strategies (id, strategy, author) VALUES (2, 'Multi-Factor Authentication', 'Jane Doe');","completion":"SELECT strategy, author FROM cybersecurity_strategies;"}
{"prompt":"What are the types and severities of cybersecurity incidents that occurred before '2021-03-01'? with given SQL schema CREATE TABLE Cyber_Incidents (incident_id INT, incident_date DATE, incident_type VARCHAR(50), incident_severity INT); INSERT INTO Cyber_Incidents (incident_id, incident_date, incident_type, incident_severity) VALUES (1, '2021-01-01', 'Phishing', 3); INSERT INTO Cyber_Incidents (incident_id, incident_date, incident_type, incident_severity) VALUES (2, '2021-02-15', 'Malware', 5);","completion":"SELECT incident_type, incident_severity FROM Cyber_Incidents WHERE incident_date < '2021-03-01';"}
{"prompt":"What is the total number of military bases and their types in the Asia-Pacific region? with given SQL schema CREATE TABLE military_bases (id INT, name VARCHAR(255), type VARCHAR(255), region VARCHAR(255)); INSERT INTO military_bases (id, name, type, region) VALUES (1, 'Base 1', 'Air Force', 'Asia-Pacific'), (2, 'Base 2', 'Navy', 'Asia-Pacific');","completion":"SELECT COUNT(*), type FROM military_bases WHERE region = 'Asia-Pacific' GROUP BY type;"}
{"prompt":"Which artists have the most followers on Instagram, by genre? with given SQL schema CREATE TABLE artists (artist_id INT, artist VARCHAR(100), genre VARCHAR(50), followers INT); CREATE VIEW followers_view AS SELECT artist_id, SUM(followers) AS total_followers FROM instagram_data GROUP BY artist_id;","completion":"SELECT g.genre, a.artist, f.total_followers FROM artists a JOIN genres g ON a.genre = g.genre JOIN followers_view f ON a.artist_id = f.artist_id ORDER BY total_followers DESC;"}
{"prompt":"How many games did each NBA team play in the 2021-2022 season? with given SQL schema CREATE TABLE nba_schedule (team TEXT, games INT); INSERT INTO nba_schedule (team, games) VALUES ('Warriors', 82), ('Celtics', 82), ('Bucks', 82);","completion":"SELECT team, COUNT(*) as games FROM nba_schedule GROUP BY team;"}
{"prompt":"Update the names of athletes whose names start with 'J' to 'X' with given SQL schema CREATE TABLE athletes (athlete_id INT, name VARCHAR(50), sport VARCHAR(50), join_year INT); INSERT INTO athletes (athlete_id, name, sport, join_year) VALUES (1, 'Jane Doe', 'Basketball', 2021), (2, 'John Smith', 'Soccer', 2019);","completion":"UPDATE athletes SET name = REPLACE(name, 'J', 'X') WHERE name LIKE 'J%';"}
{"prompt":"What is the total number of penalties awarded to football team 306? with given SQL schema CREATE TABLE penalties (penalty_id INT, player_id INT, match_id INT, team_id INT, penalties INT); INSERT INTO penalties (penalty_id, player_id, match_id, team_id, penalties) VALUES (1, 10, 11, 306, 2);","completion":"SELECT SUM(penalties) FROM penalties WHERE team_id = 306;"}
{"prompt":"Identify all the unique beneficiaries in Nepal who received support from the 'education' sector in 2021, the number of times they received support, and the total amount donated to each. with given SQL schema CREATE TABLE beneficiaries (id INT, name TEXT, country TEXT); INSERT INTO beneficiaries VALUES (1, 'Sita', 'Nepal'); CREATE TABLE support (id INT, beneficiary_id INT, sector TEXT, support_date YEAR, amount INT); INSERT INTO support VALUES (1, 1, 'education', 2021, 200);","completion":"SELECT beneficiaries.name, COUNT(support.id), SUM(support.amount) FROM beneficiaries INNER JOIN support ON beneficiaries.id = support.beneficiary_id WHERE beneficiaries.country = 'Nepal' AND support.sector = 'education' AND support.support_date = 2021 GROUP BY beneficiaries.id;"}
{"prompt":"What is the average production cost of garments made from organic cotton, per country? with given SQL schema CREATE TABLE OrganicCottonGarments (id INT, country VARCHAR(50), production_cost DECIMAL(5,2));","completion":"SELECT country, AVG(production_cost) as avg_cost FROM OrganicCottonGarments GROUP BY country;"}
{"prompt":"What is the total CO2 emissions of silk production in China? with given SQL schema CREATE TABLE SilkProduction (id INT, country VARCHAR, co2_emissions INT);","completion":"SELECT SUM(co2_emissions) FROM SilkProduction WHERE country = 'China';"}
{"prompt":"Find the top 5 most active users in 'user_behavior' table in the last month? with given SQL schema CREATE TABLE user_behavior (user_id INT, post_date DATE, posts_per_day INT);","completion":"SELECT user_id, SUM(posts_per_day) FROM user_behavior WHERE post_date >= CURDATE() - INTERVAL 1 MONTH GROUP BY user_id ORDER BY SUM(posts_per_day) DESC LIMIT 5;"}
{"prompt":"Update the \"status\" column to 'active' for all users with more than 1000 followers in the \"users\" table with given SQL schema CREATE TABLE users (id INT, username VARCHAR(255), followers INT, status VARCHAR(255));","completion":"UPDATE users SET status = 'active' WHERE followers > 1000;"}
{"prompt":"What is the total revenue generated from ads on Instagram in March 2021, for users in the 'brand' category who have posted more than 10 times? with given SQL schema CREATE TABLE ads (ad_id INT, user_id INT, platform VARCHAR(255), ad_revenue DECIMAL(10,2), post_count INT); INSERT INTO ads (ad_id, user_id, platform, ad_revenue, post_count) VALUES (1, 1, 'Instagram', 150.50, 12), (2, 2, 'Twitter', 80.00, 15), (3, 3, 'Instagram', 120.75, 8);","completion":"SELECT SUM(ad_revenue) FROM ads WHERE platform = 'Instagram' AND MONTH(ad_date) = 3 AND YEAR(ad_date) = 2021 AND user_id IN (SELECT user_id FROM users WHERE category = 'brand' AND post_count > 10);"}
{"prompt":"How many socially responsible loans were issued to customers in the South? with given SQL schema CREATE TABLE loans (loan_number INT, customer_name VARCHAR(50), issue_date DATE, is_socially_responsible BOOLEAN, region VARCHAR(20)); INSERT INTO loans (loan_number, customer_name, issue_date, is_socially_responsible, region) VALUES (1, 'Ahmed', '2021-01-01', true, 'South'), (2, 'Sara', '2021-02-15', false, 'North'), (3, 'Mohammed', '2021-03-03', true, 'South');","completion":"SELECT COUNT(*) FROM loans WHERE is_socially_responsible = true AND region = 'South';"}
{"prompt":"What is the maximum socially responsible loan amount? with given SQL schema CREATE TABLE loans (id INT PRIMARY KEY, loan_id INT, amount INT, client_id INT, is_socially_responsible BOOLEAN);","completion":"SELECT MAX(loans.amount) as max_loan_amount FROM loans WHERE loans.is_socially_responsible = TRUE;"}
{"prompt":"What was the total amount of Shariah-compliant finance loans issued to micro businesses in 2021? with given SQL schema CREATE TABLE shariah_compliant_finance (id INT PRIMARY KEY, loan_amount DECIMAL(10, 2), borrower_type TEXT, lending_date DATE);","completion":"SELECT SUM(loan_amount) FROM shariah_compliant_finance WHERE borrower_type = 'Micro Business' AND lending_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"What is the monthly donation trend for the last 12 months? with given SQL schema CREATE TABLE Donations (DonationID INT, DonationDate DATE, DonationAmount DECIMAL(10,2)); INSERT INTO Donations (DonationID, DonationDate, DonationAmount) VALUES (1, '2022-01-15', 200.00), (2, '2022-02-20', 250.00), (3, '2022-03-05', 300.00);","completion":"SELECT EXTRACT(MONTH FROM DonationDate) as Month, ROUND(AVG(DonationAmount), 2) as AvgDonation FROM Donations WHERE DonationDate >= DATE_TRUNC('year', CURRENT_DATE - INTERVAL '1 year') AND DonationDate < DATE_TRUNC('year', CURRENT_DATE) GROUP BY Month ORDER BY Month;"}
{"prompt":"What was the total amount donated by individuals in the United States in Q1 2021? with given SQL schema CREATE TABLE donations (donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (donor_id, donation_amount, donation_date) VALUES (1, 50.00, '2021-01-05'), (2, 100.00, '2021-03-15');","completion":"SELECT SUM(donation_amount) FROM donations WHERE donation_date BETWEEN '2021-01-01' AND '2021-03-31' AND donor_id IN (SELECT donor_id FROM donors WHERE country = 'United States');"}
{"prompt":"List all warehouse locations and their corresponding total inventory value. with given SQL schema CREATE TABLE warehouse (id INT, location VARCHAR(20), total_inventory DECIMAL(10,2)); INSERT INTO warehouse (id, location, total_inventory) VALUES (1, 'Atlanta', 2000.00), (2, 'Dallas', 3000.00);","completion":"SELECT location, total_inventory FROM warehouse;"}
{"prompt":"What is the total quantity of items in the 'inventory' table? with given SQL schema CREATE TABLE inventory (item_id INT, item_name VARCHAR(20), quantity INT); INSERT INTO inventory (item_id, item_name, quantity) VALUES (1, 'apples', 50), (2, 'bananas', 75), (3, 'oranges', 30);","completion":"SELECT SUM(quantity) FROM inventory;"}
{"prompt":"List biotech startups founded before 2010. with given SQL schema CREATE TABLE startups (id INT, name VARCHAR(50), location VARCHAR(50), industry VARCHAR(50), founding_date DATE);","completion":"SELECT name FROM startups WHERE industry = 'biotech' AND founding_date < '2010-01-01';"}
{"prompt":"What is the total funding amount for all biotech startups? with given SQL schema CREATE TABLE biotech_startups (id INT, name TEXT, location TEXT, funding_amount INT); INSERT INTO biotech_startups (id, name, location, funding_amount) VALUES (1, 'GenSolutions', 'California', 12000000), (2, 'BioInnovate', 'Texas', 20000000), (3, 'TechGen', 'Texas', 15000000);","completion":"SELECT SUM(funding_amount) FROM biotech_startups;"}
{"prompt":"What is the total number of public transportation projects and their total budget for projects located in 'Rural' area, grouped by transportation type? with given SQL schema CREATE TABLE projects (project_id INT, project_name VARCHAR(50), budget DECIMAL(10, 2), area VARCHAR(50), transportation_type VARCHAR(50)); INSERT INTO projects (project_id, project_name, budget, area, transportation_type) VALUES (4, 'ProjectA', 7000000.00, 'Rural', 'Bus'), (5, 'ProjectB', 6000000.00, 'Rural', 'Train'), (6, 'ProjectC', 8000000.00, 'Rural', 'Bus');","completion":"SELECT transportation_type, COUNT(*) AS total_projects, SUM(budget) AS total_budget FROM projects WHERE area = 'Rural' GROUP BY transportation_type;"}
{"prompt":"List Smart City initiatives and their corresponding countries. with given SQL schema CREATE TABLE Countries (id INT, name VARCHAR(50)); INSERT INTO Countries (id, name) VALUES (1, 'CountryA'), (2, 'CountryB'); CREATE TABLE SmartCities (id INT, country_id INT, initiative VARCHAR(50)); INSERT INTO SmartCities (id, country_id, initiative) VALUES (1, 1, 'InitiativeA'), (2, 1, 'InitiativeB'), (3, 2, 'InitiativeC');","completion":"SELECT SmartCities.initiative, Countries.name FROM SmartCities INNER JOIN Countries ON SmartCities.country_id = Countries.id;"}
{"prompt":"List all renewable energy infrastructure projects in the African region and their respective costs. with given SQL schema CREATE TABLE renewable_energy_infrastructure (project_id INT, project_name VARCHAR(50), region VARCHAR(20), cost DECIMAL(10,2)); INSERT INTO renewable_energy_infrastructure (project_id, project_name, region, cost) VALUES (1, 'Hydroelectric Dam', 'Africa', 30000000.00), (2, 'Biomass Plant', 'Europe', 25000000.00), (3, 'Wind Farm', 'Asia', 18000000.00);","completion":"SELECT project_name, cost FROM renewable_energy_infrastructure WHERE region = 'Africa';"}
{"prompt":"What is the total number of Green buildings in India certified by GRIHA? with given SQL schema CREATE TABLE green_buildings (id INT, project_name VARCHAR(100), certifier VARCHAR(50), country VARCHAR(50)); INSERT INTO green_buildings (id, project_name, certifier, country) VALUES (1, 'Eco Tower', 'LEED', 'India'), (2, 'Green Heights', 'BREEAM', 'UK'), (3, 'Sustainable Plaza', 'GRIHA', 'India');","completion":"SELECT COUNT(*) FROM green_buildings WHERE certifier = 'GRIHA' AND country = 'India';"}
{"prompt":"Add a new sustainable practice to 'sustainable_practices' table with given SQL schema CREATE TABLE sustainable_practices (id INT PRIMARY KEY, name VARCHAR(255), description TEXT);","completion":"INSERT INTO sustainable_practices (id, name, description) VALUES (1, 'Refillable Water Bottles', 'Promote reusable water bottles to reduce plastic waste.');"}
{"prompt":"What is the average number of eco-friendly tours offered per hotel in Paris? with given SQL schema CREATE TABLE hotels (id INT, city VARCHAR(20)); INSERT INTO hotels (id, city) VALUES (1, 'Paris'), (2, 'Berlin'); CREATE TABLE tours (id INT, hotel_id INT, eco_friendly BOOLEAN); INSERT INTO tours (id, hotel_id, eco_friendly) VALUES (1, 1, true), (2, 1, false), (3, 2, true);","completion":"SELECT AVG(t.eco_friendly) FROM tours t JOIN hotels h ON t.hotel_id = h.id WHERE h.city = 'Paris' AND t.eco_friendly = true;"}
{"prompt":"What is the percentage of revenue generated from sustainable tourism in Europe? with given SQL schema CREATE TABLE tourism_revenue (revenue_id INT, revenue_type TEXT, region TEXT, amount FLOAT); INSERT INTO tourism_revenue (revenue_id, revenue_type, region, amount) VALUES (1, 'Sustainable Tourism', 'Europe', 500000.00), (2, 'Traditional Tourism', 'Europe', 1000000.00);","completion":"SELECT 100.0 * SUM(CASE WHEN revenue_type = 'Sustainable Tourism' THEN amount ELSE 0 END) \/ SUM(amount) as percentage FROM tourism_revenue WHERE region = 'Europe';"}
{"prompt":"Which sites in New York City, USA have more than 100000 annual visitors and what are their preferred languages? with given SQL schema CREATE TABLE Cultural_Heritage_Sites (id INT, name VARCHAR(255), location VARCHAR(255), year_established INT, PRIMARY KEY(id)); INSERT INTO Cultural_Heritage_Sites (id, name, location, year_established) VALUES (1, 'Statue of Liberty', 'New York City, USA', 1886); CREATE TABLE User_Preferences (id INT, user_id INT, preferred_language VARCHAR(255), PRIMARY KEY(id), FOREIGN KEY (user_id) REFERENCES Users(id)); INSERT INTO User_Preferences (id, user_id, preferred_language) VALUES (1, 1, 'Spanish'), (2, 1, 'English');","completion":"SELECT c.name, COUNT(u.id) as annual_visitors, p.preferred_language FROM Cultural_Heritage_Sites c JOIN User_Preferences p ON c.id = p.user_id GROUP BY c.name HAVING annual_visitors > 100000;"}
{"prompt":"List the booking dates and hotel names for all OTA bookings where the hotel has implemented at least one AI-powered solution. with given SQL schema CREATE TABLE otas (ota_id INT, booking_date DATE, hotel_id INT); CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, region TEXT); CREATE TABLE ai_solutions (solution_id INT, hotel_id INT, implemented_date DATE); INSERT INTO hotels (hotel_id, hotel_name, region) VALUES (1, 'Beach Retreat', 'Americas'); INSERT INTO ai_solutions (solution_id, hotel_id, implemented_date) VALUES (1, 1, '2021-02-01'); INSERT INTO otas (ota_id, booking_date, hotel_id) VALUES (1, '2021-04-01', 1);","completion":"SELECT otas.booking_date, hotels.hotel_name FROM otas INNER JOIN hotels ON otas.hotel_id = hotels.hotel_id INNER JOIN ai_solutions ON hotels.hotel_id = ai_solutions.hotel_id GROUP BY otas.booking_date, hotels.hotel_name HAVING COUNT(DISTINCT ai_solutions.solution_id) >= 1;"}
{"prompt":"Display the names and founding years of art galleries established after 1950 that have hosted exhibitions featuring artists from Africa or the African Diaspora. with given SQL schema CREATE TABLE art_galleries (name TEXT, founding_year INTEGER); INSERT INTO art_galleries (name, founding_year) VALUES ('Tate Modern', 2000), ('MoMA', 1929), ('Guggenheim Museum', 1939); CREATE TABLE exhibitions (gallery_name TEXT, artist_name TEXT, exhibition_year INTEGER); INSERT INTO exhibitions (gallery_name, artist_name, exhibition_year) VALUES ('Tate Modern', 'Chris Ofili', 2005), ('MoMA', 'Kehinde Wiley', 2016), ('Guggenheim Museum', 'Theaster Gates', 2018);","completion":"SELECT ag.name, ag.founding_year FROM art_galleries ag INNER JOIN exhibitions e ON ag.name = e.gallery_name WHERE ag.founding_year > 1950 AND (e.artist_name LIKE 'African%' OR e.artist_name LIKE 'Diaspora%');"}
{"prompt":"What are the names and languages of the heritages sites located in Africa? with given SQL schema CREATE TABLE Heritages (id INT, name TEXT, location TEXT); INSERT INTO Heritages (id, name, location) VALUES (1, 'Giza Pyramids', 'Egypt'); CREATE TABLE Languages (id INT, site_id INT, language TEXT); INSERT INTO Languages (id, site_id, language) VALUES (1, 1, 'Egyptian Arabic');","completion":"SELECT H.name, L.language FROM Heritages H INNER JOIN Languages L ON H.id = L.site_id WHERE H.location = 'Africa';"}
{"prompt":"What is the average age of patients who received therapy in the state of California? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender TEXT, state TEXT); INSERT INTO patients (patient_id, age, gender, state) VALUES (1, 35, 'Female', 'California'); INSERT INTO patients (patient_id, age, gender, state) VALUES (2, 42, 'Male', 'Texas');","completion":"SELECT AVG(age) FROM patients WHERE state = 'California' AND therapy_type IS NOT NULL;"}
{"prompt":"What is the maximum water depth for dams in Australia? with given SQL schema CREATE TABLE Dam (id INT, name TEXT, location TEXT, max_depth FLOAT, height FLOAT); INSERT INTO Dam (id, name, location, max_depth, height) VALUES (1, 'Snowy Mountains Dam', 'NSW, Australia', 120, 160);","completion":"SELECT MAX(max_depth) FROM Dam WHERE location LIKE '%Australia%' AND type = 'Dam';"}
{"prompt":"Find the average visitor count for natural attractions in Antarctica. with given SQL schema CREATE TABLE antarctica_attractions (id INT, name TEXT, visitors INT); INSERT INTO antarctica_attractions VALUES (1, 'South Pole', 10000), (2, 'Ross Ice Shelf', 5000), (3, 'Lemaire Channel', 8000);","completion":"SELECT AVG(visitors) FROM antarctica_attractions;"}
{"prompt":"What is the success rate of alternative dispute resolution methods, by type and resolution method? with given SQL schema CREATE TABLE disputes (dispute_id INT, type VARCHAR(20), resolution_method VARCHAR(20), success BOOLEAN); INSERT INTO disputes (dispute_id, type, resolution_method, success) VALUES (1, 'Civil', 'Mediation', true), (2, 'Criminal', 'Restorative Justice', false), (3, 'Civil', 'Arbitration', true);","completion":"SELECT disputes.type, disputes.resolution_method, AVG(disputes.success) as success_rate FROM disputes GROUP BY disputes.type, disputes.resolution_method;"}
{"prompt":"Delete all invasive species records from the year 2020 in the 'MarineLife' table with given SQL schema CREATE TABLE MarineLife (id INT, species VARCHAR(50), population INT, last_sighting DATE); INSERT INTO MarineLife (id, species, population, last_sighting) VALUES (1, 'Shark', 500, '2019-01-01'), (2, 'Starfish', 3000, '2020-05-15'), (3, 'Jellyfish', 1500, '2018-12-27'), (4, 'Lionfish', 800, '2020-07-08');","completion":"DELETE FROM MarineLife WHERE species = 'Lionfish' AND YEAR(last_sighting) = 2020;"}
{"prompt":"Which countries have the highest and lowest media representation scores in South America? with given SQL schema CREATE TABLE media_representation (id INT, user_id INT, country VARCHAR(50), region VARCHAR(50), score INT); INSERT INTO media_representation (id, user_id, country, region, score) VALUES (7, 7, 'Argentina', 'South America', 82), (8, 8, 'Brazil', 'South America', 78), (9, 9, 'Colombia', 'South America', 74), (10, 10, 'Peru', 'South America', 71), (11, 11, 'Chile', 'South America', 69);","completion":"SELECT country, score FROM media_representation WHERE region = 'South America' ORDER BY score DESC LIMIT 1; SELECT country, score FROM media_representation WHERE region = 'South America' ORDER BY score ASC LIMIT 1;"}
{"prompt":"Who are the top 3 authors with the highest number of articles published in The Guardian? with given SQL schema CREATE TABLE authors (id INT, name VARCHAR(100), publisher VARCHAR(50)); CREATE TABLE articles_authors (article_id INT, author_id INT); INSERT INTO authors (id, name, publisher) VALUES (1, 'Author1', 'The Guardian'), (2, 'Author2', 'The Guardian'), (3, 'Author3', 'The Guardian'); INSERT INTO articles_authors (article_id, author_id) VALUES (1, 1), (2, 2), (3, 1), (3, 2), (3, 3); INSERT INTO articles (id, title, publication_date, publisher) VALUES (1, 'Article1', '2021-01-01', 'The Guardian'), (2, 'Article2', '2021-01-02', 'The Guardian'), (3, 'Article3', '2021-01-03', 'The Guardian');","completion":"SELECT a.name, COUNT(aa.article_id) AS articles_count FROM authors a JOIN articles_authors aa ON a.id = aa.author_id JOIN articles ar ON aa.article_id = ar.id WHERE ar.publisher = 'The Guardian' GROUP BY a.name ORDER BY articles_count DESC LIMIT 3;"}
{"prompt":"What is the maximum number of servings of any vegetarian side dish? with given SQL schema CREATE TABLE side_dishes (id INT, side_name TEXT, max_servings INT, is_vegetarian BOOLEAN);","completion":"SELECT MAX(max_servings) FROM side_dishes WHERE is_vegetarian = TRUE;"}
{"prompt":"What's the percentage of coal resources depleted in each mine? with given SQL schema CREATE TABLE mines (id INT, name VARCHAR(50), resource VARCHAR(20), total_resources INT, depleted_resources INT); INSERT INTO mines (id, name, resource, total_resources, depleted_resources) VALUES (1, 'Smith Mine', 'Coal', 10000, 2500); INSERT INTO mines (id, name, resource, total_resources, depleted_resources) VALUES (2, 'Doe Mine', 'Coal', 12000, 4000);","completion":"SELECT name, (depleted_resources * 100.0 \/ total_resources) AS percentage_depleted FROM mines WHERE resource = 'Coal';"}
{"prompt":"How many donations were made in each city? with given SQL schema CREATE TABLE donations_2 (id INT PRIMARY KEY, donor_id INT, city VARCHAR(50), state VARCHAR(50), amount DECIMAL(10,2)); INSERT INTO donations_2 (id, donor_id, city, state, amount) VALUES (1, 1, 'Albany', 'NY', 50.00), (2, 2, 'Buffalo', 'NY', 75.00);","completion":"SELECT city, COUNT(*) as total_donations FROM donations_2 GROUP BY city;"}
{"prompt":"Update the game genre of a specific game to 'Action RPG' in the GameGenres table. with given SQL schema CREATE TABLE GameGenres (GameID INT, GameName VARCHAR(20), Genre VARCHAR(20)); INSERT INTO GameGenres (GameID, GameName, Genre) VALUES (1, 'GameA', 'Action'), (2, 'GameB', 'Puzzle'), (3, 'GameC', 'Action'), (4, 'GameD', 'Puzzle');","completion":"UPDATE GameGenres SET Genre = 'Action RPG' WHERE GameID = 1;"}
{"prompt":"What is the average age of female players? with given SQL schema CREATE TABLE Players (PlayerID INT PRIMARY KEY, Age INT, Gender VARCHAR(10), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (3, 32, 'Female', 'Mexico');","completion":"SELECT AVG(Age) FROM Players WHERE Gender = 'Female';"}
{"prompt":"What is the average age of players who prefer the 'FPS' genre in the 'player_preferences' and 'player_demographics' tables? with given SQL schema CREATE TABLE player_preferences (player_id INT, genre VARCHAR(50)); CREATE TABLE player_demographics (player_id INT, age INT); INSERT INTO player_preferences (player_id, genre) VALUES (1, 'FPS'), (2, 'RPG'), (3, 'FPS'), (4, 'Simulation'); INSERT INTO player_demographics (player_id, age) VALUES (1, 25), (2, 30), (3, 35), (4, 40);","completion":"SELECT AVG(age) as avg_fps_age FROM player_demographics JOIN player_preferences ON player_preferences.player_id = player_demographics.player_id WHERE genre = 'FPS';"}
{"prompt":"What is the average humidity in New York in the past week? with given SQL schema CREATE TABLE Weather (location VARCHAR(50), humidity INT, timestamp TIMESTAMP);","completion":"SELECT AVG(humidity) FROM Weather WHERE location = 'New York' AND timestamp > NOW() - INTERVAL '1 week';"}
{"prompt":"How many traffic violations were recorded in the year 2019 for both cities 'San Francisco' and 'Los Angeles'? with given SQL schema CREATE TABLE traffic_violations (city VARCHAR(20), year INT, violations INT); INSERT INTO traffic_violations (city, year, violations) VALUES ('San Francisco', 2020, 3000), ('San Francisco', 2019, 3500), ('Los Angeles', 2020, 4000), ('Los Angeles', 2019, 4500);","completion":"SELECT COUNT(*) FROM traffic_violations WHERE city IN ('San Francisco', 'Los Angeles') AND year = 2019;"}
{"prompt":"What was the minimum citizen feedback score for waste management services in the capital city in 2021? with given SQL schema CREATE TABLE Feedback (year INT, city VARCHAR(255), service VARCHAR(255), score INT); INSERT INTO Feedback (year, city, service, score) VALUES (2021, 'Capital', 'Waste Management', 6), (2021, 'Capital', 'Waste Management', 7), (2021, 'Capital', 'Waste Management', 5), (2021, 'Capital', 'Waste Management', 6);","completion":"SELECT MIN(score) FROM Feedback WHERE year = 2021 AND city = 'Capital' AND service = 'Waste Management';"}
{"prompt":"Delete all records of Lutetium production in 2015 by companies located in the Asia-Pacific region. with given SQL schema CREATE TABLE Producers (ProducerID INT PRIMARY KEY, Name TEXT, ProductionYear INT, RareEarth TEXT, Quantity INT, Location TEXT);","completion":"DELETE FROM Producers WHERE RareEarth = 'Lutetium' AND ProductionYear = 2015 AND Location LIKE '%Asia-Pacific%';"}
{"prompt":"What is the minimum price of Holmium in Asia? with given SQL schema CREATE TABLE holmium_prices (region VARCHAR(255), price DECIMAL(10,2)); INSERT INTO holmium_prices (region, price) VALUES ('China', 450.00), ('Japan', 430.00), ('India', 470.00);","completion":"SELECT MIN(price) FROM holmium_prices WHERE region = 'China' OR region = 'Japan' OR region = 'India';"}
{"prompt":"What is the average monthly rent for wheelchair-accessible units across all areas? with given SQL schema CREATE TABLE area_units (area VARCHAR(20), wheelchair_accessible BOOLEAN, monthly_rent FLOAT);","completion":"SELECT AVG(monthly_rent) FROM area_units WHERE wheelchair_accessible = TRUE;"}
{"prompt":"What is the maximum energy efficiency rating for appliances in the United Kingdom? with given SQL schema CREATE TABLE uk_appliances (id INT, country VARCHAR(255), name VARCHAR(255), energy_efficiency_rating FLOAT); INSERT INTO uk_appliances (id, country, name, energy_efficiency_rating) VALUES (1, 'United Kingdom', 'Appliance A', 3.5), (2, 'United Kingdom', 'Appliance B', 4.2);","completion":"SELECT MAX(energy_efficiency_rating) FROM uk_appliances WHERE country = 'United Kingdom';"}
{"prompt":"What is the maximum energy efficiency rating of hydroelectric dams in Canada? with given SQL schema CREATE TABLE hydro_dams (id INT, name TEXT, country TEXT, energy_efficiency_rating FLOAT); INSERT INTO hydro_dams (id, name, country, energy_efficiency_rating) VALUES (1, 'Robert-Bourassa', 'Canada', 0.94), (2, 'Churchill Falls', 'Canada', 0.92);","completion":"SELECT MAX(energy_efficiency_rating) FROM hydro_dams WHERE country = 'Canada';"}
{"prompt":"How many vegan menu items are available at each restaurant? with given SQL schema CREATE TABLE menu_items (menu_item_id INT, item_name VARCHAR(255), category VARCHAR(255), price INT, vegan BOOLEAN); INSERT INTO menu_items (menu_item_id, item_name, category, price, vegan) VALUES (1, 'Tofu Stir Fry', 'Entree', 12, true), (2, 'Chicken Caesar Salad', 'Salad', 15, false), (3, 'Veggie Burger', 'Entree', 14, true);","completion":"SELECT category, COUNT(*) as count FROM menu_items WHERE vegan = true GROUP BY category;"}
{"prompt":"What is the average revenue for menu items in the 'Desserts' category? with given SQL schema CREATE TABLE menu_items (id INT, name VARCHAR(255), category VARCHAR(255), revenue INT); INSERT INTO menu_items (id, name, category, revenue) VALUES (1, 'Chocolate Cake', 'Desserts', 300), (2, 'Cheesecake', 'Desserts', 400), (3, 'Ice Cream Sundae', 'Desserts', 250);","completion":"SELECT AVG(revenue) as avg_revenue FROM menu_items WHERE category = 'Desserts';"}
{"prompt":"Identify the top 3 countries with the most satellites in orbit. with given SQL schema CREATE TABLE satellites_in_orbit (satellite_id INT, name VARCHAR(100), country VARCHAR(50), launch_date DATE);","completion":"SELECT country, COUNT(*) as satellite_count FROM satellites_in_orbit GROUP BY country ORDER BY satellite_count DESC LIMIT 3;"}
{"prompt":"Insert a new record of a vulnerability assessment for a medical device with ID 5, last assessment date of 2022-01-25, and severity score of 7. with given SQL schema CREATE TABLE medical_devices_v2 (id INT, name VARCHAR(255), last_assessment_date DATE, severity_score INT);","completion":"INSERT INTO medical_devices_v2 (id, name, last_assessment_date, severity_score) VALUES (5, 'Medical Device 5', '2022-01-25', 7);"}
{"prompt":"List all autonomous taxis and their makes, grouped by city, in the 'taxis' table. with given SQL schema CREATE TABLE taxis (id INT, make VARCHAR(20), model VARCHAR(20), year INT, city VARCHAR(20), autonomous BOOLEAN);","completion":"SELECT city, make FROM taxis WHERE autonomous = TRUE GROUP BY city;"}
{"prompt":"What is the average speed of public buses in Sydney? with given SQL schema CREATE TABLE sydney_buses (id INT, route_id VARCHAR(20), speed INT, timestamp TIMESTAMP);","completion":"SELECT AVG(speed)  FROM sydney_buses WHERE route_id IS NOT NULL;"}
{"prompt":"What is the total retail value of the \"Winter 2022\" collection for each manufacturer? with given SQL schema CREATE TABLE Winter2022 (garment_id INT, manufacturer_id INT, garment_name VARCHAR(50), retail_price DECIMAL(5,2)); INSERT INTO Winter2022 (garment_id, manufacturer_id, garment_name, retail_price) VALUES (1, 100, 'Wool Coat', 250.00), (2, 100, 'Cotton Shirt', 50.00), (3, 200, 'Denim Jeans', 75.00), (4, 200, 'Fleece Hoodie', 50.00); CREATE TABLE Manufacturers (manufacturer_id INT, manufacturer_name VARCHAR(50)); INSERT INTO Manufacturers (manufacturer_id, manufacturer_name) VALUES (100, 'GreenFashions'), (200, 'SustainaWear');","completion":"SELECT m.manufacturer_name, SUM(w.retail_price) FROM Winter2022 w INNER JOIN Manufacturers m ON w.manufacturer_id = m.manufacturer_id GROUP BY m.manufacturer_name;"}
{"prompt":"Find the average age of policyholders in Texas. with given SQL schema CREATE TABLE policyholders (policyholder_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), state VARCHAR(50)); INSERT INTO policyholders (policyholder_id, name, age, gender, state) VALUES (1, 'John Doe', 35, 'Male', 'Texas'); INSERT INTO policyholders (policyholder_id, name, age, gender, state) VALUES (2, 'Jane Smith', 40, 'Female', 'Texas');","completion":"SELECT AVG(age) FROM policyholders WHERE state = 'Texas';"}
{"prompt":"What is the average car manufacturing year for policy number 1003? with given SQL schema CREATE TABLE policies (policy_id INT, car_manufacture_year INT); INSERT INTO policies (policy_id, car_manufacture_year) VALUES (1001, 2010), (1002, 2015), (1003, 2008), (1004, 2012);","completion":"SELECT AVG(car_manufacture_year) FROM policies WHERE policy_id = 1003;"}
{"prompt":"What is the average number of members in unions in the USA and UK? with given SQL schema CREATE TABLE UnionMembers (id INT, union_name VARCHAR(50), country VARCHAR(50), member_count INT); INSERT INTO UnionMembers (id, union_name, country, member_count) VALUES (1, 'United Steelworkers', 'USA', 200000), (2, 'UNITE HERE', 'USA', 300000), (3, 'TUC', 'UK', 6000000), (4, 'CUPE', 'Canada', 650000), (5, 'USW', 'Canada', 120000);","completion":"SELECT AVG(member_count) as avg_members FROM UnionMembers WHERE country IN ('USA', 'UK');"}
{"prompt":"List the unique types of waste generated in each area. with given SQL schema CREATE TABLE WasteTypes (id INT, area VARCHAR(10), waste_type VARCHAR(20)); INSERT INTO WasteTypes (id, area, waste_type) VALUES (1, 'urban', 'Organic'), (2, 'rural', 'Plastic'), (3, 'urban', 'Paper');","completion":"SELECT area, waste_type FROM WasteTypes GROUP BY area, waste_type;"}
{"prompt":"What is the average recycling rate for the world for the year 2018? with given SQL schema CREATE TABLE recycling_rates (country VARCHAR(50), year INT, recycling_rate FLOAT); INSERT INTO recycling_rates (country, year, recycling_rate) VALUES ('USA', 2018, 0.35), ('Canada', 2018, 0.40), ('China', 2018, 0.25), ('India', 2018, 0.15);","completion":"SELECT AVG(recycling_rate) FROM recycling_rates WHERE year = 2018;"}
{"prompt":"List all the unique workout types in the Workout table. with given SQL schema CREATE TABLE Workout (WorkoutID INT, MemberID INT, WorkoutType VARCHAR(30)); INSERT INTO Workout (WorkoutID, MemberID, WorkoutType) VALUES (1, 1, 'Running'); INSERT INTO Workout (WorkoutID, MemberID, WorkoutType) VALUES (2, 1, 'Cycling'); INSERT INTO Workout (WorkoutID, MemberID, WorkoutType) VALUES (3, 2, 'Yoga');","completion":"SELECT DISTINCT WorkoutType FROM Workout;"}
{"prompt":"How many creative AI applications have been developed for each industry? with given SQL schema  CREATE TABLE creative_ai_applications (id INT, industry VARCHAR(50), application_count INT); INSERT INTO creative_ai_applications (id, industry, application_count) VALUES (1, 'Entertainment', 12), (2, 'Art', 8), (3, 'Education', 6);","completion":" SELECT industry, application_count FROM creative_ai_applications;"}
{"prompt":"Update the name of the project to 'Wind Power' in the 'rural_energy' table with given SQL schema CREATE TABLE rural_energy (id INT, project_name VARCHAR(255), country VARCHAR(255));","completion":"UPDATE rural_energy SET project_name = 'Wind Power' WHERE id = 1;"}
{"prompt":"What is the number of community development initiatives in Kenya? with given SQL schema CREATE TABLE community_development_initiatives (id INT, country VARCHAR(20)); INSERT INTO community_development_initiatives (id, country) VALUES (1, 'Kenya'), (2, 'Tanzania');","completion":"SELECT COUNT(*) FROM community_development_initiatives WHERE country = 'Kenya';"}
{"prompt":"What is the earliest and latest date of successful satellite deployments by 'India'? with given SQL schema CREATE TABLE SatelliteDeployments (id INT, country VARCHAR(50), year INT, number_of_satellites INT, deployment_status VARCHAR(50), deployment_date DATE);","completion":"SELECT country, MIN(deployment_date) AS earliest_deployment, MAX(deployment_date) AS latest_deployment FROM SatelliteDeployments WHERE country = 'India' AND deployment_status = 'successful' GROUP BY country;"}
{"prompt":"Add a new endangered animal 'Amur Leopard' to 'Conservation Area Z' with given SQL schema CREATE TABLE AnimalPopulation (AnimalID INT, AnimalName TEXT, HabitatID INT, Status TEXT); INSERT INTO AnimalPopulation (AnimalID, AnimalName, HabitatID, Status) VALUES (1, 'Snow Leopard', 1, 'Endangered'); CREATE TABLE Habitats (HabitatID INT, HabitatName TEXT, Location TEXT); INSERT INTO Habitats (HabitatID, HabitatName, Location) VALUES (1, 'Conservation Area Z', 'Country F');","completion":"INSERT INTO AnimalPopulation (AnimalID, AnimalName, HabitatID, Status) VALUES (3, 'Amur Leopard', 1, 'Endangered');"}
{"prompt":"Display the vendor with the highest average price for 'Salmon' in the 'sales' table. with given SQL schema CREATE TABLE sales (id INT PRIMARY KEY, vendor VARCHAR(50), quantity INT, species VARCHAR(50), price DECIMAL(5,2)); INSERT INTO sales (id, vendor, quantity, species, price) VALUES (1, 'Seafood Haven', 20, 'Salmon', 15.99), (2, 'Sea Bounty', 30, 'Tilapia', 9.49), (3, 'Sea Bounty', 15, 'Cod', 14.50), (4, 'Fresh Catch', 25, 'Salmon', 17.99);","completion":"SELECT vendor, AVG(price) FROM sales WHERE species = 'Salmon' GROUP BY vendor ORDER BY AVG(price) DESC LIMIT 1;"}
{"prompt":"What is the average attendance at visual art events in Paris and Rome? with given SQL schema CREATE TABLE Events (event_name TEXT, city TEXT, attendees INT); INSERT INTO Events (event_name, city, attendees) VALUES ('Art Gallery', 'Paris', 100), ('Art Museum', 'Rome', 150), ('Art Exhibition', 'Paris', 200);","completion":"SELECT AVG(attendees) FROM Events WHERE city IN ('Paris', 'Rome') AND event_name LIKE '%Art%';"}
{"prompt":"What is the average time to complete a construction project? with given SQL schema CREATE TABLE project_timeline (project_id SERIAL PRIMARY KEY, start_date DATE, end_date DATE); INSERT INTO project_timeline (project_id, start_date, end_date) VALUES (1, '2021-01-01', '2021-06-01'), (2, '2021-02-01', '2021-08-15'), (3, '2021-03-01', '2021-10-01');","completion":"SELECT AVG(DATEDIFF('day', start_date, end_date)) FROM project_timeline;"}
{"prompt":"How many licenses were issued in each state as of 2022-01-01? with given SQL schema CREATE TABLE Licenses (id INT, state TEXT, issued_date DATE); INSERT INTO Licenses (id, state, issued_date) VALUES (1, 'California', '2021-01-01'), (2, 'Oregon', '2021-01-01'), (3, 'Washington', '2021-01-01');","completion":"SELECT state, COUNT(*) AS num_licenses FROM Licenses WHERE issued_date <= '2022-01-01' GROUP BY state;"}
{"prompt":"What is the total billing amount for cases handled by attorneys from Texas? with given SQL schema CREATE TABLE AttorneyLocation (AttorneyID INT, Location VARCHAR(50)); INSERT INTO AttorneyLocation (AttorneyID, Location) VALUES (1, 'New York'), (2, 'Texas'), (3, 'California');","completion":"SELECT SUM(BillingAmount) FROM AttorneyBilling JOIN AttorneyLocation ON AttorneyBilling.AttorneyID = AttorneyLocation.AttorneyID WHERE Location = 'Texas';"}
{"prompt":"Delete the data for crop A in region X in all months. with given SQL schema CREATE TABLE WeatherData (region TEXT, crop TEXT, month INTEGER, temperature REAL); INSERT INTO WeatherData (region, crop, month, temperature) VALUES ('X', 'A', 6, 22.5), ('X', 'A', 7, 25.0), ('Y', 'B', 6, 18.2);","completion":"DELETE FROM WeatherData WHERE region = 'X' AND crop = 'A';"}
{"prompt":"Find total cost of accommodations for students with a specific accommodation. with given SQL schema CREATE TABLE Accommodations (id INT, student_id INT, accommodation_type VARCHAR(50), cost FLOAT);","completion":"SELECT a.accommodation_type, SUM(a.cost) as total_cost FROM Accommodations a JOIN Students s ON a.student_id = s.id WHERE s.name = 'John Doe' GROUP BY a.accommodation_type;"}
{"prompt":"What is the number of students who received accommodations by graduation year and gender? with given SQL schema CREATE TABLE Accommodations (StudentID INT, AccommodationType VARCHAR(50), AccommodationDate DATE); INSERT INTO Accommodations (StudentID, AccommodationType, AccommodationDate) VALUES (1, 'Sign Language Interpreter', '2021-01-01'); CREATE TABLE Students (StudentID INT, StudentName VARCHAR(50), GraduationYear INT, Gender VARCHAR(10)); INSERT INTO Students (StudentID, StudentName, GraduationYear, Gender) VALUES (1, 'Jacob Taylor', 2023, 'Male');","completion":"SELECT GraduationYear, Gender, COUNT(*) as Total FROM Accommodations JOIN Students ON Accommodations.StudentID = Students.StudentID GROUP BY GraduationYear, Gender;"}
{"prompt":"What is the total number of employees trained in disability awareness in the Pacific region? with given SQL schema CREATE TABLE employee_training_pacific (region VARCHAR(20), training VARCHAR(30), participants INT); INSERT INTO employee_training_pacific (region, training, participants) VALUES ('Pacific', 'Disability Awareness', 200); INSERT INTO employee_training_pacific (region, training, participants) VALUES ('Pacific', 'Disability Awareness', 250); INSERT INTO employee_training_pacific (region, training, participants) VALUES ('Pacific', 'Disability Awareness', 300);","completion":"SELECT region, SUM(participants) FROM employee_training_pacific WHERE region = 'Pacific' AND training = 'Disability Awareness';"}
{"prompt":"Count how many protected forests are in Africa? with given SQL schema CREATE TABLE forests (id INT, country VARCHAR(255), region VARCHAR(255), is_protected BOOLEAN);","completion":"SELECT COUNT(*) FROM forests WHERE region = 'Africa' AND is_protected = TRUE;"}
{"prompt":"What is the maximum response time for medical emergencies? with given SQL schema CREATE TABLE medical_responses (response_id INT, response_type TEXT, response_time FLOAT);","completion":"SELECT response_type, MAX(response_time) AS max_response_time FROM medical_responses WHERE response_type LIKE '%medical%' GROUP BY response_type;"}
{"prompt":"What is the average ticket price for performances at the 'Downtown Theater'? with given SQL schema CREATE TABLE DowntownTheater (show_name TEXT, date DATE, ticket_price FLOAT); INSERT INTO DowntownTheater (show_name, date, ticket_price) VALUES ('Play 1', '2022-01-01', 30.0), ('Play 2', '2022-01-02', 40.0), ('Concert 1', '2022-01-03', 50.0);","completion":"SELECT AVG(ticket_price) FROM DowntownTheater WHERE show_name = 'Downtown Theater'"}
{"prompt":"Show defense contracts for 'Blue Skies Inc.' and 'Green Horizons Inc.' in Q3 2021 with given SQL schema CREATE TABLE defense_contracts (company VARCHAR(255), quarter VARCHAR(10), value DECIMAL(10,2));","completion":"SELECT company, quarter, value FROM defense_contracts WHERE company IN ('Blue Skies Inc.', 'Green Horizons Inc.') AND quarter = 'Q3 2021';"}
{"prompt":"Update all military equipment maintenance records in the Southeast region from Q1 2022 to Q2 2022 with given SQL schema CREATE TABLE Equipment (ID INT, Name TEXT, MaintenanceDate DATE, Region TEXT, Quarter INT); INSERT INTO Equipment (ID, Name, MaintenanceDate, Region, Quarter) VALUES (1, 'Tank A', '2022-01-01', 'Southeast', 1), (2, 'Helicopter B', '2022-02-01', 'Southeast', 1);","completion":"UPDATE Equipment SET MaintenanceDate = CASE WHEN Quarter = 1 THEN DATE_ADD(MaintenanceDate, INTERVAL 1 QUARTER) ELSE MaintenanceDate END WHERE Region = 'Southeast';"}
{"prompt":"Who are the top 3 defense diplomacy partners of 'India' in the last 3 years, based on the number of joint military exercises? with given SQL schema CREATE TABLE diplomacy_exercises (id INT, country1 TEXT, country2 TEXT, exercise_date DATE); INSERT INTO diplomacy_exercises (id, country1, country2, exercise_date) VALUES (1, 'India', 'Russia', '2018-01-01');","completion":"SELECT country2, COUNT(*) AS exercise_count FROM diplomacy_exercises WHERE country1 = 'India' AND exercise_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) GROUP BY country2 ORDER BY exercise_count DESC LIMIT 3;"}
{"prompt":"List all the ports in the 'ports' table that have a crane capacity greater than 150 tons. with given SQL schema CREATE TABLE ports (port_id INT, port_name VARCHAR(50), crane_capacity INT); INSERT INTO ports (port_id, port_name, crane_capacity) VALUES (1, 'Port of Long Beach', 200), (2, 'Port of Los Angeles', 120), (3, 'Port of Oakland', 175);","completion":"SELECT port_name FROM ports WHERE crane_capacity > 150;"}
{"prompt":"Find excavation sites with no artifacts. with given SQL schema CREATE TABLE excavations (id INT, location VARCHAR(255)); INSERT INTO excavations (id, location) VALUES (1, 'Egypt'), (2, 'USA'), (3, 'Mexico');","completion":"SELECT e.id, e.location FROM excavations e LEFT JOIN artifacts a ON e.id = a.excavation_id WHERE a.id IS NULL;"}
{"prompt":"List the top 3 most common artifact types found in the 'Eastern Region'? with given SQL schema CREATE TABLE excavation_sites (site_id INT, site_name TEXT, region TEXT); CREATE TABLE artifacts (artifact_id INT, site_id INT, artifact_type TEXT); INSERT INTO excavation_sites (site_id, site_name, region) VALUES (1, 'Site A', 'Eastern Region'), (2, 'Site B', 'Western Region'), (3, 'Site C', 'Eastern Region'); INSERT INTO artifacts (artifact_id, site_id, artifact_type) VALUES (1, 1, 'pottery'), (2, 1, 'stone'), (3, 2, 'metal'), (4, 3, 'pottery'), (5, 3, 'wooden');","completion":"SELECT artifact_type, COUNT(*) as count FROM artifacts a JOIN excavation_sites e ON a.site_id = e.site_id WHERE e.region = 'Eastern Region' GROUP BY artifact_type ORDER BY count DESC LIMIT 3;"}
{"prompt":"What cybersecurity strategies were implemented in India? with given SQL schema CREATE TABLE cybersecurity_strategies (id INT, strategy VARCHAR(50), location VARCHAR(50), date DATE); INSERT INTO cybersecurity_strategies (id, strategy, location, date) VALUES (3, 'Endpoint Security', 'India', '2020-07-01');","completion":"SELECT strategy FROM cybersecurity_strategies WHERE location = 'India';"}
{"prompt":"What is the maximum number of military personnel in Africa who have received training in military technology in the past 2 years? with given SQL schema CREATE TABLE military_personnel (id INT, name VARCHAR(50), country VARCHAR(50), training_history TEXT); INSERT INTO military_personnel (id, name, country, training_history) VALUES (1, 'Aisha Smith', 'Nigeria', 'AI training,2021'); CREATE TABLE countries (id INT, name VARCHAR(50), region VARCHAR(50)); INSERT INTO countries (id, name, region) VALUES (1, 'Nigeria', 'Africa');","completion":"SELECT MAX(count(*)) FROM military_personnel m JOIN countries c ON m.country = c.name WHERE c.region = 'Africa' AND m.training_history LIKE '%[0-9]% training,[0-9][0-9]%' GROUP BY YEAR(SUBSTRING(m.training_history, INSTR(m.training_history, ',') + 1, 4));"}
{"prompt":"What is the total amount donated in Q2 2022? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, Amount FLOAT, DonationDate DATE); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (1, 1, 500.00, '2021-01-01'), (2, 2, 800.00, '2021-02-01'), (3, 1, 300.00, '2022-03-15'), (4, 3, 150.00, '2022-04-10'), (5, 4, 250.00, '2022-05-01');","completion":"SELECT SUM(Amount) FROM Donations WHERE DATE_FORMAT(DonationDate, '%Y-%m') BETWEEN '2022-04' AND '2022-06';"}
{"prompt":"Find the average age of non-binary employees who have completed the compliance training. with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(20), Age INT, CompletedComplianceTraining BOOLEAN);","completion":"SELECT AVG(Age) FROM Employees WHERE Gender = 'Non-binary' AND CompletedComplianceTraining = TRUE;"}
{"prompt":"What is the total number of employees who identify as a racial or ethnic minority? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Department VARCHAR(20), Race VARCHAR(20)); INSERT INTO Employees (EmployeeID, Gender, Department, Race) VALUES (1, 'Male', 'IT', 'White'), (2, 'Female', 'IT', 'Asian'), (3, 'Male', 'HR', 'Black'), (4, 'Female', 'HR', 'Hispanic'), (5, 'Non-binary', 'Marketing', 'White');","completion":"SELECT COUNT(*) FROM Employees WHERE Race <> 'White';"}
{"prompt":"What is the average energy production for each source in Texas between 2021-01-01 and 2021-01-07, excluding sources with only one production record? with given SQL schema CREATE TABLE energy_production_3 (id INT, source VARCHAR(50), location VARCHAR(50), production_quantity INT, production_date DATE); INSERT INTO energy_production_3 (id, source, location, production_quantity, production_date) VALUES (3, 'Wind', 'Texas', 7000, '2021-01-02');","completion":"SELECT source, AVG(production_quantity) as avg_production FROM energy_production_3 WHERE production_date BETWEEN '2021-01-01' AND '2021-01-07' AND location = 'Texas' GROUP BY source HAVING COUNT(*) > 1;"}
{"prompt":"What was the total energy storage capacity in California in 2018 and 2019? with given SQL schema CREATE TABLE energy_storage (region VARCHAR(255), capacity FLOAT, year INT); INSERT INTO energy_storage (region, capacity, year) VALUES ('California', 1000, 2018), ('California', 1200, 2019), ('Texas', 1500, 2018), ('Texas', 1800, 2019);","completion":"SELECT SUM(capacity) as total_capacity, year FROM energy_storage WHERE region = 'California' GROUP BY year;"}
{"prompt":"What is the minimum and maximum technology accessibility score for organizations in the education sector? with given SQL schema CREATE TABLE org_accessibility (org_name TEXT, sector TEXT, tech_accessibility_score INT); INSERT INTO org_accessibility (org_name, sector, tech_accessibility_score) VALUES ('Org1', 'education', 80), ('Org2', 'education', 90), ('Org3', 'education', 70), ('Org4', 'education', 85), ('Org5', 'education', 95);","completion":"SELECT MIN(tech_accessibility_score), MAX(tech_accessibility_score) FROM org_accessibility WHERE sector = 'education';"}
{"prompt":"Find the number of vehicles in each maintenance category in the 'vehicle_maintenance' table. with given SQL schema CREATE TABLE vehicle_maintenance (vehicle_id INT, category VARCHAR(255), maintenance_date DATE);","completion":"SELECT category, COUNT(*) as num_vehicles FROM vehicle_maintenance GROUP BY category;"}
{"prompt":"List all unique route IDs and station IDs from the route_stations table with given SQL schema CREATE TABLE route_stations (route_id INTEGER, station_id INTEGER); INSERT INTO route_stations (route_id, station_id) VALUES (1, 1);","completion":"SELECT DISTINCT route_id, station_id FROM route_stations;"}
{"prompt":"Show the number of trips taken by each passenger on the 'Red Line' with given SQL schema CREATE TABLE passengers (passenger_id INT, passenger_name VARCHAR(20)); CREATE TABLE passenger_trips (trip_id INT, passenger_id INT, route_id INT, trip_date DATE);","completion":"SELECT passengers.passenger_name, COUNT(passenger_trips.trip_id) FROM passengers JOIN passenger_trips ON passengers.passenger_id = passenger_trips.passenger_id WHERE passenger_trips.route_id = 1 GROUP BY passengers.passenger_id, passengers.passenger_name;"}
{"prompt":"What is the average value for each accessibility feature per route for routes in Japan? with given SQL schema CREATE TABLE accessibility (id INT, route_id INT, stop_id INT, feature VARCHAR(255), value DECIMAL(3,1), country VARCHAR(255)); INSERT INTO accessibility (id, route_id, stop_id, feature, value, country) VALUES (1, 1, 1, 'Elevator', 0, 'Japan'); INSERT INTO accessibility (id, route_id, stop_id, feature, value, country) VALUES (2, 2, 2, 'Stairs', 10, 'Japan');","completion":"SELECT a.route_id, a.feature, AVG(a.value) AS avg_value FROM accessibility a WHERE a.country = 'Japan' GROUP BY a.route_id, a.feature;"}
{"prompt":"What is the name of the passenger who boarded the bus with the route 101 on March 15, 2021 at 10:15 AM? with given SQL schema CREATE TABLE RIDERS (id INT, name VARCHAR(50), boarding_time TIMESTAMP); CREATE TABLE BUS_ROUTES (route_number INT, start_time TIMESTAMP, end_time TIMESTAMP); INSERT INTO BUS_ROUTES VALUES (101, '2021-03-15 10:00:00', '2021-03-15 11:00:00'); INSERT INTO RIDERS VALUES (1, 'Jane Smith', '2021-03-15 10:15:00');","completion":"SELECT name FROM RIDERS WHERE boarding_time = '2021-03-15 10:15:00' AND id IN (SELECT rider_id FROM BUS_ROUTES_RIDERS WHERE route_number = 101);"}
{"prompt":"What is the total weight of non-organic fruits in the FOOD_ITEMS table? with given SQL schema CREATE TABLE FOOD_ITEMS (id INT, name VARCHAR(50), category VARCHAR(50), is_organic BOOLEAN, weight FLOAT); INSERT INTO FOOD_ITEMS (id, name, category, is_organic, weight) VALUES (1, 'Apple', 'Fruit', false, 0.15), (2, 'Banana', 'Fruit', false, 0.2);","completion":"SELECT SUM(weight) FROM FOOD_ITEMS WHERE is_organic = false AND category = 'Fruit';"}
{"prompt":"What is the total number of items sold by each salesperson in the sales database? with given SQL schema CREATE TABLE sales (salesperson VARCHAR(20), items INT); INSERT INTO sales (salesperson, items) VALUES ('John', 50), ('Jane', 70), ('Doe', 60);","completion":"SELECT salesperson, SUM(items) FROM sales GROUP BY salesperson;"}
{"prompt":"What is the minimum number of public participations in any initiative? with given SQL schema CREATE TABLE participations (initiative_id INT, num_participants INT); INSERT INTO participations (initiative_id, num_participants) VALUES (1, 500), (2, 700), (3, 300), (4, 800), (5, 100);","completion":"SELECT MIN(num_participants) FROM participations;"}
{"prompt":"Display the names of community health workers who manage both mental health and physical health cases. with given SQL schema CREATE TABLE CommunityHealthWorkers (WorkerID INT, Name VARCHAR(50), Specialty VARCHAR(50)); CREATE TABLE Cases (WorkerID INT, CaseID INT, CaseType VARCHAR(20)); INSERT INTO CommunityHealthWorkers (WorkerID, Name, Specialty) VALUES (1, 'John Doe', 'Mental Health'); INSERT INTO CommunityHealthWorkers (WorkerID, Name, Specialty) VALUES (2, 'Jane Smith', 'Physical Health'); INSERT INTO Cases (WorkerID, CaseID, CaseType) VALUES (1, 101, 'Mental Health'); INSERT INTO Cases (WorkerID, CaseID, CaseType) VALUES (2, 201, 'Physical Health'); INSERT INTO Cases (WorkerID, CaseID, CaseType) VALUES (1, 102, 'Mental Health'); INSERT INTO Cases (WorkerID, CaseID, CaseType) VALUES (2, 202, 'Physical Health');","completion":"SELECT DISTINCT c.Name FROM Cases c INNER JOIN CommunityHealthWorkers h ON c.WorkerID = h.WorkerID WHERE h.Specialty = 'Mental Health' AND h.Specialty = 'Physical Health';"}
{"prompt":"What is the total number of health equity metric evaluations conducted in 2020 and 2021? with given SQL schema CREATE TABLE evaluations (evaluation_id INT, evaluation_date DATE);","completion":"SELECT COUNT(*) as evaluation_count FROM evaluations WHERE evaluation_date BETWEEN '2020-01-01' AND '2021-12-31';"}
{"prompt":"How many eco-friendly hotels are in Portugal? with given SQL schema CREATE TABLE eco_hotels (hotel_id INT, hotel_name TEXT, country TEXT); INSERT INTO eco_hotels (hotel_id, hotel_name, country) VALUES (1, 'Green Hotel', 'Portugal'), (2, 'Eco Lodge', 'Portugal');","completion":"SELECT COUNT(*) FROM eco_hotels WHERE country = 'Portugal';"}
{"prompt":"Top 3 countries with most hotel listings on Online Travel Agency? with given SQL schema CREATE TABLE ota_hotels (hotel_id INT, hotel_name TEXT, country TEXT, listings INT); INSERT INTO ota_hotels (hotel_id, hotel_name, country, listings) VALUES (1, 'Hotel Royal', 'India', 500), (2, 'Palace Hotel', 'France', 700), (3, 'Beach Resort', 'Brazil', 800), (4, 'Luxury Villa', 'India', 600), (5, 'Mountain Lodge', 'Nepal', 300);","completion":"SELECT country, SUM(listings) as total_listings FROM ota_hotels GROUP BY country ORDER BY total_listings DESC LIMIT 3;"}
{"prompt":"What is the total number of species in the Arctic biodiversity database? with given SQL schema CREATE TABLE ArcticBiodiversity (species VARCHAR(50), common_name VARCHAR(50)); INSERT INTO ArcticBiodiversity (species, common_name) VALUES ('Alopex lagopus', 'Arctic Fox'); INSERT INTO ArcticBiodiversity (species, common_name) VALUES ('Rangifer tarandus', 'Reindeer'); INSERT INTO ArcticBiodiversity (species, common_name) VALUES ('Ursus maritimus', 'Polar Bear');","completion":"SELECT COUNT(species) FROM ArcticBiodiversity;"}
{"prompt":"Who are the top 3 medication managers with the most patients in India and South Africa? with given SQL schema CREATE TABLE medication_managers (id INT, name TEXT); CREATE TABLE patients (id INT, manager_id INT, state TEXT); INSERT INTO medication_managers (id, name) VALUES (1, 'Dr. Ravi Patel'); INSERT INTO medication_managers (id, name) VALUES (2, 'Dr. Naledi Zuma'); INSERT INTO patients (id, manager_id, state) VALUES (1, 1, 'India'); INSERT INTO patients (id, manager_id, state) VALUES (2, 1, 'South Africa'); INSERT INTO patients (id, manager_id, state) VALUES (3, 2, 'South Africa');","completion":"SELECT medication_managers.name, COUNT(patients.id) AS patient_count FROM medication_managers INNER JOIN patients ON medication_managers.id = patients.manager_id WHERE patients.state IN ('India', 'South Africa') GROUP BY medication_managers.name ORDER BY patient_count DESC LIMIT 3;"}
{"prompt":"Identify the number of unique community organizations involved in each restorative justice program with given SQL schema CREATE TABLE community_orgs (org_id INT, program_id INT, org_name VARCHAR(50)); INSERT INTO community_orgs (org_id, program_id, org_name) VALUES (1, 1, 'Neighborhood Watch'), (2, 1, 'Community Center'), (3, 2, 'Youth Group'), (4, 3, 'Victim Support'), (5, 1, 'Local Nonprofit');","completion":"SELECT program_id, COUNT(DISTINCT org_name) FROM community_orgs GROUP BY program_id;"}
{"prompt":"What is the average age of legal aid service users by gender in the 'legal_aid_users' table? with given SQL schema CREATE TABLE legal_aid_users (user_id INT, age INT, gender VARCHAR(10), last_access DATE);","completion":"SELECT gender, AVG(age) FROM legal_aid_users GROUP BY gender;"}
{"prompt":"What is the difference in the average duration of closed cases between attorneys in the \"criminal_defense\" department, ordered by the difference? with given SQL schema CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO attorneys (attorney_id, name, department) VALUES (1, 'John Doe', 'criminal_defense'); INSERT INTO attorneys (attorney_id, name, department) VALUES (2, 'Jane Smith', 'criminal_defense'); CREATE TABLE cases (case_id INT, attorney_id INT, status VARCHAR(50), duration INT); INSERT INTO cases (case_id, attorney_id, status, duration) VALUES (1, 1, 'closed', 25); INSERT INTO cases (case_id, attorney_id, status, duration) VALUES (2, 1, 'closed', 30); INSERT INTO cases (case_id, attorney_id, status, duration) VALUES (3, 2, 'closed', 40);","completion":"SELECT attorney_id, AVG(duration) - LAG(AVG(duration)) OVER (PARTITION BY attorney_id ORDER BY attorney_id) as difference FROM cases WHERE status = 'closed' GROUP BY attorney_id ORDER BY difference;"}
{"prompt":"What is the total quantity of orders from customers in the 'Asia-Pacific' region? with given SQL schema CREATE TABLE orders (id INT, dish_id INT, quantity INT, customer_region TEXT); INSERT INTO orders (id, dish_id, quantity, customer_region) VALUES (1, 1, 10, 'Asia-Pacific'), (2, 2, 8, 'Europe'), (3, 3, 5, 'North America'), (4, 1, 7, 'Asia-Pacific'), (5, 2, 9, 'Europe'), (6, 4, 12, 'South America');","completion":"SELECT SUM(quantity) FROM orders WHERE customer_region = 'Asia-Pacific';"}
{"prompt":"What is the earliest date of contract negotiation for each defense project in the Asia-Pacific region? with given SQL schema CREATE TABLE Projects (ProjectID INT, ProjectName VARCHAR(50), StartDate DATE, EndDate DATE, Region VARCHAR(50)); INSERT INTO Projects (ProjectID, ProjectName, StartDate, EndDate, Region) VALUES (1, 'Project A', '2022-01-01', '2023-12-31', 'Asia-Pacific'), (2, 'Project B', '2022-03-15', '2024-02-28', 'Europe'), (3, 'Project C', '2022-06-01', '2025-05-31', 'Asia-Pacific'), (4, 'Project D', '2022-10-01', '2026-09-30', 'Americas');","completion":"SELECT ProjectName, MIN(StartDate) AS EarliestDate FROM Projects WHERE Region = 'Asia-Pacific' GROUP BY ProjectName;"}
{"prompt":"Which defense projects have the highest geopolitical risk in the Asia-Pacific region? with given SQL schema CREATE TABLE defense_projects_risk (id INT, project_name VARCHAR(50), region VARCHAR(20), risk_level DECIMAL(3,2));","completion":"SELECT project_name, risk_level FROM defense_projects_risk WHERE region = 'Asia-Pacific' AND risk_level = (SELECT MAX(risk_level) FROM defense_projects_risk WHERE region = 'Asia-Pacific');"}
{"prompt":"List the top 3 cities with the highest number of broadband subscribers as of 2021-12-31. with given SQL schema CREATE TABLE subscribers (subscriber_id INT, name VARCHAR(50), city VARCHAR(50), service VARCHAR(10), start_date DATE); INSERT INTO subscribers (subscriber_id, name, city, service, start_date) VALUES (1, 'John Doe', 'New York', 'broadband', '2021-01-01'), (2, 'Jane Smith', 'Los Angeles', 'broadband', '2021-06-15');","completion":"SELECT city, COUNT(*) AS num_subscribers FROM subscribers WHERE service = 'broadband' AND start_date <= '2021-12-31' GROUP BY city ORDER BY num_subscribers DESC LIMIT 3;"}
{"prompt":"What is the total amount donated by donors from the 'finance' sector in the year 2022? with given SQL schema CREATE TABLE donations (donation_id INT, donor_sector TEXT, donation_date DATE, donation_amount FLOAT); INSERT INTO donations (donation_id, donor_sector, donation_date, donation_amount) VALUES (1, 'finance', '2022-01-01', 1000.00), (2, 'finance', '2022-02-01', 2000.00);","completion":"SELECT SUM(donation_amount) FROM donations WHERE donor_sector = 'finance' AND YEAR(donation_date) = 2022;"}
{"prompt":"Update the donation amount to $10000 for donor_id 5, who identifies as genderqueer. with given SQL schema CREATE TABLE donors (donor_id INT, donation_amount DECIMAL(10,2), donation_year INT, gender VARCHAR(255)); INSERT INTO donors (donor_id, donation_amount, donation_year, gender) VALUES (1, 5000.00, 2020, 'female'), (2, 3000.00, 2019, 'male'), (3, 7000.00, 2020, 'non-binary'), (4, 9000.00, 2021, 'non-binary'), (5, 8000.00, 2021, 'genderqueer');","completion":"UPDATE donors SET donation_amount = 10000 WHERE donor_id = 5;"}
{"prompt":"Which organization received the most number of donations on a single day? with given SQL schema CREATE TABLE Donations (DonationID INT, DonationDate DATE, DonationAmount DECIMAL(10,2), OrgID INT); INSERT INTO Donations (DonationID, DonationDate, DonationAmount, OrgID) VALUES (1, '2022-01-01', 500.00, 1), (2, '2022-01-02', 700.00, 1), (3, '2022-01-01', 500.00, 2), (4, '2022-01-03', 800.00, 2), (5, '2022-01-03', 300.00, 2), (6, '2022-01-04', 400.00, 3);","completion":"SELECT OrgID, DonationDate, COUNT(*) as NumDonations FROM Donations GROUP BY OrgID, DonationDate ORDER BY OrgID, NumDonations DESC;"}
{"prompt":"What is the average number of wins for players who play \"Racing Simulator 2022\"? with given SQL schema CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Game VARCHAR(50), Wins INT); INSERT INTO Players (PlayerID, PlayerName, Game, Wins) VALUES (1, 'John Doe', 'Racing Simulator 2022', 25), (2, 'Jane Smith', 'Racing Simulator 2022', 30), (3, 'Alice Johnson', 'Shooter Game 2022', 22);","completion":"SELECT AVG(Wins) FROM Players WHERE Game = 'Racing Simulator 2022';"}
{"prompt":"What is the average age of players who have played Fortnite and are from Asia? with given SQL schema CREATE TABLE Players (PlayerID INT, PlayerAge INT, Game VARCHAR(50), Continent VARCHAR(50)); INSERT INTO Players (PlayerID, PlayerAge, Game, Continent) VALUES (1, 22, 'Fortnite', 'Asia'); INSERT INTO Players (PlayerID, PlayerAge, Game, Continent) VALUES (2, 25, 'Fortnite', 'Europe'); INSERT INTO Players (PlayerID, PlayerAge, Game, Continent) VALUES (3, 19, 'Fortnite', 'Asia'); INSERT INTO Players (PlayerID, PlayerAge, Game, Continent) VALUES (4, 28, 'Fortnite', 'Asia');","completion":"SELECT AVG(PlayerAge) as AvgAge FROM Players WHERE Game = 'Fortnite' AND Continent = 'Asia';"}
{"prompt":"What is the average number of games played by players who joined esports events in Canada, per month? with given SQL schema CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Country VARCHAR(50), TotalGames INT); INSERT INTO Players (PlayerID, PlayerName, Country, TotalGames) VALUES (1, 'John Doe', 'Canada', 200);","completion":"SELECT AVG(TotalGames) FROM Players WHERE Country = 'Canada' AND PlayerID IN (SELECT PlayerID FROM EventParticipation WHERE EventCountry = 'Canada')"}
{"prompt":"Update the temperature values to Celsius for all records in 'Germany' in the month of May. with given SQL schema CREATE TABLE weather_stations (id INT, name TEXT, country TEXT); INSERT INTO weather_stations (id, name, country) VALUES (1, 'WS1', 'Germany'), (2, 'WS2', 'France'); CREATE TABLE temperature (id INT, station_id INT, timestamp TIMESTAMP, temperature FLOAT); INSERT INTO temperature (id, station_id, timestamp, temperature) VALUES (1, 1, '2021-05-01 12:00:00', 80), (2, 1, '2021-05-01 16:00:00', 85), (3, 1, '2021-05-01 20:00:00', 78), (4, 2, '2021-05-01 12:00:00', 72), (5, 2, '2021-05-01 16:00:00', 75), (6, 2, '2021-05-01 20:00:00', 70);","completion":"UPDATE temperature SET temperature = (temperature - 32) * 5\/9 WHERE station_id IN (SELECT id FROM weather_stations WHERE country = 'Germany') AND EXTRACT(MONTH FROM timestamp) = 5;"}
{"prompt":"What is the total number of clean energy policies in the 'policy_database' table for countries in the 'Europe' region? with given SQL schema CREATE TABLE policy_database (policy_id INT, country_name VARCHAR(100), region VARCHAR(50), policy_type VARCHAR(50)); INSERT INTO policy_database (policy_id, country_name, region, policy_type) VALUES (1, 'Germany', 'Europe', 'Renewable Portfolio Standard'), (2, 'Canada', 'North America', 'Carbon Tax'), (3, 'France', 'Europe', 'Feed-in Tariff');","completion":"SELECT COUNT(*) FROM policy_database WHERE region = 'Europe';"}
{"prompt":"What is the percentage of security incidents resolved within SLA for each department in the last quarter? with given SQL schema CREATE TABLE SecurityIncidents(id INT, department VARCHAR(50), resolved BOOLEAN, resolution_time FLOAT, incident_date DATE);","completion":"SELECT department, AVG(IF(resolved, 1, 0)) as resolved_within_sla FROM SecurityIncidents WHERE incident_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) GROUP BY department;"}
{"prompt":"What is the number of shared electric scooters in Sao Paulo? with given SQL schema CREATE TABLE shared_escooters (scooter_id INT, registration_date TIMESTAMP, scooter_type VARCHAR(50), city VARCHAR(50));","completion":"SELECT COUNT(*) as num_scooters FROM shared_escooters WHERE city = 'Sao Paulo';"}
{"prompt":"How many policyholders from Brazil have an annual income greater than $50,000, and what is the average claim amount for this group? with given SQL schema CREATE TABLE Policyholders (PolicyholderID INT, Country VARCHAR(50), AnnualIncome DECIMAL(10, 2)); INSERT INTO Policyholders VALUES (1, 'Brazil', 60000); INSERT INTO Policyholders VALUES (2, 'Brazil', 40000); INSERT INTO Policyholders VALUES (3, 'Brazil', 70000); INSERT INTO Policyholders VALUES (4, 'Brazil', 35000); CREATE TABLE Claims (PolicyholderID INT, ClaimAmount DECIMAL(10, 2)); INSERT INTO Claims VALUES (1, 5000); INSERT INTO Claims VALUES (2, 3000); INSERT INTO Claims VALUES (3, 8000);","completion":"SELECT COUNT(*) AS HighIncomePolicyholders, AVG(ClaimAmount) AS AvgClaimAmount FROM Claims JOIN Policyholders ON Claims.PolicyholderID = Policyholders.PolicyholderID WHERE Policyholders.Country = 'Brazil' AND Policyholders.AnnualIncome > 50000;"}
{"prompt":"What is the total number of policies for 'High-Risk' drivers? with given SQL schema CREATE TABLE policies (id INT, policy_number TEXT, driver_risk TEXT); INSERT INTO policies (id, policy_number, driver_risk) VALUES (1, 'P1234', 'Medium-Risk'); INSERT INTO policies (id, policy_number, driver_risk) VALUES (2, 'P5678', 'High-Risk'); INSERT INTO policies (id, policy_number, driver_risk) VALUES (3, 'P9012', 'Low-Risk');","completion":"SELECT COUNT(*) FROM policies WHERE driver_risk = 'High-Risk';"}
{"prompt":"Find the maximum safety rating for members in the 'Government_Employees_Union'. with given SQL schema CREATE TABLE Government_Employees_Union (union_member_id INT, member_id INT, safety_rating FLOAT); INSERT INTO Government_Employees_Union (union_member_id, member_id, safety_rating) VALUES (1, 101, 8.50), (1, 102, 9.25), (1, 103, 9.00), (2, 201, 8.75), (2, 202, 9.50);","completion":"SELECT MAX(safety_rating) FROM Government_Employees_Union;"}
{"prompt":"Delete all exhibitions with less than 500 visitors with given SQL schema CREATE TABLE Exhibitions (id INT, name TEXT, visitor_count INT);","completion":"DELETE FROM Exhibitions WHERE visitor_count < 500;"}
{"prompt":"Find the top 3 contributors with the lowest recycling rate in the 'waste_contributors' table. with given SQL schema CREATE TABLE waste_contributors (contributor VARCHAR(20), recycling_rate FLOAT); INSERT INTO waste_contributors (contributor, recycling_rate) VALUES ('Manufacturing', 0.4), ('Commercial', 0.38), ('Residential', 0.35), ('Institutional', 0.32), ('Agricultural', 0.2), ('Industrial', 0.15);","completion":"SELECT contributor FROM waste_contributors WHERE recycling_rate IN (SELECT MIN(recycling_rate) FROM waste_contributors) LIMIT 3;"}
{"prompt":"What is the maximum heart rate for users during morning workouts? with given SQL schema CREATE TABLE workouts (id INT, user_id INT, heart_rate INT, workout_time TIME); INSERT INTO workouts (id, user_id, heart_rate, workout_time) VALUES (1, 1, 160, '07:00:00');","completion":"SELECT MAX(heart_rate) FROM workouts WHERE workout_time BETWEEN '06:00:00' AND '11:59:59';"}
{"prompt":"What is the average safety score for all creative AI applications in the 'AI_Fairness' schema? with given SQL schema CREATE SCHEMA AI_Fairness;CREATE TABLE Creative_AI (app_id INT, safety_score FLOAT); INSERT INTO Creative_AI (app_id, safety_score) VALUES (1, 0.8), (2, 0.9), (3, 0.7);","completion":"SELECT AVG(safety_score) FROM AI_Fairness.Creative_AI;"}
{"prompt":"List all rural infrastructure projects in Nepal and their respective start dates. with given SQL schema CREATE TABLE rural_infrastructure_projects (id INT, project_name VARCHAR(50), country VARCHAR(50), start_date DATE); INSERT INTO rural_infrastructure_projects (id, project_name, country, start_date) VALUES (1, 'Rajiv Gandhi Rural Electrification Program', 'India', '2010-04-01'), (2, 'BharatNet Rural Broadband Initiative', 'India', '2015-07-26'), (3, 'Rural Access Program', 'Nepal', '2007-01-01');","completion":"SELECT project_name, start_date FROM rural_infrastructure_projects WHERE country = 'Nepal';"}
{"prompt":"What is the total number of locations in the fish_stock table? with given SQL schema CREATE TABLE fish_stock (location VARCHAR(50)); INSERT INTO fish_stock (location) VALUES ('Lake Victoria'), ('Lake Tanganyika'), ('Pacific Ocean');","completion":"SELECT COUNT(DISTINCT location) FROM fish_stock;"}
{"prompt":"Identify the top 3 countries with the highest percentage of attendees with given SQL schema CREATE TABLE attendee_info (attendee_id INT, country VARCHAR(20)); INSERT INTO attendee_info (attendee_id, country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'USA'), (5, 'Brazil'), (6, 'USA');","completion":"SELECT country, (COUNT(attendee_id) OVER (PARTITION BY country) * 100.0 \/ (SELECT COUNT(attendee_id) FROM attendee_info)) AS percentage FROM attendee_info GROUP BY country ORDER BY percentage DESC LIMIT 3;"}
{"prompt":"What is the total revenue for the top 5 dispensaries in Michigan in the last year? with given SQL schema CREATE TABLE Dispensaries (id INT, name TEXT, state TEXT);CREATE TABLE Transactions (id INT, dispensary_id INT, transaction_value DECIMAL);","completion":"SELECT D.name, SUM(T.transaction_value) FROM Dispensaries D JOIN Transactions T ON D.id = T.dispensary_id WHERE D.state = 'Michigan' AND T.transaction_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY D.id ORDER BY SUM(T.transaction_value) DESC LIMIT 5;"}
{"prompt":"Which cultivators supply sativa strains to dispensaries in Oregon? with given SQL schema CREATE TABLE CultivatorData (CultivatorName VARCHAR(50), State VARCHAR(20), Strain VARCHAR(20)); INSERT INTO CultivatorData (CultivatorName, State, Strain) VALUES ('Highland Organics', 'Oregon', 'Sativa'), ('Emerald Creek Farms', 'California', 'Sativa'), ('Mountain High Sungrown', 'Oregon', 'Hybrid'), ('Green Earth Gardens', 'Washington', 'Indica'), ('Pure Green Farms', 'Colorado', 'Sativa');","completion":"SELECT CultivatorName FROM CultivatorData WHERE State = 'Oregon' AND Strain = 'Sativa';"}
{"prompt":"Find the attorney who has billed the most hours in the 'billing' table? with given SQL schema CREATE TABLE billing (attorney_id INT, client_id INT, hours FLOAT, rate FLOAT); INSERT INTO billing (attorney_id, client_id, hours, rate) VALUES (1, 101, 10, 300), (2, 102, 8, 350), (3, 103, 12, 250);","completion":"SELECT attorney_id, SUM(hours) FROM billing GROUP BY attorney_id ORDER BY SUM(hours) DESC LIMIT 1;"}
{"prompt":"What is the total billing amount by practice area? with given SQL schema CREATE TABLE PracticeAreas (PracticeAreaID INT, PracticeArea VARCHAR(50)); INSERT INTO PracticeAreas (PracticeAreaID, PracticeArea) VALUES (1, 'Criminal Law'), (2, 'Family Law'), (3, 'Personal Injury'), (4, 'Employment Law');","completion":"SELECT PA.PracticeArea, SUM(P.BillingAmount) AS Total_Billing_Amount FROM PracticeAreas PA INNER JOIN Precedents P ON PA.PracticeAreaID = P.PracticeAreaID GROUP BY PA.PracticeArea;"}
{"prompt":"Which clients from historically marginalized regions have paid less than the average billing rate? with given SQL schema CREATE TABLE Clients (id INT, name VARCHAR(50), attorney_id INT, region VARCHAR(50), paid DECIMAL(5,2)); CREATE TABLE Attorneys (id INT, billing_rate DECIMAL(5,2)); INSERT INTO Attorneys (id, billing_rate) VALUES (1, 200.00), (2, 300.00); INSERT INTO Clients (id, name, attorney_id, region, paid) VALUES (1, 'Client1', 1, 'Historically Marginalized Region 1', 600.00), (2, 'Client2', 1, 'Historically Marginalized Region 1', 400.00), (3, 'Client3', 2, 'Historically Marginalized Region 2', 1000.00), (4, 'Client4', 2, 'Not Historically Marginalized Region', 1200.00);","completion":"SELECT Clients.name FROM Clients INNER JOIN Attorneys ON Clients.attorney_id = Attorneys.id WHERE Clients.paid < Attorneys.billing_rate AND Clients.region IN ('Historically Marginalized Region 1', 'Historically Marginalized Region 2');"}
{"prompt":"Calculate the total quantity of chemicals that were produced in the first quarter of 2022 and display them in alphabetical order. with given SQL schema CREATE TABLE manufacturing_plants ( id INT PRIMARY KEY, plant_name VARCHAR(255), location VARCHAR(255), country VARCHAR(255), capacity INT, last_inspection_date DATE);CREATE TABLE production_data ( id INT PRIMARY KEY, plant_id INT, chemical_name VARCHAR(255), production_date DATE, quantity INT, FOREIGN KEY (plant_id) REFERENCES manufacturing_plants(id));CREATE TABLE chemical_prices ( id INT PRIMARY KEY, chemical_name VARCHAR(255), price DECIMAL(10,2), price_updated_date DATE);","completion":"SELECT chemical_name, SUM(quantity) AS total_quantity FROM production_data WHERE production_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY chemical_name ORDER BY chemical_name;"}
{"prompt":"What is the total greenhouse gas emissions reduction due to climate finance projects in Central America? with given SQL schema CREATE TABLE greenhouse_gas_emissions (id INT PRIMARY KEY, source_type VARCHAR(50), country VARCHAR(50), year INT, amount DECIMAL(10,2));CREATE TABLE climate_finance_projects (id INT PRIMARY KEY, project_type VARCHAR(50), country VARCHAR(50), year INT, reduction DECIMAL(10,2));CREATE VIEW v_central_american_finance_projects AS SELECT cfp.project_type, cfp.country, SUM(cfp.reduction) AS total_reduction FROM climate_finance_projects cfp WHERE cfp.country LIKE 'Central America%' GROUP BY cfp.project_type, cfp.country;CREATE VIEW v_ghg_reductions AS SELECT ghe.source_type, ghe.country, SUM(ghe.amount) * -1 AS total_reduction FROM greenhouse_gas_emissions ghe JOIN v_central_american_finance_projects cfp ON ghe.country = cfp.country WHERE ghe.source_type = 'Greenhouse Gas' GROUP BY ghe.source_type, ghe.country;","completion":"SELECT total_reduction FROM v_ghg_reductions WHERE source_type = 'Greenhouse Gas';"}
{"prompt":"What is the market share of drug 'JKL-012' in India in Q3 2022? with given SQL schema CREATE TABLE market_share (drug_name TEXT, region TEXT, market_share FLOAT, quarter INT, year INT); INSERT INTO market_share (drug_name, region, market_share, quarter, year) VALUES ('JKL-012', 'India', 0.65, 3, 2022), ('MNO-345', 'China', 0.70, 3, 2022), ('GHI-999', 'India', 0.55, 3, 2022);","completion":"SELECT market_share FROM market_share WHERE drug_name = 'JKL-012' AND region = 'India' AND quarter = 3 AND year = 2022;"}
{"prompt":"Which drugs have been approved for pediatric use in the past 5 years? with given SQL schema CREATE TABLE drug_approval (drug_name TEXT, approval_date DATE); INSERT INTO drug_approval (drug_name, approval_date) VALUES ('DrugA', '2018-01-01'), ('DrugB', '2017-05-15'), ('DrugC', '2020-09-27'), ('DrugD', '2016-08-04');","completion":"SELECT drug_name FROM drug_approval WHERE approval_date >= DATE('now', '-5 year');"}
{"prompt":"List all the public health policies for California and Texas. with given SQL schema CREATE TABLE HealthPolicies (id INT, name VARCHAR(50), state VARCHAR(50), description TEXT); INSERT INTO HealthPolicies VALUES (1, 'Policy A', 'California', 'Description A'); INSERT INTO HealthPolicies VALUES (2, 'Policy B', 'California', 'Description B'); INSERT INTO HealthPolicies VALUES (3, 'Policy C', 'Texas', 'Description C');","completion":"SELECT * FROM HealthPolicies WHERE state IN ('California', 'Texas');"}
{"prompt":"List the number of founders for companies in the 'San Francisco' region with given SQL schema CREATE TABLE companies (id INT, region VARCHAR(255), num_founders INT); INSERT INTO companies (id, region, num_founders) VALUES (1, 'San Francisco', 2), (2, 'New York', 3), (3, 'Los Angeles', 1);","completion":"SELECT region, COUNT(*) as num_companies FROM companies WHERE region = 'San Francisco';"}
{"prompt":"What is the average total funding for companies founded after 2010? with given SQL schema CREATE TABLE company_founding (id INT PRIMARY KEY, name TEXT, location TEXT, founding_year INT, diversity_metrics TEXT); CREATE TABLE funding_records (id INT PRIMARY KEY, company_id INT, funding_amount INT, funding_date DATE); CREATE VIEW company_funding_summary AS SELECT company_id, SUM(funding_amount) AS total_funding FROM funding_records GROUP BY company_id;","completion":"SELECT AVG(f.total_funding) as avg_total_funding FROM company_funding_summary f JOIN company_founding c ON f.company_id = c.id WHERE c.founding_year > 2010;"}
{"prompt":"How many agroecology research projects have been completed in Colombia and Peru? with given SQL schema CREATE TABLE agroecology_research (id INT, project_name VARCHAR(50), country VARCHAR(20)); INSERT INTO agroecology_research (id, project_name, country) VALUES (101, 'Proyecto Agroecolog\u00eda para el Desarrollo Rural', 'CO'), (102, 'Investigaci\u00f3n Agroecol\u00f3gica en la Amazon\u00eda Peruana', 'PE'), (103, 'Agroecolog\u00eda y Soberan\u00eda Alimentaria en los Andes', 'PE'), (104, 'Estudio Agroecol\u00f3gico de Cultivos Tropicales en Colombia', 'CO');","completion":"SELECT COUNT(DISTINCT country) FROM agroecology_research WHERE country IN ('CO', 'PE');"}
{"prompt":"Show the number of urban agriculture initiatives in each city and the average budget. with given SQL schema CREATE TABLE urban_agriculture_city (initiative_name VARCHAR(255), city VARCHAR(255), budget FLOAT);","completion":"SELECT city, COUNT(initiative_name) as num_initiatives, AVG(budget) as avg_budget FROM urban_agriculture_city GROUP BY city;"}
{"prompt":"What is the total quantity of corn sold by farmers in 'Summerfield'? with given SQL schema CREATE TABLE farmers (id INT, name VARCHAR(50), location VARCHAR(50), crops VARCHAR(50)); CREATE TABLE crops (id INT, name VARCHAR(50), yield INT); CREATE TABLE sales (id INT, farmer_id INT, crop_name VARCHAR(50), quantity INT, price DECIMAL(5,2)); INSERT INTO farmers VALUES (1, 'Jane Doe', 'Summerfield', 'Corn'); INSERT INTO crops VALUES (1, 'Corn', 100); INSERT INTO sales VALUES (1, 1, 'Corn', 50, 2.50);","completion":"SELECT SUM(quantity) FROM sales INNER JOIN farmers ON sales.farmer_id = farmers.id INNER JOIN crops ON sales.crop_name = crops.name WHERE farmers.location = 'Summerfield' AND crops.name = 'Corn';"}
{"prompt":"What is the total number of marine species in the 'Arctic' region that are threatened or endangered?' with given SQL schema CREATE TABLE marine_species (name TEXT, region TEXT, conservation_status TEXT); INSERT INTO marine_species (name, region, conservation_status) VALUES ('Polar Bear', 'Arctic', 'Endangered'); INSERT INTO marine_species (name, region, conservation_status) VALUES ('Narwhal', 'Arctic', 'Threatened');","completion":"SELECT region, COUNT(*) FROM marine_species WHERE region = 'Arctic' AND conservation_status IN ('Endangered', 'Threatened') GROUP BY region;"}
{"prompt":"What is the average total value of transactions for the top 3 digital assets in the 'Binance Smart Chain' network? with given SQL schema CREATE TABLE binance_transactions (asset_name VARCHAR(20), network VARCHAR(20), transactions_value FLOAT); INSERT INTO binance_transactions (asset_name, network, transactions_value) VALUES ('BNB', 'Binance Smart Chain', 200000), ('ETH', 'Binance Smart Chain', 300000), ('CAKE', 'Binance Smart Chain', 400000);","completion":"SELECT asset_name, network, AVG(transactions_value) FROM binance_transactions WHERE network = 'Binance Smart Chain' AND asset_name IN (SELECT asset_name FROM (SELECT asset_name, ROW_NUMBER() OVER (ORDER BY transactions_value DESC) as rn FROM binance_transactions WHERE network = 'Binance Smart Chain') x WHERE rn <= 3) GROUP BY asset_name, network;"}
{"prompt":"What is the total value of transactions for a specific smart contract (e.g. '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D') on the 'Binance Smart Chain'? with given SQL schema CREATE TABLE contract_transactions (transaction_id INT, contract_id INT, block_number INT, value DECIMAL(10,2)); INSERT INTO contract_transactions (transaction_id, contract_id, block_number, value) VALUES (1, 1, 10, 100.50); INSERT INTO contract_transactions (transaction_id, contract_id, block_number, value) VALUES (2, 1, 20, 200.25);","completion":"SELECT SUM(value) as total_value FROM contract_transactions WHERE contract_id = (SELECT contract_id FROM smart_contracts WHERE contract_address = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D' AND network = 'Binance Smart Chain');"}
{"prompt":"What is the total area, in hectares, of wildlife habitats, broken down by habitat type, for habitats that have an area larger than 100000 hectares? with given SQL schema CREATE TABLE wildlife_habitat_4 (id INT, habitat_type VARCHAR(255), area FLOAT); INSERT INTO wildlife_habitat_4 (id, habitat_type, area) VALUES (1, 'Tropical Rainforest', 150000.0), (2, 'Temperate Rainforest', 120000.0), (3, 'Mangrove', 200000.0), (4, 'Savanna', 80000.0), (5, 'Coral Reef', 50000.0);","completion":"SELECT habitat_type, SUM(area) FROM wildlife_habitat_4 WHERE area > 100000 GROUP BY habitat_type;"}
{"prompt":"What is the total volume of timber sold in each region? with given SQL schema CREATE TABLE Regions (RegionID INT, RegionName TEXT); INSERT INTO Regions (RegionID, RegionName) VALUES (1, 'Northeast'), (2, 'Southeast'); CREATE TABLE Transactions (TransactionID INT, SupplierID INT, RegionID INT, Volume REAL); INSERT INTO Transactions (TransactionID, SupplierID, RegionID, Volume) VALUES (1, 1, 1, 500.3), (2, 1, 2, 750.1);","completion":"SELECT Regions.RegionName, SUM(Transactions.Volume) as TotalVolume FROM Regions INNER JOIN Transactions ON Regions.RegionID = Transactions.RegionID GROUP BY Regions.RegionName;"}
{"prompt":"What is the most popular halal certified lipstick in France? with given SQL schema CREATE TABLE lipstick_sales (sale_id INT, product_id INT, sale_quantity INT, is_halal_certified BOOLEAN, sale_date DATE, country VARCHAR(20)); INSERT INTO lipstick_sales VALUES (1, 10, 5, true, '2021-08-12', 'France'); INSERT INTO lipstick_sales VALUES (2, 11, 2, true, '2021-08-12', 'France');","completion":"SELECT product_id, MAX(sale_quantity) FROM lipstick_sales WHERE is_halal_certified = true AND country = 'France' GROUP BY product_id;"}
{"prompt":"Find the total revenue for events with an attendance over 200 in 2021. with given SQL schema CREATE TABLE events (event_id INT, event_name VARCHAR(50), attendance INT, revenue DECIMAL(10,2), event_date DATE); INSERT INTO events (event_id, event_name, attendance, revenue, event_date) VALUES (1, 'Art Exhibition', 250, 15000, '2021-06-01'); INSERT INTO events (event_id, event_name, attendance, revenue, event_date) VALUES (2, 'Theater Performance', 180, 12000, '2021-07-15');","completion":"SELECT SUM(revenue) FROM events WHERE attendance > 200 AND YEAR(event_date) = 2021;"}
{"prompt":"What is the average ticket price for jazz concerts? with given SQL schema CREATE TABLE concerts (id INT, type VARCHAR(10), price DECIMAL(5,2)); INSERT INTO concerts (id, type, price) VALUES (1, 'jazz', 35.99), (2, 'rock', 29.99), (3, 'jazz', 42.50);","completion":"SELECT AVG(price) FROM concerts WHERE type = 'jazz';"}
{"prompt":"Create a view to display veterans with more than 5 years of service with given SQL schema CREATE TABLE veteran_employment (id INT PRIMARY KEY, name VARCHAR(255), position VARCHAR(255), years_of_service INT, salary NUMERIC(10, 2));","completion":"CREATE VIEW veteran_long_service AS SELECT * FROM veteran_employment WHERE years_of_service > 5;"}
{"prompt":"What is the total number of veteran job applications in Texas in the last year? with given SQL schema CREATE TABLE veteran_jobs (id INT, state VARCHAR(50), application_date DATE); INSERT INTO veteran_jobs (id, state, application_date) VALUES (1, 'Texas', '2021-02-15'), (2, 'California', '2021-04-10'), (3, 'Texas', '2022-01-05');","completion":"SELECT COUNT(*) FROM veteran_jobs WHERE state = 'Texas' AND application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"prompt":"Insert new records into the 'humanitarian_assistance' table for assistance starting in 2022 with given SQL schema CREATE TABLE humanitarian_assistance (assistance_id INT, assistance_type VARCHAR(255), start_date DATE, end_date DATE);","completion":"INSERT INTO humanitarian_assistance (assistance_id, assistance_type, start_date, end_date) VALUES (10, 'food distribution', '2022-01-01', '2022-12-31'), (11, 'water purification', '2022-07-01', NULL);"}
{"prompt":"What is the total number of defense diplomacy events held in Africa in 2021? with given SQL schema CREATE TABLE DefenseDiplomacyEvents (Region VARCHAR(10), Year INT, Events INT); INSERT INTO DefenseDiplomacyEvents (Region, Year, Events) VALUES ('Africa', 2021, 12), ('Europe', 2021, 15), ('Asia', 2021, 18);","completion":"SELECT SUM(Events) FROM DefenseDiplomacyEvents WHERE Region = 'Africa' AND Year = 2021;"}
{"prompt":"Identify salespeople who have made transactions in the last 60 days with given SQL schema CREATE TABLE salesperson_activity (salesperson_id INT, activity_date DATE); INSERT INTO salesperson_activity (salesperson_id, activity_date) VALUES (1, '2022-01-01'), (1, '2022-02-01'), (2, '2022-03-01'), (3, '2022-04-01');","completion":"SELECT * FROM salesperson_activity WHERE activity_date >= DATE_SUB(CURRENT_DATE, INTERVAL 60 DAY);"}
{"prompt":"List all the transactions made by clients living in New York with a transaction amount greater than $1000. with given SQL schema CREATE TABLE transactions (id INT, client_id INT, transaction_amount DECIMAL(10,2), transaction_date DATE); INSERT INTO transactions (id, client_id, transaction_amount, transaction_date) VALUES (1, 3, 1500.00, '2022-01-01'), (2, 4, 800.00, '2022-01-02'), (3, 3, 1200.00, '2022-01-03'); CREATE TABLE clients (id INT, name VARCHAR(255), state VARCHAR(255)); INSERT INTO clients (id, name, state) VALUES (3, 'Mike Johnson', 'New York'), (4, 'Sara Lee', 'California');","completion":"SELECT transactions.id, transactions.client_id, transactions.transaction_amount, transactions.transaction_date FROM transactions INNER JOIN clients ON transactions.client_id = clients.id WHERE clients.state = 'New York' AND transactions.transaction_amount > 1000.00;"}
{"prompt":"List the ports and their average cargo weight for company \"HarborLink\" in Q2 2017 and Q3 2017. with given SQL schema CREATE TABLE company (id INT, name VARCHAR(255)); INSERT INTO company (id, name) VALUES (1, 'HarborLink'); CREATE TABLE port (id INT, name VARCHAR(255)); CREATE TABLE cargo (id INT, port_id INT, company_id INT, weight INT, quarter INT); INSERT INTO port (id, name) VALUES (1, 'PortA'), (2, 'PortB'), (3, 'PortC'); INSERT INTO cargo (id, port_id, company_id, weight, quarter) VALUES (1, 1, 1, 1000, 2), (2, 1, 1, 1200, 3), (3, 2, 1, 1500, 2), (4, 2, 1, 1600, 3), (5, 3, 1, 1400, 2);","completion":"SELECT port.name, AVG(cargo.weight) FROM port INNER JOIN cargo ON port.id = cargo.port_id AND cargo.quarter IN (2, 3) INNER JOIN company ON cargo.company_id = company.id WHERE company.name = 'HarborLink' GROUP BY port.name;"}
{"prompt":"What is the total number of containers handled by port 'LA'? with given SQL schema CREATE TABLE ports (port_id INT, port_name VARCHAR(20)); INSERT INTO ports (port_id, port_name) VALUES (1, 'LA'), (2, 'LB'), (3, 'HOU'); CREATE TABLE cargo (cargo_id INT, port_id INT, container_count INT); INSERT INTO cargo (cargo_id, port_id, container_count) VALUES (1, 1, 5000), (2, 1, 3000), (3, 2, 4000), (4, 3, 6000);","completion":"SELECT SUM(container_count) FROM cargo WHERE port_id = (SELECT port_id FROM ports WHERE port_name = 'LA');"}
{"prompt":"List materials involved in recycling programs located in Africa. with given SQL schema CREATE TABLE recycling_programs (id INT PRIMARY KEY, name TEXT, location TEXT); CREATE TABLE materials (id INT PRIMARY KEY, name TEXT, recycling_program_id INT, FOREIGN KEY (recycling_program_id) REFERENCES recycling_programs(id));","completion":"SELECT materials.name, recycling_programs.name AS program_name FROM materials INNER JOIN recycling_programs ON materials.recycling_program_id = recycling_programs.id WHERE recycling_programs.location LIKE '%Africa%';"}
{"prompt":"List the names of all materials that are not part of the 'recycling' program. with given SQL schema CREATE TABLE materials (material_id INT, name VARCHAR(20), recycling_program BOOLEAN); INSERT INTO materials (material_id, name, recycling_program) VALUES (1, 'plastic', true), (2, 'glass', false), (3, 'metal', true), (4, 'wood', false);","completion":"SELECT name FROM materials WHERE recycling_program = false;"}
{"prompt":"What is the average production output for each machine in the company's facility in Thailand? with given SQL schema CREATE TABLE production_output (output_id INT, machine_id INT, production_date DATE, output_quantity INT); INSERT INTO production_output (output_id, machine_id, production_date, output_quantity) VALUES (1, 1, '2022-04-01', 100), (2, 1, '2022-04-02', 120), (3, 2, '2022-04-01', 150), (4, 2, '2022-04-02', 160); CREATE TABLE facilities (facility_id INT, facility_name VARCHAR(255), country VARCHAR(255)); INSERT INTO facilities (facility_id, facility_name, country) VALUES (1, 'Bangkok Plant', 'Thailand'), (2, 'Chiang Mai Plant', 'Thailand');","completion":"SELECT machine_id, AVG(output_quantity) as avg_output FROM production_output po JOIN facilities f ON f.facility_name = 'Bangkok Plant' WHERE po.production_date BETWEEN '2022-04-01' AND '2022-12-31' GROUP BY machine_id;"}
{"prompt":"List the top 2 countries with the highest average artifact weight, along with the year and total weight of those artifacts. with given SQL schema CREATE TABLE ExcavationSites (SiteID INT, Country VARCHAR(50), Year INT, ArtifactWeight FLOAT); INSERT INTO ExcavationSites (SiteID, Country, Year, ArtifactWeight) VALUES (1, 'USA', 2020, 23.5), (2, 'Mexico', 2020, 14.2), (3, 'USA', 2019, 34.8), (4, 'Canada', 2019, 45.6), (5, 'Canada', 2019, 56.7);","completion":"SELECT Country, Year, SUM(ArtifactWeight) AS TotalWeight, AVG(ArtifactWeight) OVER (PARTITION BY Country) AS AvgWeight FROM (SELECT Country, Year, ArtifactWeight, ROW_NUMBER() OVER (PARTITION BY Country ORDER BY ArtifactWeight DESC) rn FROM ExcavationSites) x WHERE rn <= 2 GROUP BY Country, Year;"}
{"prompt":"What is the average number of hospital beds in rural areas of South Korea? with given SQL schema CREATE TABLE HospitalBeds (HospitalID int, Beds int, Rural bool); INSERT INTO HospitalBeds (HospitalID, Beds, Rural) VALUES (1, 50, true);","completion":"SELECT AVG(Beds) FROM HospitalBeds WHERE Rural = true;"}
{"prompt":"How many companies does 'Impact Fund 1' have investments in, and what's their average ESG rating? with given SQL schema CREATE TABLE investments (fund_name VARCHAR(20), company_id INT); CREATE TABLE companies (id INT, company_name VARCHAR(20), sector VARCHAR(20), ESG_rating FLOAT); INSERT INTO investments (fund_name, company_id) VALUES ('Impact Fund 1', 1), ('Impact Fund 1', 2), ('Impact Fund 2', 3); INSERT INTO companies (id, company_name, sector, ESG_rating) VALUES (1, 'Tech Innovations', 'technology', 8.1), (2, 'Finance Group', 'finance', 6.5), (3, 'Green Solutions', 'renewable_energy', 9.0);","completion":"SELECT COUNT(DISTINCT companies.id), AVG(companies.ESG_rating) FROM investments INNER JOIN companies ON investments.company_id = companies.id WHERE investments.fund_name = 'Impact Fund 1';"}
{"prompt":"Identify the top 3 countries with the highest number of social impact projects in 2019. with given SQL schema CREATE TABLE countries (id INT, name VARCHAR(255), total_projects INT); INSERT INTO countries (id, name, total_projects) VALUES (1, 'Brazil', 500), (2, 'India', 700), (3, 'South Africa', 350); CREATE TABLE projects_by_country (country VARCHAR(255), project_count INT); INSERT INTO projects_by_country (country, project_count) SELECT country, COUNT(*) FROM projects GROUP BY country;","completion":"SELECT c.name, p.project_count FROM countries c JOIN (SELECT country, COUNT(*) AS project_count FROM projects GROUP BY country ORDER BY project_count DESC LIMIT 3) p ON c.name = p.country;"}
{"prompt":"Update the risk score to 7 for investments in the housing sector with an investment amount greater than 1,500,000. with given SQL schema CREATE TABLE investments (investment_id INT, sector VARCHAR(50), risk_score INT, investment_amount INT); INSERT INTO investments (investment_id, sector, risk_score, investment_amount) VALUES (1, 'Housing', 4, 1000000), (2, 'Housing', 5, 1800000), (3, 'Housing', 3, 1200000), (4, 'Housing', 6, 2000000), (5, 'Housing', 2, 900000);","completion":"UPDATE investments SET risk_score = 7 WHERE sector = 'Housing' AND investment_amount > 1500000;"}
{"prompt":"What is the maximum ESG score for companies in the education sector in Q3 2020? with given SQL schema CREATE TABLE if not exists companies (company_id INT, sector VARCHAR(50), esg_score DECIMAL(3,2), quarter INT, year INT); INSERT INTO companies (company_id, sector, esg_score, quarter, year) VALUES (4, 'Education', 8.7, 3, 2020), (5, 'Education', 9.0, 3, 2020), (6, 'Education', 8.5, 3, 2020);","completion":"SELECT MAX(esg_score) FROM companies WHERE sector = 'Education' AND quarter = 3 AND year = 2020;"}
{"prompt":"What is the average length (in minutes) of songs produced by female artists from Canada in the pop genre? with given SQL schema CREATE TABLE songs (id INT, title VARCHAR(255), length FLOAT, artist_name VARCHAR(255), artist_gender VARCHAR(10), artist_country VARCHAR(50), genre VARCHAR(50));","completion":"SELECT AVG(length) FROM songs WHERE artist_gender = 'female' AND artist_country = 'Canada' AND genre = 'pop';"}
{"prompt":"What is the minimum budget for each program in Q4 2026, excluding any updates made to the budgets? with given SQL schema CREATE TABLE Programs (ProgramID INT, Name TEXT, InitialBudget DECIMAL(10,2));CREATE TABLE BudgetUpdates (UpdateID INT, ProgramID INT, NewBudget DECIMAL(10,2), UpdateDate DATE);","completion":"SELECT P.Name, MIN(P.InitialBudget) as MinBudget FROM Programs P LEFT JOIN BudgetUpdates BU ON P.ProgramID = BU.ProgramID WHERE BU.UpdateDate IS NULL GROUP BY P.ProgramID, P.Name;"}
{"prompt":"What is the average years of experience for teachers who have accessed mental health resources? with given SQL schema CREATE TABLE teachers (teacher_id INT, years_of_experience INT, mental_health_resource_access DATE); INSERT INTO teachers VALUES (1, 5, '2021-02-01'), (2, 3, '2021-06-01'), (3, 8, '2020-12-01');","completion":"SELECT AVG(years_of_experience) AS avg_experience FROM teachers WHERE mental_health_resource_access IS NOT NULL;"}
{"prompt":"List all employees who have changed departments in the 'hr' schema's 'employee_moves' table and the 'hr' schema's 'employee_details' table with given SQL schema CREATE TABLE hr.employee_moves (id INT, employee_id INT, old_dept VARCHAR(50), new_dept VARCHAR(50), move_date DATE); CREATE TABLE hr.employee_details (id INT, employee_id INT, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50));","completion":"SELECT e.first_name, e.last_name FROM hr.employee_details e INNER JOIN hr.employee_moves m ON e.employee_id = m.employee_id WHERE m.old_dept != m.new_dept;"}
{"prompt":"How many renewable energy projects are in Country R? with given SQL schema CREATE TABLE renewable_count (name TEXT, location TEXT, type TEXT); INSERT INTO renewable_count (name, location, type) VALUES ('Project 1', 'Country R', 'Wind'), ('Project 2', 'Country S', 'Solar'), ('Project 3', 'Country R', 'Geothermal');","completion":"SELECT COUNT(*) FROM renewable_count WHERE location = 'Country R';"}
{"prompt":"List the top 3 countries with the highest solar energy production? with given SQL schema CREATE TABLE solar_energy (country VARCHAR(20), production_quantity INT); INSERT INTO solar_energy (country, production_quantity) VALUES ('Germany', 40000), ('Italy', 32000), ('Spain', 28000), ('USA', 22000), ('India', 15000);","completion":"SELECT country, production_quantity FROM solar_energy ORDER BY production_quantity DESC LIMIT 3;"}
{"prompt":"What is the average energy consumption (in kWh) for households in Canada? with given SQL schema CREATE TABLE HouseholdEnergyConsumption ( HouseholdID INT, Country VARCHAR(255), EnergyConsumption FLOAT );","completion":"SELECT AVG(EnergyConsumption) FROM HouseholdEnergyConsumption WHERE Country = 'Canada';"}
{"prompt":"Update the 'oil_market' table to set the crude_oil_price_usd to 70.50 for all records where the market_name is 'European Market' with given SQL schema CREATE TABLE oil_market (market_id INT PRIMARY KEY, market_name VARCHAR(255), crude_oil_price_usd DECIMAL(10, 2));","completion":"UPDATE oil_market SET crude_oil_price_usd = 70.50 WHERE market_name = 'European Market';"}
{"prompt":"What was the average daily production of oil in Q4 2020 for wells in the North Sea? with given SQL schema CREATE TABLE wells (well_id INT, well_name VARCHAR(50), location VARCHAR(50), production_date DATE, oil_production FLOAT); INSERT INTO wells (well_id, well_name, location, production_date, oil_production) VALUES (1, 'A1', 'North Sea', '2020-10-01', 150.5), (2, 'B2', 'North Sea', '2020-11-03', 125.8), (3, 'C3', 'North Sea', '2020-12-15', 175.6);","completion":"SELECT AVG(oil_production) FROM wells WHERE production_date BETWEEN '2020-10-01' AND '2020-12-31' AND location = 'North Sea';"}
{"prompt":"What is the average number of points scored by the 'Atlanta Dream' and 'Minnesota Lynx' in the 'WNBA'? with given SQL schema CREATE TABLE teams (team_id INT, team_name TEXT, league TEXT); INSERT INTO teams (team_id, team_name, league) VALUES (1, 'Atlanta Dream', 'WNBA'), (2, 'Minnesota Lynx', 'WNBA'); CREATE TABLE games (game_id INT, team_id INT, points INT); INSERT INTO games (game_id, team_id, points) VALUES (1, 1, 70), (2, 1, 75), (3, 2, 80), (4, 2, 85);","completion":"SELECT AVG(points) FROM games WHERE team_id IN (SELECT team_id FROM teams WHERE team_name IN ('Atlanta Dream', 'Minnesota Lynx')) AND league = 'WNBA';"}
{"prompt":"What is the average number of spectators in the last 3 home games for each team? with given SQL schema CREATE TABLE games (id INT, team TEXT, spectators INT, home INT); INSERT INTO games (id, team, spectators, home) VALUES (1, 'Manchester United', 75000, 1), (2, 'Manchester City', 65000, 1), (3, 'Liverpool', 55000, 1), (4, 'Manchester United', 76000, 0), (5, 'Manchester City', 64000, 0), (6, 'Liverpool', 56000, 0);","completion":"SELECT team, AVG(spectators) FROM games WHERE home = 1 GROUP BY team HAVING season >= 2017;"}
{"prompt":"What are the total funds allocated for ethical AI initiatives in North America? with given SQL schema CREATE TABLE ethical_ai_initiatives (initiative_id INT, region VARCHAR(20), funds DECIMAL(10,2)); INSERT INTO ethical_ai_initiatives (initiative_id, region, funds) VALUES (1, 'North America', 50000.00), (2, 'Europe', 100000.00), (3, 'South America', 25000.00);","completion":"SELECT SUM(funds) FROM ethical_ai_initiatives WHERE region = 'North America';"}
{"prompt":"Who is responsible for AI oversight in Canada? with given SQL schema CREATE TABLE ai_oversight (id INT, organization VARCHAR(50), region VARCHAR(50)); INSERT INTO ai_oversight (id, organization, region) VALUES (1, 'AI Ethics Board', 'Canada'), (2, 'Data Privacy Commissioner', 'Canada'), (3, 'Innovation Science and Economic Development Canada', 'Canada');","completion":"SELECT organization FROM ai_oversight WHERE region = 'Canada';"}
{"prompt":"What is the maximum fare for train and bus services? with given SQL schema CREATE TABLE fares (fare_id INT, mode_id INT, fare_amount DECIMAL(5,2)); INSERT INTO fares VALUES (1, 1, 2.50); INSERT INTO fares VALUES (2, 1, 3.00); INSERT INTO fares VALUES (3, 2, 1.75);","completion":"SELECT MAX(fare_amount) as max_fare FROM fares WHERE mode_id IN (1, 2);"}
{"prompt":"Calculate the average quantity of sustainable materials used by each brand, excluding 'BrandA'? with given SQL schema CREATE TABLE Brands (BrandID INT, BrandName VARCHAR(50), Material VARCHAR(50), Quantity INT);INSERT INTO Brands (BrandID, BrandName, Material, Quantity) VALUES (1, 'BrandA', 'Organic Cotton', 3000), (2, 'BrandB', 'Recycled Polyester', 2500), (1, 'BrandA', 'Organic Silk', 1000), (3, 'BrandC', 'Organic Cotton', 2000), (2, 'BrandB', 'Tencel', 1800);","completion":"SELECT BrandName, AVG(Quantity) as AvgQuantity FROM Brands WHERE BrandName != 'BrandA' GROUP BY BrandName;"}
{"prompt":"Find the daily new user registrations in 'data_privacy' table for the last week? with given SQL schema CREATE TABLE data_privacy (user_id INT, registration_date DATE);","completion":"SELECT registration_date, COUNT(*) FROM data_privacy WHERE registration_date >= CURDATE() - INTERVAL 7 DAY GROUP BY registration_date;"}
{"prompt":"Show the number of unique users who engaged with posts about renewable energy in the past month. with given SQL schema CREATE TABLE posts (id INT, post_text TEXT, post_date DATETIME); CREATE TABLE engagements (id INT, user_id INT, post_id INT);","completion":"SELECT COUNT(DISTINCT e.user_id) AS unique_users FROM posts p JOIN engagements e ON p.id = e.post_id WHERE p.post_text LIKE '%renewable energy%' AND DATE(p.post_date) > DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"What is the average fabric cost for t-shirts? with given SQL schema CREATE TABLE Fabrics (id INT, fabric_name VARCHAR(255), cost DECIMAL(5,2)); INSERT INTO Fabrics (id, fabric_name, cost) VALUES (1, 'Cotton', 2.50), (2, 'Polyester', 1.80), (3, 'Rayon', 3.20); CREATE TABLE Products (id INT, product_name VARCHAR(255), fabric_id INT); INSERT INTO Products (id, product_name, fabric_id) VALUES (1, 'T-Shirt', 1), (2, 'Pants', 2), (3, 'Dress', 3);","completion":"SELECT AVG(Fabrics.cost) FROM Fabrics INNER JOIN Products ON Fabrics.id = Products.fabric_id WHERE Products.product_name = 'T-Shirt';"}
{"prompt":"What is the average price of cotton textiles sourced from the USA? with given SQL schema CREATE TABLE sourcing (id INT, material VARCHAR(10), country VARCHAR(10), price DECIMAL(5,2)); INSERT INTO sourcing (id, material, country, price) VALUES (1, 'cotton', 'USA', 3.50), (2, 'polyester', 'China', 2.75);","completion":"SELECT AVG(price) FROM sourcing WHERE material = 'cotton' AND country = 'USA';"}
{"prompt":"What is the minimum donation amount for the 'Environmental Conservation' program in '2021'? with given SQL schema CREATE TABLE environmental_donations (id INT, donor_name TEXT, program TEXT, donation_amount DECIMAL); INSERT INTO environmental_donations (id, donor_name, program, donation_amount) VALUES (1, 'Mia', 'Environmental Conservation', 25.00); INSERT INTO environmental_donations (id, donor_name, program, donation_amount) VALUES (2, 'Noah', 'Environmental Conservation', 50.00);","completion":"SELECT MIN(donation_amount) FROM environmental_donations WHERE program = 'Environmental Conservation' AND YEAR(donation_date) = 2021;"}
{"prompt":"List all food recalls in the food_recalls table for the year 2020. with given SQL schema CREATE TABLE food_recalls (recall_id INT, recall_date DATE, food_item VARCHAR(255));","completion":"SELECT recall_id, recall_date, food_item FROM food_recalls WHERE EXTRACT(YEAR FROM recall_date) = 2020;"}
{"prompt":"What is the average weight of all shipments that originated from the United Kingdom in January 2022? with given SQL schema CREATE TABLE Shipments (id INT, weight INT, origin_country TEXT, shipment_date DATE); INSERT INTO Shipments (id, weight, origin_country, shipment_date) VALUES (1, 8, 'UK', '2022-01-01'); INSERT INTO Shipments (id, weight, origin_country, shipment_date) VALUES (2, 12, 'USA', '2022-01-02'); INSERT INTO Shipments (id, weight, origin_country, shipment_date) VALUES (3, 5, 'Canada', '2022-01-03');","completion":"SELECT AVG(weight) FROM Shipments WHERE origin_country = 'UK' AND shipment_date BETWEEN '2022-01-01' AND '2022-01-31';"}
{"prompt":"How many genetic research projects were conducted in Africa? with given SQL schema CREATE TABLE projects (id INT, title VARCHAR(50), location VARCHAR(50)); INSERT INTO projects (id, title, location) VALUES (1, 'Genome Mapping', 'Canada'), (2, 'DNA Sequencing', 'Africa');","completion":"SELECT COUNT(*) FROM projects WHERE location = 'Africa';"}
{"prompt":"What is the total funding for biotech startups in Texas? with given SQL schema CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.startups (id INT, name TEXT, location TEXT, funding FLOAT); INSERT INTO biotech.startups (id, name, location, funding) VALUES (1, 'StartupA', 'Texas', 5000000.00); INSERT INTO biotech.startups (id, name, location, funding) VALUES (2, 'StartupB', 'California', 7000000.00); INSERT INTO biotech.startups (id, name, location, funding) VALUES (3, 'StartupC', 'Texas', 3000000.00);","completion":"SELECT SUM(funding) FROM biotech.startups WHERE location = 'Texas';"}
{"prompt":"What is the total budget and number of departments for each manager? with given SQL schema CREATE TABLE Manager (id INT, Name VARCHAR(50)); INSERT INTO Manager (id, Name) VALUES (101, 'Manager1'); INSERT INTO Manager (id, Name) VALUES (102, 'Manager2'); CREATE TABLE Department (id INT, Name VARCHAR(50), ManagerID INT, Budget FLOAT); INSERT INTO Department (id, Name, ManagerID, Budget) VALUES (1, 'Department1', 101, 500000); INSERT INTO Department (id, Name, ManagerID, Budget) VALUES (2, 'Department2', 101, 750000); INSERT INTO Department (id, Name, ManagerID, Budget) VALUES (3, 'Department3', 102, 600000);","completion":"SELECT m.Name AS ManagerName, SUM(d.Budget) AS TotalBudget, COUNT(d.id) AS NumberOfDepartments FROM Manager m JOIN Department d ON m.id = d.ManagerID GROUP BY m.Name;"}
{"prompt":"How many graduate students are enrolled in the Computer Science program? with given SQL schema CREATE TABLE GraduateStudents (StudentID int, Name varchar(50), Department varchar(50)); CREATE TABLE Enrollment (StudentID int, Course varchar(50), Semester varchar(50)); INSERT INTO GraduateStudents (StudentID, Name, Department) VALUES (1, 'Alice Johnson', 'Computer Science'); INSERT INTO GraduateStudents (StudentID, Name, Department) VALUES (2, 'Bob Brown', 'Computer Science'); INSERT INTO Enrollment (StudentID, Course, Semester) VALUES (1, 'Database Systems', 'Fall'); INSERT INTO Enrollment (StudentID, Course, Semester) VALUES (1, 'Artificial Intelligence', 'Spring'); INSERT INTO Enrollment (StudentID, Course, Semester) VALUES (2, 'Database Systems', 'Fall');","completion":"SELECT COUNT(*) FROM GraduateStudents WHERE Department = 'Computer Science' AND StudentID IN (SELECT StudentID FROM Enrollment);"}
{"prompt":"Which community health workers have served the most patients from underrepresented communities in the last year? with given SQL schema CREATE TABLE community_workers (worker_id INT, worker_name VARCHAR(50), community_type VARCHAR(50), patients_served INT, year INT); INSERT INTO community_workers (worker_id, worker_name, community_type, patients_served, year) VALUES (1, 'John Doe', 'African American', 50, 2021), (2, 'Jane Smith', 'Hispanic', 75, 2021), (3, 'Alice Johnson', 'LGBTQ+', 60, 2021), (4, 'Bob Brown', 'Rural', 40, 2021), (5, 'Maria Garcia', 'Asian', 45, 2021), (6, 'David Kim', 'Native American', 35, 2021);","completion":"SELECT community_type, worker_name, SUM(patients_served) as total_patients_served FROM community_workers WHERE year = 2021 AND community_type IN ('African American', 'Hispanic', 'LGBTQ+') GROUP BY community_type, worker_name ORDER BY total_patients_served DESC;"}
{"prompt":"How many sustainable tourism initiatives were implemented in South America in 2021? with given SQL schema CREATE TABLE sustainable_tourism_initiatives (country VARCHAR(255), year INT, num_initiatives INT); INSERT INTO sustainable_tourism_initiatives (country, year, num_initiatives) VALUES ('Argentina', 2021, 20), ('Colombia', 2021, 30), ('Peru', 2021, 40);","completion":"SELECT SUM(num_initiatives) FROM sustainable_tourism_initiatives WHERE country IN ('Argentina', 'Colombia', 'Peru') AND year = 2021;"}
{"prompt":"What are the average virtual tour engagement statistics for hotels in the APAC region in Q1 2022? with given SQL schema CREATE TABLE avg_virtual_tour_stats (hotel_id INT, hotel_name TEXT, region TEXT, q1_2022_views INT, q1_2022_clicks INT); INSERT INTO avg_virtual_tour_stats (hotel_id, hotel_name, region, q1_2022_views, q1_2022_clicks) VALUES (10, 'Hotel X', 'APAC', 500, 300), (11, 'Hotel Y', 'APAC', 650, 350);","completion":"SELECT region, AVG(q1_2022_views) AS avg_views, AVG(q1_2022_clicks) AS avg_clicks FROM avg_virtual_tour_stats WHERE region = 'APAC' GROUP BY region;"}
{"prompt":"Which OTA websites have the highest revenue from hotel bookings in Asia? with given SQL schema CREATE TABLE ota_bookings (booking_id INT, ota_website VARCHAR(255), hotel_name VARCHAR(255), country VARCHAR(255), revenue DECIMAL(10,2)); CREATE TABLE hotels (hotel_id INT, hotel_name VARCHAR(255), country VARCHAR(255));","completion":"SELECT ota_website, SUM(revenue) FROM ota_bookings INNER JOIN hotels ON ota_bookings.hotel_name = hotels.hotel_name WHERE country = 'Asia' GROUP BY ota_website ORDER BY SUM(revenue) DESC;"}
{"prompt":"What resources are managed by the Inuit community and in what quantities? with given SQL schema CREATE TABLE Indigenous_Communities (id INT PRIMARY KEY, community_name VARCHAR(50), population INT, region VARCHAR(50)); CREATE TABLE Resource_Management (id INT, year INT, resource_type VARCHAR(50), quantity INT, community_id INT, FOREIGN KEY (community_id) REFERENCES Indigenous_Communities(id)); INSERT INTO Indigenous_Communities (id, community_name, population, region) VALUES (1, 'Inuit', 15000, 'Arctic'); INSERT INTO Resource_Management (id, year, resource_type, quantity, community_id) VALUES (1, 2020, 'Fish', 5000, 1), (2, 2020, 'Seal', 2000, 1);","completion":"SELECT Indigenous_Communities.community_name, Resource_Management.resource_type, Resource_Management.quantity FROM Indigenous_Communities INNER JOIN Resource_Management ON Indigenous_Communities.id = Resource_Management.community_id WHERE Indigenous_Communities.community_name = 'Inuit';"}
{"prompt":"What's the name and category of art performed at community events in Seattle? with given SQL schema CREATE TABLE CommunityEvents (ID INT, City VARCHAR(20), EventName VARCHAR(30), ArtCategory VARCHAR(20)); INSERT INTO CommunityEvents VALUES (1, 'Seattle', 'Festival ofColors', 'Dance'); CREATE TABLE Arts (ArtID INT, ArtName VARCHAR(30), ArtCategory VARCHAR(20)); INSERT INTO Arts VALUES (1, 'Bharatanatyam', 'Dance');","completion":"SELECT e.City, e.EventName, a.ArtName FROM CommunityEvents e JOIN Arts a ON e.ArtCategory = a.ArtCategory;"}
{"prompt":"Total number of therapy sessions in each region? with given SQL schema CREATE TABLE therapy_sessions (session_id INT, region VARCHAR(20)); INSERT INTO therapy_sessions (session_id, region) VALUES (1, 'Asia'), (2, 'Europe'), (3, 'America'), (4, 'Asia'), (5, 'Asia');","completion":"SELECT region, COUNT(*) as total_sessions FROM therapy_sessions GROUP BY region;"}
{"prompt":"What is the most common mental health condition treated in France? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender TEXT, country TEXT); INSERT INTO patients (patient_id, age, gender, country) VALUES (1, 35, 'Male', 'France'); INSERT INTO patients (patient_id, age, gender, country) VALUES (2, 42, 'Female', 'France'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type TEXT); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (1, 1, 'Depression'); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (2, 2, 'Anxiety');","completion":"SELECT treatment_type, COUNT(*) AS treatment_count FROM treatments JOIN patients ON patients.patient_id = treatments.patient_id WHERE patients.country = 'France' GROUP BY treatment_type ORDER BY treatment_count DESC LIMIT 1;"}
{"prompt":"List all destinations with a travel advisory level of 3 or lower with given SQL schema CREATE TABLE destinations (id INT, name VARCHAR(50), travel_advisory_level INT); INSERT INTO destinations (id, name, travel_advisory_level) VALUES (1, 'Paris', 2), (2, 'Rome', 3), (3, 'Tokyo', 1);","completion":"SELECT name FROM destinations WHERE travel_advisory_level <= 3;"}
{"prompt":"What is the total number of luxury hotel rooms in Japan? with given SQL schema CREATE TABLE hotels (id INT, country VARCHAR(20), stars INT, rooms INT); INSERT INTO hotels (id, country, stars, rooms) VALUES (1, 'Japan', 5, 500), (2, 'Japan', 4, 300), (3, 'Japan', 3, 200);","completion":"SELECT SUM(rooms) FROM hotels WHERE country = 'Japan' AND stars = 5;"}
{"prompt":"What is the total number of tourists who visited Australia and New Zealand in 2021, grouped by month? with given SQL schema CREATE TABLE tourism_stats (country VARCHAR(255), year INT, month INT, visitors INT); INSERT INTO tourism_stats (country, year, month, visitors) VALUES ('Australia', 2021, 1, 1200000); INSERT INTO tourism_stats (country, year, month, visitors) VALUES ('Australia', 2021, 2, 1500000); INSERT INTO tourism_stats (country, year, month, visitors) VALUES ('New Zealand', 2021, 1, 400000); INSERT INTO tourism_stats (country, year, month, visitors) VALUES ('New Zealand', 2021, 2, 450000);","completion":"SELECT country, SUM(visitors) as total_visitors FROM tourism_stats WHERE country IN ('Australia', 'New Zealand') AND year = 2021 GROUP BY country, month;"}
{"prompt":"What are the different types of crimes committed in the urban and rural areas? with given SQL schema CREATE TABLE Crimes (ID INT, Type VARCHAR(30), Area VARCHAR(10)); INSERT INTO Crimes (ID, Type, Area) VALUES (1, 'Theft', 'Urban'), (2, 'Assault', 'Rural'), (3, 'Vandalism', 'Urban'), (4, 'DUI', 'Rural');","completion":"SELECT Type FROM Crimes WHERE Area = 'Urban' UNION SELECT Type FROM Crimes WHERE Area = 'Rural';"}
{"prompt":"What is the percentage of legal aid clients in Los Angeles who have been homeless in the past year? with given SQL schema CREATE TABLE legal_aid_clients (client_id INT, has_been_homeless BOOLEAN, city VARCHAR(50), state VARCHAR(20)); INSERT INTO legal_aid_clients (client_id, has_been_homeless, city, state) VALUES (1, true, 'Los Angeles', 'California'), (2, false, 'Los Angeles', 'California');","completion":"SELECT (SUM(has_been_homeless) * 100.0 \/ COUNT(*)) AS percentage FROM legal_aid_clients WHERE city = 'Los Angeles';"}
{"prompt":"What is the total number of cases heard by each judge in the 'criminal_cases' table, grouped by judge name? with given SQL schema CREATE TABLE criminal_cases (case_id INT, judge_name VARCHAR(255), case_type VARCHAR(255), case_status VARCHAR(255)); INSERT INTO criminal_cases (case_id, judge_name, case_type, case_status) VALUES (1, 'Smith', 'Theft', 'Open'), (2, 'Johnson', 'Murder', 'Closed'), (3, 'Williams', 'Assault', 'Open');","completion":"SELECT judge_name, COUNT(*) as total_cases FROM criminal_cases GROUP BY judge_name;"}
{"prompt":"Calculate the percentage of vessels in each ocean basin that have outdated engine technology. with given SQL schema CREATE TABLE fleet_information (id INT, vessel_name VARCHAR(255), ocean_basin VARCHAR(255), engine_technology DATE); INSERT INTO fleet_information (id, vessel_name, ocean_basin, engine_technology) VALUES (1, 'Ocean Titan', 'Atlantic', '2000-01-01'), (2, 'Sea Explorer', 'Pacific', '2010-01-01');","completion":"SELECT ocean_basin, PERCENTAGE_RANK() OVER (ORDER BY outdated_engine_count) FROM (SELECT ocean_basin, COUNT(*) FILTER (WHERE engine_technology < '2010-01-01') AS outdated_engine_count FROM fleet_information GROUP BY ocean_basin);"}
{"prompt":"How many marine species are present in each type of marine life zone? with given SQL schema CREATE TABLE species (id INT, type TEXT, name TEXT); INSERT INTO species (id, type, name) VALUES (1, 'Trench', 'Anglerfish'), (2, 'Abyssal', 'Goblin shark'), (3, 'Trench', 'Hatchetfish');","completion":"SELECT type, COUNT(DISTINCT name) species_count FROM species GROUP BY type;"}
{"prompt":"How many marine species are recorded in the Indian Ocean according to the species_inventory table? with given SQL schema CREATE TABLE species_inventory (id INT, species TEXT, region TEXT); INSERT INTO species_inventory (id, species, region) VALUES (1, 'Species A', 'Indian Ocean'), (2, 'Species B', 'Atlantic Ocean'), (3, 'Species C', 'Indian Ocean');","completion":"SELECT COUNT(*) FROM species_inventory WHERE region = 'Indian Ocean';"}
{"prompt":"Identify the top 3 most preferred dishes among customers by rating? with given SQL schema CREATE TABLE orders (id INT, dish_id INT, customer_id INT, rating INT); INSERT INTO orders (id, dish_id, customer_id, rating) VALUES (1, 1, 101, 8), (2, 2, 102, 9), (3, 3, 103, 7), (4, 1, 104, 10), (5, 2, 105, 6);","completion":"SELECT dish_id, AVG(rating) as avg_rating FROM orders GROUP BY dish_id ORDER BY avg_rating DESC LIMIT 3;"}
{"prompt":"Update military equipment sales records in the Pacific with a 10% increase. with given SQL schema CREATE TABLE MilitaryEquipmentSales (id INT, region VARCHAR(50), amount FLOAT, sale_date DATE); INSERT INTO MilitaryEquipmentSales (id, region, amount, sale_date) VALUES (1, 'Pacific', 20000000, '2021-12-25'); INSERT INTO MilitaryEquipmentSales (id, region, amount, sale_date) VALUES (2, 'Pacific', 22000000, '2022-01-10'); INSERT INTO MilitaryEquipmentSales (id, region, amount, sale_date) VALUES (3, 'Pacific', 25000000, '2022-07-01');","completion":"UPDATE MilitaryEquipmentSales SET amount = amount * 1.1 WHERE region = 'Pacific';"}
{"prompt":"What is the geopolitical risk assessment score for each country in 2020? with given SQL schema CREATE TABLE GeopoliticalRiskAssessments (assessment_id INT, assessment_name VARCHAR(50), score INT, assessment_date DATE, country VARCHAR(50)); INSERT INTO GeopoliticalRiskAssessments (assessment_id, assessment_name, score, assessment_date, country) VALUES (1, 'Assessment A', 7, '2020-01-01', 'USA'), (2, 'Assessment B', 5, '2020-02-15', 'Russia'), (3, 'Assessment C', 8, '2020-03-31', 'China');","completion":"SELECT country, score FROM GeopoliticalRiskAssessments WHERE assessment_date BETWEEN '2020-01-01' AND '2020-12-31';"}
{"prompt":"What is the total value of military equipment sales to Africa in the last 12 months? with given SQL schema CREATE TABLE Military_Equipment_Sales(sale_id INT, sale_date DATE, equipment_type VARCHAR(50), country VARCHAR(50), sale_value DECIMAL(10,2));","completion":"SELECT SUM(sale_value) FROM Military_Equipment_Sales WHERE country IN (SELECT country FROM World_Countries WHERE continent = 'Africa') AND sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH);"}
{"prompt":"Which air defense system contractor had the most contracts? with given SQL schema CREATE TABLE Contractors (id INT PRIMARY KEY, contractor_name VARCHAR(50), system_type VARCHAR(50), total_contracts INT);","completion":"SELECT contractor_name, COUNT(*) FROM Contractors WHERE system_type = 'air defense' GROUP BY contractor_name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"prompt":"Delete all records of workers who were employed in the 'survey' department in the year 2019. with given SQL schema CREATE TABLE workers(id INT, name TEXT, department TEXT, year INT);INSERT INTO workers(id, name, department, year) VALUES (1, 'John', 'survey', 2019), (2, 'Jane', 'survey', 2019), (3, 'Mike', 'mining', 2018), (4, 'Lucy', 'geology', 2020), (5, 'Ella', 'survey', 2018);","completion":"DELETE FROM workers WHERE department = 'survey' AND year = 2019;"}
{"prompt":"Identify the mining methods used for each mineral in the \"mining_methods\" table. with given SQL schema CREATE TABLE mining_methods (mineral VARCHAR(50), method VARCHAR(50)); INSERT INTO mining_methods (mineral, method) VALUES ('Gold', 'Heap leaching'), ('Silver', 'Flotation'), ('Iron Ore', 'Drilling'), ('Copper', 'Open pit mining'), ('Zinc', 'Underground mining'), ('Lead', 'Quarrying'), ('Nickel', 'Open pit mining'), ('Tin', 'Dredging'), ('Aluminum', 'Open pit mining'), ('Uranium', 'In situ leaching');","completion":"SELECT mineral, method FROM mining_methods;"}
{"prompt":"Update the \"production_data\" table to set the \"productivity_score\" to 95 for all records where the \"mine_name\" is 'Golden Hills' with given SQL schema CREATE TABLE production_data (record_id INT PRIMARY KEY, mine_name VARCHAR(20), productivity_score INT); INSERT INTO production_data (record_id, mine_name, productivity_score) VALUES (1, 'Golden Hills', 90), (2, 'Silver Ridge', 85), (3, 'Golden Hills', 92);","completion":"UPDATE production_data SET productivity_score = 95 WHERE mine_name = 'Golden Hills';"}
{"prompt":"Count the number of mining incidents per month in 2021. with given SQL schema CREATE TABLE incidents (id INT, date DATE, incident_type TEXT); INSERT INTO incidents (id, date, incident_type) VALUES (1, '2021-01-05', 'equipment_failure'); INSERT INTO incidents (id, date, incident_type) VALUES (2, '2021-03-12', 'safety_violation');","completion":"SELECT DATE_PART('month', date) AS month, COUNT(*) FROM incidents WHERE date >= '2021-01-01' AND date < '2022-01-01' GROUP BY month;"}
{"prompt":"What is the percentage of women in the Mining department? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), Department VARCHAR(50), Gender VARCHAR(50)); INSERT INTO Employees (EmployeeID, Name, Department, Gender) VALUES (1, 'John Doe', 'Mining', 'Male'); INSERT INTO Employees (EmployeeID, Name, Department, Gender) VALUES (2, 'Jane Smith', 'Mining', 'Female');","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM Employees WHERE Department = 'Mining')) AS Percentage FROM Employees WHERE Department = 'Mining' AND Gender = 'Female';"}
{"prompt":"Delete broadband subscribers who have used more than 200GB of data in the last month. with given SQL schema CREATE TABLE excessive_data_users (subscriber_id INT, name VARCHAR(50), data_usage_gb FLOAT); INSERT INTO excessive_data_users (subscriber_id, name, data_usage_gb) VALUES (7, 'Eva Wilson', 210); INSERT INTO excessive_data_users (subscriber_id, name, data_usage_gb) VALUES (8, 'Frank Miller', 250);","completion":"DELETE FROM broadband_subscribers WHERE subscriber_id IN (SELECT subscriber_id FROM excessive_data_users WHERE data_usage_gb > 200);"}
{"prompt":"Update the investment type for a record in the network_investments table with given SQL schema CREATE TABLE network_investments (investment_id INT, location VARCHAR(50), investment_type VARCHAR(50), investment_amount DECIMAL(10,2), investment_date DATE);","completion":"UPDATE network_investments SET investment_type = 'Fiber Expansion' WHERE investment_id = 67890;"}
{"prompt":"Which broadband subscribers have a download speed greater than 300 Mbps? with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, download_speed FLOAT); INSERT INTO broadband_subscribers (subscriber_id, download_speed) VALUES (1, 250.6), (2, 350.8), (3, 120.9);","completion":"SELECT subscriber_id FROM broadband_subscribers WHERE download_speed > 300;"}
{"prompt":"Who is the oldest artist from the United States? with given SQL schema CREATE TABLE artists (id INT, name VARCHAR(255), age INT, country VARCHAR(255)); INSERT INTO artists (id, name, age, country) VALUES (1, 'Bruce Springsteen', 72, 'United States'), (2, 'Beyonc\u00e9', 40, 'United States');","completion":"SELECT name, MAX(age) FROM artists WHERE country = 'United States';"}
{"prompt":"Find the number of articles published by each author in the 'investigative_reports' table. with given SQL schema CREATE TABLE investigative_reports (id INT, author VARCHAR(255), title VARCHAR(255), published_date DATE);","completion":"SELECT author, COUNT(*) FROM investigative_reports GROUP BY author;"}
{"prompt":"How many articles were published by each author in the 'reports' table, broken down by topic? with given SQL schema CREATE TABLE reports (id INT, author VARCHAR(255), title VARCHAR(255), published_date DATE, topic VARCHAR(255));","completion":"SELECT author, topic, COUNT(*) as articles_count FROM reports GROUP BY author, topic;"}
{"prompt":"How many donations were made in each country, based on the 'donations' and 'countries' tables? with given SQL schema CREATE TABLE countries (id INT, country_code CHAR(2), country_name TEXT);CREATE TABLE donations (id INT, donor_id INT, amount DECIMAL(10,2), donation_date DATE, donor_country_id INT);","completion":"SELECT countries.country_name, COUNT(donations.id) FROM countries INNER JOIN donations ON countries.id = donations.donor_country_id GROUP BY countries.country_name;"}
{"prompt":"What is the total number of grants given per city? with given SQL schema CREATE TABLE Nonprofits (NonprofitID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), MissionStatement TEXT); CREATE TABLE Grants (GrantID INT, DonorID INT, NonprofitID INT, GrantAmount DECIMAL(10,2), Date DATE); CREATE TABLE Donors (DonorID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), DonationAmount DECIMAL(10,2));","completion":"SELECT City, COUNT(*) FROM Grants G INNER JOIN Nonprofits N ON G.NonprofitID = N.NonprofitID GROUP BY City;"}
{"prompt":"What was the total donation amount by each organization in the last 30 days? with given SQL schema CREATE TABLE organization_donations (id INT, organization TEXT, donation_date DATE, donation_amount DECIMAL(10,2)); INSERT INTO organization_donations (id, organization, donation_date, donation_amount) VALUES (1, 'Organization A', '2021-03-15', 100.00), (2, 'Organization B', '2021-03-25', 200.00);","completion":"SELECT organization, SUM(donation_amount) FROM organization_donations WHERE donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY) GROUP BY organization;"}
{"prompt":"Add a new 'underwater_camera' record to the 'equipment' table for 'GoPro' with 'status' 'inactive'. with given SQL schema CREATE TABLE equipment (equipment_id INT, equipment_name TEXT, manufacturer TEXT, status TEXT);","completion":"INSERT INTO equipment (equipment_id, equipment_name, manufacturer, status) VALUES (6, 'underwater_camera', 'GoPro', 'inactive');"}
{"prompt":"Find ship incidents involving oil tankers in the North Sea with given SQL schema CREATE TABLE Ship_Incidents (id INT, ship_name VARCHAR(50), incident_type VARCHAR(50), incident_date DATE, ship_type VARCHAR(50)); INSERT INTO Ship_Incidents (id, ship_name, incident_type, incident_date, ship_type) VALUES (1, 'Braer', 'oil spill', '1993-01-05', 'oil tanker');","completion":"SELECT ship_name, incident_type FROM Ship_Incidents WHERE ship_type = 'oil tanker' AND location IN ('North Sea');"}
{"prompt":"How many species are there in each ocean basin? with given SQL schema CREATE TABLE species_count (ocean_basin TEXT, species_number INTEGER); INSERT INTO species_count (ocean_basin, species_number) VALUES ('Atlantic', 1200), ('Pacific', 2000), ('Indian', 1500);","completion":"SELECT ocean_basin, species_number FROM species_count;"}
{"prompt":"What is the maximum year a deep-sea exploration was conducted? with given SQL schema CREATE TABLE deep_sea_exploration (vessel TEXT, year INT); INSERT INTO deep_sea_exploration (vessel, year) VALUES ('Titanic', 1912), ('Trieste', 1960), ('Titanic', 1985);","completion":"SELECT MAX(year) FROM deep_sea_exploration;"}
{"prompt":"What is the total amount donated by new and returning donors? with given SQL schema CREATE TABLE DonorTypes (DonorID int, DonorType varchar(10), DonationAmount decimal(10,2)); INSERT INTO DonorTypes (DonorID, DonorType, DonationAmount) VALUES (1, 'New', 50.00), (2, 'Returning', 75.00), (3, 'New', 62.50);","completion":"SELECT DonorType, SUM(DonationAmount) AS TotalDonation FROM DonorTypes GROUP BY DonorType;"}
{"prompt":"What is the total donation amount for each year? with given SQL schema CREATE TABLE donations (donation_id INT, donation_amount DECIMAL(10,2), donation_year INT); INSERT INTO donations (donation_id, donation_amount, donation_year) VALUES (1, 5000.00, 2020), (2, 3000.00, 2019), (3, 7000.00, 2020), (4, 4000.00, 2018); CREATE VIEW yearly_donations AS SELECT donation_year, SUM(donation_amount) AS total_donation_amount FROM donations GROUP BY donation_year;","completion":"SELECT * FROM yearly_donations;"}
{"prompt":"How many users have adopted VR technology in India? with given SQL schema CREATE TABLE users_technology (id INT, user_id INT, has_vr BOOLEAN); INSERT INTO users_technology (id, user_id, has_vr) VALUES","completion":"SELECT COUNT(DISTINCT user_id) FROM users_technology WHERE has_vr = TRUE"}
{"prompt":"What is the maximum number of games played concurrently by a player, for each platform? with given SQL schema CREATE TABLE PlayerGames (PlayerID INT, Platform VARCHAR(10), MaxGames INT); INSERT INTO PlayerGames (PlayerID, Platform, MaxGames) VALUES (1, 'PC', 3);","completion":"SELECT Platform, MAX(MaxGames) as MaxConcurrentGames FROM PlayerGames GROUP BY Platform;"}
{"prompt":"What is the average temperature in region 'Northwest' for the past week, grouped by day? with given SQL schema CREATE TABLE weather_data (temperature FLOAT, time DATETIME, region VARCHAR(20)); INSERT INTO weather_data (temperature, time, region) VALUES (23.5, '2022-06-01 12:00:00', 'Northwest');","completion":"SELECT DATE(time) as date, AVG(temperature) as avg_temp FROM weather_data WHERE region = 'Northwest' AND time >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY DATE(time)"}
{"prompt":"What is the total number of IoT sensors in Brazil as of today? with given SQL schema CREATE TABLE iot_sensors (id INT, location VARCHAR(50), sensor_type VARCHAR(50), installed_date DATE);","completion":"SELECT COUNT(id) FROM iot_sensors WHERE location = 'Brazil' AND installed_date <= CURDATE();"}
{"prompt":"Add a new record to the \"PolicyImpact\" table with given SQL schema CREATE TABLE PolicyImpact (ID INT, Policy TEXT, Impact TEXT, StartDate DATE, EndDate DATE);","completion":"INSERT INTO PolicyImpact (ID, Policy, Impact, StartDate, EndDate) VALUES (3002, 'Community Policing', 'Increase in community trust by 30%', '2021-01-01', '2022-12-31');"}
{"prompt":"What is the maximum co-ownership duration for properties in the neighborhood of 'Chinatown' in San Francisco?' with given SQL schema CREATE TABLE sf_neighborhoods (neighborhood_id INT, name VARCHAR(255), city VARCHAR(255)); INSERT INTO sf_neighborhoods (neighborhood_id, name, city) VALUES (1, 'Chinatown', 'San Francisco'); CREATE TABLE co_ownership (co_ownership_id INT, property_id INT, co_owner_id INT, start_date DATE, end_date DATE); INSERT INTO co_ownership (co_ownership_id, property_id, co_owner_id, start_date, end_date) VALUES (1, 1, 2, '2010-01-01', '2020-01-01'), (2, 2, 3, '2015-01-01', '2022-01-01'); CREATE TABLE properties (property_id INT, city VARCHAR(255)); INSERT INTO properties (property_id, city) VALUES (1, 'San Francisco'), (2, 'San Francisco');","completion":"SELECT MAX(DATEDIFF(end_date, start_date)) as max_duration FROM co_ownership JOIN properties ON co_ownership.property_id = properties.property_id WHERE properties.city = 'San Francisco' AND name = 'Chinatown';"}
{"prompt":"Show the total energy efficiency improvement (in %) for each energy policy in India since 2015 with given SQL schema CREATE TABLE india_energy_policies (id INT, policy_name VARCHAR(100), policy_type VARCHAR(50), enactment_date DATE, improvement_percentage FLOAT); INSERT INTO india_energy_policies (id, policy_name, policy_type, enactment_date, improvement_percentage) VALUES (1, 'Policy 1', 'Renewable Energy', '2015-07-14', 5.0), (2, 'Policy 2', 'Energy Efficiency', '2017-02-28', 3.5), (3, 'Policy 3', 'Carbon Pricing', '2018-11-11', 7.0);","completion":"SELECT policy_name, improvement_percentage FROM india_energy_policies WHERE enactment_date <= '2015-01-01' AND country = 'India';"}
{"prompt":"What is the combined energy output of all hydro power projects in South America? with given SQL schema CREATE TABLE project_south_america (project_name TEXT, type TEXT, capacity NUMERIC); INSERT INTO project_south_america (project_name, type, capacity) VALUES ('Hydro Dam A', 'Hydro', 15000), ('Hydro Dam B', 'Hydro', 16000), ('Solar Park C', 'Solar', 5000), ('Wind Farm D', 'Wind', 8000);","completion":"SELECT SUM(capacity) FROM project_south_america WHERE type = 'Hydro';"}
{"prompt":"What is the total installed capacity of renewable energy projects in the state of Florida, grouped by project type and project location? with given SQL schema CREATE TABLE fl_projects (id INT, project_name VARCHAR(100), state VARCHAR(50), project_type VARCHAR(50), project_location VARCHAR(50), installed_capacity INT); INSERT INTO fl_projects (id, project_name, state, project_type, project_location, installed_capacity) VALUES (1, 'FL Project A', 'Florida', 'Solar', 'North Florida', 10000), (2, 'FL Project B', 'Florida', 'Wind', 'Central Florida', 20000);","completion":"SELECT project_type, project_location, SUM(installed_capacity) FROM fl_projects WHERE state = 'Florida' GROUP BY project_type, project_location;"}
{"prompt":"How many restaurants serve Mexican food and have a revenue greater than $8000? with given SQL schema CREATE TABLE Restaurants (id INT, name TEXT, type TEXT, revenue FLOAT); INSERT INTO Restaurants (id, name, type, revenue) VALUES (1, 'Restaurant A', 'Italian', 5000.00), (2, 'Restaurant B', 'Mexican', 8500.00), (3, 'Restaurant C', 'Mexican', 7000.00);","completion":"SELECT COUNT(*) FROM Restaurants WHERE type = 'Mexican' AND revenue > 8000;"}
{"prompt":"What is the total cost of ingredients for each menu item, including their organic premium? with given SQL schema CREATE TABLE menu_items (item_id INT, item_name VARCHAR(255), base_cost DECIMAL(10,2), organic_premium DECIMAL(10,2)); INSERT INTO menu_items (item_id, item_name, base_cost, organic_premium) VALUES (1, 'Bruschetta', 5, 1), (2, 'Spaghetti Bolognese', 8, 0), (3, 'Calamari', 7, 2), (4, 'Lasagna', 10, 0);","completion":"SELECT item_name, base_cost + organic_premium as total_cost FROM menu_items;"}
{"prompt":"Find the number of operational spacecraft manufactured by SpaceX. with given SQL schema CREATE TABLE Spacecrafts (Spacecraft_ID INT, Name VARCHAR(100), Manufacturer VARCHAR(100), Operational BOOLEAN); INSERT INTO Spacecrafts (Spacecraft_ID, Name, Manufacturer, Operational) VALUES (1, 'Crew Dragon', 'SpaceX', TRUE);","completion":"SELECT COUNT(*) FROM Spacecrafts WHERE Manufacturer = 'SpaceX' AND Operational = TRUE;"}
{"prompt":"What are the names of space telescopes launched by NASA between 1990 and 2010? with given SQL schema CREATE TABLE SpaceTelescopes (id INT, name VARCHAR(255), country VARCHAR(255), launch_date DATE); INSERT INTO SpaceTelescopes (id, name, country, launch_date) VALUES (1, 'Hubble Space Telescope', 'United States', '1990-04-24'); INSERT INTO SpaceTelescopes (id, name, country, launch_date) VALUES (2, 'Spitzer Space Telescope', 'United States', '2003-08-25');","completion":"SELECT name FROM SpaceTelescopes WHERE country = 'United States' AND launch_date BETWEEN '1990-01-01' AND '2010-12-31' AND type = 'Space Telescope'"}
{"prompt":"What is the earliest launch date of a spacecraft by any agency? with given SQL schema CREATE TABLE space_missions (agency VARCHAR(50), spacecraft VARCHAR(50), launch_date DATE); INSERT INTO space_missions (agency, spacecraft, launch_date) VALUES ('NASA', 'Explorer 1', '1958-01-31'), ('Soviet Union', 'Sputnik 1', '1957-10-04'), ('ESA', 'Venera 1', '1961-02-12'), ('ISRO', 'Aryabhata', '1975-04-19'), ('CNSA', 'Dong Fang Hong 1', '1970-04-24');","completion":"SELECT MIN(launch_date) FROM space_missions;"}
{"prompt":"What is the maximum height of an astronaut? with given SQL schema CREATE TABLE MedicalProfiles(astronaut_id INT, height INT, weight INT);","completion":"SELECT MAX(height) FROM MedicalProfiles;"}
{"prompt":"update the age of the athlete with id 100 in the athletes table with given SQL schema CREATE TABLE athletes (id INT PRIMARY KEY, name VARCHAR(100), age INT, sport VARCHAR(50), team VARCHAR(50));","completion":"UPDATE athletes SET age = 26 WHERE id = 100;"}
{"prompt":"Delete all records from the 'routes' table where the 'route_name' is 'Green Line' with given SQL schema CREATE TABLE routes (id INT, route_name VARCHAR(20), agency VARCHAR(20), start_date DATE);","completion":"DELETE FROM routes WHERE route_name = 'Green Line';"}
{"prompt":"Find the top 3 most popular garment types sold in the European market. with given SQL schema CREATE TABLE garment_sales (id INT, garment_type VARCHAR(255), region VARCHAR(255), quantity INT); INSERT INTO garment_sales (id, garment_type, region, quantity) VALUES (1, 'T-Shirt', 'Europe', 500), (2, 'Jeans', 'Europe', 700), (3, 'Sweater', 'Europe', 800);","completion":"SELECT garment_type, SUM(quantity) as total_quantity FROM garment_sales WHERE region = 'Europe' GROUP BY garment_type ORDER BY total_quantity DESC LIMIT 3;"}
{"prompt":"Identify the top 3 garments by total sales in each region. with given SQL schema CREATE TABLE garment_sales (id INT, garment_id INT, region VARCHAR(20), quantity INT, price DECIMAL(5,2), sale_date DATE);CREATE VIEW top_selling_garments_by_region AS SELECT region, garment_id, SUM(quantity) as total_sold FROM garment_sales GROUP BY region, garment_id;","completion":"SELECT region, garment_id, total_sold, RANK() OVER (PARTITION BY region ORDER BY total_sold DESC) as sales_rank FROM top_selling_garments_by_region WHERE sales_rank <= 3;"}
{"prompt":"Update the sustainability_metrics table to reflect the latest CO2 emissions data for garment production in Asia. with given SQL schema CREATE TABLE sustainability_metrics (id INT, region VARCHAR(255), co2_emissions INT); INSERT INTO sustainability_metrics (id, region, co2_emissions) VALUES (1, 'South America', 130), (2, 'Europe', 100), (3, 'Asia', 150);","completion":"UPDATE sustainability_metrics SET co2_emissions = 160 WHERE region = 'Asia';"}
{"prompt":"How many claims were processed for each policy type in the Underwriting department in Q3 2022? with given SQL schema CREATE TABLE Claims (ClaimID INT, PolicyType VARCHAR(20), ProcessingDepartment VARCHAR(20), ProcessingDate DATE); INSERT INTO Claims (ClaimID, PolicyType, ProcessingDepartment, ProcessingDate) VALUES (1, 'Auto', 'Underwriting', '2022-07-15'), (2, 'Home', 'Claims', '2022-06-20'), (3, 'Auto', 'Underwriting', '2022-08-01');","completion":"SELECT PolicyType, COUNT(*) as TotalClaims FROM Claims WHERE ProcessingDepartment = 'Underwriting' AND ProcessingDate BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY PolicyType;"}
{"prompt":"What is the average claim amount for policyholders with multiple claims in the last 6 months? with given SQL schema CREATE TABLE Claims (ClaimID int, ClaimDate date, ClaimAmount decimal(10, 2), PolicyType varchar(50), PolicyholderID int); INSERT INTO Claims (ClaimID, ClaimDate, ClaimAmount, PolicyType, PolicyholderID) VALUES (1, '2022-01-15', 4500.00, 'Auto', 1001), (2, '2022-02-03', 3200.00, 'Home', 1002), (3, '2022-03-17', 5700.00, 'Auto', 1001), (4, '2022-04-01', 6100.00, 'Life', 1004), (5, '2022-05-12', 4200.00, 'Auto', 1001), (6, '2022-06-20', 3800.00, 'Home', 1002); CREATE TABLE Policyholders (PolicyholderID int, FirstName varchar(50), LastName varchar(50)); INSERT INTO Policyholders (PolicyholderID, FirstName, LastName) VALUES (1001, 'Mohammed', 'Ali'), (1002, 'Sarah', 'Smith'), (1003, 'Pedro', 'Gonzales'), (1004, 'Anna', 'Jensen'), (1005, 'Hiroshi', 'Tanaka');","completion":"SELECT PolicyholderID, AVG(ClaimAmount) AS AvgClaimAmount FROM (SELECT PolicyholderID, ClaimAmount FROM Claims WHERE ClaimDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY PolicyholderID, ClaimAmount HAVING COUNT(DISTINCT PolicyholderID) > 1) AS Subquery GROUP BY PolicyholderID;"}
{"prompt":"What is the maximum claim amount for pet insurance policies? with given SQL schema CREATE TABLE PetPolicies (PolicyID int, ClaimAmount decimal); INSERT INTO PetPolicies (PolicyID, ClaimAmount) VALUES (1, 100); INSERT INTO PetPolicies (PolicyID, ClaimAmount) VALUES (2, 200); INSERT INTO PetPolicies (PolicyID, ClaimAmount) VALUES (3, 300);","completion":"SELECT MAX(ClaimAmount) FROM PetPolicies;"}
{"prompt":"Delete all records of workplaces in the state of Georgia. with given SQL schema CREATE TABLE workplaces (id INT, name TEXT, state TEXT); INSERT INTO workplaces (id, name, state) VALUES (1, 'GHI Company', 'Georgia');","completion":"DELETE FROM workplaces WHERE state = 'Georgia';"}
{"prompt":"List unions with more than 3 workplaces and their average rates. with given SQL schema CREATE TABLE union_workplaces (id INT, union_id INT, workplace_name VARCHAR(50), injury_rate DECIMAL(5,2)); INSERT INTO union_workplaces (id, union_id, workplace_name, injury_rate) VALUES (1, 1001, 'ABC Factory', 6.5), (2, 1001, 'DEF Warehouse', 2.9), (3, 1002, 'XYZ Inc', 3.2), (4, 1003, 'LMN Corp', 9.1), (5, 1003, 'OPQ Office', 4.7);","completion":"SELECT union_id, AVG(injury_rate) as avg_injury_rate FROM union_workplaces GROUP BY union_id HAVING COUNT(*) > 3;"}
{"prompt":"What is the maximum number of union members in workplaces that have successful collective bargaining in the tech sector? with given SQL schema CREATE TABLE workplaces (id INT, name TEXT, location TEXT, sector TEXT, total_employees INT, union_members INT, successful_cb BOOLEAN, cb_year INT);","completion":"SELECT MAX(union_members) FROM workplaces WHERE successful_cb = TRUE AND sector = 'tech';"}
{"prompt":"What is the percentage of union members in the construction sector who are people of color? with given SQL schema CREATE TABLE construction (id INT, union_member BOOLEAN, race TEXT); INSERT INTO construction (id, union_member, race) VALUES (1, TRUE, 'White'), (2, TRUE, 'Black'), (3, FALSE, 'Hispanic'), (4, TRUE, 'Asian'), (5, FALSE, 'White');","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM construction WHERE union_member = TRUE)) FROM construction WHERE race IN ('Black', 'Hispanic', 'Asian');"}
{"prompt":"Delete all vehicles with a safety rating below 4.0 in the \"vehicle_safety\" table. with given SQL schema CREATE TABLE vehicles (id INT, type VARCHAR(50));   CREATE TABLE vehicle_safety (id INT, vehicle_id INT, safety_rating FLOAT);   INSERT INTO vehicles VALUES (1, 'sedan');   INSERT INTO vehicle_safety VALUES (1, 1, 4.5);   INSERT INTO vehicle_safety VALUES (2, 1, 3.5);","completion":"DELETE FROM vehicle_safety WHERE safety_rating < 4.0;"}
{"prompt":"Delete records from the safety_records table where the status is 'Failed' and the inspection_date is after '2022-06-01' with given SQL schema CREATE TABLE safety_records (id INT PRIMARY KEY, vessel_id INT, inspection_date DATE, status VARCHAR(255)); INSERT INTO safety_records (id, vessel_id, inspection_date, status) VALUES (1, 1, '2022-03-01', 'Passed'), (2, 2, '2022-06-03', 'Failed'), (3, 3, '2021-03-01', 'Passed');","completion":"DELETE FROM safety_records WHERE status = 'Failed' AND inspection_date > '2022-06-01';"}
{"prompt":"Which vessels have traveled between the Port of Santos and the Port of Hong Kong, and what is the median travel time (in days)? with given SQL schema CREATE TABLE Routes (route_id INT, departure_port VARCHAR(20), arrival_port VARCHAR(20)); CREATE TABLE VesselTravel (vessel_id INT, route INT, departure_date DATE, travel_time INT); INSERT INTO Routes (route_id, departure_port, arrival_port) VALUES (1, 'Los Angeles', 'Tokyo'), (2, 'Rotterdam', 'New York'), (3, 'Santos', 'Hong Kong'); INSERT INTO VesselTravel (vessel_id, route, departure_date, travel_time) VALUES (1, 1, '2021-01-01', 14), (2, 1, '2021-02-01', 15), (3, 1, '2021-03-01', 16), (4, 3, '2021-01-01', 20), (5, 3, '2021-02-01', 21), (6, 3, '2021-03-01', 22), (7, 3, '2021-04-01', 19), (8, 3, '2021-05-01', 20), (9, 3, '2021-06-01', 23);","completion":"SELECT vessel_id, MEDIAN(travel_time) as median_travel_time FROM VesselTravel WHERE route = 3 GROUP BY vessel_id;"}
{"prompt":"What is the distribution of visitor age groups across museums? with given SQL schema CREATE TABLE MuseumVisitors (visitor_id INT, museum_id INT, age INT); INSERT INTO MuseumVisitors (visitor_id, museum_id, age) VALUES (1, 100, 25), (2, 101, 30), (3, 102, 45);","completion":"SELECT museum_id, CASE WHEN age BETWEEN 0 AND 17 THEN 'Children' WHEN age BETWEEN 18 AND 35 THEN 'Young Adults' WHEN age BETWEEN 36 AND 55 THEN 'Adults' ELSE 'Seniors' END as age_group, COUNT(*) as visitor_count FROM MuseumVisitors GROUP BY museum_id, age_group;"}
{"prompt":"Update recycling initiative records in Paris in 2022 with given SQL schema CREATE TABLE recycling_initiatives (year INT, city VARCHAR(255), initiative_type VARCHAR(255)); INSERT INTO recycling_initiatives (year, city, initiative_type) VALUES (2022, 'Paris', 'Plastic Recycling'), (2022, 'Paris', 'Paper Recycling'), (2022, 'Paris', 'Glass Recycling');","completion":"UPDATE recycling_initiatives SET initiative_type = 'Composting' WHERE year = 2022 AND city = 'Paris';"}
{"prompt":"What is the total landfill capacity in Japan and China? with given SQL schema CREATE TABLE LandfillCapacity (country VARCHAR(255), capacity INT); INSERT INTO LandfillCapacity (country, capacity) VALUES ('Japan', 850000), ('China', 2300000);","completion":"SELECT SUM(capacity) FROM LandfillCapacity WHERE country IN ('Japan', 'China')"}
{"prompt":"Find the number of wastewater treatment plants in California and Texas. with given SQL schema CREATE TABLE treatment_plants (state TEXT, num_plants INT); INSERT INTO treatment_plants (state, num_plants) VALUES ('California', 321), ('Texas', 456), ('New York', 123), ('Florida', 345);","completion":"SELECT num_plants FROM treatment_plants WHERE state IN ('California', 'Texas')"}
{"prompt":"Show the water usage distribution by city in 'RegionE' with given SQL schema CREATE TABLE City_Water_Usage (id INT, city VARCHAR(20), water_usage FLOAT, region VARCHAR(20)); INSERT INTO City_Water_Usage (id, city, water_usage, region) VALUES (1, 'City1', 12.5, 'RegionE'), (2, 'City2', 10.0, 'RegionE'), (3, 'City3', 15.0, 'RegionF');","completion":"SELECT city, water_usage FROM City_Water_Usage WHERE region = 'RegionE' ORDER BY water_usage;"}
{"prompt":"Calculate the maximum duration of any workout for users aged 40-50. with given SQL schema CREATE TABLE workouts (id INT, user_id INT, duration INT, date DATE);","completion":"SELECT MAX(duration) FROM workouts w JOIN users u ON w.user_id = u.id WHERE u.age BETWEEN 40 AND 50;"}
{"prompt":"What is the average safety score for AI models in the healthcare industry? with given SQL schema CREATE TABLE ai_models (model_name TEXT, industry TEXT, safety_score FLOAT); INSERT INTO ai_models (model_name, industry, safety_score) VALUES ('ModelA', 'Healthcare', 0.85), ('ModelB', 'Finance', 0.92), ('ModelC', 'Retail', 0.78), ('ModelD', 'Healthcare', 0.95);","completion":"SELECT industry, AVG(safety_score) FROM ai_models WHERE industry = 'Healthcare' GROUP BY industry;"}
{"prompt":"How many community development initiatives were started but not completed in Rwanda between 2017 and 2019? with given SQL schema CREATE TABLE CommunityDevelopment (id INT, country VARCHAR(50), initiative VARCHAR(50), start_date DATE, completion_date DATE); INSERT INTO CommunityDevelopment (id, country, initiative, start_date, completion_date) VALUES (1, 'Rwanda', 'Library Construction', '2017-12-15', '2018-06-30'), (2, 'Rwanda', 'Water Purification Plant', '2018-07-22', '2019-02-28'), (3, 'Ghana', 'Community Health Center', '2019-04-01', '2020-01-01');","completion":"SELECT COUNT(*) FROM CommunityDevelopment WHERE country = 'Rwanda' AND start_date BETWEEN '2017-01-01' AND '2019-12-31' AND completion_date IS NULL;"}
{"prompt":"Insert new records into the 'rural_infrastructure' table for a new water supply project in Kenya with given SQL schema CREATE TABLE rural_infrastructure (id INT, project_name VARCHAR(255), country VARCHAR(255), sector VARCHAR(255));","completion":"INSERT INTO rural_infrastructure (id, project_name, country, sector) VALUES (1, 'Water Supply Project', 'Kenya', 'Water & Sanitation');"}
{"prompt":"What is the total number of agricultural innovation metrics reported in Brazil? with given SQL schema CREATE TABLE Metrics (id INT, metric_id INT, metric_type VARCHAR(20), country VARCHAR(20), report_date DATE); INSERT INTO Metrics (id, metric_id, metric_type, country, report_date) VALUES (1, 5001, 'Agricultural Innovation', 'Brazil', '2020-01-01'), (2, 5002, 'Economic Diversification', 'Brazil', '2020-02-15'), (3, 5003, 'Agricultural Innovation', 'Brazil', '2020-03-31');","completion":"SELECT COUNT(*) FROM Metrics WHERE metric_type = 'Agricultural Innovation' AND country = 'Brazil';"}
{"prompt":"Which rural infrastructure projects were completed before 2020 and their respective completion dates in the 'rural_infrastructure' table? with given SQL schema CREATE TABLE rural_infrastructure (id INT, project_name VARCHAR(50), location VARCHAR(50), budget DECIMAL(10,2), completion_date DATE); INSERT INTO rural_infrastructure (id, project_name, location, budget, completion_date) VALUES (1, 'Water Supply', 'Village A', 25000.00, '2018-05-15'), (2, 'Road Construction', 'Village B', 50000.00, '2019-08-22'), (3, 'Electricity Supply', 'Village A', 30000.00, '2021-03-30');","completion":"SELECT project_name, completion_date FROM rural_infrastructure WHERE completion_date < '2020-01-01';"}
{"prompt":"How many times did the program \"Dance Performances\" occur in each borough of New York City in 2019? with given SQL schema CREATE TABLE Events (EventID int, EventName varchar(50), Borough varchar(50), Year int); INSERT INTO Events (EventID, EventName, Borough, Year) VALUES (1, 'Dance Performances', 'Manhattan', 2019), (2, 'Music Concert', 'Brooklyn', 2019);","completion":"SELECT Borough, COUNT(*) as EventCount FROM Events WHERE EventName = 'Dance Performances' AND Year = 2019 GROUP BY Borough;"}
{"prompt":"Insert a new record for a TV show with title \"ShowC\", genre \"Drama\", and release year 2020. with given SQL schema CREATE TABLE tv_shows (id INT, title VARCHAR(100), genre VARCHAR(50), release_year INT);","completion":"INSERT INTO tv_shows (title, genre, release_year) VALUES ('ShowC', 'Drama', 2020);"}
{"prompt":"What is the minimum rating for movies released in 2021 and rated PG-13? with given SQL schema CREATE TABLE MovieRatings (movie_id INT, release_date DATE, rating DECIMAL(3,2), rating_category VARCHAR(255)); INSERT INTO MovieRatings (movie_id, release_date, rating, rating_category) VALUES (1, '2021-01-01', 7.2, 'PG-13'), (2, '2020-05-15', 8.8, 'G'), (3, '2021-09-22', 6.5, 'PG-13');","completion":"SELECT MIN(rating) FROM MovieRatings WHERE release_date >= '2021-01-01' AND release_date < '2022-01-01' AND rating_category = 'PG-13';"}
{"prompt":"List the approved clinical trials for drug 'DrugX' in 2019? with given SQL schema CREATE TABLE clinical_trials_data (drug_name VARCHAR(50), approval_year INT, approval_status VARCHAR(10)); INSERT INTO clinical_trials_data (drug_name, approval_year, approval_status) VALUES ('DrugX', 2019, 'Approved'), ('DrugY', 2018, 'Rejected');","completion":"SELECT drug_name FROM clinical_trials_data WHERE drug_name = 'DrugX' AND approval_year = 2019 AND approval_status = 'Approved';"}
{"prompt":"What is the average duration of clinical trials for a specific drug category? with given SQL schema CREATE TABLE trial_duration (drug_category VARCHAR(255), trial_duration INT);","completion":"SELECT AVG(trial_duration) FROM trial_duration WHERE drug_category = 'CategoryZ';"}
{"prompt":"What is the most common age range for HIV patients in South Africa? with given SQL schema CREATE TABLE hiv_patients (id INT, patient_id INT, age INT, gender VARCHAR(10), location VARCHAR(50)); INSERT INTO hiv_patients (id, patient_id, age, gender, location) VALUES (1, 601, 28, 'Male', 'South Africa'); INSERT INTO hiv_patients (id, patient_id, age, gender, location) VALUES (2, 602, 45, 'Female', 'South Africa');","completion":"SELECT age DIV 10 * 10 AS age_range, COUNT(*) FROM hiv_patients WHERE location = 'South Africa' GROUP BY age_range ORDER BY COUNT(*) DESC LIMIT 1;"}
{"prompt":"Calculate the percentage of inclusion efforts in the \"Midwest\" region. with given SQL schema CREATE TABLE inclusion_efforts (effort_id INT, region VARCHAR(10), type VARCHAR(20)); INSERT INTO inclusion_efforts (effort_id, region, type) VALUES (1, 'Northeast', 'Training'), (2, 'Southeast', 'Hiring'), (3, 'Midwest', 'Accessibility'), (4, 'Northeast', 'Events');","completion":"SELECT 100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM inclusion_efforts) AS percentage FROM inclusion_efforts WHERE region = 'Midwest';"}
{"prompt":"What is the maximum depth of any trench in the Southern Ocean? with given SQL schema CREATE TABLE oceanography (id INT, location VARCHAR(255), depth INT); INSERT INTO oceanography (id, location, depth) VALUES (1, 'Southern Ocean Trench', 8000);","completion":"SELECT MAX(depth) FROM oceanography WHERE location = 'Southern Ocean Trench';"}
{"prompt":"Which ingredients are used in products that are not cruelty-free? with given SQL schema CREATE TABLE ingredients (ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(50)); CREATE TABLE products (product_id INT PRIMARY KEY, cruelty_free BOOLEAN); CREATE TABLE product_ingredients (product_id INT, ingredient_id INT, PRIMARY KEY (product_id, ingredient_id), FOREIGN KEY (product_id) REFERENCES products(product_id), FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)); INSERT INTO ingredients (ingredient_id, ingredient_name) VALUES (1, 'Palm Oil'), (2, 'Parabens'), (3, 'Sulfates'); INSERT INTO products (product_id, cruelty_free) VALUES (1, false), (2, true), (3, false), (4, true), (5, false); INSERT INTO product_ingredients (product_id, ingredient_id) VALUES (1, 1), (1, 2), (2, 3), (3, 1), (4, 2), (5, 1);","completion":"SELECT ingredient_name FROM ingredients JOIN product_ingredients ON ingredients.ingredient_id = product_ingredients.ingredient_id JOIN products ON product_ingredients.product_id = products.product_id WHERE products.cruelty_free = false;"}
{"prompt":"How many veterans are employed by ABC company in California? with given SQL schema CREATE TABLE veteran_employment (id INT, company VARCHAR(50), state VARCHAR(50), num_veterans INT); INSERT INTO veteran_employment (id, company, state, num_veterans) VALUES (1, 'ABC', 'California', 1000); INSERT INTO veteran_employment (id, company, state, num_veterans) VALUES (2, 'XYZ', 'California', 1500);","completion":"SELECT SUM(num_veterans) FROM veteran_employment WHERE company = 'ABC' AND state = 'California';"}
{"prompt":"What is the average balance for customers in the West region? with given SQL schema CREATE TABLE customers (id INT, name VARCHAR(50), region VARCHAR(50), balance DECIMAL(10,2)); INSERT INTO customers (id, name, region, balance) VALUES (1, 'John Doe', 'West', 5000.00), (2, 'Jane Smith', 'West', 7000.00), (3, 'Alice Johnson', 'East', 6000.00);","completion":"SELECT AVG(balance) FROM customers WHERE region = 'West';"}
{"prompt":"What is the maximum transaction amount for clients in the Americas region? with given SQL schema CREATE TABLE clients (client_id INT, region VARCHAR(20)); INSERT INTO clients (client_id, region) VALUES (1, 'North America'), (2, 'South America'), (3, 'Europe'); CREATE TABLE transactions (transaction_id INT, client_id INT, amount DECIMAL(10,2)); INSERT INTO transactions (transaction_id, client_id, amount) VALUES (1, 1, 500.00), (2, 1, 1000.00), (3, 2, 250.00), (4, 3, 10000.00);","completion":"SELECT MAX(amount) FROM transactions JOIN clients ON transactions.client_id = clients.client_id WHERE clients.region = 'North America';"}
{"prompt":"Update the compliance status for a specific regulatory compliance record in the \"regulatory_compliance\" table with given SQL schema CREATE TABLE regulatory_compliance (id INT PRIMARY KEY, vessel_id INT, regulation_id INT, compliance_date DATE, is_compliant BOOLEAN);","completion":"UPDATE regulatory_compliance SET is_compliant = false WHERE id = 2;"}
{"prompt":"How many employees have completed workforce development training in the textile sector in Bangladesh? with given SQL schema CREATE TABLE employees (employee_id INT, employee_name VARCHAR(255), sector VARCHAR(255), country VARCHAR(255)); INSERT INTO employees (employee_id, employee_name, sector, country) VALUES (1, 'John Doe', 'Textile', 'Bangladesh'), (2, 'Jane Smith', 'Manufacturing', 'United States'), (3, 'Bob Johnson', 'Textile', 'Bangladesh'); CREATE TABLE trainings (training_id INT, training_name VARCHAR(255), sector VARCHAR(255)); INSERT INTO trainings (training_id, training_name, sector) VALUES (1, 'Weaving Training', 'Textile'), (2, 'Dyeing Training', 'Textile'), (3, 'Metalworking Training', 'Manufacturing');","completion":"SELECT COUNT(DISTINCT e.employee_id) as num_employees FROM employees e JOIN trainings t ON e.sector = t.sector WHERE e.country = 'Bangladesh' AND t.training_name = 'Weaving Training';"}
{"prompt":"What is the average salary of workers in the 'manufacturing' industry across all regions? with given SQL schema CREATE TABLE regions (region_id INT, region_name TEXT);   CREATE TABLE workers (worker_id INT, worker_name TEXT, salary INT, region_id INT);   CREATE TABLE industries (industry_id INT, industry_name TEXT);   INSERT INTO regions VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West');   INSERT INTO workers VALUES (1, 'John', 50000, 1), (2, 'Jane', 55000, 1), (3, 'Bob', 60000, 2), (4, 'Alice', 58000, 3);   INSERT INTO industries VALUES (1, 'manufacturing'), (2, 'technology'), (3, 'finance'), (4, 'retail');","completion":"SELECT AVG(salary) FROM workers INNER JOIN industries ON workers.region_id = regions.region_id WHERE industries.industry_name = 'manufacturing';"}
{"prompt":"What is the average budget allocated for cybersecurity operations in the last 3 years? with given SQL schema CREATE TABLE budget (fiscal_year INT, amount INT, category TEXT);INSERT INTO budget (fiscal_year, amount, category) VALUES (2019, 5000000, 'Cybersecurity');INSERT INTO budget (fiscal_year, amount, category) VALUES (2020, 5500000, 'Cybersecurity');INSERT INTO budget (fiscal_year, amount, category) VALUES (2021, 6000000, 'Cybersecurity');","completion":"SELECT AVG(amount) FROM budget WHERE category = 'Cybersecurity' AND fiscal_year BETWEEN 2019 AND 2021;"}
{"prompt":"What is the distribution of lifelong learning course enrollments by age group, in total? with given SQL schema CREATE TABLE lifelong_learning (student_id INT, age_group VARCHAR(255), course_id INT); CREATE TABLE courses (course_id INT, course_name VARCHAR(255));","completion":"SELECT l.age_group, COUNT(l.course_id) FROM lifelong_learning l INNER JOIN courses c ON l.course_id = c.course_id GROUP BY l.age_group;"}
{"prompt":"Which students have improved their mental health score the most? with given SQL schema CREATE TABLE student_mental_health (student_id INT, score INT, year INT); INSERT INTO student_mental_health (student_id, score, year) VALUES (1, 80, 2021), (1, 85, 2022), (2, 70, 2021), (2, 75, 2022), (3, 90, 2021), (3, 95, 2022);","completion":"SELECT student_id, MAX(score) - MIN(score) as score_improvement FROM student_mental_health GROUP BY student_id ORDER BY score_improvement DESC;"}
{"prompt":"What is the average salary of employees in each position? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), Department VARCHAR(50), Position VARCHAR(50), Salary FLOAT); INSERT INTO Employees (EmployeeID, Name, Department, Position, Salary) VALUES (1, 'John Doe', 'IT', 'Developer', 75000.00), (2, 'Jane Smith', 'IT', 'Developer', 80000.00), (3, 'Alice Johnson', 'Marketing', 'Marketing Specialist', 60000.00), (4, 'Bob Brown', 'HR', 'HR Specialist', 65000.00);","completion":"SELECT Position, AVG(Salary) FROM Employees GROUP BY Position;"}
{"prompt":"What is the total energy produced by renewable sources in Germany for the year 2020? with given SQL schema CREATE TABLE renewable_energy (country VARCHAR(255), year INT, energy_produced FLOAT); INSERT INTO renewable_energy (country, year, energy_produced) VALUES ('Germany', 2020, 123.45);","completion":"SELECT SUM(energy_produced) FROM renewable_energy WHERE country = 'Germany' AND year = 2020;"}
{"prompt":"How many games have been played in the 'NHL' league since the year 2000? with given SQL schema CREATE TABLE games (game_id INT, team1 VARCHAR(50), team2 VARCHAR(50), league VARCHAR(50), season INT, year INT); INSERT INTO games (game_id, team1, team2, league, season, year) VALUES (1, 'Sharks', 'Kings', 'NHL', 2000, 2000);","completion":"SELECT COUNT(*) FROM games WHERE league = 'NHL' AND year >= 2000;"}
{"prompt":"What is the number of fans engaging with each team's social media on a daily basis? with given SQL schema CREATE TABLE social_media (team VARCHAR(255), date DATE, engagement INT); INSERT INTO social_media (team, date, engagement) VALUES ('Bears', '2022-01-01', 5000), ('Bears', '2022-01-02', 6000), ('Bills', '2022-01-01', 3000), ('Bills', '2022-01-02', 4000);","completion":"SELECT team, AVG(engagement) FROM social_media GROUP BY team;"}
{"prompt":"What is the minimum number of team members in 'disaster_response_teams' table? with given SQL schema CREATE TABLE disaster_response_teams (id INT, team_name VARCHAR(255), team_size INT); INSERT INTO disaster_response_teams (id, team_name, team_size) VALUES (1, 'Team A', 5), (2, 'Team B', 10), (3, 'Team C', 15);","completion":"SELECT MIN(team_size) as min_team_size FROM disaster_response_teams;"}
{"prompt":"What is the total amount of funds raised by NGOs for disaster relief efforts in Africa in the year 2019? with given SQL schema CREATE TABLE ngo_funds(id INT, ngo_name TEXT, region TEXT, amount FLOAT, year INT); INSERT INTO ngo_funds(id, ngo_name, region, amount, year) VALUES (1, 'Oxfam', 'Africa', 500000.00, 2019), (2, 'Save the Children', 'Africa', 600000.00, 2019), (3, 'World Vision', 'South Asia', 700000.00, 2019);","completion":"SELECT SUM(amount) FROM ngo_funds WHERE region = 'Africa' AND year = 2019;"}
{"prompt":"Which region has the highest average shelter capacity? with given SQL schema CREATE TABLE region (region_id INT, name VARCHAR(255)); INSERT INTO region (region_id, name) VALUES (1, 'west_africa'), (2, 'east_asia'), (3, 'south_america'); CREATE TABLE shelter (shelter_id INT, name VARCHAR(255), region_id INT, capacity INT); INSERT INTO shelter (shelter_id, name, region_id, capacity) VALUES (1, 'Shelter1', 1, 50), (2, 'Shelter2', 1, 75), (3, 'Shelter3', 2, 100), (4, 'Shelter4', 3, 150);","completion":"SELECT region_id, AVG(capacity) as avg_capacity FROM shelter GROUP BY region_id ORDER BY avg_capacity DESC LIMIT 1;"}
{"prompt":"What is the minimum price of devices produced by companies located in underrepresented communities? with given SQL schema CREATE TABLE Devices (id INT, name VARCHAR(50), company VARCHAR(50), price DECIMAL(5,2), community VARCHAR(50)); INSERT INTO Devices (id, name, company, price, community) VALUES (1, 'Phone X', 'ABC Tech', 200.00, 'Minority Owned Business'), (2, 'Tablet Y', 'XYZ Enterprises', 350.00, 'Women Owned Business'), (3, 'Laptop Z', 'Tech for Good', 700.00, 'Non-Profit');","completion":"SELECT MIN(price) FROM Devices WHERE community IN ('Minority Owned Business', 'Women Owned Business', 'Non-Profit');"}
{"prompt":"What is the maximum number of likes received by a single post in India? with given SQL schema CREATE TABLE post_likes (post_id INT, user_id INT, country VARCHAR(2)); INSERT INTO post_likes (post_id, user_id, country) VALUES (1, 1, 'US'), (1, 2, 'IN'), (2, 3, 'CA'), (2, 4, 'IN'), (3, 5, 'IN');","completion":"SELECT MAX(likes) FROM (SELECT post_id, COUNT(*) AS likes FROM post_likes WHERE country = 'IN' GROUP BY post_id) AS post_likes_in;"}
{"prompt":"How many size 16 customers have made a purchase in the last month? with given SQL schema CREATE TABLE customers(id INT PRIMARY KEY, size INT, last_purchase DATE); INSERT INTO customers(id, size, last_purchase) VALUES (1, 16, '2022-01-15'), (2, 12, '2022-02-01'), (3, 16, '2022-02-10');","completion":"SELECT COUNT(*) FROM customers WHERE size = 16 AND last_purchase >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"What is the total quantity of sustainable fabric used by each supplier? with given SQL schema CREATE TABLE FabricSuppliers (SupplierID INT, SupplierName TEXT, FabricType TEXT, Quantity INT, IsSustainable BOOLEAN); INSERT INTO FabricSuppliers (SupplierID, SupplierName, FabricType, Quantity, IsSustainable) VALUES (1, 'SupplierA', 'Cotton', 500, true), (2, 'SupplierB', 'Polyester', 300, false), (3, 'SupplierC', 'Wool', 150, true);","completion":"SELECT SupplierName, SUM(Quantity) as TotalQuantity FROM FabricSuppliers WHERE IsSustainable = true GROUP BY SupplierName;"}
{"prompt":"Insert new socially responsible lending data into SociallyResponsibleLending table. with given SQL schema CREATE TABLE SociallyResponsibleLending (lendingID INT, lenderName VARCHAR(50), borrowerName VARCHAR(50), amountLent DECIMAL(10,2), interestRate DECIMAL(4,2), lendingDate DATE); INSERT INTO SociallyResponsibleLending (lendingID, lenderName, borrowerName, amountLent, interestRate, lendingDate) VALUES (1, 'GreenLenders', 'EcoFriendlyInc', 25000.00, 2.50, '2022-02-01'), (2, 'FairFinance', 'HelpingHands', 10000.00, 1.00, '2022-02-02');","completion":"INSERT INTO SociallyResponsibleLending (lendingID, lenderName, borrowerName, amountLent, interestRate, lendingDate) VALUES (3, 'CommunityBank', 'LocalCharity', 15000.00, 1.50, '2022-02-03');"}
{"prompt":"Identify bioprocess engineering papers published in 2021 with given SQL schema CREATE TABLE papers (id INT, title VARCHAR(50), year INT, authors VARCHAR(50), publication VARCHAR(50)); INSERT INTO papers (id, title, year, authors, publication) VALUES (1, 'Paper A', 2021, 'John Doe', 'Journal of Bioprocessing'); INSERT INTO papers (id, title, year, authors, publication) VALUES (2, 'Paper B', 2020, 'Jane Smith', 'Journal of Genetic Engineering');","completion":"SELECT * FROM papers WHERE year = 2021 AND domain = 'Bioprocess Engineering';"}
{"prompt":"What is the minimum salary of city council members in the city of Chicago? with given SQL schema CREATE TABLE council_members (id INT, city VARCHAR, job_title VARCHAR, salary FLOAT); INSERT INTO council_members (id, city, job_title, salary) VALUES (1, 'Chicago', 'City Council Member', 90000.00);","completion":"SELECT MIN(salary) FROM council_members WHERE city = 'Chicago' AND job_title = 'City Council Member';"}
{"prompt":"What is the total revenue generated from virtual tours in the United Kingdom? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, name TEXT, country TEXT, revenue FLOAT); INSERT INTO virtual_tours VALUES (1, 'Virtual London Tour', 'United Kingdom', 60000), (2, 'British Museum Tour', 'United Kingdom', 40000);","completion":"SELECT SUM(revenue) FROM virtual_tours WHERE country = 'United Kingdom';"}
{"prompt":"What is the average number of listings per hotel in 'Americas'? with given SQL schema CREATE TABLE ota_hotels (hotel_id INT, hotel_name TEXT, country TEXT, listings INT); INSERT INTO ota_hotels (hotel_id, hotel_name, country, listings) VALUES (1, 'Hotel Paraiso', 'Mexico', 550), (2, 'Plaza Hotel', 'USA', 700), (3, 'Fazenda Resort', 'Brazil', 850), (4, 'Boutique Hotel', 'Canada', 600);","completion":"SELECT region, AVG(listings) FROM ota_hotels WHERE region = 'Americas' GROUP BY region;"}
{"prompt":"What is the percentage of hotels in Europe that offer virtual tours? with given SQL schema CREATE TABLE hotel_features (hotel_id INT, hotel_name TEXT, virtual_tour INT, country TEXT); INSERT INTO hotel_features (hotel_id, hotel_name, virtual_tour, country) VALUES (1, 'Hotel A', 1, 'France'), (2, 'Hotel B', 0, 'Germany'), (3, 'Hotel C', 1, 'Italy'), (4, 'Hotel D', 0, 'France'), (5, 'Hotel E', 1, 'Spain');","completion":"SELECT (COUNT(*) FILTER (WHERE virtual_tour = 1) * 100.0 \/ COUNT(*)) AS percentage FROM hotel_features WHERE country = 'Europe';"}
{"prompt":"What is the percentage of hotels in Paris that have adopted AI technology? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, ai_adoption BOOLEAN); INSERT INTO hotels (hotel_id, hotel_name, city, ai_adoption) VALUES (1, 'Hotel X', 'Paris', TRUE), (2, 'Hotel Y', 'London', FALSE);","completion":"SELECT (COUNT(CASE WHEN ai_adoption = TRUE THEN 1 END) * 100.0 \/ COUNT(ai_adoption)) AS percentage FROM hotels WHERE city = 'Paris';"}
{"prompt":"What is the species name and corresponding management location for species with a population between 300 and 600? with given SQL schema CREATE TABLE Species (id INT PRIMARY KEY, name VARCHAR(255), population INT); CREATE TABLE ResourceManagement (id INT PRIMARY KEY, location VARCHAR(255), manager VARCHAR(255));","completion":"SELECT Species.name, ResourceManagement.location FROM Species INNER JOIN ResourceManagement ON 1=1 WHERE Species.population BETWEEN 300 AND 600;"}
{"prompt":"What is the maximum age of patients who have a primary diagnosis of PTSD and have attended at least one therapy session? with given SQL schema CREATE TABLE patients (id INT, name TEXT, age INT, condition TEXT, therapy_sessions INT);","completion":"SELECT MAX(age) FROM patients WHERE condition = 'PTSD' AND therapy_sessions > 0;"}
{"prompt":"What is the total cost of projects with 'Solar' as project_name in the 'renewable_energy' table? with given SQL schema CREATE TABLE renewable_energy (id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO renewable_energy (id, project_name, location, cost) VALUES (1, 'Solar Farm', 'Miami', 10000000); INSERT INTO renewable_energy (id, project_name, location, cost) VALUES (2, 'Wind Farm', 'Seattle', 6000000);","completion":"SELECT SUM(cost) FROM renewable_energy WHERE project_name LIKE '%Solar%';"}
{"prompt":"Show travel advisory updates for Southeast Asian countries in the last month with given SQL schema CREATE TABLE travel_advisories (id INT, country VARCHAR(255), advisory_date DATE, advisory_update TEXT); INSERT INTO travel_advisories (id, country, advisory_date, advisory_update) VALUES (1, 'Thailand', '2023-02-10', 'Protests in Bangkok...'), (2, 'Vietnam', '2023-02-15', 'New entry requirements...'), (3, 'Cambodia', '2023-01-20', 'Typhoon warnings...'), (4, 'Indonesia', '2023-01-05', 'Volcano eruption...');","completion":"SELECT country, advisory_update FROM travel_advisories WHERE country IN ('Thailand', 'Vietnam', 'Cambodia', 'Indonesia', 'Laos', 'Malaysia', 'Myanmar', 'Philippines', 'Singapore', 'Brunei') AND advisory_date >= DATEADD(day, -30, CURRENT_DATE);"}
{"prompt":"What is the average hotel price for beachfront hotels in Mexico? with given SQL schema CREATE TABLE hotels (hotel_id INT, name TEXT, country TEXT, has_beachfront BOOLEAN, price INT); INSERT INTO hotels (hotel_id, name, country, has_beachfront, price) VALUES (1, 'Beach Palace', 'Mexico', true, 200), (2, 'Green Valley', 'USA', false, 150);","completion":"SELECT AVG(price) FROM hotels WHERE has_beachfront = true AND country = 'Mexico';"}
{"prompt":"What was the total number of tourists who visited Asian museums in 2019 and 2020? with given SQL schema CREATE TABLE museum_visitors (country VARCHAR(20), museum VARCHAR(50), visitors INT, year INT); INSERT INTO museum_visitors (country, museum, visitors, year) VALUES ('Japan', 'Tokyo National Museum', 3000000, 2019), ('China', 'Forbidden City', 4000000, 2019), ('Japan', 'Tokyo National Museum', 2500000, 2020), ('China', 'Forbidden City', 3000000, 2020);","completion":"SELECT year, SUM(visitors) as total_visitors FROM museum_visitors WHERE country IN ('Japan', 'China') GROUP BY year;"}
{"prompt":"What is the total population of marine species in the Southern hemisphere? with given SQL schema CREATE TABLE marine_species (id INT, name TEXT, population INT, location TEXT); INSERT INTO marine_species (id, name, population, location) VALUES (1, 'Dolphin', 50, 'Atlantic'); INSERT INTO marine_species (id, name, population, location) VALUES (2, 'Turtle', 25, 'Atlantic'); INSERT INTO marine_species (id, name, population, location) VALUES (3, 'Shark', 100, 'Pacific'); INSERT INTO marine_species (id, name, population, location) VALUES (4, 'Whale', 200, 'Antarctic');","completion":"SELECT SUM(population) FROM marine_species WHERE location LIKE 'S%';"}
{"prompt":"What is the average salary of full-time employees in the Mining department? with given SQL schema CREATE TABLE Employees (id INT, name VARCHAR(50), department VARCHAR(50), salary FLOAT); INSERT INTO Employees (id, name, department, salary) VALUES (1, 'John Doe', 'Mining', 75000.00), (2, 'Jane Smith', 'HR', 60000.00);","completion":"SELECT AVG(salary) FROM Employees WHERE department = 'Mining' AND employment_status = 'Full-time';"}
{"prompt":"What is the percentage of female workers in the mining industry by role? with given SQL schema CREATE TABLE workers (id INT, role TEXT, gender TEXT); INSERT INTO workers (id, role, gender) VALUES (1, 'Manager', 'Male'), (2, 'Engineer', 'Female'), (3, 'Operator', 'Male'), (4, 'Manager', 'Female'), (5, 'Engineer', 'Male'), (6, 'Operator', 'Female');","completion":"SELECT role, (COUNT(*) FILTER (WHERE gender = 'Female')) * 100.0 \/ COUNT(*) FROM workers GROUP BY role;"}
{"prompt":"How many unique volunteers worked on projects in each cause area? with given SQL schema CREATE TABLE volunteers (id INT, name VARCHAR(30), cause_area VARCHAR(20)); INSERT INTO volunteers (id, name, cause_area) VALUES (1, 'Bob', 'children'), (2, 'Alice', 'children'), (3, 'Charlie', 'health');","completion":"SELECT cause_area, COUNT(DISTINCT name) FROM volunteers GROUP BY cause_area;"}
{"prompt":"Insert a new record for a volunteer who has provided their email address with given SQL schema CREATE TABLE volunteer (vol_id INT, vol_name TEXT, org_id INT, vol_email TEXT);","completion":"INSERT INTO volunteer (vol_id, vol_name, org_id, vol_email) VALUES (4, 'David', 1, 'david@example.com');"}
{"prompt":"What is the total amount donated by small donors in the 'animals' cause area? with given SQL schema CREATE TABLE donations (id INT, donor_size VARCHAR(10), cause_area VARCHAR(20), amount INT); INSERT INTO donations (id, donor_size, cause_area, amount) VALUES (1, 'small', 'animals', 500);","completion":"SELECT SUM(amount) FROM donations WHERE donor_size = 'small' AND cause_area = 'animals';"}
{"prompt":"What is the total donation amount for the 'Food' department in the 'Donations' table? with given SQL schema CREATE TABLE Donations (id INT, department VARCHAR(20), amount FLOAT); INSERT INTO Donations (id, department, amount) VALUES (1, 'Animals', 500.00), (2, 'Food', 700.00);","completion":"SELECT SUM(amount) FROM Donations WHERE department = 'Food'"}
{"prompt":"How many public schools and public libraries exist in total, in the 'CityData' schema's 'CityEducation' and 'CityLibrary' tables? with given SQL schema CREATE SCHEMA CityData; CREATE TABLE CityEducation (Name varchar(255), Type varchar(255)); INSERT INTO CityEducation (Name, Type) VALUES ('SchoolA', 'Public'), ('SchoolB', 'Public'), ('SchoolC', 'Private'); CREATE TABLE CityLibrary (Name varchar(255), Type varchar(255)); INSERT INTO CityLibrary (Name, Type) VALUES ('LibraryA', 'Public'), ('LibraryB', 'Public'), ('LibraryC', 'Private');","completion":"SELECT COUNT(*) FROM CityData.CityEducation WHERE Type = 'Public' UNION ALL SELECT COUNT(*) FROM CityData.CityLibrary WHERE Type = 'Public';"}
{"prompt":"List all public transportation routes in the city of San Francisco and their respective budgets for 2023, ordered by budget amount in ascending order. with given SQL schema CREATE TABLE routes (city varchar(50), year int, route varchar(50), budget int); INSERT INTO routes (city, year, route, budget) VALUES ('San Francisco', 2023, 'Route A', 3000000), ('San Francisco', 2023, 'Route B', 2000000), ('San Francisco', 2023, 'Route C', 1000000), ('San Francisco', 2023, 'Route D', 4000000);","completion":"SELECT route, budget FROM routes WHERE city = 'San Francisco' AND year = 2023 ORDER BY budget ASC;"}
{"prompt":"What is the ratio of affordable to total housing units for each community type? with given SQL schema CREATE TABLE Community_Types (name VARCHAR(50), affordable_housing INT, total_housing INT); INSERT INTO Community_Types (name, affordable_housing, total_housing) VALUES ('Urban', 2000, 5000), ('Suburban', 1500, 4000), ('Rural', 500, 2000);","completion":"SELECT name, affordable_housing\/total_housing AS ratio FROM Community_Types;"}
{"prompt":"What is the maximum CO2 emission reduction achieved by any carbon offset program in the industry sector? with given SQL schema CREATE TABLE co2_emission_reduction (id INT, sector VARCHAR(50), co2_emission_reduction_tonnes INT); INSERT INTO co2_emission_reduction (id, sector, co2_emission_reduction_tonnes) VALUES (1, 'Industry', 12000), (2, 'Energy', 15000), (3, 'Transportation', 10000), (4, 'Industry', 18000), (5, 'Industry', 13000);","completion":"SELECT MAX(co2_emission_reduction_tonnes) FROM co2_emission_reduction WHERE sector = 'Industry';"}
{"prompt":"Count the number of restaurants with sustainable sourcing practices with given SQL schema CREATE TABLE restaurants (id INT, name VARCHAR(255), sustainable_sourcing BOOLEAN); INSERT INTO restaurants (id, name, sustainable_sourcing) VALUES (1, 'Restaurant A', TRUE), (2, 'Restaurant B', FALSE), (3, 'Restaurant C', TRUE), (4, 'Restaurant D', FALSE);","completion":"SELECT COUNT(*) FROM restaurants WHERE sustainable_sourcing = TRUE;"}
{"prompt":"What is the total revenue for each restaurant in the 'fine_dining' category? with given SQL schema CREATE TABLE restaurants (id INT, name TEXT, category TEXT); INSERT INTO restaurants (id, name, category) VALUES (1, 'Restaurant A', 'fine_dining'), (2, 'Restaurant B', 'casual_dining'); CREATE TABLE revenue (restaurant_id INT, revenue INT); INSERT INTO revenue (restaurant_id, revenue) VALUES (1, 5000), (1, 6000), (2, 3000);","completion":"SELECT r.name, SUM(re.revenue) as total_revenue FROM restaurants r JOIN revenue re ON r.id = re.restaurant_id WHERE r.category = 'fine_dining' GROUP BY r.name;"}
{"prompt":"Which menu items have had their prices changed more than once? with given SQL schema CREATE TABLE menu_items (item_name VARCHAR(255), price DECIMAL(10,2), last_updated TIMESTAMP); INSERT INTO menu_items (item_name, price, last_updated) VALUES ('Pizza', 12.99, '2022-01-01 10:00:00'), ('Burrito', 9.99, '2022-01-01 11:00:00'), ('Pizza', 13.99, '2022-02-01 10:00:00');","completion":"SELECT item_name FROM menu_items GROUP BY item_name HAVING COUNT(DISTINCT last_updated) > 1;"}
{"prompt":"Update 'payment_status' in 'payments' table for payment_id '12345' to 'Completed' with given SQL schema CREATE TABLE payments (payment_id INT, payment_status VARCHAR(50));","completion":"UPDATE payments SET payment_status = 'Completed' WHERE payment_id = 12345;"}
{"prompt":"What is the total quantity of items produced in the 'Ethical Clothing' category in 2021 and 2022? with given SQL schema CREATE TABLE production (product_id INT, category VARCHAR(255), year INT, quantity INT); INSERT INTO production (product_id, category, year, quantity) VALUES (1, 'Ethical Clothing', 2021, 100), (2, 'Eco-Friendly Toys', 2022, 200), (3, 'Ethical Clothing', 2022, 150);","completion":"SELECT category, SUM(quantity) as total_quantity FROM production WHERE category = 'Ethical Clothing' AND year IN (2021, 2022) GROUP BY category;"}
{"prompt":"Find the astronauts who have had medical procedures performed in space and the name of the medical procedure. with given SQL schema CREATE TABLE Astronaut_Medical_Data(id INT, astronaut_name VARCHAR(50), medical_procedure VARCHAR(50), procedure_date DATE, location VARCHAR(50));","completion":"SELECT astronaut_name, medical_procedure FROM Astronaut_Medical_Data WHERE location = 'Space';"}
{"prompt":"What is the average age of athletes for each sport in the 'athletes' table? with given SQL schema CREATE TABLE athletes (athlete_id INT, name VARCHAR(50), age INT, sport VARCHAR(20));","completion":"SELECT sport, AVG(age) FROM athletes GROUP BY sport;"}
{"prompt":"Which regions have the most fans who have attended wellbeing programs? with given SQL schema CREATE TABLE wellbeing (fan_id INT, region VARCHAR(20)); INSERT INTO wellbeing (fan_id, region) VALUES (1, 'North'), (2, 'North'), (3, 'South'), (4, 'East'), (5, 'West');","completion":"SELECT region, COUNT(fan_id) FROM wellbeing JOIN fans ON wellbeing.fan_id = fans.fan_id WHERE fans.game_type IN ('Wellbeing Program 1', 'Wellbeing Program 2') GROUP BY region ORDER BY COUNT(fan_id) DESC;"}
{"prompt":"Find the top 5 autonomous vehicles with the lowest price increase per mile compared to their first model year with given SQL schema CREATE TABLE autonomous_vehicles_3 (vehicle_id INT, vehicle_name VARCHAR(255), price_per_mile DECIMAL(5,2), model_year INT);","completion":"SELECT vehicle_name, price_per_mile, model_year, (price_per_mile - t2.price_per_mile) \/ t2.price_per_mile * 100 as price_increase_percentage FROM autonomous_vehicles_3 t1 JOIN autonomous_vehicles_3 t2 ON t1.vehicle_name = t2.vehicle_name AND t1.model_year = t2.model_year + 1 WHERE t2.model_year = (SELECT MIN(model_year) FROM autonomous_vehicles_3 WHERE vehicle_name = vehicle_name) ORDER BY price_increase_percentage ASC LIMIT 5;"}
{"prompt":"Which vessels have a max speed greater than 25 knots and are registered in the USA? with given SQL schema CREATE TABLE Vessels (vessel_id VARCHAR(10), name VARCHAR(20), type VARCHAR(20), max_speed FLOAT, cargo_capacity INT, country VARCHAR(20)); INSERT INTO Vessels (vessel_id, name, type, max_speed, cargo_capacity, country) VALUES ('1', 'Vessel A', 'Cargo', 20.5, 5000, 'Indonesia'), ('2', 'Vessel B', 'Tanker', 15.2, 0, 'Nigeria'), ('3', 'Vessel C', 'Tanker', 28.1, 0, 'USA'), ('4', 'Vessel D', 'Cargo', 12.6, 6000, 'Indonesia'), ('5', 'Vessel E', 'Cargo', 16.2, 4500, 'Canada'), ('6', 'Vessel F', 'Tanker', 26.8, 3000, 'USA'), ('7', 'Vessel G', 'Tanker', 17.5, 5000, 'USA');","completion":"SELECT vessel_id, name FROM Vessels WHERE max_speed > 25 AND country = 'USA';"}
{"prompt":"What is the average age of visitors who attended family workshops? with given SQL schema CREATE TABLE attendees (id INT, event_id INT, age INT); INSERT INTO attendees (id, event_id, age) VALUES (1, 101, 45), (2, 101, 47), (3, 101, 12), (4, 102, 52), (5, 102, 54), (6, 103, 10), (7, 103, 11), (8, 103, 13); CREATE TABLE events (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO events (id, name, type) VALUES (101, 'Family Workshop A', 'Workshop'), (102, 'Lecture Series 1', 'Lecture'), (103, 'Family Workshop B', 'Workshop');","completion":"SELECT AVG(age) FROM attendees WHERE event_id IN (SELECT id FROM events WHERE type = 'Workshop');"}
{"prompt":"Add recycling rate data to the 'RecyclingRates' table for facility ID 1 in the years 2018, 2019, 2020 with rates 0.75, 0.78, 0.81 with given SQL schema CREATE TABLE WasteTypes (waste_type_id INT PRIMARY KEY, name VARCHAR, description VARCHAR); CREATE TABLE Facilities (facility_id INT PRIMARY KEY, name VARCHAR, location VARCHAR, capacity INT, waste_type_id INT, FOREIGN KEY (waste_type_id) REFERENCES WasteTypes(waste_type_id)); CREATE TABLE RecyclingRates (rate_id INT PRIMARY KEY, facility_id INT, year INT, rate DECIMAL, FOREIGN KEY (facility_id) REFERENCES Facilities(facility_id));","completion":"INSERT INTO RecyclingRates (rate_id, facility_id, year, rate) VALUES (1, 1, 2018, 0.75), (2, 1, 2019, 0.78), (3, 1, 2020, 0.81);"}
{"prompt":"What is the maximum recycling rate for any material? with given SQL schema CREATE TABLE Recycling_Rates_All (material VARCHAR(20), region VARCHAR(20), recycling_rate DECIMAL(4,2)); INSERT INTO Recycling_Rates_All (material, region, recycling_rate) VALUES ('Glass', 'East', 0.60), ('Paper', 'East', 0.75), ('Plastic', 'West', 0.55), ('Metal', 'North', 0.80), ('Glass', 'West', 0.70), ('Paper', 'West', 0.65), ('Metal', 'West', 0.85);","completion":"SELECT MAX(recycling_rate) FROM Recycling_Rates_All;"}
{"prompt":"Update the water_usage of the customer with the highest water_usage in the month of May 2022 to 1000 in the residential table. with given SQL schema CREATE TABLE residential (customer_id INT, water_usage FLOAT, usage_date DATE); INSERT INTO residential (customer_id, water_usage, usage_date) VALUES (1, 150.5, '2022-05-01'), (2, 1200.7, '2022-05-02'), (3, 800.4, '2022-05-03');","completion":"UPDATE residential SET water_usage = 1000 WHERE customer_id = (SELECT customer_id FROM residential WHERE usage_date BETWEEN '2022-05-01' AND '2022-05-31' ORDER BY water_usage DESC LIMIT 1);"}
{"prompt":"What is the average explainability score for models trained on the 'south_american_education' dataset? with given SQL schema CREATE TABLE south_american_education (model_name TEXT, explainability_score FLOAT); INSERT INTO south_american_education (model_name, explainability_score) VALUES ('model1', 0.92), ('model2', 0.89), ('model3', 0.95);","completion":"SELECT AVG(explainability_score) FROM south_american_education;"}
{"prompt":"What is the distribution of AI models across different countries? with given SQL schema CREATE TABLE ai_models (model_name TEXT, model_country TEXT); INSERT INTO ai_models (model_name, model_country) VALUES ('ModelA', 'USA'), ('ModelB', 'Germany'), ('ModelC', 'China'), ('ModelD', 'Brazil');","completion":"SELECT model_country, COUNT(*) FROM ai_models GROUP BY model_country;"}
{"prompt":"What is the average age of all astronauts who have flown missions to the International Space Station? with given SQL schema CREATE TABLE Astronauts (AstronautID INT, Name VARCHAR(100), Age INT, SpaceStation VARCHAR(50));","completion":"SELECT AVG(Age) FROM Astronauts WHERE SpaceStation = 'International Space Station';"}
{"prompt":"How many habitats are in the 'animal_habitats' table? with given SQL schema CREATE TABLE animal_habitats (id INT PRIMARY KEY, habitat_name VARCHAR, num_animals INT);","completion":"SELECT COUNT(*) FROM animal_habitats;"}
{"prompt":"What is the total number of community education programs held in Texas and California? with given SQL schema CREATE TABLE community_ed (program_id INT, location VARCHAR(50)); INSERT INTO community_ed (program_id, location) VALUES (1, 'California'), (2, 'Texas'), (3, 'California'), (4, 'Florida');","completion":"SELECT COUNT(*) FROM community_ed WHERE location IN ('Texas', 'California');"}
{"prompt":"How many farms in Region3 have a harvest yield above the average for that region? with given SQL schema CREATE TABLE FarmsRegion (farm_id INT, region VARCHAR(10), harvest_yield FLOAT); INSERT INTO FarmsRegion (farm_id, region, harvest_yield) VALUES (1, 'Region3', 900), (2, 'Region3', 850), (3, 'Region3', 950), (4, 'Region3', 700);","completion":"SELECT farm_id FROM FarmsRegion WHERE region = 'Region3' GROUP BY farm_id HAVING AVG(harvest_yield) < harvest_yield;"}
{"prompt":"What is the average biomass of Cuttlefish and Squid in Mediterranean marine farms? with given SQL schema CREATE TABLE mediterranean_marine_farms (farm_id INT, species VARCHAR(20), biomass FLOAT); INSERT INTO mediterranean_marine_farms (farm_id, species, biomass) VALUES (1, 'Cuttlefish', 300.2), (2, 'Squid', 400.1), (3, 'Cuttlefish', 350.3);","completion":"SELECT AVG(biomass) average_biomass FROM mediterranean_marine_farms WHERE species IN ('Cuttlefish', 'Squid');"}
{"prompt":"What is the total number of visitors from African countries who attended events in 2021? with given SQL schema CREATE TABLE events (event_id INT, event_name VARCHAR(50), event_year INT, location VARCHAR(50)); INSERT INTO events (event_id, event_name, event_year, location) VALUES (1, 'Music Festival', 2021, 'Nigeria'), (2, 'Art Exhibition', 2022, 'Egypt'), (3, 'Theater Performance', 2021, 'South Africa'); CREATE TABLE countries (country_id INT, country_name VARCHAR(50), continent VARCHAR(50)); INSERT INTO countries (country_id, country_name, continent) VALUES (1, 'Nigeria', 'Africa'), (2, 'Egypt', 'Africa'), (3, 'South Africa', 'Africa'), (4, 'Brazil', 'South America'); CREATE TABLE attendees (attendee_id INT, event_id INT, country_id INT); INSERT INTO attendees (attendee_id, event_id, country_id) VALUES (1, 1, 1), (2, 1, 2), (3, 3, 3);","completion":"SELECT COUNT(*) FROM attendees JOIN events ON attendees.event_id = events.event_id JOIN countries ON attendees.country_id = countries.country_id WHERE events.event_year = 2021 AND countries.continent = 'Africa';"}
{"prompt":"Find TV shows with a higher IMDb rating than the average movie rating. with given SQL schema CREATE TABLE movie (id INT, title VARCHAR(50), rating DECIMAL(3,2)); CREATE TABLE tv_show (id INT, title VARCHAR(50), rating DECIMAL(3,2)); INSERT INTO movie (id, title, rating) VALUES (1, 'Movie1', 8.5), (2, 'Movie2', 6.7), (3, 'Movie3', 9.1); INSERT INTO tv_show (id, title, rating) VALUES (1, 'TVShow1', 8.8), (2, 'TVShow2', 7.2), (3, 'TVShow3', 9.0);","completion":"SELECT title FROM tv_show WHERE rating > (SELECT AVG(rating) FROM movie);"}
{"prompt":"What is the average cost of sustainable building materials used in green projects in the city of Seattle? with given SQL schema CREATE TABLE Green_Projects (Project_ID INT, Building_Material VARCHAR(50), Cost FLOAT, City VARCHAR(50)); INSERT INTO Green_Projects (Project_ID, Building_Material, Cost, City) VALUES (1, 'Recycled Steel', 800, 'Seattle'), (2, 'Insulated Concrete Forms', 1200, 'Seattle');","completion":"SELECT AVG(Cost) FROM Green_Projects WHERE City = 'Seattle' AND Building_Material IN ('Recycled Steel', 'Insulated Concrete Forms');"}
{"prompt":"What is the total cost of permits for projects with permit numbers greater than 700? with given SQL schema CREATE TABLE permit_data (id INT, project VARCHAR(50), permit_number INT, start_date DATE, permit_cost DECIMAL(10,2)); INSERT INTO permit_data (id, project, permit_number, start_date, permit_cost) VALUES (1, 'Office Building', 450, '2019-12-20', 850.00), (2, 'Residential Apartments', 751, '2021-03-01', 1200.50), (3, 'School', 333, '2020-06-15', 500.25), (4, 'Mall', 780, '2020-12-01', 1500.75);","completion":"SELECT SUM(permit_cost) FROM permit_data WHERE permit_number > 700;"}
{"prompt":"List all cases where the client is from 'California' and the attorney is 'Smith' with given SQL schema CREATE TABLE cases (case_id INT, client_state VARCHAR(2), attorney_name VARCHAR(20));","completion":"SELECT * FROM cases WHERE client_state = 'CA' AND attorney_name = 'Smith';"}
{"prompt":"What is the average age of clients who lost cases in the 'personal injury' category? with given SQL schema CREATE TABLE Cases (CaseID int, ClientID int, Category varchar(50)); INSERT INTO Cases (CaseID, ClientID, Category) VALUES (701, 7, 'Personal Injury'); CREATE TABLE Clients (ClientID int, Age int, Gender varchar(10)); INSERT INTO Clients (ClientID, Age, Gender) VALUES (7, 45, 'Male'); CREATE TABLE CaseOutcomes (CaseID int, Outcome varchar(50)); INSERT INTO CaseOutcomes (CaseID, Outcome) VALUES (701, 'Lost');","completion":"SELECT AVG(C.Age) as AvgAge FROM Clients C INNER JOIN Cases CA ON C.ClientID = CA.ClientID INNER JOIN CaseOutcomes CO ON CA.CaseID = CO.CaseID WHERE CA.Category = 'Personal Injury' AND CO.Outcome = 'Lost';"}
{"prompt":"Calculate the average environmental impact score of production sites in Australia, partitioned by state in ascending order. with given SQL schema CREATE TABLE australian_sites (site_id INT, site_name TEXT, state TEXT, environmental_score FLOAT); INSERT INTO australian_sites (site_id, site_name, state, environmental_score) VALUES (1, 'Site Q', 'New South Wales', 87.3), (2, 'Site R', 'Victoria', 84.5), (3, 'Site S', 'New South Wales', 89.1), (4, 'Site T', 'Queensland', 86.2);","completion":"SELECT state, AVG(environmental_score) as avg_environmental_score, RANK() OVER (PARTITION BY state ORDER BY AVG(environmental_score)) as rank FROM australian_sites GROUP BY state ORDER BY rank;"}
{"prompt":"How many new drugs were approved by the EMA in 2020? with given SQL schema CREATE TABLE drug_approval(drug_id INT, agency VARCHAR(255), approval_date DATE); INSERT INTO drug_approval(drug_id, agency, approval_date) VALUES (1, 'FDA', '2020-01-01'), (2, 'EMA', '2019-12-15'), (3, 'FDA', '2021-02-01');","completion":"SELECT COUNT(*) as new_drugs_approved FROM drug_approval WHERE agency = 'EMA' AND YEAR(approval_date) = 2020;"}
{"prompt":"What is the market access strategy for the drug 'Nexo' in South America? with given SQL schema CREATE TABLE market_access (drug_name TEXT, strategy TEXT, region TEXT); INSERT INTO market_access (drug_name, strategy, region) VALUES ('Vaxo', 'Direct to consumer', 'United States'), ('Nexo', 'Limited distribution', 'Brazil');","completion":"SELECT strategy FROM market_access WHERE drug_name = 'Nexo' AND region = 'South America';"}
{"prompt":"What is the total revenue for 'HealthCo' from drug sales in 2018? with given SQL schema CREATE TABLE HealthCo_DrugSales(company VARCHAR(20), year INT, revenue DECIMAL(10,2));INSERT INTO HealthCo_DrugSales VALUES('HealthCo', 2018, 15000000.00);","completion":"SELECT SUM(revenue) FROM HealthCo_DrugSales WHERE company = 'HealthCo' AND year = 2018;"}
{"prompt":"Which countries have the highest R&D expenditures in the pharmaceuticals industry? with given SQL schema CREATE TABLE country (country_code CHAR(2), country_name VARCHAR(100)); INSERT INTO country (country_code, country_name) VALUES ('US', 'United States'), ('DE', 'Germany'), ('JP', 'Japan'); CREATE TABLE rd_expenditure (country_code CHAR(2), amount FLOAT); INSERT INTO rd_expenditure (country_code, amount) VALUES ('US', 81231.56), ('DE', 62311.23), ('JP', 38002.98);","completion":"SELECT c.country_name, rd.amount FROM country c INNER JOIN rd_expenditure rd ON c.country_code = rd.country_code ORDER BY rd.amount DESC;"}
{"prompt":"Which drugs were approved by the FDA in 2020? with given SQL schema CREATE TABLE fda_approval (drug varchar(255), year int); INSERT INTO fda_approval (drug, year) VALUES ('DrugA', 2020), ('DrugC', 2020);","completion":"SELECT drug FROM fda_approval WHERE year = 2020;"}
{"prompt":"What are the policies related to mobility and communication accommodations that were effective on or before January 1, 2022? with given SQL schema CREATE TABLE policies (id INT, policy_type VARCHAR(255), policy_text TEXT, policy_effective_date DATE); INSERT INTO policies (id, policy_type, policy_text, policy_effective_date) VALUES (5, 'Mobility accommodations', 'Provides mobility accommodations for students with disabilities', '2021-07-01'), (6, 'Communication accommodations', 'Provides communication accommodations for students with disabilities', '2022-01-01');","completion":"SELECT p.policy_type, p.policy_text, YEAR(p.policy_effective_date) as year FROM policies p WHERE p.policy_type IN ('Mobility accommodations', 'Communication accommodations') AND p.policy_effective_date <= '2022-01-01' ORDER BY year DESC;"}
{"prompt":"How many marine species are affected by ocean acidification? with given SQL schema CREATE TABLE species_impact (id INTEGER, name VARCHAR(255), species VARCHAR(255), affected_by_acidification BOOLEAN);","completion":"SELECT COUNT(*) FROM species_impact WHERE affected_by_acidification = TRUE;"}
{"prompt":"List all the wildlife species that inhabit coniferous forests. with given SQL schema CREATE TABLE wildlife_habitat (species VARCHAR(255), forest_type VARCHAR(255));","completion":"SELECT species FROM wildlife_habitat WHERE forest_type = 'coniferous';"}
{"prompt":"Which countries source more than 5 ingredients? with given SQL schema CREATE TABLE ingredients (id INT, product_id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO ingredients (id, product_id, name, country) VALUES (1, 1, 'Aloe Vera', 'Mexico'), (2, 1, 'Rosehip Oil', 'Chile'), (3, 2, 'Jojoba Oil', 'Brazil'), (4, 2, 'Green Tea Extract', 'Japan'), (5, 3, 'Cucumber Extract', 'France'), (6, 4, 'Shea Butter', 'Ghana'), (7, 4, 'Argan Oil', 'Morocco'), (8, 4, 'Lavender Essence', 'France'), (9, 5, 'Coconut Oil', 'Philippines'), (10, 5, 'Tea Tree Oil', 'Australia');","completion":"SELECT country, COUNT(*) FROM ingredients GROUP BY country HAVING COUNT(*) > 5;"}
{"prompt":"Find the cosmetics with the lowest sales in each category, for the past 9 months, in Asia. with given SQL schema CREATE TABLE sales_by_month (product_id INT, sale_date DATE, sales INT, product_category VARCHAR(50), region VARCHAR(50)); INSERT INTO sales_by_month (product_id, sale_date, sales, product_category, region) VALUES (1, '2021-04-01', 500, 'Foundation', 'Asia'), (2, '2021-04-01', 800, 'Lipstick', 'Asia');","completion":"SELECT product_category, product_id, MIN(sales) AS min_sales FROM sales_by_month WHERE sale_date >= DATEADD(month, -9, CURRENT_DATE) AND region = 'Asia' GROUP BY product_category, product_id;"}
{"prompt":"What is the average number of artworks donated by artists per year, for artists who have donated artworks for at least 5 years? with given SQL schema CREATE TABLE Artists (ArtistID int, ArtistName varchar(50), FirstDonationYear int, NumberOfArtworks int);INSERT INTO Artists (ArtistID, ArtistName, FirstDonationYear, NumberOfArtworks) VALUES (1, 'Pablo Picasso', 1960, 500), (2, 'Vincent Van Gogh', 1970, 450), (3, 'Claude Monet', 1980, 350);","completion":"SELECT AVG(NumberOfArtworks) FROM Artists WHERE FirstDonationYear <= YEAR(CURRENT_DATE) - 5 AND NumberOfArtworks > 0;"}
{"prompt":"What is the veteran employment rate in Texas as of December 2021? with given SQL schema CREATE TABLE veteran_employment (state varchar(255), employment_date date, employment_rate decimal(5,2));","completion":"SELECT employment_rate FROM veteran_employment WHERE state = 'Texas' AND MONTH(employment_date) = 12 AND YEAR(employment_date) = 2021;"}
{"prompt":"How many peacekeeping operations were conducted by each regional command in the 'peacekeeping_operations' and 'regional_commands' tables? with given SQL schema CREATE TABLE regional_commands (command_id INT, command_name VARCHAR(50)); CREATE TABLE peacekeeping_operations (operation_id INT, operation_name VARCHAR(50), command_id INT); INSERT INTO regional_commands VALUES (1, 'AFRICOM'), (2, 'CENTCOM'), (3, 'EUCOM'); INSERT INTO peacekeeping_operations VALUES (1, 'MINUSTAH', 1), (2, 'UNMIL', 1), (3, 'MONUSCO', 2), (4, 'UNMISS', 3), (5, 'MINUSMA', 2);","completion":"SELECT r.command_name, COUNT(p.operation_id) as operations_conducted FROM regional_commands r JOIN peacekeeping_operations p ON r.command_id = p.command_id GROUP BY r.command_name;"}
{"prompt":"Find the top 5 salespeople by total sales with given SQL schema CREATE TABLE salesperson_sales (salesperson_id INT, sales_region VARCHAR(50), amount DECIMAL(10, 2)); INSERT INTO salesperson_sales (salesperson_id, sales_region, amount) VALUES (1, 'Americas', 500.00), (1, 'Asia', 700.00), (2, 'Asia', 800.00), (3, 'Europe', 900.00), (3, 'Asia', 1000.00);","completion":"SELECT salesperson_id, SUM(amount) as total_sales FROM salesperson_sales GROUP BY salesperson_id ORDER BY total_sales DESC LIMIT 5;"}
{"prompt":"How many transactions were made in each region for the 'Credit Cards' product type? with given SQL schema CREATE TABLE regions (id INT, region_name VARCHAR(50)); INSERT INTO regions (id, region_name) VALUES (1, 'Northeast'), (2, 'Southeast'); CREATE TABLE transactions (region_id INT, product_type_id INT, transaction_count INT); INSERT INTO transactions (region_id, product_type_id, transaction_count) VALUES (1, 1, 20), (1, 1, 30), (2, 1, 10), (2, 1, 40);","completion":"SELECT r.region_name, p.product_type, SUM(t.transaction_count) as total_transactions FROM regions r JOIN transactions t ON r.id = t.region_id JOIN product_types p ON t.product_type_id = p.id WHERE p.product_type = 'Credit Cards' GROUP BY r.region_name, p.product_type;"}
{"prompt":"What is the average donation amount for the 'Education' program? with given SQL schema CREATE TABLE Donations (donation_id INT, amount DECIMAL(10,2), program VARCHAR(255));","completion":"SELECT AVG(amount) FROM Donations WHERE program = 'Education';"}
{"prompt":"Which programs had the highest volunteer participation rate in the last quarter? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, Budget DECIMAL(10,2), NumVolunteers INT); CREATE TABLE VolunteerEvents (EventID INT, ProgramID INT, EventDate DATE, NumVolunteers INT);","completion":"SELECT p.ProgramName, COUNT(v.EventID) \/ (SELECT COUNT(*) FROM VolunteerEvents WHERE EventDate >= DATEADD(quarter, -1, GETDATE())) * 100.0 AS VolunteerParticipationRate FROM Programs p INNER JOIN VolunteerEvents v ON p.ProgramID = v.ProgramID WHERE v.EventDate >= DATEADD(quarter, -1, GETDATE()) GROUP BY p.ProgramName ORDER BY VolunteerParticipationRate DESC;"}
{"prompt":"How many professional development courses did teachers complete in each institution? with given SQL schema CREATE TABLE teacher_professional_development (teacher_id INT, institution_id INT, course_count INT);","completion":"SELECT institution_id, SUM(course_count) as total_courses FROM teacher_professional_development GROUP BY institution_id;"}
{"prompt":"What is the average number of professional development courses taken by teachers in each school district, grouped by district and ordered by the average number in descending order? with given SQL schema CREATE TABLE school_districts (district_id INT, district_name TEXT); CREATE TABLE teachers (teacher_id INT, district_id INT, num_courses INT);","completion":"SELECT sd.district_name, AVG(t.num_courses) as avg_num_courses FROM teachers t JOIN school_districts sd ON t.district_id = sd.district_id GROUP BY sd.district_name ORDER BY avg_num_courses DESC;"}
{"prompt":"What is the average open pedagogy participation score for students in each grade level? with given SQL schema CREATE TABLE student_open_pedagogy (student_id INT, grade_level INT, participation_score INT); INSERT INTO student_open_pedagogy (student_id, grade_level, participation_score) VALUES (1, 6, 85), (2, 6, 90), (3, 7, 75), (4, 7, 80), (5, 8, 95);","completion":"SELECT grade_level, AVG(participation_score) as avg_participation_score FROM student_open_pedagogy GROUP BY grade_level;"}
{"prompt":"List the ethnicity and number of employees in management positions from the \"diversity\" and \"positions\" tables with given SQL schema CREATE TABLE diversity (id INT, employee_id INT, ethnicity TEXT); CREATE TABLE positions (id INT, employee_id INT, position_title TEXT, is_management BOOLEAN);","completion":"SELECT diversity.ethnicity, positions.position_title, COUNT(*) as count  FROM diversity JOIN positions ON diversity.employee_id = positions.employee_id WHERE positions.is_management = TRUE GROUP BY diversity.ethnicity, positions.position_title;"}
{"prompt":"What is the number of new hires by quarter? with given SQL schema CREATE TABLE Employees (EmployeeID int, FirstName varchar(50), LastName varchar(50), JobRole varchar(50), Ethnicity varchar(50), Salary decimal(10,2), HireDate date); INSERT INTO Employees (EmployeeID, FirstName, LastName, JobRole, Ethnicity, Salary, HireDate) VALUES (1, 'Sophia', 'Gonzales', 'Software Engineer', 'Hispanic', 85000, '2022-01-01'); INSERT INTO Employees (EmployeeID, FirstName, LastName, JobRole, Ethnicity, Salary, HireDate) VALUES (2, 'Liam', 'Johnson', 'Data Analyst', 'Caucasian', 70000, '2022-04-01');","completion":"SELECT DATE_PART('quarter', HireDate) as Quarter, COUNT(*) as NewHires FROM Employees GROUP BY Quarter;"}
{"prompt":"What is the total number of job applications received per month in 2021? with given SQL schema CREATE TABLE job_applications (id INT, application_date DATE, application_status VARCHAR(255)); INSERT INTO job_applications (id, application_date, application_status) VALUES (1, '2021-01-15', 'Submitted'), (2, '2021-02-03', 'Submitted'), (3, '2021-12-30', 'Submitted'), (4, '2022-01-01', 'Submitted');","completion":"SELECT DATE_FORMAT(application_date, '%Y-%m') as month, COUNT(id) as applications_received FROM job_applications WHERE YEAR(application_date) = 2021 GROUP BY month;"}
{"prompt":"What is the number of renewable energy patents issued per year for the top 3 countries? with given SQL schema CREATE TABLE Patent (Year INT, Country VARCHAR(50), Type VARCHAR(50)); INSERT INTO Patent (Year, Country, Type) VALUES (2018, 'Country1', 'Renewable'), (2018, 'Country2', 'Renewable'), (2018, 'Country3', 'Renewable'), (2019, 'Country1', 'Renewable'), (2019, 'Country2', 'Renewable'), (2019, 'Country3', 'Renewable');","completion":"SELECT Year, Country, COUNT(*) AS RenewableEnergyPatents FROM Patent WHERE Type = 'Renewable' GROUP BY Year, Country ORDER BY Year, COUNT(*) DESC FETCH FIRST 3 ROWS ONLY;"}
{"prompt":"Calculate the total gas consumption for Nigeria in 2019 with given SQL schema CREATE TABLE gas_consumption (country VARCHAR(50), consumption_year INT, gas_consumption FLOAT); INSERT INTO gas_consumption (country, consumption_year, gas_consumption) VALUES ('Nigeria', 2019, 12000), ('Nigeria', 2018, 10000), ('Ghana', 2019, 8000), ('Ghana', 2018, 6000), ('Ivory Coast', 2019, 10000), ('Ivory Coast', 2018, 8000);","completion":"SELECT gas_consumption FROM gas_consumption WHERE country = 'Nigeria' AND consumption_year = 2019;"}
{"prompt":"What is the total production of oil from the North Sea field in 2020? with given SQL schema CREATE TABLE north_sea_fields (field_id INT, field_name VARCHAR(50), oil_production FLOAT); INSERT INTO north_sea_fields (field_id, field_name, oil_production) VALUES (1, 'North Sea Field A', 1500000), (2, 'North Sea Field B', 1800000);","completion":"SELECT SUM(oil_production) FROM north_sea_fields WHERE field_name = 'North Sea Field A' AND YEAR(datetime) = 2020;"}
{"prompt":"How many healthcare facilities are there in the 'africa' region? with given SQL schema CREATE TABLE region (region_id INT, name VARCHAR(50)); INSERT INTO region (region_id, name) VALUES (1, 'asia'), (2, 'africa'); CREATE TABLE sector (sector_id INT, name VARCHAR(50)); INSERT INTO sector (sector_id, name) VALUES (1, 'education'), (2, 'health'); CREATE TABLE healthcare (healthcare_id INT, name VARCHAR(50), region_id INT); INSERT INTO healthcare (healthcare_id, name, region_id) VALUES (1, 'Facility A', 2), (2, 'Facility B', 2), (3, 'Facility C', 1);","completion":"SELECT COUNT(*) FROM healthcare WHERE region_id = 2;"}
{"prompt":"List all the unique sectors in which projects have been funded in Asia. with given SQL schema CREATE TABLE projects (id INT, sector TEXT, location TEXT, funding_amount DECIMAL); INSERT INTO projects (id, sector, location, funding_amount) VALUES (1, 'Health', 'Asia', 10000.00), (2, 'Education', 'Africa', 15000.00);","completion":"SELECT DISTINCT sector FROM projects WHERE location = 'Asia';"}
{"prompt":"Find the number of available parking spots at each station on the Orange Line. with given SQL schema CREATE TABLE Parking (station VARCHAR(20), line VARCHAR(20), spots INTEGER); INSERT INTO Parking (station, line, spots) VALUES ('North Station', 'Orange Line', 50), ('Back Bay', 'Orange Line', 30);","completion":"SELECT station, spots FROM Parking WHERE line = 'Orange Line';"}
{"prompt":"What are the unique vehicle types and their respective total fares collected? with given SQL schema CREATE TABLE Fares (id INT, vehicle_type VARCHAR(10), fare DECIMAL(5,2)); INSERT INTO Fares (id, vehicle_type, fare) VALUES (1, 'Bus', 2.50), (2, 'Tram', 3.00), (3, 'Train', 5.00);","completion":"SELECT vehicle_type, SUM(fare) FROM Fares GROUP BY vehicle_type;"}
{"prompt":"What is the earliest and latest time that a vehicle has operated on each route? with given SQL schema CREATE TABLE routes (route_id INT, route_name TEXT);CREATE TABLE vehicles (vehicle_id INT, route_id INT, operation_time TIME); INSERT INTO routes VALUES (123, 'Route 123'); INSERT INTO routes VALUES (456, 'Route 456'); INSERT INTO vehicles VALUES (1, 123, '06:00:00'); INSERT INTO vehicles VALUES (2, 123, '06:30:00'); INSERT INTO vehicles VALUES (3, 456, '07:00:00'); INSERT INTO vehicles VALUES (4, 456, '07:30:00');","completion":"SELECT routes.route_name, MIN(vehicles.operation_time) as earliest_time, MAX(vehicles.operation_time) as latest_time FROM routes INNER JOIN vehicles ON routes.route_id = vehicles.route_id GROUP BY routes.route_name;"}
{"prompt":"How many units of each product were sold in the last quarter, by salesperson? with given SQL schema CREATE TABLE sales (sale_date DATE, salesperson VARCHAR(255), product VARCHAR(255), quantity INT);","completion":"SELECT salesperson, product, SUM(quantity) AS qty_sold, DATE_TRUNC('quarter', sale_date) AS sale_quarter FROM sales WHERE sale_date >= DATE_TRUNC('quarter', CURRENT_DATE - INTERVAL '1 year') GROUP BY salesperson, product, sale_quarter;"}
{"prompt":"Which factories in Colombia have a production cost between 100 and 200? with given SQL schema CREATE TABLE producers (id INT, name VARCHAR(255), location VARCHAR(255), cost DECIMAL(10,2)); INSERT INTO producers (id, name, location, cost) VALUES (1, 'Fabric Inc', 'Colombia', 150.00), (2, 'Stitch Time', 'USA', 120.00), (3, 'Sew Good', 'Colombia', 170.00);","completion":"SELECT name, cost FROM producers WHERE location = 'Colombia' AND cost BETWEEN 100 AND 200;"}
{"prompt":"How many users have more than 1000 followers and have posted at least once in the past week? with given SQL schema CREATE TABLE users (id INT, name VARCHAR(50), country VARCHAR(2), followers INT, timestamp DATETIME); INSERT INTO users (id, name, country, followers, timestamp) VALUES (1, 'Alice', 'US', 1200, '2022-02-01 10:00:00'), (2, 'Bob', 'JP', 800, '2022-01-01 11:00:00'), (3, 'Charlie', 'CA', 1600, '2022-02-03 12:00:00');","completion":"SELECT COUNT(*) as user_count FROM users WHERE users.followers > 1000 AND users.timestamp >= DATE_SUB(NOW(), INTERVAL 1 WEEK);"}
{"prompt":"How many unique donors made donations in the healthcare industry in Q3 2022? with given SQL schema CREATE TABLE donations (id INT, donor_id INT, amount FLOAT, donation_date DATE); INSERT INTO donations (id, donor_id, amount, donation_date) VALUES (1, 7, 100, '2022-07-01'); INSERT INTO donations (id, donor_id, amount, donation_date) VALUES (2, 8, 200, '2022-09-15'); INSERT INTO donors (id, name, industry, first_donation_date DATE) VALUES (7, 'Charlie Davis', 'Healthcare', '2022-07-01'); INSERT INTO donors (id, name, industry, first_donation_date DATE) VALUES (8, 'Dana Wilson', 'Healthcare', '2022-09-15');","completion":"SELECT COUNT(DISTINCT donor_id) FROM donations d JOIN donors don ON d.donor_id = don.id WHERE industry = 'Healthcare' AND donation_date BETWEEN '2022-07-01' AND '2022-09-30';"}
{"prompt":"How many biosensors were developed in 2021? with given SQL schema CREATE TABLE biosensor_development (name TEXT, year INT); INSERT INTO biosensor_development (name, year) VALUES ('BioSensor1', 2020); INSERT INTO biosensor_development (name, year) VALUES ('BioSensor2', 2021);","completion":"SELECT COUNT(*) FROM biosensor_development WHERE year = 2021;"}
{"prompt":"What is the average salary of male and female employees in the 'employees' table, grouped by job title? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(50), gender VARCHAR(10), salary FLOAT, job_title VARCHAR(50)); INSERT INTO employees (id, name, gender, salary, job_title) VALUES (1, 'John Doe', 'Male', 60000, 'Manager'), (2, 'Jane Smith', 'Female', 65000, 'Manager'), (3, 'Mike Johnson', 'Male', 50000, 'Developer'), (4, 'Emily Davis', 'Female', 52000, 'Developer');","completion":"SELECT job_title, AVG(salary) as avg_salary FROM employees GROUP BY job_title, gender;"}
{"prompt":"How many users engaged with virtual tours in 'Europe' during each month of 2022? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, user_id INT, country VARCHAR(255), tour_date DATE); INSERT INTO virtual_tours (tour_id, user_id, country, tour_date) VALUES (1, 1001, 'France', '2022-02-03'), (2, 1002, 'Germany', '2022-04-10'), (3, 1003, 'Italy', '2022-01-15');","completion":"SELECT country, EXTRACT(MONTH FROM tour_date) AS month, COUNT(DISTINCT user_id) FROM virtual_tours WHERE country = 'Europe' AND tour_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY country, month;"}
{"prompt":"What is the minimum and maximum age of patients by condition? with given SQL schema CREATE TABLE PatientAges (PatientID int, ConditionID int, Age int); INSERT INTO PatientAges (PatientID, ConditionID, Age) VALUES (1, 1, 30), (2, 2, 35);","completion":"SELECT Conditions.Condition, MIN(PatientAges.Age), MAX(PatientAges.Age) FROM PatientAges JOIN Conditions ON PatientAges.ConditionID = Conditions.ConditionID GROUP BY Conditions.Condition;"}
{"prompt":"How many tunnels are there in New York with a length greater than 5 miles? with given SQL schema CREATE TABLE Tunnels (id INT, name TEXT, location TEXT, state TEXT, length FLOAT); INSERT INTO Tunnels (id, name, location, state, length) VALUES (1, 'Tunnel A', 'Location A', 'New York', 7.5), (2, 'Tunnel B', 'Location B', 'New Jersey', 4.5);","completion":"SELECT COUNT(*) FROM Tunnels WHERE state = 'New York' AND length > 5;"}
{"prompt":"List the dams in California with given SQL schema CREATE TABLE Dams (id INT, name TEXT, height INT, reservoir TEXT, state TEXT); INSERT INTO Dams (id, name, height, reservoir, state) VALUES (1, 'Hoover Dam', 221, 'Lake Mead', 'Nevada'); INSERT INTO Dams (id, name, height, reservoir, state) VALUES (2, 'Oroville Dam', 230, 'Lake Oroville', 'California');","completion":"SELECT name FROM Dams WHERE state = 'California';"}
{"prompt":"Delete all records in the sustainable_tourism_campaigns table where the campaign_name is 'Green Tourism Initiative' with given SQL schema CREATE TABLE sustainable_tourism_campaigns (campaign_id INT PRIMARY KEY, campaign_name VARCHAR(255), start_date DATE, end_date DATE);","completion":"DELETE FROM sustainable_tourism_campaigns WHERE campaign_name = 'Green Tourism Initiative';"}
{"prompt":"How many legal tech events have taken place in New York and California? with given SQL schema CREATE TABLE legal_tech_events (event_id INT, location VARCHAR(255)); INSERT INTO legal_tech_events (event_id, location) VALUES (1, 'New York'), (2, 'California'), (3, 'Texas');","completion":"SELECT COUNT(*) FROM legal_tech_events WHERE location IN ('New York', 'California');"}
{"prompt":"What is the average media literacy score for users in the 'Young Adult' age group who have completed at least one disinformation detection course? with given SQL schema CREATE TABLE users (id INT, age VARCHAR(20), media_literacy_score INT, courses_completed INT);","completion":"SELECT AVG(media_literacy_score) FROM users WHERE age = 'Young Adult' AND courses_completed > 0;"}
{"prompt":"Increase the price of all vegetarian menu items by 10% with given SQL schema CREATE TABLE menu_items (item_id INT, item_name VARCHAR(50), is_vegetarian BOOLEAN, price DECIMAL(5,2)); INSERT INTO menu_items (item_id, item_name, is_vegetarian, price) VALUES (1, 'Steak', false, 25.99), (2, 'Salad', true, 12.49), (3, 'Pizza', true, 16.99), (4, 'Pasta', false, 18.99), (5, 'Soda', false, 2.99);","completion":"UPDATE menu_items SET price = price * 1.10 WHERE is_vegetarian = true;"}
{"prompt":"What is the total CO2 emission of each menu item, considering its ingredients and their origin? with given SQL schema CREATE TABLE menu_items (menu_id INT, name VARCHAR(50), co2_emission FLOAT); CREATE TABLE ingredients (ingredient_id INT, name VARCHAR(50), origin VARCHAR(50), co2_emission_per_kg FLOAT); CREATE TABLE recipe (menu_id INT, ingredient_id INT, quantity FLOAT);","completion":"SELECT m.name, SUM(i.co2_emission_per_kg * r.quantity) as total_co2_emission FROM menu_items m JOIN recipe r ON m.menu_id = r.menu_id JOIN ingredients i ON r.ingredient_id = i.ingredient_id GROUP BY m.menu_id;"}
{"prompt":"Which defense projects had a delay of more than 30 days in their timelines in the last 6 months? with given SQL schema CREATE TABLE Defense_Projects (project_id INT, project_start_date DATE, project_end_date DATE, project_status VARCHAR(50));","completion":"SELECT project_id, project_start_date, project_end_date, DATEDIFF(day, project_start_date, project_end_date) as project_duration FROM Defense_Projects WHERE project_end_date BETWEEN DATEADD(month, -6, GETDATE()) AND GETDATE() AND DATEDIFF(day, project_start_date, project_end_date) > 30;"}
{"prompt":"Determine the number of mines in Colombia with environmental impact assessments that exceed 80 points. with given SQL schema CREATE TABLE mines (id INT, name TEXT, location TEXT, eia_score INT); INSERT INTO mines (id, name, location, eia_score) VALUES (1, 'Emerald Mine', 'Colombia', 85); INSERT INTO mines (id, name, location, eia_score) VALUES (2, 'Ruby Mine', 'Colombia', 70);","completion":"SELECT COUNT(*) FROM mines WHERE location = 'Colombia' AND eia_score > 80;"}
{"prompt":"List the labor productivity metrics for each mine, including the total amount of minerals extracted and the number of employees, and calculate the productivity metric for each mine. with given SQL schema CREATE TABLE labor_productivity (mine_id INT, amount_extracted INT, num_employees INT); INSERT INTO labor_productivity (mine_id, amount_extracted, num_employees) VALUES (1, 1000, 50), (1, 1200, 60), (2, 800, 40), (2, 900, 45); CREATE TABLE mines (mine_id INT, mine_name TEXT); INSERT INTO mines (mine_id, mine_name) VALUES (1, 'MineA'), (2, 'MineB');","completion":"SELECT m.mine_name, AVG(lp.amount_extracted \/ lp.num_employees) AS productivity_metric FROM labor_productivity lp JOIN mines m ON lp.mine_id = m.mine_id GROUP BY m.mine_name;"}
{"prompt":"What is the total amount of mineral extraction by type? with given SQL schema CREATE TABLE extraction (extraction_id INT, mine_id INT, year INT, mineral VARCHAR(255), quantity INT); INSERT INTO extraction (extraction_id, mine_id, year, mineral, quantity) VALUES (1, 1, 2018, 'Gold', 1000), (2, 1, 2019, 'Gold', 1200), (3, 2, 2018, 'Uranium', 2000), (4, 2, 2019, 'Uranium', 2500);","completion":"SELECT mineral, SUM(quantity) FROM extraction GROUP BY mineral;"}
{"prompt":"Display the names and total donation amounts for nonprofits that offer programs in both the Education and Health categories, excluding any duplicate records. with given SQL schema CREATE TABLE nonprofits (id INT, name TEXT, state TEXT, program TEXT, category TEXT, donation_amount FLOAT); INSERT INTO nonprofits (id, name, state, program, category, donation_amount) VALUES (1, 'Nonprofit A', 'California', 'Math Education', 'Education', 25000.00), (2, 'Nonprofit B', 'California', 'Health Services', 'Health', 50000.00), (3, 'Nonprofit C', 'California', 'Environmental Conservation', 'Environment', 35000.00), (4, 'Nonprofit D', 'Texas', 'Arts Education', 'Education', 60000.00), (5, 'Nonprofit E', 'New York', 'Social Services', 'Other', 15000.00), (6, 'Nonprofit F', 'Florida', 'Disaster Relief', 'Other', 70000.00), (7, 'Nonprofit G', 'California', 'Science Education', 'Education', 40000.00), (8, 'Nonprofit H', 'California', 'Mental Health Services', 'Health', 45000.00);","completion":"SELECT name, SUM(donation_amount) as total_donation FROM nonprofits WHERE category IN ('Education', 'Health') GROUP BY name;"}
{"prompt":"List all eSports tournaments that don't have a winner yet. with given SQL schema CREATE TABLE Tournaments (TournamentID INT PRIMARY KEY, Name VARCHAR(50), GameID INT, Date DATE, Winner VARCHAR(50)); INSERT INTO Tournaments (TournamentID, Name, GameID, Date, Winner) VALUES (1, 'Tournament A', 1, '2021-04-01', 'Team USA'); INSERT INTO Tournaments (TournamentID, Name, GameID, Date, Winner) VALUES (2, 'Tournament B', 2, '2021-05-15', ''); INSERT INTO Tournaments (TournamentID, Name, GameID, Date, Winner) VALUES (3, 'Tournament C', 3, '2021-06-30', 'Team Europe');","completion":"SELECT * FROM Tournaments WHERE Winner IS NULL;"}
{"prompt":"What is the average playtime in minutes for players who have achieved a rank of Gold or higher in the game \"Galactic Conquest\"? with given SQL schema CREATE TABLE GalacticConquestPlayers (PlayerID INT, PlayerName VARCHAR(50), PlaytimeMinutes INT, Rank VARCHAR(10)); INSERT INTO GalacticConquestPlayers VALUES (1, 'JohnDoe', 500, 'Gold'), (2, 'JaneDoe', 700, 'Platinum'), (3, 'BobSmith', 300, 'Silver'), (4, 'AliceJohnson', 800, 'Gold');","completion":"SELECT AVG(PlaytimeMinutes) FROM GalacticConquestPlayers WHERE Rank IN ('Gold', 'Platinum');"}
{"prompt":"Update the \"city_budget_summary\" table to mark the \"Education\" budget as approved with given SQL schema CREATE TABLE city_budget_summary (budget_category VARCHAR(50), budget_amount DECIMAL(10,2), budget_status VARCHAR(20));","completion":"UPDATE city_budget_summary SET budget_status = 'approved' WHERE budget_category = 'Education';"}
{"prompt":"List the co-owners and their shared property addresses in Portland, OR. with given SQL schema CREATE TABLE co_owners (id INT, name VARCHAR(30), property_id INT); CREATE TABLE properties (id INT, address VARCHAR(50), city VARCHAR(20)); INSERT INTO co_owners (id, name, property_id) VALUES (1, 'Alex', 101), (2, 'Bella', 101); INSERT INTO properties (id, address, city) VALUES (101, '1234 SE Stark St', 'Portland'), (102, '5678 NE 20th Ave', 'Portland');","completion":"SELECT co_owners.name, properties.address FROM co_owners INNER JOIN properties ON co_owners.property_id = properties.id WHERE properties.city = 'Portland';"}
{"prompt":"Which cuisine type has the highest average food safety score? with given SQL schema CREATE TABLE inspections (id INT, restaurant VARCHAR(50), cuisine VARCHAR(50), score INT); INSERT INTO inspections (id, restaurant, cuisine, score) VALUES (1, 'Restaurant A', 'Italian', 90), (2, 'Restaurant B', 'Mexican', 95), (3, 'Restaurant C', 'Chinese', 88), (4, 'Restaurant D', 'Indian', 97), (5, 'Restaurant E', 'Japanese', 92), (6, 'Restaurant F', 'Thai', 89);","completion":"SELECT cuisine, AVG(score) as avg_score FROM inspections GROUP BY cuisine ORDER BY avg_score DESC LIMIT 1;"}
{"prompt":"How many satellites have been launched by SpaceX each year? with given SQL schema CREATE TABLE satellites (id INT, name VARCHAR(255), launch_company VARCHAR(255), launch_date DATE);","completion":"SELECT EXTRACT(YEAR FROM launch_date) as launch_year, COUNT(*) as num_satellites FROM satellites WHERE launch_company = 'SpaceX' GROUP BY launch_year;"}
{"prompt":"Insert a new spacecraft with ID 6, name 'Spacecraft F', manufacturing date '2022-03-01', country 'Canada', and duration in space 0. with given SQL schema CREATE TABLE Spacecraft (ID INT, Name VARCHAR(50), ManufacturingDate DATE, Country VARCHAR(50), DurationInSpace INT); INSERT INTO Spacecraft VALUES (1, 'Spacecraft A', '2010-01-01', 'USA', 2500), (2, 'Spacecraft B', '2012-05-15', 'China', 3000), (3, 'Spacecraft C', '2005-09-27', 'Russia', 1800), (4, 'Spacecraft D', '2015-02-20', 'USA', 1200), (5, 'Spacecraft E', '2008-07-06', 'China', 1500);","completion":"INSERT INTO Spacecraft (ID, Name, ManufacturingDate, Country, DurationInSpace) VALUES (6, 'Spacecraft F', '2022-03-01', 'Canada', 0);"}
{"prompt":"What is the minimum launch cost for SpaceX missions? with given SQL schema CREATE TABLE SpaceXMissions (id INT, mission_name VARCHAR(255), launch_cost DECIMAL(10, 2)); INSERT INTO SpaceXMissions (id, mission_name, launch_cost) VALUES (1, 'Falcon 1 Flight 1', 6500000.00), (2, 'Dragon Flight 1', 56000000.00);","completion":"SELECT MIN(launch_cost) FROM SpaceXMissions;"}
{"prompt":"What is the total mass of spacecraft launched by ESA before 2010? with given SQL schema CREATE TABLE SpacecraftManufacturing (manufacturer VARCHAR(255), spacecraft_name VARCHAR(255), mass FLOAT, launch_date DATE); INSERT INTO SpacecraftManufacturing (manufacturer, spacecraft_name, mass, launch_date) VALUES ('ESA', 'ATV Jules Verne', 20000, '2008-03-09'), ('ESA', 'ATV Johannes Kepler', 20000, '2011-02-16'), ('ESA', 'ATV Edoardo Amaldi', 20000, '2012-03-23');","completion":"SELECT SUM(mass) FROM SpacecraftManufacturing WHERE manufacturer = 'ESA' AND launch_date < '2010-01-01';"}
{"prompt":"Which player has the highest batting average? with given SQL schema CREATE TABLE Players (Player VARCHAR(50), GamesPlayed INT, Hits INT); INSERT INTO Players VALUES ('Player1', 10, 12), ('Player2', 11, 15), ('Player3', 12, 18), ('Player4', 13, 20);","completion":"SELECT Player, AVG(Hits \/ GamesPlayed) AS BattingAverage FROM Players GROUP BY Player ORDER BY BattingAverage DESC;"}
{"prompt":"Find the total number of vulnerabilities for each asset in the 'vulnerabilities' and 'assets' tables with given SQL schema CREATE TABLE assets (asset_id INT PRIMARY KEY, asset_name VARCHAR(255)); INSERT INTO assets (asset_id, asset_name) VALUES (1, 'Server01'), (2, 'Workstation01'); CREATE TABLE vulnerabilities (vulnerability_id INT PRIMARY KEY, asset_id INT, vulnerability_title VARCHAR(255)); INSERT INTO vulnerabilities (vulnerability_id, asset_id, vulnerability_title) VALUES (1, 1, 'Elevation of Privilege'), (2, 1, 'SQL Injection'), (3, 2, 'Cross-site Scripting');","completion":"SELECT a.asset_name, COUNT(v.vulnerability_id) as total_vulnerabilities FROM assets a INNER JOIN vulnerabilities v ON a.asset_id = v.asset_id GROUP BY a.asset_name;"}
{"prompt":"What is the maximum number of passengers for autonomous ferries in New York City? with given SQL schema CREATE TABLE autonomous_ferries (ferry_id INT, passengers INT, city VARCHAR(50)); INSERT INTO autonomous_ferries (ferry_id, passengers, city) VALUES (1, 150, 'New York City'), (2, 180, 'New York City'), (3, 200, 'New York City');","completion":"SELECT MAX(passengers) FROM autonomous_ferries WHERE city = 'New York City';"}
{"prompt":"Find the top 3 policy types with the highest number of claims in Canada, ordered by the total claim amount in descending order. with given SQL schema CREATE TABLE Claims (PolicyType VARCHAR(20), ClaimAmount DECIMAL(10, 2), PolicyholderCountry VARCHAR(50)); INSERT INTO Claims VALUES ('Auto', 5000, 'Canada'); INSERT INTO Claims VALUES ('Home', 3000, 'Canada'); INSERT INTO Claims VALUES ('Auto', 4000, 'Canada');","completion":"SELECT PolicyType, COUNT(*) AS ClaimCount, SUM(ClaimAmount) AS TotalClaimAmount FROM Claims WHERE PolicyholderCountry = 'Canada' GROUP BY PolicyType ORDER BY TotalClaimAmount DESC, ClaimCount DESC LIMIT 3;"}
{"prompt":"What is the average number of safety issues in workplaces per city? with given SQL schema CREATE TABLE workplaces (id INT, city VARCHAR(10), safety_issues INT); INSERT INTO workplaces (id, city, safety_issues) VALUES (1, 'New York', 10), (2, 'Los Angeles', 5), (3, 'Houston', 15), (4, 'Miami', 8); CREATE TABLE cities (id INT, city VARCHAR(10)); INSERT INTO cities (id, city) VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Houston'), (4, 'Miami');","completion":"SELECT w.city, AVG(w.safety_issues) OVER (PARTITION BY w.city) AS avg_safety_issues FROM workplaces w INNER JOIN cities c ON w.city = c.city;"}
{"prompt":"What is the number of workers represented by the 'Teamsters' and 'UAW' unions? with given SQL schema CREATE TABLE if not exists union_membership (union_id INT, worker_id INT); CREATE TABLE if not exists unions (union_id INT, union_name TEXT, headquarters_address TEXT); INSERT INTO union_membership (union_id, worker_id) VALUES (1, 1001), (1, 1002), (1, 1003), (2, 2001), (2, 2002), (3, 3001); INSERT INTO unions (union_id, union_name, headquarters_address) VALUES (1, 'United Steelworkers', '60 Boulevard of the Allies, Pittsburgh, PA 15222'), (2, 'Teamsters', '25 Louisiana Ave NW, Washington, DC 20001'), (3, 'UAW', '8000 E Jefferson Ave, Detroit, MI 48214');","completion":"SELECT COUNT(DISTINCT union_membership.worker_id) FROM union_membership INNER JOIN unions ON union_membership.union_id = unions.union_id WHERE unions.union_name IN ('Teamsters', 'UAW');"}
{"prompt":"What is the average safety rating for electric vehicles in each country? with given SQL schema CREATE TABLE Vehicles (Id INT, Name VARCHAR(100), Type VARCHAR(50), SafetyRating FLOAT, Country VARCHAR(100)); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, Country) VALUES (1, 'Tesla Model 3', 'Electric', 5.0, 'USA'); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, Country) VALUES (2, 'Nissan Leaf', 'Electric', 4.8, 'Japan'); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, Country) VALUES (3, 'Audi e-Tron', 'Electric', 5.1, 'Germany');","completion":"SELECT Country, AVG(SafetyRating) FROM Vehicles WHERE Type = 'Electric' GROUP BY Country;"}
{"prompt":"What are the names of the vessels with the highest average speed that arrived in Busan? with given SQL schema CREATE TABLE VesselArrivals (ID INT, VesselName VARCHAR(50), ArrivalPort VARCHAR(50), ArrivalDate DATE, AverageSpeed DECIMAL(5,2)); INSERT INTO VesselArrivals (ID, VesselName, ArrivalPort, ArrivalDate, AverageSpeed) VALUES (1, 'Test Vessel 1', 'Busan', '2022-01-01', 20.0), (2, 'Test Vessel 2', 'Busan', '2022-01-02', 18.5), (3, 'Test Vessel 3', 'Busan', '2022-01-03', 21.0);","completion":"SELECT VesselName FROM (SELECT VesselName, ROW_NUMBER() OVER (ORDER BY AverageSpeed DESC) AS rn FROM VesselArrivals WHERE ArrivalPort = 'Busan') t WHERE rn = 1;"}
{"prompt":"What are the names of vessels that have never had safety incidents in North America? with given SQL schema CREATE TABLE Vessels (VesselID INT, VesselName VARCHAR(50));CREATE TABLE SafetyIncidents (IncidentID INT, VesselID INT, IncidentLocation VARCHAR(50), IncidentDate DATE); INSERT INTO Vessels (VesselID, VesselName) VALUES (1, 'VesselA'), (2, 'VesselB'), (3, 'VesselC'), (4, 'VesselD'), (5, 'VesselE'); INSERT INTO SafetyIncidents (IncidentID, VesselID, IncidentLocation, IncidentDate) VALUES (1, 1, 'Canada', '2021-01-01'), (2, 2, 'USA', '2021-02-01'), (3, 3, 'Mexico', '2021-03-01');","completion":"SELECT Vessels.VesselName FROM Vessels LEFT JOIN SafetyIncidents ON Vessels.VesselID = SafetyIncidents.VesselID WHERE SafetyIncidents.IncidentLocation IS NULL;"}
{"prompt":"List all circular economy initiatives from 'initiatives' table with given SQL schema CREATE TABLE initiatives (name VARCHAR(50), type VARCHAR(50), start_date DATE, end_date DATE);","completion":"SELECT * FROM initiatives WHERE type = 'circular_economy';"}
{"prompt":"What is the total landfill capacity in Europe as of 2021, separated by region? with given SQL schema CREATE TABLE LandfillCapacityEurope (region VARCHAR(50), year INT, capacity INT); INSERT INTO LandfillCapacityEurope (region, year, capacity) VALUES ('Europe\/East', 2021, 1000000), ('Europe\/West', 2021, 1200000), ('Europe\/North', 2021, 1400000), ('Europe\/South', 2021, 1100000);","completion":"SELECT region, SUM(capacity) FROM LandfillCapacityEurope WHERE year = 2021 GROUP BY region;"}
{"prompt":"List the names of all sensors and their respective locations from the 'sensor_data' and 'sensor_location' tables with given SQL schema CREATE TABLE sensor_data (sensor_id INT, water_level FLOAT, timestamp TIMESTAMP); CREATE TABLE sensor_location (sensor_id INT, location VARCHAR(50));","completion":"SELECT sensor_data.sensor_id, sensor_location.location FROM sensor_data INNER JOIN sensor_location ON sensor_data.sensor_id = sensor_location.sensor_id;"}
{"prompt":"What is the average daily water consumption per capita for the past year? with given SQL schema CREATE TABLE countries (country_name VARCHAR(50), country_abbr VARCHAR(5), population INT); INSERT INTO countries (country_name, country_abbr, population) VALUES ('Canada', 'CA', 38005238), ('Australia', 'AU', 25683200), ('Russia', 'RU', 145934462); CREATE TABLE water_consumption (country_abbr VARCHAR(5), consumption_gallons INT, consumption_date DATE); INSERT INTO water_consumption (country_abbr, consumption_gallons, consumption_date) VALUES ('CA', 3845200, '2022-01-01'), ('AU', 2957420, '2022-01-02'), ('RU', 1876542, '2022-01-03');","completion":"SELECT c.country_name, AVG(w.consumption_gallons \/ c.population) as avg_daily_water_consumption_per_capita FROM water_consumption w JOIN countries c ON w.country_abbr = c.country_abbr WHERE w.consumption_date >= DATEADD(year, -1, GETDATE()) GROUP BY c.country_name;"}
{"prompt":"What is the maximum water consumption in the agricultural sector in Mexico for the year 2020? with given SQL schema CREATE TABLE water_consumption_m3 (region VARCHAR(20), sector VARCHAR(20), year INT, value FLOAT); INSERT INTO water_consumption_m3 (region, sector, year, value) VALUES ('Mexico', 'Agricultural', 2020, 12000000);","completion":"SELECT MAX(value) FROM water_consumption_m3 WHERE sector = 'Agricultural' AND region = 'Mexico' AND year = 2020;"}
{"prompt":"Find the number of new members acquired each month in 2021, excluding the members who canceled their membership. with given SQL schema CREATE SCHEMA fitness; CREATE TABLE membership (member_id INT, member_start_date DATE, member_end_date DATE); INSERT INTO membership (member_id, member_start_date, member_end_date) VALUES (1, '2021-01-01', '2021-12-31'), (2, '2021-01-01', '2021-02-15'), (3, '2021-03-01', '2021-12-31');","completion":"SELECT MONTH(member_start_date) AS month, COUNT(*) - SUM(CASE WHEN MONTH(member_end_date) < MONTH(member_start_date) THEN 1 ELSE 0 END) AS new_members FROM membership WHERE YEAR(member_start_date) = 2021 GROUP BY month;"}
{"prompt":"Find the algorithm names and their corresponding risk_level in the ai_safety table where the risk_level is 'medium' or 'high' with given SQL schema CREATE TABLE ai_safety (algorithm TEXT, risk_level TEXT, dataset TEXT, last_updated TIMESTAMP);","completion":"SELECT algorithm, risk_level FROM ai_safety WHERE risk_level IN ('medium', 'high');"}
{"prompt":"What is the total number of participants in community development initiatives in rural Africa? with given SQL schema CREATE TABLE Community_Development_Initiatives (id INT, initiative_name TEXT, participants INT, location TEXT); INSERT INTO Community_Development_Initiatives (id, initiative_name, participants, location) VALUES (1, 'Clean Water Access', 150, 'Rural Africa'), (2, 'Education Center', 200, 'Urban Africa');","completion":"SELECT SUM(participants) FROM Community_Development_Initiatives WHERE location = 'Rural Africa';"}
{"prompt":"Which habitats have seen a decrease in preservation efforts from 2017 to 2018? with given SQL schema CREATE TABLE PreservationTrends(Year INT, Habitat VARCHAR(20), Efforts INT); INSERT INTO PreservationTrends VALUES (2017, 'Forest', 120), (2018, 'Forest', 150), (2017, 'Wetland', 80), (2018, 'Wetland', 90);","completion":"SELECT Habitat, (Efforts2018 - Efforts2017) AS DecreaseInEfforts FROM (SELECT Habitat, MAX(CASE WHEN Year = 2017 THEN Efforts END) AS Efforts2017, MAX(CASE WHEN Year = 2018 THEN Efforts END) AS Efforts2018 FROM PreservationTrends GROUP BY Habitat) AS Subquery;"}
{"prompt":"List the species and their average weight in the Mediterranean region? with given SQL schema CREATE TABLE Species (region VARCHAR(255), species_name VARCHAR(255), avg_weight DECIMAL(5,2)); INSERT INTO Species (region, species_name, avg_weight) VALUES ('Mediterranean', 'Tuna', 25.5), ('Mediterranean', 'Salmon', 12.2);","completion":"SELECT species_name, avg_weight FROM Species WHERE region = 'Mediterranean';"}
{"prompt":"What is the biomass of seafood species at risk in the Mediterranean Sea? with given SQL schema CREATE TABLE seafoodspecies (species VARCHAR(30), biomass FLOAT, location VARCHAR(20)); INSERT INTO seafoodspecies (species, biomass, location) VALUES ('Tuna', 15000, 'Mediterranean Sea'), ('Sardines', 20000, 'Mediterranean Sea');","completion":"SELECT biomass FROM seafoodspecies WHERE species IN ('Tuna', 'Sardines') AND location = 'Mediterranean Sea';"}
{"prompt":"What is the total production (production) of seafood (product) with organic certification (is_organic) for each country (country) in the 'seafood_production_v3' table, where the total production exceeds 20000 tons? with given SQL schema CREATE TABLE seafood_production_v3 (id INT, country VARCHAR(255), product VARCHAR(255), production FLOAT, is_organic BOOLEAN); INSERT INTO seafood_production_v3 (id, country, product, production, is_organic) VALUES (1, 'Norway', 'Salmon', 25000.0, TRUE), (2, 'Norway', 'Cod', 15000.0, FALSE), (3, 'Chile', 'Tuna', 18000.0, TRUE), (4, 'Chile', 'Hake', 12000.0, FALSE), (5, 'Canada', 'Lobster', 22000.0, TRUE);","completion":"SELECT country, SUM(production) FROM seafood_production_v3 WHERE is_organic = TRUE GROUP BY country HAVING SUM(production) > 20000;"}
{"prompt":"How many funding sources have contributed to theatre-related productions? with given SQL schema CREATE TABLE TheatreEvents (id INT, title VARCHAR(50), type VARCHAR(50)); INSERT INTO TheatreEvents (id, title, type) VALUES (1, 'Theatre Play', 'Play'); INSERT INTO TheatreEvents (id, title, type) VALUES (2, 'Musical', 'Musical'); CREATE TABLE TheatreFunding (id INT, event_id INT, source VARCHAR(50), amount FLOAT); INSERT INTO TheatreFunding (id, event_id, source, amount) VALUES (1, 1, 'City Grant', 12000); INSERT INTO TheatreFunding (id, event_id, source, amount) VALUES (2, 1, 'Private Donor', 8000); INSERT INTO TheatreFunding (id, event_id, source, amount) VALUES (3, 2, 'Government Grant', 10000);","completion":"SELECT COUNT(DISTINCT source) FROM TheatreFunding WHERE type = 'Play';"}
{"prompt":"Number of awards won by female directors? with given SQL schema CREATE TABLE Awards (id INT, director_name VARCHAR(100), director_gender VARCHAR(10), award VARCHAR(50));","completion":"SELECT COUNT(*) FROM Awards WHERE director_gender = 'female';"}
{"prompt":"What is the \"license_number\" for the contractor with \"contractor_id\" 1001 in the \"Contractors\" table? with given SQL schema CREATE TABLE Contractors (contractor_id INT, name VARCHAR(255), location VARCHAR(255), license_number VARCHAR(50));","completion":"SELECT license_number FROM Contractors WHERE contractor_id = 1001;"}
{"prompt":"Determine the difference in average retail price between Indica and Sativa strains in California. with given SQL schema CREATE TABLE DispensarySales(id INT, dispensary VARCHAR(255), state VARCHAR(255), strain_type VARCHAR(255), retail_price DECIMAL(10,2));","completion":"SELECT AVG(CASE WHEN strain_type = 'Indica' THEN retail_price ELSE NULL END) - AVG(CASE WHEN strain_type = 'Sativa' THEN retail_price ELSE NULL END) as price_difference FROM DispensarySales WHERE state = 'California';"}
{"prompt":"What was the total revenue by week for a specific dispensary in Colorado in 2021? with given SQL schema CREATE TABLE Dispensaries (id INT, name TEXT, state TEXT); INSERT INTO Dispensaries (id, name, state) VALUES (1, 'Dispensary A', 'Colorado'); CREATE TABLE Sales (dispid INT, date DATE, revenue DECIMAL(10,2)); INSERT INTO Sales (dispid, date, revenue) VALUES (1, '2021-01-01', 2000); INSERT INTO Sales (dispid, date, revenue) VALUES (1, '2021-01-08', 2500);","completion":"SELECT d.name, WEEK(s.date) as week, SUM(s.revenue) as total_revenue FROM Dispensaries d JOIN Sales s ON d.id = s.dispid WHERE d.state = 'Colorado' AND d.name = 'Dispensary A' AND YEAR(s.date) = 2021 GROUP BY d.name, week;"}
{"prompt":"What is the total pro bono hours for attorneys who work on civil cases, ordered by hours? with given SQL schema CREATE TABLE attorney (attorney_id INT, name VARCHAR(255), location VARCHAR(255)); INSERT INTO attorney (attorney_id, name, location) VALUES (1, 'Juan Rodriguez', 'Miami'), (2, 'Maria Garcia', 'Los Angeles'), (3, 'David Kim', 'Seattle'); CREATE TABLE case_outcomes (outcome_id INT, attorney_id INT, case_type VARCHAR(255), hours DECIMAL(10,2)); INSERT INTO case_outcomes (outcome_id, attorney_id, case_type, hours) VALUES (1, 1, 'Civil', 20.00), (2, 1, 'Civil', 25.00), (3, 2, 'Criminal', 30.00), (4, 3, 'Family', 35.00), (5, 3, 'Civil', 40.00), (6, 3, 'Civil', 45.00);","completion":"SELECT case_type, SUM(hours) as total_hours FROM case_outcomes WHERE case_type = 'Civil' GROUP BY case_type ORDER BY total_hours DESC;"}
{"prompt":"Update the 'production_schedule' table and set 'production_status' to 'completed' for all records where 'shift_time' is '06:00-14:00' with given SQL schema CREATE TABLE production_schedule (schedule_id INT, shift_time TIME, production_status VARCHAR(15));","completion":"UPDATE production_schedule SET production_status = 'completed' WHERE shift_time = '06:00-14:00';"}
{"prompt":"What is the maximum emission level for each chemical compound in the West region in Q2 2021? with given SQL schema CREATE TABLE plants (plant_id INT, plant_name VARCHAR(50), region VARCHAR(50)); INSERT INTO plants (plant_id, plant_name, region) VALUES (1, 'Plant C', 'West'); INSERT INTO plants (plant_id, plant_name, region) VALUES (2, 'Plant D', 'East'); CREATE TABLE chemical_emissions (plant_id INT, chemical_compound VARCHAR(50), emission_level INT, emission_date DATE); INSERT INTO chemical_emissions (plant_id, chemical_compound, emission_level, emission_date) VALUES (1, 'Compound X', 200, '2021-04-01'); INSERT INTO chemical_emissions (plant_id, chemical_compound, emission_level, emission_date) VALUES (1, 'Compound Y', 250, '2021-04-02');","completion":"SELECT chemical_compound, MAX(emission_level) AS max_emission_q2_2021 FROM chemical_emissions WHERE region = 'West' AND emission_date BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY chemical_compound;"}
{"prompt":"List all climate communication campaigns in South America and their budgets, sorted by campaign name. with given SQL schema CREATE TABLE climate_communication_sa (campaign_name VARCHAR(50), country VARCHAR(50), budget NUMERIC(12,2)); INSERT INTO climate_communication_sa (campaign_name, country, budget) VALUES ('Green Future', 'Brazil', 15000.00), ('Climate Action', 'Argentina', 20000.00), ('Eco Life', 'Colombia', 12000.00), ('Clean Earth', 'Peru', 18000.00), ('Sustainable World', 'Chile', 25000.00);","completion":"SELECT campaign_name, country, budget FROM climate_communication_sa WHERE country IN ('South America') ORDER BY campaign_name;"}
{"prompt":"What is the maximum investment in climate finance for a single project in Europe? with given SQL schema CREATE TABLE climate_finance_projects (id INT, country VARCHAR(50), project VARCHAR(50), investment FLOAT); INSERT INTO climate_finance_projects (id, country, project, investment) VALUES (1, 'Germany', 'renewable energy', 2000000.00), (2, 'France', 'energy efficiency', 1500000.00), (3, 'UK', 'carbon capture', 3000000.00);","completion":"SELECT MAX(investment) FROM climate_finance_projects WHERE country IN ('Germany', 'France', 'UK', 'Italy', 'Spain');"}
{"prompt":"What was the total R&D expenditure for 'DrugA'? with given SQL schema CREATE TABLE rd_expenditure (drug_name TEXT, amount INTEGER); INSERT INTO rd_expenditure VALUES ('DrugA', 5000000);","completion":"SELECT SUM(amount) FROM rd_expenditure WHERE drug_name = 'DrugA';"}
{"prompt":"What was the total sales revenue of all drugs in Q4 2020 in Mexico? with given SQL schema CREATE TABLE sales (drug_name TEXT, quarter TEXT, year INTEGER, revenue INTEGER); INSERT INTO sales (drug_name, quarter, year, revenue) VALUES ('DrugA', 'Q4', 2020, 100000), ('DrugB', 'Q4', 2020, 150000);","completion":"SELECT SUM(revenue) FROM sales WHERE quarter = 'Q4' AND year = 2020;"}
{"prompt":"What is the number of primary care physicians per capita in each state of the United States? with given SQL schema CREATE TABLE us_states (id INT, name VARCHAR(255)); CREATE TABLE primary_care_physicians (id INT, state_id INT, count INT); CREATE TABLE population (id INT, state_id INT, total_population INT); INSERT INTO us_states (id, name) VALUES (1, 'Alabama'), (2, 'Alaska'), (3, 'Arizona'), (4, 'Arkansas'), (5, 'California');","completion":"SELECT s.name, pc.count \/ p.total_population AS physicians_per_capita FROM primary_care_physicians pc JOIN us_states s ON pc.state_id = s.id JOIN population p ON pc.state_id = p.state_id;"}
{"prompt":"What is the maximum and minimum funding amount by quarter for companies founded in the US? with given SQL schema CREATE TABLE funding (funding_id INT, company_id INT, amount DECIMAL(10,2), year INT, quarter INT); INSERT INTO funding (funding_id, company_id, amount, year, quarter) VALUES (1, 1, 150000.00, 2019, 1), (2, 2, 200000.00, 2018, 4), (3, 3, 250000.00, 2019, 2); CREATE TABLE companies (company_id INT, founding_year INT, country VARCHAR(255)); INSERT INTO companies (company_id, founding_year, country) VALUES (1, 2018, 'USA'), (2, 2017, 'Canada'), (3, 2019, 'USA');","completion":"SELECT companies.country, funding.quarter, MAX(funding.amount) as max_funding, MIN(funding.amount) as min_funding FROM funding JOIN companies ON funding.company_id = companies.company_id WHERE companies.country = 'USA' GROUP BY companies.country, funding.quarter;"}
{"prompt":"Create a table named \"indigenous_farms\" with columns \"id\", \"name\", \"community\", and \"hectares\" where \"id\" is the primary key with given SQL schema CREATE TABLE indigenous_farms (id SERIAL PRIMARY KEY, name TEXT, community TEXT, hectares INT);","completion":"CREATE TABLE indigenous_farms (id SERIAL PRIMARY KEY, name TEXT, community TEXT, hectares INT);"}
{"prompt":"Identify the most common disability-related complaints in each of the last 3 months, and the total number of complaints in each of those months? with given SQL schema CREATE TABLE complaints (complaint_id INT, complaint_type VARCHAR(255), date DATE); INSERT INTO complaints (complaint_id, complaint_type, date) VALUES (1, 'Physical Barrier', '2021-03-15'); INSERT INTO complaints (complaint_id, complaint_type, date) VALUES (2, 'Lack of Communication', '2021-02-20');","completion":"SELECT MONTH(date) as month, complaint_type, COUNT(*) as num_complaints FROM complaints WHERE date BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() GROUP BY month, complaint_type;"}
{"prompt":"What is the percentage of students who received accommodations for mobility impairments? with given SQL schema CREATE TABLE Students (student_id INT, department VARCHAR(255)); CREATE TABLE Accommodations (accommodation_id INT, student_id INT, accommodation_type VARCHAR(255)); CREATE TABLE DisabilityTypes (disability_type VARCHAR(255), student_id INT);","completion":"SELECT (COUNT(DISTINCT student_id) * 100.0 \/ (SELECT COUNT(DISTINCT student_id) FROM Students)) as percentage FROM Accommodations WHERE student_id IN ( SELECT student_id FROM DisabilityTypes WHERE disability_type = 'Mobility Impairment');"}
{"prompt":"What is the total budget allocated for physical disability accommodations in South America? with given SQL schema CREATE TABLE Accommodations (Id INT, StudentId INT, Type VARCHAR(50), RequestDate DATE, Region VARCHAR(30), Budget DECIMAL(10, 2)); INSERT INTO Accommodations (Id, StudentId, Type, RequestDate, Region, Budget) VALUES (1, 1, 'Wheelchair Ramp', '2022-01-01', 'South America', 2000), (2, 2, 'Mobility Scooter', '2022-02-01', 'South America', 3000), (3, 3, 'Wheelchair Lift', '2022-03-01', 'South America', 4000), (4, 4, 'Adaptive Seating', '2022-04-01', 'South America', 5000);","completion":"SELECT SUM(Budget) FROM Accommodations WHERE Type LIKE 'Physical%' AND Region = 'South America';"}
{"prompt":"What is the average depth of all trenches in the Southern Ocean? with given SQL schema CREATE TABLE oceanography (id INT, location VARCHAR(255), depth INT); INSERT INTO oceanography (id, location, depth) VALUES (1, 'Southern Ocean Trench', 8000);","completion":"SELECT AVG(depth) FROM oceanography WHERE location = 'Southern Ocean Trench';"}
{"prompt":"What are the total unit sales of cosmetics products that are free from parabens and sulfates? with given SQL schema CREATE TABLE product_safety (product_name TEXT, is_paraben_free BOOLEAN, is_sulfate_free BOOLEAN); INSERT INTO product_safety (product_name, is_paraben_free, is_sulfate_free) VALUES ('Product 6', true, true), ('Product 7', false, false), ('Product 8', true, true), ('Product 9', false, true), ('Product 10', true, true); CREATE TABLE product_sales (product_name TEXT, unit_sales INTEGER); INSERT INTO product_sales (product_name, unit_sales) VALUES ('Product 6', 500), ('Product 7', 300), ('Product 8', 400), ('Product 9', 700), ('Product 10', 200);","completion":"SELECT SUM(product_sales.unit_sales) FROM product_sales JOIN product_safety ON product_sales.product_name = product_safety.product_name WHERE product_safety.is_paraben_free = true AND product_safety.is_sulfate_free = true;"}
{"prompt":"What is the total revenue of organic cosmetics sold in the UK in the past month? with given SQL schema CREATE TABLE OrganicSales (product VARCHAR(255), country VARCHAR(255), is_organic BOOLEAN, revenue FLOAT);","completion":"SELECT SUM(revenue) FROM OrganicSales WHERE is_organic = TRUE AND country = 'UK' AND date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"What is the total number of artworks in the 'Artworks' table, grouped by art category? with given SQL schema CREATE TABLE Artworks (id INT, art_category VARCHAR(255), artist_name VARCHAR(255), year INT, art_medium VARCHAR(255));","completion":"SELECT art_category, COUNT(*) as total FROM Artworks GROUP BY art_category;"}
{"prompt":"What is the total number of threat intelligence incidents by day for the last week? with given SQL schema CREATE TABLE ThreatIntelligence (IncidentID int, IncidentDate date, IncidentSeverity varchar(50)); INSERT INTO ThreatIntelligence (IncidentID, IncidentDate, IncidentSeverity) VALUES (1, '2022-01-15', 'High'), (2, '2022-03-01', 'Medium'), (3, '2022-04-10', 'High'), (4, '2022-07-05', 'Low'), (5, '2022-11-28', 'Medium'), (6, '2022-12-01', 'High'), (7, '2022-12-03', 'Low');","completion":"SELECT IncidentDate, COUNT(*) as NumIncidents FROM ThreatIntelligence WHERE IncidentDate >= DATEADD(day, -7, CURRENT_DATE) GROUP BY IncidentDate;"}
{"prompt":"What is the total number of military equipment in the 'naval' category, by country? with given SQL schema CREATE TABLE military_equipment_2 (country VARCHAR(50), category VARCHAR(50), number INT); INSERT INTO military_equipment_2 (country, category, number) VALUES ('USA', 'Naval', 287), ('Russia', 'Naval', 278), ('China', 'Naval', 714), ('UK', 'Naval', 76), ('India', 'Naval', 295);","completion":"SELECT country, SUM(number) as total_naval FROM military_equipment_2 WHERE category = 'Naval' GROUP BY country;"}
{"prompt":"Update the destination to 'Cape Town' for all records with cargo_id 103 in table fleet_management with given SQL schema CREATE TABLE fleet_management (id INT PRIMARY KEY, cargo_id INT, status VARCHAR(20), destination VARCHAR(20)); INSERT INTO fleet_management (id, cargo_id, status, destination) VALUES (1, 101, 'pending', 'Buenos Aires'), (2, 102, 'loaded', 'Sydney'), (3, 103, 'pending', 'Buenos Aires');","completion":"UPDATE fleet_management SET destination = 'Cape Town' WHERE cargo_id = 103;"}
{"prompt":"What is the average gross tonnage of container vessels in each port? with given SQL schema CREATE TABLE Port (PortID INT, PortName VARCHAR(50), City VARCHAR(50), Country VARCHAR(50)); INSERT INTO Port (PortID, PortName, City, Country) VALUES (1, 'Port of Los Angeles', 'Los Angeles', 'USA'); INSERT INTO Port (PortID, PortName, City, Country) VALUES (2, 'Port of Rotterdam', 'Rotterdam', 'Netherlands'); CREATE TABLE Vessel (VesselID INT, VesselName VARCHAR(50), GrossTonnage INT, VesselType VARCHAR(50), PortID INT); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage, VesselType, PortID) VALUES (1, 'Ever Ace', 235000, 'Container', 1); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage, VesselType, PortID) VALUES (2, 'Algeciras', 128000, 'Ro-Ro', 2);","completion":"SELECT PortName, AVG(GrossTonnage) AS AvgGrossTonnage FROM Vessel v JOIN Port p ON v.PortID = p.PortID WHERE VesselType = 'Container' GROUP BY PortName;"}
{"prompt":"Identify the total number of machines in the 'Circular Economy' category that were manufactured before 2010. with given SQL schema CREATE TABLE Machines (MachineID INT, Category VARCHAR(50), ManufacturingYear INT); INSERT INTO Machines (MachineID, Category, ManufacturingYear) VALUES (1, 'Circular Economy', 2005); INSERT INTO Machines (MachineID, Category, ManufacturingYear) VALUES (2, 'Circular Economy', 2012);","completion":"SELECT COUNT(*) FROM Machines WHERE Category = 'Circular Economy' AND ManufacturingYear < 2010;"}
{"prompt":"Show the total number of artifacts excavated from site 'Timgad'. with given SQL schema CREATE TABLE artifact_timgad (artifact_id INTEGER, site_name TEXT, artifact_type TEXT, age INTEGER); INSERT INTO artifact_timgad (artifact_id, site_name, artifact_type, age) VALUES (1, 'Timgad', 'Pottery', 1800), (2, 'Timgad', 'Stone', 1900), (3, 'Timgad', 'Ceramic', 1700), (4, 'Timgad', 'Bone', 1600), (5, 'Timgad', 'Stone', 2000);","completion":"SELECT COUNT(*) FROM artifact_timgad WHERE site_name = 'Timgad';"}
{"prompt":"Find the total value of social impact bonds issued by each organization. with given SQL schema CREATE TABLE social_impact_bonds (id INT, organization_name VARCHAR(255), issue_year INT, value FLOAT); INSERT INTO social_impact_bonds (id, organization_name, issue_year, value) VALUES (1, 'Acme Corp', 2018, 2000000), (2, 'XYZ Foundation', 2019, 3000000), (3, 'Global Giving', 2018, 1500000), (4, 'Acme Corp', 2019, 2500000), (5, 'XYZ Foundation', 2018, 1000000);","completion":"SELECT organization_name, SUM(value) as total_value FROM social_impact_bonds GROUP BY organization_name;"}
{"prompt":"List all social impact investments in the Healthcare sector with ESG scores above 80, ordered by investment date and ESGScore, including only investments made by investors from the United Kingdom. with given SQL schema CREATE TABLE SocialImpactInvestments (InvestmentID INT, InvestmentDate DATE, Sector VARCHAR(20), ESGScore INT, InvestorCountry VARCHAR(20)); INSERT INTO SocialImpactInvestments VALUES (1, '2021-01-01', 'Healthcare', 85, 'UK'), (2, '2021-02-01', 'Healthcare', 75, 'Germany'), (3, '2021-03-01', 'Healthcare', 82, 'UK');","completion":"SELECT * FROM SocialImpactInvestments WHERE Sector = 'Healthcare' AND ESGScore > 80 AND InvestorCountry = 'UK' ORDER BY InvestmentDate, ESGScore DESC;"}
{"prompt":"What is the ranking of national security measures for Russia based on the publication date? with given SQL schema CREATE TABLE national_security (id INT, title VARCHAR(255), description TEXT, agency VARCHAR(255), date DATE); INSERT INTO national_security (id, title, description, agency, date) VALUES (1, 'National Cyber Strategy', 'Outlines the approach to protecting the American people and the American way of life in the digital age', 'White House', '2018-09-20'); INSERT INTO national_security (id, title, description, agency, date) VALUES (2, 'Cybersecurity and Infrastructure Security Agency Act of 2018', 'Establishes the Cybersecurity and Infrastructure Security Agency within the Department of Homeland Security', 'Congress', '2018-11-16'); INSERT INTO national_security (id, title, description, agency, date) VALUES (3, 'Russian Military Doctrine', 'Outlines the country\u2019s stance on military security', 'Russian Government', '2014-12-26');","completion":"SELECT title, description, agency, date, ROW_NUMBER() OVER (PARTITION BY agency ORDER BY date DESC) as ranking FROM national_security WHERE agency = 'Russian Government';"}
{"prompt":"Update the genre for a specific song with given SQL schema CREATE TABLE songs (id INT PRIMARY KEY, title VARCHAR(100), artist VARCHAR(50), release_date DATE, genre VARCHAR(20));","completion":"UPDATE songs SET genre = 'rock' WHERE id = 456 AND title = 'Bohemian Rhapsody';"}
{"prompt":"What are the total views for all open education resources in each language and format, ordered by views? with given SQL schema CREATE TABLE open_education_resources (id INT, title VARCHAR(50), format VARCHAR(10), language VARCHAR(20), views INT); INSERT INTO open_education_resources (id, title, format, language, views) VALUES (1, 'Introduction to SQL', 'Video', 'English', 1000);","completion":"SELECT language, format, SUM(views) as total_views FROM open_education_resources GROUP BY language, format ORDER BY total_views DESC;"}
{"prompt":"What is the average salary for employees who identify as female or non-binary, grouped by their department? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Salary DECIMAL(10,2), Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, Gender, Salary, Department) VALUES (1, 'Female', 85000.00, 'IT'), (2, 'Male', 95000.00, 'Marketing'), (3, 'Non-binary', 70000.00, 'HR'), (4, 'Female', 80000.00, 'IT'), (5, 'Male', 90000.00, 'Marketing'), (6, 'Non-binary', 75000.00, 'HR');","completion":"SELECT e.Department, AVG(e.Salary) as AvgSalary FROM Employees e WHERE e.Gender IN ('Female', 'Non-binary') GROUP BY e.Department;"}
{"prompt":"What is the difference in average salary between employees who have and have not completed diversity and inclusion training, by job title and region? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), JobTitle VARCHAR(50), Region VARCHAR(50), Salary INT, CompletedDiversityTraining BOOLEAN); INSERT INTO Employees (EmployeeID, Gender, JobTitle, Region, Salary, CompletedDiversityTraining) VALUES (1, 'Male', 'Manager', 'North', 70000, TRUE), (2, 'Female', 'Manager', 'South', 65000, FALSE), (3, 'Male', 'Developer', 'East', 60000, TRUE), (4, 'Female', 'Developer', 'West', 62000, FALSE);","completion":"SELECT Region, JobTitle, AVG(CASE WHEN CompletedDiversityTraining THEN Salary ELSE NULL END) - AVG(CASE WHEN NOT CompletedDiversityTraining THEN Salary ELSE NULL END) AS Salary_Difference FROM Employees GROUP BY Region, JobTitle;"}
{"prompt":"What is the average number of steals per game for the Lakers? with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Lakers'); CREATE TABLE games (game_id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, home_team_steals INT, away_team_steals INT); INSERT INTO games (game_id, home_team_id, away_team_id, home_team_score, away_team_score, home_team_steals, away_team_steals) VALUES (1, 1, 2, 100, 90, 8, 7), (2, 2, 1, 80, 85, 9, 6), (3, 1, 3, 110, 105, 10, 8), (4, 4, 1, 70, 75, 5, 7);","completion":"SELECT AVG(home_team_steals + away_team_steals) as avg_steals FROM games WHERE home_team_id = (SELECT team_id FROM teams WHERE team_name = 'Lakers') OR away_team_id = (SELECT team_id FROM teams WHERE team_name = 'Lakers');"}
{"prompt":"Which NFL team has the most Super Bowl titles? with given SQL schema CREATE TABLE nfl_teams (team_id INT, name VARCHAR(50), location VARCHAR(50), super_bowl_wins INT); INSERT INTO nfl_teams (team_id, name, location, super_bowl_wins) VALUES (1, 'Pittsburgh Steelers', 'Pittsburgh', 6); INSERT INTO nfl_teams (team_id, name, location, super_bowl_wins) VALUES (2, 'New England Patriots', 'Boston', 6);","completion":"SELECT name FROM nfl_teams WHERE super_bowl_wins = (SELECT MAX(super_bowl_wins) FROM nfl_teams);"}
{"prompt":"What is the total amount of funds allocated for each type of disaster? with given SQL schema CREATE TABLE DisasterFunds (DisasterType VARCHAR(20), FundID INT, AllocatedAmount DECIMAL(10,2)); INSERT INTO DisasterFunds (DisasterType, FundID, AllocatedAmount) VALUES ('Earthquake', 1, 5000.00), ('Flood', 2, 7500.00), ('Hurricane', 3, 10000.00), ('Tornado', 4, 12500.00), ('Volcano', 5, 15000.00);","completion":"SELECT DisasterType, SUM(AllocatedAmount) as TotalFunds FROM DisasterFunds GROUP BY DisasterType;"}
{"prompt":"Who is the contact person for the 'refugee support' sector? with given SQL schema CREATE TABLE contacts (id INT, name TEXT, sector TEXT, email TEXT); INSERT INTO contacts (id, name, sector, email) VALUES (1, 'John Doe', 'refugee support', 'john.doe@example.com'); INSERT INTO contacts (id, name, sector, email) VALUES (2, 'Jane Doe', 'community development', 'jane.doe@example.com');","completion":"SELECT name, email FROM contacts WHERE sector = 'refugee support';"}
{"prompt":"What is the total number of ethical AI projects in the healthcare sector? with given SQL schema CREATE TABLE Ethical_AI (sector VARCHAR(50), projects INT); INSERT INTO Ethical_AI (sector, projects) VALUES ('Healthcare', 100), ('Finance', 150), ('Education', 120), ('Retail', 80);","completion":"SELECT sector, SUM(projects) FROM Ethical_AI WHERE sector = 'Healthcare';"}
{"prompt":"Who are the top 3 suppliers of recycled polyester? with given SQL schema CREATE TABLE suppliers (id INT, name VARCHAR(255), material VARCHAR(255)); INSERT INTO suppliers (id, name, material) VALUES (1, 'Supplier A', 'Recycled Polyester'), (2, 'Supplier B', 'Organic Cotton'), (3, 'Supplier C', 'Recycled Polyester'), (4, 'Supplier D', 'Hemp'), (5, 'Supplier E', 'Recycled Polyester');","completion":"SELECT name FROM suppliers WHERE material = 'Recycled Polyester' GROUP BY name ORDER BY COUNT(*) DESC LIMIT 3;"}
{"prompt":"What is the most popular post category on TikTok in the last week? with given SQL schema CREATE TABLE post_data (post_id INT, category VARCHAR(50), platform VARCHAR(20), date DATE); INSERT INTO post_data (post_id, category, platform, date) VALUES (1, 'dance', 'TikTok', '2022-01-01'), (2, 'comedy', 'TikTok', '2022-01-02'), (3, 'dance', 'Instagram', '2022-01-03');","completion":"SELECT category, COUNT(*) AS count FROM post_data WHERE platform = 'TikTok' AND date >= DATEADD(week, -1, GETDATE()) GROUP BY category ORDER BY count DESC LIMIT 1;"}
{"prompt":"Compute the average financial wellbeing score change for customers from the previous quarter. with given SQL schema CREATE TABLE financial_wellbeing(customer_id INT, score DECIMAL(3, 1), measure_date DATE); INSERT INTO financial_wellbeing VALUES (1, 75, '2022-01-15'), (2, 80, '2022-04-01'), (3, 70, '2022-03-05'), (4, 85, '2022-05-12'), (5, 72, '2022-02-01'), (6, 78, '2022-01-02');","completion":"SELECT AVG(score - LAG(score) OVER (PARTITION BY customer_id ORDER BY measure_date)) AS avg_change FROM financial_wellbeing;"}
{"prompt":"How many clients have taken out socially responsible loans in each country, excluding loans from clients in Saudi Arabia and the UAE? with given SQL schema CREATE TABLE socially_responsible_loans(client_id INT, client_country VARCHAR(25));INSERT INTO socially_responsible_loans(client_id, client_country) VALUES (1, 'Bahrain'), (2, 'UAE'), (3, 'Indonesia'), (4, 'Saudi Arabia'), (5, 'Malaysia'), (6, 'UAE'), (7, 'Indonesia'), (8, 'Saudi Arabia'), (9, 'Malaysia'), (10, 'UAE');","completion":"SELECT client_country, COUNT(DISTINCT client_id) as num_clients FROM socially_responsible_loans WHERE client_country NOT IN ('Saudi Arabia', 'UAE') GROUP BY client_country;"}
{"prompt":"What is the average financial wellbeing program duration in South America by country? with given SQL schema CREATE TABLE programs (id INT PRIMARY KEY, program_name VARCHAR(255), region_id INT, is_financial_wellbeing BOOLEAN, start_date DATE, end_date DATE); CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255)); CREATE VIEW program_views AS SELECT programs.id, programs.program_name, programs.region_id, programs.is_financial_wellbeing, programs.start_date, programs.end_date, regions.country FROM programs INNER JOIN regions ON TRUE;","completion":"SELECT regions.country, AVG(DATEDIFF('day', program_views.start_date, program_views.end_date)) AS avg_duration FROM program_views INNER JOIN regions ON program_views.region_id = regions.id WHERE program_views.is_financial_wellbeing = TRUE AND regions.country IN ('South America') GROUP BY regions.country;"}
{"prompt":"Delete all records from the 'food_recalls' table that have a 'recall_date' before '2020-01-01' with given SQL schema CREATE TABLE food_recalls (id INT PRIMARY KEY, product VARCHAR(100), recall_date DATE);","completion":"DELETE FROM food_recalls WHERE recall_date < '2020-01-01';"}
{"prompt":"How many GMO products were sold in Italy in 2020? with given SQL schema CREATE TABLE sales_gmo (id INT, product VARCHAR(50), is_gmo BOOLEAN, sale_date DATE); INSERT INTO sales_gmo (id, product, is_gmo, sale_date) VALUES (1, 'Corn', true, '2020-01-01'), (2, 'Soybeans', true, '2020-01-02');","completion":"SELECT COUNT(*) FROM sales_gmo WHERE is_gmo = true AND EXTRACT(YEAR FROM sale_date) = 2020 AND country = 'Italy';"}
{"prompt":"How many shipments were made in each country in the last month? with given SQL schema CREATE TABLE Warehouses (WarehouseID INT, WarehouseName VARCHAR(50), Country VARCHAR(50)); CREATE TABLE Shipments (ShipmentID INT, WarehouseID INT, DeliveryTime INT, ShipmentDate DATE);","completion":"SELECT W.Country, COUNT(*) AS ShipmentsInCountry, YEAR(S.ShipmentDate) AS ShipmentYear, MONTH(S.ShipmentDate) AS ShipmentMonth FROM Warehouses W JOIN Shipments S ON W.WarehouseID = S.WarehouseID WHERE S.ShipmentDate >= DATEADD(month, -1, GETDATE()) GROUP BY W.Country, YEAR(S.ShipmentDate), MONTH(S.ShipmentDate);"}
{"prompt":"What is the total quantity of each product shipped from the Tokyo warehouse? with given SQL schema CREATE TABLE Warehouses (WarehouseID int, WarehouseName varchar(255), City varchar(255), Country varchar(255)); INSERT INTO Warehouses (WarehouseID, WarehouseName, City, Country) VALUES (3, 'Tokyo Warehouse', 'Tokyo', 'Japan'); CREATE TABLE Shipments (ShipmentID int, WarehouseID int, ProductName varchar(255), Quantity int, ShippedDate date); INSERT INTO Shipments (ShipmentID, WarehouseID, ProductName, Quantity, ShippedDate) VALUES (3, 3, 'Oranges', 70, '2022-01-03');","completion":"SELECT ProductName, SUM(Quantity) AS TotalQuantity FROM Shipments WHERE WarehouseID = 3 GROUP BY ProductName;"}
{"prompt":"What is the number of traffic accidents in Toronto involving cyclists in the last 3 years, and how many resulted in injuries? with given SQL schema CREATE TABLE traffic_accidents (year INT, location VARCHAR(255), accident_type VARCHAR(255), injury BOOLEAN); INSERT INTO traffic_accidents (year, location, accident_type, injury) VALUES (2019, 'Toronto', 'cyclist', TRUE), (2020, 'Toronto', 'cyclist', FALSE), (2021, 'Toronto', 'cyclist', TRUE);","completion":"SELECT COUNT(*) AS total_accidents, SUM(injury) AS injury_accidents FROM traffic_accidents WHERE location = 'Toronto' AND accident_type = 'cyclist' AND year BETWEEN 2019 AND 2021;"}
{"prompt":"How many graduate students from underrepresented communities are enrolled in STEM programs? with given SQL schema CREATE TABLE Students(StudentID INT, Name VARCHAR(50), Program VARCHAR(50), Community VARCHAR(50)); INSERT INTO Students(StudentID, Name, Program, Community) VALUES (1, 'Alice Johnson', 'Computer Science', 'African American'), (2, 'Bob Brown', 'Physics', 'Hispanic'), (3, 'Charlie Davis', 'Mathematics', 'Native American');","completion":"SELECT COUNT(*) FROM Students WHERE Program LIKE '%STEM%' AND Community IN ('African American', 'Hispanic', 'Native American')"}
{"prompt":"What is the maximum grant amount awarded to any research project in the Chemistry department? with given SQL schema CREATE TABLE grants (id INT, department VARCHAR(10), amount INT); INSERT INTO grants (id, department, amount) VALUES (1, 'Physics', 50000), (2, 'Chemistry', 80000);","completion":"SELECT MAX(amount) FROM grants WHERE department = 'Chemistry';"}
{"prompt":"What is the number of research publications for each student, sorted by the number of publications in descending order? with given SQL schema CREATE TABLE GraduateStudents (StudentID int, StudentName varchar(255)); CREATE TABLE Publications (PublicationID int, StudentID int, Title varchar(255));","completion":"SELECT StudentName, COUNT(*) as NumPublications FROM Publications p JOIN GraduateStudents gs ON p.StudentID = gs.StudentID GROUP BY StudentName ORDER BY NumPublications DESC;"}
{"prompt":"What is the distribution of mental health parity compliance scores for each health equity metric? with given SQL schema CREATE TABLE ParityCompliance (MetricID INT, HealthEquityMetric TEXT, ComplianceScore INT); INSERT INTO ParityCompliance (MetricID, HealthEquityMetric, ComplianceScore) VALUES (1, 'Access to Care', 80), (2, 'Quality of Care', 90), (3, 'Cost of Care', 70);","completion":"SELECT HealthEquityMetric, AVG(ComplianceScore) as Avg_Score, STDDEV(ComplianceScore) as StdDev_Score FROM ParityCompliance GROUP BY HealthEquityMetric;"}
{"prompt":"List the top 3 countries with the most heritage sites and the number of sites for each? with given SQL schema CREATE TABLE heritage_sites (site_id INT, site_name TEXT, country TEXT); INSERT INTO heritage_sites (site_id, site_name, country) VALUES (1, 'Heritage Site 1', 'Italy'), (2, 'Heritage Site 2', 'Italy'), (3, 'Heritage Site 3', 'Germany'), (4, 'Heritage Site 4', 'Spain'), (5, 'Heritage Site 5', 'France');","completion":"SELECT country, COUNT(*) AS num_sites FROM heritage_sites GROUP BY country ORDER BY num_sites DESC LIMIT 3;"}
{"prompt":"What is the percentage of hotels in the EU that have adopted AI technology? with given SQL schema CREATE TABLE hotel_tech (hotel_id INT, hotel_name VARCHAR(255), ai_adoption BOOLEAN); INSERT INTO hotel_tech (hotel_id, hotel_name, ai_adoption) VALUES (1, 'Hotel A', TRUE), (2, 'Hotel B', FALSE), (3, 'Hotel C', TRUE);","completion":"SELECT (COUNT(*) FILTER (WHERE ai_adoption = TRUE) * 100.0 \/ COUNT(*)) FROM hotel_tech WHERE country IN ('EU', 'Europe');"}
{"prompt":"How many species were observed per month in the Tundra Biology Study? with given SQL schema CREATE TABLE TundraBiologyStudy (id INT, year INT, month INT, species_observed INT); INSERT INTO TundraBiologyStudy (id, year, month, species_observed) VALUES (1, 2000, 1, 25), (2, 2000, 2, 28), (3, 2000, 3, 31);","completion":"SELECT month, AVG(species_observed) FROM TundraBiologyStudy GROUP BY year, month HAVING AVG(species_observed) > 25;"}
{"prompt":"What is the average temperature per month in each region in the 'temperature_readings' table? with given SQL schema CREATE TABLE temperature_readings (reading_date DATE, temperature FLOAT, region TEXT);","completion":"SELECT DATE_TRUNC('month', reading_date) AS month, region, AVG(temperature) FROM temperature_readings GROUP BY month, region;"}
{"prompt":"How many traditional musicians are registered in Mexico? with given SQL schema CREATE TABLE traditional_musicians (id INT PRIMARY KEY, name TEXT, age INT, registration_date DATE, country TEXT);","completion":"SELECT COUNT(*) FROM traditional_musicians WHERE country = 'Mexico';"}
{"prompt":"Who are the top 3 contributors to heritage site preservation efforts in Africa? with given SQL schema CREATE TABLE contributors (id INT, name TEXT, country TEXT, amount_donated FLOAT); INSERT INTO contributors (id, name, country, amount_donated) VALUES (1, 'John Smith', 'USA', 5000.00), (2, 'Jane Doe', 'Canada', 4000.00), (3, 'Amina Mohamed', 'Kenya', 8000.00);","completion":"SELECT name FROM contributors ORDER BY amount_donated DESC LIMIT 3;"}
{"prompt":"What is the count of bridges in California with seismic retrofit needs, categorized by bridge type and construction year? with given SQL schema CREATE TABLE Bridges (id INT, state VARCHAR(2), bridge_type VARCHAR(10), construction_year INT, seismic_retrofit_need BOOLEAN); INSERT INTO Bridges (id, state, bridge_type, construction_year, seismic_retrofit_need) VALUES (1, 'CA', 'Beam', 1960, TRUE), (2, 'CA', 'Arch', 1990, FALSE), (3, 'CA', 'Suspension', 2010, TRUE);","completion":"SELECT bridge_type, construction_year, COUNT(*) as count FROM Bridges WHERE state = 'CA' AND seismic_retrofit_need = TRUE GROUP BY bridge_type, construction_year;"}
{"prompt":"What is the maximum resilience score for infrastructure projects in Texas? with given SQL schema CREATE TABLE Infrastructure (ProjectID INT, Location VARCHAR(20), ResilienceScore FLOAT); INSERT INTO Infrastructure (ProjectID, Location, ResilienceScore) VALUES (1, 'Texas', 85);","completion":"SELECT MAX(ResilienceScore) FROM Infrastructure WHERE Location = 'Texas';"}
{"prompt":"Find the average carbon footprint of all 'sustainable_tourism' activities. with given SQL schema CREATE TABLE sustainable_tourism (activity_name VARCHAR(50), carbon_footprint INT); INSERT INTO sustainable_tourism (activity_name, carbon_footprint) VALUES ('Hiking', 5), ('Birdwatching', 3), ('Camping', 7);","completion":"SELECT AVG(carbon_footprint) FROM sustainable_tourism;"}
{"prompt":"What is the average hotel rating for eco-friendly hotels in Japan? with given SQL schema CREATE TABLE hotels (hotel_id INT, name TEXT, country TEXT, stars FLOAT, is_eco_friendly BOOLEAN); INSERT INTO hotels (hotel_id, name, country, stars, is_eco_friendly) VALUES (1, 'Hotel Verde', 'Japan', 4.5, true), (2, 'Green Palace', 'France', 4.2, true);","completion":"SELECT AVG(stars) FROM hotels WHERE is_eco_friendly = true AND country = 'Japan';"}
{"prompt":"What is the total number of marine mammals in the Gulf of Mexico, excluding dolphins and whales? with given SQL schema CREATE TABLE marine_mammals (id INT, species TEXT, count INT, region TEXT);","completion":"SELECT SUM(count) FROM marine_mammals WHERE species NOT IN ('dolphin', 'whale') AND region = 'Gulf of Mexico';"}
{"prompt":"What is the average number of users per media platform in the last month? with given SQL schema CREATE TABLE Users (user_id INT, platform VARCHAR(50), registration_date DATE); INSERT INTO Users (user_id, platform, registration_date) VALUES (1, 'Platform1', '2022-01-01'), (2, 'Platform2', '2022-02-15'), (3, 'Platform1', '2022-03-01');","completion":"SELECT AVG(number_of_users) FROM (SELECT platform, COUNT(*) AS number_of_users FROM Users WHERE registration_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY platform) AS subquery;"}
{"prompt":"List all mining sites and their corresponding labor productivity metrics. with given SQL schema CREATE TABLE mining_sites (id INT, name VARCHAR(20), extraction_volume INT, region VARCHAR(20)); CREATE TABLE labor_productivity (site_id INT, productivity DECIMAL(10, 2));","completion":"SELECT mining_sites.name, labor_productivity.productivity FROM mining_sites JOIN labor_productivity ON mining_sites.id = labor_productivity.site_id;"}
{"prompt":"What is the maximum monthly data usage for broadband subscribers in all regions? with given SQL schema CREATE TABLE subscribers (subscriber_id INT, data_usage FLOAT, region VARCHAR(20)); INSERT INTO subscribers (subscriber_id, data_usage, region) VALUES (1, 25.6, 'Northern'), (2, 32.8, 'Northeast'), (3, 18.9, 'Northern'), (4, 45.6, 'Southern'), (5, 50.0, 'Eastern'); CREATE TABLE maximum_usage (max_usage FLOAT); INSERT INTO maximum_usage (max_usage) VALUES (55.0);","completion":"SELECT MAX(data_usage) FROM subscribers;"}
{"prompt":"What is the minimum data usage for mobile subscribers in Europe? with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, name VARCHAR(50), data_usage FLOAT, continent VARCHAR(20)); INSERT INTO mobile_subscribers (subscriber_id, name, data_usage, continent) VALUES (1, 'John Doe', 30.5, 'Europe'); INSERT INTO mobile_subscribers (subscriber_id, name, data_usage, continent) VALUES (2, 'Jane Smith', 35.8, 'Europe');","completion":"SELECT MIN(data_usage) FROM mobile_subscribers WHERE continent = 'Europe';"}
{"prompt":"Create table for marine protected areas with given SQL schema CREATE TABLE marine_protected_areas (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), size FLOAT, year_established INT);","completion":"CREATE TABLE marine_protected_areas (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), size FLOAT, year_established INT);"}
{"prompt":"What is the conservation status of the 'Giant Pacific Octopus'? with given SQL schema CREATE TABLE species (scientific_name TEXT, common_name TEXT, conservation_status TEXT); INSERT INTO species (scientific_name, common_name, conservation_status) VALUES ('Giant Pacific Octopus', 'Giant Pacific Octopus', 'Least Concern');","completion":"SELECT conservation_status FROM species WHERE common_name = 'Giant Pacific Octopus';"}
{"prompt":"Which countries have the highest and lowest ocean acidity levels? with given SQL schema CREATE TABLE ocean_acidity (country TEXT, avg_ph REAL); INSERT INTO ocean_acidity (country, avg_ph) VALUES ('United States', 7.8), ('Canada', 7.6), ('Mexico', 7.9);","completion":"SELECT country, avg_ph FROM (SELECT country, avg_ph, ROW_NUMBER() OVER (ORDER BY avg_ph DESC) as rnk FROM ocean_acidity) subq WHERE rnk = 1 OR rnk = (SELECT COUNT(*) FROM ocean_acidity) ORDER BY avg_ph;"}
{"prompt":"List the donation amounts and dates for donations made by the donor with ID = 2, in descending order by date. with given SQL schema CREATE TABLE Donations (DonationID int, DonorID int, DonationDate date, DonationAmount decimal(10,2)); INSERT INTO Donations (DonationID, DonorID, DonationDate, DonationAmount) VALUES (1, 1, '2020-01-01', 1000.00), (2, 1, '2020-02-01', 1500.00), (3, 2, '2020-01-01', 2000.00), (4, 2, '2020-02-01', 1000.00), (5, 3, '2020-01-01', 3000.00), (6, 3, '2020-02-01', 2000.00), (7, 3, '2020-03-01', 2000.00);","completion":"SELECT DonationAmount, DonationDate FROM Donations WHERE DonorID = 2 ORDER BY DonationDate DESC;"}
{"prompt":"Update the amount donated by DonorA to 1750.00 with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName TEXT, Country TEXT, Amount DECIMAL(10,2)); INSERT INTO Donors (DonorID, DonorName, Country, Amount) VALUES (1, 'DonorA', 'USA', 1500.00), (2, 'DonorB', 'Canada', 2000.00);","completion":"UPDATE Donors SET Amount = 1750.00 WHERE DonorName = 'DonorA';"}
{"prompt":"Identify the top 3 countries with the highest number of players who have adopted virtual reality technology. with given SQL schema CREATE TABLE CountryData (Country VARCHAR(50), Population INT, VRAdopters INT); INSERT INTO CountryData (Country, Population, VRAdopters) VALUES ('USA', 331002651, 50000), ('China', 1439323776, 25000), ('Canada', 37410003), ('India', 1380004385, 10000);","completion":"SELECT Country, VRAdopters FROM (SELECT Country, VRAdopters, ROW_NUMBER() OVER (ORDER BY VRAdopters DESC) AS RN FROM CountryData JOIN (SELECT PlayerID, VRDevice FROM VRAdoption GROUP BY PlayerID, VRDevice) VR ON CountryData.Country = VR.PlayerCountry) T WHERE RN <= 3"}
{"prompt":"Find the number of times each type of equipment was used in the past month, and the total duration of use. with given SQL schema CREATE TABLE equipment_data (id INT, equipment_type VARCHAR(255), usage_duration INT, timestamp DATETIME); INSERT INTO equipment_data (id, equipment_type, usage_duration, timestamp) VALUES (1, 'Tractor', 120, '2022-01-01 10:00:00');","completion":"SELECT equipment_type, COUNT(*) as use_count, SUM(usage_duration) as total_duration FROM equipment_data WHERE timestamp >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 MONTH) GROUP BY equipment_type;"}
{"prompt":"Identify the total nitrogen levels and farm size for farms using a center pivot irrigation system, located in the Europe region. with given SQL schema CREATE TABLE farm (id INT, name VARCHAR(50), size FLOAT, irrigation_system VARCHAR(20), region VARCHAR(50), PRIMARY KEY(id)); INSERT INTO farm (id, name, size, irrigation_system, region) VALUES (1, 'Farm X', 80.3, 'center pivot', 'Europe'); INSERT INTO farm (id, name, size, irrigation_system, region) VALUES (2, 'Farm Y', 55.8, 'drip', 'Asia'); INSERT INTO farm (id, name, size, irrigation_system, region) VALUES (3, 'Farm Z', 65.1, 'center pivot', 'Europe'); CREATE TABLE nitrogen (id INT, farm_id INT, nitrogen FLOAT, PRIMARY KEY(id)); INSERT INTO nitrogen (id, farm_id, nitrogen) VALUES (1, 1, 33.5); INSERT INTO nitrogen (id, farm_id, nitrogen) VALUES (2, 1, 34.2); INSERT INTO nitrogen (id, farm_id, nitrogen) VALUES (3, 3, 30.8);","completion":"SELECT f.irrigation_system, f.region, SUM(f.size) AS total_area, AVG(n.nitrogen) AS avg_nitrogen FROM farm f INNER JOIN nitrogen n ON f.id = n.farm_id WHERE f.irrigation_system = 'center pivot' AND f.region = 'Europe' GROUP BY f.irrigation_system, f.region;"}
{"prompt":"List the satellite images in the 'satellite_images' table that were taken before June 2021. with given SQL schema CREATE TABLE satellite_images (id INT, image_name VARCHAR(50), capture_date DATE); INSERT INTO satellite_images (id, image_name, capture_date) VALUES (1, 'image1', '2021-07-01'), (2, 'image2', '2021-08-01'), (3, 'image3', '2021-05-01');","completion":"SELECT * FROM satellite_images WHERE capture_date < '2021-06-01';"}
{"prompt":"How many public libraries are there in the state of California? with given SQL schema CREATE TABLE state_facilities (state VARCHAR(20), facility_type VARCHAR(20), count INT); INSERT INTO state_facilities (state, facility_type, count) VALUES ('California', 'Public Library', 123);","completion":"SELECT COUNT(*) FROM state_facilities WHERE state = 'California' AND facility_type = 'Public Library';"}
{"prompt":"Identify the number of public events organized by the department of community services in the city of Toronto. with given SQL schema CREATE SCHEMA gov_data;CREATE TABLE gov_data.public_events (city VARCHAR(20), department VARCHAR(20), events INT); INSERT INTO gov_data.public_events (city, department, events) VALUES ('Toronto', 'Community Services', 25), ('Toronto', 'Parks', 15), ('Toronto', 'Public Libraries', 10);","completion":"SELECT department, SUM(events) as total_events FROM gov_data.public_events WHERE city = 'Toronto' AND department = 'Community Services' GROUP BY department;"}
{"prompt":"Identify REE mining companies that have operations in both the USA and Australia? with given SQL schema CREATE TABLE company_operations (company_name VARCHAR(255), location VARCHAR(255)); INSERT INTO company_operations (company_name, location) VALUES ('Company X', 'USA'), ('Company Y', 'Australia'), ('Company Z', 'Canada'), ('Company A', 'China'), ('Company B', 'Australia'), ('Company C', 'USA'), ('Company D', 'Russia'), ('Company E', 'Brazil');","completion":"SELECT company_name FROM company_operations WHERE location IN ('USA', 'Australia') GROUP BY company_name HAVING COUNT(DISTINCT location) = 2;"}
{"prompt":"What is the average production quantity for Gadolinium in 2017, excluding companies that produced less than 100 units of Terbium the same year? with given SQL schema CREATE TABLE Producers (ProducerID INT PRIMARY KEY, Name TEXT, ProductionYear INT, RareEarth TEXT, Quantity INT);","completion":"SELECT AVG(Quantity) FROM Producers p1 WHERE RareEarth = 'Gadolinium' AND ProductionYear = 2017 AND Quantity > (SELECT SUM(Quantity) FROM Producers p2 WHERE p2.ProducerID = p1.ProducerID AND RareEarth = 'Terbium' AND ProductionYear = 2017) GROUP BY p1.RareEarth, p1.ProductionYear;"}
{"prompt":"Which country produced the most Yttrium in 2020? with given SQL schema CREATE TABLE production_country (year INT, element VARCHAR(10), country VARCHAR(10), quantity INT); INSERT INTO production_country (year, element, country, quantity) VALUES (2020, 'Yttrium', 'China', 8000);","completion":"SELECT element, country, SUM(quantity) as total_quantity FROM production_country WHERE year = 2020 GROUP BY element, country ORDER BY total_quantity DESC LIMIT 1"}
{"prompt":"What is the minimum monthly rent for studio units in the 'affordable' area? with given SQL schema CREATE TABLE min_rent (unit_id INT, area VARCHAR(20), studio BOOLEAN, monthly_rent FLOAT); INSERT INTO min_rent (unit_id, area, studio, monthly_rent) VALUES (1, 'affordable', TRUE, 1000);","completion":"SELECT MIN(monthly_rent) FROM min_rent WHERE area = 'affordable' AND studio = TRUE;"}
{"prompt":"Get the name and installed capacity of the Wind Farms in the USA with the highest capacity with given SQL schema CREATE TABLE wind_farms_us (id INT, name VARCHAR(100), country VARCHAR(50), capacity_mw FLOAT); INSERT INTO wind_farms_us (id, name, country, capacity_mw) VALUES (1, 'Windfarm 1', 'USA', 100.0), (2, 'Windfarm 2', 'USA', 120.0), (3, 'Windfarm 3', 'USA', 150.0);","completion":"SELECT name, capacity_mw FROM wind_farms_us WHERE capacity_mw = (SELECT MAX(capacity_mw) FROM wind_farms_us);"}
{"prompt":"List all solar projects in Spain and their capacities (in MW) with given SQL schema CREATE TABLE project (id INT, name TEXT, country TEXT, type TEXT, capacity INT); INSERT INTO project (id, name, country, type, capacity) VALUES (31, 'Solara', 'Spain', 'Solar', 500), (32, 'Barcelona Solar', 'Spain', 'Solar', 300);","completion":"SELECT * FROM project WHERE country = 'Spain' AND type = 'Solar';"}
{"prompt":"Calculate the year-over-year revenue growth for each restaurant. with given SQL schema CREATE TABLE restaurants (restaurant_id INT, restaurant_name VARCHAR(50), city VARCHAR(50), state VARCHAR(50), revenue FLOAT, year INT); INSERT INTO restaurants (restaurant_id, restaurant_name, city, state, revenue, year) VALUES (1, 'Restaurant A', 'City A', 'State A', 123456.78, 2021);","completion":"SELECT restaurant_name, (revenue - LAG(revenue) OVER (PARTITION BY restaurant_name ORDER BY year)) \/ ABS(LAG(revenue) OVER (PARTITION BY restaurant_name ORDER BY year)) as revenue_growth FROM restaurants;"}
{"prompt":"What is the average revenue earned by each restaurant in the 'Mexican' cuisine category? with given SQL schema CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(50), cuisine VARCHAR(50), revenue INT); INSERT INTO restaurants VALUES (1, 'Asian Fusion', 'Asian', 5000), (2, 'Tuscan Bistro', 'Italian', 7000), (3, 'Baja Coast', 'Mexican', 4000), (4, 'Sushi House', 'Asian', 8000), (5, 'Pizzeria Rustica', 'Italian', 6000), (6, 'Taqueria El Paso', 'Mexican', 4500), (7, 'Mexican Grill', 'Mexican', 5500);","completion":"SELECT name, AVG(revenue) FROM restaurants WHERE cuisine = 'Mexican' GROUP BY name;"}
{"prompt":"What is the total revenue for each menu category in restaurant E for the month of June 2021? with given SQL schema CREATE TABLE Restaurants (RestaurantID int, Name varchar(50));CREATE TABLE Menus (MenuID int, RestaurantID int, MenuCategory varchar(50), TotalRevenue decimal(10,2));","completion":"SELECT M.MenuCategory, SUM(M.TotalRevenue) as TotalRevenuePerCategory FROM Menus M INNER JOIN Restaurants R ON M.RestaurantID = R.RestaurantID WHERE R.Name = 'E' AND MONTH(M.OrderDate) = 6 AND YEAR(M.OrderDate) = 2021 GROUP BY M.MenuCategory;"}
{"prompt":"What is the total revenue generated by restaurants in New York with a seating capacity greater than 100? with given SQL schema CREATE TABLE restaurants (id INT, name TEXT, location TEXT, seating_capacity INT); INSERT INTO restaurants (id, name, location, seating_capacity) VALUES (1, 'Restaurant A', 'New York', 120), (2, 'Restaurant B', 'New York', 80), (3, 'Restaurant C', 'Texas', 200), (4, 'Restaurant D', 'California', 150); CREATE TABLE orders (id INT, restaurant_id INT, revenue DECIMAL(5,2)); INSERT INTO orders (id, restaurant_id, revenue) VALUES (1, 1, 500.00), (2, 1, 700.00), (3, 2, 600.00), (4, 3, 1200.00), (5, 4, 900.00);","completion":"SELECT SUM(revenue) FROM restaurants INNER JOIN orders ON restaurants.id = orders.restaurant_id WHERE seating_capacity > 100 AND location = 'New York';"}
{"prompt":"List all satellites in Low Earth Orbit (LEO) and their respective launch dates. with given SQL schema CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(100), OrbitType VARCHAR(50), LaunchDate DATETIME);","completion":"SELECT s.Name, s.LaunchDate FROM Satellites s WHERE s.OrbitType = 'Low Earth Orbit';"}
{"prompt":"Find the total number of spacecraft launched by each company, grouped by company name and ordered by the total number of spacecraft launched. with given SQL schema CREATE TABLE Space_Missions(id INT, mission_name VARCHAR(50), launch_date DATE, spacecraft_manufacturer VARCHAR(50));","completion":"SELECT spacecraft_manufacturer, COUNT(*) as Total_Spacecraft_Launched FROM Space_Missions GROUP BY spacecraft_manufacturer ORDER BY Total_Spacecraft_Launched DESC;"}
{"prompt":"How many astrophysics research projects have been conducted by ISRO? with given SQL schema CREATE TABLE Astrophysics_Research (id INT, project_name VARCHAR(50), conducting_agency VARCHAR(50)); INSERT INTO Astrophysics_Research (id, project_name, conducting_agency) VALUES (1, 'PALIA', 'ISRO');","completion":"SELECT COUNT(project_name) FROM Astrophysics_Research WHERE conducting_agency = 'ISRO';"}
{"prompt":"How many fans attended home games for each team? with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Atlanta Hawks'), (2, 'Boston Celtics'); CREATE TABLE game_attendance (game_id INT, team_id INT, home_game BOOLEAN, num_fans INT); INSERT INTO game_attendance (game_id, team_id, home_game, num_fans) VALUES (1, 1, true, 15000), (2, 1, false, 8000), (3, 2, true, 20000);","completion":"SELECT t.team_name, SUM(CASE WHEN ga.home_game THEN ga.num_fans ELSE 0 END) as home_game_attendance FROM teams t INNER JOIN game_attendance ga ON t.team_id = ga.team_id GROUP BY t.team_name;"}
{"prompt":"What is the maximum trip distance for each vehicle type? with given SQL schema CREATE TABLE trips (id INT, user_id INT, vehicle_type VARCHAR(20), trip_distance FLOAT, trip_duration INT, departure_time TIMESTAMP, arrival_time TIMESTAMP);INSERT INTO trips (id, user_id, vehicle_type, trip_distance, trip_duration, departure_time, arrival_time) VALUES (9, 101, 'motorcycle', 80.7, 45, '2022-01-06 06:00:00', '2022-01-06 06:45:00');","completion":"SELECT vehicle_type, MAX(trip_distance) as max_distance FROM trips GROUP BY vehicle_type;"}
{"prompt":"How many policyholders have a policy start date within the last 30 days, and what is the total number of policies? with given SQL schema CREATE TABLE policyholders (id INT, policy_start_date DATE); INSERT INTO policyholders (id, policy_start_date) VALUES (1, '2022-01-01'), (2, '2022-01-15'), (3, '2021-12-30');","completion":"SELECT COUNT(DISTINCT id), COUNT(*) FROM policyholders WHERE policy_start_date >= NOW() - INTERVAL 30 DAY;"}
{"prompt":"Identify unions in New York with the highest increase in wage increases in collective bargaining contracts compared to the previous contract. with given SQL schema  CREATE TABLE UnionNegotiations (id INT PRIMARY KEY, union_id INT, negotiation_date DATE); CREATE TABLE CollectiveBargaining (id INT PRIMARY KEY, union_id INT, contract_start DATE, contract_end DATE, wage_increase DECIMAL(5,2)); CREATE TABLE UnionMembers (id INT PRIMARY KEY, name VARCHAR(50), state VARCHAR(2), union_id INT, FOREIGN KEY (union_id) REFERENCES UnionNegotiations(union_id)); ","completion":" SELECT u.name, u.state, c.wage_increase, c.contract_end, (SELECT wage_increase FROM CollectiveBargaining cb WHERE cb.contract_end < c.contract_end AND cb.union_id = c.union_id ORDER BY contract_end DESC LIMIT 1) AS previous_wage_increase FROM UnionMembers u JOIN UnionNegotiations n ON u.union_id = n.union_id JOIN CollectiveBargaining c ON u.union_id = c.union_id WHERE u.state = 'NY' ORDER BY c.wage_increase - (SELECT wage_increase FROM CollectiveBargaining cb WHERE cb.contract_end < c.contract_end AND cb.union_id = c.union_id ORDER BY contract_end DESC LIMIT 1) DESC LIMIT 10; "}
{"prompt":"What is the total number of labor rights advocacy events for each region, by region name? with given SQL schema CREATE TABLE Region (Id INT, Name VARCHAR(50)); INSERT INTO Region (Id, Name) VALUES (1, 'Region A'), (2, 'Region B'), (3, 'Region C'); CREATE TABLE AdvocacyEvents (Id INT, RegionId INT, EventCount INT); INSERT INTO AdvocacyEvents (Id, RegionId, EventCount) VALUES (1, 1, 50), (2, 1, 30), (3, 2, 70), (4, 2, 80), (5, 3, 60), (6, 3, 40);","completion":"SELECT R.Name, SUM(A.EventCount) as TotalEvents FROM Region R JOIN AdvocacyEvents A ON R.Id = A.RegionId GROUP BY R.Name;"}
{"prompt":"Create a view for the top 5 manufacturers with the highest average safety test scores with given SQL schema CREATE TABLE vehicle_safety_testing (id INT PRIMARY KEY, manufacturer VARCHAR(255), model VARCHAR(255), test_score INT);","completion":"CREATE VIEW top_safety_scores AS SELECT manufacturer, AVG(test_score) as avg_score FROM vehicle_safety_testing GROUP BY manufacturer ORDER BY avg_score DESC LIMIT 5;"}
{"prompt":"Delete vessels that have not been inspected in the last 12 months with given SQL schema CREATE TABLE vessel_inspection (vessel_id INT, inspection_date DATE); INSERT INTO vessel_inspection (vessel_id, inspection_date) VALUES (1, '2020-01-01'), (2, '2021-06-15'), (3, '2019-12-20');","completion":"DELETE FROM vessel_inspection WHERE vessel_id IN (SELECT vessel_id FROM vessel_inspection WHERE inspection_date < DATE_SUB(CURDATE(), INTERVAL 12 MONTH));"}
{"prompt":"Find the total number of visitors from Asian countries in the last 2 years. with given SQL schema CREATE TABLE Visitors (id INT, country VARCHAR(50), visit_year INT, gender VARCHAR(10)); CREATE VIEW Asian_Countries AS SELECT 'China' AS country UNION ALL SELECT 'Japan' UNION ALL SELECT 'India';","completion":"SELECT COUNT(*) FROM Visitors INNER JOIN Asian_Countries ON Visitors.country = Asian_Countries.country WHERE visit_year BETWEEN 2020 AND 2021;"}
{"prompt":"List all visitors who have attended the 'Digital Impressionist' installation with given SQL schema CREATE TABLE Visitors (id INT, age INT, gender VARCHAR(255)); CREATE TABLE Interactive_Installations (id INT, name VARCHAR(255), type VARCHAR(255)); CREATE TABLE Interactions (id INT, visitor_id INT, installation_id INT);","completion":"SELECT Visitors.id, Visitors.age, Visitors.gender FROM Visitors JOIN Interactions ON Visitors.id = Interactions.visitor_id WHERE Interactions.installation_id = (SELECT id FROM Interactive_Installations WHERE name = 'Digital Impressionist');"}
{"prompt":"What is the number of visitors from the LGBTQ+ community who visited the museum in 2021? with given SQL schema CREATE TABLE Visitors (id INT, community_identifier VARCHAR(255), visit_date DATE); CREATE TABLE CommunityIdentifiers (id INT, name VARCHAR(255));","completion":"SELECT COUNT(*) FROM Visitors INNER JOIN CommunityIdentifiers ON Visitors.community_identifier = CommunityIdentifiers.name WHERE CommunityIdentifiers.name = 'LGBTQ+ Community' AND Visitors.visit_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"What is the average landfill capacity in megatons in the United States and Canada? with given SQL schema CREATE TABLE LandfillCapacity (country VARCHAR(50), capacity_mt FLOAT);","completion":"SELECT AVG(capacity_mt) FROM LandfillCapacity WHERE country IN ('United States', 'Canada');"}
{"prompt":"What is the change in recycling rate for Australia between the years 2017 and 2018? with given SQL schema CREATE TABLE recycling_rates (country VARCHAR(50), year INT, recycling_rate FLOAT); INSERT INTO recycling_rates (country, year, recycling_rate) VALUES ('Australia', 2017, 0.52), ('Australia', 2018, 0.54);","completion":"SELECT (LAG(recycling_rate, 1) OVER (PARTITION BY country ORDER BY year) - recycling_rate) * 100 FROM recycling_rates WHERE country = 'Australia';"}
{"prompt":"How many droughts were declared in Florida and New York between 2015 and 2020? with given SQL schema CREATE TABLE drought_declarations (state VARCHAR(50), year INT, number_of_droughts INT); INSERT INTO drought_declarations (state, year, number_of_droughts) VALUES ('Florida', 2015, 1), ('Florida', 2016, 2), ('Florida', 2017, 3), ('Florida', 2018, 4), ('Florida', 2019, 5), ('Florida', 2020, 6), ('New York', 2015, 1), ('New York', 2016, 2), ('New York', 2017, 3), ('New York', 2018, 4), ('New York', 2019, 5), ('New York', 2020, 6);","completion":"SELECT state, SUM(number_of_droughts) AS total_droughts FROM drought_declarations WHERE state IN ('Florida', 'New York') AND year BETWEEN 2015 AND 2020 GROUP BY state;"}
{"prompt":"Identify the sector with the highest water usage in the Asian region. with given SQL schema CREATE TABLE water_usage (region VARCHAR(20), sector VARCHAR(20), usage INT); INSERT INTO water_usage (region, sector, usage) VALUES ('Asia', 'Agriculture', 800), ('Asia', 'Domestic', 500), ('Asia', 'Industrial', 1000), ('Africa', 'Agriculture', 600), ('Africa', 'Domestic', 300), ('Africa', 'Industrial', 700);","completion":"SELECT sector, MAX(usage) FROM water_usage WHERE region = 'Asia'"}
{"prompt":"Insert a new record for Arizona in 2021 with a water usage of 8000. with given SQL schema CREATE TABLE water_usage(state VARCHAR(20), year INT, usage FLOAT);","completion":"INSERT INTO water_usage (state, year, usage) VALUES ('Arizona', 2021, 8000);"}
{"prompt":"What is the total water conservation spending for each state in the US? with given SQL schema CREATE TABLE us_conservation (state VARCHAR(255), year INT, spending FLOAT);   INSERT INTO us_conservation (state, year, spending) VALUES ('California', 2010, 2500000), ('California', 2011, 2700000), ('California', 2012, 3000000), ('Texas', 2010, 2000000), ('Texas', 2011, 2200000), ('Texas', 2012, 2400000), ('Florida', 2010, 1800000), ('Florida', 2011, 2000000), ('Florida', 2012, 2200000);","completion":"SELECT state, SUM(spending) FROM us_conservation GROUP BY state;"}
{"prompt":"Identify the most active users in the last week. with given SQL schema CREATE TABLE user_activity (id INT, user_id INT, activity_level INT, activity_date DATE);","completion":"SELECT user_id, AVG(activity_level) as avg_activity_level FROM user_activity WHERE activity_date >= (CURRENT_DATE - INTERVAL '7 days') GROUP BY user_id ORDER BY avg_activity_level DESC;"}
{"prompt":"What is the total duration of workout sessions for users who have completed at least 5 sessions of a specific workout type (e.g. cycling)? with given SQL schema CREATE TABLE workout_sessions_details (id INT, user_id INT, workout_type VARCHAR(20), duration TIME); INSERT INTO workout_sessions_details (id, user_id, workout_type, duration) VALUES (1, 1, 'Cycling', '01:00:00'), (2, 1, 'Yoga', '00:45:00'), (3, 2, 'Cycling', '01:15:00');","completion":"SELECT SUM(duration) FROM workout_sessions_details WHERE workout_type = 'Cycling' AND user_id IN (SELECT user_id FROM workout_sessions_details GROUP BY user_id HAVING COUNT(*) >= 5);"}
{"prompt":"What is the maximum size, in hectares, of rural infrastructure projects in India? with given SQL schema CREATE TABLE rural_infrastructure_projects (id INT, name TEXT, size_ha FLOAT, country TEXT); INSERT INTO rural_infrastructure_projects (id, name, size_ha, country) VALUES (1, 'Project E', 75.6, 'India'); INSERT INTO rural_infrastructure_projects (id, name, size_ha, country) VALUES (2, 'Project F', 98.2, 'India');","completion":"SELECT MAX(size_ha) FROM rural_infrastructure_projects WHERE country = 'India';"}
{"prompt":"What is the total funding (in USD) for rural infrastructure projects in Africa? with given SQL schema CREATE TABLE Rural_Infrastructure_Projects (id INT, project_name TEXT, funding_amount FLOAT, region TEXT); INSERT INTO Rural_Infrastructure_Projects (id, project_name, funding_amount, region) VALUES (1, 'Water Access', 200000.00, 'Africa'), (2, 'Road Upgrade', 300000.00, 'Africa');","completion":"SELECT SUM(funding_amount) FROM Rural_Infrastructure_Projects WHERE region = 'Africa';"}
{"prompt":"What is the total number of satellites manufactured by SpaceTech in 2020? with given SQL schema CREATE TABLE Satellites (id INT, name VARCHAR(100), manufacturer VARCHAR(100), launch_date DATE); INSERT INTO Satellites (id, name, manufacturer, launch_date) VALUES (1, 'Sat1', 'SpaceTech', '2020-01-01'); INSERT INTO Satellites (id, name, manufacturer, launch_date) VALUES (2, 'Sat2', 'SpaceTech', '2019-12-15');","completion":"SELECT COUNT(*) FROM Satellites WHERE manufacturer = 'SpaceTech' AND EXTRACT(YEAR FROM launch_date) = 2020;"}
{"prompt":"How many farms of each type are there, grouped by farm type? with given SQL schema CREATE TABLE farm_count_by_type (farm_id INT, farm_type VARCHAR(255)); INSERT INTO farm_count_by_type (farm_id, farm_type) VALUES (1, 'Pond'), (2, 'Cage'), (3, 'Recirculating'), (4, 'Pond'), (5, 'Cage'), (6, 'Pond'), (7, 'Cage'), (8, 'Recirculating');","completion":"SELECT farm_type, COUNT(*) FROM farm_count_by_type GROUP BY farm_type;"}
{"prompt":"Find the number of unique audience demographics with given SQL schema CREATE TABLE Audience (id INT, name TEXT, age INT, gender TEXT, city TEXT); INSERT INTO Audience (id, name, age, gender, city) VALUES (1, 'John Doe', 25, 'Male', 'New York'), (2, 'Jane Smith', 35, 'Female', 'Los Angeles'), (3, 'Bob Johnson', 45, 'Male', 'Chicago');","completion":"SELECT COUNT(DISTINCT city, age, gender) FROM Audience;"}
{"prompt":"How many visitors attended events by city in 2020? with given SQL schema CREATE TABLE Events (event_id INT, city VARCHAR(50), num_visitors INT, event_date DATE); INSERT INTO Events (event_id, city, num_visitors, event_date) VALUES (1, 'New York', 100, '2020-01-01'), (2, 'London', 150, '2020-02-01'), (3, 'Tokyo', 75, '2020-03-01');","completion":"SELECT city, SUM(num_visitors) AS total_visitors FROM Events WHERE YEAR(event_date) = 2020 GROUP BY city;"}
{"prompt":"What is the number of performances in the 'Performances' table with a duration greater than 60 minutes? with given SQL schema CREATE TABLE Performances (id INT, name VARCHAR(50), date DATE, duration INT); INSERT INTO Performances (id, name, date, duration) VALUES (1, 'Play', '2020-01-01', 90);","completion":"SELECT COUNT(*) FROM Performances WHERE duration > 60;"}
{"prompt":"How many movies were released by Studio Ghibli between 1985 and 2010? with given SQL schema CREATE TABLE Studio_Ghibli (title TEXT, year INTEGER); INSERT INTO Studio_Ghibli (title, year) VALUES ('Movie1', 1986), ('Movie2', 1988), ('Movie3', 1992), ('Movie4', 1997), ('Movie5', 2001), ('Movie6', 2004), ('Movie7', 2008), ('Movie8', 2010);","completion":"SELECT COUNT(*) FROM Studio_Ghibli WHERE year BETWEEN 1985 AND 2010;"}
{"prompt":"What is the minimum number of days to complete a green construction project in Rio de Janeiro with a budget of over $10 million? with given SQL schema CREATE TABLE Green_Project_Timelines (Project_ID INT, City VARCHAR(50), Budget DECIMAL(10,2), Days_To_Complete INT);","completion":"SELECT MIN(Days_To_Complete) FROM Green_Project_Timelines WHERE City = 'Rio de Janeiro' AND Budget > 10000000;"}
{"prompt":"What is the total budget for construction projects in Texas that started in 2016? with given SQL schema CREATE TABLE Project_Budget (id INT, project_name TEXT, state TEXT, start_date DATE, budget INT); INSERT INTO Project_Budget (id, project_name, state, start_date, budget) VALUES (1, 'Highway Expansion', 'Texas', '2016-03-15', 2500000), (2, 'School Addition', 'Texas', '2016-12-31', 1500000);","completion":"SELECT SUM(budget) FROM Project_Budget WHERE state = 'Texas' AND start_date LIKE '2016-%';"}
{"prompt":"How many unique customers made purchases in the state of California in the month of January 2021? with given SQL schema CREATE TABLE customers (id INT, state VARCHAR(50), month INT, year INT, purchase INT); INSERT INTO customers (id, state, month, year, purchase) VALUES (1, 'California', 1, 2021, 1);","completion":"SELECT COUNT(DISTINCT customer_id) FROM (SELECT customer_id FROM purchases WHERE state = 'California' AND month = 1 AND year = 2021) AS subquery;"}
{"prompt":"Delete the view for displaying redundant billing data with given SQL schema CREATE VIEW redundant_billing_view AS SELECT bill_id, attorney_id, amount FROM billing_information WHERE amount < 0;","completion":"DROP VIEW redundant_billing_view;"}
{"prompt":"What is the number of climate communication campaigns launched in each month for the year 2022? with given SQL schema CREATE TABLE climate_communication (campaign_name VARCHAR(255), launch_date DATE);","completion":"SELECT EXTRACT(MONTH FROM launch_date) AS month, COUNT(DISTINCT campaign_name) FROM climate_communication WHERE EXTRACT(YEAR FROM launch_date) = 2022 GROUP BY month;"}
{"prompt":"What are the maximum and minimum R&D expenses for drugs approved in the US? with given SQL schema CREATE TABLE drug_rd_expenses (drug_name TEXT, rd_expenses INTEGER, approval_country TEXT); INSERT INTO drug_rd_expenses (drug_name, rd_expenses, approval_country) VALUES ('DrugX', 300000000, 'US'), ('DrugY', 450000000, 'US'), ('DrugZ', 275000000, 'US'); CREATE TABLE drug_approval (drug_name TEXT, approval_status TEXT, approval_country TEXT); INSERT INTO drug_approval (drug_name, approval_status, approval_country) VALUES ('DrugX', 'approved', 'US'), ('DrugY', 'approved', 'US'), ('DrugW', 'rejected', 'US'), ('DrugZ', 'approved', 'US');","completion":"SELECT MAX(rd_expenses) as max_rd_expenses, MIN(rd_expenses) as min_rd_expenses FROM drug_rd_expenses INNER JOIN drug_approval ON drug_rd_expenses.drug_name = drug_approval.drug_name WHERE drug_approval.approval_status = 'approved' AND drug_approval.approval_country = 'US';"}
{"prompt":"Find the name and age of all patients who have received the flu vaccine. with given SQL schema CREATE TABLE patients (id INT, name TEXT, age INT, flu_vaccine BOOLEAN); INSERT INTO patients (id, name, age, flu_vaccine) VALUES (1, 'John', 65, TRUE); INSERT INTO patients (id, name, age, flu_vaccine) VALUES (2, 'Sarah', 70, FALSE);","completion":"SELECT name, age FROM patients WHERE flu_vaccine = TRUE;"}
{"prompt":"How many flu shots were given in Texas during the month of November in the year 2020? with given SQL schema CREATE TABLE flu_shots (patient_id INT, shot_date DATE, state VARCHAR(2)); INSERT INTO flu_shots (patient_id, shot_date, state) VALUES (1, '2020-11-05', 'TX');","completion":"SELECT COUNT(*) FROM flu_shots WHERE state = 'TX' AND MONTH(shot_date) = 11 AND YEAR(shot_date) = 2020;"}
{"prompt":"What is the average soil pH for each region in the past 3 months? with given SQL schema CREATE TABLE SoilPH (date DATE, soil_pH FLOAT, region VARCHAR(20));","completion":"SELECT region, AVG(soil_pH) OVER(PARTITION BY region ORDER BY date ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as avg_soil_pH FROM SoilPH WHERE date >= DATEADD(month, -3, CURRENT_DATE);"}
{"prompt":"How many employees in 'Accessibility Services' have a master's degree or higher? with given SQL schema CREATE TABLE EmployeeEducation (ID INT, Department TEXT, Degree TEXT); INSERT INTO EmployeeEducation (ID, Department, Degree) VALUES (1, 'Accessibility Services', 'Master''s'), (2, 'IT', 'Bachelor''s'), (3, 'Accessibility Services', 'Doctorate');","completion":"SELECT COUNT(*) FROM EmployeeEducation WHERE Department = 'Accessibility Services' AND Degree IN ('Master''s', 'Doctorate');"}
{"prompt":"Delete the species with the lowest primary productivity value. with given SQL schema CREATE TABLE marine_species (id INT PRIMARY KEY, name VARCHAR(255), conservation_status VARCHAR(255)); INSERT INTO marine_species (id, name, conservation_status) VALUES (1, 'Giant Pacific Octopus', 'Least Concern'); CREATE TABLE oceanography (id INT PRIMARY KEY, species_id INT, primary_productivity INT); INSERT INTO oceanography (id, species_id, primary_productivity) VALUES (1, 1, 50);","completion":"DELETE FROM marine_species m WHERE m.id = (SELECT o.species_id FROM oceanography o JOIN (SELECT species_id, MIN(primary_productivity) AS min_pp FROM oceanography GROUP BY species_id) o2 ON o.species_id = o2.species_id WHERE o.primary_productivity = o2.min_pp);"}
{"prompt":"What are the top 5 warmest seas and their average temperatures? with given SQL schema CREATE TABLE sea_temps (id INTEGER, name VARCHAR(255), avg_temp REAL);","completion":"SELECT name, avg_temp FROM sea_temps ORDER BY avg_temp DESC LIMIT 5;"}
{"prompt":"What is the maximum depth ever recorded for a marine species habitat? with given SQL schema CREATE TABLE species (id INT, name VARCHAR(255), max_habitat_depth FLOAT); INSERT INTO species (id, name, max_habitat_depth) VALUES (1, 'Atlantic Salmon', 100.0), (2, 'Blue Whale', 500.0);","completion":"SELECT MAX(max_habitat_depth) FROM species;"}
{"prompt":"How many decentralized applications were created by developers from Asia in the year 2021? with given SQL schema CREATE TABLE Developers (id INT, name VARCHAR(255), region VARCHAR(255)); CREATE TABLE DApps (id INT, developer_id INT, creation_date DATE); INSERT INTO Developers (id, name, region) VALUES (1, 'DevA', 'Asia'), (2, 'DevB', 'Europe'), (3, 'DevC', 'Asia'); INSERT INTO DApps (id, developer_id, creation_date) VALUES (1, 1, '2021-01-01'), (2, 2, '2021-02-01'), (3, 3, '2021-03-01'), (4, 1, '2021-04-01');","completion":"SELECT COUNT(*) FROM DApps JOIN Developers ON DApps.developer_id = Developers.id WHERE Developers.region = 'Asia' AND DApps.creation_date >= '2021-01-01' AND DApps.creation_date < '2022-01-01';"}
{"prompt":"What are the names and balances of all digital assets with a type of 'ERC20'? with given SQL schema CREATE TABLE digital_assets (name TEXT, balance INTEGER, type TEXT); INSERT INTO digital_assets (name, balance, type) VALUES ('Asset1', 100, 'ERC20'), ('Asset2', 200, 'ERC721');","completion":"SELECT name, balance FROM digital_assets WHERE type = 'ERC20';"}
{"prompt":"What are the top 5 digital assets by market capitalization? with given SQL schema CREATE TABLE digital_assets (asset_id INT, name VARCHAR(100), market_cap DECIMAL(20,2)); INSERT INTO digital_assets (asset_id, name, market_cap) VALUES (1, 'Asset1', 500000), (2, 'Asset2', 350000), (3, 'Asset3', 275000), (4, 'Asset4', 200000), (5, 'Asset5', 150000);","completion":"SELECT name, market_cap FROM digital_assets ORDER BY market_cap DESC LIMIT 5;"}
{"prompt":"What is the average age of artists ('artist_demographics' table) by nationality? with given SQL schema CREATE TABLE artist_demographics (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), nationality VARCHAR(50));","completion":"SELECT nationality, AVG(age) FROM artist_demographics GROUP BY nationality;"}
{"prompt":"What is the total transaction amount for each employee in the Risk Management department? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO employees (id, name, department) VALUES (1, 'John Doe', 'Compliance'), (2, 'Jane Smith', 'Risk Management'); CREATE TABLE transactions (employee_id INT, transaction_amount DECIMAL(10,2)); INSERT INTO transactions (employee_id, transaction_amount) VALUES (1, 200.00), (1, 300.00), (2, 100.00), (2, 400.00);","completion":"SELECT e.name, SUM(t.transaction_amount) as total_transaction_amount FROM employees e JOIN transactions t ON e.id = t.employee_id WHERE e.department = 'Risk Management' GROUP BY e.name;"}
{"prompt":"Update the names of vessels with the word 'Star' in their current name to 'Galaxy'. with given SQL schema CREATE TABLE vessels (id INT, name TEXT); INSERT INTO vessels (id, name) VALUES (1, 'Star Vessel A'); INSERT INTO vessels (id, name) VALUES (2, 'Star Vessel B'); INSERT INTO vessels (id, name) VALUES (3, 'Non-Star Vessel');","completion":"UPDATE vessels SET name = REPLACE(name, 'Star', 'Galaxy') WHERE name LIKE '%Star%';"}
{"prompt":"List the names, types, and last maintenance dates of machines in factories with circular economy initiatives. with given SQL schema CREATE TABLE machines (machine_id INT, name TEXT, type TEXT, last_maintenance DATE); CREATE TABLE factories (factory_id INT, initiative TEXT);","completion":"SELECT machines.name, machines.type, machines.last_maintenance FROM machines INNER JOIN factories ON machines.factory_id = factories.factory_id WHERE factories.initiative = 'circular economy';"}
{"prompt":"What are the intelligence agencies in the Asia-Pacific region? with given SQL schema CREATE TABLE IntelligenceAgencies (Country VARCHAR(255), Agency VARCHAR(255)); INSERT INTO IntelligenceAgencies (Country, Agency) VALUES ('China', 'Ministry of State Security'), ('China', 'National Security Commission'), ('Australia', 'Australian Security Intelligence Organisation'), ('Japan', 'Public Security Intelligence Agency');","completion":"SELECT Agency FROM IntelligenceAgencies WHERE Country IN ('China', 'Australia', 'Japan');"}
{"prompt":"Which genres have the highest average track length? with given SQL schema CREATE TABLE music_genres (id INT, genre VARCHAR(255)); INSERT INTO music_genres (id, genre) VALUES (1, 'Pop'), (2, 'Rock'), (3, 'Jazz'), (4, 'Hip Hop'); CREATE TABLE tracks (id INT, title VARCHAR(255), length DECIMAL(5,2), genre_id INT); INSERT INTO tracks (id, title, length, genre_id) VALUES (1, 'Song 1', 3.45, 1), (2, 'Song 2', 4.20, 2), (3, 'Song 3', 5.12, 3), (4, 'Song 4', 2.85, 4);","completion":"SELECT genre, AVG(length) as avg_length FROM tracks JOIN music_genres ON tracks.genre_id = music_genres.id GROUP BY genre ORDER BY avg_length DESC LIMIT 1;"}
{"prompt":"What is the average donation amount for each program, excluding anonymous donations? with given SQL schema CREATE TABLE donations (id INT, donation_amount DECIMAL(10,2), donation_date DATE, program_name VARCHAR(50)); INSERT INTO donations (id, donation_amount, donation_date, program_name) VALUES (1, 50.00, '2021-01-05', 'Program A'), (2, 100.00, '2021-03-15', 'Program B'), (3, 75.00, '2021-01-20', 'Program A'), (4, 150.00, '2021-02-01', 'Program C'), (5, 200.00, '2021-04-01', 'Program A'); CREATE TABLE programs (id INT, program_name VARCHAR(50)); INSERT INTO programs (id, program_name) VALUES (1, 'Program A'), (2, 'Program B'), (3, 'Program C');","completion":"SELECT p.program_name, AVG(d.donation_amount) AS avg_donation FROM donations d JOIN programs p ON d.program_name = p.program_name WHERE d.donor_name != 'Anonymous' GROUP BY p.program_name;"}
{"prompt":"Insert a new record into the 'fields' table for field 'F-02' with operator 'Chevron' and discovery date '2015-01-01' with given SQL schema CREATE TABLE fields (field_id INT, field_name VARCHAR(255), operator VARCHAR(255), discovery_date DATE);","completion":"INSERT INTO fields (field_id, field_name, operator, discovery_date) VALUES (NULL, 'F-02', 'Chevron', '2015-01-01');"}
{"prompt":"List the names and nationalities of coaches in the 'coaches' table. with given SQL schema CREATE TABLE coaches (coach_id INT, name VARCHAR(50), nationality VARCHAR(30));","completion":"SELECT name, nationality FROM coaches;"}
{"prompt":"Who is the top points scorer for the Lakers? with given SQL schema CREATE TABLE players (player_id INT, player_name VARCHAR(50), team_id INT); INSERT INTO players (player_id, player_name, team_id) VALUES (1, 'James', 5), (2, 'Davis', 5), (3, 'Green', 5); CREATE TABLE games (game_id INT, player_id INT, team_id INT, points INT); INSERT INTO games (game_id, player_id, team_id, points) VALUES (1, 1, 5, 30), (2, 2, 5, 40), (3, 1, 5, 50), (4, 3, 5, 20), (5, 1, 5, 60);","completion":"SELECT player_id, player_name, SUM(points) as total_points FROM games JOIN players ON games.player_id = players.player_id WHERE team_id = 5 GROUP BY player_id ORDER BY total_points DESC LIMIT 1;"}
{"prompt":"Find the average number of refugees per country in 'refugee_data' table? with given SQL schema CREATE TABLE refugee_data (id INT, country VARCHAR(255), num_refugees INT); INSERT INTO refugee_data (id, country, num_refugees) VALUES (1, 'Country1', 1000), (2, 'Country2', 2000), (3, 'Country1', 3000);","completion":"SELECT country, AVG(num_refugees) as avg_refugees FROM refugee_data GROUP BY country;"}
{"prompt":"What is the total number of refugee families supported by each NGO in the last 6 months in Asia? with given SQL schema CREATE TABLE NGOs (NGOID int, NGOName varchar(50)); INSERT INTO NGOs (NGOID, NGOName) VALUES (1, 'Save the Children Asia'), (2, 'Plan International Asia'); CREATE TABLE RefugeeSupport (SupportID int, NGOID int, FamilyID int, SupportDate date); INSERT INTO RefugeeSupport (SupportID, NGOID, FamilyID, SupportDate) VALUES (1, 1, 1, '2022-02-01'), (2, 1, 2, '2022-03-01'), (3, 2, 1, '2022-04-01');","completion":"SELECT NGOName, COUNT(DISTINCT FamilyID) as SupportedFamilies FROM NGOs INNER JOIN RefugeeSupport ON NGOs.NGOID = RefugeeSupport.NGOID WHERE SupportDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND Country = 'Asia' GROUP BY NGOName;"}
{"prompt":"List the names and number of employees of organizations that have participated in digital divide reduction initiatives in the United States and Canada. with given SQL schema CREATE TABLE organizations (organization_id INT, name VARCHAR(50), employees INT, country VARCHAR(50)); INSERT INTO organizations (organization_id, name, employees, country) VALUES (1, 'OrgA', 1000, 'USA'), (2, 'OrgB', 2000, 'Canada'), (3, 'OrgC', 1500, 'USA'), (4, 'OrgD', 2500, 'Canada'); CREATE VIEW digital_divide_initiatives AS SELECT organization_id FROM initiatives WHERE initiative_type = 'digital_divide';","completion":"SELECT o.name, COUNT(d.organization_id) FROM organizations o JOIN digital_divide_initiatives d ON o.organization_id = d.organization_id WHERE o.country IN ('USA', 'Canada') GROUP BY o.name;"}
{"prompt":"Update the production cost of all items in the 'summer 2021' collection with a production cost below 15 to 15. with given SQL schema CREATE TABLE production_costs (item_type VARCHAR(20), collection VARCHAR(20), cost NUMERIC(10,2), quantity INT); INSERT INTO production_costs (item_type, collection, cost, quantity) VALUES ('linen blouse', 'summer 2021', 12.99, 200), ('linen pants', 'summer 2021', 14.99, 150), ('linen shorts', 'summer 2021', 11.99, 100), ('linen skirt', 'summer 2021', 13.99, 125);","completion":"UPDATE production_costs SET cost = 15 WHERE collection = 'summer 2021' AND cost < 15;"}
{"prompt":"What is the total amount spent on recycling programs in Oceania? with given SQL schema CREATE TABLE recycling_programs (id INT, program VARCHAR(100), location VARCHAR(100), amount_spent DECIMAL(10,2)); INSERT INTO recycling_programs (id, program, location, amount_spent) VALUES (1, 'Australia Program', 'Australia', 50000), (2, 'New Zealand Program', 'New Zealand', 30000), (3, 'Fiji Program', 'Fiji', 20000);","completion":"SELECT SUM(amount_spent) FROM recycling_programs WHERE location = 'Oceania';"}
{"prompt":"What is the average number of followers gained per day for influencers in the beauty genre? with given SQL schema CREATE TABLE influencers (influencer_id INT, influencer_name VARCHAR(50), genre VARCHAR(50), followers_start INT, followers_end INT, start_date DATE, end_date DATE); INSERT INTO influencers VALUES (201, 'Influencer P', 'Beauty', 1000, 1500, '2022-01-01', '2022-01-10'), (202, 'Influencer Q', 'Beauty', 2000, 2500, '2022-01-01', '2022-01-15');","completion":"SELECT genre, AVG(followers_gained_per_day) as avg_followers_gained_per_day FROM (SELECT genre, influencer_name, (followers_end - followers_start) \/ DATEDIFF(end_date, start_date) as followers_gained_per_day FROM influencers) AS subquery WHERE genre = 'Beauty';"}
{"prompt":"What was the average advertising spend per post in South America in Q4 2022? with given SQL schema CREATE SCHEMA socialmedia;CREATE TABLE ads (id INT, post_id INT, ad_spend DECIMAL(10,2));INSERT INTO ads (id, post_id, ad_spend) VALUES (1, 1, 25.00), (2, 2, 35.00);CREATE TABLE posts (id INT, post_type VARCHAR(255), region VARCHAR(255), ad_indicator BOOLEAN);INSERT INTO posts (id, post_type, region, ad_indicator) VALUES (1, 'video', 'South America', TRUE), (2, 'image', 'South America', FALSE);","completion":"SELECT AVG(ad_spend) FROM socialmedia.ads INNER JOIN socialmedia.posts ON ads.post_id = posts.id WHERE posts.region = 'South America' AND EXTRACT(MONTH FROM ads.timestamp) BETWEEN 10 AND 12 AND posts.ad_indicator = TRUE;"}
{"prompt":"How many customers in Asia have purchased sustainable fabrics? with given SQL schema CREATE TABLE Customers (customer_id INT, customer_name VARCHAR(50), customer_country VARCHAR(50)); CREATE TABLE Purchases (purchase_id INT, purchase_date DATE, customer_id INT, fabric_id INT); INSERT INTO Customers (customer_id, customer_name, customer_country) VALUES (1, 'John Smith', 'China'), (2, 'Jane Doe', 'Japan'), (3, 'Jim Brown', 'South Korea'); INSERT INTO Purchases (purchase_id, purchase_date, customer_id, fabric_id) VALUES (1, '2021-01-01', 1, 1), (2, '2021-01-02', 2, 2), (3, '2021-01-03', 3, 3);","completion":"SELECT COUNT(*) FROM Customers c INNER JOIN Purchases p ON c.customer_id = p.customer_id WHERE c.customer_country = 'Asia';"}
{"prompt":"What is the maximum consecutive number of days with a financial wellbeing score below 60 for each customer? with given SQL schema CREATE TABLE customer_scores (customer_id INT, score_date DATE, financial_wellbeing_score INT); INSERT INTO customer_scores (customer_id, score_date, financial_wellbeing_score) VALUES (1, '2021-01-01', 65), (1, '2021-01-02', 60), (1, '2021-01-03', 55), (1, '2021-01-04', 60), (2, '2021-01-01', 70), (2, '2021-01-02', 75), (2, '2021-01-03', 80), (2, '2021-01-04', 85);","completion":"SELECT customer_id, MAX(consecutive_below_60) FROM (SELECT customer_id, score_date, financial_wellbeing_score, COUNT(*) FILTER (WHERE financial_wellbeing_score < 60) OVER (PARTITION BY customer_id ORDER BY score_date ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) AS consecutive_below_60 FROM customer_scores) subquery GROUP BY customer_id;"}
{"prompt":"What is the total number of volunteers for each nationality? with given SQL schema CREATE TABLE Volunteers (VolunteerID int, VolunteerName varchar(50), VolunteerNationality varchar(50), VolunteerSignUpDate date); INSERT INTO Volunteers (VolunteerID, VolunteerName, VolunteerNationality, VolunteerSignUpDate) VALUES (1, 'Sophia Garcia', 'Mexican', '2021-05-10'), (2, 'Hamza Ahmed', 'Pakistani', '2021-03-22'), (3, 'Lea Kim', 'South Korean', '2021-07-18');","completion":"SELECT VolunteerNationality, COUNT(*) as TotalVolunteers FROM Volunteers GROUP BY VolunteerNationality;"}
{"prompt":"List all suppliers who provide vegan products, sorted by country with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT, vegan BOOLEAN, supplier_id INT); INSERT INTO products (product_id, product_name, vegan, supplier_id) VALUES (1, 'Tofu', true, 1), (2, 'Carrots', true, 1), (3, 'Beef', false, 2), (4, 'Chicken', false, 3);","completion":"SELECT DISTINCT supplier_id, country FROM products JOIN suppliers ON products.supplier_id = suppliers.supplier_id WHERE vegan = true ORDER BY country;"}
{"prompt":"What was the total weight of shipments from Canada to the United States in January 2021? with given SQL schema CREATE TABLE shipments (id INT, weight FLOAT, origin VARCHAR(255), destination VARCHAR(255), shipped_at TIMESTAMP); INSERT INTO shipments (id, weight, origin, destination, shipped_at) VALUES (1, 500.0, 'Canada', 'United States', '2021-01-02 10:30:00'), (2, 700.0, 'Canada', 'United States', '2021-01-05 15:45:00');","completion":"SELECT SUM(weight) FROM shipments WHERE origin = 'Canada' AND destination = 'United States' AND shipped_at >= '2021-01-01' AND shipped_at < '2021-02-01';"}
{"prompt":"Which biosensors were developed by 'BioCorp'? with given SQL schema CREATE TABLE Biosensor (biosensor_id INT, name TEXT, developer TEXT); INSERT INTO Biosensor (biosensor_id, name, developer) VALUES (1, 'BS1', 'BioCorp'), (2, 'BS2', 'BioInnov'), (3, 'BS3', 'BioCorp');","completion":"SELECT name FROM Biosensor WHERE developer = 'BioCorp';"}
{"prompt":"List the top 5 states with the highest percentage of public participation with given SQL schema CREATE TABLE State (id INT, name VARCHAR(50), population INT, participation DECIMAL(5,2)); INSERT INTO State (id, name, population, participation) VALUES (1, 'California', 39512223, 0.12); INSERT INTO State (id, name, population, participation) VALUES (2, 'Texas', 29528404, 0.15);","completion":"SELECT State.name, ROUND(State.participation * 100, 2) AS participation_percentage FROM State ORDER BY participation_percentage DESC LIMIT 5;"}
{"prompt":"Find the average annual research funding for each department in the College of Arts and Humanities, from 2015 to 2020. Order the results by the average annual funding in ascending order. with given SQL schema CREATE TABLE ArtsFunding (id INT, department VARCHAR(255), year INT, funding DECIMAL(10,2));","completion":"SELECT department, AVG(funding) as avg_annual_funding FROM ArtsFunding WHERE department LIKE 'Arts%' AND year BETWEEN 2015 AND 2020 GROUP BY department ORDER BY avg_annual_funding ASC;"}
{"prompt":"What is the total number of renewable energy projects in the renewable_energy schema? with given SQL schema CREATE SCHEMA IF NOT EXISTS renewable_energy; CREATE TABLE IF NOT EXISTS renewable_energy.solar_panels (  panel_id INT,   installed_capacity FLOAT,   PRIMARY KEY (panel_id)); CREATE TABLE IF NOT EXISTS renewable_energy.wind_turbines (  turbine_id INT,   installed_capacity FLOAT,   PRIMARY KEY (turbine_id)); INSERT INTO renewable_energy.solar_panels (panel_id, installed_capacity) VALUES (1, 1.2), (2, 2.1), (3, 3.0); INSERT INTO renewable_energy.wind_turbines (turbine_id, installed_capacity) VALUES (1, 2.5), (2, 3.5), (3, 4.5);","completion":"SELECT SUM(s.installed_capacity + w.installed_capacity) FROM renewable_energy.solar_panels s CROSS JOIN renewable_energy.wind_turbines w;"}
{"prompt":"What is the total number of language access programs by hospital type? with given SQL schema CREATE TABLE language_access (hospital_type VARCHAR(255), programs INT); INSERT INTO language_access (hospital_type, programs) VALUES ('Teaching', 15), ('Community', 10), ('Rural', 8), ('Urban', 12);","completion":"SELECT hospital_type, SUM(programs) FROM language_access GROUP BY hospital_type;"}
{"prompt":"Insert a new record into the 'tour_operators' table with given SQL schema CREATE TABLE tour_operators (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), sustainable_tourism BOOLEAN);","completion":"INSERT INTO tour_operators (id, name, country, sustainable_tourism) VALUES (1, 'EcoTravel Peru', 'Peru', true);"}
{"prompt":"What is the total revenue generated by eco-friendly hotels in New York? with given SQL schema CREATE TABLE hotel_revenue (hotel_id INT, revenue INT, is_eco_friendly BOOLEAN); INSERT INTO hotel_revenue (hotel_id, revenue, is_eco_friendly) VALUES (1, 500000, true), (2, 600000, false);","completion":"SELECT SUM(revenue) FROM hotel_revenue WHERE is_eco_friendly = true AND city = 'New York';"}
{"prompt":"What is the maximum revenue of online travel agencies in Australia in the past year? with given SQL schema CREATE TABLE australian_agencies (agency_id INT, country TEXT, revenue FLOAT, year INT); INSERT INTO australian_agencies (agency_id, country, revenue, year) VALUES (1, 'Australia', 120000, 2021), (2, 'Australia', 150000, 2022), (3, 'Australia', 170000, 2022);","completion":"SELECT MAX(revenue) FROM australian_agencies WHERE country = 'Australia' AND year = 2021;"}
{"prompt":"What is the total food and beverage revenue last month for hotels in 'Bangkok'? with given SQL schema CREATE TABLE revenue (hotel_id INT, revenue_source VARCHAR(50), revenue INT, revenue_date DATE); INSERT INTO revenue (hotel_id, revenue_source, revenue, revenue_date) VALUES (5, 'Room revenue', 12000, '2022-03-01'), (5, 'Food and beverage', 4000, '2022-03-02'), (5, 'Other revenue', 1000, '2022-03-03'); CREATE TABLE hotels (hotel_id INT, city VARCHAR(50)); INSERT INTO hotels (hotel_id, city) VALUES (5, 'Bangkok'); CREATE TABLE dates (date DATE); INSERT INTO dates (date) VALUES ('2022-03-01'), ('2022-03-02'), ('2022-03-03');","completion":"SELECT SUM(revenue) FROM revenue JOIN hotels ON revenue.hotel_id = hotels.hotel_id JOIN dates ON revenue.revenue_date = dates.date WHERE hotels.city = 'Bangkok' AND revenue_source = 'Food and beverage' AND dates.date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"What is the total revenue for the 'virtual tours' feature? with given SQL schema CREATE TABLE features (id INT, name TEXT, price FLOAT); INSERT INTO features (id, name, price) VALUES (1, 'Virtual tours', 10), (2, 'Concierge service', 20), (3, 'Room service', 30);","completion":"SELECT SUM(price) FROM features WHERE name = 'Virtual tours';"}
{"prompt":"What is the average age of patients who received cognitive behavioral therapy (CBT) in the state of California? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender TEXT, state TEXT); INSERT INTO patients (patient_id, age, gender, state) VALUES (1, 35, 'Female', 'California'); INSERT INTO patients (patient_id, age, gender, state) VALUES (2, 45, 'Male', 'Texas'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment TEXT, date DATE); INSERT INTO treatments (treatment_id, patient_id, treatment, date) VALUES (1, 1, 'CBT', '2021-01-01'); INSERT INTO treatments (treatment_id, patient_id, treatment, date) VALUES (2, 2, 'Medication', '2021-01-02');","completion":"SELECT AVG(patients.age) FROM patients INNER JOIN treatments ON patients.patient_id = treatments.patient_id WHERE treatments.treatment = 'CBT' AND patients.state = 'California';"}
{"prompt":"What is the number of patients who received CBT in each region? with given SQL schema CREATE TABLE patients (id INT, region VARCHAR(255), country VARCHAR(255)); INSERT INTO patients (id, region, country) VALUES (1, 'North', 'USA'), (2, 'South', 'USA'), (3, 'North', 'Canada'); CREATE TABLE therapy (patient_id INT, therapy_type VARCHAR(255)); INSERT INTO therapy (patient_id, therapy_type) VALUES (1, 'CBT'), (2, 'CBT'), (3, 'DBT');","completion":"SELECT region, COUNT(*) as patient_count FROM patients JOIN therapy ON patients.id = therapy.patient_id WHERE therapy_type = 'CBT' GROUP BY region;"}
{"prompt":"Delete all rows in the comments table with a rating of 1. with given SQL schema CREATE TABLE comments (id INT, article_id INT, user VARCHAR(255), comment TEXT, rating INT);","completion":"DELETE FROM comments WHERE rating = 1;"}
{"prompt":"Delete all orders with total less than $10.00 with given SQL schema CREATE TABLE orders (order_id INT, customer_id INT, order_date DATE, total DECIMAL(5,2));","completion":"DELETE FROM orders WHERE total < 10.00;"}
{"prompt":"What is the average time taken for contract negotiations in the Middle East region? with given SQL schema CREATE TABLE contract_negotiations(id INT, region VARCHAR(20), negotiation_duration INT);","completion":"SELECT AVG(negotiation_duration) FROM contract_negotiations WHERE region = 'Middle East';"}
{"prompt":"List all environmental impact assessments for mining operations in Africa. with given SQL schema CREATE TABLE mining_operation (id INT, name VARCHAR(255), location VARCHAR(255));CREATE TABLE environmental_assessment (id INT, mining_operation_id INT, date DATE, impact VARCHAR(255)); INSERT INTO mining_operation (id, name, location) VALUES (1, 'African Gold', 'Ghana'); INSERT INTO mining_operation (id, name, location) VALUES (2, 'Diamond Mining', 'Botswana'); INSERT INTO environmental_assessment (id, mining_operation_id, date, impact) VALUES (1, 1, '2020-01-01', 'Water pollution');","completion":"SELECT mining_operation.name, environmental_assessment.date, environmental_assessment.impact FROM mining_operation JOIN environmental_assessment ON mining_operation.id = environmental_assessment.mining_operation_id WHERE mining_operation.location = 'Africa';"}
{"prompt":"What is the average age of employees working in the 'Mining Operations' department? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), Department VARCHAR(50), Age INT); INSERT INTO Employees (EmployeeID, Name, Department, Age) VALUES (1, 'John Doe', 'Mining Operations', 35); INSERT INTO Employees (EmployeeID, Name, Department, Age) VALUES (2, 'Jane Smith', 'Mining Operations', 40);","completion":"SELECT AVG(Age) FROM Employees WHERE Department = 'Mining Operations';"}
{"prompt":"Which mines had more than 10 accidents in 2020? with given SQL schema CREATE TABLE accident (id INT, mine_id INT, date DATE, description TEXT); INSERT INTO accident (id, mine_id, date, description) VALUES (1, 1, '2020-01-01', 'Equipment malfunction'), (2, 2, '2020-02-01', 'Power outage');","completion":"SELECT mine_id FROM accident WHERE date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY mine_id HAVING COUNT(*) > 10;"}
{"prompt":"What is the average data usage per mobile subscriber in each state? with given SQL schema CREATE TABLE mobile_subscriber_data (subscriber_id INT, state VARCHAR(20), data_usage FLOAT); INSERT INTO mobile_subscriber_data (subscriber_id, state, data_usage) VALUES (1, 'California', 500), (2, 'Texas', 600), (3, 'Florida', 700);","completion":"SELECT state, AVG(data_usage) AS avg_data_usage FROM mobile_subscriber_data GROUP BY state;"}
{"prompt":"What is the minimum data usage for postpaid mobile customers in the city of Detroit? with given SQL schema CREATE TABLE postpaid_mobile (customer_id INT, data_usage FLOAT, city VARCHAR(20)); INSERT INTO postpaid_mobile (customer_id, data_usage, city) VALUES (1, 2.5, 'Detroit'), (2, 3.2, 'Detroit'), (3, 1.8, 'Detroit');","completion":"SELECT MIN(data_usage) FROM postpaid_mobile WHERE city = 'Detroit';"}
{"prompt":"What is the total number of articles published by each author in a specific year and month from the 'investigative_reports' table? with given SQL schema CREATE TABLE investigative_reports (id INT, title VARCHAR(255), author VARCHAR(255), publication_date DATE);","completion":"SELECT author, EXTRACT(YEAR FROM publication_date) as year, EXTRACT(MONTH FROM publication_date) as month, COUNT(*) as total_articles FROM investigative_reports WHERE EXTRACT(YEAR FROM publication_date) = 2021 AND EXTRACT(MONTH FROM publication_date) = 12 GROUP BY author, year, month;"}
{"prompt":"What is the total word count for news articles, grouped by the day they were published? with given SQL schema CREATE TABLE News (news_id INT, title TEXT, word_count INT, publish_date DATE); INSERT INTO News (news_id, title, word_count, publish_date) VALUES (1, 'Article1', 500, '2023-02-22'), (2, 'Article2', 300, '2023-02-23'), (3, 'Article3', 600, '2023-02-22');","completion":"SELECT DATE(publish_date) as publish_day, SUM(word_count) as total_word_count FROM News GROUP BY publish_day;"}
{"prompt":"What is the average playtime for players who have played the game 'Shooter' and are older than 20? with given SQL schema CREATE TABLE PlayerGameData (PlayerID INT, Age INT, Game VARCHAR(20), Playtime INT); INSERT INTO PlayerGameData (PlayerID, Age, Game, Playtime) VALUES (1, 22, 'Shooter', 30), (2, 25, 'Shooter', 50), (3, 28, 'Racing', 70);","completion":"SELECT AVG(Playtime) FROM PlayerGameData WHERE Game = 'Shooter' AND Age > 20;"}
{"prompt":"How many times has each type of maintenance been performed on the farming equipment in the past month? with given SQL schema CREATE TABLE maintenance_log (equipment_id INTEGER, maintenance_type TEXT, maintenance_date DATE);","completion":"SELECT maintenance_type, COUNT(*) as maintenance_count FROM maintenance_log WHERE maintenance_date >= DATEADD(month, -1, CURRENT_DATE) GROUP BY maintenance_type;"}
{"prompt":"What is the total area of corn fields in the United States? with given SQL schema CREATE TABLE if NOT EXISTS crop_planting_2 (id int, crop varchar(50), planting_area float, country varchar(50)); INSERT INTO crop_planting_2 (id, crop, planting_area, country) VALUES (1, 'Corn', 80000, 'United States');","completion":"SELECT SUM(planting_area) FROM crop_planting_2 WHERE crop = 'Corn' AND country = 'United States';"}
{"prompt":"How many public libraries are there in each region? with given SQL schema CREATE TABLE Libraries (Region TEXT, NumLibraries INTEGER); INSERT INTO Libraries (Region, NumLibraries) VALUES ('North', 5), ('South', 7), ('East', 6), ('West', 4);","completion":"SELECT Region, NumLibraries FROM Libraries;"}
{"prompt":"What was the total production of Europium and Gadolinium in 2018? with given SQL schema CREATE TABLE Europium_Production (Year INT, Quantity INT); INSERT INTO Europium_Production (Year, Quantity) VALUES (2018, 1200); CREATE TABLE Gadolinium_Production (Year INT, Quantity INT); INSERT INTO Gadolinium_Production (Year, Quantity) VALUES (2018, 1500);","completion":"SELECT SUM(Quantity) FROM Europium_Production WHERE Year = 2018; SELECT SUM(Quantity) FROM Gadolinium_Production WHERE Year = 2018;"}
{"prompt":"How many ethically sourced products are sold in each state? with given SQL schema CREATE TABLE States (state_id INT, state_name VARCHAR(20)); INSERT INTO States (state_id, state_name) VALUES (1, 'California'), (2, 'Texas'), (3, 'Florida'), (4, 'New York');","completion":"SELECT S.state_name, COUNT(DISTINCT EP.product_id) FROM Ethical_Products EP JOIN Sales S ON EP.product_id = S.product_id GROUP BY S.state_name HAVING is_ethically_sourced = true;"}
{"prompt":"What are the names and prices of all products that are not made in the US and are not on sale? with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT, price DECIMAL, country_of_manufacture TEXT, is_on_sale BOOLEAN); INSERT INTO products (product_id, product_name, price, country_of_manufacture, is_on_sale) VALUES (1, 'Regular Shirt', 25.99, 'Canada', FALSE);","completion":"SELECT product_name, price FROM products WHERE country_of_manufacture != 'United States' AND is_on_sale = FALSE;"}
{"prompt":"Who are the top 3 customers in terms of total value of ethical fashion purchases in 2020? with given SQL schema CREATE TABLE customers (id INT, customer_name VARCHAR(50), total_spent DECIMAL(10, 2)); CREATE TABLE ethical_fashion_purchases (id INT, purchase_id INT, customer_id INT, purchase_value DECIMAL(10, 2)); INSERT INTO customers (id, customer_name, total_spent) VALUES (1, 'EcoShopper', 1500.00), (2, 'GreenBuyer', 2000.00), (3, 'SustainableSpender', 2500.00); INSERT INTO ethical_fashion_purchases (id, purchase_id, customer_id, purchase_value) VALUES (1, 10, 1, 100.00), (2, 11, 1, 150.00), (3, 12, 2, 200.00), (4, 13, 2, 300.00), (5, 14, 3, 500.00);","completion":"SELECT customer_name, SUM(purchase_value) FROM customers JOIN ethical_fashion_purchases ON customers.id = ethical_fashion_purchases.customer_id GROUP BY customer_name ORDER BY SUM(purchase_value) DESC LIMIT 3;"}
{"prompt":"Who are the top 5 vendors with the highest revenue from circular supply chain products? with given SQL schema CREATE TABLE vendors (vendor_id INT, name TEXT); CREATE TABLE sales (sale_id INT, vendor_id INT, product_id INT, price DECIMAL(5,2)); INSERT INTO vendors (vendor_id, name) VALUES (1, 'Vendor A'), (2, 'Vendor B'), (3, 'Vendor C'), (4, 'Vendor D'), (5, 'Vendor E'); INSERT INTO sales (sale_id, vendor_id, product_id, price) VALUES (1, 1, 1, 20.99), (2, 1, 3, 75.00), (3, 2, 2, 50.00), (4, 3, 1, 20.99), (5, 3, 3, 75.00), (6, 4, 2, 50.00), (7, 5, 3, 75.00); CREATE TABLE circular_supply_chain_products (product_id INT); INSERT INTO circular_supply_chain_products (product_id) VALUES (1), (3);","completion":"SELECT vendors.name, SUM(sales.price) FROM vendors INNER JOIN sales ON vendors.vendor_id = sales.vendor_id INNER JOIN circular_supply_chain_products ON sales.product_id = circular_supply_chain_products.product_id GROUP BY vendors.name ORDER BY SUM(sales.price) DESC LIMIT 5;"}
{"prompt":"What is the average number of moons for planets in our solar system? with given SQL schema CREATE TABLE SolarSystem (Planet VARCHAR(50), Moons INT); INSERT INTO SolarSystem (Planet, Moons) VALUES ('Mercury', 0), ('Venus', 0), ('Earth', 1), ('Mars', 2), ('Jupiter', 79), ('Saturn', 82), ('Uranus', 27), ('Neptune', 14);","completion":"SELECT AVG(Moons) FROM SolarSystem WHERE Moons > 0;"}
{"prompt":"What is the total cost of Mars missions led by each country? with given SQL schema CREATE TABLE missions (mission_name VARCHAR(50), country VARCHAR(50), cost INT); INSERT INTO missions (mission_name, country, cost) VALUES ('Mars Pathfinder', 'USA', 265000000), ('Mars Curiosity Rover', 'USA', 2800000000), ('Mars Express', 'Europe', 300000000);","completion":"SELECT country, SUM(cost) as total_mars_cost FROM missions WHERE mission_name LIKE '%Mars%' GROUP BY country ORDER BY total_mars_cost DESC;"}
{"prompt":"Update the severity score of the vulnerability assessment with ID 2 to 4. with given SQL schema CREATE TABLE vulnerability_assessments (id INT, name VARCHAR(255), last_assessment_date DATE, severity_score INT); INSERT INTO vulnerability_assessments (id, name, last_assessment_date, severity_score) VALUES (1, 'Vulnerability Assessment 1', '2021-11-01', 5), (2, 'Vulnerability Assessment 2', '2021-12-01', 3), (3, 'Vulnerability Assessment 3', '2021-12-10', 7);","completion":"UPDATE vulnerability_assessments SET severity_score = 4 WHERE id = 2;"}
{"prompt":"What is the average severity score of security incidents in the retail sector? with given SQL schema CREATE TABLE security_incidents (id INT, sector VARCHAR(20), severity FLOAT); INSERT INTO security_incidents (id, sector, severity) VALUES (1, 'Retail', 6.5);","completion":"SELECT AVG(severity) FROM security_incidents WHERE sector = 'Retail';"}
{"prompt":"Obtain the total number of policies issued in 'Q2 2021' with given SQL schema CREATE TABLE policies (id INT, issue_date DATE);","completion":"SELECT COUNT(*) FROM policies WHERE issue_date BETWEEN '2021-04-01' AND '2021-06-30';"}
{"prompt":"What is the average number of workplace safety incidents for unions in the 'services' sector that have more than 2000 members? with given SQL schema CREATE TABLE union_stats (id INT, union_name VARCHAR(30), sector VARCHAR(20), num_members INT, num_safety_incidents INT); INSERT INTO union_stats (id, union_name, sector, num_members, num_safety_incidents) VALUES (1, 'Union A', 'services', 3000, 15), (2, 'Union B', 'education', 2000, 8), (3, 'Union C', 'services', 1000, 2), (4, 'Union D', 'technology', 2500, 10);","completion":"SELECT AVG(num_safety_incidents) FROM union_stats WHERE sector = 'services' AND num_members > 2000;"}
{"prompt":"What is the maximum contract length for 'Transportation' union collective bargaining agreements? with given SQL schema CREATE TABLE CollectiveBargaining (agreement_id INT, union_id INT, terms TEXT, contract_length INT); CREATE TABLE Unions (union_id INT, industry TEXT);","completion":"SELECT MAX(CollectiveBargaining.contract_length) FROM CollectiveBargaining INNER JOIN Unions ON CollectiveBargaining.union_id = Unions.union_id WHERE Unions.industry = 'Transportation';"}
{"prompt":"Add a new vessel 'Yamato' with maximum speed 32.7 knots to the 'vessel_performance' table with given SQL schema CREATE TABLE IF NOT EXISTS vessel_performance (id INT PRIMARY KEY, vessel_name VARCHAR(255), maximum_speed DECIMAL(5,2));","completion":"INSERT INTO vessel_performance (id, vessel_name, maximum_speed) VALUES (1, 'Yamato', 32.7);"}
{"prompt":"What is the average age of museum members from the Asia-Pacific region? with given SQL schema CREATE TABLE members(member_id INT, name VARCHAR(50), age INT, member_region VARCHAR(50)); INSERT INTO members (member_id, name, age, member_region) VALUES (1, 'John Doe', 25, 'North America'), (2, 'Jane Smith', 30, 'Europe'), (3, 'Alice Johnson', 35, 'Asia-Pacific');","completion":"SELECT AVG(age) FROM members WHERE member_region = 'Asia-Pacific';"}
{"prompt":"What is the minimum heart rate for each member in the past year? with given SQL schema CREATE TABLE member_data(id INT, heart_rate INT, registration_date DATE); INSERT INTO member_data(id, heart_rate, registration_date) VALUES (1,70,'2021-01-02'),(2,80,'2021-03-14'),(3,65,'2021-05-29'),(4,90,'2021-07-15'),(5,75,'2021-10-01'),(6,85,'2021-12-18');","completion":"SELECT id, MIN(heart_rate) FROM member_data WHERE registration_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY id;"}
{"prompt":"How many agricultural innovations were introduced between 2018 and 2020? with given SQL schema CREATE TABLE agri_innovations (id INT, innovation_name VARCHAR(255), introduction_year INT); INSERT INTO agri_innovations (id, innovation_name, introduction_year) VALUES (1, 'Precision Agriculture', 2018), (2, 'Drip Irrigation', 2019), (3, 'Vertical Farming', 2021);","completion":"SELECT COUNT(*) FROM agri_innovations WHERE introduction_year BETWEEN 2018 AND 2020;"}
{"prompt":"List the top 5 aircraft models with the most flight hours in the Southwest region. with given SQL schema CREATE TABLE Flight_Hours (aircraft_model VARCHAR(255), region VARCHAR(255), flight_hours INT); INSERT INTO Flight_Hours (aircraft_model, region, flight_hours) VALUES ('B737', 'Southwest', 5000), ('A320', 'Northeast', 6000), ('B737', 'Southwest', 5500);","completion":"SELECT aircraft_model, SUM(flight_hours) FROM Flight_Hours WHERE region = 'Southwest' GROUP BY aircraft_model ORDER BY SUM(flight_hours) DESC LIMIT 5;"}
{"prompt":"What is the latest launch date for a satellite from any country in Asia? with given SQL schema CREATE TABLE Satellite (ID INT, Name TEXT, Country TEXT, LaunchDate DATE); INSERT INTO Satellite (ID, Name, Country, LaunchDate) VALUES (1, 'GSAT-1', 'India', '2004-06-18'), (2, 'INSAT-3A', 'India', '2003-04-10'), (3, 'RS-1', 'Russia', '2012-06-17'), (4, 'Sentinel-1A', 'Europe', '2014-04-03'), (5, 'Yaogan-20', 'China', '2014-09-25'), (6, 'GSAT-16', 'India', '2014-12-06');","completion":"SELECT MAX(LaunchDate) AS LatestLaunchDate FROM Satellite WHERE Country IN ('India', 'China');"}
{"prompt":"What is the total number of research projects conducted in the aerospace domain per year? with given SQL schema CREATE TABLE Research_Projects (ID INT, Year INT, Domain VARCHAR(50), Number_Of_Projects INT); INSERT INTO Research_Projects (ID, Year, Domain, Number_Of_Projects) VALUES (1, 2015, 'Aerospace', 50), (2, 2016, 'Aerospace', 60), (3, 2017, 'Aerospace', 70), (4, 2018, 'Aerospace', 80), (5, 2019, 'Aerospace', 90);","completion":"SELECT Year, SUM(Number_Of_Projects) FROM Research_Projects GROUP BY Year;"}
{"prompt":"What are the dissolved oxygen levels for fish farms in the Atlantic ocean? with given SQL schema CREATE TABLE atlantic_fish_farms (id INT, name VARCHAR(50), country VARCHAR(50), dissolved_oxygen FLOAT); INSERT INTO atlantic_fish_farms (id, name, country, dissolved_oxygen) VALUES (1, 'Farm G', 'USA', 6.8), (2, 'Farm H', 'Canada', 7.2), (3, 'Farm I', 'USA', 7.0), (4, 'Farm J', 'Brazil', 6.5);","completion":"SELECT country, dissolved_oxygen FROM atlantic_fish_farms WHERE country IN ('USA', 'Canada', 'Brazil');"}
{"prompt":"How many people with disabilities attended dance performances in the past 6 months? with given SQL schema CREATE TABLE dance_performances (id INT, performance_date DATE, attendee_count INT, attendee_disability BOOLEAN); INSERT INTO dance_performances (id, performance_date, attendee_count, attendee_disability) VALUES (1, '2021-06-10', 200, true), (2, '2021-06-11', 300, false), (3, '2021-06-12', 150, true), (4, '2021-12-01', 400, false);","completion":"SELECT SUM(attendee_count) FROM dance_performances WHERE attendee_disability = true AND performance_date BETWEEN '2021-06-01' AND '2021-12-31';"}
{"prompt":"What percentage of visitors to jazz events in New Orleans are repeat attendees? with given SQL schema CREATE TABLE Visitors (visitor_id INT, event_name TEXT, city TEXT); INSERT INTO Visitors (visitor_id, event_name, city) VALUES (1, 'Jazz Festival', 'New Orleans'), (2, 'Jazz Festival', 'New Orleans'), (3, 'Jazz Concert', 'New Orleans'), (4, 'Jazz Festival', 'New Orleans');","completion":"SELECT COUNT(DISTINCT visitor_id) * 100.0 \/ (SELECT COUNT(DISTINCT visitor_id) FROM Visitors WHERE city = 'New Orleans' AND event_name LIKE '%Jazz%') FROM Visitors WHERE city = 'New Orleans' AND event_name LIKE '%Jazz%';"}
{"prompt":"How many chemical spills occurred in the southeast region in the past year, grouped by month? with given SQL schema CREATE TABLE spills (id INT, date DATE, location TEXT, chemical TEXT); INSERT INTO spills (id, date, location, chemical) VALUES (1, '2022-01-01', 'Georgia', 'Acetone'), (2, '2022-02-15', 'Florida', 'Ammonia'), (3, '2022-03-05', 'Alabama', 'Benzene');","completion":"SELECT EXTRACT(MONTH FROM date) AS month, COUNT(*) AS num_spills FROM spills WHERE location LIKE 'Southeast%' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY month;"}
{"prompt":"Which countries have not received any climate finance for climate adaptation? with given SQL schema CREATE TABLE country_climate_finance(country TEXT, sector TEXT, amount_funded FLOAT);","completion":"SELECT country FROM country_climate_finance WHERE sector = 'climate adaptation' GROUP BY country HAVING SUM(amount_funded) = 0;"}
{"prompt":"Find the number of transactions involving 'non-GMO' produce in the 'Midwest' region. with given SQL schema CREATE TABLE transactions (id INT, product TEXT, region TEXT, non_gmo BOOLEAN); INSERT INTO transactions (id, product, region, non_gmo) VALUES (3, 'Product 3', 'Midwest', true), (4, 'Product 4', 'West', false);","completion":"SELECT COUNT(*) FROM transactions WHERE region = 'Midwest' AND non_gmo = true;"}
{"prompt":"What is the average price of crops grown using 'permaculture' techniques? with given SQL schema CREATE TABLE crops (id INT, name VARCHAR(20), farming_system VARCHAR(20), price DECIMAL(6,2));","completion":"SELECT AVG(price) FROM crops WHERE farming_system = 'permaculture';"}
{"prompt":"What is the total budget allocated for accessibility improvements across all departments and years? with given SQL schema CREATE TABLE Budget_Allocation (id INT, department VARCHAR(50), year INT, allocation DECIMAL(10,2)); INSERT INTO Budget_Allocation (id, department, year, allocation) VALUES (1, 'Student Services', 2020, 50000.00), (2, 'Faculty Development', 2020, 35000.00), (3, 'Student Services', 2021, 60000.00), (4, 'Faculty Development', 2021, 40000.00), (5, 'Accessibility', 2020, 25000.00), (6, 'Accessibility', 2021, 30000.00);","completion":"SELECT SUM(Budget_Allocation.allocation) as total_allocation FROM Budget_Allocation WHERE Budget_Allocation.department = 'Accessibility';"}
{"prompt":"List all regulatory frameworks that have been associated with at least one smart contract, ordered by the name of the regulatory framework in ascending order. with given SQL schema CREATE TABLE regulatory_framework (id INT, name VARCHAR(255)); CREATE TABLE smart_contracts (id INT, name VARCHAR(255), framework_id INT); INSERT INTO regulatory_framework (id, name) VALUES (1, 'EU GDPR'), (2, 'US CFTC'), (3, 'Japan FSA'), (4, 'UK FCA'); INSERT INTO smart_contracts (id, name, framework_id) VALUES (1, 'SC1', 1), (2, 'SC2', 1), (3, 'SC3', 2), (4, 'SC4', NULL);","completion":"SELECT r.name FROM regulatory_framework r JOIN smart_contracts s ON r.id = s.framework_id WHERE s.framework_id IS NOT NULL ORDER BY r.name ASC;"}
{"prompt":"What is the total carbon sequestered per supplier? with given SQL schema CREATE TABLE suppliers (supplier_id INT, supplier_name TEXT);CREATE TABLE carbon_sequestration (sequestration_id INT, supplier_id INT, sequestration_rate FLOAT, year INT); INSERT INTO suppliers (supplier_id, supplier_name) VALUES (1, 'Supplier X'), (2, 'Supplier Y'); INSERT INTO carbon_sequestration (sequestration_id, supplier_id, sequestration_rate, year) VALUES (1, 1, 12.5, 2010), (2, 1, 13.2, 2011), (3, 2, 15.3, 2010), (4, 2, 15.6, 2011);","completion":"SELECT supplier_id, supplier_name, SUM(sequestration_rate) FROM carbon_sequestration JOIN suppliers ON carbon_sequestration.supplier_id = suppliers.supplier_id GROUP BY supplier_id, supplier_name;"}
{"prompt":"What is the average rating of foundations with a vegan label? with given SQL schema CREATE TABLE products (product_id INT, name VARCHAR(255), category VARCHAR(255), rating FLOAT, vegan BOOLEAN);","completion":"SELECT AVG(rating) FROM products WHERE category = 'foundation' AND vegan = TRUE;"}
{"prompt":"What is the maximum response time for emergencies in the 'Central' district? with given SQL schema CREATE TABLE districts (district_id INT, district_name TEXT);CREATE TABLE emergencies (emergency_id INT, district_id INT, response_time INT);","completion":"SELECT MAX(response_time) FROM emergencies WHERE district_id = (SELECT district_id FROM districts WHERE district_name = 'Central');"}
{"prompt":"What is the maximum threat intelligence report score for cyber threats originating from Russia? with given SQL schema CREATE TABLE threat_intelligence (report_id INT, source_country VARCHAR(20), score INT); INSERT INTO threat_intelligence (report_id, source_country, score) VALUES (1, 'Russia', 85), (2, 'China', 80), (3, 'Iran', 70);","completion":"SELECT MAX(score) FROM threat_intelligence WHERE source_country = 'Russia';"}
{"prompt":"What are the names of the countries where peacekeeping operations were conducted by the European Union in 2010? with given SQL schema CREATE TABLE eu_peacekeeping_operations (id INT, country VARCHAR(255), operation_name VARCHAR(255), start_date DATE); INSERT INTO eu_peacekeeping_operations (id, country, operation_name, start_date) VALUES (1, 'Democratic Republic of the Congo', 'European Union Force', '2010-01-01');","completion":"SELECT DISTINCT country FROM eu_peacekeeping_operations WHERE start_date LIKE '2010%';"}
{"prompt":"What is the client's total investment and the number of investments they have made? with given SQL schema CREATE TABLE clients (client_id INT, name TEXT, investment_type TEXT, investment FLOAT); INSERT INTO clients (client_id, name, investment_type, investment) VALUES (1, 'John Doe', 'Stocks', 3000.00), (1, 'John Doe', 'Bonds', 2000.00), (2, 'Jane Smith', 'Stocks', 5000.00);","completion":"SELECT client_id, name, SUM(investment) OVER (PARTITION BY client_id ORDER BY client_id) as total_investment, COUNT(*) OVER (PARTITION BY client_id ORDER BY client_id) as number_of_investments FROM clients;"}
{"prompt":"Which clients have investments in both Tech Stocks and Renewable Energy Stocks? with given SQL schema CREATE TABLE ClientStockInvestments (ClientID INT, StockSymbol VARCHAR(10)); INSERT INTO ClientStockInvestments (ClientID, StockSymbol) VALUES (1, 'AAPL'), (2, 'GOOG'), (3, 'MSFT'), (4, 'TSLA'), (5, 'SPWR'), (6, 'ENPH'); CREATE TABLE Stocks (Symbol VARCHAR(10), Sector VARCHAR(20)); INSERT INTO Stocks (Symbol, Sector) VALUES ('AAPL', 'Tech'), ('GOOG', 'Tech'), ('MSFT', 'Tech'), ('TSLA', 'Tech'), ('FB', 'Tech'), ('SPWR', 'Renewable Energy'), ('ENPH', 'Renewable Energy');","completion":"SELECT C1.ClientID FROM ClientStockInvestments C1 JOIN Stocks S1 ON C1.StockSymbol = S1.Symbol JOIN ClientStockInvestments C2 ON C1.ClientID = C2.ClientID JOIN Stocks S2 ON C2.StockSymbol = S2.Symbol WHERE S1.Sector = 'Tech' AND S2.Sector = 'Renewable Energy';"}
{"prompt":"List all the unique destinations of container vessels for the month of June 2022 with given SQL schema CREATE TABLE vessel_destinations (vessel_name VARCHAR(50), destination VARCHAR(50), departure_date DATE, arrival_date DATE); INSERT INTO vessel_destinations VALUES ('Ever Given', 'Rotterdam', '2022-06-01', '2022-06-05'); INSERT INTO vessel_destinations VALUES ('HMM Algeciras', 'New York', '2022-06-03', '2022-06-10'); INSERT INTO vessel_destinations VALUES ('CMA CGM Jacques Saade', 'Singapore', '2022-06-05', '2022-06-15'); INSERT INTO vessel_destinations VALUES ('Seaspan Amazon', 'Tokyo', '2022-06-10', '2022-06-17'); INSERT INTO vessel_destinations VALUES ('MSC Virtuosa', 'Sydney', '2022-06-15', '2022-06-22');","completion":"SELECT DISTINCT destination FROM vessel_destinations WHERE departure_date BETWEEN '2022-06-01' AND '2022-06-30';"}
{"prompt":"List all materials used in the manufacturing sector in Brazil and South Africa. with given SQL schema CREATE TABLE material_data (material_name VARCHAR(50), country VARCHAR(50), industry VARCHAR(50)); INSERT INTO material_data (material_name, country, industry) VALUES ('Steel', 'Brazil', 'Manufacturing'), ('Aluminum', 'Brazil', 'Manufacturing'), ('Plastic', 'Brazil', 'Manufacturing'), ('Glass', 'Brazil', 'Manufacturing'), ('Titanium', 'South Africa', 'Manufacturing'), ('Steel', 'South Africa', 'Manufacturing'), ('Aluminum', 'South Africa', 'Manufacturing');","completion":"SELECT DISTINCT material_name FROM material_data WHERE country IN ('Brazil', 'South Africa') AND industry = 'Manufacturing';"}
{"prompt":"Find the excavation site with the highest total artifact weight for each country, along with the country and total weight. with given SQL schema CREATE TABLE ExcavationSites (SiteID INT, SiteName VARCHAR(50), Country VARCHAR(50), Year INT, ArtifactWeight FLOAT, ArtifactType VARCHAR(50)); INSERT INTO ExcavationSites (SiteID, SiteName, Country, Year, ArtifactWeight, ArtifactType) VALUES (1, 'SiteA', 'USA', 2020, 23.5, 'Pottery'), (2, 'SiteB', 'Mexico', 2020, 14.2, 'Stone Tool'), (3, 'SiteC', 'USA', 2019, 34.8, 'Bone Tool'), (4, 'SiteD', 'Canada', 2019, 45.6, 'Ceramic Figurine'), (5, 'SiteE', 'Canada', 2019, 56.7, 'Metal Artifact');","completion":"SELECT SiteName, Country, SUM(ArtifactWeight) AS TotalWeight FROM ExcavationSites GROUP BY SiteName, Country HAVING COUNT(DISTINCT Year) = (SELECT COUNT(DISTINCT Year) FROM ExcavationSites GROUP BY Year);"}
{"prompt":"Find the top 3 longest songs in the Rock genre. with given SQL schema CREATE TABLE songs (song_id INT, song_length FLOAT, genre TEXT); INSERT INTO songs VALUES (1, 450.3, 'Rock'), (2, 320.2, 'Pop'), (3, 500.5, 'Rock'), (4, 200.1, 'Jazz'), (5, 400.0, 'Rock');","completion":"SELECT * FROM (SELECT song_id, song_length, genre, ROW_NUMBER() OVER (ORDER BY song_length DESC) AS row_num FROM songs WHERE genre = 'Rock') AS subquery WHERE row_num <= 3;"}
{"prompt":"Insert a new donation from donor with ID 3 for $200 on 2022-03-20 to program ID 1. with given SQL schema CREATE TABLE Donors (DonorID INT, Name TEXT, Address TEXT); INSERT INTO Donors (DonorID, Name, Address) VALUES (1, 'John Doe', '123 Main St'); INSERT INTO Donors (DonorID, Name, Address) VALUES (2, 'Jane Smith', '456 Elm St'); INSERT INTO Donors (DonorID, Name, Address) VALUES (3, 'Alice Johnson', '789 Oak St'); CREATE TABLE Programs (ProgramID INT, Name TEXT, Budget DECIMAL); INSERT INTO Programs (ProgramID, Name, Budget) VALUES (1, 'Education Support', 5000); INSERT INTO Programs (ProgramID, Name, Budget) VALUES (2, 'Senior Care', 7000); CREATE TABLE Donations (DonationID INT, DonorID INT, ProgramID INT, Amount DECIMAL, DonationDate DATE); INSERT INTO Donations (DonationID, DonorID, ProgramID, Amount, DonationDate) VALUES (1, 1, 1, 50.00, '2021-01-01'); INSERT INTO Donations (DonationID, DonorID, ProgramID, Amount, DonationDate) VALUES (2, 1, 2, 75.00, '2021-03-15'); INSERT INTO Donations (DonationID, DonorID, ProgramID, Amount, DonationDate) VALUES (3, 2, 2, 100.00, '2021-12-31');","completion":"INSERT INTO Donations (DonationID, DonorID, ProgramID, Amount, DonationDate) VALUES (4, 3, 1, 200.00, '2022-03-20');"}
{"prompt":"What was the total amount donated by the top 3 donors in 'q2_2022' donation period? with given SQL schema CREATE TABLE donors (id INT, name TEXT, total_donation FLOAT, donation_period TEXT); INSERT INTO donors (id, name, total_donation, donation_period) VALUES (1, 'Sophia Garcia', 700.00, 'q2_2022'), (2, 'James Kim', 600.00, 'q2_2022'), (3, 'Lea Nguyen', 500.00, 'q2_2022'), (4, 'Kevin Hernandez', 400.00, 'q2_2022');","completion":"SELECT SUM(total_donation) FROM (SELECT total_donation FROM donors WHERE donors.id IN (SELECT id FROM donors WHERE donation_period = 'q2_2022' ORDER BY total_donation DESC LIMIT 3)) subquery;"}
{"prompt":"What is the total capacity of renewable energy plants in Australia? with given SQL schema CREATE TABLE renewable_plants (name TEXT, country TEXT, capacity FLOAT); INSERT INTO renewable_plants (name, country, capacity) VALUES ('Wind Farm A', 'Australia', 150.0), ('Solar Farm B', 'Australia', 200.0), ('Geothermal Plant C', 'Australia', 75.0), ('Hydroelectric Plant D', 'Australia', 400.0);","completion":"SELECT SUM(capacity) FROM renewable_plants WHERE country = 'Australia';"}
{"prompt":"Which solar power plants in Spain have a capacity greater than 50 MW? with given SQL schema CREATE TABLE solar_plants (id INT, name TEXT, country TEXT, capacity FLOAT); INSERT INTO solar_plants (id, name, country, capacity) VALUES (1, 'La Solana', 'Spain', 52.0), (2, 'Don Rodrigo', 'Spain', 174.4);","completion":"SELECT name, capacity FROM solar_plants WHERE country = 'Spain' AND capacity > 50.0;"}
{"prompt":"How many refugees are there in each region of 'regions' table and what are their names? with given SQL schema CREATE TABLE refugees (refugee_id INT, region_id INT, refugee_name VARCHAR(50)); CREATE TABLE regions (region_id INT, region_name VARCHAR(50)); INSERT INTO refugees (refugee_id, region_id, refugee_name) VALUES (1, 1, 'Ahmed'), (2, 1, 'Fatima'), (3, 2, 'Ali'), (4, 2, 'Aisha'), (5, 3, 'Hassan'), (6, 3, 'Zainab'), (7, 4, 'Khalid'), (8, 4, 'Noor'), (9, 5, 'Ayman'), (10, 5, 'Sara'), (11, 1, 'Hamza'), (12, 1, 'Hana'); INSERT INTO regions (region_id, region_name) VALUES (1, 'Middle East'), (2, 'North Africa'), (3, 'East Africa'), (4, 'Central Asia'), (5, 'West Africa');","completion":"SELECT region_name, COUNT(*) as num_refugees FROM refugees INNER JOIN regions ON refugees.region_id = regions.region_id GROUP BY region_name;"}
{"prompt":"What is the average score for AI tools designed for persons with disabilities? with given SQL schema CREATE TABLE ai_tools (id INT, name TEXT, type TEXT, score FLOAT); INSERT INTO ai_tools (id, name, type, score) VALUES (1, 'ToolA', 'PersonsWithDisabilities', 4.4), (2, 'ToolB', 'SocialGood', 4.6), (3, 'ToolC', 'PersonsWithDisabilities', 4.1);","completion":"SELECT AVG(score) FROM ai_tools WHERE type = 'PersonsWithDisabilities';"}
{"prompt":"How many trains are there in total in the city of Tokyo? with given SQL schema CREATE TABLE trains (id INT, city VARCHAR(20), model VARCHAR(20)); INSERT INTO trains (id, city, model) VALUES (1, 'Tokyo', 'E231'), (2, 'Tokyo', 'E657'), (3, 'Osaka', 'E001');","completion":"SELECT COUNT(*) FROM trains WHERE city = 'Tokyo';"}
{"prompt":"What is the average capacity of factories in Spain, France, and the United Kingdom? with given SQL schema CREATE TABLE factories (factory_id INT, location VARCHAR(50), capacity INT); INSERT INTO factories (factory_id, location, capacity) VALUES (1, 'Madrid, Spain', 5000), (2, 'Paris, France', 7000), (3, 'London, UK', 6000);","completion":"SELECT AVG(capacity) FROM factories WHERE location LIKE '%Spain%' OR location LIKE '%France%' OR location LIKE '%UK%';"}
{"prompt":"Identify the bank with the highest percentage of loans above $10,000 for Shariah-compliant loans? with given SQL schema CREATE TABLE bank (id INT, name VARCHAR(50), type VARCHAR(50)); INSERT INTO bank (id, name, type) VALUES (1, 'Green Bank', 'Shariah-compliant'), (2, 'Fair Lending Bank', 'Socially Responsible'), (3, 'Community Bank', 'Shariah-compliant'); CREATE TABLE loans (bank_id INT, amount DECIMAL(10,2), type VARCHAR(50)); INSERT INTO loans (bank_id, amount, type) VALUES (1, 12000.00, 'Shariah-compliant'), (1, 15000.00, 'Shariah-compliant'), (2, 10000.00, 'Socially Responsible'), (2, 11000.00, 'Socially Responsible'), (3, 20000.00, 'Shariah-compliant'), (3, 25000.00, 'Shariah-compliant');","completion":"SELECT bank_id, 100.0 * SUM(CASE WHEN type = 'Shariah-compliant' AND amount > 10000 THEN amount ELSE 0 END) \/ SUM(CASE WHEN type = 'Shariah-compliant' THEN amount ELSE 0 END) as large_shariah_loan_percentage FROM loans GROUP BY bank_id ORDER BY large_shariah_loan_percentage DESC FETCH FIRST 1 ROW ONLY;"}
{"prompt":"What is the average salary for female managers in the financial institutions table? with given SQL schema CREATE TABLE financial_institutions (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255));","completion":"SELECT AVG(salary) FROM employee_demographics WHERE role = 'Manager' AND gender = 'Female';"}
{"prompt":"Find programs with no financial donations with given SQL schema CREATE TABLE programs (id INT, name VARCHAR); CREATE TABLE financial_donations (id INT, program_id INT, amount INT)","completion":"SELECT p.name FROM programs p LEFT JOIN financial_donations fd ON p.id = fd.program_id WHERE fd.program_id IS NULL;"}
{"prompt":"How many unique donors are there in each region? with given SQL schema CREATE TABLE donations (id INT, donor_name VARCHAR, donation_amount DECIMAL, donation_date DATE, region VARCHAR); INSERT INTO donations (id, donor_name, donation_amount, donation_date, region) VALUES (1, 'John Doe', 100, '2021-01-01', 'North America');","completion":"SELECT region, COUNT(DISTINCT donor_name) FROM donations GROUP BY region;"}
{"prompt":"Update the total_donation column in the donors table to set the value to 600.00 for the record with id = 1. with given SQL schema CREATE TABLE donors (id INT, name VARCHAR(50), total_donation FLOAT); INSERT INTO donors (id, name, total_donation) VALUES (1, 'John Doe', 500.00), (2, 'Jane Smith', 350.00), (3, 'Mike Johnson', 200.00);","completion":"UPDATE donors SET total_donation = 600.00 WHERE id = 1;"}
{"prompt":"Which biotech startups were founded in the last 2 years and received funding from Angel Investors? with given SQL schema CREATE TABLE startups (id INT, name VARCHAR(50), funding_source_id INT, founded_date DATE); INSERT INTO startups VALUES (1, 'StartupP', 1003, '2021-01-01'); INSERT INTO startups VALUES (2, 'StartupQ', 1001, '2020-06-15'); INSERT INTO startups VALUES (3, 'StartupR', 1002, '2019-03-04');","completion":"SELECT name FROM startups INNER JOIN funding_sources ON startups.funding_source_id = funding_sources.id WHERE founded_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) AND funding_sources.name = 'Angel Investors';"}
{"prompt":"What is the average income for all households in each city? with given SQL schema CREATE TABLE cities (id INT, name VARCHAR(255)); CREATE TABLE households (id INT, city_id INT, income INT);","completion":"SELECT c.name, AVG(h.income) AS avg_income FROM cities c JOIN households h ON c.id = h.city_id GROUP BY c.name;"}
{"prompt":"What is the total number of mental health parity violations reported in Illinois in 2020? with given SQL schema CREATE TABLE mental_health_parity (id INT, violation_date DATE, location TEXT); INSERT INTO mental_health_parity (id, violation_date, location) VALUES (1, '2020-01-01', 'Illinois'); INSERT INTO mental_health_parity (id, violation_date, location) VALUES (2, '2020-02-01', 'California'); INSERT INTO mental_health_parity (id, violation_date, location) VALUES (3, '2020-03-01', 'Illinois');","completion":"SELECT COUNT(*) FROM mental_health_parity WHERE violation_date >= '2020-01-01' AND violation_date < '2021-01-01' AND location = 'Illinois';"}
{"prompt":"What is the average rating of cultural heritage sites with virtual tours in Germany and Brazil? with given SQL schema CREATE TABLE Ratings(id INT, site_id INT, rating FLOAT); INSERT INTO Ratings(id, site_id, rating) VALUES (1, 1, 4.6), (2, 2, 3.9), (3, 3, 4.2), (4, 4, 4.9), (5, 5, 5.0); CREATE TABLE Sites(id INT, name TEXT, country TEXT, has_virtual_tour BOOLEAN); INSERT INTO Sites(id, name, country, has_virtual_tour) VALUES (1, 'Taj Mahal', 'India', true), (2, 'Red Fort', 'India', false), (3, 'Pink Palace', 'India', true), (4, 'Brandenburg Gate', 'Germany', true), (5, 'Christ the Redeemer', 'Brazil', true);","completion":"SELECT AVG(Ratings.rating) FROM Ratings JOIN Sites ON Ratings.site_id = Sites.id WHERE Sites.country IN ('Germany', 'Brazil') AND Sites.has_virtual_tour = true;"}
{"prompt":"How many artworks were sold by each gallery in 2021? with given SQL schema CREATE TABLE GallerySales (Gallery VARCHAR(255), ArtWork VARCHAR(255), Year INT, QuantitySold INT); INSERT INTO GallerySales (Gallery, ArtWork, Year, QuantitySold) VALUES ('Gallery 1', 'Artwork 1', 2021, 5), ('Gallery 1', 'Artwork 2', 2021, 3), ('Gallery 2', 'Artwork 3', 2021, 1), ('Gallery 2', 'Artwork 4', 2021, 4);","completion":"SELECT Gallery, SUM(QuantitySold) as TotalQuantitySold FROM GallerySales WHERE Year = 2021 GROUP BY Gallery;"}
{"prompt":"What are the top 3 species with the most sightings across all arctic research stations? with given SQL schema CREATE TABLE research_station (id INT, name TEXT); INSERT INTO research_station (id, name) VALUES (1, 'Station A'); INSERT INTO research_station (id, name) VALUES (2, 'Station B'); CREATE TABLE species_observations (station_id INT, species_name TEXT, sightings INT); INSERT INTO species_observations (station_id, species_name, sightings) VALUES (1, 'Species 1', 10); INSERT INTO species_observations (station_id, species_name, sightings) VALUES (1, 'Species 2', 5); INSERT INTO species_observations (station_id, species_name, sightings) VALUES (2, 'Species 1', 8); INSERT INTO species_observations (station_id, species_name, sightings) VALUES (2, 'Species 3', 15);","completion":"SELECT species_name, SUM(sightings) as total_sightings, RANK() OVER (ORDER BY SUM(sightings) DESC) as rank FROM species_observations GROUP BY species_name HAVING rank <= 3;"}
{"prompt":"What is the maximum temperature per month in the 'temperature_readings' table? with given SQL schema CREATE TABLE temperature_readings (reading_date DATE, temperature FLOAT);","completion":"SELECT DATE_TRUNC('month', reading_date) AS month, MAX(temperature) FROM temperature_readings GROUP BY month;"}
{"prompt":"Update the visitors_per_month of Taj Mahal to 25000? with given SQL schema CREATE TABLE HeritageSite (name VARCHAR(255), visitors_per_month INT); INSERT INTO HeritageSite (name, visitors_per_month) VALUES ('Taj Mahal', 20000);","completion":"UPDATE HeritageSite SET visitors_per_month = 25000 WHERE name = 'Taj Mahal';"}
{"prompt":"What is the average age of traditional dances per country? with given SQL schema CREATE TABLE Countries (CountryID INT, CountryName VARCHAR(50), Continent VARCHAR(50)); CREATE TABLE Dances (DanceID INT, DanceName VARCHAR(50), DanceAge INT, CountryID INT); INSERT INTO Countries VALUES (1, 'Mexico', 'Americas'), (2, 'Nigeria', 'Africa'), (3, 'Japan', 'Asia'); INSERT INTO Dances VALUES (1, 'Ballet Folklorico', 80, 1), (2, 'Agbekor', 300, 2), (3, 'Kabuki', 400, 3);","completion":"SELECT Context.CountryName, AVG(Dances.DanceAge) AS AvgDanceAge FROM (SELECT * FROM Countries WHERE Continent = 'Americas' OR Continent = 'Africa' OR Continent = 'Asia') AS Context INNER JOIN Dances ON Context.CountryID = Dances.CountryID GROUP BY Context.CountryName;"}
{"prompt":"What is the total number of patients treated with medication and therapy in each country? with given SQL schema CREATE TABLE patients (patient_id INT, name VARCHAR(50), age INT, state VARCHAR(50), country VARCHAR(50)); CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE); CREATE TABLE medications (medication_id INT, patient_id INT, medication_name VARCHAR(50), prescription_date DATE); INSERT INTO patients VALUES (1, 'John Doe', 35, 'California', 'USA'); INSERT INTO patients VALUES (2, 'Jane Smith', 28, 'Ontario', 'Canada'); INSERT INTO therapy_sessions VALUES (1, 1, 101, '2022-01-01'); INSERT INTO therapy_sessions VALUES (2, 2, 102, '2022-02-01'); INSERT INTO medications VALUES (1, 1, 'Prozac', '2022-01-05'); INSERT INTO medications VALUES (2, 2, 'Lexapro', '2022-02-05');","completion":"SELECT countries.country, COUNT(DISTINCT patients.patient_id) FROM patients JOIN medications ON patients.patient_id = medications.patient_id JOIN therapy_sessions ON patients.patient_id = therapy_sessions.patient_id JOIN (SELECT DISTINCT country FROM patients) AS countries ON patients.country = countries.country GROUP BY countries.country;"}
{"prompt":"What's the most common therapy type among patients? with given SQL schema CREATE TABLE patients (id INT, name TEXT, age INT, therapy TEXT); INSERT INTO patients (id, name, age, therapy) VALUES (1, 'Alice', 30, 'CBT'), (2, 'Bob', 45, 'DBT'), (3, 'Charlie', 60, 'CBT'), (4, 'David', 50, 'CBT'), (5, 'Eve', 55, 'DBT');","completion":"SELECT therapy, COUNT(*) AS therapy_count FROM patients GROUP BY therapy ORDER BY therapy_count DESC LIMIT 1;"}
{"prompt":"Find the average HearingDuration for each District in the CommunityCourts table. with given SQL schema CREATE TABLE CommunityCourts (CourtID INT, District VARCHAR(20)); CREATE TABLE CommunityCourtHearings (HearingID INT, CourtID INT, HearingDate DATE, HearingDuration INT); INSERT INTO CommunityCourts (CourtID, District) VALUES (1, 'Downtown'), (2, 'Uptown'), (3, 'Midtown'); INSERT INTO CommunityCourtHearings (HearingID, CourtID, HearingDate, HearingDuration) VALUES (1, 1, '2021-06-15', 60), (2, 1, '2021-07-20', 75), (3, 2, '2021-08-12', 90), (4, 3, '2021-08-15', 45), (5, 3, '2021-09-01', 30);","completion":"SELECT District, AVG(HearingDuration) as AverageHearingDuration FROM CommunityCourtHearings JOIN CommunityCourts ON CommunityCourtHearings.CourtID = CommunityCourts.CourtID GROUP BY District;"}
{"prompt":"What is the maximum grant_amount awarded by a funding_source in the 'civil_court_grants' table? with given SQL schema CREATE TABLE civil_court_grants (id INT, funding_source TEXT, grant_amount INT, grant_type TEXT, recipient TEXT);","completion":"SELECT funding_source, MAX(grant_amount) FROM civil_court_grants GROUP BY funding_source;"}
{"prompt":"What is the average depth of all marine protected areas (MPAs) in the Pacific Ocean? with given SQL schema CREATE TABLE pacific_ocean (id INT, name TEXT, depth FLOAT);CREATE TABLE marine_protected_areas (id INT, name TEXT, mpa_type TEXT); INSERT INTO pacific_ocean (id, name, depth) VALUES (1, 'Marianas Trench', 10994); INSERT INTO marine_protected_areas (id, name, mpa_type) VALUES (1, 'Papah\u0101naumoku\u0101kea Marine National Monument', 'No-take');","completion":"SELECT AVG(pacific_ocean.depth) FROM pacific_ocean JOIN marine_protected_areas ON pacific_ocean.name = marine_protected_areas.name WHERE marine_protected_areas.mpa_type = 'No-take';"}
{"prompt":"What is the change in population size for each marine species from 2020 to 2021? with given SQL schema CREATE TABLE marine_species_population (id INT, species VARCHAR(255), year INT, population_size INT); INSERT INTO marine_species_population (id, species, year, population_size) VALUES (1, 'Clownfish', 2020, 10000), (2, 'Sea Turtle', 2020, 5000), (3, 'Dolphin', 2020, 20000), (1, 'Clownfish', 2021, 10500), (2, 'Sea Turtle', 2021, 5500), (3, 'Dolphin', 2021, 21000);","completion":"SELECT species, (population_size - LAG(population_size) OVER (PARTITION BY species ORDER BY year)) change_in_population FROM marine_species_population;"}
{"prompt":"Count the number of unique viewers who watched a series on Netflix by country with given SQL schema CREATE TABLE viewership (id INT, viewer_id INT, series_title VARCHAR(100), platform VARCHAR(50), watch_date DATE); INSERT INTO viewership (id, viewer_id, series_title, platform, watch_date) VALUES (1, 123, 'Series1', 'Netflix', '2022-01-01'), (2, 456, 'Series2', 'Netflix', '2022-02-01'), (3, 789, 'Series1', 'Netflix', '2022-03-01');","completion":"SELECT production_country, COUNT(DISTINCT viewer_id) as unique_viewers FROM viewership v JOIN movies m ON v.series_title = m.title WHERE platform = 'Netflix' GROUP BY production_country;"}
{"prompt":"What is the maximum number of likes received by posts about media literacy from users in Asia? with given SQL schema CREATE TABLE posts (id INT, title TEXT, likes INT, domain TEXT, region TEXT); INSERT INTO posts (id, title, likes, domain, region) VALUES (1, 'Post1', 500, 'Media Literacy', 'Asia'); INSERT INTO posts (id, title, likes, domain, region) VALUES (2, 'Post2', 700, 'Disinformation', 'Europe');","completion":"SELECT MAX(likes) FROM posts WHERE domain = 'Media Literacy' AND region = 'Asia';"}
{"prompt":"What is the total quantity of organic ingredients in the inventory? with given SQL schema CREATE TABLE Inventory (item_id INT, name VARCHAR(50), is_organic BOOLEAN, quantity INT); INSERT INTO Inventory (item_id, name, is_organic, quantity) VALUES (1, 'Apples', true, 100), (2, 'Broccoli', true, 50), (3, 'Beef', false, 75);","completion":"SELECT SUM(quantity) FROM Inventory WHERE is_organic = true;"}
{"prompt":"Delete all military sales records with supplier 'Thales' with given SQL schema CREATE TABLE military_sales (supplier VARCHAR(255), country VARCHAR(255), sale_value INT, sale_year INT); INSERT INTO military_sales (supplier, country, sale_value, sale_year) VALUES ('Thales', 'Australia', 7000000, 2021), ('Boeing', 'India', 100000000, 2021), ('Boeing', 'India', 120000000, 2020);","completion":"DELETE FROM military_sales WHERE supplier = 'Thales';"}
{"prompt":"Compare coal production and employment rates in China and India between 2018 and 2020. with given SQL schema CREATE TABLE china_coal_production (year INT, production FLOAT); INSERT INTO china_coal_production (year, production) VALUES (2018, 3500.0), (2019, 3600.0), (2020, 3700.0); CREATE TABLE china_employment (year INT, employment FLOAT); INSERT INTO china_employment (year, employment) VALUES (2018, 8000000.0), (2019, 8100000.0), (2020, 8200000.0); CREATE TABLE india_coal_production (year INT, production FLOAT); INSERT INTO india_coal_production (year, production) VALUES (2018, 700.0), (2019, 750.0), (2020, 800.0); CREATE TABLE india_employment (year INT, employment FLOAT); INSERT INTO india_employment (year, employment) VALUES (2018, 1000000.0), (2019, 1050000.0), (2020, 1100000.0);","completion":"SELECT 'China' AS country, china_coal_production.production, china_employment.employment FROM china_coal_production INNER JOIN china_employment ON china_coal_production.year = china_employment.year WHERE china_coal_production.year BETWEEN 2018 AND 2020 UNION ALL SELECT 'India', india_coal_production.production, india_employment.employment FROM india_coal_production INNER JOIN india_employment ON india_coal_production.year = india_employment.year WHERE india_coal_production.year BETWEEN 2018 AND 2020;"}
{"prompt":"What are the monthly trends of resource depletion for coal and iron? with given SQL schema CREATE TABLE resource_depletion (id INT, date DATE, resource VARCHAR(50), quantity INT); INSERT INTO resource_depletion (id, date, resource, quantity) VALUES (1, '2022-01-01', 'Coal', 1000); INSERT INTO resource_depletion (id, date, resource, quantity) VALUES (2, '2022-01-01', 'Iron', 2000); INSERT INTO resource_depletion (id, date, resource, quantity) VALUES (3, '2022-02-01', 'Coal', 1200); INSERT INTO resource_depletion (id, date, resource, quantity) VALUES (4, '2022-02-01', 'Iron', 2100);","completion":"SELECT date, SUM(CASE WHEN resource = 'Coal' THEN quantity ELSE 0 END) as coal_quantity, SUM(CASE WHEN resource = 'Iron' THEN quantity ELSE 0 END) as iron_quantity FROM resource_depletion GROUP BY date;"}
{"prompt":"What is the total data usage in GB for each customer in the last quarter, ordered by usage in descending order? with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(50), data_usage FLOAT); INSERT INTO customers VALUES (1, 'John Doe', 45.6), (2, 'Jane Smith', 30.1);","completion":"SELECT customer_id, SUM(data_usage)\/1024\/1024\/1024 as total_usage_gb FROM customers WHERE date_of_usage >= DATEADD(quarter, -1, GETDATE()) GROUP BY customer_id ORDER BY total_usage_gb DESC;"}
{"prompt":"Delete the record for the author 'Jane Smith' from the 'authors' table with given SQL schema CREATE TABLE authors (author_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));","completion":"DELETE FROM authors WHERE first_name = 'Jane' AND last_name = 'Smith';"}
{"prompt":"What is the average age of readers who prefer opinion pieces, categorized by gender? with given SQL schema CREATE TABLE readers (id INT, name TEXT, age INT, gender TEXT, interest TEXT); INSERT INTO readers (id, name, age, gender, interest) VALUES (1, 'John Doe', 35, 'Male', 'opinion');","completion":"SELECT gender, AVG(age) FROM readers WHERE interest = 'opinion' GROUP BY gender;"}
{"prompt":"What is the average number of views per reader for readers who have viewed more than 10 articles? with given SQL schema CREATE TABLE Readers (ReaderID int, Name varchar(50), Age int, Gender varchar(10), Country varchar(50), Views int); INSERT INTO Readers (ReaderID, Name, Age, Gender, Country, Views) VALUES (1, 'Reader 1', 40, 'Male', 'USA', 10); INSERT INTO Readers (ReaderID, Name, Age, Gender, Country, Views) VALUES (2, 'Reader 2', 45, 'Female', 'Canada', 15); INSERT INTO Readers (ReaderID, Name, Age, Gender, Country, Views) VALUES (3, 'Reader 3', 50, 'Male', 'Mexico', 20); INSERT INTO Readers (ReaderID, Name, Age, Gender, Country, Views) VALUES (4, 'Reader 4', 55, 'Female', 'UK', 25); INSERT INTO Readers (ReaderID, Name, Age, Gender, Country, Views) VALUES (5, 'Reader 5', 60, 'Male', 'India', 30);","completion":"SELECT AVG(Views) as AvgViews FROM Readers GROUP BY ReaderID HAVING COUNT(ReaderID) > 10;"}
{"prompt":"List all countries with deep-sea exploration programs. with given SQL schema CREATE TABLE countries (name varchar(255), deep_sea_program boolean); INSERT INTO countries (name, deep_sea_program) VALUES ('United States', true), ('Canada', false), ('China', true), ('France', true), ('Japan', true);","completion":"SELECT name FROM countries WHERE deep_sea_program = true;"}
{"prompt":"Find the top 3 recipients of grants in the Education sector? with given SQL schema CREATE TABLE Grants (GrantID INT, GrantName TEXT, Sector TEXT, Amount DECIMAL);","completion":"SELECT GrantName, Sector, Amount, ROW_NUMBER() OVER (PARTITION BY Sector ORDER BY Amount DESC) AS Rank FROM Grants WHERE Sector = 'Education' LIMIT 3;"}
{"prompt":"What is the average playtime, in hours, for players from Germany, for games in the 'Simulation' genre? with given SQL schema CREATE TABLE games (game_id INT, game_genre VARCHAR(255), player_id INT, playtime_mins INT); CREATE TABLE players (player_id INT, player_country VARCHAR(255));","completion":"SELECT AVG(playtime_mins \/ 60) FROM games JOIN players ON games.player_id = players.player_id WHERE players.player_country = 'Germany' AND game_genre = 'Simulation';"}
{"prompt":"Find the country with the highest number of esports event participants. with given SQL schema CREATE TABLE Events (EventID INT, Name VARCHAR(100), Country VARCHAR(50), Participants INT); INSERT INTO Events (EventID, Name, Country, Participants) VALUES (1, 'Event1', 'USA', 500), (2, 'Event2', 'Canada', 400), (3, 'Event3', 'England', 600), (4, 'Event4', 'France', 300);","completion":"SELECT Country, Participants FROM Events ORDER BY Participants DESC LIMIT 1;"}
{"prompt":"List all games and their average playing time, ordered by the average playing time in ascending order with given SQL schema CREATE TABLE games (game_id INT, name VARCHAR(255)); CREATE TABLE player_games (player_id INT, game_id INT, hours_played INT);","completion":"SELECT games.name, AVG(player_games.hours_played) as avg_playing_time FROM games JOIN player_games ON games.game_id = player_games.game_id GROUP BY games.game_id ORDER BY avg_playing_time ASC;"}
{"prompt":"What is the average prize money awarded at esports events in Europe? with given SQL schema CREATE TABLE EsportsPrizes (EventID INT, Country VARCHAR(20), PrizeMoney DECIMAL(10, 2)); INSERT INTO EsportsPrizes (EventID, Country, PrizeMoney) VALUES (1, 'Germany', 5000.00), (2, 'France', 7000.00);","completion":"SELECT AVG(PrizeMoney) FROM EsportsPrizes WHERE Country IN ('Germany', 'France', 'Italy');"}
{"prompt":"What is the percentage of players who prefer fighting games? with given SQL schema CREATE TABLE PlayerGamePreferences (PlayerID INT, GamePreference VARCHAR(20)); INSERT INTO PlayerGamePreferences (PlayerID, GamePreference) VALUES (1, 'fighting'); CREATE TABLE Players (PlayerID INT, Age INT); INSERT INTO Players (PlayerID, Age) VALUES (1, 22);","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM Players)) FROM PlayerGamePreferences WHERE GamePreference = 'fighting';"}
{"prompt":"How many public libraries are there in the state of New South Wales? with given SQL schema CREATE TABLE public_libraries (name VARCHAR(255), state VARCHAR(255)); INSERT INTO public_libraries (name, state) VALUES ('State Library of New South Wales', 'New South Wales'), ('Newcastle Region Library', 'New South Wales'), ('Wollongong Library', 'New South Wales');","completion":"SELECT COUNT(*) FROM public_libraries WHERE state = 'New South Wales';"}
{"prompt":"Update the budget for Education policy to 10 with given SQL schema CREATE TABLE Policy_Budget (Policy_ID INT PRIMARY KEY, Policy_Area VARCHAR(30), Budget INT); INSERT INTO Policy_Budget (Policy_ID, Policy_Area, Budget) VALUES (1, 'Transportation', 8000000), (2, 'Education', 7000000), (3, 'Environment', 5000000), (4, 'Housing', 9000000);","completion":"UPDATE Policy_Budget SET Budget = 10 WHERE Policy_Area = 'Education';"}
{"prompt":"What is the total budget allocated for infrastructure in 2023, in the 'annual_budget' table? with given SQL schema CREATE TABLE annual_budget (year INT, category VARCHAR(255), budget INT); INSERT INTO annual_budget (year, category, budget) VALUES (2022, 'Education', 1000000), (2023, 'Infrastructure', 1500000);","completion":"SELECT budget FROM annual_budget WHERE year = 2023 AND category = 'Infrastructure';"}
{"prompt":"Find the percentage of properties with sustainable features in each neighborhood. with given SQL schema CREATE TABLE properties (property_id INT, neighborhood VARCHAR(255), sustainable BOOLEAN);","completion":"SELECT neighborhood, (COUNT(*) FILTER (WHERE sustainable = TRUE)) * 100.0 \/ COUNT(*) as percentage_sustainable FROM properties GROUP BY neighborhood;"}
{"prompt":"What is the total installed capacity (in MW) of renewable energy projects in the 'solar' category? with given SQL schema CREATE TABLE renewable_energy_projects (id INT, project_name VARCHAR(100), category VARCHAR(50), capacity_mw DECIMAL(10,2));","completion":"SELECT SUM(capacity_mw) FROM renewable_energy_projects WHERE category = 'solar';"}
{"prompt":"List all sustainable sourcing costs for 'Eco-Friendly Eats' in 2021. with given SQL schema CREATE TABLE SustainableSourcing (restaurant_id INT, year INT, cost INT); INSERT INTO SustainableSourcing (restaurant_id, year, cost) VALUES (9, 2021, 1200);","completion":"SELECT * FROM SustainableSourcing WHERE restaurant_id = 9 AND year = 2021;"}
{"prompt":"Count the number of products in the 'grocery' category with given SQL schema CREATE TABLE products (product_id INT, category VARCHAR(20), quantity INT); INSERT INTO products (product_id, category, quantity) VALUES (1, 'grocery', 10), (2, 'grocery', 20), (3, 'grocery', 30);","completion":"SELECT COUNT(*) FROM products WHERE category = 'grocery';"}
{"prompt":"How many unique products are available in each store location? with given SQL schema CREATE TABLE StoreLocations (LocationID int, LocationName varchar(50)); INSERT INTO StoreLocations (LocationID, LocationName) VALUES (1, 'Location A'), (2, 'Location B'), (3, 'Location C'); CREATE TABLE Inventory (ProductID int, LocationID int); INSERT INTO Inventory (ProductID, LocationID) VALUES (1, 1), (1, 2), (2, 1), (3, 2), (4, 3), (5, 1);","completion":"SELECT i.LocationName, COUNT(DISTINCT i.ProductID) AS UniqueProducts FROM Inventory i GROUP BY i.LocationName;"}
{"prompt":"How many space missions were launched in the last 5 years by continent? with given SQL schema CREATE TABLE missions(mission_id INT, name VARCHAR(50), country VARCHAR(50), launch_date DATE, continent VARCHAR(50)); INSERT INTO missions VALUES (1, 'Mission1', 'USA', '2018-01-01', 'North America'); INSERT INTO missions VALUES (2, 'Mission2', 'Canada', '2019-01-01', 'North America'); INSERT INTO missions VALUES (3, 'Mission3', 'China', '2020-01-01', 'Asia');","completion":"SELECT continent, COUNT(*) as mission_count FROM missions WHERE launch_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) GROUP BY continent;"}
{"prompt":"Calculate the total mass of asteroids studied by mission 'Voyager 1' with given SQL schema CREATE TABLE missions (id INT, name VARCHAR(50), spacecraft VARCHAR(50), launch_year INT);CREATE TABLE asteroids (id INT, name VARCHAR(50), mass DECIMAL(10,2), mission VARCHAR(50));","completion":"SELECT SUM(mass) FROM asteroids WHERE mission = 'Voyager 1';"}
{"prompt":"Which incident response policies were implemented in Asia, and what is the rank of each policy based on the number of incidents it covers? with given SQL schema CREATE TABLE incidents (id INT, date DATE, category VARCHAR(20), source_ip VARCHAR(15), target_ip VARCHAR(15)); CREATE TABLE policies (id INT, date DATE, type VARCHAR(20), region VARCHAR(30)); INSERT INTO incidents (id, date, category, source_ip, target_ip) VALUES (1, '2021-01-01', 'malware', '192.168.1.100', '8.8.8.8'); INSERT INTO policies (id, date, type, region) VALUES (1, '2021-01-01', 'incident response', 'Asia');","completion":"SELECT policies.type, RANK() OVER (ORDER BY incident_count DESC) as policy_rank FROM (SELECT policy.type, COUNT(*) as incident_count FROM incidents JOIN policies ON incidents.date = policies.date WHERE policies.region = 'Asia' GROUP BY policy.type) as subquery JOIN policies ON policies.type = subquery.type;"}
{"prompt":"Which systems were scanned the most in the last month, and what were their maximum CVE scores? with given SQL schema CREATE TABLE systems (system_id INT, system_name VARCHAR(255));CREATE TABLE scan_dates (scan_date DATE, system_id INT);CREATE TABLE cve_scores (system_id INT, score INT, scan_date DATE);","completion":"SELECT s.system_name, MAX(c.score) as max_score FROM systems s INNER JOIN (SELECT system_id, COUNT(*) as scan_count FROM scan_dates GROUP BY system_id) sd ON s.system_id = sd.system_id LEFT JOIN cve_scores c ON s.system_id = c.system_id AND sd.scan_date = c.scan_date WHERE sd.scan_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY s.system_name ORDER BY scan_count DESC;"}
{"prompt":"Show the total quantity of each garment in the inventory table with given SQL schema CREATE TABLE inventory (id INT, garment_id INT, quantity INT);","completion":"SELECT garment_id, SUM(quantity) as total_quantity FROM inventory GROUP BY garment_id;"}
{"prompt":"What are the names and locations of suppliers established after 2010? with given SQL schema CREATE TABLE suppliers (supplier_id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), establishment_date DATE);","completion":"SELECT name, location FROM suppliers WHERE establishment_date > '2010-01-01';"}
{"prompt":"What is the maximum salary increase percentage for union workers in the 'Hospitality' sector since 2010? with given SQL schema CREATE TABLE SalaryIncreases (id INT, UnionID INT, Sector TEXT, SalaryIncreasePercentage DECIMAL, EffectiveDate DATE);","completion":"SELECT MAX(SalaryIncreasePercentage) FROM SalaryIncreases WHERE Sector = 'Hospitality' AND EffectiveDate >= '2010-01-01';"}
{"prompt":"What is the total revenue generated from members in each age group? with given SQL schema CREATE TABLE member_demographics (member_id INT, age INT, revenue FLOAT); INSERT INTO member_demographics (member_id, age, revenue) VALUES (1, 25, 500), (2, 35, 750), (3, 45, 1000), (4, 55, 1250);","completion":"SELECT age, SUM(revenue) FROM member_demographics GROUP BY age;"}
{"prompt":"What is the distribution of AI safety research topics by year? with given SQL schema CREATE TABLE if not exists ai_safety_research (year INT, topic VARCHAR(255)); INSERT INTO ai_safety_research (year, topic) VALUES (2018, 'Explainable AI'), (2019, 'Algorithmic fairness'), (2020, 'AI safety'), (2021, 'Robust AI'), (2022, 'AI ethics');","completion":"SELECT year, topic, COUNT(*) OVER (PARTITION BY year) as research_count FROM ai_safety_research ORDER BY year;"}
{"prompt":"How many economic diversification efforts in the 'diversification' table have been unsuccessful or have been abandoned? with given SQL schema CREATE TABLE diversification (id INT, effort VARCHAR(50), status VARCHAR(20));","completion":"SELECT COUNT(*) FROM diversification WHERE status IN ('unsuccessful', 'abandoned');"}
{"prompt":"List all rural infrastructure projects in South America, along with their start and end dates, and the number of beneficiaries. with given SQL schema CREATE SCHEMA if not exists rural_dev; use rural_dev; CREATE TABLE if not exists rural_infrastructure_projects (id INT, project_name VARCHAR(255), country VARCHAR(255), start_date DATE, end_date DATE, num_beneficiaries INT, PRIMARY KEY (id));","completion":"SELECT project_name, start_date, end_date, num_beneficiaries FROM rural_dev.rural_infrastructure_projects WHERE country LIKE 'South%' OR country LIKE 'Sur%';"}
{"prompt":"What is the minimum budget (in USD) for agricultural innovation projects in the Caribbean? with given SQL schema CREATE TABLE Agricultural_Projects (id INT, project_name TEXT, budget FLOAT, region TEXT); INSERT INTO Agricultural_Projects (id, project_name, budget, region) VALUES (1, 'Sustainable Farming', 100000.00, 'Caribbean'), (2, 'AgriTech Solutions', 120000.00, 'Caribbean');","completion":"SELECT MIN(budget) FROM Agricultural_Projects WHERE region = 'Caribbean';"}
{"prompt":"Which community development initiatives had the lowest cost in Nepal between 2019 and 2021? with given SQL schema CREATE TABLE community_development_nepal (id INT, country VARCHAR(255), initiative VARCHAR(255), cost FLOAT, year INT); INSERT INTO community_development_nepal (id, country, initiative, cost, year) VALUES (1, 'Nepal', 'Education Program', 150000, 2019), (2, 'Nepal', 'Healthcare Program', 120000, 2020), (3, 'Nepal', 'Clean Water Access', 180000, 2021);","completion":"SELECT initiative, MIN(cost) as min_cost FROM community_development_nepal WHERE country = 'Nepal' AND year BETWEEN 2019 AND 2021 GROUP BY initiative;"}
{"prompt":"Which aircraft models were involved in the highest number of accidents in 2020? with given SQL schema CREATE TABLE Aircraft(id INT, model VARCHAR(50), manufacturer VARCHAR(50)); CREATE TABLE Accidents(id INT, aircraft_id INT, year INT); INSERT INTO Aircraft(id, model, manufacturer) VALUES (1, 'A320', 'Airbus'), (2, '737', 'Boeing'); INSERT INTO Accidents(id, aircraft_id, year) VALUES (1, 1, 2020), (2, 1, 2020), (3, 2, 2020), (4, 2, 2020), (5, 2, 2020);","completion":"SELECT Aircraft.model, COUNT(*) as num_accidents FROM Aircraft INNER JOIN Accidents ON Aircraft.id = Accidents.aircraft_id WHERE Accidents.year = 2020 GROUP BY Aircraft.model ORDER BY num_accidents DESC LIMIT 1;"}
{"prompt":"Delete the 'community_education' table with given SQL schema CREATE TABLE community_education (id INT PRIMARY KEY, location_id INT, program_name VARCHAR(50), start_date DATE, end_date DATE, attendees INT);","completion":"DROP TABLE community_education;"}
{"prompt":"What is the total number of animals in the 'sanctuary_a' and 'sanctuary_b'? with given SQL schema CREATE TABLE sanctuary_a (animal_id INT, animal_name VARCHAR(50), population INT); INSERT INTO sanctuary_a VALUES (1, 'tiger', 25); INSERT INTO sanctuary_a VALUES (2, 'elephant', 30); CREATE TABLE sanctuary_b (animal_id INT, animal_name VARCHAR(50), population INT); INSERT INTO sanctuary_b VALUES (1, 'tiger', 20); INSERT INTO sanctuary_b VALUES (3, 'monkey', 35);","completion":"SELECT SUM(s1.population + s2.population) FROM sanctuary_a s1 FULL OUTER JOIN sanctuary_b s2 ON s1.animal_id = s2.animal_id;"}
{"prompt":"Delete the record with date '2022-01-02' in the FishTank table. with given SQL schema CREATE TABLE FishTank (date DATE, temperature FLOAT); INSERT INTO FishTank (date, temperature) VALUES ('2022-01-01', 20.5), ('2022-01-02', 21.0), ('2022-01-03', 21.5);","completion":"DELETE FROM FishTank WHERE date = '2022-01-02';"}
{"prompt":"How many events were attended by the 'Senior' demographic in the year 2020? with given SQL schema CREATE SCHEMA if not exists arts_culture; CREATE TABLE if not exists arts_culture.events(event_id INT, event_name VARCHAR(50), event_date DATE); CREATE TABLE if not exists arts_culture.attendance(attendance_id INT, event_id INT, demographic VARCHAR(10));","completion":"SELECT COUNT(*) FROM arts_culture.events JOIN arts_culture.attendance ON events.event_id = attendance.event_id WHERE attendance.demographic = 'Senior' AND YEAR(events.event_date) = 2020;"}
{"prompt":"How many visual art events took place in each location in the last 3 years? with given SQL schema CREATE TABLE Events (event_id INT, event_type VARCHAR(50), location VARCHAR(50), event_date DATE); INSERT INTO Events (event_id, event_type, location, event_date) VALUES (1, 'Visual Art', 'New York', '2021-01-01'), (2, 'Theater', 'Los Angeles', '2020-01-01'), (3, 'Visual Art', 'New York', '2019-01-01'), (4, 'Visual Art', 'Los Angeles', '2018-01-01');","completion":"SELECT location, COUNT(event_id) FROM Events WHERE event_type = 'Visual Art' AND event_date >= DATE(NOW()) - INTERVAL 3 YEAR GROUP BY location"}
{"prompt":"What is the average age of attendees for each event type? with given SQL schema CREATE TABLE Events (event_id INT, event_type VARCHAR(50)); INSERT INTO Events (event_id, event_type) VALUES (1, 'Concert'), (2, 'Theater'), (3, 'Exhibition'); CREATE TABLE Audience (audience_id INT, event_id INT, attendee_age INT); INSERT INTO Audience (audience_id, event_id, attendee_age) VALUES (1, 1, 30), (2, 1, 45), (3, 2, 25), (4, 2, 32), (5, 3, 40), (6, 3, 50);","completion":"SELECT e.event_type, AVG(a.attendee_age) AS avg_age FROM Events e JOIN Audience a ON e.event_id = a.event_id GROUP BY e.event_type;"}
{"prompt":"What is the average attendance for theater events in LA and NY? with given SQL schema CREATE TABLE Events (event_id INT, event_type VARCHAR(50), location VARCHAR(50)); CREATE TABLE Attendance (attendee_id INT, event_id INT); INSERT INTO Events (event_id, event_type, location) VALUES (1, 'Musical', 'New York'), (2, 'Theater', 'Los Angeles'), (3, 'Theater', 'New York'); INSERT INTO Attendance (attendee_id, event_id) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 3);","completion":"SELECT AVG(cnt) FROM (SELECT COUNT(DISTINCT A.attendee_id) AS cnt FROM Attendance A WHERE EXISTS (SELECT 1 FROM Events E WHERE E.event_type = 'Theater' AND E.location IN ('Los Angeles', 'New York') AND A.event_id = E.event_id)) AS subquery"}
{"prompt":"What was the total revenue from online donations for the \"Visual Arts\" program? with given SQL schema CREATE TABLE online_donations_2 (program VARCHAR(255), donation FLOAT); INSERT INTO online_donations_2 (program, donation) VALUES ('Visual Arts', 500), ('Visual Arts', 250), ('Dance Education', 300);","completion":"SELECT SUM(donation) FROM online_donations_2 WHERE program = 'Visual Arts';"}
{"prompt":"What is the average safety score of chemical production sites in the United States, partitioned by state and ranked in descending order? with given SQL schema CREATE TABLE production_sites (site_id INT, site_name TEXT, country TEXT, state TEXT, safety_score FLOAT); INSERT INTO production_sites (site_id, site_name, country, state, safety_score) VALUES (1, 'Site A', 'USA', 'NY', 92.5), (2, 'Site B', 'USA', 'CA', 87.4), (3, 'Site C', 'USA', 'TX', 95.3), (4, 'Site D', 'USA', 'FL', 89.2);","completion":"SELECT state, AVG(safety_score) as avg_safety_score, ROW_NUMBER() OVER (ORDER BY AVG(safety_score) DESC) as rank FROM production_sites WHERE country = 'USA' GROUP BY state ORDER BY rank;"}
{"prompt":"What is the production rate rank for each chemical in the past 6 months? with given SQL schema CREATE TABLE production_rates (id INT PRIMARY KEY, chemical_name VARCHAR(255), production_rate INT, date DATE); INSERT INTO production_rates (id, chemical_name, production_rate, date) VALUES (5, 'Citric Acid', 600, '2022-01-01'); INSERT INTO production_rates (id, chemical_name, production_rate, date) VALUES (6, 'Boric Acid', 800, '2022-01-02');","completion":"SELECT chemical_name, production_rate, RANK() OVER(ORDER BY production_rate DESC) as production_rank FROM production_rates WHERE date >= DATEADD(month, -6, GETDATE());"}
{"prompt":"Which countries have the highest climate finance expenditures in Latin America? with given SQL schema CREATE TABLE climate_finance (id INT, country VARCHAR(50), sector VARCHAR(50), amount FLOAT); INSERT INTO climate_finance (id, country, sector, amount) VALUES (1, 'Brazil', 'Climate Mitigation', 2500000); INSERT INTO climate_finance (id, country, sector, amount) VALUES (2, 'Argentina', 'Climate Adaptation', 1800000); INSERT INTO climate_finance (id, country, sector, amount) VALUES (3, 'Colombia', 'Climate Mitigation', 2200000);","completion":"SELECT country, SUM(amount) as total_amount FROM climate_finance WHERE sector = 'Climate Mitigation' OR sector = 'Climate Adaptation' GROUP BY country ORDER BY total_amount DESC;"}
{"prompt":"What are the total sales for each drug in Q2 2020? with given SQL schema CREATE TABLE drugs (drug_id INT, drug_name TEXT); INSERT INTO drugs (drug_id, drug_name) VALUES (1001, 'Ibuprofen'), (1002, 'Paracetamol'), (1003, 'Aspirin'); CREATE TABLE sales (sale_id INT, drug_id INT, sale_date DATE, revenue FLOAT); INSERT INTO sales (sale_id, drug_id, sale_date, revenue) VALUES (1, 1001, '2020-04-05', 1800.0), (2, 1002, '2020-04-10', 2300.0), (3, 1003, '2020-04-15', 1400.0), (4, 1001, '2020-05-20', 1900.0), (5, 1002, '2020-06-25', 2400.0);","completion":"SELECT drug_name, SUM(revenue) as total_sales FROM sales JOIN drugs ON sales.drug_id = drugs.drug_id WHERE sale_date BETWEEN '2020-04-01' AND '2020-06-30' GROUP BY drug_name;"}
{"prompt":"What is the market access strategy for each drug, ranked by market access approval date? with given SQL schema CREATE TABLE MarketAccess (DrugName varchar(50), ApprovalDate date, ApprovalYear int); INSERT INTO MarketAccess (DrugName, ApprovalDate, ApprovalYear) VALUES ('DrugE', '2021-02-14', 2021), ('DrugF', '2020-11-22', 2020), ('DrugG', '2019-07-06', 2019), ('DrugH', '2020-10-18', 2020);","completion":"SELECT DrugName, ApprovalDate, ROW_NUMBER() OVER (ORDER BY ApprovalDate) as ApprovalRank FROM MarketAccess;"}
{"prompt":"Who are the top 2 sales representatives by total sales for 'DrugT' in the North America region in Q1 2021? with given SQL schema CREATE TABLE sales_data_2 (rep_name TEXT, drug_name TEXT, region TEXT, quarter INT, total_sales FLOAT); INSERT INTO sales_data_2 (rep_name, drug_name, region, quarter, total_sales) VALUES ('RepE', 'DrugT', 'North America', 1, 600000), ('RepF', 'DrugT', 'North America', 1, 700000), ('RepG', 'DrugT', 'North America', 1, 550000), ('RepH', 'DrugT', 'North America', 1, 450000);","completion":"SELECT rep_name, SUM(total_sales) AS total_sales FROM sales_data_2 WHERE drug_name = 'DrugT' AND region = 'North America' AND quarter = 1 GROUP BY rep_name ORDER BY total_sales DESC LIMIT 2;"}
{"prompt":"What is the number of hospital beds per state? with given SQL schema CREATE TABLE beds (state VARCHAR(2), num_beds INT);","completion":"SELECT state, AVG(num_beds) FROM beds GROUP BY state;"}
{"prompt":"Insert a new row into the 'startups' table for 'Health Startup 5', founded in '2022-03-15' by 'Middle Eastern' founder, with a funding amount of $7,500,000 with given SQL schema CREATE TABLE startups (id INT, name TEXT, industry TEXT, founding_date DATE, raised_funding FLOAT, founder_race TEXT);","completion":"INSERT INTO startups (name, industry, founding_date, raised_funding, founder_race) VALUES ('Health Startup 5', 'Healthcare', '2022-03-15', 7500000.00, 'Middle Eastern');"}
{"prompt":"What is the percentage of diverse individuals in the workforce for companies with headquarters in 'Indonesia' and 'Argentina'? with given SQL schema CREATE TABLE diversity (id INT, company_id INT, gender VARCHAR(50), race VARCHAR(50), role VARCHAR(50)); INSERT INTO diversity (id, company_id, gender, race, role) VALUES (6, 5, 'Female', 'Latinx', 'Data Scientist'); INSERT INTO diversity (id, company_id, gender, race, role) VALUES (7, 6, 'Male', 'Indigenous', 'Software Engineer'); CREATE TABLE company (id INT, name VARCHAR(50), founding_year INT, industry VARCHAR(50), country VARCHAR(50)); INSERT INTO company (id, name, founding_year, industry, country) VALUES (5, 'Budi Utama', 2017, 'E-commerce', 'Indonesia'); INSERT INTO company (id, name, founding_year, industry, country) VALUES (6, 'Garcia Group', 2018, 'Fintech', 'Argentina');","completion":"SELECT d.company_id, ROUND(COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM diversity WHERE company_id = d.company_id), 2) as percentage FROM diversity d WHERE (SELECT country FROM company WHERE id = d.company_id) IN ('Indonesia', 'Argentina') GROUP BY d.company_id;"}
{"prompt":"What is the average budget spent on disability support programs per type and month? with given SQL schema CREATE TABLE Disability_Support_Data (Program_ID INT, Program_Name VARCHAR(50), Budget DECIMAL(10,2), Accommodation_Type VARCHAR(50), Request_Date DATE);","completion":"SELECT DATE_PART('month', Request_Date) as Month, Accommodation_Type, AVG(Budget) as Avg_Budget FROM Disability_Support_Data GROUP BY Month, Accommodation_Type;"}
{"prompt":"List the regulatory frameworks for digital assets in Switzerland and their respective statuses. with given SQL schema CREATE TABLE swiss_frameworks (framework_name VARCHAR(50), status VARCHAR(20)); INSERT INTO swiss_frameworks (framework_name, status) VALUES ('Blockchain Act', 'Passed'), ('Swiss FinTech License', 'Active'), ('DLT-Pilot', 'Active');","completion":"SELECT framework_name, status FROM swiss_frameworks;"}
{"prompt":"What are the total transaction fees for each miner in the last week? with given SQL schema CREATE TABLE block_rewards (miner TEXT, block_height INTEGER, reward REAL, timestamp TIMESTAMP); INSERT INTO block_rewards (miner, block_height, reward, timestamp) VALUES ('AntPool', 1234569, 10.56, '2022-01-08 10:01:20'); INSERT INTO block_rewards (miner, block_height, reward, timestamp) VALUES ('SlushPool', 1234570, 11.34, '2022-01-09 11:02:30');","completion":"SELECT miner, SUM(reward) as total_fees FROM block_rewards WHERE timestamp >= (SELECT timestamp FROM block_rewards ORDER BY timestamp DESC LIMIT 1) - INTERVAL '1 week' GROUP BY miner;"}
{"prompt":"What is the daily average number of unique active wallets on the Polygon network in the last month? with given SQL schema CREATE TABLE polygon_wallets (wallet_id INT, wallet_address VARCHAR(42), daily_activity DATE);","completion":"SELECT AVG(wallet_count) as daily_average_unique_wallets FROM (SELECT wallet_address, COUNT(DISTINCT daily_activity) as wallet_count FROM polygon_wallets WHERE daily_activity >= NOW() - INTERVAL '1 month' GROUP BY wallet_address) subquery;"}
{"prompt":"What is the average carbon sequestration rate for tropical forests in Brazil? with given SQL schema CREATE TABLE CarbonSequestration (id INT, name VARCHAR(255), region VARCHAR(255), year INT, rate FLOAT); INSERT INTO CarbonSequestration (id, name, region, year, rate) VALUES (1, 'Tropical Forest', 'Brazil', 2010, 3.5);","completion":"SELECT AVG(rate) FROM CarbonSequestration WHERE name = 'Tropical Forest' AND region = 'Brazil';"}
{"prompt":"What are the total sales for each quarter by region? with given SQL schema CREATE TABLE sales (product_id INT, product_name VARCHAR(100), category VARCHAR(50), sale_date DATE, revenue DECIMAL(10, 2), region VARCHAR(50)); INSERT INTO sales (product_id, product_name, category, sale_date, revenue, region) VALUES (1, 'Lipstick', 'Cosmetics', '2022-01-02', 25.99, 'North'), (2, 'Foundation', 'Cosmetics', '2022-01-15', 34.99, 'South');","completion":"SELECT region, EXTRACT(QUARTER FROM sale_date) AS quarter, SUM(revenue) AS total_sales FROM sales GROUP BY region, quarter;"}
{"prompt":"What is the total CO2 emissions of cosmetic companies in the EU? with given SQL schema CREATE TABLE company (company_id INT, company_name VARCHAR(50), co2_emissions FLOAT, region VARCHAR(50));","completion":"SELECT SUM(co2_emissions) FROM company WHERE region = 'EU';"}
{"prompt":"What is the average ticket price for each artist? with given SQL schema CREATE TABLE Tickets (id INT, event_id INT, artist VARCHAR(255), price FLOAT);","completion":"SELECT artist, AVG(price) FROM Tickets GROUP BY artist;"}
{"prompt":"What is the average ticket price for musicals in New York? with given SQL schema CREATE TABLE musicals (title VARCHAR(255), location VARCHAR(255), price DECIMAL(5,2)); INSERT INTO musicals (title, location, price) VALUES ('Phantom of the Opera', 'New York', 125.99), ('Lion King', 'New York', 149.99);","completion":"SELECT AVG(price) FROM musicals WHERE location = 'New York';"}
{"prompt":"Get the average veteran unemployment rate for the last 3 years by state with given SQL schema CREATE TABLE veteran_unemployment (state TEXT, year INT, rate FLOAT); INSERT INTO veteran_unemployment (state, year, rate) VALUES ('California', 2021, 5.3), ('California', 2020, 5.7), ('California', 2019, 6.1), ('New York', 2021, 4.9), ('New York', 2020, 5.2), ('New York', 2019, 5.6);","completion":"SELECT state, AVG(rate) FROM veteran_unemployment WHERE year BETWEEN YEAR(CURRENT_DATE) - 3 AND YEAR(CURRENT_DATE) GROUP BY state;"}
{"prompt":"What is the average time between equipment maintenance for each type of military aircraft? with given SQL schema CREATE TABLE equipment (id INT, equipment_type VARCHAR(255), manufacturer VARCHAR(255)); CREATE TABLE maintenance (id INT, equipment_id INT, maintenance_date DATE); INSERT INTO equipment (id, equipment_type, manufacturer) VALUES (1, 'F-16', 'Lockheed Martin'); INSERT INTO equipment (id, equipment_type, manufacturer) VALUES (2, 'F-35', 'Lockheed Martin'); INSERT INTO equipment (id, equipment_type, manufacturer) VALUES (3, 'C-130', 'Lockheed Martin'); INSERT INTO maintenance (id, equipment_id, maintenance_date) VALUES (1, 1, '2022-01-01'); INSERT INTO maintenance (id, equipment_id, maintenance_date) VALUES (2, 1, '2022-04-01'); INSERT INTO maintenance (id, equipment_id, maintenance_date) VALUES (3, 2, '2022-02-01'); INSERT INTO maintenance (id, equipment_id, maintenance_date) VALUES (4, 2, '2022-05-01'); INSERT INTO maintenance (id, equipment_id, maintenance_date) VALUES (5, 3, '2022-03-01');","completion":"SELECT e.equipment_type, AVG(DATEDIFF(m2.maintenance_date, m1.maintenance_date)) as avg_maintenance_interval FROM equipment e JOIN maintenance m1 ON e.id = m1.equipment_id JOIN maintenance m2 ON e.id = m2.equipment_id AND m2.maintenance_date > m1.maintenance_date GROUP BY e.equipment_type;"}
{"prompt":"What is the total spent on defense contracts in Q2 2021 by companies with 'Defense' in their name? with given SQL schema CREATE TABLE ContractData (company TEXT, contract_date DATE, contract_value FLOAT); INSERT INTO ContractData (company, contract_date, contract_value) VALUES ('Defense Co A', '2021-04-01', 1000000), ('Defense Co B', '2021-05-15', 1500000), ('NonDefense Co', '2021-04-30', 500000);","completion":"SELECT SUM(contract_value) FROM ContractData WHERE company LIKE '%Defense%' AND contract_date BETWEEN '2021-04-01' AND '2021-06-30';"}
{"prompt":"Delete records of soldiers who left the army before 2015-01-01 from the soldiers_personal_data table with given SQL schema CREATE TABLE soldiers_personal_data (soldier_id INT, name VARCHAR(50), rank VARCHAR(50), departure_date DATE);","completion":"DELETE FROM soldiers_personal_data WHERE departure_date < '2015-01-01';"}
{"prompt":"Insert a new peacekeeping operation named 'Abyei' in South Sudan with operation ID 101, starting from 2022-01-01 with given SQL schema CREATE TABLE peacekeeping_operations (operation_id INT, operation_name VARCHAR(255), start_date DATE, end_date DATE, operation_region VARCHAR(255));","completion":"INSERT INTO peacekeeping_operations (operation_id, operation_name, start_date, end_date, operation_region) VALUES (101, 'Abyei', '2022-01-01', NULL, 'South Sudan');"}
{"prompt":"Find the total transaction amount for each customer in the past month, grouped by week? with given SQL schema CREATE TABLE transactions (transaction_date DATE, customer_id INT, amount DECIMAL(10,2)); INSERT INTO transactions (transaction_date, customer_id, amount) VALUES ('2022-01-01', 1, 100), ('2022-01-05', 1, 200), ('2022-01-02', 2, 150), ('2022-01-03', 2, 50), ('2022-01-04', 3, 300), ('2022-01-05', 3, 250), ('2022-01-10', 1, 50), ('2022-01-15', 2, 350), ('2022-01-20', 3, 400);","completion":"SELECT EXTRACT(WEEK FROM transaction_date) AS week, customer_id, SUM(amount) AS total_amount FROM transactions WHERE transaction_date >= CURRENT_DATE - INTERVAL '1 month' GROUP BY week, customer_id ORDER BY week, customer_id;"}
{"prompt":"How many high-risk transactions occurred in the 'EMEA' region in the last quarter? with given SQL schema CREATE TABLE transactions (id INT, customer_id INT, region VARCHAR(50), transaction_amount DECIMAL(10,2), transaction_date DATE); INSERT INTO transactions (id, customer_id, region, transaction_amount, transaction_date) VALUES (1, 1, 'EMEA', 5000.00, '2021-01-05'); INSERT INTO transactions (id, customer_id, region, transaction_amount, transaction_date) VALUES (2, 2, 'APAC', 3000.00, '2021-02-10');","completion":"SELECT COUNT(*) FROM transactions WHERE region = 'EMEA' AND transaction_date >= '2021-01-01' AND transaction_date <= '2021-03-31';"}
{"prompt":"What are the unique circular economy initiatives in factories located in each continent? with given SQL schema CREATE TABLE factories (factory_id INT, name TEXT, location TEXT); CREATE TABLE initiatives (initiative_id INT, factory_id INT, description TEXT, circular_economy BOOLEAN); INSERT INTO factories (factory_id, name, location) VALUES (1, 'Factory A', 'City A, Asia'), (2, 'Factory B', 'City B, Africa'), (3, 'Factory C', 'City C, Europe'), (4, 'Factory D', 'City D, North America'), (5, 'Factory E', 'City E, South America'), (6, 'Factory F', 'City F, Australia'); INSERT INTO initiatives (initiative_id, factory_id, description, circular_economy) VALUES (1, 1, 'Recycling program', true), (2, 2, 'Reuse program', true), (3, 3, 'Waste reduction program', true), (4, 4, 'Composting program', true), (5, 5, 'Donation program', true), (6, 6, 'Upcycling program', true);","completion":"SELECT f.location, i.description FROM factories f JOIN initiatives i ON f.factory_id = i.factory_id WHERE i.circular_economy = true GROUP BY f.location, i.description;"}
{"prompt":"Add a column for 'Era' to the Sites table. with given SQL schema CREATE TABLE Sites (SiteID INT PRIMARY KEY, SiteName TEXT, Location TEXT, StartDate DATE, EndDate DATE);","completion":"ALTER TABLE Sites ADD Era TEXT;"}
{"prompt":"How many artifacts were found in each excavation site? with given SQL schema CREATE TABLE Excavation_Sites (Site_ID INT, Site_Name TEXT, Country TEXT, Number_of_Artifacts INT);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (1, 'Pompeii', 'Italy', 10000);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (2, 'Tutankhamun', 'Egypt', 5000);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (3, 'Machu Picchu', 'Peru', 3000);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (4, 'Angkor Wat', 'Cambodia', 2500);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (5, 'Teotihuacan', 'Mexico', 2001);","completion":"SELECT Site_ID, Site_Name, SUM(Number_of_Artifacts) FROM Excavation_Sites GROUP BY Site_ID, Site_Name;"}
{"prompt":"How many unique artifact types are present at each excavation site? with given SQL schema CREATE TABLE ExcavationSite (SiteID INT, SiteName VARCHAR(50)); INSERT INTO ExcavationSite (SiteID, SiteName) VALUES (1, 'Site A'), (2, 'Site B'), (3, 'Site C'); CREATE TABLE Artifact (ArtifactID INT, SiteID INT, ObjectType VARCHAR(50)); INSERT INTO Artifact (ArtifactID, SiteID, ObjectType) VALUES (1, 1, 'Pottery'), (2, 1, 'Tool'), (3, 2, 'Statue'), (4, 2, 'Bead'), (5, 3, 'Bead'), (6, 3, 'Jewelry'), (7, 3, 'Bead');","completion":"SELECT e.SiteName, COUNT(DISTINCT a.ObjectType) AS UniqueArtifactTypes FROM ExcavationSite e JOIN Artifact a ON e.SiteID = a.SiteID GROUP BY e.SiteName;"}
{"prompt":"How many beds are available in all rural hospitals? with given SQL schema CREATE TABLE rural_hospitals( hospital_id INT PRIMARY KEY, name VARCHAR(255), bed_count INT, rural_population_served INT);","completion":"SELECT SUM(bed_count) FROM rural_hospitals;"}
{"prompt":"How many streams were there for each artist in the first quarter of 2019? with given SQL schema CREATE TABLE artists (artist_id INT, artist_name VARCHAR(30)); INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Ariana Grande'), (2, 'BTS'), (3, 'Drake'), (4, 'Ed Sheeran'), (5, 'Taylor Swift'); CREATE TABLE streams (stream_id INT, artist_id INT, revenue DECIMAL(10,2), stream_date DATE); INSERT INTO streams (stream_id, artist_id, revenue, stream_date) VALUES (1, 1, 10.50, '2019-03-15'), (2, 1, 12.25, '2019-07-27'), (3, 2, 9.99, '2019-09-01'), (4, 3, 15.00, '2019-11-29'), (5, 1, 8.75, '2019-12-31'), (6, 2, 11.25, '2019-05-14'), (7, 3, 7.50, '2019-01-02'), (8, 4, 9.50, '2019-03-05'), (9, 5, 12.00, '2019-01-10'), (10, 1, 10.00, '2019-01-15');","completion":"SELECT artists.artist_name, COUNT(streams.stream_id) AS total_streams FROM artists INNER JOIN streams ON artists.artist_id = streams.artist_id WHERE streams.stream_date BETWEEN '2019-01-01' AND '2019-03-31' GROUP BY artists.artist_name;"}
{"prompt":"What is the total amount donated by each organization in the last six months? with given SQL schema CREATE TABLE Donations (id INT, organization TEXT, donation_amount FLOAT, donation_date DATE); INSERT INTO Donations (id, organization, donation_amount, donation_date) VALUES (1, 'Code for Change', 2000, '2022-03-22');","completion":"SELECT organization, SUM(donation_amount) as total_donation FROM Donations WHERE donation_date >= DATEADD(month, -6, GETDATE()) GROUP BY organization;"}
{"prompt":"What is the total number of volunteers who engaged in programs in the first half of 2019, and the total amount donated in that time period? with given SQL schema CREATE TABLE Donors (DonorID INT, Name TEXT, TotalDonation DECIMAL(10,2), DonationDate DATE); CREATE TABLE Volunteers (VolunteerID INT, Name TEXT, ProgramID INT, VolunteerDate DATE); CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Donors VALUES (1, 'John Doe', 5000.00, '2019-01-01'), (2, 'Jane Smith', 3000.00, '2019-06-01'); INSERT INTO Volunteers VALUES (1, 'Alice', 1, '2019-01-01'), (2, 'Bob', 1, '2019-06-01'), (3, 'Charlie', 2, '2019-06-01'); INSERT INTO Programs VALUES (1, 'Education'), (2, 'Environment');","completion":"SELECT COUNT(DISTINCT V.VolunteerID) as NumVolunteers, SUM(D.TotalDonation) as TotalDonated FROM Donors D INNER JOIN Volunteers V ON D.DonationDate = V.VolunteerDate WHERE YEAR(V.VolunteerDate) = 2019 AND MONTH(V.VolunteerDate) <= 6;"}
{"prompt":"Who were the top 3 volunteer programs by total hours in 2023? with given SQL schema CREATE TABLE VolunteerPrograms (ProgramID int, ProgramName varchar(255), VolunteerHours int); INSERT INTO VolunteerPrograms VALUES (1, 'Education', 1500), (2, 'Healthcare', 2000), (3, 'Environment', 1200), (4, 'Arts & Culture', 1750), (5, 'Social Services', 2200);","completion":"SELECT ProgramName FROM (SELECT ProgramName, ROW_NUMBER() OVER (ORDER BY VolunteerHours DESC) as Rank FROM VolunteerPrograms) as ProgramRanks WHERE Rank <= 3;"}
{"prompt":"List the names of students who have never taken a lifelong learning course. with given SQL schema CREATE TABLE student_lifelong_learning (student_id INT, course_id INT); INSERT INTO student_lifelong_learning (student_id, course_id) VALUES (1, 1), (2, NULL), (3, 2), (4, NULL);","completion":"SELECT student_id FROM student_lifelong_learning WHERE course_id IS NULL;"}
{"prompt":"Calculate the percentage of employees who received a promotion in the last 12 months, and display the result with one decimal place. with given SQL schema CREATE TABLE Employees (EmployeeID INT, PromotionDate DATE);","completion":"SELECT ROUND(COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM Employees) , 1) AS PromotionPercentage FROM Employees WHERE PromotionDate >= DATEADD(year, -1, GETDATE());"}
{"prompt":"Delete records in the 'renewable' table where type is not 'wind' or 'solar' with given SQL schema CREATE TABLE renewable ( id INT PRIMARY KEY, type VARCHAR(20), capacity FLOAT ); INSERT INTO renewable (id, type, capacity) VALUES (1, 'wind', 300.2), (2, 'solar', 400.5), (3, 'hydro', 500.3), (4, 'geothermal', 600.4);","completion":"WITH cte AS (DELETE FROM renewable WHERE type NOT IN ('wind', 'solar')) DELETE FROM cte;"}
{"prompt":"Calculate the total number of exploration activities for each platform, indicating which platforms have more than 2 activities with given SQL schema CREATE TABLE platform_activities (activity_id INT, platform_id INT, activity_type VARCHAR(255)); INSERT INTO platform_activities (activity_id, platform_id, activity_type) VALUES (1, 1, 'Drilling'), (2, 1, 'Maintenance'), (3, 2, 'Drilling'), (4, 3, 'Drilling'), (5, 3, 'Maintenance'), (6, 3, 'Seismic');","completion":"SELECT p.platform_id, p.platform_name, COUNT(pa.activity_id) as num_activities FROM platforms p INNER JOIN platform_activities pa ON p.platform_id = pa.platform_id GROUP BY p.platform_id HAVING num_activities > 2;"}
{"prompt":"List the names and production quantities of wells in the Permian Basin, along with the names of the fields they belong to with given SQL schema CREATE TABLE Well (WellID int, WellName varchar(50), FieldID int); CREATE TABLE Field (FieldID int, FieldName varchar(50), Location varchar(50));","completion":"SELECT Well.WellName, Well.FieldID, Field.FieldName, Well.ProductionQuantity  FROM Well INNER JOIN Field ON Well.FieldID = Field.FieldID WHERE Field.Location = 'Permian Basin';"}
{"prompt":"List the top 3 teams with the highest number of wins in the 2021 season. with given SQL schema CREATE TABLE nba_teams (team_id INT, team_name VARCHAR(255), wins INT); INSERT INTO nba_teams (team_id, team_name, wins) VALUES (1, 'Atlanta Hawks', 41), (2, 'Boston Celtics', 36), (3, 'Brooklyn Nets', 48), (4, 'Charlotte Hornets', 33);","completion":"SELECT team_name, wins FROM nba_teams ORDER BY wins DESC LIMIT 3;"}
{"prompt":"What is the average time each athlete spent in the swimming pool during the Olympics? with given SQL schema CREATE TABLE olympic_swimming (athlete VARCHAR(50), time_in_pool INT); INSERT INTO olympic_swimming (athlete, time_in_pool) VALUES ('Michael Phelps', 1500), ('Katie Ledecky', 1600), ('Sun Yang', 1700);","completion":"SELECT AVG(time_in_pool) AS avg_time FROM olympic_swimming;"}
{"prompt":"List the number of community development projects and their total budget for each region. with given SQL schema CREATE TABLE regions (id INT, name VARCHAR(255)); CREATE TABLE projects (id INT, region_id INT, name VARCHAR(255), budget FLOAT);","completion":"SELECT r.name as region_name, COUNT(projects.id) as project_count, SUM(projects.budget) as total_budget FROM regions r LEFT JOIN projects ON r.id = projects.region_id GROUP BY r.id;"}
{"prompt":"List the number of unique donors and total amount donated for each disaster response, including donors who have donated to multiple disasters. with given SQL schema CREATE TABLE donors (id INT, disaster_id INT, amount FLOAT); CREATE TABLE disasters (id INT, name VARCHAR(255));","completion":"SELECT d.name, COUNT(DISTINCT donors.id) as donor_count, SUM(donors.amount) as total_donated FROM disasters d LEFT JOIN donors ON d.id = donors.disaster_id GROUP BY d.id;"}
{"prompt":"How many wheelchair accessible vehicles are there in the London bus fleet? with given SQL schema CREATE TABLE bus_fleet (vehicle_id INT, type VARCHAR(20), is_wheelchair_accessible BOOLEAN); INSERT INTO bus_fleet (vehicle_id, type, is_wheelchair_accessible) VALUES (1, 'Double Decker', true), (2, 'Single Decker', false), (3, 'Minibus', true);","completion":"SELECT COUNT(*) FROM bus_fleet WHERE is_wheelchair_accessible = true;"}
{"prompt":"Identify the most common pick-up and drop-off times for taxi trips with given SQL schema CREATE TABLE taxi_trip (trip_id INT, pickup_time TIMESTAMP, dropoff_time TIMESTAMP);","completion":"SELECT TIME(pickup_time) AS most_common_pickup, TIME(dropoff_time) AS most_common_dropoff, COUNT(*) AS trip_count FROM taxi_trip GROUP BY pickup_time, dropoff_time ORDER BY trip_count DESC LIMIT 1;"}
{"prompt":"What is the average fare for each route in the 'routes' table? with given SQL schema CREATE TABLE routes (route_id INT, route_name VARCHAR(255), length FLOAT, fare FLOAT);","completion":"SELECT route_name, AVG(fare) as avg_fare FROM routes GROUP BY route_name;"}
{"prompt":"Delete records in the consumer_awareness table where the region is 'South America' and awareness_score is less than 6 with given SQL schema CREATE TABLE consumer_awareness (id INT PRIMARY KEY, consumer_id INT, region VARCHAR(255), awareness_score INT); INSERT INTO consumer_awareness (id, consumer_id, region, awareness_score) VALUES (1, 1001, 'Asia Pacific', 6), (2, 1002, 'Europe', 7), (3, 1003, 'Asia Pacific', 4), (4, 1004, 'Americas', 8), (5, 1005, 'South America', 5), (6, 1006, 'South America', 4);","completion":"DELETE FROM consumer_awareness WHERE region = 'South America' AND awareness_score < 6;"}
{"prompt":"List all suppliers located in France that provide recycled materials. with given SQL schema CREATE TABLE Suppliers (id INT, name TEXT, country TEXT); INSERT INTO Suppliers VALUES (1, 'Supplier1', 'France'), (2, 'Supplier2', 'Germany'), (3, 'Supplier3', 'Italy'); CREATE TABLE RecycledMaterials (id INT, supplier_id INT, material TEXT); INSERT INTO RecycledMaterials VALUES (1, 1, 'RecycledPolyester'), (2, 3, 'RecycledPlastic'), (3, 1, 'RecycledPaper');","completion":"SELECT s.name FROM Suppliers s INNER JOIN RecycledMaterials rm ON s.id = rm.supplier_id WHERE s.country = 'France';"}
{"prompt":"What is the name of the factory with the lowest number of fair trade certified products? with given SQL schema CREATE TABLE Factory_Products(id INT, factory_id INT, product_id INT, is_fair_trade_certified BOOLEAN); INSERT INTO Factory_Products(id, factory_id, product_id, is_fair_trade_certified) VALUES (1, 1, 1, true), (2, 1, 2, true), (3, 2, 3, false); CREATE TABLE Factories(id INT, name TEXT); INSERT INTO Factories(id, name) VALUES (1, 'Factory A'), (2, 'Factory B');","completion":"SELECT Factories.name FROM Factories INNER JOIN (SELECT factory_id, COUNT(*) as product_count FROM Factory_Products WHERE is_fair_trade_certified = true GROUP BY factory_id) AS Subquery ON Factories.id = Subquery.factory_id ORDER BY Subquery.product_count ASC LIMIT 1;"}
{"prompt":"How many new users joined from each country in the past week? with given SQL schema CREATE TABLE user_registrations (user_id INT, country VARCHAR(50), registration_date DATE); INSERT INTO user_registrations (user_id, country, registration_date) VALUES (1, 'USA', '2022-01-01'), (2, 'Canada', '2022-01-02'), (3, 'Mexico', '2022-01-03'), (4, 'Brazil', '2022-01-04'), (5, 'Argentina', '2022-01-05');","completion":"SELECT country, COUNT(DISTINCT user_id) AS new_users FROM user_registrations WHERE registration_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY country;"}
{"prompt":"Show the top 3 content categories in Japan with the most posts. with given SQL schema CREATE TABLE content_categories (id INT, content_category VARCHAR(255)); CREATE TABLE posts_extended (id INT, content_category_id INT, content TEXT, country VARCHAR(255)); INSERT INTO content_categories (id, content_category) VALUES (1, 'AI'), (2, 'Data Science'), (3, 'Machine Learning'); INSERT INTO posts_extended (id, content_category_id, content, country) VALUES (1, 1, 'Hello', 'Japan'), (2, 1, 'World', 'Japan'), (3, 2, 'AI', 'Japan');","completion":"SELECT content_categories.content_category, COUNT(posts_extended.id) AS post_count FROM content_categories JOIN posts_extended ON posts_extended.content_category_id = content_categories.id WHERE posts_extended.country = 'Japan' GROUP BY content_categories.content_category ORDER BY post_count DESC LIMIT 3;"}
{"prompt":"What is the sum of sales revenue from 'Men's' garments in 'Canada'? with given SQL schema CREATE TABLE canada_sales_revenue (id INT, garment_type VARCHAR(20), revenue INT);INSERT INTO canada_sales_revenue (id, garment_type, revenue) VALUES (1, 'Men''s', 25000), (2, 'Men''s', 30000), (3, 'Women''s', 40000);","completion":"SELECT SUM(revenue) FROM canada_sales_revenue WHERE garment_type = 'Men''s';"}
{"prompt":"List all the clients from the Socially Responsible Microfinance program and their account balances. with given SQL schema CREATE TABLE microfinance_program (client_id INT, program_name VARCHAR(30), account_balance DECIMAL(10,2)); INSERT INTO microfinance_program (client_id, program_name, account_balance) VALUES (101, 'Socially Responsible Microfinance', 5000.00), (102, 'Conventional Microfinance', 7000.00), (103, 'Socially Responsible Microfinance', 3000.00);","completion":"SELECT * FROM microfinance_program WHERE program_name = 'Socially Responsible Microfinance';"}
{"prompt":"What is the total amount of interest earned from socially responsible lending? with given SQL schema CREATE TABLE socially_responsible_loans(id INT, bank_id INT, amount INT, interest_rate DECIMAL);","completion":"SELECT SUM(s.amount * s.interest_rate) FROM socially_responsible_loans s;"}
{"prompt":"Identify the warehouse in Colombia that handled the maximum number of pallets in a day. with given SQL schema CREATE TABLE warehouse_stats (id INT, warehouse_country VARCHAR(20), warehouse_city VARCHAR(20), pallets INT, handling_date DATE); INSERT INTO warehouse_stats (id, warehouse_country, warehouse_city, pallets, handling_date) VALUES (1, 'Colombia', 'Bogota', 42, '2022-07-02'), (2, 'Colombia', 'Medellin', 48, '2022-07-05');","completion":"SELECT warehouse_city, MAX(pallets) FROM warehouse_stats WHERE warehouse_country = 'Colombia' GROUP BY warehouse_city;"}
{"prompt":"How many bioprocess engineering projects are in Eastern Europe? with given SQL schema CREATE SCHEMA if not exists bioprocessing;CREATE TABLE if not exists bioprocessing.projects (id INT PRIMARY KEY, name VARCHAR(100), region VARCHAR(100)); INSERT INTO bioprocessing.projects (id, name, region) VALUES (1, 'ProjA', 'Warsaw'), (2, 'ProjB', 'Moscow'), (3, 'ProjC', 'Prague'), (4, 'ProjD', 'Bucharest'), (5, 'ProjE', 'Kiev');","completion":"SELECT COUNT(*) FROM bioprocessing.projects WHERE region = 'Eastern Europe';"}
{"prompt":"How many genetic research projects are being conducted in the UK? with given SQL schema CREATE SCHEMA if not exists genetics;CREATE TABLE if not exists genetics.research_projects (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO genetics.research_projects (id, name, location, type) VALUES (1, 'ProjectA', 'UK', 'Genetic'), (2, 'ProjectB', 'US', 'Genomic'), (3, 'ProjectC', 'UK', 'Genetic'), (4, 'ProjectD', 'DE', 'Genomic');","completion":"SELECT COUNT(*) FROM genetics.research_projects WHERE location = 'UK' AND type = 'Genetic';"}
{"prompt":"What is the total number of female researchers in each department? with given SQL schema CREATE TABLE department (id INT, name VARCHAR(255)); CREATE TABLE researcher (id INT, name VARCHAR(255), gender VARCHAR(10), department_id INT);","completion":"SELECT department.name, COUNT(researcher.id) FROM department INNER JOIN researcher ON department.id = researcher.department_id WHERE researcher.gender = 'Female' GROUP BY department.name;"}
{"prompt":"What is the total installed capacity (in MW) of renewable energy projects in the 'renewable_projects' table? with given SQL schema CREATE TABLE if not exists renewable_projects (project_id INT, project_name VARCHAR(255), location VARCHAR(255), installed_capacity FLOAT);","completion":"SELECT SUM(installed_capacity) FROM renewable_projects WHERE installed_capacity IS NOT NULL;"}
{"prompt":"How many unique patients have been treated for mental health conditions by providers in each region? with given SQL schema CREATE TABLE regions (region_id INT, region_name VARCHAR(50)); INSERT INTO regions (region_id, region_name) VALUES (1, 'Northeast'), (2, 'Southeast'), (3, 'Midwest'), (4, 'Southwest'), (5, 'West'); CREATE TABLE providers (provider_id INT, provider_name VARCHAR(50), region_id INT); INSERT INTO providers (provider_id, provider_name, region_id) VALUES (1, 'Dr. Smith', 1), (2, 'Dr. Johnson', 2); CREATE TABLE provider_patients (provider_id INT, patient_id INT, condition_id INT);","completion":"SELECT p.region_id, COUNT(DISTINCT pp.patient_id) as num_patients FROM providers p JOIN provider_patients pp ON p.provider_id = pp.provider_id GROUP BY p.region_id;"}
{"prompt":"What is the revenue for each online travel agency in Europe, ordered by revenue in descending order? with given SQL schema CREATE TABLE otas (ota_id INT, ota_name TEXT, region TEXT, revenue FLOAT); INSERT INTO otas (ota_id, ota_name, region, revenue) VALUES (1, 'OTA A', 'Europe', 850000), (2, 'OTA B', 'Europe', 950000), (3, 'OTA C', 'Asia', 1200000);","completion":"SELECT ota_name, revenue FROM otas WHERE region = 'Europe' ORDER BY revenue DESC;"}
{"prompt":"What is the total revenue generated by 'OTAs' in '2022'? with given SQL schema CREATE TABLE otas (id INT, ota_name TEXT, revenue INT); INSERT INTO otas (id, ota_name, revenue) VALUES (1, 'Expedia', 500000), (2, 'Booking.com', 600000), (3, 'Priceline', 400000);","completion":"SELECT SUM(revenue) FROM otas WHERE EXTRACT(YEAR FROM CURRENT_DATE) = 2022;"}
{"prompt":"What is the average temperature recorded for the 'polar_bear' species in the 'Arctic_Animals' table compared to the 'penguin' species in the 'Antarctic_Animals' table? with given SQL schema CREATE TABLE Arctic_Animals (species TEXT, avg_temp FLOAT); CREATE TABLE Antarctic_Animals (species TEXT, avg_temp FLOAT);","completion":"SELECT AVG(Arctic_Animals.avg_temp) FROM Arctic_Animals WHERE Arctic_Animals.species = 'polar_bear' INTERSECT SELECT AVG(Antarctic_Animals.avg_temp) FROM Antarctic_Animals WHERE Antarctic_Animals.species = 'penguin'"}
{"prompt":"What is the minimum temperature recorded in each Arctic region in 2020? with given SQL schema CREATE TABLE WeatherData(region VARCHAR(255), year INT, temperature FLOAT);","completion":"SELECT region, MIN(temperature) FROM WeatherData WHERE year = 2020 GROUP BY region;"}
{"prompt":"How many patients have been treated with CBT or DBT? with given SQL schema CREATE TABLE treatments (patient_id INT, treatment VARCHAR(20)); INSERT INTO treatments (patient_id, treatment) VALUES (1, 'CBT'), (2, 'DBT'), (3, 'Medication'), (4, 'CBT'), (5, 'DBT');","completion":"SELECT COUNT(*) FROM treatments WHERE treatment IN ('CBT', 'DBT');"}
{"prompt":"What is the total number of subway stations in the city of Berlin, Germany? with given SQL schema CREATE TABLE stations (id INT, name VARCHAR(255), location VARCHAR(255), type VARCHAR(255)); INSERT INTO stations (id, name, location, type) VALUES (1, 'Alexanderplatz', 'Berlin, Germany', 'Subway'), (2, 'Potsdamer Platz', 'Berlin, Germany', 'Subway');","completion":"SELECT COUNT(*) FROM stations WHERE location = 'Berlin, Germany' AND type = 'Subway';"}
{"prompt":"Provide the number of tourists visiting New Zealand, Australia, and Japan from 2018 to 2020 with given SQL schema CREATE TABLE TouristArrivals (country VARCHAR(255), year INT, tourists_count INT); INSERT INTO TouristArrivals (country, year, tourists_count) VALUES ('New Zealand', 2018, 3500000), ('New Zealand', 2019, 3700000), ('New Zealand', 2020, 1200000), ('Australia', 2018, 9000000), ('Australia', 2019, 9500000), ('Australia', 2020, 2500000), ('Japan', 2018, 31000000), ('Japan', 2019, 32000000), ('Japan', 2020, 8000000);","completion":"SELECT country, AVG(tourists_count) as avg_tourists FROM TouristArrivals WHERE country IN ('New Zealand', 'Australia', 'Japan') AND year BETWEEN 2018 AND 2020 GROUP BY country;"}
{"prompt":"What is the number of travel advisories issued for each country in the last 3 months? with given SQL schema CREATE TABLE TravelAdvisories (Country VARCHAR(255), Advisory INT, IssueDate DATE);","completion":"SELECT Country, COUNT(Advisory) OVER (PARTITION BY Country) AS NumAdvisories, TO_CHAR(IssueDate, 'YYYY-MM') AS Month FROM TravelAdvisories WHERE IssueDate >= ADD_MONTHS(CURRENT_DATE, -3) GROUP BY Country, Month;"}
{"prompt":"What is the location of the restorative justice program with the lowest ID in the 'justice_programs' table? with given SQL schema CREATE TABLE justice_programs (id INT, name VARCHAR(50), type VARCHAR(30), location VARCHAR(30)); INSERT INTO justice_programs (id, name, type, location) VALUES (1, 'Mediation Center', 'Restorative Justice', 'San Francisco'); INSERT INTO justice_programs (id, name, type, location) VALUES (2, 'Victim-Offender Reconciliation Program', 'Restorative Justice', 'Oakland'); INSERT INTO justice_programs (id, name, type, location) VALUES (3, 'Restorative Circle Facilitator Training', 'Restorative Justice', 'Los Angeles');","completion":"SELECT location FROM justice_programs WHERE id = (SELECT MIN(id) FROM justice_programs WHERE type = 'Restorative Justice');"}
{"prompt":"List all ocean floor mapping projects in the Arctic region. with given SQL schema CREATE SCHEMA oceans;CREATE TABLE oceans.mapping_projects (id INT PRIMARY KEY, project_name VARCHAR(50), region VARCHAR(50)); INSERT INTO oceans.mapping_projects (id, project_name, region) VALUES (1, 'Project A', 'Arctic'), (2, 'Project B', 'Antarctic');","completion":"SELECT context.project_name FROM oceans.mapping_projects AS context WHERE context.region = 'Arctic';"}
{"prompt":"Delete customer feedback with ID 2 with given SQL schema CREATE TABLE customer_feedback (id INT PRIMARY KEY, customer_id INT, menu_id INT, feedback VARCHAR(255)); INSERT INTO customer_feedback (id, customer_id, menu_id, feedback) VALUES (1, 1, 1, 'Loved it!'), (2, 2, 2, 'Did not like it.');","completion":"DELETE FROM customer_feedback WHERE id = 2;"}
{"prompt":"What is the average price of sustainable seafood items? with given SQL schema CREATE TABLE menu (item_id INT, item_name TEXT, type TEXT, price DECIMAL, is_sustainable BOOLEAN); INSERT INTO menu VALUES (1, 'Tuna Sandwich', 'Seafood', 8.99, true), (2, 'Shrimp Cocktail', 'Seafood', 7.99, false), (3, 'Sustainable Salmon', 'Seafood', 12.99, true);","completion":"SELECT AVG(price) FROM menu WHERE type = 'Seafood' AND is_sustainable = true;"}
{"prompt":"What is the average price of vegan breakfast menu items? with given SQL schema CREATE TABLE menus (menu_id INT, menu_name VARCHAR(255), category VARCHAR(255), price DECIMAL(10,2), is_vegan BOOLEAN); INSERT INTO menus (menu_id, menu_name, category, price, is_vegan) VALUES (1, 'Quinoa Salad', 'Lunch', 12.99, FALSE), (2, 'Vegan Scramble', 'Breakfast', 7.99, TRUE), (3, 'Cheeseburger', 'Dinner', 9.99, FALSE);","completion":"SELECT AVG(price) FROM menus WHERE category = 'Breakfast' AND is_vegan = TRUE;"}
{"prompt":"How many environmental impact assessments were conducted per year, for the last 5 years? with given SQL schema CREATE TABLE eia (id INT, year INT, assessment_count INT); INSERT INTO eia (id, year, assessment_count) VALUES (1, 2017, 300), (2, 2018, 350), (3, 2019, 400), (4, 2020, 450), (5, 2021, 500);","completion":"SELECT year, assessment_count FROM eia WHERE year BETWEEN 2017 AND 2021 ORDER BY year;"}
{"prompt":"Which country has the lowest total production of nickel, Indonesia or the Philippines? with given SQL schema CREATE TABLE nickel_production (country VARCHAR(20), quantity INT); INSERT INTO nickel_production (country, quantity) VALUES ('Indonesia', 700000), ('Philippines', 650000);","completion":"SELECT country, MIN(quantity) FROM nickel_production WHERE country IN ('Indonesia', 'Philippines') GROUP BY country;"}
{"prompt":"List all players who have played a specific VR game, 'CyberSphere', and their ages. with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(50)); CREATE TABLE VRPlayers (PlayerID INT, VRGameID INT); CREATE TABLE VRGames (VRGameID INT, Title VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (2, 28, 'Female', 'Canada'); INSERT INTO VRPlayers (PlayerID, VRGameID) VALUES (1, 1); INSERT INTO VRPlayers (PlayerID, VRGameID) VALUES (2, 1); INSERT INTO VRGames (VRGameID, Title) VALUES (1, 'CyberSphere');","completion":"SELECT Players.Age, Players.PlayerID FROM Players INNER JOIN VRPlayers ON Players.PlayerID = VRPlayers.PlayerID INNER JOIN VRGames ON VRPlayers.VRGameID = VRGames.VRGameID WHERE VRGames.Title = 'CyberSphere';"}
{"prompt":"What is the total number of players who have played the game 'Adventure' or are from the USA? with given SQL schema CREATE TABLE PlayerGameData (PlayerID INT, Age INT, Game VARCHAR(20), Country VARCHAR(20)); INSERT INTO PlayerGameData (PlayerID, Age, Game, Country) VALUES (1, 22, 'Adventure', 'Canada'), (2, 25, 'Shooter', 'USA'), (3, 28, 'Adventure', 'USA');","completion":"SELECT COUNT(DISTINCT PlayerID) FROM PlayerGameData WHERE Game = 'Adventure' OR Country = 'USA';"}
{"prompt":"Find the average temperature in field A for the month of June, 2021. with given SQL schema CREATE TABLE field_temperatures (field_id VARCHAR(10), temperature INT, reading_date DATE); INSERT INTO field_temperatures (field_id, temperature, reading_date) VALUES ('A', 25, '2021-06-01'), ('A', 28, '2021-06-02'), ('A', 22, '2021-06-03');","completion":"SELECT AVG(temperature) FROM field_temperatures WHERE field_id = 'A' AND reading_date BETWEEN '2021-06-01' AND '2021-06-30';"}
{"prompt":"What is the total number of police stations and fire stations in each region? with given SQL schema CREATE SCHEMA gov_service;CREATE TABLE gov_service.safety_data (region VARCHAR(20), facility_type VARCHAR(20), facility_count INT); INSERT INTO gov_service.safety_data (region, facility_type, facility_count) VALUES ('North', 'Police Station', 10), ('North', 'Fire Station', 5), ('South', 'Police Station', 12), ('South', 'Fire Station', 6), ('East', 'Police Station', 8), ('East', 'Fire Station', 4), ('West', 'Police Station', 7), ('West', 'Fire Station', 3);","completion":"SELECT region, SUM(facility_count) AS total_stations FROM gov_service.safety_data GROUP BY region;"}
{"prompt":"List the number of properties co-owned by women and men in each city in the database. with given SQL schema CREATE TABLE city_properties (city VARCHAR(50), co_owned BOOLEAN, owner_gender VARCHAR(10), property_id INT);","completion":"SELECT city, owner_gender, COUNT(*) AS count FROM city_properties WHERE co_owned = TRUE GROUP BY city, owner_gender;"}
{"prompt":"What is the average area of sustainable urban properties in the state of New York, broken down by property type? with given SQL schema CREATE TABLE sustainable_urban_properties (id INT, state VARCHAR(255), property_type VARCHAR(255), area FLOAT); INSERT INTO sustainable_urban_properties (id, state, property_type, area) VALUES (1, 'New York', 'Apartment', 1000.00), (2, 'New York', 'Condo', 1200.00);","completion":"SELECT property_type, AVG(area) FROM sustainable_urban_properties WHERE state = 'New York' GROUP BY property_type;"}
{"prompt":"What is the maximum size of a property in the city of Austin? with given SQL schema CREATE TABLE properties (id INT, property_id INT, city TEXT, size INT); INSERT INTO properties (id, property_id, city, size) VALUES (1, 101, 'Austin', 1200), (2, 102, 'Seattle', 900), (3, 103, 'Austin', 1500);","completion":"SELECT MAX(size) FROM properties WHERE city = 'Austin';"}
{"prompt":"Find the average energy efficiency rating of buildings in the top 3 most populous cities in Canada. with given SQL schema CREATE TABLE buildings (city_name VARCHAR(255), population INT, energy_efficiency_rating FLOAT); INSERT INTO buildings (city_name, population, energy_efficiency_rating) VALUES ('Toronto', 2900000, 75), ('Montreal', 1700000, 70), ('Vancouver', 650000, 80), ('Calgary', 1200000, 65), ('Edmonton', 950000, 60);","completion":"SELECT AVG(energy_efficiency_rating) as avg_rating FROM buildings WHERE population IN (SELECT population FROM (SELECT city_name, population FROM buildings WHERE city_name IN ('Toronto', 'Montreal', 'Vancouver') ORDER BY population DESC LIMIT 3) as subquery);"}
{"prompt":"What are the names and prices of the menu items that have the same name as a restaurant? with given SQL schema CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255), cuisine VARCHAR(255)); INSERT INTO restaurants (restaurant_id, name, cuisine) VALUES (1, 'Big Burger', 'American'); INSERT INTO restaurants (restaurant_id, name, cuisine) VALUES (2, 'Sushi Hana', 'Japanese'); CREATE TABLE menu_items (menu_item_id INT, name VARCHAR(255), price DECIMAL(5,2), restaurant_id INT); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (1, 'Big Burger', 12.99, 1); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (2, 'Chicken Teriyaki', 15.99, 2); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (3, 'Garden Salad', 7.99, 1);","completion":"SELECT name, price FROM menu_items WHERE name IN (SELECT name FROM restaurants);"}
{"prompt":"What is the average price of organic products sold by vendors in the US? with given SQL schema CREATE TABLE vendors (vendor_id INT, vendor_name TEXT, country TEXT);CREATE TABLE products (product_id INT, product_name TEXT, price DECIMAL, organic BOOLEAN, vendor_id INT); INSERT INTO vendors (vendor_id, vendor_name, country) VALUES (1, 'VendorA', 'USA'), (2, 'VendorB', 'Canada'); INSERT INTO products (product_id, product_name, price, organic, vendor_id) VALUES (1, 'ProductX', 15.99, true, 1), (2, 'ProductY', 12.49, false, 1), (3, 'ProductZ', 20.99, true, 2);","completion":"SELECT AVG(price) FROM products JOIN vendors ON products.vendor_id = vendors.vendor_id WHERE organic = true AND country = 'USA';"}
{"prompt":"What is the farthest distance from Earth for any spacecraft? with given SQL schema CREATE TABLE SpacecraftManufacturing (spacecraft_model VARCHAR(255), max_distance_from_earth FLOAT); INSERT INTO SpacecraftManufacturing (spacecraft_model, max_distance_from_earth) VALUES ('Voyager 1', 21335000000), ('Voyager 2', 17950000000), ('New Horizons', 12350000000);","completion":"SELECT MAX(max_distance_from_earth) FROM SpacecraftManufacturing;"}
{"prompt":"What is the latest medical data point for astronaut 'R. Riley'? with given SQL schema CREATE TABLE AstronautMedicalData (id INT, astronaut VARCHAR(255), data_point FLOAT, timestamp DATETIME); INSERT INTO AstronautMedicalData (id, astronaut, data_point, timestamp) VALUES (1, 'R. Riley', 92.0, '2022-03-01 12:00:00'), (2, 'R. Riley', 93.0, '2022-03-01 13:00:00');","completion":"SELECT MAX(data_point) FROM AstronautMedicalData WHERE astronaut = 'R. Riley';"}
{"prompt":"How many fans in the \"Toronto Raptors\" fan club are from Canada? with given SQL schema CREATE TABLE fan_demographics(id INT, name VARCHAR(50), team VARCHAR(50), country VARCHAR(50));INSERT INTO fan_demographics(id, name, team, country) VALUES (1, 'John Smith', 'Toronto Raptors', 'Canada'), (2, 'Jane Doe', 'Toronto Raptors', 'Canada'), (3, 'Bob Johnson', 'Toronto Raptors', 'USA');","completion":"SELECT COUNT(*) FROM fan_demographics WHERE team = 'Toronto Raptors' AND country = 'Canada';"}
{"prompt":"How many sports_events took place in '2018'? with given SQL schema CREATE TABLE sports_events (event_id INT, year INT, sport VARCHAR(20)); INSERT INTO sports_events (event_id, year, sport) VALUES (1, 2017, 'Football'), (2, 2018, 'Basketball'), (3, 2018, 'Baseball');","completion":"SELECT COUNT(*) FROM sports_events WHERE year = 2018;"}
{"prompt":"List the top 10 most frequently exploited vulnerabilities in the past year and the number of times each vulnerability has been exploited. with given SQL schema CREATE TABLE vulnerabilities (id INT, cve_id VARCHAR(255), publish_date DATE, severity VARCHAR(255), exploited_count INT); INSERT INTO vulnerabilities (id, cve_id, publish_date, severity, exploited_count) VALUES (1, 'CVE-2021-1234', '2021-01-01', 'CRITICAL', 20);","completion":"SELECT cve_id, exploited_count FROM vulnerabilities WHERE publish_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY cve_id ORDER BY exploited_count DESC LIMIT 10;"}
{"prompt":"What is the maximum, minimum, and average severity of vulnerabilities found in the 'Application' section for the last month? with given SQL schema CREATE TABLE vulnerabilities (id INT, section VARCHAR(50), severity INT, vulnerability_date DATE); INSERT INTO vulnerabilities (id, section, severity, vulnerability_date) VALUES (1, 'Network', 7, '2022-01-01'), (2, 'Application', 5, '2022-01-02');","completion":"SELECT section, MIN(severity) as min_severity, MAX(severity) as max_severity, AVG(severity) as avg_severity FROM vulnerabilities WHERE section = 'Application' AND vulnerability_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY section;"}
{"prompt":"Display the total quantity of all transportation means in the total_inventory view. with given SQL schema CREATE VIEW total_inventory AS SELECT 'ebike' AS transportation_type, SUM(quantity) AS total FROM micro_mobility UNION ALL SELECT 'autonomous_bus', SUM(quantity) FROM public_transportation UNION ALL SELECT ev_type, SUM(quantity) FROM fleet_inventory WHERE ev_type IN ('electric_car', 'hybrid_car', 'electric_truck', 'hybrid_truck') GROUP BY ev_type;","completion":"SELECT SUM(total) FROM total_inventory;"}
{"prompt":"What is the average speed of electric buses in Mexico City, Mexico? with given SQL schema CREATE TABLE electric_buses (bus_id INT, speed FLOAT, city VARCHAR(50));","completion":"SELECT AVG(speed) FROM electric_buses WHERE city = 'Mexico City';"}
{"prompt":"Update the price to 25 in the products table for all records with category='Dress' with given SQL schema CREATE TABLE products (id INT, product_name VARCHAR(50), category VARCHAR(50), price DECIMAL(5,2));","completion":"UPDATE products SET price = 25 WHERE category = 'Dress';"}
{"prompt":"What are the names and production dates of garments made from fabrics with a sustainability score over 70, produced after 2021-01-01? with given SQL schema CREATE TABLE fabrics (id INT, name VARCHAR(50), type VARCHAR(50), sustainability_score INT); INSERT INTO fabrics (id, name, type, sustainability_score) VALUES (1, 'Organic Linen', 'Natural', 80); INSERT INTO fabrics (id, name, type, sustainability_score) VALUES (2, 'Recycled Nylon', 'Synthetic', 72);","completion":"SELECT garments.name, garments.production_date FROM garments JOIN fabrics ON garments.fabric_id = fabrics.id WHERE fabrics.sustainability_score > 70 AND garments.production_date > '2021-01-01';"}
{"prompt":"Show the number of workplace safety incidents per month, for the past year, for workplaces with a union. with given SQL schema CREATE TABLE safety_incidents (id INT, workplace INT, incident_date DATE); INSERT INTO safety_incidents (id, workplace, incident_date) VALUES (1, 1, '2022-06-15'); INSERT INTO safety_incidents (id, workplace, incident_date) VALUES (2, 2, '2022-07-01'); INSERT INTO safety_incidents (id, workplace, incident_date) VALUES (3, 1, '2022-08-10');","completion":"SELECT DATE_FORMAT(incident_date, '%Y-%m') as month, COUNT(*) as num_incidents FROM safety_incidents si INNER JOIN workplaces w ON si.workplace = w.id WHERE w.union_affiliation IS NOT NULL GROUP BY month ORDER BY STR_TO_DATE(month, '%Y-%m');"}
{"prompt":"Show the union names and their collective bargaining agreements that are located in the 'south_region'? with given SQL schema CREATE TABLE union_names (union_name TEXT); INSERT INTO union_names (union_name) VALUES ('Union A'), ('Union B'), ('Union C'), ('Union D'); CREATE TABLE cb_agreements (union_name TEXT, region TEXT); INSERT INTO cb_agreements (union_name, region) VALUES ('Union A', 'west_region'), ('Union B', 'south_region'), ('Union C', 'north_region'), ('Union D', 'south_region');","completion":"SELECT union_names.union_name, cb_agreements.region FROM union_names INNER JOIN cb_agreements ON union_names.union_name = cb_agreements.union_name WHERE cb_agreements.region = 'south_region';"}
{"prompt":"What is the total number of union membership applications submitted per month in 2021? with given SQL schema CREATE TABLE Applications (Id INT, ApplicationDate DATE); INSERT INTO Applications (Id, ApplicationDate) VALUES (1, '2021-01-01'), (2, '2021-02-15'), (3, '2021-03-05'), (4, '2021-04-20');","completion":"SELECT MONTH(ApplicationDate) as Month, COUNT(*) as TotalApplications FROM Applications WHERE YEAR(ApplicationDate) = 2021 GROUP BY Month;"}
{"prompt":"What is the average water consumption in the agricultural sector in Australia for the year 2020? with given SQL schema CREATE TABLE water_consumption_kl (region VARCHAR(20), sector VARCHAR(20), year INT, value FLOAT); INSERT INTO water_consumption_kl (region, sector, year, value) VALUES ('Australia', 'Agricultural', 2020, 12000000);","completion":"SELECT AVG(value) FROM water_consumption_kl WHERE sector = 'Agricultural' AND region = 'Australia' AND year = 2020;"}
{"prompt":"What is the maximum water consumption by a single customer in the city of Miami? with given SQL schema CREATE TABLE miami_customers (customer_id INT, city VARCHAR(20), water_usage FLOAT); INSERT INTO miami_customers (customer_id, city, water_usage) VALUES (1, 'Miami', 5000), (2, 'Miami', 7000), (3, 'Miami', 8000), (4, 'Miami', 9000);","completion":"SELECT MAX(water_usage) FROM miami_customers;"}
{"prompt":"Find the percentage of AI researchers who are from underrepresented countries, rounded to two decimal places. with given SQL schema CREATE TABLE ai_researchers (id INT, name VARCHAR(100), gender VARCHAR(10), country VARCHAR(50), published_papers INT); INSERT INTO ai_researchers (id, name, gender, country, published_papers) VALUES (1, 'Alice', 'Female', 'USA', 3), (2, 'Bob', 'Male', 'Canada', 0), (3, 'Charlotte', 'Female', 'UK', 2), (4, 'David', 'Male', 'USA', 1), (5, 'Eva', 'Female', 'Germany', 0), (6, 'Francisco', 'Male', 'Mexico', 2);","completion":"SELECT ROUND(100.0 * SUM(CASE WHEN country IN ('Mexico', 'India', 'Brazil', 'South Africa', 'Indonesia') THEN 1 ELSE 0 END) \/ COUNT(*), 2) AS percentage_underrepresented_countries FROM ai_researchers;"}
{"prompt":"What is the maximum bias score for each creative AI application? with given SQL schema CREATE TABLE CreativeAIs (id INT, name VARCHAR(255), bias_score DECIMAL(5,2)); INSERT INTO CreativeAIs (id, name, bias_score) VALUES (1, 'AI Painter', 0.15), (2, 'AI Music Composer', 0.08), (3, 'AI Poet', 0.12);","completion":"SELECT name, MAX(bias_score) as max_bias_score FROM CreativeAIs GROUP BY name;"}
{"prompt":"Which explainable AI techniques are most frequently used in financial services? with given SQL schema CREATE TABLE Financial_Services (ID INT, Company VARCHAR(50), Explainable_AI VARCHAR(50)); INSERT INTO Financial_Services (ID, Company, Explainable_AI) VALUES (1, 'CompanyA', 'LIME'), (2, 'CompanyB', 'SHAP'), (3, 'CompanyC', 'LIME'), (4, 'CompanyD', 'SHAP'), (5, 'CompanyE', 'TreeExplainer');","completion":"SELECT Explainable_AI, COUNT(*) OVER (PARTITION BY Explainable_AI) as Count FROM Financial_Services WHERE Explainable_AI IN ('LIME', 'SHAP', 'TreeExplainer') ORDER BY Count DESC;"}
{"prompt":"Delete records with a start_date after 2023 in the economic_diversification table with given SQL schema CREATE TABLE economic_diversification (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, start_date DATE, end_date DATE);","completion":"WITH cte AS (DELETE FROM economic_diversification WHERE start_date > '2023-01-01') SELECT * FROM cte;"}
{"prompt":"Update records in the agricultural_innovations table with rural_innovation_id 2 to have a year of 2024 with given SQL schema CREATE TABLE agricultural_innovations (id INT PRIMARY KEY, rural_innovation_id INT, name VARCHAR(255), description TEXT, year INT);","completion":"WITH cte AS (UPDATE agricultural_innovations SET year = 2024 WHERE rural_innovation_id = 2) SELECT * FROM cte;"}
{"prompt":"Find the types of fish farmed in Canada and their respective quantities. with given SQL schema CREATE TABLE FarmB (species VARCHAR(20), country VARCHAR(20), quantity INT); INSERT INTO FarmB (species, country, quantity) VALUES ('Salmon', 'Canada', 120000); INSERT INTO FarmB (species, country, quantity) VALUES ('Trout', 'Canada', 45000); INSERT INTO FarmB (species, country, quantity) VALUES ('Cod', 'Canada', 28000);","completion":"SELECT species, quantity FROM FarmB WHERE country = 'Canada';"}
{"prompt":"What is the average stocking density of fish in freshwater farms, grouped by farm type, where the density is greater than 1000 fish per cubic meter? with given SQL schema CREATE TABLE freshwater_farms (farm_id INT, farm_type VARCHAR(255), stocking_density INT); INSERT INTO freshwater_farms (farm_id, farm_type, stocking_density) VALUES (1, 'Pond', 1200), (2, 'Cage', 1500), (3, 'Recirculating', 2000), (4, 'Pond', 800), (5, 'Cage', 1200);","completion":"SELECT farm_type, AVG(stocking_density) FROM freshwater_farms WHERE stocking_density > 1000 GROUP BY farm_type;"}
{"prompt":"What is the average amount donated by each gender? with given SQL schema CREATE TABLE Donors (id INT, gender VARCHAR(10), donation_id INT); INSERT INTO Donors (id, gender, donation_id) VALUES (1, 'Male', 1001), (2, 'Female', 1002), (3, 'Male', 1003); CREATE TABLE Donations (id INT, donor_id INT, amount DECIMAL(10,2)); INSERT INTO Donations (id, donor_id, amount) VALUES (1001, 1, 50.00), (1002, 2, 75.00), (1003, 3, 100.00);","completion":"SELECT g.gender, AVG(d.amount) as avg_donation FROM Donors g JOIN Donations d ON g.id = d.donor_id GROUP BY g.gender;"}
{"prompt":"What is the total number of tickets sold by each event category? with given SQL schema CREATE TABLE events (event_id INT, event_name VARCHAR(50), event_category VARCHAR(50)); INSERT INTO events (event_id, event_name, event_category) VALUES (1, 'Dance Performance', 'Dance'), (2, 'Theatre Play', 'Theatre'), (3, 'Art Exhibit', 'Visual Arts');","completion":"SELECT event_category, SUM(tickets_sold) FROM events e JOIN tickets t ON e.event_id = t.event_id GROUP BY event_category;"}
{"prompt":"How many viewers in Canada watched TV shows with a rating above 8.5 in 2022? with given SQL schema CREATE TABLE TV_Shows (region VARCHAR(20), year INT, rating DECIMAL(2,1), viewers INT); INSERT INTO TV_Shows (region, year, rating, viewers) VALUES ('Canada', 2022, 8.2, 1000000), ('Canada', 2022, 8.7, 800000), ('Canada', 2022, 9.1, 1200000);","completion":"SELECT COUNT(*) FROM (SELECT * FROM TV_Shows WHERE region = 'Canada' AND year = 2022 AND rating > 8.5) AS high_rated_shows;"}
{"prompt":"What was the average project cost for sustainable buildings in Arizona in Q3 2022? with given SQL schema CREATE TABLE Sustainable_Buildings_AZ (id INT, project_cost FLOAT, state VARCHAR(255), quarter VARCHAR(255)); INSERT INTO Sustainable_Buildings_AZ (id, project_cost, state, quarter) VALUES (1, 600000, 'Arizona', 'Q3 2022'); INSERT INTO Sustainable_Buildings_AZ (id, project_cost, state, quarter) VALUES (2, 700000, 'Arizona', 'Q3 2022'); INSERT INTO Sustainable_Buildings_AZ (id, project_cost, state, quarter) VALUES (3, 800000, 'Arizona', 'Q3 2022');","completion":"SELECT AVG(project_cost) FROM Sustainable_Buildings_AZ WHERE state = 'Arizona' AND quarter = 'Q3 2022';"}
{"prompt":"What was the total revenue from cannabis-infused edibles sold by each dispensary in the city of San Francisco in the month of December 2021? with given SQL schema CREATE TABLE Dispensaries (id INT, name VARCHAR(255), city VARCHAR(255), state VARCHAR(255));CREATE TABLE Inventory (id INT, dispensary_id INT, revenue DECIMAL(10, 2), product_type VARCHAR(255), month INT, year INT);INSERT INTO Dispensaries (id, name, city, state) VALUES (1, 'Golden Gate Greens', 'San Francisco', 'CA');INSERT INTO Inventory (id, dispensary_id, revenue, product_type, month, year) VALUES (1, 1, 2000, 'edibles', 12, 2021);","completion":"SELECT d.name, SUM(i.revenue) as total_revenue FROM Dispensaries d JOIN Inventory i ON d.id = i.dispensary_id WHERE d.city = 'San Francisco' AND i.product_type = 'edibles' AND i.month = 12 AND i.year = 2021 GROUP BY d.name;"}
{"prompt":"What was the average CO2 emission reduction target for each country in 2020? with given SQL schema CREATE TABLE co2_reduction_targets (country TEXT, year INT, target FLOAT); INSERT INTO co2_reduction_targets (country, year, target) VALUES ('USA', 2015, 10.0), ('China', 2015, 12.0), ('Germany', 2015, 15.0), ('France', 2015, 20.0), ('Brazil', 2015, 25.0), ('USA', 2020, 12.0), ('China', 2020, 14.0), ('Germany', 2020, 17.0), ('France', 2020, 22.0), ('Brazil', 2020, 27.0);","completion":"SELECT country, AVG(target) as avg_target FROM co2_reduction_targets WHERE year IN (2020) GROUP BY country;"}
{"prompt":"What is the average number of days from drug approval to the completion of Phase 3 clinical trials for drugs that were approved after 2015? with given SQL schema CREATE TABLE clinical_trials (id INT PRIMARY KEY, drug_id INT, phase VARCHAR(50), completion_date DATE); CREATE TABLE drugs (id INT PRIMARY KEY, name VARCHAR(255), manufacturer VARCHAR(255), approval_date DATE);","completion":"SELECT AVG(ct.completion_date - d.approval_date) as avg_days_to_phase FROM clinical_trials ct JOIN drugs d ON ct.drug_id = d.id WHERE ct.phase = 'Phase 3' AND d.approval_date > '2015-01-01';"}
{"prompt":"Find the number of unique healthcare centers in the USA where at least 5 infectious disease cases were reported in the last month. with given SQL schema CREATE TABLE healthcare_centers (id INT, name TEXT, country TEXT, created_at TIMESTAMP); INSERT INTO healthcare_centers (id, name, country, created_at) VALUES (1, 'St. John Hospital', 'USA', '2021-01-01 10:00:00'), (2, 'Montreal General Hospital', 'Canada', '2021-01-02 12:00:00'); CREATE TABLE infectious_disease_reports (id INT, patient_id INT, healthcare_center_id INT, report_date TIMESTAMP); INSERT INTO infectious_disease_reports (id, patient_id, healthcare_center_id, report_date) VALUES (1, 1, 1, '2021-07-10 14:30:00'), (2, 2, 1, '2021-06-15 09:00:00'), (3, 3, 2, '2021-07-16 11:00:00');","completion":"SELECT COUNT(DISTINCT healthcare_centers.id) FROM healthcare_centers JOIN infectious_disease_reports ON healthcare_centers.id = infectious_disease_reports.healthcare_center_id WHERE infectious_disease_reports.report_date >= DATEADD(month, -1, CURRENT_TIMESTAMP) GROUP BY healthcare_centers.id HAVING COUNT(infectious_disease_reports.id) >= 5 AND healthcare_centers.country = 'USA';"}
{"prompt":"What is the average rating of hospitals with over 10000 patients served, grouped by state? with given SQL schema CREATE TABLE public.healthcare_access (id SERIAL PRIMARY KEY, state TEXT, city TEXT, facility_type TEXT, patients_served INT, rating INT); INSERT INTO public.healthcare_access (state, city, facility_type, patients_served, rating) VALUES ('Texas', 'Dallas', 'Clinic', 3000, 7), ('Florida', 'Miami', 'Hospital', 8000, 9), ('Texas', 'Houston', 'Hospital', 12000, 8);","completion":"SELECT state, facility_type, AVG(rating) AS avg_rating FROM public.healthcare_access WHERE patients_served > 10000 GROUP BY state, facility_type;"}
{"prompt":"What was the life expectancy in Japan in 2019? with given SQL schema CREATE TABLE life_expectancy (id INT, country VARCHAR(50), year INT, expectancy DECIMAL(5,2)); INSERT INTO life_expectancy (id, country, year, expectancy) VALUES (1, 'Japan', 2019, 84.43), (2, 'Japan', 2018, 83.98);","completion":"SELECT expectancy FROM life_expectancy WHERE country = 'Japan' AND year = 2019;"}
{"prompt":"What is the average yield of crops for each indigenous community? with given SQL schema CREATE TABLE indigenous_communities (id INT, name VARCHAR(255)); INSERT INTO indigenous_communities VALUES (1, 'Mayans'), (2, 'Navajos'); CREATE TABLE crop_yields (community_id INT, yield INT);","completion":"SELECT ic.name, AVG(cy.yield) as avg_yield FROM indigenous_communities ic JOIN crop_yields cy ON ic.id = cy.community_id GROUP BY ic.id, ic.name;"}
{"prompt":"What are the cosmetic brands that use cruelty-free ingredients? with given SQL schema CREATE TABLE if not exists brand (id INT PRIMARY KEY, name TEXT, category TEXT, country TEXT, cruelty_free BOOLEAN); INSERT INTO brand (id, name, category, country, cruelty_free) VALUES (2, 'The Body Shop', 'Cosmetics', 'United Kingdom', true);","completion":"SELECT name FROM brand WHERE cruelty_free = true;"}
{"prompt":"What was the minimum response time for police calls in January 2022? with given SQL schema CREATE TABLE police_calls (id INT, call_date DATE, response_time INT); INSERT INTO police_calls (id, call_date, response_time) VALUES (1, '2022-01-01', 10), (2, '2022-01-02', 15), (3, '2022-01-03', 12);","completion":"SELECT MIN(response_time) FROM police_calls WHERE call_date BETWEEN '2022-01-01' AND '2022-01-31';"}
{"prompt":"What is the total number of artworks by each artist? with given SQL schema CREATE TABLE Artists (ArtistID INT, ArtistName TEXT); INSERT INTO Artists (ArtistID, ArtistName) VALUES (1, 'Picasso'), (2, 'Van Gogh'); CREATE TABLE Artworks (ArtworkID INT, ArtistID INT, Title TEXT); INSERT INTO Artworks (ArtworkID, ArtistID, Title) VALUES (1, 1, 'Guernica'), (2, 1, 'Three Musicians'), (3, 2, 'Starry Night'), (4, 2, 'Sunflowers');","completion":"SELECT ArtistID, COUNT(*) as TotalArtworks FROM Artworks GROUP BY ArtistID;"}
{"prompt":"Add new diplomacy meeting records for 'Iraq', 'Colombia', and 'Indonesia' with meeting outcomes 'Successful', 'Pending', and 'Failed' respectively with given SQL schema CREATE TABLE diplomacy_meetings (meeting_id INT, country_name VARCHAR(50), meeting_date DATE, meeting_outcome VARCHAR(20));","completion":"INSERT INTO diplomacy_meetings (country_name, meeting_outcome) VALUES ('Iraq', 'Successful'), ('Colombia', 'Pending'), ('Indonesia', 'Failed');"}
{"prompt":"List all defense diplomacy events in Asia in 2018. with given SQL schema CREATE TABLE defense_diplomacy (event_id INT, event_name VARCHAR(255), region VARCHAR(255), date DATE); INSERT INTO defense_diplomacy (event_id, event_name, region, date) VALUES (1, 'Event A', 'Asia', '2018-01-01'), (2, 'Event B', 'Asia', '2018-12-31'), (3, 'Event C', 'Europe', '2018-07-04'); CREATE TABLE regions (region VARCHAR(255));","completion":"SELECT event_name FROM defense_diplomacy INNER JOIN regions ON defense_diplomacy.region = regions.region WHERE region = 'Asia' AND date >= '2018-01-01' AND date <= '2018-12-31';"}
{"prompt":"What is the maximum salary in the Research and Development department? with given SQL schema CREATE TABLE Employees (id INT, name VARCHAR(50), department VARCHAR(50), salary DECIMAL(10,2));","completion":"SELECT MAX(salary) FROM Employees WHERE department = 'Research and Development';"}
{"prompt":"What is the median age of artifacts in the 'Prehistoric_Artifacts' table? with given SQL schema CREATE TABLE Prehistoric_Artifacts (id INT, artifact_name VARCHAR(50), age INT); INSERT INTO Prehistoric_Artifacts (id, artifact_name, age) VALUES (1, 'Hand Axe', 25000), (2, 'Stone Spear', 20000), (3, 'Flint Knife', 30000);","completion":"SELECT AVG(age) FROM (SELECT artifact_name, age FROM Prehistoric_Artifacts ORDER BY age) AS subquery GROUP BY artifact_name;"}
{"prompt":"What is the total number of streams per month, by platform, for the last 12 months? with given SQL schema CREATE TABLE monthly_streams (stream_id INT, platform VARCHAR(255), streams INT, stream_month DATE);  CREATE VIEW total_streams_per_month AS SELECT platform, DATE_TRUNC('month', stream_month) as month, SUM(streams) as total_streams FROM monthly_streams WHERE stream_month >= DATEADD(month, -12, CURRENT_DATE) GROUP BY platform, month;","completion":"SELECT * FROM total_streams_per_month;"}
{"prompt":"How many unique one-time donors made donations in 'q4' of '2022'? with given SQL schema CREATE TABLE Donations (id INT, donor_type VARCHAR(10), donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO Donations (id, donor_type, donation_amount, donation_date) VALUES (1, 'one-time', 50.00, '2022-01-01'); INSERT INTO Donations (id, donor_type, donation_amount, donation_date) VALUES (2, 'recurring', 25.00, '2022-01-15'); INSERT INTO Donations (id, donor_type, donation_amount, donation_date) VALUES (3, 'one-time', 75.00, '2022-12-31');","completion":"SELECT COUNT(DISTINCT donor_id) FROM Donations WHERE donor_type = 'one-time' AND QUARTER(donation_date) = 4 AND YEAR(donation_date) = 2022;"}
{"prompt":"What is the installed capacity of renewable energy sources in countries that have a carbon tax? with given SQL schema CREATE TABLE carbon_tax (country VARCHAR(255), tax BOOLEAN); INSERT INTO carbon_tax (country, tax) VALUES ('Canada', TRUE), ('Chile', TRUE), ('Colombia', TRUE), ('US', FALSE), ('Mexico', TRUE); CREATE TABLE renewable_energy (country VARCHAR(255), capacity FLOAT); INSERT INTO renewable_energy (country, capacity) VALUES ('Canada', 90000), ('Chile', 50000), ('Colombia', 30000), ('US', 200000), ('Mexico', 70000);","completion":"SELECT capacity FROM renewable_energy WHERE country IN (SELECT country FROM carbon_tax WHERE tax = TRUE);"}
{"prompt":"What is the total carbon pricing revenue for Canada in 2021? with given SQL schema CREATE TABLE carbon_pricing (country VARCHAR(255), year INT, revenue FLOAT); INSERT INTO carbon_pricing (country, year, revenue) VALUES ('Canada', 2021, 34.5), ('Canada', 2022, 37.2);","completion":"SELECT revenue FROM carbon_pricing WHERE country = 'Canada' AND year = 2021;"}
{"prompt":"What is the production of well 'W010' in the 'OilWells' table for the year 2014? with given SQL schema CREATE TABLE OilWells (WellID VARCHAR(10), Production FLOAT, DrillYear INT);","completion":"SELECT Production FROM OilWells WHERE WellID = 'W010' AND DrillYear = 2014;"}
{"prompt":"What is the average home run distance for each player in the 2021 MLB season? with given SQL schema CREATE TABLE players (player_id INT, name TEXT, team TEXT, avg_home_run_distance FLOAT); INSERT INTO players (player_id, name, team, avg_home_run_distance) VALUES (1, 'John Doe', 'Yankees', 415.3), (2, 'Jane Smith', 'Dodgers', 401.7);","completion":"SELECT team, AVG(avg_home_run_distance) as avg_distance FROM players GROUP BY team;"}
{"prompt":"What is the highest-scoring cricket match in history and which teams were involved? with given SQL schema CREATE TABLE cricket_scores (match_id INT, team_1 VARCHAR(50), team_2 VARCHAR(50), team_1_score INT, team_2_score INT); INSERT INTO cricket_scores (match_id, team_1, team_2, team_1_score, team_2_score) VALUES (1, 'India', 'Australia', 417, 376), (2, 'England', 'South Africa', 408, 399), (3, 'Pakistan', 'New Zealand', 438, 322);","completion":"SELECT team_1, team_2, team_1_score, team_2_score FROM cricket_scores WHERE team_1_score + team_2_score = (SELECT MAX(team_1_score + team_2_score) FROM cricket_scores);"}
{"prompt":"What is the maximum number of games played by each team in the 'soccer_teams' table? with given SQL schema CREATE TABLE soccer_teams (team_id INT, team_name VARCHAR(100), num_games INT);","completion":"SELECT team_id, MAX(num_games) FROM soccer_teams GROUP BY team_id;"}
{"prompt":"What is the total revenue generated in 'January'? with given SQL schema CREATE TABLE january_revenue (revenue int); INSERT INTO january_revenue (revenue) VALUES (30000), (35000), (40000);","completion":"SELECT SUM(revenue) FROM january_revenue;"}
{"prompt":"What is the average CO2 emission of transportation per order for each delivery method? with given SQL schema CREATE TABLE delivery_methods (id INT, delivery_method VARCHAR(255), co2_emission_kg INT, orders INT); INSERT INTO delivery_methods VALUES (1, 'Standard Shipping', 0.5, 1000), (2, 'Express Shipping', 1.2, 500), (3, 'Standard Shipping', 0.6, 800), (4, 'Bicycle Delivery', 0.1, 200);","completion":"SELECT delivery_method, AVG(co2_emission_kg\/orders) FROM delivery_methods GROUP BY delivery_method;"}
{"prompt":"What's the maximum number of tweets by users from Germany in the technology category? with given SQL schema CREATE TABLE users (id INT, country VARCHAR(255), category VARCHAR(255), tweets INT); INSERT INTO users (id, country, category, tweets) VALUES (1, 'Germany', 'technology', 2000);","completion":"SELECT MAX(users.tweets) FROM users WHERE users.country = 'Germany' AND users.category = 'technology';"}
{"prompt":"What is the average price of each material in the 'textiles' table? with given SQL schema CREATE TABLE textiles (id INT, material VARCHAR(20), price DECIMAL(5,2)); INSERT INTO textiles (id, material, price) VALUES (1, 'cotton', 5.50), (2, 'silk', 15.00), (3, 'wool', 12.00);","completion":"SELECT material, AVG(price) FROM textiles GROUP BY material;"}
{"prompt":"List all the Shariah-compliant investments made by ResponsibleCapital in 2020. with given SQL schema CREATE TABLE ResponsibleCapital (id INT, investment_type VARCHAR(20), investment_amount INT, investment_date DATE); INSERT INTO ResponsibleCapital (id, investment_type, investment_amount, investment_date) VALUES (1, 'Shariah Compliant', 9000, '2020-12-31');","completion":"SELECT investment_type, investment_amount FROM ResponsibleCapital WHERE investment_type = 'Shariah Compliant' AND YEAR(investment_date) = 2020;"}
{"prompt":"Identify the suppliers offering organic products from Canada with given SQL schema CREATE TABLE suppliers (id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE products (id INT, supplier_id INT, is_organic BOOLEAN, product_country VARCHAR(255)); INSERT INTO suppliers (id, name, country) VALUES (1, 'Supplier X', 'Canada'), (2, 'Supplier Y', 'USA'), (3, 'Supplier Z', 'Mexico'); INSERT INTO products (id, supplier_id, is_organic, product_country) VALUES (1, 1, true, 'Canada'), (2, 1, false, 'USA'), (3, 2, true, 'Mexico'), (4, 2, true, 'Canada'), (5, 3, false, 'USA');","completion":"SELECT s.name FROM suppliers s JOIN products p ON s.id = p.supplier_id AND p.is_organic = true AND s.country = p.product_country WHERE s.country = 'Canada';"}
{"prompt":"List all suppliers providing \"vegan\" products that are also in the \"sustainable_practices\" view with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(50), supplier_id INT, is_vegan BOOLEAN); INSERT INTO products (product_id, product_name, supplier_id, is_vegan) VALUES (1, 'Almond Milk', 1, true); INSERT INTO products (product_id, product_name, supplier_id, is_vegan) VALUES (2, 'Tofu', 2, true); CREATE TABLE suppliers (supplier_id INT, supplier_name VARCHAR(50), sustainable_practices BOOLEAN); INSERT INTO suppliers (supplier_id, supplier_name, sustainable_practices) VALUES (1, 'Eden Foods', true); INSERT INTO suppliers (supplier_id, supplier_name, sustainable_practices) VALUES (2, 'Tofurky', true); CREATE VIEW sustainable_practices AS SELECT supplier_id FROM suppliers WHERE sustainable_practices = true;","completion":"SELECT DISTINCT p.supplier_id, p.product_name FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id WHERE p.is_vegan = true AND s.supplier_id IN (SELECT supplier_id FROM sustainable_practices);"}
{"prompt":"What is the maximum distance for routes to 'City X'? with given SQL schema CREATE TABLE Routes (id INT, origin_city VARCHAR(255), destination_city VARCHAR(255), distance INT, eta INT); INSERT INTO Routes (id, origin_city, destination_city, distance, eta) VALUES (1, 'City A', 'City X', 200, 2); INSERT INTO Routes (id, origin_city, destination_city, distance, eta) VALUES (2, 'City B', 'City Y', 250, 3); INSERT INTO Routes (id, origin_city, destination_city, distance, eta) VALUES (3, 'City C', 'City X', 300, 4);","completion":"SELECT destination_city, MAX(distance) FROM Routes WHERE destination_city = 'City X' GROUP BY destination_city;"}
{"prompt":"What is the total number of hospitals in India, and what are their names? with given SQL schema CREATE TABLE india_hospitals (name TEXT, type TEXT); INSERT INTO india_hospitals (name, type) VALUES ('All India Institute of Medical Sciences', 'Hospital'), ('Postgraduate Institute of Medical Education and Research', 'Hospital');","completion":"SELECT COUNT(*), name FROM india_hospitals WHERE type = 'Hospital' GROUP BY name;"}
{"prompt":"Insert a new research grant into the research_grants table with given SQL schema CREATE TABLE research_grants (id INT, name TEXT, amount INT); INSERT INTO research_grants (id, name, amount) VALUES (1, 'Grant A', 50000), (2, 'Grant B', 75000);","completion":"INSERT INTO research_grants (id, name, amount) VALUES (3, 'Grant C', 100000);"}
{"prompt":"Delete the entry for the green building with id 7 in the 'green_buildings' table with given SQL schema CREATE TABLE green_buildings (building_id INT, city VARCHAR(50), size INT);","completion":"DELETE FROM green_buildings WHERE building_id = 7;"}
{"prompt":"What is the capacity of the largest geothermal energy project in California? with given SQL schema CREATE TABLE geothermal_projects (project_id INT, project_name VARCHAR(255), city VARCHAR(255), state VARCHAR(255), capacity FLOAT); INSERT INTO geothermal_projects (project_id, project_name, city, state, capacity) VALUES (1, 'California Geothermal One', 'Los Angeles', 'CA', 80.0); INSERT INTO geothermal_projects (project_id, project_name, city, state, capacity) VALUES (2, 'Geothermal Valley', 'San Francisco', 'CA', 110.5);","completion":"SELECT MAX(capacity) FROM geothermal_projects WHERE state = 'CA';"}
{"prompt":"List the names of mental health parity officers and the number of trainings they have conducted in the mental_health schema. with given SQL schema CREATE TABLE mental_health_parity_officers (officer_id INT, name VARCHAR(50)); CREATE TABLE trainings_conducted (officer_id INT, training_id INT); INSERT INTO mental_health_parity_officers (officer_id, name) VALUES (1, 'Alice Johnson'); INSERT INTO mental_health_parity_officers (officer_id, name) VALUES (2, 'Bob Brown'); INSERT INTO trainings_conducted (officer_id, training_id) VALUES (1, 1); INSERT INTO trainings_conducted (officer_id, training_id) VALUES (1, 2);","completion":"SELECT mental_health_parity_officers.name, COUNT(trainings_conducted.training_id) FROM mental_health_parity_officers INNER JOIN trainings_conducted ON mental_health_parity_officers.officer_id = trainings_conducted.officer_id GROUP BY mental_health_parity_officers.name;"}
{"prompt":"What is the average mental health score for patients from historically marginalized communities? with given SQL schema CREATE TABLE patients (id INT, name VARCHAR(100), community VARCHAR(50), mental_health_score INT); INSERT INTO patients (id, name, community, mental_health_score) VALUES (1, 'Alice', 'African American', 70), (2, 'Brian', 'Latinx', 65), (3, 'Carla', 'Asian American', 80);","completion":"SELECT AVG(mental_health_score) FROM patients WHERE community IN ('African American', 'Latinx');"}
{"prompt":"Delete all records in the \"hotel_reviews\" table that do not have a rating of at least 4? with given SQL schema CREATE TABLE hotel_reviews (review_id INT, hotel_id INT, rating INT, review TEXT); INSERT INTO hotel_reviews (review_id, hotel_id, rating, review) VALUES (1, 101, 5, 'Excellent stay'), (2, 102, 3, 'Average stay'), (3, 103, 4, 'Good stay'), (4, 104, 1, 'Terrible stay');","completion":"DELETE FROM hotel_reviews WHERE rating < 4;"}
{"prompt":"What is the total number of OTA (Online Travel Agency) bookings for each hotel in the USA, sorted by the hotel name? with given SQL schema CREATE TABLE hotel_bookings (booking_id INT, hotel_name TEXT, country TEXT, ota_name TEXT, revenue FLOAT); INSERT INTO hotel_bookings (booking_id, hotel_name, country, ota_name, revenue) VALUES (1, 'Hotel X', 'USA', 'OTA 1', 500), (2, 'Hotel Y', 'USA', 'OTA 2', 700), (3, 'Hotel X', 'USA', 'OTA 3', 300), (4, 'Hotel Y', 'USA', 'OTA 1', 600), (5, 'Hotel X', 'USA', 'OTA 2', 400);","completion":"SELECT hotel_name, SUM(revenue) as total_bookings FROM hotel_bookings WHERE country = 'USA' GROUP BY hotel_name ORDER BY hotel_name;"}
{"prompt":"Calculate the average price of artworks exhibited in 'New York' with the 'modern' style in the 'Exhibitions' table. with given SQL schema CREATE TABLE Exhibitions (id INT, artwork_id INT, exhibition_location VARCHAR(20), exhibition_style VARCHAR(20), artwork_price DECIMAL(10,2));","completion":"SELECT AVG(artwork_price) FROM Exhibitions WHERE exhibition_location = 'New York' AND exhibition_style = 'modern';"}
{"prompt":"What is the correlation between climate change and biodiversity in the Arctic? with given SQL schema CREATE TABLE Climate_Change (id INT PRIMARY KEY, year INT, temperature FLOAT, region VARCHAR(50)); CREATE TABLE Biodiversity (id INT, year INT, species_count INT, region VARCHAR(50), climate_id INT, FOREIGN KEY (climate_id) REFERENCES Climate_Change(id)); INSERT INTO Climate_Change (id, year, temperature, region) VALUES (1, 2000, -10.0, 'Arctic'), (2, 2010, -9.5, 'Arctic'); INSERT INTO Biodiversity (id, year, species_count, region, climate_id) VALUES (1, 2000, 100, 'Arctic', 1), (2, 2010, 105, 'Arctic', 2);","completion":"SELECT Climate_Change.year, Climate_Change.temperature, Biodiversity.species_count FROM Climate_Change INNER JOIN Biodiversity ON Climate_Change.id = Biodiversity.climate_id WHERE Climate_Change.region = 'Arctic';"}
{"prompt":"What is the total number of species observed in each location, ordered by the number of species in descending order? with given SQL schema CREATE TABLE Animals (Id INT, Species VARCHAR(20), Count INT, Location VARCHAR(20), Last_Observed DATE); INSERT INTO Animals (Id, Species, Count, Location, Last_Observed) VALUES (1, 'Walrus', 15, 'Arctic', '2021-02-01'), (2, 'Polar_Bear', 10, 'Arctic', '2021-02-01'), (3, 'Fox', 20, 'Arctic', '2021-02-01');","completion":"SELECT Location, COUNT(DISTINCT Species) as Total_Species FROM Animals GROUP BY Location ORDER BY Total_Species DESC;"}
{"prompt":"What is the total number of language learners for each indigenous language this year? with given SQL schema CREATE TABLE Languages (LanguageID INT, LanguageName VARCHAR(50), LanguageFamily VARCHAR(50), Indigenous BOOLEAN); CREATE TABLE LanguageLearners (LearnerID INT, LanguageID INT, Year INT, LearnerCount INT); INSERT INTO Languages VALUES (1, 'Inuktitut', 'Eskimo-Aleut', TRUE), (2, 'Mapudungun', 'Araucanian', TRUE), (3, 'English', 'Germanic', FALSE); INSERT INTO LanguageLearners VALUES (1, 1, 2023, 5000), (2, 1, 2022, 4000), (3, 2, 2023, 3000), (4, 3, 2023, 10000);","completion":"SELECT Languages.LanguageName, SUM(LanguageLearners.LearnerCount) AS TotalLearners FROM Languages INNER JOIN LanguageLearners ON Languages.LanguageID = LanguageLearners.LanguageID WHERE Languages.Indigenous = TRUE AND Year = 2023 GROUP BY Languages.LanguageName;"}
{"prompt":"What is the average age of clinical psychologists who have treated mental health patients in Asia, ordered by the number of patients treated? with given SQL schema CREATE TABLE psychologists (id INT, name TEXT, age INT, country TEXT, patients INT); INSERT INTO psychologists (id, name, age, country, patients) VALUES (1, 'John Lee', 45, 'China', 75), (2, 'Mei Chen', 50, 'Japan', 60), (3, 'Kim Park', 40, 'South Korea', 80), (4, 'Anand Patel', 55, 'India', 90);","completion":"SELECT AVG(age) as avg_age FROM (SELECT age, ROW_NUMBER() OVER (PARTITION BY country ORDER BY patients DESC) as rn FROM psychologists WHERE country IN ('China', 'Japan', 'South Korea', 'India')) t WHERE rn = 1;"}
{"prompt":"What is the average cost of projects per engineer in the 'WestCoast' region, ordered by the highest average cost? with given SQL schema CREATE TABLE Engineers (ID INT, Name VARCHAR(255), Region VARCHAR(255), Projects INT, Cost DECIMAL(10,2)); INSERT INTO Engineers VALUES (1, 'John Doe', 'WestCoast', 5, 15000.00), (2, 'Jane Smith', 'EastCoast', 3, 12000.00), (3, 'Mike Johnson', 'WestCoast', 7, 20000.00);","completion":"SELECT Region, AVG(Cost) AS AvgCost FROM Engineers WHERE Region = 'WestCoast' GROUP BY Region ORDER BY AvgCost DESC;"}
{"prompt":"Find the percentage change in tourism to Thailand between 2019 and 2021. with given SQL schema CREATE TABLE thailand_tourism (year INT, total_visitors INT); INSERT INTO thailand_tourism (year, total_visitors) VALUES (2019, 40000), (2021, 30000);","completion":"SELECT (30000 - 40000) * 100.0 \/ 40000 AS change_percentage FROM thailand_tourism WHERE year = 2021;"}
{"prompt":"What is the average number of restorative justice sessions attended, by participant's age group, for cases closed in the past year? with given SQL schema CREATE TABLE restorative_justice (id INT, participant_age_group VARCHAR(50), sessions_attended INT, case_closed_date DATE);","completion":"SELECT participant_age_group, AVG(sessions_attended) FROM restorative_justice WHERE case_closed_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY participant_age_group;"}
{"prompt":"List all maritime law compliance projects in the Atlantic and Southern Oceans. with given SQL schema CREATE TABLE atlantic_ocean (id INT, project TEXT, region TEXT); CREATE TABLE southern_ocean (id INT, project TEXT, region TEXT); INSERT INTO atlantic_ocean (id, project, region) VALUES (1, 'Compliance Project A', 'Atlantic Ocean'), (2, 'Compliance Project B', 'Indian Ocean'); INSERT INTO southern_ocean (id, project, region) VALUES (1, 'Compliance Project C', 'Southern Ocean'), (2, 'Compliance Project D', 'Southern Ocean');","completion":"SELECT project FROM atlantic_ocean WHERE region = 'Atlantic Ocean' UNION SELECT project FROM southern_ocean WHERE region = 'Southern Ocean';"}
{"prompt":"What is the average pollution level in the 'Arctic' region in the last year?' with given SQL schema CREATE TABLE pollution_data (location VARCHAR(50), region VARCHAR(20), pollution_level FLOAT, inspection_date DATE); INSERT INTO pollution_data (location, region, pollution_level, inspection_date) VALUES ('Location A', 'Arctic', 50.2, '2022-01-01'), ('Location B', 'Arctic', 70.1, '2022-02-15'), ('Location C', 'Antarctic', 30.9, '2022-03-01');","completion":"SELECT AVG(pollution_level) FROM pollution_data WHERE region = 'Arctic' AND inspection_date > DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"prompt":"What is the maximum depth of the Indian Ocean? with given SQL schema CREATE TABLE IndianOcean (trench_name TEXT, avg_depth FLOAT); INSERT INTO IndianOcean (trench_name, avg_depth) VALUES ('Java Trench', 8075.0), ('Sunda Trench', 7450.0);","completion":"SELECT MAX(avg_depth) FROM IndianOcean WHERE trench_name IS NOT NULL;"}
{"prompt":"Calculate the average sales per day for a specific item with given SQL schema CREATE TABLE time (time_id INT, sales_time DATE); INSERT INTO time VALUES (1, '2023-02-01'), (2, '2023-02-02'), (3, '2023-02-03'), (4, '2023-02-04'), (5, '2023-02-05'); CREATE TABLE sales_by_time (time_id INT, item_id INT, sales_amount DECIMAL(5,2)); INSERT INTO sales_by_time VALUES (1, 1, 50.00), (2, 1, 75.00), (3, 1, 100.00), (4, 1, 125.00), (5, 1, 150.00);","completion":"SELECT AVG(sales_by_time.sales_amount) FROM sales_by_time JOIN time ON sales_by_time.time_id = time.time_id WHERE sales_by_time.item_id = 1;"}
{"prompt":"List all environmental impact assessments for mining operations in Canada. with given SQL schema CREATE TABLE mining_operation (id INT, name VARCHAR(255), location VARCHAR(255));CREATE TABLE environmental_assessment (id INT, mining_operation_id INT, date DATE, impact VARCHAR(255)); INSERT INTO mining_operation (id, name, location) VALUES (1, 'Canadian Gold', 'Canada'); INSERT INTO mining_operation (id, name, location) VALUES (2, 'Canadian Diamond', 'Canada'); INSERT INTO environmental_assessment (id, mining_operation_id, date, impact) VALUES (1, 1, '2020-01-01', 'Air pollution');","completion":"SELECT mining_operation.name, environmental_assessment.date, environmental_assessment.impact FROM mining_operation JOIN environmental_assessment ON mining_operation.id = environmental_assessment.mining_operation_id WHERE mining_operation.location = 'Canada';"}
{"prompt":"What types of equipment were rented in total in the 'equipment_rental' department? with given SQL schema CREATE TABLE equipment_rental(id INT, equipment VARCHAR(50), quantity INT); INSERT INTO equipment_rental (id, equipment, quantity) VALUES (1, 'Bulldozer', 10), (2, 'Excavator', 15), (3, 'Dump Truck', 8), (4, 'Grader', 12);","completion":"SELECT equipment, SUM(quantity) AS total_quantity FROM equipment_rental GROUP BY equipment;"}
{"prompt":"Identify the number of mobile and broadband subscribers per region, and their respective percentage contributions to total subscribers in each service category. with given SQL schema CREATE TABLE MobileSubscribers (SubscriberID int, Region varchar(10), Service varchar(10)); CREATE TABLE BroadbandSubscribers (SubscriberID int, Region varchar(10), Service varchar(10)); INSERT INTO MobileSubscribers (SubscriberID, Region, Service) VALUES (1, 'North', 'mobile'), (2, 'North', 'mobile'), (3, 'South', 'mobile'), (4, 'East', 'mobile'), (5, 'West', 'broadband'); INSERT INTO BroadbandSubscribers (SubscriberID, Region, Service) VALUES (1, 'North', 'broadband'), (2, 'South', 'broadband'), (3, 'East', 'broadband'), (4, 'West', 'broadband'), (5, 'North', 'broadband');","completion":"SELECT R.Region, S.Service, COUNT(M.SubscriberID) AS MobileCount, COUNT(B.SubscriberID) AS BroadbandCount, (COUNT(M.SubscriberID)::float \/ (COUNT(M.SubscriberID) + COUNT(B.SubscriberID))) * 100 AS MobilePercent, (COUNT(B.SubscriberID)::float \/ (COUNT(M.SubscriberID) + COUNT(B.SubscriberID))) * 100 AS BroadbandPercent FROM MobileSubscribers M FULL OUTER JOIN BroadbandSubscribers B ON M.Region = B.Region AND M.Service = B.Service JOIN Regions R ON M.Region = R.Region JOIN Services S ON M.Service = S.Service GROUP BY R.Region, S.Service;"}
{"prompt":"Update the mobile_subscribers table to add a new subscriber with name \"Jose Garcia\" from Mexico City, mobile_number +521234567890 and subscription_date 2023-03-01 with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, subscriber_name VARCHAR(50), mobile_number VARCHAR(15), subscription_date DATE);","completion":"UPDATE mobile_subscribers SET subscriber_name = 'Jose Garcia', mobile_number = '+521234567890', subscription_date = '2023-03-01' WHERE subscriber_id = (SELECT MAX(subscriber_id) FROM mobile_subscribers) + 1;"}
{"prompt":"Get the number of unique genres represented by artists from the United Kingdom. with given SQL schema CREATE TABLE artists (id INT, name TEXT, genre TEXT, country TEXT); INSERT INTO artists (id, name, genre, country) VALUES (1, 'Adele', 'Pop', 'United Kingdom');","completion":"SELECT COUNT(DISTINCT genre) FROM artists WHERE country = 'United Kingdom';"}
{"prompt":"How many news articles were published in the last week, categorized as 'Politics'? with given SQL schema CREATE TABLE news (id INT, title VARCHAR(100), category VARCHAR(20), publish_date DATE); INSERT INTO news (id, title, category, publish_date) VALUES (1, 'Government announces new policy', 'Politics', '2022-02-14');","completion":"SELECT COUNT(*) FROM news WHERE category = 'Politics' AND publish_date >= CURDATE() - INTERVAL 1 WEEK"}
{"prompt":"What is the average donation amount for each mission_area in the 'Organizations' and 'Donations' tables? with given SQL schema CREATE TABLE Organizations (org_id INT, name VARCHAR(50), mission_area VARCHAR(20)); CREATE TABLE Donations (donation_id INT, org_id INT, donation_amount DECIMAL(10,2));","completion":"SELECT O.mission_area, AVG(D.donation_amount) FROM Donations D INNER JOIN Organizations O ON D.org_id = O.org_id GROUP BY O.mission_area;"}
{"prompt":"List the names of players who have played \"Cosmic Cricket\" for more than 3 hours in total. with given SQL schema CREATE TABLE PlayerTimes (PlayerID INT, Game TEXT, TotalTime INT); INSERT INTO PlayerTimes (PlayerID, Game, TotalTime) VALUES (1, 'Cosmic Cricket', 210), (2, 'Cosmic Cricket', 180), (3, 'Cosmic Cricket', 240);","completion":"SELECT PlayerName FROM Players INNER JOIN PlayerTimes ON Players.PlayerID = PlayerTimes.PlayerID WHERE Game = 'Cosmic Cricket' GROUP BY PlayerID HAVING SUM(TotalTime) > 3 * 60;"}
{"prompt":"Find the number of users who played game 'A' in the last week, grouped by their regions. with given SQL schema CREATE TABLE games (id INT, game_name VARCHAR(255), release_date DATE); INSERT INTO games VALUES (1, 'A', '2020-01-01'); INSERT INTO games VALUES (2, 'B', '2019-06-15');","completion":"SELECT region, COUNT(user_id) FROM user_actions WHERE game_id = (SELECT id FROM games WHERE game_name = 'A') AND action_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY region;"}
{"prompt":"What is the average annual dysprosium production for each refiner from 2017 to 2019? with given SQL schema CREATE TABLE DysprosiumProduction (Refiner VARCHAR(50), Year INT, Production FLOAT); INSERT INTO DysprosiumProduction(Refiner, Year, Production) VALUES ('RefinerX', 2017, 251.3), ('RefinerX', 2018, 260.7), ('RefinerX', 2019, 272.1), ('RefinerY', 2017, 233.9), ('RefinerY', 2018, 241.5), ('RefinerY', 2019, 253.8), ('RefinerZ', 2017, 304.4), ('RefinerZ', 2018, 312.2), ('RefinerZ', 2019, 329.6);","completion":"SELECT Refiner, AVG(Production) as Avg_Production FROM DysprosiumProduction WHERE Year IN (2017, 2018, 2019) GROUP BY Refiner;"}
{"prompt":"Which country had the highest production of Lanthanum in 2019? with given SQL schema CREATE TABLE production (country VARCHAR(255), element VARCHAR(255), quantity INT, year INT); INSERT INTO production (country, element, quantity, year) VALUES ('China', 'Lanthanum', 180000, 2019), ('Malaysia', 'Lanthanum', 20000, 2019), ('India', 'Lanthanum', 15000, 2019);","completion":"SELECT country, MAX(quantity) as max_production FROM production WHERE element = 'Lanthanum' AND year = 2019;"}
{"prompt":"Update the name of Restaurant P to 'Green Garden' in the 'restaurants' table. with given SQL schema CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255));","completion":"UPDATE restaurants SET name = 'Green Garden' WHERE restaurant_id = (SELECT restaurant_id FROM restaurants WHERE name = 'Restaurant P');"}
{"prompt":"What is the highest altitude of all satellites in Low Earth Orbit (LEO)? with given SQL schema CREATE TABLE leo_satellites (id INT, name VARCHAR(50), type VARCHAR(50), altitude INT); INSERT INTO leo_satellites (id, name, type, altitude) VALUES (1, 'Sat1', 'Communication', 500), (2, 'Sat2', 'Navigation', 600), (3, 'Sat3', 'Observation', 550);","completion":"SELECT MAX(altitude) FROM leo_satellites;"}
{"prompt":"What is the total number of launches by each country in the space domain? with given SQL schema CREATE TABLE launches (id INT, country VARCHAR(255), launch_year INT, PRIMARY KEY(id)); INSERT INTO launches (id, country, launch_year) VALUES (1, 'Country1', 2000), (2, 'Country2', 2010), (3, 'Country1', 2020), (4, 'Country3', 2015);","completion":"SELECT launches.country, COUNT(launches.id) FROM launches GROUP BY launches.country;"}
{"prompt":"Which space agency has launched the most satellites in descending order? with given SQL schema CREATE TABLE Space_Satellites (Satellite_ID INT, Satellite_Name VARCHAR(100), Launch_Date DATE, Country_Name VARCHAR(50), Agency_Name VARCHAR(50)); INSERT INTO Space_Satellites (Satellite_ID, Satellite_Name, Launch_Date, Country_Name, Agency_Name) VALUES (1, 'Sat1', '2000-01-01', 'USA', 'NASA'), (2, 'Sat2', '2001-01-01', 'Russia', 'Roscosmos'), (3, 'Sat3', '2002-01-01', 'China', 'CNSA'), (4, 'Sat4', '2003-01-01', 'USA', 'NASA'), (5, 'Sat5', '2004-01-01', 'India', 'ISRO');","completion":"SELECT Agency_Name, COUNT(*) as Total_Satellites FROM Space_Satellites GROUP BY Agency_Name ORDER BY Total_Satellites DESC;"}
{"prompt":"Insert a new athlete wellbeing program for a team into the AthleteWellbeingPrograms table. with given SQL schema CREATE TABLE Teams (TeamID INT, TeamName VARCHAR(100)); CREATE TABLE AthleteWellbeingPrograms (ProgramID INT, TeamID INT, ProgramName VARCHAR(100), StartDate DATE, EndDate DATE);","completion":"INSERT INTO AthleteWellbeingPrograms (ProgramID, TeamID, ProgramName, StartDate, EndDate) VALUES (1, 1, 'Mental Health Workshops', '2023-01-01', '2023-12-31');"}
{"prompt":"Insert a new record for the 'Golden State Warriors' with 500 tickets sold. with given SQL schema CREATE TABLE teams (id INT, name TEXT, city TEXT); INSERT INTO teams (id, name, city) VALUES (1, 'Boston Celtics', 'Boston'), (2, 'NY Knicks', 'NY'), (3, 'LA Lakers', 'LA'), (4, 'Atlanta Hawks', 'Atlanta'), (5, 'Chicago Bulls', 'Chicago'), (6, 'Golden State Warriors', 'San Francisco'); CREATE TABLE tickets (id INT, team TEXT, home_team TEXT, quantity INT);","completion":"INSERT INTO tickets (id, team, quantity) VALUES (7, 'Golden State Warriors', 500);"}
{"prompt":"How many autonomous buses are in the \"fleet\" table? with given SQL schema CREATE TABLE fleet (id INT, vehicle_type VARCHAR(255), is_autonomous BOOLEAN); INSERT INTO fleet (id, vehicle_type, is_autonomous) VALUES (1, 'Bus', true);","completion":"SELECT COUNT(*) FROM fleet WHERE vehicle_type = 'Bus' AND is_autonomous = true;"}
{"prompt":"What is the total claim amount for policies sold in the first quarter of each year? with given SQL schema CREATE TABLE Claims (PolicyID int, ClaimAmount int, SaleDate date); INSERT INTO Claims (PolicyID, ClaimAmount, SaleDate) VALUES (1, 500, '2022-01-05'), (2, 2000, '2022-04-10'), (3, 800, '2022-03-15'), (4, 1500, '2022-02-20'); CREATE TABLE Policies (PolicyID int, SaleDate date); INSERT INTO Policies (PolicyID, SaleDate) VALUES (1, '2022-01-05'), (2, '2022-04-10'), (3, '2022-03-15'), (4, '2022-02-20');","completion":"SELECT SUM(ClaimAmount) OVER (PARTITION BY DATEPART(quarter, SaleDate)) as TotalClaimAmount FROM Claims JOIN Policies ON Claims.PolicyID = Policies.PolicyID WHERE DATEPART(quarter, SaleDate) = 1;"}
{"prompt":"What is the maximum number of union organizing meetings held in the \"union_database\" for each month in 2021? with given SQL schema CREATE TABLE meetings (id INT, month INT, num_meetings INT); INSERT INTO meetings (id, month, num_meetings) VALUES (1, 1, 20), (2, 2, 25), (3, 3, 30), (4, 4, 35), (5, 5, 40), (6, 6, 45), (7, 7, 50), (8, 8, 55), (9, 9, 60), (10, 10, 65), (11, 11, 70), (12, 12, 75);","completion":"SELECT month, MAX(num_meetings) FROM meetings WHERE year = 2021 GROUP BY month;"}
{"prompt":"Insert a new row into the 'autonomous_driving_tests' table with the following values: 'Cruise', 'San Francisco', 'Level 5', '2022-07-15' with given SQL schema CREATE TABLE autonomous_driving_tests (company VARCHAR(255), city VARCHAR(255), autonomous_level VARCHAR(255), test_date DATE);","completion":"INSERT INTO autonomous_driving_tests (company, city, autonomous_level, test_date) VALUES ('Cruise', 'San Francisco', 'Level 5', '2022-07-15');"}
{"prompt":"What is the name and type of the vessel with the highest average speed? with given SQL schema CREATE TABLE Vessels (ID VARCHAR(20), Name VARCHAR(20), Type VARCHAR(20), AverageSpeed FLOAT); INSERT INTO Vessels VALUES ('V012', 'Vessel L', 'Passenger', 35.0), ('V013', 'Vessel M', 'Cargo', 19.5), ('V014', 'Vessel N', 'Passenger', 32.0);","completion":"SELECT Name, Type FROM Vessels WHERE AverageSpeed = (SELECT MAX(AverageSpeed) FROM Vessels);"}
{"prompt":"What is the total cargo capacity of vessels that are not Tankers? with given SQL schema CREATE TABLE Vessels (vessel_id VARCHAR(10), name VARCHAR(20), type VARCHAR(20), max_speed FLOAT, cargo_capacity INT); INSERT INTO Vessels (vessel_id, name, type, max_speed, cargo_capacity) VALUES ('1', 'Vessel A', 'Cargo', 20.5, 5000), ('2', 'Vessel B', 'Tanker', 15.2, 0), ('3', 'Vessel C', 'Tanker', 18.1, 0), ('4', 'Vessel D', 'Cargo', 12.6, 6000), ('5', 'Vessel E', 'Cargo', 16.2, 4500), ('6', 'Vessel F', 'Passenger', 30.5, 2500), ('7', 'Vessel G', 'Passenger', 27.5, 1000);","completion":"SELECT SUM(cargo_capacity) FROM Vessels WHERE type != 'Tanker';"}
{"prompt":"Find the number of visitors from the United States with given SQL schema CREATE TABLE Visitor (id INT, name TEXT, country TEXT); INSERT INTO Visitor (id, name, country) VALUES (1, 'Alice', 'USA'), (2, 'Bob', 'Canada');","completion":"SELECT COUNT(*) FROM Visitor WHERE country = 'USA';"}
{"prompt":"List the names of all exhibitions that had more than 3,000 visitors on a weekend. with given SQL schema CREATE TABLE attendance (visitor_id INT, exhibition_name VARCHAR(255), visit_date DATE); INSERT INTO attendance (visitor_id, exhibition_name, visit_date) VALUES (123, 'Art of the Renaissance', '2022-01-01'), (456, 'Art of the Renaissance', '2022-01-02'), (789, 'Modern Art', '2022-01-03'), (111, 'Impressionism', '2022-01-04'), (222, 'Cubism', '2022-01-05'), (333, 'Surrealism', '2022-01-06'), (444, 'Surrealism', '2022-01-07'), (555, 'Surrealism', '2022-01-08'), (666, 'Surrealism', '2022-01-09'), (777, 'Surrealism', '2022-01-10');","completion":"SELECT exhibition_name FROM attendance WHERE EXTRACT(DAY FROM visit_date) BETWEEN 6 AND 7 GROUP BY exhibition_name HAVING COUNT(*) > 3000;"}
{"prompt":"Which city had the highest average visitor spending in 2021? with given SQL schema CREATE TABLE CitySpending (id INT, city VARCHAR(20), year INT, spending INT); INSERT INTO CitySpending (id, city, year, spending) VALUES (1, 'Paris', 2021, 3200), (2, 'London', 2021, 2600), (3, 'Berlin', 2021, 2100), (4, 'New York', 2021, 3600), (5, 'Tokyo', 2021, 3000);","completion":"SELECT city, AVG(spending) AS avg_spending FROM CitySpending WHERE year = 2021 GROUP BY city ORDER BY avg_spending DESC LIMIT 1;"}
{"prompt":"Insert new records into the 'circular_economy_initiatives' table for 'Tokyo', 'Japan' with given SQL schema CREATE TABLE circular_economy_initiatives (id INT, city VARCHAR(255), state VARCHAR(255), country VARCHAR(255), initiative VARCHAR(255));","completion":"INSERT INTO circular_economy_initiatives (city, state, country, initiative) VALUES ('Tokyo', NULL, 'Japan', 'Extended Producer Responsibility for Electronic Waste');"}
{"prompt":"How many algorithmic fairness papers were published before 2018? with given SQL schema CREATE TABLE if not exists fairness_papers (paper_id INT PRIMARY KEY, title TEXT, year INT); INSERT INTO fairness_papers (paper_id, title, year) VALUES (101, 'Paper A', 2017), (102, 'Paper B', 2018), (103, 'Paper C', 2019), (104, 'Paper D', 2020);","completion":"SELECT COUNT(*) FROM fairness_papers WHERE year < 2018;"}
{"prompt":"What is the average flight hours for each aircraft model? with given SQL schema CREATE TABLE flight_hours (id INT PRIMARY KEY, aircraft_model VARCHAR(50), flight_hours INT); INSERT INTO flight_hours (id, aircraft_model, flight_hours) VALUES (1, 'Boeing 747', 100000), (2, 'Airbus A380', 150000), (3, 'Boeing 777', 200000), (4, 'Airbus A330', 250000);","completion":"SELECT aircraft_model, AVG(flight_hours) FROM flight_hours GROUP BY aircraft_model;"}
{"prompt":"What is the maximum flight distance for each aircraft model? with given SQL schema CREATE TABLE flights (id INT, model VARCHAR(50), flight_distance DECIMAL(10,2), flight_hours DECIMAL(5,2)); INSERT INTO flights (id, model, flight_distance, flight_hours) VALUES (1, 'Boeing 737', 1500, 4.5), (2, 'Airbus A320', 1200, 3.8), (3, 'Boeing 787', 2000, 5.5);","completion":"SELECT model, MAX(flight_distance) as max_flight_distance FROM flights GROUP BY model;"}
{"prompt":"Create a view that selects all records from the 'animals' table where the species is 'Mammal' with given SQL schema CREATE TABLE animals (id INT PRIMARY KEY, name VARCHAR(100), species VARCHAR(50), population INT); INSERT INTO animals (id, name, species, population) VALUES (1, 'Giraffe', 'Mammal', 30000), (2, 'Elephant', 'Mammal', 5000);","completion":"CREATE VIEW mammals_view AS SELECT * FROM animals WHERE species = 'Mammal';"}
{"prompt":"What is the total number of animals in the 'animal_population' table, grouped by their species and sorted by the total count in descending order? with given SQL schema CREATE TABLE animal_population (id INT, species VARCHAR(255), population INT); INSERT INTO animal_population (id, species, population) VALUES (1, 'Tiger', 500), (2, 'Elephant', 2000), (3, 'Lion', 800);","completion":"SELECT species, SUM(population) as total FROM animal_population GROUP BY species ORDER BY total DESC;"}
{"prompt":"How many visitors attended the 'Music Festival' event in the 'Events' table? with given SQL schema CREATE TABLE Events (id INT, name VARCHAR(50), location VARCHAR(50), date DATE, attendance INT); INSERT INTO Events (id, name, location, date, attendance) VALUES (1, 'Music Festival', 'New York', '2022-01-01', 2000);","completion":"SELECT SUM(attendance) FROM Events WHERE name = 'Music Festival';"}
{"prompt":"Find the number of workers and projects for sustainable building permits with given SQL schema CREATE TABLE project (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), start_date DATE); INSERT INTO project (id, name, location, start_date) VALUES (1, 'GreenTowers', 'NYC', '2020-01-01'); CREATE TABLE building_permit (id INT PRIMARY KEY, project_id INT, permit_type VARCHAR(50), permit_number INT);","completion":"SELECT COUNT(DISTINCT p.id) AS projects_count, SUM(l.workers_count) AS total_workers_count FROM project p INNER JOIN labor_statistics l ON p.id = l.project_id INNER JOIN building_permit bp ON p.id = bp.project_id WHERE bp.permit_type = 'Sustainable';"}
{"prompt":"What is the total number of construction permits issued in each state? with given SQL schema CREATE TABLE PermitsByState (State VARCHAR(50), PermitCount INT); INSERT INTO PermitsByState (State, PermitCount) VALUES ('Texas', 100);","completion":"SELECT State, SUM(PermitCount) AS TotalPermits FROM PermitsByState GROUP BY State;"}
{"prompt":"find the number of records in the CommunityHealthStatistics table where the State is 'TX' and the County is 'Harris' with given SQL schema CREATE TABLE CommunityHealthStatistics (ID INT, State TEXT, County TEXT, Population INT, AverageIncome FLOAT); INSERT INTO CommunityHealthStatistics (ID, State, County, Population, AverageIncome) VALUES (1, 'TX', 'Harris', 4500000, 60000), (2, 'CA', 'LA', 2500000, 70000);","completion":"SELECT * FROM CommunityHealthStatistics WHERE State = 'TX' AND County = 'Harris';"}
{"prompt":"Identify the number of farmers involved in urban agriculture initiatives in California and New York in 2019. with given SQL schema CREATE TABLE Urban_Agriculture (Farmer_ID INT, State VARCHAR(20), Initiative VARCHAR(20), Year INT); INSERT INTO Urban_Agriculture (Farmer_ID, State, Initiative, Year) VALUES (101, 'California', 'Community_Garden', 2019), (102, 'California', 'Rooftop_Farming', 2019), (103, 'New_York', 'Community_Garden', 2019);","completion":"SELECT COUNT(DISTINCT Farmer_ID) FROM Urban_Agriculture WHERE State IN ('California', 'New York') AND Year = 2019 AND Initiative IN ('Community_Garden', 'Rooftop_Farming');"}
{"prompt":"What is the total production of rice in the 'agriculture' database, grouped by country? with given SQL schema CREATE TABLE production (id INT, crop VARCHAR(255), country VARCHAR(255), quantity INT); INSERT INTO production (id, crop, country, quantity) VALUES (1, 'wheat', 'USA', 5000000), (2, 'wheat', 'Canada', 3000000), (3, 'rice', 'China', 8000000), (4, 'wheat', 'Australia', 2500000);","completion":"SELECT country, SUM(quantity) as total_production FROM production WHERE crop = 'rice' GROUP BY country;"}
{"prompt":"How many smart contracts have been deployed on a specific blockchain platform? with given SQL schema CREATE TABLE blockchain_platforms (platform_id INT, name VARCHAR(255), smart_contract_count INT);","completion":"SELECT name, SUM(smart_contract_count) FROM blockchain_platforms WHERE name = 'Ethereum' GROUP BY name;"}
{"prompt":"What are the smart contracts written in Vyper by developers from the USA? with given SQL schema CREATE TABLE developers (developer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), country VARCHAR(50)); INSERT INTO developers (developer_id, name, age, gender, country) VALUES (1, 'Alice', 30, 'Female', 'USA'); INSERT INTO developers (developer_id, name, age, gender, country) VALUES (2, 'Bob', 35, 'Male', 'Canada'); CREATE TABLE smart_contracts (contract_id INT PRIMARY KEY, contract_name VARCHAR(50), developer_id INT, language VARCHAR(20), FOREIGN KEY (developer_id) REFERENCES developers(developer_id)); INSERT INTO smart_contracts (contract_id, contract_name, developer_id, language) VALUES (1, 'Contract1', 1, 'Solidity'); INSERT INTO smart_contracts (contract_id, contract_name, developer_id, language) VALUES (2, 'Contract2', 2, 'Vyper');","completion":"SELECT smart_contracts.contract_name FROM smart_contracts INNER JOIN developers ON smart_contracts.developer_id = developers.developer_id WHERE developers.country = 'USA' AND smart_contracts.language = 'Vyper';"}
{"prompt":"What is the minimum transaction amount for each digital asset in the 'crypto_transactions' table, partitioned by month? with given SQL schema CREATE TABLE crypto_transactions (transaction_id INT, digital_asset VARCHAR(20), transaction_amount DECIMAL(10,2), transaction_time DATETIME);","completion":"SELECT digital_asset, MIN(transaction_amount) as min_transaction_amount, DATE_TRUNC('month', transaction_time) as month FROM crypto_transactions GROUP BY digital_asset, month ORDER BY month;"}
{"prompt":"What is the regulatory status of digital asset 'CoinX'? with given SQL schema CREATE TABLE digital_assets (id INT, name TEXT, status TEXT); INSERT INTO digital_assets (id, name, status) VALUES (1, 'CoinX', 'Unregulated'), (2, 'CoinY', 'Regulated');","completion":"SELECT status FROM digital_assets WHERE name = 'CoinX';"}
{"prompt":"Find the total number of artworks in each category, sorted by the number of artworks in descending order. with given SQL schema CREATE TABLE Artworks (id INT, category VARCHAR(20)); INSERT INTO Artworks (id, category) VALUES (1, 'modern'), (2, 'contemporary'), (3, 'classic'), (4, 'modern'), (5, 'classic'), (6, 'impressionist');","completion":"SELECT category, COUNT(*) FROM Artworks GROUP BY category ORDER BY COUNT(*) DESC;"}
{"prompt":"What is the average attendance at jazz concerts in New York and Los Angeles? with given SQL schema CREATE TABLE Concerts (city VARCHAR(20), genre VARCHAR(20), attendance INT); INSERT INTO Concerts (city, genre, attendance) VALUES ('New York', 'Jazz', 1200), ('New York', 'Jazz', 1500), ('Los Angeles', 'Jazz', 800), ('Los Angeles', 'Jazz', 900);","completion":"SELECT AVG(attendance) FROM Concerts WHERE city IN ('New York', 'Los Angeles') AND genre = 'Jazz';"}
{"prompt":"Find the average veteran employment rate in California for the last 3 years. with given SQL schema CREATE TABLE veteran_employment (employment_id INT, employment_date DATE, state VARCHAR(255), employment_rate FLOAT); INSERT INTO veteran_employment (employment_id, employment_date, state, employment_rate) VALUES (1, '2019-12-31', 'California', 65.3), (2, '2020-04-04', 'Texas', 70.1), (3, '2021-06-15', 'California', 68.5);","completion":"SELECT AVG(employment_rate) FROM veteran_employment WHERE state = 'California' AND employment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR);"}
{"prompt":"What is the total number of veteran employment in 2021 for each country? with given SQL schema CREATE TABLE veteran_employment (country VARCHAR(255), num_veterans INT, employment_year INT); INSERT INTO veteran_employment (country, num_veterans, employment_year) VALUES ('USA', 2000000, 2021), ('Canada', 150000, 2021), ('UK', 1200000, 2021), ('Australia', 55000, 2021), ('Germany', 800000, 2021);","completion":"SELECT country, SUM(num_veterans) as total_num_veterans FROM veteran_employment WHERE employment_year = 2021 GROUP BY country ORDER BY total_num_veterans DESC;"}
{"prompt":"List the names of the ships that have visited ports in both the 'North America' and 'Asia' regions, considering the ports table. with given SQL schema CREATE TABLE fleet_management(ship_id INT, ship_name VARCHAR(50), visited_ports VARCHAR(255)); CREATE TABLE ports(port_id INT, port_name VARCHAR(50), region VARCHAR(50));","completion":"SELECT FM.ship_name FROM fleet_management FM JOIN ports P1 ON TRIM(SPLIT_PART(FM.visited_ports, ',', n)) = P1.port_name JOIN ports P2 ON TRIM(SPLIT_PART(FM.visited_ports, ',', n2)) = P2.port_name WHERE P1.region = 'North America' AND P2.region = 'Asia' AND n <> n2 AND n >= 1 AND n2 >= 1;"}
{"prompt":"What is the maximum number of containers handled in a single day by cranes in the Port of Oakland in March 2021? with given SQL schema CREATE TABLE Port_Oakland_Crane_Stats (crane_name TEXT, handling_date DATE, containers_handled INTEGER); INSERT INTO Port_Oakland_Crane_Stats (crane_name, handling_date, containers_handled) VALUES ('CraneE', '2021-03-01', 55), ('CraneF', '2021-03-02', 80), ('CraneG', '2021-03-03', 70), ('CraneH', '2021-03-04', 65);","completion":"SELECT MAX(containers_handled) FROM Port_Oakland_Crane_Stats WHERE handling_date >= '2021-03-01' AND handling_date <= '2021-03-31';"}
{"prompt":"What is the total number of employees in the 'manufacturing' department? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(50), department VARCHAR(20)); INSERT INTO employees (id, name, department) VALUES (1, 'John Doe', 'manufacturing'), (2, 'Jane Smith', 'engineering');","completion":"SELECT COUNT(*) FROM employees WHERE department = 'manufacturing';"}
{"prompt":"What is the total number of workers in each factory? with given SQL schema CREATE TABLE factories (factory_id INT, department VARCHAR(255)); INSERT INTO factories VALUES (1, 'Assembly'), (1, 'Quality Control'), (2, 'Design'), (2, 'Testing'); CREATE TABLE workers (worker_id INT, factory_id INT, department VARCHAR(255), role VARCHAR(255)); INSERT INTO workers VALUES (1, 1, 'Assembly', 'Engineer'), (2, 1, 'Assembly', 'Technician'), (3, 1, 'Quality Control', 'Inspector'), (4, 2, 'Design', 'Architect'), (5, 2, 'Testing', 'Tester');","completion":"SELECT f.factory_id, COUNT(w.worker_id) as total_workers FROM factories f JOIN workers w ON f.factory_id = w.factory_id GROUP BY f.factory_id;"}
{"prompt":"What are the total cybersecurity budgets for the top 3 countries with the highest cybersecurity spending? with given SQL schema CREATE TABLE CybersecurityBudgets (country VARCHAR(255), budget FLOAT); INSERT INTO CybersecurityBudgets (country, budget) VALUES ('United States', 18000000), ('China', 12000000), ('Japan', 8000000);","completion":"SELECT country, SUM(budget) FROM CybersecurityBudgets ORDER BY budget DESC LIMIT 3;"}
{"prompt":"What is the average mental health score of students by gender? with given SQL schema CREATE TABLE students (student_id INT, student_name VARCHAR(50), gender VARCHAR(10), mental_health_score INT); INSERT INTO students (student_id, student_name, gender, mental_health_score) VALUES (1, 'John Doe', 'Male', 70), (2, 'Jane Smith', 'Female', 80);","completion":"SELECT gender, AVG(mental_health_score) FROM students GROUP BY gender;"}
{"prompt":"What is the minimum production quantity for wells owned by 'Big Oil'? with given SQL schema CREATE TABLE wells (id INT, name VARCHAR(255), owner VARCHAR(255), production_quantity INT); INSERT INTO wells (id, name, owner, production_quantity) VALUES (1, 'Well A', 'Acme Oil', 1000), (2, 'Well B', 'Big Oil', 2000), (3, 'Well C', 'Acme Oil', 1500), (4, 'Well D', 'Big Oil', 800);","completion":"SELECT MIN(production_quantity) FROM wells WHERE owner = 'Big Oil';"}
{"prompt":"Add a new soccer match to the 'matches' table with the given details. with given SQL schema CREATE TABLE matches (match_id INT, home_team TEXT, away_team TEXT, home_goals INT, away_goals INT, match_date DATE);","completion":"INSERT INTO matches (match_id, home_team, away_team, home_goals, away_goals, match_date) VALUES (1, 'Barcelona', 'Real Madrid', 3, 2, '2022-10-02');"}
{"prompt":"How many matches did Team B win? with given SQL schema CREATE TABLE Team_B_Matches (match_id INT, result VARCHAR(10)); INSERT INTO Team_B_Matches (match_id, result) VALUES (1, 'Win'), (2, 'Loss'), (3, 'Win');","completion":"SELECT COUNT(*) FROM Team_B_Matches WHERE result = 'Win';"}
{"prompt":"Which countries have the least technology accessibility? with given SQL schema CREATE TABLE technology_access (id INT, person_name TEXT, has_access BOOLEAN, region TEXT); INSERT INTO technology_access (id, person_name, has_access, region) VALUES (1, 'John Doe', FALSE, 'Asia'), (2, 'Jane Smith', TRUE, 'North America'), (3, 'Alice Johnson', FALSE, 'Asia'); CREATE TABLE regions (id INT, region TEXT); INSERT INTO regions (id, region) VALUES (1, 'Asia'), (2, 'North America'), (3, 'Europe'), (4, 'Africa'), (5, 'South America');","completion":"SELECT r.region, COUNT(*) as access_count FROM technology_access ta JOIN regions r ON ta.region = r.region WHERE has_access = FALSE GROUP BY r.region ORDER BY access_count DESC;"}
{"prompt":"List the stations that have a departure time later than 8 PM, based on the 'route_schedule' table. with given SQL schema CREATE TABLE route_schedule (route_id INT, departure_time TIMESTAMP);","completion":"SELECT station FROM route_schedule JOIN route_segments ON route_schedule.route_id = route_segments.route_id WHERE EXTRACT(HOUR FROM departure_time) > 20;"}
{"prompt":"What is the distance between station 5 and station 12? with given SQL schema CREATE TABLE stations (station_id INT, name VARCHAR(255), latitude DECIMAL(9,6), longitude DECIMAL(9,6)); INSERT INTO stations (station_id, name, latitude, longitude) VALUES (5, 'Station 5', 40.712776, -74.005974), (12, 'Station 12', 40.718261, -74.004790);","completion":"SELECT 3959 * acos(cos(radians(stations.latitude)) * cos(radians((SELECT latitude FROM stations WHERE station_id = 12))) * cos(radians(stations.longitude) - radians((SELECT longitude FROM stations WHERE station_id = 12))) + sin(radians(stations.latitude)) * sin(radians((SELECT latitude FROM stations WHERE station_id = 12)))) as distance FROM stations WHERE station_id = 5;"}
{"prompt":"What is the maximum number of posts made by a single user in the 'social_media' table? with given SQL schema CREATE TABLE social_media (user_id INT, post_id INT);","completion":"SELECT MAX(COUNT(*)) FROM social_media GROUP BY user_id;"}
{"prompt":"What is the total number of users who have used the hashtag #food in the UK? with given SQL schema CREATE TABLE posts (id INT, user_id INT, hashtags TEXT); INSERT INTO posts (id, user_id, hashtags) VALUES (1, 1, '#food'), (2, 1, '#travel'), (3, 2, '#food'), (4, 3, '#food'), (5, 4, '#travel'); CREATE TABLE users (id INT, country VARCHAR(2)); INSERT INTO users (id, country) VALUES (1, 'UK'), (2, 'CA'), (3, 'UK'), (4, 'DE');","completion":"SELECT COUNT(DISTINCT user_id) as num_users FROM posts JOIN users ON posts.user_id = users.id WHERE hashtags LIKE '%#food%' AND users.country = 'UK';"}
{"prompt":"Which size category has the most customers for each fashion trend? with given SQL schema CREATE TABLE customer_sizes (customer_id INT, size VARCHAR(10), trend VARCHAR(50));   CREATE TABLE fashion_trends (trend VARCHAR(50), category VARCHAR(50));","completion":"SELECT f.category, s.size, COUNT(c.customer_id) as customer_count FROM customer_sizes c JOIN fashion_trends f ON c.trend = f.trend GROUP BY f.category, s.size ORDER BY f.category, COUNT(c.customer_id) DESC;"}
{"prompt":"What is the average socially responsible lending loan amount for microfinance institutions in Southeast Asia? with given SQL schema CREATE TABLE socially_responsible_lending(id INT, loan_number INT, institution_region VARCHAR(50), amount INT); INSERT INTO socially_responsible_lending VALUES (1, 701, 'Southeast Asia', 5000); INSERT INTO socially_responsible_lending VALUES (2, 702, 'South Asia', 7000); INSERT INTO socially_responsible_lending VALUES (3, 703, 'East Asia', 9000); INSERT INTO socially_responsible_lending VALUES (4, 704, 'Southeast Asia', 6000);","completion":"SELECT AVG(amount) FROM socially_responsible_lending WHERE institution_region = 'Southeast Asia' AND type = 'microfinance';"}
{"prompt":"Find the number of unique programs that have received donations. with given SQL schema CREATE TABLE programs (program_id INT, program_name TEXT); INSERT INTO programs (program_id, program_name) VALUES (1, 'Education'); INSERT INTO programs (program_id, program_name) VALUES (2, 'Health'); INSERT INTO programs (program_id, program_name) VALUES (3, 'Environment'); CREATE TABLE donation_programs (donation_id INT, program_id INT); INSERT INTO donation_programs (donation_id, program_id) VALUES (1, 1); INSERT INTO donation_programs (donation_id, program_id) VALUES (2, 1); INSERT INTO donation_programs (donation_id, program_id) VALUES (3, 2); INSERT INTO donation_programs (donation_id, program_id) VALUES (4, 3); INSERT INTO donation_programs (donation_id, program_id) VALUES (5, 3);","completion":"SELECT COUNT(DISTINCT program_id) FROM donation_programs;"}
{"prompt":"Display all suppliers from 'Green Earth' that provide vegetables. with given SQL schema CREATE TABLE Suppliers (name text, product text); INSERT INTO Suppliers (name, product) VALUES ('Green Earth', 'Broccoli'), ('Green Earth', 'Carrots'), ('Green Earth', 'Apples'), ('Natural Picks', 'Spinach');","completion":"SELECT DISTINCT name FROM Suppliers WHERE product LIKE '%vegetable%';"}
{"prompt":"Add a new record to the \"warehouses\" table for a new warehouse in \"Tokyo\", \"Japan\" with given SQL schema CREATE TABLE warehouses (id INT PRIMARY KEY, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50));","completion":"INSERT INTO warehouses (name, city, country) VALUES ('New Warehouse', 'Tokyo', 'Japan');"}
{"prompt":"How many petitions were created in 'California' and 'Texas' for the topic 'Immigration Reform'? with given SQL schema CREATE TABLE Petition (id INT, PetitionID INT, StateSponsor VARCHAR(50), Sponsor INT, Topic VARCHAR(50), FiscalYear VARCHAR(50)); INSERT INTO Petition (id, PetitionID, StateSponsor, Sponsor, Topic, FiscalYear) VALUES (1, 1001, 'California', 1, 'Immigration Reform', '2022'); INSERT INTO Petition (id, PetitionID, StateSponsor, Sponsor, Topic, FiscalYear) VALUES (2, 2001, 'Texas', 2, 'Immigration Reform', '2022');","completion":"SELECT COUNT(DISTINCT PetitionID) FROM Petition WHERE StateSponsor IN ('California', 'Texas') AND Topic = 'Immigration Reform' AND FiscalYear = '2022';"}
{"prompt":"What is the total number of research grants per year? with given SQL schema CREATE TABLE research_grants (id INT, year INT, amount DECIMAL(10,2)); INSERT INTO research_grants (id, year, amount) VALUES (1, 2020, 50000), (2, 2020, 75000), (3, 2021, 30000), (4, 2021, 100000);","completion":"SELECT year, SUM(amount)  FROM research_grants GROUP BY year;"}
{"prompt":"What is the total patient count for each mental health condition, for providers in the Northeast and Southeast? with given SQL schema CREATE TABLE mental_health_conditions (condition_id INT, condition_name VARCHAR(50)); INSERT INTO mental_health_conditions (condition_id, condition_name) VALUES (1, 'Anxiety'), (2, 'Depression'), (3, 'Bipolar Disorder'); CREATE TABLE providers (provider_id INT, provider_name VARCHAR(50), region_id INT); INSERT INTO providers (provider_id, provider_name, region_id) VALUES (1, 'Dr. Smith', 1), (2, 'Dr. Johnson', 2); CREATE TABLE provider_patients (provider_id INT, condition_id INT, patient_id INT);","completion":"SELECT mhc.condition_name, SUM(pp.patient_id) as total_patients FROM mental_health_conditions mhc JOIN provider_patients pp ON mhc.condition_id = pp.condition_id JOIN providers p ON pp.provider_id = p.provider_id WHERE p.region_id IN (1, 2) GROUP BY mhc.condition_name;"}
{"prompt":"Delete records in the \"guests\" table with the name \"John Smith\" with given SQL schema CREATE TABLE guests (id INT, name VARCHAR(50));","completion":"WITH cte AS (DELETE FROM guests WHERE name = 'John Smith') SELECT * FROM cte;"}
{"prompt":"What is the market share of 'Online Travel Agency A' compared to 'Online Travel Agency B'? with given SQL schema CREATE TABLE bookings (booking_id INT, hotel_id INT, agency TEXT, revenue FLOAT);","completion":"SELECT (SUM(CASE WHEN agency = 'Online Travel Agency A' THEN revenue ELSE 0 END) \/ SUM(CASE WHEN agency IN ('Online Travel Agency A', 'Online Travel Agency B') THEN revenue ELSE 0 END)) * 100 as market_share_A, (SUM(CASE WHEN agency = 'Online Travel Agency B' THEN revenue ELSE 0 END) \/ SUM(CASE WHEN agency IN ('Online Travel Agency A', 'Online Travel Agency B') THEN revenue ELSE 0 END)) * 100 as market_share_B FROM bookings;"}
{"prompt":"Calculate the total quantity of renewable and non-renewable resources in each Arctic region. with given SQL schema CREATE TABLE Resources (id INT PRIMARY KEY, resource VARCHAR(255), region VARCHAR(255), quantity INT); INSERT INTO Resources (id, resource, region, quantity) VALUES (1, 'oil', 'Arctic Ocean', 10000000); INSERT INTO Resources (id, resource, region, quantity) VALUES (2, 'wind', 'Svalbard', 8000000);","completion":"SELECT region, SUM(CASE WHEN resource IN ('oil', 'wind') THEN quantity ELSE 0 END) as total_quantity FROM Resources GROUP BY region;"}
{"prompt":"What is the average age of patients with anxiety in New York? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender TEXT, state TEXT, condition TEXT); INSERT INTO patients (patient_id, age, gender, state, condition) VALUES (1, 35, 'Female', 'New York', 'Anxiety'); INSERT INTO patients (patient_id, age, gender, state, condition) VALUES (2, 40, 'Male', 'New York', 'Anxiety'); INSERT INTO patients (patient_id, age, gender, state, condition) VALUES (3, 50, 'Non-binary', 'California', 'Depression');","completion":"SELECT AVG(age) FROM patients WHERE state = 'New York' AND condition = 'Anxiety';"}
{"prompt":"What is the success rate of cognitive behavioral therapy (CBT) for patients with depression in the African American community? with given SQL schema CREATE TABLE therapy_approaches (approach_id INT, name VARCHAR(255)); CREATE TABLE patients (patient_id INT, age INT, gender VARCHAR(10), condition VARCHAR(255), ethnicity VARCHAR(255)); CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE, success BOOLEAN, approach_id INT);","completion":"SELECT AVG(CASE WHEN therapy_sessions.success THEN 1 ELSE 0 END) AS success_rate FROM therapy_sessions JOIN patients ON therapy_sessions.patient_id = patients.patient_id JOIN therapy_approaches ON therapy_sessions.approach_id = therapy_approaches.approach_id WHERE patients.condition = 'depression' AND patients.ethnicity = 'African American' AND therapy_approaches.name = 'cognitive behavioral therapy';"}
{"prompt":"Which mental health conditions have the highest success rates for treatment, and how many patients have been treated for each? with given SQL schema CREATE TABLE mental_health_conditions (id INT, name VARCHAR(50), prevalence FLOAT); CREATE TABLE treatments (id INT, condition_id INT, name VARCHAR(50), approach VARCHAR(50), success_rate FLOAT); CREATE TABLE patient_outcomes (id INT, treatment_id INT, patient_id INT);","completion":"SELECT mhc.name, t.name, COUNT(po.patient_id) as patient_count FROM mental_health_conditions mhc JOIN treatments t ON mhc.id = t.condition_id JOIN patient_outcomes po ON t.id = po.treatment_id GROUP BY mhc.name, t.name ORDER BY t.success_rate DESC;"}
{"prompt":"Identify the number of international tourists visiting African countries in the last 3 years and their average spending? with given SQL schema CREATE TABLE TouristData (Year INT, Country VARCHAR(255), Tourists INT, Spending DECIMAL(10,2)); INSERT INTO TouristData (Year, Country, Tourists, Spending) VALUES (2018, 'South Africa', 12000000, 850), (2018, 'Egypt', 10000000, 700), (2019, 'South Africa', 13000000, 900), (2019, 'Egypt', 11000000, 750), (2020, 'South Africa', 8000000, 650), (2020, 'Egypt', 9000000, 800), (2021, 'South Africa', 9000000, 700), (2021, 'Egypt', 10000000, 850);","completion":"SELECT Country, COUNT(*) AS NumberOfTourists, AVG(Spending) AS AverageSpending FROM TouristData WHERE Year BETWEEN 2019 AND 2021 GROUP BY Country;"}
{"prompt":"Show the names and sentences of all individuals who were sentenced to life imprisonment without parole. with given SQL schema CREATE TABLE Sentences (Id INT, Name VARCHAR(50), Sentence VARCHAR(50)); INSERT INTO Sentences (Id, Name, Sentence) VALUES (1, 'Jane Doe', 'Life Imprisonment without Parole'), (2, 'John Smith', '10 years'), (3, 'Bob Johnson', 'Life Imprisonment');","completion":"SELECT Name, Sentence FROM Sentences WHERE Sentence = 'Life Imprisonment without Parole';"}
{"prompt":"What is the average caseload per attorney in community legal clinics in California, and how does it compare to the state average? with given SQL schema CREATE TABLE cali_community_legal_clinics(id INT, attorney_count INT, cases_handled INT, state VARCHAR(255));","completion":"SELECT state, AVG(cases_handled\/attorney_count) AS avg_caseload FROM cali_community_legal_clinics WHERE state = 'California' GROUP BY state UNION ALL SELECT 'California', AVG(cases_handled\/attorney_count) FROM cali_community_legal_clinics WHERE state = 'California';"}
{"prompt":"Retrieve all the pollution control projects and their start and end dates from the 'PollutionProjects' table with given SQL schema CREATE TABLE PollutionProjects (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE);","completion":"SELECT name, start_date, end_date FROM PollutionProjects;"}
{"prompt":"What is the average weight of ingredients in vegetarian dishes in the lunch menu? with given SQL schema CREATE TABLE LunchMenu(menu_item VARCHAR(50), dish_type VARCHAR(20), price DECIMAL(5,2), ingredients TEXT, weight DECIMAL(5,2)); INSERT INTO LunchMenu VALUES('Vegetable Sandwich', 'vegetarian', 9.99, 'local vegetables 150g', 150), ('Grilled Tofu Salad', 'vegetarian', 12.99, 'tofu 200g, local lettuce 50g', 250);","completion":"SELECT AVG(weight) FROM LunchMenu WHERE dish_type = 'vegetarian';"}
{"prompt":"List the defense contractors who have had no military equipment sales in 2020. with given SQL schema CREATE TABLE sales_by_year (contractor VARCHAR(20), year INT, sales INT); INSERT INTO sales_by_year (contractor, year, sales) VALUES ('Boeing', 2020, 0), ('BAE Systems', 2020, 500);","completion":"SELECT contractor FROM sales_by_year WHERE year = 2020 AND sales = 0;"}
{"prompt":"What is the total military equipment sales revenue for each sales representative by fiscal year? with given SQL schema CREATE TABLE SalesReps (SalesRepID INT, SalesRepName VARCHAR(50), FiscalYear INT, Revenue DECIMAL(10,2)); INSERT INTO SalesReps (SalesRepID, SalesRepName, FiscalYear, Revenue) VALUES (1, 'John Doe', 2020, 150000.00), (2, 'Jane Smith', 2020, 200000.00), (1, 'John Doe', 2021, 180000.00), (2, 'Jane Smith', 2021, 250000.00);","completion":"SELECT SalesRepName, FiscalYear, SUM(Revenue) OVER (PARTITION BY SalesRepName ORDER BY FiscalYear) AS TotalRevenue FROM SalesReps;"}
{"prompt":"What is the total number of military equipment sales to country X in the last 5 years? with given SQL schema CREATE TABLE military_sales (id INT, country VARCHAR(255), year INT, total_sales DECIMAL(10,2)); INSERT INTO military_sales (id, country, year, total_sales) VALUES (1, 'Country X', 2017, 100000.00), (2, 'Country Y', 2018, 150000.00);","completion":"SELECT SUM(total_sales) FROM military_sales WHERE country = 'Country X' AND year BETWEEN (SELECT YEAR(CURRENT_DATE) - 5) AND YEAR(CURRENT_DATE);"}
{"prompt":"Which projects have had risks related to 'Cybersecurity' and their associated contract amounts? with given SQL schema CREATE TABLE Projects (id INT, project_name VARCHAR(255), start_date DATE, end_date DATE, region VARCHAR(255)); CREATE TABLE Contracts (id INT, equipment_type VARCHAR(255), contract_amount DECIMAL(10,2), negotiation_date DATE, project_id INT); CREATE TABLE Risks (id INT, project_id INT, risk_type VARCHAR(255), description TEXT, risk_date DATE); INSERT INTO Projects (id, project_name, start_date, end_date, region) VALUES (6, 'Drone Development', '2022-07-01', '2024-06-30', 'North America'); INSERT INTO Contracts (id, equipment_type, contract_amount, negotiation_date, project_id) VALUES (6, 'Drone', 10000000, '2022-10-05', 6); INSERT INTO Risks (id, project_id, risk_type, description, risk_date) VALUES (6, 6, 'Cybersecurity', 'Potential vulnerabilities in drone software', '2022-11-15');","completion":"SELECT Contracts.equipment_type, Contracts.contract_amount FROM Contracts INNER JOIN Risks ON Contracts.project_id = Risks.project_id WHERE Risks.risk_type = 'Cybersecurity';"}
{"prompt":"Delete records in the 'mine_production' table where the production tonnes is less than 50000 for the Democratic Republic of the Congo in the year 2018. with given SQL schema CREATE TABLE mine_production (id INT, mine_name VARCHAR(50), country VARCHAR(50), production_tonnes INT, year INT, PRIMARY KEY (id)); INSERT INTO mine_production (id, mine_name, country, production_tonnes, year) VALUES (1, 'Tenke Fungurume', 'Democratic Republic of the Congo', 120000, 2018), (2, 'Katanga', 'Democratic Republic of the Congo', 70000, 2018);","completion":"DELETE FROM mine_production WHERE production_tonnes < 50000 AND country = 'Democratic Republic of the Congo' AND year = 2018;"}
{"prompt":"What was the total amount of minerals extracted in the 'north' region for each month in 2020? with given SQL schema CREATE TABLE extraction(id INT, location TEXT, month INT, year INT, minerals_extracted FLOAT);INSERT INTO extraction(id, location, month, year, minerals_extracted) VALUES (1, 'north', 1, 2020, 1500), (2, 'north', 2, 2020, 1800), (3, 'south', 1, 2020, 1200);","completion":"SELECT month, SUM(minerals_extracted) FROM extraction WHERE location = 'north' AND year = 2020 GROUP BY month;"}
{"prompt":"Update the 'Mobile' service's revenue by 10% for subscribers in the 'Rural' region in Q3 of 2021. with given SQL schema CREATE TABLE Subscribers (subscriber_id INT, service VARCHAR(20), region VARCHAR(20), revenue FLOAT); INSERT INTO Subscribers (subscriber_id, service, region, revenue) VALUES (1, 'Broadband', 'Metro', 50.00), (2, 'Mobile', 'Urban', 35.00), (3, 'Mobile', 'Rural', 20.00);","completion":"UPDATE Subscribers SET revenue = revenue * 1.1 WHERE service = 'Mobile' AND region = 'Rural' AND QUARTER(payment_date) = 3 AND YEAR(payment_date) = 2021;"}
{"prompt":"What is the average network investment for each country in the past year? with given SQL schema CREATE TABLE network_investments (investment_id INT, amount_usd FLOAT, investment_date DATE, country VARCHAR(50)); INSERT INTO network_investments (investment_id, amount_usd, investment_date, country) VALUES (1, 5000000, '2021-01-01', 'USA'), (2, 7000000, '2021-02-01', 'USA'), (3, 3000000, '2021-01-15', 'Canada'), (4, 4000000, '2021-02-10', 'Canada');","completion":"SELECT country, AVG(amount_usd) as avg_investment, EXTRACT(YEAR FROM investment_date) as investment_year FROM network_investments WHERE investment_date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY country, investment_year;"}
{"prompt":"What is the total revenue generated from postpaid mobile plans in the Midwest region for the year 2022? with given SQL schema CREATE TABLE subscribers(id INT, plan_type VARCHAR(10), region VARCHAR(10)); INSERT INTO subscribers VALUES (1, 'postpaid', 'Midwest'); CREATE TABLE plans(plan_type VARCHAR(10), price DECIMAL(5,2)); INSERT INTO plans VALUES ('postpaid', 50.00); CREATE TABLE transactions(subscriber_id INT, transaction_date DATE, plan_id INT); INSERT INTO transactions VALUES (1, '2022-01-01', 1);","completion":"SELECT SUM(plans.price) FROM subscribers INNER JOIN transactions ON subscribers.id = transactions.subscriber_id INNER JOIN plans ON subscribers.plan_type = plans.plan_type WHERE subscribers.region = 'Midwest' AND YEAR(transactions.transaction_date) = 2022 AND subscribers.plan_type = 'postpaid';"}
{"prompt":"Identify the total revenue for all concerts in 'Tokyo' and 'Seoul'. with given SQL schema CREATE TABLE Concerts (ConcertID INT, VenueID INT, ArtistID INT, Revenue FLOAT); INSERT INTO Concerts (ConcertID, VenueID, ArtistID, Revenue) VALUES (1, 1003, 1, 5000), (2, 1004, 2, 7000), (3, 1005, 3, 6000), (4, 1003, 4, 8000), (5, 1004, 4, 9000), (6, 1003, 5, 10000), (7, 1004, 5, 11000); CREATE TABLE Venues (VenueID INT, VenueName VARCHAR(100), Location VARCHAR(50)); INSERT INTO Venues (VenueID, VenueName, Location) VALUES (1001, 'VenueA', 'New York'), (1002, 'VenueB', 'Los Angeles'), (1003, 'VenueC', 'Tokyo'), (1004, 'VenueD', 'Paris'), (1005, 'VenueE', 'Sydney');","completion":"SELECT SUM(Revenue) AS TotalRevenue FROM Concerts C JOIN Venues V ON C.VenueID = V.VenueID WHERE Location IN ('Tokyo', 'Seoul');"}
{"prompt":"What is the average number of streams for Latin music in April? with given SQL schema CREATE TABLE Streams (id INT, genre VARCHAR(20), date DATE, streams INT); INSERT INTO Streams (id, genre, date, streams) VALUES (1, 'Latin', '2022-04-01', 250), (2, 'Pop', '2022-03-15', 800), (3, 'Latin', '2022-04-10', 450);","completion":"SELECT AVG(streams) FROM Streams WHERE genre = 'Latin' AND date BETWEEN '2022-04-01' AND '2022-04-30';"}
{"prompt":"Find the number of articles published in 'Africa' and 'Oceania' by 'Global News'? with given SQL schema CREATE TABLE news_agencies (id INT, name TEXT); INSERT INTO news_agencies VALUES (1, 'Acme News Agency'); INSERT INTO news_agencies VALUES (2, 'Global News');   CREATE TABLE articles (id INT, agency_id INT, title TEXT, location TEXT); INSERT INTO articles VALUES (1, 1, 'Article 1', 'Africa'); INSERT INTO articles VALUES (2, 1, 'Article 2', 'Asia'); INSERT INTO articles VALUES (3, 2, 'Article 3', 'Oceania');","completion":"SELECT COUNT(articles.id) FROM articles INNER JOIN news_agencies ON articles.agency_id = news_agencies.id WHERE news_agencies.name = 'Global News' AND articles.location IN ('Africa', 'Oceania');"}
{"prompt":"How many deep-sea expeditions have been conducted in the Arctic Ocean since 2010? with given SQL schema CREATE TABLE deep_sea_expeditions (id INT, name TEXT, year INT, location TEXT); INSERT INTO deep_sea_expeditions (id, name, year, location) VALUES (1, 'Arctic Ocean Expedition 2015', 2015, 'Arctic'), (2, 'Northern Explorer Expedition 2012', 2012, 'Arctic'), (3, 'Polar Explorer Expedition 2018', 2018, 'Antarctic');","completion":"SELECT COUNT(*) FROM deep_sea_expeditions WHERE year >= 2010 AND location = 'Arctic';"}
{"prompt":"List the number of donations per month for the donor with ID 1. with given SQL schema CREATE TABLE donations (id INT, donation_date DATE); INSERT INTO donations (id, donation_date) VALUES (1, '2021-01-01'), (2, '2021-01-15'), (3, '2021-02-01'), (4, '2021-02-15'), (5, '2021-03-01');","completion":"SELECT EXTRACT(MONTH FROM donation_date) as month, COUNT(*) as donations FROM donations WHERE id = 1 GROUP BY month;"}
{"prompt":"How many unique game genres were played by players from each country? with given SQL schema CREATE TABLE Players (PlayerID INT, Country VARCHAR(20), GameGenre VARCHAR(20));INSERT INTO Players (PlayerID, Country, GameGenre) VALUES (1, 'USA', 'RPG'), (2, 'Canada', 'FPS'), (3, 'Mexico', 'RPG');","completion":"SELECT Country, COUNT(DISTINCT GameGenre) FROM Players GROUP BY Country;"}
{"prompt":"What is the total budget allocated to Education in urban areas compared to suburban areas? with given SQL schema CREATE TABLE EducationBudget (Year INT, Area VARCHAR(20), Budget FLOAT); INSERT INTO EducationBudget (Year, Area, Budget) VALUES (2018, 'Urban', 4000000), (2018, 'Suburban', 3000000), (2019, 'Urban', 4500000), (2019, 'Suburban', 3300000);","completion":"SELECT t.Area, SUM(t.Budget) as Total_Budget FROM EducationBudget t WHERE t.Year IN (2018, 2019) GROUP BY t.Area;"}
{"prompt":"What was the average citizen feedback score for public recreation centers in London in 2021? with given SQL schema CREATE TABLE citizen_feedback (year INT, city VARCHAR(20), service VARCHAR(20), score INT); INSERT INTO citizen_feedback VALUES (2021, 'London', 'Public Recreation Centers', 80), (2021, 'London', 'Public Recreation Centers', 85);","completion":"SELECT AVG(score) FROM citizen_feedback WHERE city = 'London' AND service = 'Public Recreation Centers' AND year = 2021;"}
{"prompt":"Find the total production of Neodymium and Dysprosium with given SQL schema CREATE TABLE production_data (element VARCHAR(10), year INT, quantity INT); INSERT INTO production_data VALUES ('Neodymium', 2015, 1200), ('Neodymium', 2016, 1500), ('Dysprosium', 2015, 200), ('Dysprosium', 2016, 250);","completion":"SELECT SUM(quantity) FROM production_data WHERE element IN ('Neodymium', 'Dysprosium') GROUP BY element;"}
{"prompt":"How many Kilograms of Neodymium were produced in each country between 2012 and 2014? with given SQL schema CREATE TABLE neodymium_production (country VARCHAR(255), year INT, kilograms_produced INT); INSERT INTO neodymium_production (country, year, kilograms_produced) VALUES ('China', 2012, 60000), ('China', 2013, 65000), ('China', 2014, 70000), ('Australia', 2012, 3000), ('Australia', 2013, 3500), ('Australia', 2014, 4000), ('Brazil', 2012, 2000), ('Brazil', 2013, 2500), ('Brazil', 2014, 3000);","completion":"SELECT country, year, SUM(kilograms_produced) FROM neodymium_production WHERE year BETWEEN 2012 AND 2014 GROUP BY ROLLUP(country, year);"}
{"prompt":"How many ytterbium refineries are there in total in South America? with given SQL schema CREATE TABLE ytterbium_refineries (refinery_id INT, continent TEXT); INSERT INTO ytterbium_refineries (refinery_id, continent) VALUES (1, 'South America'), (2, 'Asia'), (3, 'Africa'), (4, 'Europe'), (5, 'North America');","completion":"SELECT COUNT(*) FROM ytterbium_refineries WHERE continent = 'South America';"}
{"prompt":"What is the average price per kilogram of Dysprosium exported by Malaysia to the USA in the last 5 years? with given SQL schema CREATE TABLE Dysprosium_Exports (id INT PRIMARY KEY, year INT, exporting_country VARCHAR(20), importing_country VARCHAR(20), quantity INT, price PER_KG); INSERT INTO Dysprosium_Exports (id, year, exporting_country, importing_country, quantity, price) VALUES (1, 2017, 'Malaysia', 'USA', 20, 15), (2, 2018, 'Malaysia', 'USA', 22, 16), (3, 2019, 'Malaysia', 'USA', 24, 17), (4, 2020, 'Malaysia', 'USA', 26, 18), (5, 2021, 'Malaysia', 'USA', 28, 19), (6, 2017, 'Vietnam', 'USA', 21, 14), (7, 2018, 'Vietnam', 'USA', 23, 15), (8, 2019, 'Vietnam', 'USA', 25, 16), (9, 2020, 'Vietnam', 'USA', 27, 17), (10, 2021, 'Vietnam', 'USA', 29, 18);","completion":"SELECT AVG(price) FROM Dysprosium_Exports WHERE exporting_country = 'Malaysia' AND importing_country = 'USA' AND year BETWEEN 2017 AND 2021;"}
{"prompt":"Which menu items contribute to 80% of the revenue for each cuisine type? with given SQL schema CREATE TABLE menu_engineering(menu_item TEXT, cuisine_type TEXT, revenue FLOAT); INSERT INTO menu_engineering(menu_item, cuisine_type, revenue) VALUES ('Pizza', 'Italian', 2500.00), ('Pasta', 'Italian', 1500.00), ('Tacos', 'Mexican', 3000.00), ('Burritos', 'Mexican', 2500.00);","completion":"SELECT menu_item, cuisine_type, SUM(revenue) as total_revenue FROM menu_engineering WHERE cuisine_type IN (SELECT cuisine_type FROM menu_engineering WHERE revenue IN (SELECT revenue FROM menu_engineering WHERE cuisine_type = menu_engineering.cuisine_type GROUP BY cuisine_type ORDER BY SUM(revenue) DESC LIMIT 1)) GROUP BY cuisine_type, menu_item HAVING SUM(revenue) \/ (SELECT SUM(revenue) FROM menu_engineering WHERE cuisine_type = menu_engineering.cuisine_type) >= 0.8;"}
{"prompt":"What is the minimum production emission for items in the Production_Emissions view? with given SQL schema CREATE VIEW Production_Emissions AS SELECT product_id, product_name, production_emissions FROM Products; INSERT INTO Products (product_id, product_name, transportation_emissions, production_emissions, packaging_emissions) VALUES (601, 'Socks', 2, 4, 1); INSERT INTO Products (product_id, product_name, transportation_emissions, production_emissions, packaging_emissions) VALUES (602, 'Hat', 3, 5, 2); INSERT INTO Products (product_id, product_name, transportation_emissions, production_emissions, packaging_emissions) VALUES (603, 'Scarf', 4, 6, 3);","completion":"SELECT MIN(production_emissions) FROM Production_Emissions;"}
{"prompt":"What is the total revenue generated by retail stores located in New York that sell sustainable products? with given SQL schema CREATE TABLE RetailStores (StoreID INT, StoreName VARCHAR(50), State VARCHAR(50)); INSERT INTO RetailStores (StoreID, StoreName, State) VALUES (1, 'RetailStoreA', 'New York'); CREATE TABLE Sales (SaleID INT, StoreID INT, ProductID INT, Quantity INT, Price DECIMAL(5,2)); INSERT INTO Sales (SaleID, StoreID, ProductID, Quantity, Price) VALUES (1, 1, 1, 10, 15.99), (2, 1, 2, 5, 12.49); CREATE TABLE Products (ProductID INT, ProductName VARCHAR(50), IsSustainable BOOLEAN); INSERT INTO Products (ProductID, ProductName, IsSustainable) VALUES (1, 'Product1', true), (2, 'Product2', false);","completion":"SELECT SUM(Quantity * Price) FROM Sales JOIN RetailStores ON Sales.StoreID = RetailStores.StoreID JOIN Products ON Sales.ProductID = Products.ProductID WHERE RetailStores.State = 'New York' AND Products.IsSustainable = true;"}
{"prompt":"What is the average number of days spent in space by an astronaut? with given SQL schema CREATE TABLE astronauts(name TEXT, missions INTEGER, days_in_space REAL); INSERT INTO astronauts(name, missions, days_in_space) VALUES('Neil Armstrong', 1, 265.5), ('Buzz Aldrin', 1, 216.4);","completion":"SELECT AVG(days_in_space) FROM astronauts;"}
{"prompt":"What is the total revenue for each sports team in the 'team_revenue' table? with given SQL schema CREATE TABLE team_revenue (team_name VARCHAR(255), season INT, total_revenue INT);","completion":"SELECT team_name, SUM(total_revenue) as total_revenue_per_team FROM team_revenue GROUP BY team_name;"}
{"prompt":"What is the total number of employees and unions in the 'labor_advocacy' schema? with given SQL schema CREATE SCHEMA labor_advocacy; CREATE TABLE employees (id INT, name VARCHAR, department VARCHAR); INSERT INTO employees VALUES (1, 'John Doe', 'Marketing'); CREATE TABLE unions (id INT, name VARCHAR, sector VARCHAR); INSERT INTO unions VALUES (1, 'Union A', 'Tech');","completion":"SELECT COUNT(*), 'total' FROM (SELECT * FROM labor_advocacy.employees UNION ALL SELECT * FROM labor_advocacy.unions) AS combined_data;"}
{"prompt":"Update records in the safety_records table where the vessel_id is 401 and incident_type is 'Collision', set the resolution to 'Resolved' with given SQL schema CREATE TABLE safety_records (id INT, vessel_id INT, incident_type VARCHAR(20), resolution VARCHAR(20));","completion":"UPDATE safety_records SET resolution = 'Resolved' WHERE vessel_id = 401 AND incident_type = 'Collision';"}
{"prompt":"What is the total cargo weight transported by each vessel in the past week? with given SQL schema CREATE TABLE Cargo_Tracking(Vessel_ID INT, Cargo_Type VARCHAR(50), Transport_Date DATE, Total_Weight INT); INSERT INTO Cargo_Tracking VALUES (5, 'Coal', '2022-03-20', 2000), (5, 'Iron Ore', '2022-03-21', 3000), (5, 'Grain', '2022-03-23', 1500), (6, 'Coal', '2022-03-20', 3000), (6, 'Grain', '2022-03-21', 1000);","completion":"SELECT Vessel_ID, SUM(Total_Weight) FROM Cargo_Tracking WHERE Transport_Date >= DATEADD(WEEK, -1, GETDATE()) GROUP BY Vessel_ID;"}
{"prompt":"What is the total waste generation in the past year for each district in region V? with given SQL schema CREATE TABLE district_waste(district TEXT, waste_gen FLOAT, waste_date DATE); INSERT INTO district_waste(district, waste_gen, waste_date) VALUES('1', 100, '2022-01-01'), ('1', 150, '2022-02-01'), ('2', 200, '2022-01-01'), ('2', 250, '2022-02-01');","completion":"SELECT district, SUM(waste_gen) FROM district_waste WHERE waste_date >= (CURRENT_DATE - INTERVAL '1 year') GROUP BY district;"}
{"prompt":"How many water treatment plants in the 'urban' category have exceeded their maximum capacity in the last 12 months? with given SQL schema CREATE TABLE water_treatment_plants (plant_id INT, plant_category VARCHAR(20), max_capacity INT, last_inspection_date DATE); INSERT INTO water_treatment_plants (plant_id, plant_category, max_capacity, last_inspection_date) VALUES (1, 'urban', 500, '2021-01-15'), (2, 'rural', 300, '2021-02-10'), (3, 'urban', 600, '2021-06-01');","completion":"SELECT COUNT(plant_id) FROM water_treatment_plants WHERE plant_category = 'urban' AND last_inspection_date >= DATEADD(year, -1, GETDATE());"}
{"prompt":"What is the percentage of wastewater treated in CityC and CityD in 2020? with given SQL schema CREATE TABLE wastewater_treatment (city VARCHAR(50), year INT, treated_volume INT, total_volume INT); INSERT INTO wastewater_treatment (city, year, treated_volume, total_volume) VALUES ('CityC', 2019, 800, 1000), ('CityC', 2020, 900, 1100), ('CityD', 2019, 700, 900), ('CityD', 2020, 800, 1000);","completion":"SELECT city, ROUND((treated_volume::float \/ total_volume::float * 100), 2) AS treatment_percentage FROM wastewater_treatment WHERE year = 2020 AND city IN ('CityC', 'CityD');"}
{"prompt":"What is the average age of members who do cycling workouts? with given SQL schema CREATE TABLE Members (MemberID INT, Age INT, FavoriteExercise VARCHAR(20)); INSERT INTO Members (MemberID, Age, FavoriteExercise) VALUES (1, 35, 'Cycling'); INSERT INTO Members (MemberID, Age, FavoriteExercise) VALUES (2, 28, 'Running');","completion":"SELECT AVG(Age) FROM Members WHERE FavoriteExercise = 'Cycling';"}
{"prompt":"What are the AI safety concerns raised in the past year for healthcare, in the AI Safety database? with given SQL schema CREATE TABLE concerns (id INT, description VARCHAR(255), published_date DATE);","completion":"SELECT description FROM concerns WHERE published_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) AND sector = 'Healthcare';"}
{"prompt":"What is the ratio of safe AI algorithms to unsafe AI algorithms by gender of the lead developer? with given SQL schema CREATE TABLE safe_ai_algorithms (algorithm_id INT, algorithm_name TEXT, is_safe BOOLEAN); INSERT INTO safe_ai_algorithms (algorithm_id, algorithm_name, is_safe) VALUES (1, 'Safe AI', true), (2, 'Unsafe AI', false); CREATE TABLE ai_developers (developer_id INT, developer_name TEXT, developer_gender TEXT, lead_developer BOOLEAN); INSERT INTO ai_developers (developer_id, developer_name, developer_gender, lead_developer) VALUES (1001, 'Alice', 'Female', true), (1002, 'Bob', 'Male', false), (1003, 'Charlie', 'Female', true);","completion":"SELECT d.developer_gender, SUM(saa.is_safe) as num_safe, COUNT(*) as num_total, 1.0 * SUM(saa.is_safe) \/ COUNT(*) as ratio FROM safe_ai_algorithms saa CROSS JOIN ai_developers d WHERE d.lead_developer = true GROUP BY d.developer_gender;"}
{"prompt":"How many rural infrastructure projects were completed in each year from the 'project_completion_dates' table? with given SQL schema CREATE TABLE project_completion_dates (id INT, project_id INT, completion_date DATE); INSERT INTO project_completion_dates (id, project_id, completion_date) VALUES (1, 1, '2018-06-25'), (2, 2, '2019-12-18'), (3, 3, '2018-03-04');","completion":"SELECT EXTRACT(YEAR FROM completion_date) AS Year, COUNT(DISTINCT project_id) AS Number_Of_Projects FROM project_completion_dates GROUP BY Year;"}
{"prompt":"Insert a new rural infrastructure project 'Solar Power' in Vietnam with a budget of 600000. with given SQL schema CREATE TABLE RuralInfrastructure (id INT, project VARCHAR(255), country VARCHAR(255), budget FLOAT);","completion":"INSERT INTO RuralInfrastructure (project, country, budget) VALUES ('Solar Power', 'Vietnam', 600000);"}
{"prompt":"Insert new records into the 'aircraft_manufacturing' table for 'SpaceX' manufacturing the 'Starship' model in 'Boca Chica', 'USA' in 2025 with given SQL schema CREATE TABLE aircraft_manufacturing (id INT PRIMARY KEY, manufacturer VARCHAR(50), model VARCHAR(50), city VARCHAR(50), country VARCHAR(50), manufacturing_year INT);","completion":"INSERT INTO aircraft_manufacturing (id, manufacturer, model, city, country, manufacturing_year) VALUES (1, 'SpaceX', 'Starship', 'Boca Chica', 'USA', 2025);"}
{"prompt":"List all animals and their total population with given SQL schema CREATE TABLE IF NOT EXISTS region (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE IF NOT EXISTS animal (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE IF NOT EXISTS animal_population (id INT PRIMARY KEY, animal_id INT, region_id INT, population INT);","completion":"SELECT a.name as animal_name, SUM(ap.population) as total_population FROM animal a JOIN animal_population ap ON a.id = ap.animal_id GROUP BY a.name;"}
{"prompt":"How many construction workers were employed in Texas in Q1 and Q2 of 2021? with given SQL schema CREATE TABLE employment (state VARCHAR(2), quarter INT, workers INT);","completion":"SELECT state, quarter, SUM(workers) FROM employment WHERE state = 'TX' AND quarter IN (1, 2) GROUP BY state, quarter;"}
{"prompt":"What is the average permit processing time in Texas? with given SQL schema CREATE TABLE permit_applications (id INT, application_date DATE, permit_date DATE); INSERT INTO permit_applications (id, application_date, permit_date) VALUES (1, '2022-01-01', '2022-01-05'); INSERT INTO permit_applications (id, application_date, permit_date) VALUES (2, '2022-01-02', '2022-01-06'); INSERT INTO permit_applications (id, application_date, permit_date) VALUES (3, '2022-01-03', '2022-01-07');","completion":"SELECT AVG(DATEDIFF(permit_date, application_date)) as avg_processing_time FROM permit_applications WHERE state = 'Texas';"}
{"prompt":"Insert a new precedent regarding immigration laws in France. with given SQL schema CREATE TABLE legal_precedents (precedent_id INT, country VARCHAR(20), law_category VARCHAR(20), description TEXT); CREATE TABLE countries (country_id INT, country VARCHAR(20));","completion":"INSERT INTO legal_precedents (precedent_id, country, law_category, description) VALUES ((SELECT MAX(precedent_id) FROM legal_precedents) + 1, 'France', 'Immigration', 'New precedent about immigration laws in France');"}
{"prompt":"What is the average billing amount per case? with given SQL schema CREATE TABLE Cases (CaseID int, BillingID int); INSERT INTO Cases VALUES (1, 1), (2, 2), (3, 3), (4, 4); CREATE TABLE Billing (BillingID int, Amount decimal(10,2)); INSERT INTO Billing VALUES (1, 500.00), (2, 750.00), (3, 300.00), (4, 600.00);","completion":"SELECT AVG(B.Amount) as AvgBillingPerCase FROM Cases C JOIN Billing B ON C.BillingID = B.BillingID;"}
{"prompt":"Delete CO2 emissions records for a specific chemical manufacturer. with given SQL schema CREATE TABLE emissions (emission_id INT, manufacturer_id INT, gas_type VARCHAR(255), amount INT); INSERT INTO emissions (emission_id, manufacturer_id, gas_type, amount) VALUES (1, 1, 'CO2', 1000), (2, 1, 'CH4', 200), (3, 2, 'CO2', 1500), (4, 3, 'CO2', 1200), (5, 3, 'CH4', 300);","completion":"DELETE FROM emissions WHERE manufacturer_id = 1 AND gas_type = 'CO2';"}
{"prompt":"Update the \"equipment\" table to reflect that the \"equipment_id\" 0102 is now \"inactive\". with given SQL schema CREATE TABLE equipment (equipment_id varchar(10),equipment_name varchar(255),equipment_model varchar(255),equipment_status varchar(50));","completion":"UPDATE equipment SET equipment_status = 'inactive' WHERE equipment_id = '0102';"}
{"prompt":"What is the maximum funding amount for climate mitigation projects in South Asia? with given SQL schema CREATE TABLE climate_finance (project_id INT, project_name TEXT, location TEXT, funded_year INT, funding_amount FLOAT); INSERT INTO climate_finance (project_id, project_name, location, funded_year, funding_amount) VALUES (1, 'Mitigation 1', 'India', 2015, 6000000.0), (2, 'Mitigation 2', 'Pakistan', 2013, 8000000.0), (3, 'Adaptation 1', 'Bangladesh', 2012, 4000000.0);","completion":"SELECT MAX(funding_amount) FROM climate_finance WHERE funded_year >= 2010 AND project_type = 'climate mitigation' AND location LIKE 'South Asia%';"}
{"prompt":"What is the number of primary care physicians per 100,000 population for each state in the physicians table? with given SQL schema CREATE TABLE physicians (state TEXT, specialty TEXT, num_physicians INT); INSERT INTO physicians (state, specialty, num_physicians) VALUES ('California', 'Primary Care', 15000), ('Texas', 'Primary Care', 12000), ('New York', 'Primary Care', 18000), ('Florida', 'Primary Care', 14000);","completion":"SELECT state, (num_physicians * 100000) \/ population AS physicians_per_100k FROM physicians JOIN state_population ON physicians.state = state_population.state;"}
{"prompt":"What is the total number of primary care clinics in urban areas? with given SQL schema CREATE TABLE clinics (name VARCHAR(255), city_type VARCHAR(255), specialty VARCHAR(255)); INSERT INTO clinics (name, city_type, specialty) VALUES ('Family Care Clinic', 'Urban', 'Primary Care'); INSERT INTO clinics (name, city_type, specialty) VALUES ('MedPlus Clinic', 'Rural', 'Internal Medicine');","completion":"SELECT COUNT(*) FROM clinics WHERE city_type = 'Urban' AND specialty = 'Primary Care';"}
{"prompt":"What is the average cost of accommodations per student who utilizes assistive technology? with given SQL schema CREATE TABLE accommodations (accommodation_cost DECIMAL(5,2), student_id INT, utilizes_assistive_tech BOOLEAN); INSERT INTO accommodations (accommodation_cost, student_id, utilizes_assistive_tech) VALUES (100.00, 1, TRUE), (200.00, 2, FALSE);","completion":"SELECT AVG(accommodation_cost) FROM accommodations WHERE utilizes_assistive_tech = TRUE;"}
{"prompt":"How many timber production sites are there in each country, and what is their total area in hectares, broken down by year of establishment? with given SQL schema CREATE TABLE timber_production_2 (id INT, country VARCHAR(255), site_name VARCHAR(255), area FLOAT, establishment_year INT); INSERT INTO timber_production_2 (id, country, site_name, area, establishment_year) VALUES (1, 'Canada', 'Site A', 50000.0, 2000), (2, 'Canada', 'Site B', 60000.0, 2001), (3, 'Brazil', 'Site C', 70000.0, 2002), (4, 'Brazil', 'Site D', 80000.0, 2003);","completion":"SELECT country, establishment_year, COUNT(*), SUM(area) FROM timber_production_2 GROUP BY country, establishment_year;"}
{"prompt":"What is the number of products that are not cruelty-free certified and do not contain parabens? with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(255), is_cruelty_free BOOLEAN, contains_parabens BOOLEAN);","completion":"SELECT COUNT(*) FROM products WHERE is_cruelty_free = FALSE AND contains_parabens = FALSE;"}
{"prompt":"What is the average price of organic skincare products sold in the US? with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(255), price DECIMAL(5,2), is_organic BOOLEAN, country VARCHAR(255));","completion":"SELECT AVG(price) FROM products WHERE is_organic = TRUE AND country = 'US';"}
{"prompt":"What is the average rating of eco-friendly products for each category? with given SQL schema CREATE TABLE ProductRatings (ProductID INT, Rating INT, EcoFriendly VARCHAR(50)); INSERT INTO ProductRatings (ProductID, Rating, EcoFriendly) VALUES (1, 4, 'Yes'); INSERT INTO ProductRatings (ProductID, Rating, EcoFriendly) VALUES (2, 5, 'No');","completion":"SELECT c.Category, AVG(Rating) as AvgRating FROM CosmeticsSales c INNER JOIN ProductRatings pr ON c.ProductID = pr.ProductID WHERE EcoFriendly = 'Yes' GROUP BY c.Category;"}
{"prompt":"What is the average ticket price for art exhibits in each city? with given SQL schema CREATE TABLE Exhibits (exhibit_id INT, city VARCHAR(50), price DECIMAL(5,2)); INSERT INTO Exhibits (exhibit_id, city, price) VALUES (1, 'New York', 25.99), (2, 'Los Angeles', 22.49), (3, 'Chicago', 30.00);","completion":"SELECT city, AVG(price) as avg_price FROM Exhibits GROUP BY city;"}
{"prompt":"What is the name of the artist who painted the most expensive painting? with given SQL schema CREATE TABLE paintings (name VARCHAR(255), artist VARCHAR(255), price DECIMAL(5,2)); INSERT INTO paintings (name, artist, price) VALUES ('Salvator Mundi', 'Leonardo da Vinci', 450300000), ('The Scream', 'Edvard Munch', 120000000), ('Guernica', 'Pablo Picasso', 80000000);","completion":"SELECT artist FROM paintings WHERE price = (SELECT MAX(price) FROM paintings);"}
{"prompt":"What is the total number of humanitarian assistance events by each country in the last 3 years? with given SQL schema CREATE TABLE Humanitarian_Assistance (id INT, country VARCHAR(50), year INT, events INT); CREATE TABLE Countries (id INT, name VARCHAR(50), region VARCHAR(50));","completion":"SELECT co.name, SUM(ha.events) FROM Humanitarian_Assistance ha INNER JOIN Countries co ON ha.country = co.name WHERE ha.year BETWEEN (YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY co.name;"}
{"prompt":"Show the top 5 customers by total transaction amount in Australia. with given SQL schema CREATE TABLE transactions (customer_id INT, transaction_amount DECIMAL(10,2), country VARCHAR(50)); INSERT INTO transactions (customer_id, transaction_amount, country) VALUES (1, 120.50, 'Australia'), (2, 75.30, 'Australia'), (3, 150.00, 'Australia'), (4, 50.00, 'Australia'), (5, 250.00, 'Australia'), (6, 100.00, 'Australia'), (7, 300.00, 'Australia'), (8, 200.00, 'Australia'), (9, 400.00, 'Australia'), (10, 500.00, 'Australia');","completion":"SELECT customer_id, SUM(transaction_amount) AS total_amount FROM transactions WHERE country = 'Australia' GROUP BY customer_id ORDER BY total_amount DESC LIMIT 5;"}
{"prompt":"Delete the artifact record where artifact_id = 1001 from the artifacts table. with given SQL schema artifacts(artifact_id, name, description, date_found, excavation_site_id); excavations(excavation_site_id, name, location, start_date, end_date)","completion":"DELETE FROM artifacts"}
{"prompt":"Identify the number of rural hospitals that have increased their bed count by at least 10% in the past year. with given SQL schema CREATE TABLE hospitals (id INT, beds INT, location VARCHAR(20), year INT, increase BOOLEAN); INSERT INTO hospitals (id, beds, location, year, increase) VALUES (1, 50, 'rural', 2021, true), (2, 200, 'urban', 2021, false), (3, 75, 'rural', 2020, false);","completion":"SELECT COUNT(*) FROM hospitals WHERE location LIKE '%rural%' AND increase = true AND year = YEAR(GETDATE()) - 1 AND beds * 1.1 <= (SELECT beds FROM hospitals WHERE location = 'rural' AND year = YEAR(GETDATE()) - 2);"}
{"prompt":"Show the number of green bond issuances for each country and the total value of green bonds issued for each country. with given SQL schema CREATE TABLE green_bonds (id INT, issuer_country VARCHAR(255), issue_year INT, value FLOAT); INSERT INTO green_bonds (id, issuer_country, issue_year, value) VALUES (1, 'USA', 2017, 3000000), (2, 'China', 2018, 4000000), (3, 'Germany', 2017, 2000000), (4, 'USA', 2018, 5000000), (5, 'India', 2019, 1000000), (6, 'Brazil', 2019, 2000000), (7, 'Canada', 2018, 1500000);","completion":"SELECT issuer_country, COUNT(*) as num_issuances, SUM(value) as total_value FROM green_bonds GROUP BY issuer_country;"}
{"prompt":"What is the average budget allocated to cybersecurity operations in Asia? with given SQL schema CREATE TABLE cybersecurity_budget (id INT, year INT, amount INT, country TEXT); INSERT INTO cybersecurity_budget (id, year, amount, country) VALUES (1, 2020, 5000000, 'China'), (2, 2020, 6000000, 'Japan'), (3, 2019, 4000000, 'India');","completion":"SELECT AVG(amount) FROM cybersecurity_budget WHERE country IN ('China', 'Japan', 'India') AND year = 2020;"}
{"prompt":"Find the number of unique artists per concert. with given SQL schema CREATE TABLE ArtistConcert (ConcertID INT, Artist VARCHAR(50));   INSERT INTO ArtistConcert (ConcertID, Artist) VALUES (1, 'Taylor Swift');   INSERT INTO ArtistConcert (ConcertID, Artist) VALUES (1, 'Ed Sheeran');   INSERT INTO ArtistConcert (ConcertID, Artist) VALUES (2, 'BTS');","completion":"SELECT ConcertID, COUNT(DISTINCT Artist) AS ArtistCount FROM ArtistConcert GROUP BY ConcertID;"}
{"prompt":"What was the total number of volunteers who engaged in environmental programs in 2022? with given SQL schema CREATE TABLE EnvironmentalPrograms (Volunteer VARCHAR(50), Program VARCHAR(50), VolunteerDate DATE); INSERT INTO EnvironmentalPrograms (Volunteer, Program, VolunteerDate) VALUES ('Jamal Williams', 'Tree Planting', '2022-03-12'), ('Priya Patel', 'Beach Cleanup', '2022-08-01');","completion":"SELECT Program, COUNT(DISTINCT Volunteer) as TotalVolunteers FROM EnvironmentalPrograms WHERE VolunteerDate BETWEEN '2022-01-01' AND '2022-12-31' AND Program LIKE '%Environment%' GROUP BY Program;"}
{"prompt":"What is the average salary of employees who have completed training on unconscious bias? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Department VARCHAR(20), Salary FLOAT, Training VARCHAR(50)); INSERT INTO Employees (EmployeeID, Gender, Department, Salary, Training) VALUES (1, 'Male', 'IT', 75000, 'Unconscious Bias'), (2, 'Female', 'IT', 70000, 'Diversity and Inclusion'), (3, 'Male', 'HR', 60000, 'Unconscious Bias'), (4, 'Female', 'HR', 65000, 'Unconscious Bias');","completion":"SELECT AVG(Salary) FROM Employees WHERE Training = 'Unconscious Bias';"}
{"prompt":"What is the total training cost for the first half of 2022? with given SQL schema CREATE TABLE Trainings (TrainingID int, TrainingDate date, Cost decimal(10,2)); INSERT INTO Trainings (TrainingID, TrainingDate, Cost) VALUES (1, '2022-01-15', 500.00), (2, '2022-04-01', 1000.00), (3, '2022-07-01', 300.00);","completion":"SELECT SUM(Cost) FROM Trainings WHERE TrainingDate BETWEEN '2022-01-01' AND '2022-06-30';"}
{"prompt":"Which diversity programs are currently being participated in by employees in the HR department? with given SQL schema CREATE TABLE Employees (Employee_ID INT, First_Name VARCHAR(20), Last_Name VARCHAR(20), Department VARCHAR(20), Salary DECIMAL(10,2), Date_Hired DATE); CREATE TABLE Diversity_Programs (Program_ID INT, Program_Name VARCHAR(50), Participant_ID INT, Date_Started DATE, Date_Ended DATE);","completion":"SELECT dp.Program_Name FROM Diversity_Programs dp JOIN Employees e ON dp.Participant_ID = e.Employee_ID WHERE e.Department = 'HR' AND dp.Date_Ended IS NULL;"}
{"prompt":"What is the average budget allocated for ethical AI research by country? with given SQL schema CREATE TABLE Country (CountryID INT PRIMARY KEY, CountryName VARCHAR(100), Budget DECIMAL(10,2)); INSERT INTO Country (CountryID, CountryName, Budget) VALUES (1, 'USA', 5000000.00), (2, 'Canada', 3000000.00), (3, 'Mexico', 1000000.00);","completion":"SELECT AVG(Budget) as AvgBudget, CountryName FROM Country GROUP BY CountryName;"}
{"prompt":"Delete the record for the 'bus' service on January 3, 2022 from the 'revenue' table. with given SQL schema CREATE TABLE revenue (service text, date date, amount int); INSERT INTO revenue (service, date, amount) VALUES ('subway', '2022-01-01', 5000), ('bus', '2022-01-02', 6000), ('subway', '2022-01-03', 7000);","completion":"DELETE FROM revenue WHERE service = 'bus' AND date = '2022-01-03';"}
{"prompt":"What is the earliest and latest time a 'train' departs from a station on the 'NQRW' line? with given SQL schema CREATE TABLE station (id INT, name TEXT, line TEXT); INSERT INTO station (id, name, line) VALUES (1, 'Times Square', 'NQRW'), (2, '34th Street', 'BDFM'); CREATE TABLE train_schedule (id INT, station_id INT, train_type TEXT, departure_time TIME); INSERT INTO train_schedule (id, station_id, train_type, departure_time) VALUES (1, 1, 'N', '06:00:00'), (2, 1, 'Q', '06:02:00'), (3, 1, 'R', '06:04:00'), (4, 1, 'W', '06:06:00'), (5, 2, 'N', '06:01:00'), (6, 2, 'Q', '06:03:00'), (7, 2, 'R', '06:05:00'), (8, 2, 'W', '06:07:00');","completion":"SELECT MIN(departure_time) as earliest_departure, MAX(departure_time) as latest_departure FROM train_schedule WHERE station_id = 1 AND train_type = 'N' OR station_id = 2 AND train_type = 'N';"}
{"prompt":"What is the fare for 'adult' passengers in the 'blue' line? with given SQL schema CREATE TABLE fares (line VARCHAR(10), passenger_type VARCHAR(10), fare FLOAT); INSERT INTO fares (line, passenger_type, fare) VALUES ('red', 'adult', 2.50), ('red', 'child', 1.50), ('blue', 'adult', 3.00), ('blue', 'child', 2.00), ('green', 'adult', 3.50), ('green', 'child', 2.50);","completion":"SELECT fare FROM fares WHERE line = 'blue' AND passenger_type = 'adult';"}
{"prompt":"What is the maximum fare for a bus in the 'south' region? with given SQL schema CREATE TABLE Buses (id INT, region VARCHAR(10)); INSERT INTO Buses (id, region) VALUES (1, 'west'), (2, 'east'), (3, 'south'); CREATE TABLE Fares (id INT, bus_id INT, fare DECIMAL(5,2)); INSERT INTO Fares (id, bus_id, fare) VALUES (1, 1, 5.00), (2, 1, 5.00), (3, 2, 4.50), (4, 3, 6.00);","completion":"SELECT MAX(Fares.fare) FROM Fares INNER JOIN Buses ON Fares.bus_id = Buses.id WHERE Buses.region = 'south';"}
{"prompt":"What is the total distance traveled for all buses in the London transit system in the past week? with given SQL schema CREATE TABLE london_buses (bus_id INT, daily_distance FLOAT, date DATE);","completion":"SELECT SUM(daily_distance) FROM london_buses WHERE date >= DATE_SUB(NOW(), INTERVAL 1 WEEK);"}
{"prompt":"List the top 3 most popular garment sizes, based on quantity sold, for each gender, from the 'sales_data' view. with given SQL schema CREATE VIEW sales_data AS SELECT o.order_id, c.customer_gender, g.garment_size, g.garment_type, g.price, g.quantity FROM orders o JOIN customers c ON o.customer_id = c.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN garments g ON oi.garment_id = g.garment_id;","completion":"SELECT customer_gender, garment_size, SUM(quantity) AS total_quantity FROM sales_data GROUP BY customer_gender, garment_size HAVING total_quantity IN (SELECT MAX(total_quantity) FROM (SELECT customer_gender, garment_size, SUM(quantity) AS total_quantity FROM sales_data GROUP BY customer_gender, garment_size) sub WHERE sub.customer_gender = sales_data.customer_gender) LIMIT 3;"}
{"prompt":"What is the average account balance for clients in the Islamic Banking segment? with given SQL schema CREATE TABLE islamic_banking_clients (client_id INT, segment VARCHAR(20), account_balance DECIMAL(10,2)); INSERT INTO islamic_banking_clients (client_id, segment, account_balance) VALUES (1, 'Islamic Banking', 15000.00), (2, 'Conventional Banking', 20000.00), (3, 'Islamic Banking', 12000.00);","completion":"SELECT AVG(account_balance) FROM islamic_banking_clients WHERE segment = 'Islamic Banking';"}
{"prompt":"Find the top 3 countries with the highest total donation amount. with given SQL schema CREATE TABLE donor_data (id INT, donor_country VARCHAR, total_donation_amount DECIMAL);","completion":"SELECT donor_country, SUM(total_donation_amount) as total_donation_amount FROM donor_data GROUP BY donor_country ORDER BY total_donation_amount DESC LIMIT 3;"}
{"prompt":"What is the maximum weight of packages shipped from the Mexico City warehouse to each destination province? with given SQL schema CREATE TABLE Packages (id INT, warehouse_id INT, destination_province TEXT, weight FLOAT); INSERT INTO Packages (id, warehouse_id, destination_province, weight) VALUES (13, 19, 'BC', 92.5), (14, 19, 'ON', 110.2), (15, 19, 'QC', 76.8); CREATE TABLE Warehouses (id INT, name TEXT, city TEXT, state TEXT); INSERT INTO Warehouses (id, name, city, state) VALUES (19, 'Mexico City Warehouse', 'Mexico City', 'MX');","completion":"SELECT destination_province, MAX(weight) FROM Packages JOIN Warehouses ON Packages.warehouse_id = Warehouses.id WHERE Warehouses.name = 'Mexico City Warehouse' GROUP BY destination_province;"}
{"prompt":"What is the maximum budget for a genetic research project in the 'GeneticResearch' schema? with given SQL schema CREATE SCHEMA GeneticResearch; CREATE TABLE project_budgets (project_name VARCHAR(50), budget DECIMAL(10, 2)); INSERT INTO project_budgets VALUES ('Project1', 600000), ('Project2', 900000);","completion":"SELECT MAX(budget) FROM GeneticResearch.project_budgets;"}
{"prompt":"What is the average income of residents in each city in the state of California, grouped by city and ordered by average income in descending order? with given SQL schema CREATE TABLE cities (id INT PRIMARY KEY, name TEXT, state TEXT); INSERT INTO cities (id, name, state) VALUES (1, 'Los Angeles', 'California'), (2, 'San Diego', 'California'), (3, 'San Jose', 'California'); CREATE TABLE incomes (id INT PRIMARY KEY, city_id INT, income INT); INSERT INTO incomes (id, city_id, income) VALUES (1, 1, 50000), (2, 1, 70000), (3, 2, 45000), (4, 2, 60000), (5, 3, 48000), (6, 3, 52000);","completion":"SELECT c.name, AVG(i.income) FROM cities c JOIN incomes i ON c.id = i.city_id WHERE c.state = 'California' GROUP BY c.name ORDER BY AVG(i.income) DESC;"}
{"prompt":"What is the count of initiatives for each department that have a budget greater than the average budget for all initiatives in the \"initiatives\" table? with given SQL schema CREATE TABLE department (id INT, name TEXT);CREATE TABLE initiatives (id INT, department_id INT, budget INT);","completion":"SELECT department.name, COUNT(initiatives.id) FROM department JOIN initiatives ON department.id = initiatives.department_id WHERE initiatives.budget > (SELECT AVG(budget) FROM initiatives) GROUP BY department.name;"}
{"prompt":"Delete faculty members who have been with the university for less than 5 years. with given SQL schema CREATE TABLE faculty (id INT PRIMARY KEY, name VARCHAR(50), department VARCHAR(50), years_of_service INT);","completion":"DELETE FROM faculty WHERE years_of_service < 5;"}
{"prompt":"Determine the average engagement time for virtual tours in each city. with given SQL schema CREATE TABLE virtual_tours (tour_id INT, city TEXT, engagement_time FLOAT); INSERT INTO virtual_tours (tour_id, city, engagement_time) VALUES (1, 'Tokyo', 15.5), (2, 'Tokyo', 12.3), (3, 'Osaka', 18.1);","completion":"SELECT city, AVG(engagement_time) FROM virtual_tours GROUP BY city;"}
{"prompt":"What is the virtual tour engagement rate for the top 2 countries with the highest engagement rates, ordered by engagement rate in descending order? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, hotel_name TEXT, country TEXT, engagement_rate FLOAT); INSERT INTO virtual_tours (tour_id, hotel_name, country, engagement_rate) VALUES (1, 'Hotel A', 'USA', 0.06), (2, 'Hotel B', 'Canada', 0.08), (3, 'Hotel C', 'Mexico', 0.05), (4, 'Hotel D', 'USA', 0.07);","completion":"SELECT country, engagement_rate FROM (SELECT country, engagement_rate, RANK() OVER (ORDER BY engagement_rate DESC) as rank FROM virtual_tours) as subquery WHERE rank <= 2 ORDER BY engagement_rate DESC;"}
{"prompt":"Delete all records from the 'species' table where the 'region' column is 'Antarctica' with given SQL schema CREATE TABLE species (id INT PRIMARY KEY, species_name VARCHAR(255), region VARCHAR(255)); INSERT INTO species (id, species_name, region) VALUES (1, 'penguin', 'Antarctica'), (2, 'seal', 'Arctic');","completion":"DELETE FROM species WHERE region = 'Antarctica';"}
{"prompt":"List the species in the 'arctic_biodiversity' table and their conservation status from the 'iucn_greenlist' table, if available. with given SQL schema CREATE TABLE arctic_biodiversity (species_id INT, species_name VARCHAR(255), population INT, region VARCHAR(255)); CREATE TABLE iucn_greenlist (species_id INT, conservation_status VARCHAR(255));","completion":"SELECT a.species_name, g.conservation_status FROM arctic_biodiversity a LEFT JOIN iucn_greenlist g ON a.species_id = g.species_id;"}
{"prompt":"What is the average population of cities with a UNESCO World Heritage designation, ordered by designation date? with given SQL schema CREATE TABLE cities (name VARCHAR(255), population INT, designation_date DATE); INSERT INTO cities (name, population, designation_date) VALUES ('Paris', 2141000, '1991-09-16'); INSERT INTO cities (name, population, designation_date) VALUES ('Rio de Janeiro', 6727000, '2012-07-01');","completion":"SELECT AVG(population) FROM (SELECT population, ROW_NUMBER() OVER (ORDER BY designation_date) rn FROM cities WHERE name IN (SELECT name FROM heritagesites)) t WHERE rn % 2 = 1;"}
{"prompt":"What is the average age of patients who received psychodynamic therapy? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, treatment VARCHAR(20)); INSERT INTO patients (patient_id, age, treatment) VALUES (1, 32, 'psychodynamic therapy'), (2, 45, 'psychodynamic therapy'), (3, 50, 'CBT');","completion":"SELECT AVG(age) FROM patients WHERE treatment = 'psychodynamic therapy';"}
{"prompt":"What are the names and budgets of all public works projects in California, along with the name of the engineer in charge, sorted by budget in descending order? with given SQL schema CREATE TABLE public_works_projects (project_id INT, name VARCHAR(50), budget DECIMAL(10,2), state VARCHAR(2)); CREATE TABLE project_engineers (engineer_id INT, project_id INT, name VARCHAR(50));","completion":"SELECT pwp.name, pwp.budget, pe.name AS engineer_name FROM public_works_projects pwp INNER JOIN project_engineers pe ON pwp.project_id = pe.project_id WHERE pwp.state = 'CA' ORDER BY pwp.budget DESC;"}
{"prompt":"Update the number of tourists who visited Egypt in 2022 due to the increase in travel after the pandemic. with given SQL schema CREATE TABLE tourism_stats (country VARCHAR(255), year INT, visitors INT, continent VARCHAR(255)); INSERT INTO tourism_stats (country, year, visitors, continent) VALUES ('Egypt', 2022, 3000000, 'Africa');","completion":"UPDATE tourism_stats SET visitors = 4000000 WHERE country = 'Egypt' AND year = 2022;"}
{"prompt":"How many access to justice cases were resolved through mediation in New York in 2020? with given SQL schema CREATE TABLE cases (case_id INT, resolution_type VARCHAR(20), resolution_date DATE, city VARCHAR(20)); INSERT INTO cases (case_id, resolution_type, resolution_date, city) VALUES (1, 'Mediation', '2020-01-01', 'New York'); INSERT INTO cases (case_id, resolution_type, resolution_date, city) VALUES (2, 'Litigation', '2019-01-01', 'Los Angeles');","completion":"SELECT COUNT(*) FROM cases WHERE resolution_type = 'Mediation' AND resolution_date BETWEEN '2020-01-01' AND '2020-12-31' AND city = 'New York';"}
{"prompt":"How many legal aid clinics are there in each state in the justice_schemas.legal_aid_clinics table, including the District of Columbia? with given SQL schema CREATE TABLE justice_schemas.legal_aid_clinics (id INT PRIMARY KEY, clinic_name TEXT, state TEXT);","completion":"SELECT state, COUNT(*) FROM justice_schemas.legal_aid_clinics GROUP BY state;"}
{"prompt":"How many legal aid clinics are there in the state of New York, and how many clients have they served in the past year? with given SQL schema CREATE TABLE legal_aid_clinics (clinic_id INT, state VARCHAR(255), clients_served INT); INSERT INTO legal_aid_clinics (clinic_id, state, clients_served) VALUES (1, 'New York', 500); INSERT INTO legal_aid_clinics (clinic_id, state, clients_served) VALUES (2, 'California', 700);","completion":"SELECT state, COUNT(clinic_id) as num_clinics, SUM(clients_served) as total_clients_served FROM legal_aid_clinics WHERE state = 'New York' AND YEAR(date_served) = YEAR(CURRENT_DATE()) - 1 GROUP BY state;"}
{"prompt":"Which marine species were observed in the Southern Ocean in the last 30 days? with given SQL schema CREATE TABLE marine_species_observations (species_name TEXT, observation_date DATE, location TEXT); INSERT INTO marine_species_observations VALUES ('Krill', '2023-02-10', 'Southern Ocean'), ('Blue Whale', '2023-01-25', 'Southern Ocean'), ('Krill', '2023-03-01', 'Southern Ocean');","completion":"SELECT species_name FROM marine_species_observations WHERE observation_date >= DATEADD(day, -30, CURRENT_DATE) AND location = 'Southern Ocean' GROUP BY species_name;"}
{"prompt":"What is the average weight of locally sourced fruits in the dessert menu? with given SQL schema CREATE TABLE DessertIngredients (ingredient VARCHAR(50), source VARCHAR(20), weight DECIMAL(5,2)); INSERT INTO DessertIngredients (ingredient, source, weight) VALUES ('Strawberries', 'Local', 2.00), ('Blueberries', 'Local', 1.50), ('Bananas', 'Local', 3.00);","completion":"SELECT AVG(weight) FROM DessertIngredients WHERE source = 'Local';"}
{"prompt":"What is the minimum production volume in 'Asia' for the year 2017?' with given SQL schema CREATE TABLE mines (id INT, name TEXT, location TEXT, production_volume INT, product TEXT, year INT); INSERT INTO mines (id, name, location, production_volume, product, year) VALUES (1, 'Emerald Explorer Mine', 'Asia', 1000, 'Emerald', 2017); INSERT INTO mines (id, name, location, production_volume, product, year) VALUES (2, 'Sapphire Summit Mine', 'Asia', 1500, 'Sapphire', 2017);","completion":"SELECT MIN(production_volume) FROM mines WHERE location = 'Asia' AND year = 2017;"}
{"prompt":"Delete the environmental impact stats for the 'Turquoise Trail' mine in Inner Mongolia, China from the \"environmental_impact\" table with given SQL schema CREATE TABLE environmental_impact (mine_id INT, year INT, co2_emissions INT, water_consumption INT, waste_generation INT);","completion":"DELETE FROM environmental_impact WHERE mine_id = 10 AND year = 2020;"}
{"prompt":"What is the number of accidents in mining operations in India and Argentina, and the total number of employees in those operations? with given SQL schema CREATE TABLE mining_operations (id INT, country VARCHAR(20), operation_name VARCHAR(30), accidents INT, total_employees INT); INSERT INTO mining_operations (id, country, operation_name, accidents, total_employees) VALUES (1, 'India', 'Operation P', 5, 150); INSERT INTO mining_operations (id, country, operation_name, accidents, total_employees) VALUES (2, 'India', 'Operation Q', 3, 200); INSERT INTO mining_operations (id, country, operation_name, accidents, total_employees) VALUES (3, 'Argentina', 'Operation R', 4, 120);","completion":"SELECT country, SUM(accidents) AS total_accidents, SUM(total_employees) AS total_employees FROM mining_operations WHERE country IN ('India', 'Argentina') GROUP BY country;"}
{"prompt":"What is the percentage of total revenue from streaming and concert ticket sales for Pop music in 2018? with given SQL schema CREATE TABLE StreamingRevenue (id INT, year INT, genre VARCHAR(50), revenue FLOAT); CREATE TABLE ConcertTicketSales (id INT, year INT, genre VARCHAR(50), revenue FLOAT);","completion":"SELECT (SUM(sr.revenue) + SUM(cts.revenue)) \/ (SELECT SUM(revenue) FROM (SELECT revenue FROM StreamingRevenue WHERE year = 2018 UNION ALL SELECT revenue FROM ConcertTicketSales WHERE year = 2018) t) FROM StreamingRevenue sr JOIN ConcertTicketSales cts ON sr.genre = cts.genre WHERE sr.year = 2018 AND sr.genre = 'Pop';"}
{"prompt":"Update the age for audience member with id 1 to 40 with given SQL schema CREATE TABLE audience (id INT, age INT, gender VARCHAR(10)); INSERT INTO audience (id, age, gender) VALUES (1, 35, 'Female');","completion":"UPDATE audience SET age = 40 WHERE id = 1;"}
{"prompt":"What is the total number of articles published per day for a specific author? with given SQL schema CREATE TABLE articles (article_id INT, author VARCHAR(50), title VARCHAR(100), category VARCHAR(50), publication_date DATE);","completion":"SELECT publication_date, COUNT(article_id) AS articles_per_day FROM articles WHERE author = 'John Doe' GROUP BY publication_date ORDER BY publication_date;"}
{"prompt":"Find the number of unique donors who made donations in both January and February in the 'Donations' table. with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE);","completion":"SELECT COUNT(DISTINCT DonorID) AS UniqueDonors FROM Donations WHERE EXTRACT(MONTH FROM DonationDate) IN (1, 2) GROUP BY DonorID HAVING COUNT(DISTINCT EXTRACT(MONTH FROM DonationDate)) = 2;"}
{"prompt":"What are the deep-sea expeditions that overlap with marine protected areas? with given SQL schema CREATE TABLE Expeditions ( id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), start_date DATE, end_date DATE); CREATE TABLE Protected_Areas ( id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), size FLOAT, protection_level VARCHAR(50));","completion":"SELECT Expeditions.name FROM Expeditions  INNER JOIN Protected_Areas ON Expeditions.location = Protected_Areas.location WHERE Expeditions.start_date <= Protected_Areas.protection_level AND Expeditions.end_date >= Protected_Areas.protection_level;"}
{"prompt":"What is the average performance score for each game genre? with given SQL schema CREATE TABLE game_genre_performance (game_id INT, game_genre VARCHAR(255), performance_score INT); INSERT INTO game_genre_performance (game_id, game_genre, performance_score) VALUES (1, 'RPG', 85), (2, 'Strategy', 90), (3, 'RPG', 80);","completion":"SELECT game_genre, AVG(performance_score) as avg_score FROM game_genre_performance GROUP BY game_genre;"}
{"prompt":"What is the percentage of users who have reached level 10 in \"Cosmic Explorers\" for each continent? with given SQL schema CREATE TABLE PlayerProgress (PlayerID INT, GameName VARCHAR(20), Level INT, Completion BOOLEAN, PlayerContinent VARCHAR(30)); INSERT INTO PlayerProgress (PlayerID, GameName, Level, Completion, PlayerContinent) VALUES (1, 'Cosmic Explorers', 10, true, 'North America'), (2, 'Cosmic Explorers', 10, true, 'Europe'), (3, 'Cosmic Explorers', 10, false, 'North America'), (4, 'Cosmic Explorers', 10, true, 'South America'), (5, 'Cosmic Explorers', 10, false, 'Europe'), (6, 'Cosmic Explorers', 10, true, 'Asia'), (7, 'Cosmic Explorers', 10, false, 'Asia'), (8, 'Cosmic Explorers', 10, true, 'Africa');","completion":"SELECT PlayerContinent, COUNT(*) FILTER (WHERE Completion) * 100.0 \/ SUM(COUNT(*)) OVER (PARTITION BY PlayerContinent) AS pct_completion FROM PlayerProgress WHERE GameName = 'Cosmic Explorers' AND Level = 10 GROUP BY PlayerContinent;"}
{"prompt":"List all the unique soil types and corresponding satellite image acquisition dates for 'Field2'? with given SQL schema CREATE TABLE Field2 (soil_type VARCHAR(50), image_date DATETIME); INSERT INTO Field2 (soil_type, image_date) VALUES ('Loamy', '2021-07-05 14:30:00'), ('Sandy', '2021-07-06 09:15:00');","completion":"SELECT DISTINCT soil_type, image_date FROM Field2;"}
{"prompt":"What percentage of renewable energy projects in 2020 were completed by companies based in India? with given SQL schema CREATE TABLE projects_company_location (project_id INT, completion_year INT, company_location VARCHAR(50)); INSERT INTO projects_company_location (project_id, completion_year, company_location) VALUES (1, 2020, 'India'), (2, 2019, 'Australia'), (3, 2020, 'US'), (4, 2018, 'India'), (5, 2020, 'Germany'), (6, 2017, 'Brazil');","completion":"SELECT (COUNT(*) FILTER (WHERE company_location = 'India' AND completion_year = 2020)) * 100.0 \/ COUNT(*) FROM projects_company_location;"}
{"prompt":"What are the total sales for each product category in descending order? with given SQL schema CREATE TABLE sales(product_id INT, quarter INT, sales INT); INSERT INTO sales(product_id, quarter, sales) VALUES (1, 1, 100), (1, 2, 120), (2, 1, 75), (2, 2, 90); CREATE TABLE products(product_id INT, category TEXT);","completion":"SELECT category, SUM(sales) AS total_sales FROM sales JOIN products ON sales.product_id = products.product_id GROUP BY category ORDER BY total_sales DESC;"}
{"prompt":"What is the average price of vegan products in the USA? with given SQL schema CREATE TABLE vendors (vendor_id INT, vendor_name TEXT, country TEXT);CREATE TABLE products (product_id INT, product_name TEXT, price DECIMAL, vegan BOOLEAN, vendor_id INT); INSERT INTO vendors (vendor_id, vendor_name, country) VALUES (1, 'VendorA', 'USA'), (2, 'VendorB', 'Canada'); INSERT INTO products (product_id, product_name, price, vegan, vendor_id) VALUES (1, 'ProductA', 25.99, true, 1), (2, 'ProductB', 18.49, false, 1), (3, 'ProductC', 22.99, true, 2);","completion":"SELECT AVG(price) FROM products JOIN vendors ON products.vendor_id = vendors.vendor_id WHERE vegan = true AND country = 'USA';"}
{"prompt":"How many countries have launched a spacecraft? with given SQL schema CREATE TABLE Country_Spacecraft (Country VARCHAR(50), Spacecraft_Name VARCHAR(100)); INSERT INTO Country_Spacecraft (Country, Spacecraft_Name) VALUES ('USA', 'Crew Dragon'), ('Russia', 'Soyuz');","completion":"SELECT COUNT(DISTINCT Country) FROM Country_Spacecraft;"}
{"prompt":"Find the total number of medical issues reported by female astronauts with given SQL schema CREATE TABLE Medical_Records(astronaut_id INT, year INT, medical_issues INT); CREATE TABLE Astronauts(astronaut_id INT, astronaut_name VARCHAR(30), gender VARCHAR(6)); INSERT INTO Medical_Records(astronaut_id, year, medical_issues) VALUES (1, 2016, 2), (1, 2017, 0), (1, 2018, 3), (2, 2016, 1), (2, 2017, 1), (2, 2018, 2), (3, 2016, 0), (3, 2017, 0), (3, 2018, 1); INSERT INTO Astronauts(astronaut_id, astronaut_name, gender) VALUES (1, 'Neil Armstrong', 'male'), (2, 'Buzz Aldrin', 'male'), (3, 'Mary Jackson', 'female');","completion":"SELECT SUM(Medical_Records.medical_issues) FROM Medical_Records INNER JOIN Astronauts ON Medical_Records.astronaut_id = Astronauts.astronaut_id WHERE Astronauts.gender = 'female';"}
{"prompt":"Update the 'battery_range' to 300 for 'ElectricCar' with 'vehicle_id' 1 in the 'Vehicles' table with given SQL schema CREATE TABLE Vehicles (vehicle_id INT, vehicle_type VARCHAR(20), battery_range INT); INSERT INTO Vehicles (vehicle_id, vehicle_type, battery_range) VALUES (1, 'ElectricCar', 200), (2, 'HybridTruck', 500), (3, 'ElectricTruck', 150);","completion":"UPDATE Vehicles SET battery_range = 300 WHERE vehicle_id = 1 AND vehicle_type = 'ElectricCar';"}
{"prompt":"What is the number of electric trams in service in Istanbul in 2021? with given SQL schema CREATE TABLE electric_trams (tram_id INT, service_date DATE, in_service INT); INSERT INTO electric_trams (tram_id, service_date, in_service) VALUES (1, '2021-01-01', 1), (2, '2021-01-02', 1), (3, '2021-01-03', 0);","completion":"SELECT COUNT(*) FROM electric_trams WHERE in_service = 1 AND service_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"What is the total number of trips taken on public transportation in Tokyo and Seoul? with given SQL schema CREATE TABLE public_transportation (trip_id INT, city VARCHAR(20), trips INT); INSERT INTO public_transportation (trip_id, city, trips) VALUES (1, 'Tokyo', 500000), (2, 'Tokyo', 600000), (3, 'Seoul', 400000), (4, 'Seoul', 300000);","completion":"SELECT city, SUM(trips) FROM public_transportation GROUP BY city;"}
{"prompt":"What is the percentage of workplaces with successful collective bargaining in the manufacturing sector? with given SQL schema CREATE TABLE workplaces (id INT, name TEXT, location TEXT, sector TEXT, total_employees INT, union_members INT, successful_cb BOOLEAN, cb_year INT);","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM workplaces WHERE sector = 'manufacturing')) AS percentage FROM workplaces WHERE sector = 'manufacturing' AND successful_cb = TRUE;"}
{"prompt":"What is the average speed of vehicles in 'Auto Show' table grouped by vehicle type? with given SQL schema CREATE TABLE Auto_Show (show_id INT, vehicle_type VARCHAR(20), avg_speed FLOAT);","completion":"SELECT vehicle_type, AVG(avg_speed) FROM Auto_Show GROUP BY vehicle_type;"}
{"prompt":"Delete all records related to vessels that have not complied with emission regulations in the Port of Los Angeles in 2021. with given SQL schema CREATE TABLE vessels (id INT, name TEXT, type TEXT, emission_compliance BOOLEAN); INSERT INTO vessels (id, name, type, emission_compliance) VALUES (1, 'Vessel C', 'Cargo', false); INSERT INTO vessels (id, name, type, emission_compliance) VALUES (2, 'Vessel D', 'Tanker', true); CREATE TABLE port_visits (id INT, vessel_id INT, port_name TEXT, visit_date DATE); INSERT INTO port_visits (id, vessel_id, port_name, visit_date) VALUES (1, 1, 'Los Angeles', '2021-03-15'); INSERT INTO port_visits (id, vessel_id, port_name, visit_date) VALUES (2, 2, 'Los Angeles', '2021-07-22');","completion":"DELETE FROM vessels WHERE id NOT IN (SELECT vessel_id FROM port_visits WHERE port_name = 'Los Angeles' AND visit_date BETWEEN '2021-01-01' AND '2021-12-31' AND id IN (SELECT id FROM vessels WHERE emission_compliance = true));"}
{"prompt":"Show vessels that have transported only one type of cargo. with given SQL schema CREATE TABLE Vessel_Cargo (Vessel_ID INT, Cargo_Type VARCHAR(255), Region VARCHAR(255)); INSERT INTO Vessel_Cargo (Vessel_ID, Cargo_Type, Region) VALUES (1, 'Grain', 'Pacific'), (2, 'Containers', 'Atlantic'), (3, 'Oil', 'Pacific'), (4, 'Vehicles', 'Atlantic'), (5, 'Coal', 'Indian'), (6, 'Grain', 'Pacific'), (7, 'Oil', 'Arctic');","completion":"SELECT Vessel_ID FROM (SELECT Vessel_ID, COUNT(DISTINCT Cargo_Type) AS num_cargo_types FROM Vessel_Cargo GROUP BY Vessel_ID) WHERE num_cargo_types = 1;"}
{"prompt":"What is the average speed of all vessels that have a maximum speed greater than 25 knots? with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), max_speed DECIMAL(5,2)); INSERT INTO vessels (vessel_id, vessel_name, max_speed) VALUES (1, 'Ocean Wave', 30.5), (2, 'Marine Star', 24.3), (3, 'River Queen', 15.6);","completion":"SELECT AVG(max_speed) FROM vessels WHERE max_speed > 25;"}
{"prompt":"Find the maximum age of visitors who attended exhibitions in Tokyo? with given SQL schema CREATE TABLE Exhibitions (exhibition_id INT, city VARCHAR(20)); INSERT INTO Exhibitions (exhibition_id, city) VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Chicago'), (4, 'Paris'), (5, 'Tokyo'); CREATE TABLE Visitors (visitor_id INT, exhibition_id INT, age INT); INSERT INTO Visitors (visitor_id, exhibition_id, age) VALUES (1, 1, 30), (2, 1, 35), (3, 2, 25), (4, 2, 28), (5, 3, 40), (6, 3, 45), (8, 5, 50), (9, 5, 55);","completion":"SELECT MAX(age) FROM Visitors v JOIN Exhibitions e ON v.exhibition_id = e.exhibition_id WHERE e.city = 'Tokyo';"}
{"prompt":"How many visitors attended the Art of the Renaissance exhibition in the first week of January 2022? with given SQL schema CREATE TABLE exhibitions (exhibition_id INT, name VARCHAR(255)); INSERT INTO exhibitions (exhibition_id, name) VALUES (1, 'Art of the Renaissance'); CREATE TABLE visitors (visitor_id INT, exhibition_id INT, visit_date DATE); INSERT INTO visitors (visitor_id, exhibition_id, visit_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-01-02'), (3, 1, '2022-01-03'), (4, 1, '2022-01-05');","completion":"SELECT COUNT(visitor_id) as num_visitors FROM visitors WHERE exhibition_id = 1 AND visit_date >= '2022-01-01' AND visit_date <= '2022-01-07';"}
{"prompt":"What was the total number of community events attended by visitors in each age group? with given SQL schema CREATE TABLE visitor_attendance (visitor_id INT, age_group VARCHAR(10), event_name VARCHAR(50)); INSERT INTO visitor_attendance (visitor_id, age_group, event_name) VALUES (1, 'Adult', 'Art Festival'), (2, 'Child', 'Art Exhibition'), (3, 'Senior', 'History Day');","completion":"SELECT age_group, COUNT(*) as num_events FROM visitor_attendance GROUP BY age_group;"}
{"prompt":"Identify the water conservation initiatives in Texas. with given SQL schema CREATE TABLE water_conservation_initiatives(state VARCHAR(20), initiative VARCHAR(50)); INSERT INTO water_conservation_initiatives(state, initiative) VALUES ('Texas', 'Rainwater harvesting'), ('Texas', 'Greywater recycling'), ('Texas', 'Smart irrigation systems');","completion":"SELECT initiative FROM water_conservation_initiatives WHERE state = 'Texas';"}
{"prompt":"What is the average water consumption per residential user in the last month? with given SQL schema CREATE TABLE user_water_consumption (user_id INT, user_category VARCHAR(20), consumption FLOAT, consumption_date DATE); INSERT INTO user_water_consumption (user_id, user_category, consumption, consumption_date) VALUES (1, 'residential', 150, '2022-03-01'), (2, 'commercial', 250, '2022-03-01'), (3, 'residential', 160, '2022-03-02'), (4, 'commercial', 240, '2022-03-02');","completion":"SELECT AVG(consumption) FROM user_water_consumption WHERE user_category = 'residential' AND consumption_date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"What is the average safety score for creative AI applications by region? with given SQL schema CREATE TABLE CreativeAI (app_name TEXT, region TEXT, safety_score FLOAT); INSERT INTO CreativeAI (app_name, region, safety_score) VALUES ('App1', 'NA', 85.0), ('App2', 'NA', 92.0), ('App3', 'EU', 88.0), ('App4', 'ASIA', 90.0);","completion":"SELECT region, AVG(safety_score) avg_safety_score FROM CreativeAI GROUP BY region;"}
{"prompt":"What is the average cost of rural infrastructure projects in the province of Balochistan, Pakistan, by project type and year? with given SQL schema CREATE TABLE projects_pakistan_balochistan (project_id INT, province TEXT, project_type TEXT, year INT, cost FLOAT); INSERT INTO projects_pakistan_balochistan (project_id, province, project_type, year, cost) VALUES (1, 'Balochistan', 'Roads', 2018, 600000), (2, 'Balochistan', 'Bridges', 2019, 800000), (3, 'Balochistan', 'Irrigation', 2020, 700000);","completion":"SELECT project_type, year, AVG(cost) as avg_cost FROM projects_pakistan_balochistan WHERE province = 'Balochistan' GROUP BY project_type, year;"}
{"prompt":"What is the number of women-led agricultural businesses in the 'business_data' table? with given SQL schema CREATE TABLE business_data (business_id INT, business_name VARCHAR(50), gender VARCHAR(10)); INSERT INTO business_data (business_id, business_name, gender) VALUES (1, 'Green Acres', 'female'), (2, 'Brown Farms', 'male'), (3, 'Eco Harvest', 'non-binary');","completion":"SELECT COUNT(business_id) FROM business_data WHERE gender = 'female';"}
{"prompt":"What is the total number of satellites launched by SpaceX and ROSCOSMOS? with given SQL schema CREATE TABLE spacex_satellites (satellite_id INT, name VARCHAR(255), launch_date DATE);CREATE TABLE roscosmos_satellites (satellite_id INT, name VARCHAR(255), launch_date DATE);","completion":"SELECT COUNT(*) FROM spacex_satellites WHERE name = 'SpaceX';SELECT COUNT(*) FROM roscosmos_satellites WHERE name = 'ROSCOSMOS';"}
{"prompt":"What is the total number of animals that have been released into 'protected' habitats, and the average weight of those animals? with given SQL schema CREATE TABLE habitats (habitat_id INT, habitat_name VARCHAR(50), habitat_status VARCHAR(50)); INSERT INTO habitats (habitat_id, habitat_name, habitat_status) VALUES (1, 'Habitat A', 'protected'), (2, 'Habitat B', 'unprotected'); CREATE TABLE animal_habitats (animal_id INT, habitat_id INT, animal_weight FLOAT); INSERT INTO animal_habitats (animal_id, habitat_id, animal_weight) VALUES (101, 1, 25.5), (102, 2, 15.2); CREATE TABLE animals (animal_id INT, animal_name VARCHAR(50)); INSERT INTO animals (animal_id, animal_name) VALUES (101, 'Dog'), (102, 'Cat');","completion":"SELECT COUNT(*), AVG(animal_habitats.animal_weight) FROM animal_habitats INNER JOIN animals ON animal_habitats.animal_id = animals.animal_id INNER JOIN habitats ON animal_habitats.habitat_id = habitats.habitat_id WHERE habitats.habitat_status = 'protected';"}
{"prompt":"Insert a new record for a salmon farm in the Arctic Ocean with an ID of 5 and a water temperature of 5.2 degrees Celsius in February. with given SQL schema CREATE TABLE ArcticSalmonFarms (ID INT, Name TEXT, Location TEXT, WaterTemp DECIMAL(5,2));","completion":"INSERT INTO ArcticSalmonFarms (ID, Name, Location, WaterTemp) VALUES (5, 'Farm H', 'Arctic Ocean', 5.2);"}
{"prompt":"What is the maximum dissolved oxygen level for Salmon farms in the Pacific Ocean? with given SQL schema CREATE TABLE Farm (FarmID int, FarmName varchar(50), Location varchar(50), WaterTemperature numeric, DissolvedOxygenLevel numeric); INSERT INTO Farm (FarmID, FarmName, Location, WaterTemperature, DissolvedOxygenLevel) VALUES (1, 'Farm A', 'Pacific Ocean', 15, 8.5); INSERT INTO Farm (FarmID, FarmName, Location, WaterTemperature, DissolvedOxygenLevel) VALUES (2, 'Farm B', 'Atlantic Ocean', 18, 7.8); INSERT INTO Farm (FarmID, FarmName, Location, WaterTemperature, DissolvedOxygenLevel) VALUES (3, 'Farm C', 'Pacific Ocean', 14, 8.3); INSERT INTO Farm (FarmID, FarmName, Location, WaterTemperature, DissolvedOxygenLevel) VALUES (4, 'Farm D', 'Indian Ocean', 20, 6.9);","completion":"SELECT MAX(DissolvedOxygenLevel) FROM Farm WHERE Location = 'Pacific Ocean' AND FishSpecies = 'Salmon';"}
{"prompt":"Insert a new event 'Painting Class' in the 'Art' category with funding of 8000 with given SQL schema CREATE TABLE Events (EventID INT, Category VARCHAR(50), FundingReceived DECIMAL(10,2));","completion":"INSERT INTO Events (EventID, Category, FundingReceived) VALUES (3, 'Art', 8000);"}
{"prompt":"Hourly revenue for a specific movie? with given SQL schema CREATE TABLE Movie_Revenue (id INT, movie_title VARCHAR(100), revenue_time TIME, revenue DECIMAL(10,2));","completion":"SELECT revenue_time, SUM(revenue) FROM Movie_Revenue WHERE movie_title = 'Spider-Man: No Way Home' GROUP BY revenue_time;"}
{"prompt":"What is the total revenue generated by music albums released in the year 2019? with given SQL schema CREATE TABLE albums (id INT, title TEXT, release_year INT, revenue INT); INSERT INTO albums (id, title, release_year, revenue) VALUES (1, 'Album 1', 2018, 5000000), (2, 'Album 2', 2019, 7000000), (3, 'Album 3', 2017, 6000000), (4, 'Album 4', 2019, 8000000);","completion":"SELECT SUM(albums.revenue) FROM albums WHERE albums.release_year = 2019;"}
{"prompt":"What is the average square footage of green-certified buildings in the Northeast, ranked by the highest average? with given SQL schema CREATE TABLE Buildings (BuildingID int, Region varchar(20), GreenCertified bit, SquareFootage decimal(10,2)); INSERT INTO Buildings (BuildingID, Region, GreenCertified, SquareFootage) VALUES (1, 'Northeast', 1, 50000.00), (2, 'Midwest', 0, 75000.00), (3, 'Northeast', 1, 60000.00);","completion":"SELECT AVG(SquareFootage) as Avg_SqFt, Region FROM Buildings WHERE Region = 'Northeast' AND GreenCertified = 1 GROUP BY Region ORDER BY Avg_SqFt DESC;"}
{"prompt":"List all clients with a first name starting with 'J' with given SQL schema CREATE TABLE clients (client_id INT, first_name VARCHAR(50), last_name VARCHAR(50)); INSERT INTO clients (client_id, first_name, last_name) VALUES (1, 'John', 'Doe'), (2, 'Jane', 'Smith');","completion":"SELECT * FROM clients WHERE first_name LIKE 'J%';"}
{"prompt":"What is the total billing amount for cases handled by attorneys in the 'New York' office? with given SQL schema CREATE TABLE attorneys (attorney_id INT, name TEXT, office TEXT); INSERT INTO attorneys (attorney_id, name, office) VALUES (1, 'Smith', 'New York'), (2, 'Johnson', 'Los Angeles'), (3, 'Williams', 'New York'); CREATE TABLE cases (case_id INT, attorney_id INT, billing_amount INT); INSERT INTO cases (case_id, attorney_id, billing_amount) VALUES (1, 1, 5000), (2, 2, 6000), (3, 3, 3000), (4, 3, 4000);","completion":"SELECT SUM(billing_amount) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.office = 'New York';"}
{"prompt":"How many climate finance projects were completed in '2020' from the 'finance_projects' table? with given SQL schema CREATE TABLE finance_projects (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), description TEXT, start_date DATE, end_date DATE, budget FLOAT); INSERT INTO finance_projects (id, name, location, description, start_date, end_date, budget) VALUES (1, 'Green Bonds Issuance', 'London', 'Financing green infrastructure projects', '2017-01-01', '2019-12-31', 5000000), (2, 'Climate Fundraising Event', 'Paris', 'Fundraising event for climate change', '2020-01-01', '2020-12-31', 800000);","completion":"SELECT COUNT(*) FROM finance_projects WHERE end_date >= '2020-01-01' AND start_date <= '2020-12-31';"}
{"prompt":"Rank drugs based on the total number of clinical trials since 2010. with given SQL schema CREATE TABLE clinical_trials (drug_name TEXT, year INTEGER, trial_count INTEGER);","completion":"SELECT drug_name, SUM(trial_count) OVER (PARTITION BY drug_name ORDER BY SUM(trial_count) DESC) AS total_trials FROM clinical_trials WHERE year >= 2010 GROUP BY 1 ORDER BY 2;"}
{"prompt":"What are the total sales figures for 'Humira' in all regions, excluding Japan? with given SQL schema CREATE TABLE drug_sales (drug_name TEXT, region TEXT, revenue FLOAT); INSERT INTO drug_sales (drug_name, region, revenue) VALUES ('Humira', 'US', 4000000), ('Humira', 'Japan', 1000000), ('Humira', 'EU', 3000000);","completion":"SELECT SUM(revenue) FROM drug_sales WHERE drug_name = 'Humira' AND region NOT IN ('Japan');"}
{"prompt":"How many startups were founded by women in each country in 2021? with given SQL schema CREATE TABLE startups(id INT, name TEXT, country TEXT, founder_gender TEXT, founding_year INT); INSERT INTO startups(id, name, country, founder_gender, founding_year) VALUES (1, 'StartupA', 'USA', 'Female', 2021), (2, 'StartupB', 'Canada', 'Male', 2020), (3, 'StartupC', 'USA', 'Female', 2021), (4, 'StartupD', 'Mexico', 'Female', 2019), (5, 'StartupE', 'Brazil', 'Male', 2020);","completion":"SELECT country, founder_gender, COUNT(*) as num_startups FROM startups WHERE founding_year = 2021 GROUP BY country, founder_gender;"}
{"prompt":"Add a new crop 'amaranth' to farm 'Nourishing Harvest' with yield 50 in 2023 with given SQL schema CREATE TABLE farms (id INT, name TEXT, location TEXT, size FLOAT); INSERT INTO farms (id, name, location, size) VALUES (1, 'Nourishing Harvest', 'Mexico', 120.0); CREATE TABLE crops (id INT, farm_id INT, crop TEXT, yield INT, year INT);","completion":"INSERT INTO crops (id, farm_id, crop, yield, year) VALUES (5, (SELECT id FROM farms WHERE name = 'Nourishing Harvest'), 'amaranth', 50, 2023);"}
{"prompt":"Which support programs were offered in a specific state in the past 6 months? with given SQL schema CREATE TABLE SupportPrograms (ProgramID INT, ProgramName VARCHAR(50), State VARCHAR(50)); INSERT INTO SupportPrograms (ProgramID, ProgramName, State) VALUES (1, 'Tutoring', 'New York'); INSERT INTO SupportPrograms (ProgramID, ProgramName, State) VALUES (2, 'Mentoring', 'California');","completion":"SELECT ProgramName FROM SupportPrograms WHERE State = 'New York' AND Date BETWEEN DATEADD(month, -6, GETDATE()) AND GETDATE();"}
{"prompt":"What is the average depth of all marine protected areas, grouped by region? with given SQL schema CREATE TABLE marine_protected_areas (id INT, name VARCHAR(255), depth FLOAT, area_size INT, region VARCHAR(255)); INSERT INTO marine_protected_areas (id, name, depth, area_size, region) VALUES (1, 'Galapagos Islands', 2000, 15000, 'South America'); INSERT INTO marine_protected_areas (id, name, depth, area_size, region) VALUES (2, 'Great Barrier Reef', 100, 344400, 'Australia'); INSERT INTO marine_protected_areas (id, name, depth, area_size, region) VALUES (3, 'Palau Protected Areas', 250, 193000, 'Micronesia');","completion":"SELECT region, AVG(depth) FROM marine_protected_areas GROUP BY region;"}
{"prompt":"What is the maximum sea surface temperature in the 'Indian' gyre? with given SQL schema CREATE TABLE gyres (name TEXT, max_temp REAL); INSERT INTO gyres (name, max_temp) VALUES ('North Atlantic', 21.5), ('South Atlantic', 20.3), ('Indian', 28.2), ('North Pacific', 16.1), ('South Pacific', 19.9);","completion":"SELECT max_temp FROM gyres WHERE name = 'Indian';"}
{"prompt":"Identify the number of wildlife species present in each forest type. with given SQL schema CREATE TABLE forestry.wildlife (species VARCHAR(50), forest_type VARCHAR(50)); INSERT INTO forestry.wildlife (species, forest_type) VALUES ('Bear', 'Temperate Rainforest'), ('Deer', 'Temperate Deciduous Forest'), ('Moose', 'Boreal Forest');","completion":"SELECT forest_type, COUNT(species) FROM forestry.wildlife GROUP BY forest_type;"}
{"prompt":"List all wildlife species observed in subtropical forests since 2016, along with the number of times each species has been observed. with given SQL schema CREATE TABLE subtropical_wildlife (id INT, species VARCHAR(50), year INT, region VARCHAR(20));","completion":"SELECT species, region, COUNT(*) as total_observations FROM subtropical_wildlife WHERE region = 'Subtropical' AND year >= 2016 GROUP BY species, region;"}
{"prompt":"Which cruelty-free certified products use ingredients sourced from Canada? with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT, is_cruelty_free BOOLEAN); CREATE TABLE ingredient_sources (ingredient_id INT, product_id INT, source_country TEXT);","completion":"SELECT products.product_name FROM products INNER JOIN ingredient_sources ON products.product_id = ingredient_sources.product_id WHERE products.is_cruelty_free = TRUE AND ingredient_sources.source_country = 'Canada';"}
{"prompt":"Which ingredients were sourced from Brazil and used in products launched after 2019-01-01? with given SQL schema CREATE TABLE ingredients (ingredient_id INT, ingredient_name TEXT, sourcing_country TEXT); CREATE TABLE products (product_id INT, product_name TEXT, launch_date DATE); CREATE TABLE product_ingredients (product_id INT, ingredient_id INT);","completion":"SELECT ingredient_name FROM ingredients JOIN product_ingredients ON ingredients.ingredient_id = product_ingredients.ingredient_id JOIN products ON product_ingredients.product_id = products.product_id WHERE sourcing_country = 'Brazil' AND launch_date > '2019-01-01';"}
{"prompt":"Update 'Sonia Gupta''s favorite product to 'Vegan Mascara' in the 'India' table? with given SQL schema CREATE TABLE consumer_preferences (consumer_id INT, country VARCHAR(50), favorite_product VARCHAR(100)); INSERT INTO consumer_preferences (consumer_id, country, favorite_product) VALUES (1, 'United States', 'Nourishing Face Cream'), (2, 'India', 'Hydrating Face Mask');","completion":"UPDATE consumer_preferences SET favorite_product = 'Vegan Mascara' WHERE consumer_id = 2 AND country = 'India';"}
{"prompt":"What is the percentage of vegan haircare products in the overall haircare product sales? with given SQL schema CREATE TABLE haircare_sales (product_vegan BOOLEAN, sales_quantity INT); INSERT INTO haircare_sales (product_vegan, sales_quantity) VALUES (TRUE, 300), (FALSE, 700);","completion":"SELECT (SUM(CASE WHEN product_vegan = TRUE THEN sales_quantity ELSE 0 END) \/ SUM(sales_quantity)) * 100 AS vegan_percentage FROM haircare_sales;"}
{"prompt":"What is the total number of police officers and firefighters in the city of New York? with given SQL schema CREATE TABLE nyc_police_officers (id INT, officer_name VARCHAR(255), officer_type VARCHAR(255)); INSERT INTO nyc_police_officers (id, officer_name, officer_type) VALUES (1, 'James Brown', 'Detective'); CREATE TABLE nyc_firefighters (id INT, firefighter_name VARCHAR(255), firefighter_type VARCHAR(255)); INSERT INTO nyc_firefighters (id, firefighter_name, firefighter_type) VALUES (1, 'Sarah Johnson', 'Fire Captain');","completion":"SELECT COUNT(*) FROM nyc_police_officers UNION ALL SELECT COUNT(*) FROM nyc_firefighters;"}
{"prompt":"List countries involved in peacekeeping operations? with given SQL schema CREATE TABLE IF NOT EXISTS peacekeeping_operations (id INT PRIMARY KEY, country VARCHAR(255));","completion":"SELECT DISTINCT country FROM peacekeeping_operations;"}
{"prompt":"How many customers have a balance greater than $1000 in their investment accounts? with given SQL schema CREATE TABLE investment_accounts (account_id INT, customer_id INT, balance DECIMAL(10, 2)); INSERT INTO investment_accounts (account_id, customer_id, balance) VALUES (1, 1, 1500.00), (2, 1, 500.00), (3, 2, 800.00);","completion":"SELECT COUNT(DISTINCT customers.customer_id) FROM customers JOIN investment_accounts ON customers.customer_id = investment_accounts.customer_id WHERE investment_accounts.balance > 1000;"}
{"prompt":"Update the risk level to 'high' for customers living in the North region with an age greater than 50. with given SQL schema CREATE TABLE Customers (CustomerID int, Name varchar(50), Age int, PostalCode varchar(10), Region varchar(50), RiskLevel varchar(10)); INSERT INTO Customers (CustomerID, Name, Age, PostalCode, Region, RiskLevel) VALUES (1, 'Jane Smith', 55, 'D4E5F6', 'North', 'medium');","completion":"UPDATE Customers SET RiskLevel = 'high' WHERE Age > 50 AND Region = 'North';"}
{"prompt":"Which ports have handled cargo with a weight above a certain threshold? with given SQL schema CREATE TABLE ports ( id INT, name VARCHAR(255), location VARCHAR(255), operated_by VARCHAR(255)); CREATE TABLE cargo ( id INT, port_id INT, weight INT); INSERT INTO ports (id, name, location, operated_by) VALUES (1, 'Port A', 'New York', 'Company A'), (2, 'Port B', 'Los Angeles', 'Company B'); INSERT INTO cargo (id, port_id, weight) VALUES (1, 1, 5000), (2, 1, 7000), (3, 2, 3000);","completion":"SELECT ports.name FROM ports INNER JOIN cargo ON ports.id = cargo.port_id WHERE cargo.weight > 5000;"}
{"prompt":"What is the maximum waste generated by a factory in the 'electronics' department? with given SQL schema CREATE TABLE factories (factory_id INT, department VARCHAR(20), waste_generated_kg INT); INSERT INTO factories VALUES (1, 'textiles', 500), (2, 'metalwork', 300), (3, 'textiles', 700), (4, 'electronics', 400), (5, 'textiles', 600), (6, 'electronics', 800), (7, 'textiles', 900), (8, 'metalwork', 1000), (9, 'electronics', 1100), (10, 'metalwork', 1200);","completion":"SELECT department, MAX(waste_generated_kg) FROM factories WHERE department = 'electronics' GROUP BY department;"}
{"prompt":"What is the total number of employees working in factories that have a production output above 5000 units and are located in the United States? with given SQL schema CREATE TABLE factories (factory_id INT, name VARCHAR(100), location VARCHAR(100), production_output INT); CREATE TABLE employees (employee_id INT, factory_id INT, name VARCHAR(100), position VARCHAR(100)); INSERT INTO factories (factory_id, name, location, production_output) VALUES (1, 'ABC Factory', 'New York', 5500), (2, 'XYZ Factory', 'California', 4000), (3, 'LMN Factory', 'Texas', 6000); INSERT INTO employees (employee_id, factory_id, name, position) VALUES (1, 1, 'John Doe', 'Engineer'), (2, 1, 'Jane Smith', 'Manager'), (3, 2, 'Mike Johnson', 'Operator'), (4, 3, 'Sara Brown', 'Engineer');","completion":"SELECT COUNT(*) FROM factories INNER JOIN employees ON factories.factory_id = employees.factory_id WHERE factories.production_output > 5000 AND factories.location LIKE '%United States%';"}
{"prompt":"What is the average number of rural health clinics per state in Africa, and how many states have more than 50 rural health clinics? with given SQL schema CREATE TABLE rural_health_clinics (clinic_id INT, clinic_name VARCHAR(100), state VARCHAR(50), num_staff INT); INSERT INTO rural_health_clinics (clinic_id, clinic_name, state, num_staff) VALUES (1, 'Clinic A', 'Nigeria', 40), (2, 'Clinic B', 'Nigeria', 50), (3, 'Clinic C', 'Kenya', 35), (4, 'Clinic D', 'Kenya', 60);","completion":"SELECT AVG(num_staff) AS avg_rural_clinics_per_state, COUNT(*) FILTER (WHERE num_staff > 50) AS states_with_more_than_50_clinics FROM ( SELECT state, COUNT(*) AS num_staff FROM rural_health_clinics GROUP BY state ) subquery;"}
{"prompt":"What was the total amount of social impact investments made by 'Green Capital' in Q1 2021? with given SQL schema CREATE TABLE investments (id INT, investor VARCHAR(255), amount FLOAT, date DATE); INSERT INTO investments (id, investor, amount, date) VALUES (1, 'Green Capital', 50000, '2021-01-15'); INSERT INTO investments (id, investor, amount, date) VALUES (2, 'Green Capital', 75000, '2021-01-20');","completion":"SELECT SUM(amount) FROM investments WHERE investor = 'Green Capital' AND date BETWEEN '2021-01-01' AND '2021-03-31';"}
{"prompt":"What cybersecurity strategies were implemented in 2010? with given SQL schema CREATE TABLE Cybersecurity_Strategies (Year INT, Strategy VARCHAR(255)); INSERT INTO Cybersecurity_Strategies (Year, Strategy) VALUES (2005, 'Cybersecurity Initiative'), (2010, 'Comprehensive National Cybersecurity Initiative'), (2015, 'Cybersecurity National Action Plan');","completion":"SELECT Strategy FROM Cybersecurity_Strategies WHERE Year = 2010;"}
{"prompt":"Update the genre of the song 'Vande Mataram' to 'Indian Classical Fusion' with given SQL schema CREATE TABLE Artists (ArtistID INT PRIMARY KEY, ArtistName VARCHAR(100)); CREATE TABLE Songs (SongID INT PRIMARY KEY, SongName VARCHAR(100), ArtistID INT, Genre VARCHAR(50), ReleasedDate DATE); INSERT INTO Artists (ArtistID, ArtistName) VALUES (101, 'Selena Gomez'), (102, 'Taylor Swift'), (103, 'Kala Bhairava'), (104, 'Billie Eilish'), (105, 'Maria Fernandes'); INSERT INTO Songs (SongID, SongName, ArtistID, Genre, ReleasedDate) VALUES (1, 'Bad Liar', 101, 'Pop', '2017-05-19'), (2, 'Shake it Off', 102, 'Pop', '2014-08-18'), (3, 'Vande Mataram', 103, 'Indian Classical', '2018-12-15'), (4, 'Bad Guy', 104, 'Pop', '2019-03-29'), (5, 'Tuyo', 105, 'Latin Pop', '2021-05-21');","completion":"UPDATE Songs SET Genre = 'Indian Classical Fusion' WHERE SongName = 'Vande Mataram';"}
{"prompt":"What is the name and release year of the most recent album in the rock genre? with given SQL schema CREATE TABLE albums (album_id INT, title VARCHAR(255), release_year INT, genre VARCHAR(10));","completion":"SELECT title, release_year FROM albums WHERE genre = 'rock' ORDER BY release_year DESC LIMIT 1;"}
{"prompt":"Which programs have received donations from donors residing in multiple countries? with given SQL schema CREATE TABLE donations (id INT, amount REAL, donor_id INT, country TEXT); INSERT INTO donations (id, amount, donor_id, country) VALUES (1, 50.0, 1001, 'Canada'), (2, 100.0, 1002, 'USA'), (3, 75.0, 1003, 'Mexico'), (4, 25.0, 1002, 'Canada');","completion":"SELECT program_id, COUNT(DISTINCT country) AS num_countries FROM donations GROUP BY program_id HAVING num_countries > 1;"}
{"prompt":"What is the number of students in the mental health program who have had exactly 2 absences in the past month? with given SQL schema CREATE TABLE students (id INT, name VARCHAR(50), program VARCHAR(50), absences INT, last_visit DATE);","completion":"SELECT COUNT(*) FROM students WHERE program = 'mental health' AND absences = 2 AND last_visit >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"What is the minimum salary in the HR department? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), Salary FLOAT); INSERT INTO Employees (EmployeeID, Department, Salary) VALUES (1, 'IT', 70000), (2, 'HR', 65000), (3, 'IT', 75000), (4, 'Finance', 72000);","completion":"SELECT MIN(Salary) FROM Employees WHERE Department = 'HR';"}
{"prompt":"Show total production for each company in the North Sea, including companies that have no production with given SQL schema CREATE TABLE Company (CompanyID int, CompanyName varchar(50), Location varchar(50)); CREATE TABLE Production (ProductionID int, CompanyID int, ProductionQuantity int);","completion":"SELECT Company.CompanyName, SUM(Production.ProductionQuantity) as Total_Production  FROM Company LEFT JOIN Production ON Company.CompanyID = Production.CompanyID WHERE Company.Location = 'North Sea' GROUP BY Company.CompanyName;"}
{"prompt":"What is the minimum capacity for schools in each location ('community_development')? with given SQL schema CREATE TABLE community_development.schools (id INT, name VARCHAR(50), capacity INT, location VARCHAR(50));","completion":"SELECT location, MIN(capacity) FROM community_development.schools GROUP BY location;"}
{"prompt":"List all unique ethical AI principles. with given SQL schema CREATE TABLE ethical_ai_principles (id INT, principle VARCHAR(100)); INSERT INTO ethical_ai_principles (id, principle) VALUES (1, 'Fairness'), (2, 'Transparency'), (3, 'Accountability'), (4, 'Privacy'), (5, 'Non-Discrimination');","completion":"SELECT DISTINCT principle FROM ethical_ai_principles;"}
{"prompt":"What is the average budget allocated for AI projects in Latin America? with given SQL schema CREATE TABLE ai_projects (project_id INT, region VARCHAR(20), budget DECIMAL(10,2)); INSERT INTO ai_projects (project_id, region, budget) VALUES (1, 'Latin America', 50000.00), (2, 'Europe', 100000.00), (3, 'North America', 200000.00);","completion":"SELECT AVG(budget) FROM ai_projects WHERE region = 'Latin America';"}
{"prompt":"Which country had the most ad impressions on our social media platform in July 2022? with given SQL schema CREATE TABLE ads (id INT, country VARCHAR(50), impressions INT); INSERT INTO ads (id, country, impressions) VALUES (1, 'USA', 5000), (2, 'Canada', 3000), (3, 'Mexico', 4000);","completion":"SELECT country, SUM(impressions) as total_impressions FROM ads WHERE ads.date BETWEEN '2022-07-01' AND '2022-07-31' GROUP BY country ORDER BY total_impressions DESC LIMIT 1;"}
{"prompt":"Find the top 5 countries with the lowest financial capability scores in Europe. with given SQL schema CREATE TABLE financial_capability (id INT, country VARCHAR(255), score INT);","completion":"SELECT country, score FROM (SELECT country, score, ROW_NUMBER() OVER (ORDER BY score ASC) rn FROM financial_capability WHERE region = 'Europe') t WHERE rn <= 5;"}
{"prompt":"List all Shariah-compliant financial products offered by the bank. with given SQL schema CREATE TABLE financial_products (id INT, name TEXT, type TEXT); CREATE VIEW shariah_compliant_products AS SELECT * FROM financial_products WHERE type = 'Shariah-compliant';","completion":"SELECT name FROM shariah_compliant_products;"}
{"prompt":"What is the maximum financial wellbeing score for customers who have a socially responsible loan? with given SQL schema CREATE TABLE socially_responsible_loans (loan_id INT, customer_id INT, financial_wellbeing_score INT); CREATE TABLE socially_responsible_lending (lending_id INT, loan_id INT);","completion":"SELECT MAX(srl.financial_wellbeing_score) FROM socially_responsible_loans srl JOIN socially_responsible_lending srlg ON srl.loan_id = srlg.loan_id;"}
{"prompt":"What are the names and capacities of all warehouses located in Canada? with given SQL schema CREATE TABLE Warehouses (warehouse_id INT, name TEXT, capacity INT, country TEXT); INSERT INTO Warehouses (warehouse_id, name, capacity, country) VALUES (1, 'Warehouse A', 5000, 'Canada'), (2, 'Warehouse B', 7000, 'USA');","completion":"SELECT name, capacity FROM Warehouses WHERE country = 'Canada';"}
{"prompt":"Virtual tourism revenue by quarter in 2022, for the Americas. with given SQL schema CREATE TABLE tourism_revenue (country VARCHAR(50), revenue FLOAT, quarter INT, year INT); INSERT INTO tourism_revenue (country, revenue, quarter, year) VALUES ('USA', 1200000, 1, 2022), ('Canada', 800000, 1, 2022), ('Mexico', 500000, 1, 2022), ('USA', 1500000, 2, 2022), ('Canada', 900000, 2, 2022), ('Mexico', 600000, 2, 2022);","completion":"SELECT quarter, SUM(revenue) as total_revenue FROM tourism_revenue WHERE country LIKE '%Americas%' AND year = 2022 GROUP BY quarter;"}
{"prompt":"List the number of virtual tours conducted per salesperson in the 'Sales' table. with given SQL schema CREATE TABLE Sales (salesperson_id INT, salesperson_name TEXT, virtual_tours INT); INSERT INTO Sales (salesperson_id, salesperson_name, virtual_tours) VALUES (1, 'John Doe', 15), (2, 'Jane Smith', 18);","completion":"SELECT salesperson_name, COUNT(virtual_tours) FROM Sales GROUP BY salesperson_name;"}
{"prompt":"What is the difference in the number of bridges between 'California' and 'Texas'? with given SQL schema CREATE TABLE Bridges (name TEXT, state TEXT); INSERT INTO Bridges (name, state) VALUES ('Golden Gate Bridge', 'California'); INSERT INTO Bridges (name, state) VALUES ('Houston Ship Channel Bridge', 'Texas');","completion":"SELECT COUNT(*) - (SELECT COUNT(*) FROM Bridges WHERE state = 'Texas') FROM Bridges WHERE state = 'California';"}
{"prompt":"Determine the percentage of sales from each ingredient category with given SQL schema CREATE TABLE Sales_Details (sale_id INT, ingredient_id INT, quantity INT); INSERT INTO Sales_Details (sale_id, ingredient_id, quantity) VALUES (1, 1, 2), (1, 2, 8), (2, 1, 3), (2, 2, 7); CREATE TABLE Ingredient_Categories (ingredient_id INT, ingredient_category VARCHAR(255)); INSERT INTO Ingredient_Categories (ingredient_id, ingredient_category) VALUES (1, 'Legumes'), (2, 'Poultry');","completion":"SELECT ingredient_category, SUM(quantity) AS total_quantity, SUM(quantity) * 100.0 \/ (SELECT SUM(quantity) FROM Sales_Details) AS percentage_of_sales FROM Sales_Details, Ingredient_Categories WHERE Sales_Details.ingredient_id = Ingredient_Categories.ingredient_id GROUP BY ingredient_category;"}
{"prompt":"List all geopolitical risk assessments with a rating greater than 7.0 from North America since 2020. with given SQL schema CREATE TABLE GeopoliticalRiskAssessments (id INT, assessment_name VARCHAR(100), region VARCHAR(50), rating FLOAT, assessment_date DATE); INSERT INTO GeopoliticalRiskAssessments (id, assessment_name, region, rating, assessment_date) VALUES (1, 'Assessment A', 'North America', 7.2, '2020-05-12'); INSERT INTO GeopoliticalRiskAssessments (id, assessment_name, region, rating, assessment_date) VALUES (2, 'Assessment B', 'North America', 8.1, '2021-03-03'); INSERT INTO GeopoliticalRiskAssessments (id, assessment_name, region, rating, assessment_date) VALUES (3, 'Assessment C', 'North America', 6.9, '2022-08-25');","completion":"SELECT * FROM GeopoliticalRiskAssessments WHERE region = 'North America' AND rating > 7.0 AND assessment_date >= '2020-01-01';"}
{"prompt":"How many workers are there in the mining industry in California? with given SQL schema CREATE TABLE Mines (MineID INT, Name TEXT, Location TEXT, TotalWorkers INT); INSERT INTO Mines (MineID, Name, Location, TotalWorkers) VALUES (1, 'Golden Mine', 'California', 250), (2, 'Silver Ridge', 'Nevada', 300);","completion":"SELECT SUM(TotalWorkers) FROM Mines WHERE Location = 'California';"}
{"prompt":"Find and delete duplicate records in the resource_depletion table with given SQL schema CREATE TABLE resource_depletion (id INT, resource VARCHAR(255), depletion_rate DECIMAL(10,2));","completion":"DELETE t1 FROM resource_depletion t1 INNER JOIN (SELECT id, resource, depletion_rate, COUNT(*) FROM resource_depletion GROUP BY resource, depletion_rate HAVING COUNT(*) > 1) t2 ON t1.resource = t2.resource AND t1.depletion_rate = t2.depletion_rate AND t1.id < t2.id;"}
{"prompt":"List all mines and their number of employees, grouped by country with given SQL schema CREATE TABLE mine (id INT, name TEXT, country TEXT); CREATE TABLE employee (id INT, mine_id INT, name TEXT); INSERT INTO mine VALUES (1, 'Mine A', 'Country A'); INSERT INTO mine VALUES (2, 'Mine B', 'Country B'); INSERT INTO employee VALUES (1, 1, 'John'); INSERT INTO employee VALUES (2, 1, 'Maria'); INSERT INTO employee VALUES (3, 2, 'David');","completion":"SELECT mine.country, COUNT(employee.id) AS employee_count FROM mine INNER JOIN employee ON mine.id = employee.mine_id GROUP BY mine.country;"}
{"prompt":"What was the total revenue from broadband services in Q3 2021? with given SQL schema CREATE TABLE broadband_revenue (revenue_id INT, revenue DECIMAL(10,2), revenue_date DATE); INSERT INTO broadband_revenue (revenue_id, revenue, revenue_date) VALUES (1, 50000.00, '2021-07-01'), (2, 60000.00, '2021-08-01'), (3, 75000.00, '2021-09-01');","completion":"SELECT SUM(revenue) AS total_revenue FROM broadband_revenue WHERE revenue_date BETWEEN '2021-07-01' AND '2021-09-30';"}
{"prompt":"What was the total revenue for concerts in states that start with the letter 'C'? with given SQL schema CREATE TABLE concerts (id INT, state VARCHAR(255), revenue FLOAT); INSERT INTO concerts (id, state, revenue) VALUES (1, 'California', 100000.0), (2, 'Colorado', 30000.0);","completion":"SELECT SUM(revenue) FROM concerts WHERE state LIKE 'C%';"}
{"prompt":"What's the total number of news articles published in January 2021 and February 2021? with given SQL schema CREATE TABLE ny_times (article_id INT, article_date DATE); INSERT INTO ny_times (article_id, article_date) VALUES (1, '2021-01-01'), (2, '2021-01-02'), (3, '2021-02-01'), (4, '2021-02-02');","completion":"SELECT COUNT(*) FROM ny_times WHERE article_date BETWEEN '2021-01-01' AND '2021-01-31' UNION ALL SELECT COUNT(*) FROM ny_times WHERE article_date BETWEEN '2021-02-01' AND '2021-02-28';"}
{"prompt":"Insert a new record for 'donor_information' table with 'donor_name' as 'Sophia Choi', 'donor_type' as 'local_donors', and 'total_donated' as 1200. with given SQL schema CREATE TABLE donor_information (donor_name VARCHAR(50), donor_type VARCHAR(20), total_donated DECIMAL(10,2));","completion":"INSERT INTO donor_information (donor_name, donor_type, total_donated) VALUES ('Sophia Choi', 'local_donors', 1200);"}
{"prompt":"Display the name and location of all marine research labs. with given SQL schema CREATE TABLE marine_research_labs (lab_name TEXT, lab_location TEXT); INSERT INTO marine_research_labs (lab_name, lab_location) VALUES ('Oceanus Institute', 'Portugal'), ('Aquatica Lab', 'Canada'), ('Blue Horizon Research', 'Brazil');","completion":"SELECT lab_name, lab_location FROM marine_research_labs;"}
{"prompt":"What are the names and types of vessels used in research expeditions in the regions with the lowest ocean acidification levels? with given SQL schema CREATE TABLE ocean_acidification (id INT PRIMARY KEY, region VARCHAR(255), year INT, acidification_level INT); INSERT INTO ocean_acidification (id, region, year, acidification_level) VALUES (1, 'Arctic Ocean', 2018, 20), (2, 'Southern Ocean', 2019, 22); CREATE TABLE expedition_vessels (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), region VARCHAR(255)); INSERT INTO expedition_vessels (id, name, type, region) VALUES (1, 'Sea Researcher', 'Research Vessel', 'Arctic Ocean');","completion":"SELECT v.name, v.type FROM expedition_vessels v INNER JOIN ocean_acidification oa ON v.region = oa.region WHERE oa.acidification_level = (SELECT MIN(acidification_level) FROM ocean_acidification);"}
{"prompt":"What is the minimum donation amount from donors in South Africa? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationAmount DECIMAL(10,2), Country TEXT);","completion":"SELECT MIN(DonationAmount) FROM Donors WHERE Country = 'South Africa';"}
{"prompt":"How many times has each soil moisture sensor been recalibrated in the past year? with given SQL schema CREATE TABLE soil_moisture_sensors (sensor_id INTEGER, last_calibration TIMESTAMP);","completion":"SELECT sensor_id, COUNT(*) as calibrations_count FROM soil_moisture_sensors WHERE last_calibration >= NOW() - INTERVAL '1 year' GROUP BY sensor_id ORDER BY calibrations_count DESC;"}
{"prompt":"Delete records in the \"park_violations\" table where the \"fine_amount\" is greater than $100 with given SQL schema CREATE TABLE park_violations (violation_id INT, vehicle_plate VARCHAR(20), fine_amount DECIMAL(5,2));","completion":"DELETE FROM park_violations WHERE fine_amount > 100.00;"}
{"prompt":"How many traffic violations were issued in 2019, broken down by violation type and city? with given SQL schema CREATE TABLE TrafficViolations (Year INT, ViolationType VARCHAR(255), City VARCHAR(255), Count INT); INSERT INTO TrafficViolations (Year, ViolationType, City, Count) VALUES (2019, 'Speeding', 'New York', 2500), (2019, 'Parking', 'New York', 3000), (2019, 'Speeding', 'Los Angeles', 2000), (2019, 'Parking', 'Los Angeles', 3500);","completion":"SELECT ViolationType, City, COUNT(*) AS ViolationCount FROM TrafficViolations WHERE Year = 2019 GROUP BY ViolationType, City;"}
{"prompt":"What is the average budget allocated for all categories in the Central region in the year 2020? with given SQL schema CREATE TABLE Budget (Year INT, Region VARCHAR(50), Category VARCHAR(50), Amount INT); INSERT INTO Budget (Year, Region, Category, Amount) VALUES (2020, 'Central', 'Education', 5000000), (2020, 'Central', 'Public Transportation', 6000000);","completion":"SELECT AVG(Amount) FROM Budget WHERE Year = 2020 AND Region = 'Central';"}
{"prompt":"How many clean energy policy proposals have been submitted in Europe in the last 5 years? with given SQL schema CREATE TABLE policies (id INT, region VARCHAR(255), name VARCHAR(255), submission_year INT); INSERT INTO policies (id, region, name, submission_year) VALUES (1, 'Europe', 'Policy1', 2017), (2, 'Europe', 'Policy2', 2019), (3, 'Europe', 'Policy3', 2018), (4, 'Europe', 'Policy4', 2016);","completion":"SELECT COUNT(*) FROM policies WHERE region = 'Europe' AND submission_year >= 2016;"}
{"prompt":"Identify the number of ethical labor violations for suppliers located in Spain and Portugal. with given SQL schema CREATE TABLE suppliers (supplier_id INT, supplier_location VARCHAR(255), num_violations INT);","completion":"SELECT COUNT(*) FROM suppliers WHERE supplier_location IN ('Spain', 'Portugal') AND num_violations > 0;"}
{"prompt":"What is the total quantity of products sold by each customer? with given SQL schema CREATE TABLE customers (customer_id INT, customer_name VARCHAR(255)); CREATE TABLE sales (sale_id INT, customer_id INT, product_quantity INT);","completion":"SELECT customers.customer_name, SUM(sales.product_quantity) as total_quantity FROM sales JOIN customers ON sales.customer_id = customers.customer_id GROUP BY customers.customer_name;"}
{"prompt":"How many days has each spacecraft been in space, ordered by manufacturer? with given SQL schema CREATE TABLE Spacecraft (id INT, name VARCHAR(50), type VARCHAR(50), manufacturer VARCHAR(50), launch_date DATE);","completion":"SELECT name, type, DATEDIFF(day, launch_date, GETDATE()) as days_in_space, manufacturer FROM Spacecraft ORDER BY manufacturer, days_in_space DESC;"}
{"prompt":"How many spacecraft components have been manufactured by AstroCorp in Russia with a weight less than 100 tons? with given SQL schema CREATE TABLE spacecraft_components (id INT, company VARCHAR(255), country VARCHAR(255), component_type VARCHAR(255), weight FLOAT); INSERT INTO spacecraft_components (id, company, country, component_type, weight) VALUES (1, 'AstroCorp', 'Russia', 'Propulsion System', 50.0), (2, 'AstroCorp', 'Russia', 'Structure', 200.0);","completion":"SELECT COUNT(*) FROM spacecraft_components WHERE company = 'AstroCorp' AND country = 'Russia' AND weight < 100.0;"}
{"prompt":"What is the average orbital velocity of all satellites in low Earth orbit? with given SQL schema CREATE TABLE satellites (id INT, name VARCHAR(50), orbit VARCHAR(50), velocity FLOAT); INSERT INTO satellites (id, name, orbit, velocity) VALUES (1, 'ISS', 'Low Earth Orbit', 7662);","completion":"SELECT AVG(velocity) FROM satellites WHERE orbit = 'Low Earth Orbit';"}
{"prompt":"Count the number of fans from the 'fan_demographics' table who are over 30 years old and reside in 'NY' or 'CA'. with given SQL schema CREATE TABLE fan_demographics (fan_id INT, age INT, state VARCHAR(2));","completion":"SELECT COUNT(*) FROM fan_demographics WHERE age > 30 AND state IN ('NY', 'CA');"}
{"prompt":"What is the average fan attendance per game for each team? with given SQL schema CREATE TABLE FanAttendance (GameID INT, TeamID INT, FanAttendance INT); INSERT INTO FanAttendance VALUES (1, 1, 5000), (2, 1, 5200), (3, 2, 6000), (4, 2, 6200);","completion":"SELECT TeamID, AVG(FanAttendance) as AvgFanAttendance FROM FanAttendance GROUP BY TeamID;"}
{"prompt":"What is the total revenue for each sport in the 'team_performances' table? with given SQL schema CREATE TABLE team_performances (team VARCHAR(20), sport VARCHAR(20), games_played INT, wins INT, losses INT, revenue DECIMAL(10,2));","completion":"SELECT sport, SUM(revenue) FROM team_performances GROUP BY sport;"}
{"prompt":"Identify the top 2 vulnerabilities with the most occurrences in the past 3 months, along with the number of affected systems for each. with given SQL schema CREATE TABLE vulnerabilities (id INT PRIMARY KEY, vulnerability_name VARCHAR(50), occurrence_time TIMESTAMP, affected_system VARCHAR(50)); INSERT INTO vulnerabilities (id, vulnerability_name, occurrence_time, affected_system) VALUES (1, 'CVE-2022-21555', '2022-05-01 10:00:00', 'Web Server'), (2, 'CVE-2022-22954', '2022-06-01 12:30:00', 'Database Server');","completion":"SELECT vulnerability_name, COUNT(DISTINCT affected_system) as affected_systems FROM vulnerabilities WHERE occurrence_time >= NOW() - INTERVAL '3 months' GROUP BY vulnerability_name ORDER BY affected_systems DESC LIMIT 2;"}
{"prompt":"What is the number of unique names of vulnerabilities in the 'vulnerabilities' table? with given SQL schema CREATE TABLE schema1.vulnerabilities (id INT, name VARCHAR(255), severity VARCHAR(50), description TEXT, date_discovered DATE, last_observed DATE); INSERT INTO schema1.vulnerabilities (id, name, severity, description, date_discovered, last_observed) VALUES (1, 'SQL Injection', 'Critical', 'Allows unauthorized access', '2021-01-01', '2021-02-01');","completion":"SELECT COUNT(DISTINCT name) FROM schema1.vulnerabilities;"}
{"prompt":"What is the percentage of security incidents resolved within 24 hours for each department in the last month? with given SQL schema CREATE TABLE SecurityIncidents(id INT, department VARCHAR(50), resolved BOOLEAN, resolution_time FLOAT, incident_date DATE);","completion":"SELECT department, AVG(IF(resolution_time <= 24, 1, 0)) as resolved_within_24_hours FROM SecurityIncidents WHERE incident_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) GROUP BY department;"}
{"prompt":"Identify policyholders who have submitted more than two claims in the last 30 days? with given SQL schema CREATE TABLE Policy (PolicyNumber INT, PolicyholderName VARCHAR(50)); CREATE TABLE Claim (ClaimID INT, PolicyNumber INT, ClaimDate DATE); INSERT INTO Policy VALUES (1, 'Amina Ali'), (2, 'Raul Rodriguez'); INSERT INTO Claim VALUES (1, 1, '2021-07-01'), (2, 1, '2021-07-15'), (3, 2, '2021-08-01'), (4, 2, '2021-09-01'), (5, 1, '2021-10-01'), (6, 1, '2021-11-01'), (7, 2, '2021-12-01');","completion":"SELECT PolicyNumber, PolicyholderName FROM Policy WHERE PolicyNumber IN (SELECT PolicyNumber FROM Claim WHERE ClaimDate >= DATEADD(DAY, -30, GETDATE()) GROUP BY PolicyNumber HAVING COUNT(DISTINCT ClaimDate) > 2);"}
{"prompt":"Show the names and negotiation dates for all unions in New York that had at least 3 machinery malfunctions in the last 6 months. with given SQL schema CREATE TABLE UnionMembers (id INT PRIMARY KEY, name VARCHAR(50), state VARCHAR(2), union_id INT, FOREIGN KEY (union_id) REFERENCES UnionNegotiations(union_id)); CREATE TABLE UnionNegotiations (id INT PRIMARY KEY, union_id INT, negotiation_date DATE); CREATE TABLE WorkplaceSafety (id INT PRIMARY KEY, union_id INT, incident_date DATE, incident_type VARCHAR(20), severity INT);","completion":"SELECT m.name, n.negotiation_date FROM UnionMembers m JOIN UnionNegotiations n ON m.union_id = n.union_id JOIN (SELECT w.union_id FROM WorkplaceSafety w WHERE w.incident_date >= DATE(NOW()) - INTERVAL 6 MONTH AND w.incident_type = 'Machinery Malfunction' GROUP BY w.union_id HAVING COUNT(*) >= 3) malfunctions ON m.union_id = malfunctions.union_id ORDER BY n.negotiation_date DESC;"}
{"prompt":"Count the number of electric vehicles sold by year, for vehicles with a range greater than 300 miles with given SQL schema CREATE TABLE electric_vehicles (id INT, vehicle_name VARCHAR(50), year INT, range INT, sales INT); INSERT INTO electric_vehicles (id, vehicle_name, year, range, sales) VALUES (1, 'Tesla Model S', 2020, 373, 50000), (2, 'Tesla Model 3', 2021, 263, 75000), (3, 'Chevy Bolt', 2022, 259, 40000), (4, 'Nissan Leaf', 2020, 226, 35000), (5, 'Ford Mustang Mach-E', 2021, 303, 60000);","completion":"SELECT year, COUNT(*) as high_range_evs FROM electric_vehicles WHERE range > 300 GROUP BY year;"}
{"prompt":"What is the maximum fuel consumption by vessels in the Caribbean in January 2022? with given SQL schema CREATE TABLE FuelConsumption (Id INT, VesselName VARCHAR(50), Area VARCHAR(50), Consumption DATE, FuelConsumption DECIMAL(5,2));","completion":"SELECT MAX(FuelConsumption) FROM FuelConsumption WHERE Area = 'Caribbean' AND Consumption = '2022-01-01';"}
{"prompt":"Identify the top 3 cities with the highest total water consumption in the year 2020. with given SQL schema CREATE TABLE water_consumption (city VARCHAR(50), consumption FLOAT, year INT); INSERT INTO water_consumption (city, consumption, year) VALUES ('Seattle', 3500.5, 2020), ('Portland', 4000.2, 2020), ('San-Francisco', 2500.8, 2020);","completion":"SELECT city, SUM(consumption) AS total_consumption FROM water_consumption WHERE year = 2020 GROUP BY city ORDER BY total_consumption DESC LIMIT 3;"}
{"prompt":"What is the average water usage by all users in the state of New York? with given SQL schema CREATE TABLE all_users (id INT, state VARCHAR(20), water_usage FLOAT); INSERT INTO all_users (id, state, water_usage) VALUES (1, 'New York', 12.5), (2, 'New York', 15.6), (3, 'California', 10.2);","completion":"SELECT AVG(water_usage) FROM all_users WHERE state = 'New York';"}
{"prompt":"What is the average age of members who have a gold membership and have used a treadmill in the past month? with given SQL schema CREATE TABLE Members (MemberID INT, Age INT, MembershipType VARCHAR(20)); INSERT INTO Members (MemberID, Age, MembershipType) VALUES (1, 25, 'Gold'), (2, 30, 'Silver'), (3, 35, 'Gold'); CREATE TABLE Workout (MemberID INT, Equipment VARCHAR(20), Duration INT); INSERT INTO Workout (MemberID, Equipment, Duration) VALUES (1, 'Treadmill', 60), (2, 'Bike', 45), (3, 'Treadmill', 30);","completion":"SELECT AVG(Members.Age) FROM Members INNER JOIN Workout ON Members.MemberID = Workout.MemberID WHERE Members.MembershipType = 'Gold' AND Workout.Equipment = 'Treadmill' AND Workout.Duration > 0;"}
{"prompt":"What is the total number of workouts logged by users who identify as female? with given SQL schema CREATE TABLE user_info (user_id INT, gender VARCHAR(10), workouts_logged INT);","completion":"SELECT SUM(workouts_logged) FROM user_info WHERE gender = 'female';"}
{"prompt":"What is the percentage of models trained on dataset A with a satisfaction score greater than 4.0, for each region, excluding North America? with given SQL schema CREATE TABLE models (id INT, dataset VARCHAR(20), satisfaction FLOAT, region VARCHAR(20)); INSERT INTO models VALUES (1, 'datasetA', 4.3, 'Europe'), (2, 'datasetA', 4.5, 'Asia'), (3, 'datasetB', 3.9, 'Africa'), (4, 'datasetB', 4.1, 'Africa'), (5, 'datasetA', 4.2, 'North America');","completion":"SELECT region, 100.0 * AVG(satisfaction > 4.0) FROM models WHERE dataset = 'datasetA' AND region != 'North America' GROUP BY region;"}
{"prompt":"Find the top 5 agricultural innovation projects with the highest budget in the Americas. with given SQL schema CREATE TABLE AgriculturalInnovation (ProjectID INT, ProjectName VARCHAR(100), ProjectType VARCHAR(100), Budget DECIMAL(10,2), Region VARCHAR(100)); INSERT INTO AgriculturalInnovation VALUES (1,'Precision Farming Project','Precision Farming',500000,'Americas'),(2,'Vertical Farming Project','Vertical Farming',400000,'Africa'),(3,'Drip Irrigation Project','Drip Irrigation',300000,'Asia'),(4,'Genetic Engineering Project','Genetic Engineering',200000,'Europe'),(5,'Drone Pollination Project','Drone Pollination',100000,'Oceania');","completion":"SELECT ProjectName, ProjectType, Budget FROM AgriculturalInnovation WHERE Region = 'Americas' ORDER BY Budget DESC FETCH NEXT 5 ROWS ONLY;"}
{"prompt":"List the unique sectors and the number of economic diversification projects in the 'economic_diversification' table for each. with given SQL schema CREATE TABLE economic_diversification (id INT, project_name TEXT, sector TEXT); INSERT INTO economic_diversification (id, project_name, sector) VALUES (1, 'Renewable Energy', 'Energy'), (2, 'Smart Farming', 'Agriculture'), (3, 'Artisanal Workshops', 'Crafts');","completion":"SELECT sector, COUNT(*) FROM economic_diversification GROUP BY sector;"}
{"prompt":"What is the minimum cost of agricultural innovation projects in Mexico? with given SQL schema CREATE TABLE agriculture_innovation (id INT, country VARCHAR(50), sector VARCHAR(50), cost FLOAT); INSERT INTO agriculture_innovation (id, country, sector, cost) VALUES (1, 'Mexico', 'Agriculture', 100000);","completion":"SELECT MIN(cost) FROM agriculture_innovation WHERE country = 'Mexico' AND sector = 'Agriculture';"}
{"prompt":"Calculate the average number of employees at each aircraft manufacturing plant by country. with given SQL schema CREATE TABLE country_plants (plant_id INT, country TEXT); INSERT INTO country_plants (plant_id, country) VALUES (1, 'USA'), (2, 'France'), (3, 'Canada'), (4, 'Brazil'), (5, 'India'), (6, 'Ukraine');","completion":"SELECT country, AVG(num_employees) as avg_employees FROM aircraft_plants JOIN country_plants ON aircraft_plants.plant_id = country_plants.plant_id GROUP BY country;"}
{"prompt":"What is the maximum water temperature in Salmon Farms in the Pacific Ocean? with given SQL schema CREATE TABLE Salmon_Farms (Farm_ID INT, Farm_Name TEXT, Ocean TEXT, Water_Temperature FLOAT); INSERT INTO Salmon_Farms (Farm_ID, Farm_Name, Ocean, Water_Temperature) VALUES (1, 'Farm P', 'Pacific', 14.0); INSERT INTO Salmon_Farms (Farm_ID, Farm_Name, Ocean, Water_Temperature) VALUES (2, 'Farm Q', 'Atlantic', 16.0); INSERT INTO Salmon_Farms (Farm_ID, Farm_Name, Ocean, Water_Temperature) VALUES (3, 'Farm R', 'Pacific', 15.0);","completion":"SELECT MAX(Water_Temperature) FROM Salmon_Farms WHERE Ocean = 'Pacific';"}
{"prompt":"What is the maximum number of hours worked per week by construction laborers in Germany? with given SQL schema CREATE TABLE Labor_Statistics (Employee_ID INT, Country VARCHAR(50), Job_Title VARCHAR(50), Hours_Per_Week INT);","completion":"SELECT MAX(Hours_Per_Week) FROM Labor_Statistics WHERE Country = 'Germany' AND Job_Title LIKE '%Construction%Laborer%';"}
{"prompt":"What is the total number of construction laborers in Georgia? with given SQL schema CREATE TABLE LaborStatistics (id INT, job_title VARCHAR(50), hourly_wage DECIMAL(5,2), state VARCHAR(20)); INSERT INTO LaborStatistics (id, job_title, hourly_wage, state) VALUES (1, 'Construction Laborer', 20.50, 'Georgia'), (2, 'Carpenter', 25.00, 'California');","completion":"SELECT COUNT(*) FROM LaborStatistics WHERE job_title = 'Construction Laborer' AND state = 'Georgia';"}
{"prompt":"Determine the percentage of cases handled by female attorneys that were won. with given SQL schema CREATE TABLE Performance (ID INT PRIMARY KEY, AttorneyID INT, Wins INT, Losses INT, TotalCases INT); CREATE TABLE Cases (ID INT PRIMARY KEY, CaseNumber VARCHAR(20), ClientID INT, AttorneyID INT, Outcome VARCHAR(20)); INSERT INTO Performance (ID, AttorneyID, Wins, Losses, TotalCases) VALUES (1, 1, 7, 3, 10), (2, 2, 6, 2, 8), (3, 3, 9, 1, 10); INSERT INTO Cases (ID, CaseNumber, ClientID, AttorneyID, Outcome) VALUES (1, '12345', 1, 1, 'Won'), (2, '54321', 2, 2, 'Won'), (3, '98765', 3, 3, 'Won'), (4, '34567', 1, 1, 'Lost'), (5, '76543', 1, 1, 'Lost'), (6, '23456', 2, 2, 'Lost'), (7, '65432', 3, 3, 'Lost');","completion":"SELECT (SUM(CASE WHEN Gender = 'Female' AND Outcome = 'Won' THEN 1 ELSE 0 END) * 100.0 \/ NULLIF(SUM(CASE WHEN Gender = 'Female' THEN 1 ELSE 0 END), 0)) AS WinningPercentage FROM Cases INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.ID"}
{"prompt":"Find the total billing amount for attorneys in the 'Criminal Law' practice area, for the year 2020, partitioned by attorney's last name and ordered by the total billing amount in descending order. with given SQL schema CREATE TABLE Attorneys (AttorneyID INT, FirstName VARCHAR(50), LastName VARCHAR(50), PracticeArea VARCHAR(50), TotalBilling FLOAT, BillingYear INT); INSERT INTO Attorneys (AttorneyID, FirstName, LastName, PracticeArea, TotalBilling, BillingYear) VALUES (1, 'Clara', 'Rivera', 'Personal Injury', 8000.00, 2020), (2, 'Jamal', 'Lee', 'Personal Injury', 6000.00, 2019), (3, 'Sophia', 'Gomez', 'Criminal Law', 9000.00, 2020);","completion":"SELECT LastName, SUM(TotalBilling) OVER (PARTITION BY PracticeArea, LastName, BillingYear) AS TotalBilling FROM Attorneys WHERE PracticeArea = 'Criminal Law' AND BillingYear = 2020 ORDER BY TotalBilling DESC;"}
{"prompt":"What is the total amount of climate finance invested in renewable energy projects by public and private sectors in Africa? with given SQL schema CREATE TABLE renewable_energy_projects (project_id INT, sector TEXT, investor_type TEXT, region TEXT, amount FLOAT); INSERT INTO renewable_energy_projects (project_id, sector, investor_type, region, amount) VALUES (1, 'Renewable Energy', 'Public', 'Africa', 5000000); INSERT INTO renewable_energy_projects (project_id, sector, investor_type, region, amount) VALUES (2, 'Renewable Energy', 'Private', 'Africa', 7000000);","completion":"SELECT SUM(amount) FROM renewable_energy_projects WHERE sector = 'Renewable Energy' AND region = 'Africa';"}
{"prompt":"What is the total funding allocated for climate change adaptation initiatives in Africa in 2020? with given SQL schema CREATE TABLE climate_funds (fund_id INT, initiative_name VARCHAR(50), region VARCHAR(50), allocation DECIMAL(10, 2), funding_year INT); INSERT INTO climate_funds (fund_id, initiative_name, region, allocation, funding_year) VALUES (1, 'Green Climate Fund', 'Africa', 5000000.00, 2020), (2, 'Adaptation Fund', 'Africa', 2500000.00, 2020);","completion":"SELECT SUM(allocation) FROM climate_funds WHERE region = 'Africa' AND funding_year = 2020 AND initiative_name IN ('Green Climate Fund', 'Adaptation Fund');"}
{"prompt":"What is the average funding round size for startups founded by women in the healthcare sector? with given SQL schema CREATE TABLE company (id INT, name TEXT, industry TEXT, founder_gender TEXT); INSERT INTO company (id, name, industry, founder_gender) VALUES (1, 'MedHealth', 'Healthcare', 'Female'); INSERT INTO company (id, name, industry, founder_gender) VALUES (2, 'TechBoost', 'Technology', 'Male'); CREATE TABLE funding_round (company_id INT, round_size INT); INSERT INTO funding_round (company_id, round_size) VALUES (1, 5000000); INSERT INTO funding_round (company_id, round_size) VALUES (2, 7000000);","completion":"SELECT AVG(funding_round.round_size) FROM company INNER JOIN funding_round ON company.id = funding_round.company_id WHERE company.founder_gender = 'Female' AND company.industry = 'Healthcare';"}
{"prompt":"What is the average temperature and precipitation in April for farms located in urban areas? with given SQL schema CREATE TABLE farms (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO farms (id, name, location, type) VALUES (1, 'Smith Farm', 'Rio de Janeiro', 'Urban'); INSERT INTO farms (id, name, location, type) VALUES (2, 'Jones Farm', 'Toronto', 'Urban'); CREATE TABLE weather (id INT, farm_id INT, month INT, temperature INT, precipitation INT); INSERT INTO weather (id, farm_id, month, temperature, precipitation) VALUES (1, 1, 4, 22, 50); INSERT INTO weather (id, farm_id, month, temperature, precipitation) VALUES (2, 2, 4, 15, 75);","completion":"SELECT AVG(w.temperature), AVG(w.precipitation) FROM weather w JOIN farms f ON w.farm_id = f.id WHERE w.month = 4 AND f.type = 'Urban';"}
{"prompt":"How many marine species in the Indian Ocean are not threatened by climate change? with given SQL schema CREATE TABLE marine_species (name VARCHAR(255), region VARCHAR(255), threatened_by_climate_change BOOLEAN); INSERT INTO marine_species (name, region, threatened_by_climate_change) VALUES ('Species 1', 'Indian Ocean', TRUE); INSERT INTO marine_species (name, region, threatened_by_climate_change) VALUES ('Species 2', 'Atlantic', FALSE);","completion":"SELECT COUNT(*) FROM marine_species WHERE region = 'Indian Ocean' AND threatened_by_climate_change = FALSE;"}
{"prompt":"Update the marine_species table to reflect an increase in population by 10% for species with id 1, 4, and 6 with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(50), population INT);","completion":"UPDATE marine_species SET population = population * 1.1 WHERE id IN (1, 4, 6);"}
{"prompt":"What are the top 3 cruelty-free certified cosmetic products by sales in Canada? with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(100), sales INT, certification VARCHAR(20)); INSERT INTO products VALUES (1, 'Mascara', 5000, 'cruelty-free'), (2, 'Lipstick', 7000, 'not_certified'), (3, 'Foundation', 6000, 'cruelty-free'); CREATE TABLE regions (region_id INT, region_name VARCHAR(50)); INSERT INTO regions VALUES (1, 'Canada'), (2, 'USA');","completion":"SELECT product_name, sales FROM products WHERE certification = 'cruelty-free' ORDER BY sales DESC LIMIT 3;"}
{"prompt":"What are the top 5 cruelty-free certified cosmetic products by consumer preference score, ordered from highest to lowest? with given SQL schema CREATE TABLE cosmetics (product_name TEXT, cruelty_free BOOLEAN, consumer_preference_score INTEGER); INSERT INTO cosmetics (product_name, cruelty_free, consumer_preference_score) VALUES ('ProductA', true, 85), ('ProductB', false, 90), ('ProductC', true, 70), ('ProductD', true, 95), ('ProductE', false, 80), ('ProductF', true, 75);","completion":"SELECT product_name, consumer_preference_score FROM cosmetics WHERE cruelty_free = true ORDER BY consumer_preference_score DESC LIMIT 5;"}
{"prompt":"How many artworks were sold by each gallery in the last year? with given SQL schema CREATE TABLE Galleries (GalleryID INT, GalleryName VARCHAR(50), City VARCHAR(50)); CREATE TABLE Sales (SaleID INT, GalleryID INT, ArtworkID INT, Year INT); INSERT INTO Galleries VALUES (1, 'Gallery 1', 'New York'), (2, 'Gallery 2', 'Los Angeles'), (3, 'Gallery 3', 'London'); INSERT INTO Sales VALUES (1, 1, 1, 2021), (2, 1, 2, 2021), (3, 2, 3, 2021), (4, 2, 4, 2021), (5, 3, 5, 2021), (6, 3, 6, 2021);","completion":"SELECT G.GalleryName, COUNT(S.ArtworkID) AS ArtworksSold FROM Galleries G INNER JOIN Sales S ON G.GalleryID = S.GalleryID WHERE S.Year = 2021 GROUP BY G.GalleryName;"}
{"prompt":"List all countries and their corresponding peacekeeping operation budgets from the 'Budget' and 'Countries' tables with given SQL schema CREATE TABLE Budget (country TEXT, budget INT); CREATE TABLE Countries (country TEXT, peacekeeping_operation TEXT); INSERT INTO Budget (country, budget) VALUES ('United States', 2000000), ('China', 1500000), ('Russia', 1000000); INSERT INTO Countries (country, peacekeeping_operation) VALUES ('United States', 'MINUSMA'), ('China', 'MONUSCO'), ('Russia', 'UNMISS');","completion":"SELECT Countries.country, Budget.budget FROM Countries INNER JOIN Budget ON Countries.country = Budget.country;"}
{"prompt":"Get average returns of stocks with market cap > $10B in the past year with given SQL schema CREATE TABLE stocks (stock_id INT PRIMARY KEY, symbol VARCHAR(10), market_cap DECIMAL(15, 2)); CREATE TABLE returns (return_id INT PRIMARY KEY, stock_id INT, year INT, avg_return DECIMAL(5, 2));","completion":"SELECT s.symbol, AVG(r.avg_return) FROM stocks s JOIN returns r ON s.stock_id = r.stock_id WHERE s.market_cap > 10000000000 GROUP BY s.symbol;"}
{"prompt":"Show the total assets under management (AUM) for each risk category. with given SQL schema CREATE TABLE risk_categories (risk_category VARCHAR(20)); INSERT INTO risk_categories (risk_category) VALUES ('Low'), ('Medium'), ('High'); CREATE TABLE client_risk (client_id INT, risk_category VARCHAR(20)); INSERT INTO client_risk (client_id, risk_category) VALUES (1, 'Medium'), (2, 'High'), (3, 'Low');","completion":"SELECT cr.risk_category, SUM(value) AS total_aum FROM client_risk cr JOIN clients c ON cr.client_id = c.client_id JOIN assets a ON c.client_id = a.client_id GROUP BY cr.risk_category;"}
{"prompt":"What is the maximum balance for high-risk accounts in the Africa region? with given SQL schema CREATE TABLE balances (id INT, risk_level VARCHAR(10), region VARCHAR(20), balance DECIMAL(15, 2)); INSERT INTO balances (id, risk_level, region, balance) VALUES (1, 'high', 'Africa', 200000.00), (2, 'medium', 'Europe', 150000.00), (3, 'low', 'North America', 100000.00), (4, 'high', 'Asia-Pacific', 300000.00);","completion":"SELECT MAX(balance) FROM balances WHERE risk_level = 'high' AND region = 'Africa';"}
{"prompt":"Find the names of healthcare professionals who work in rural areas of Australia and New Zealand, and the facilities they work for. with given SQL schema CREATE TABLE professionals (name TEXT, title TEXT, location TEXT); INSERT INTO professionals (name, title, location) VALUES ('Dr. Smith', 'Doctor', 'Rural Australia'), ('Nurse Johnson', 'Nurse', 'Rural New Zealand'), ('Dr. Brown', 'Doctor', 'Rural New Zealand'); CREATE TABLE facilities (name TEXT, location TEXT, type TEXT); INSERT INTO facilities (name, location, type) VALUES ('Facility X', 'Rural Australia', 'Hospital'), ('Facility Y', 'Rural New Zealand', 'Clinic');","completion":"SELECT professionals.name, facilities.name FROM professionals INNER JOIN facilities ON professionals.location = facilities.location;"}
{"prompt":"Find the total number of healthcare professionals in 'rural_healthcare' schema? with given SQL schema CREATE SCHEMA if not exists rural_healthcare; use rural_healthcare; CREATE TABLE hospitals (id int, name varchar(255), num_doctors int); CREATE TABLE clinics (id int, name varchar(255), num_nurses int);","completion":"SELECT COALESCE(SUM(h.num_doctors), 0) + COALESCE(SUM(c.num_nurses), 0) FROM hospitals h RIGHT JOIN clinics c ON 1=1;"}
{"prompt":"How many female doctors are in 'healthcare_staff' table? with given SQL schema CREATE TABLE healthcare_staff (name VARCHAR(255), gender VARCHAR(255), position VARCHAR(255), hospital_id INT); INSERT INTO healthcare_staff (name, gender, position, hospital_id) VALUES ('Dr. Jane Smith', 'Female', 'Doctor', 1), ('Dr. Maria Garcia', 'Female', 'Doctor', 2);","completion":"SELECT COUNT(*) FROM healthcare_staff WHERE gender = 'Female' AND position = 'Doctor';"}
{"prompt":"What is the total number of medical professionals working in rural areas of California? with given SQL schema CREATE TABLE professional (professional_id INT, name VARCHAR(50), specialty VARCHAR(50), location VARCHAR(20)); INSERT INTO professional (professional_id, name, specialty, location) VALUES (1, 'Dr. Smith', 'Cardiologist', 'Rural California'); INSERT INTO professional (professional_id, name, specialty, location) VALUES (2, 'Dr. Johnson', 'Pediatrician', 'Urban California');","completion":"SELECT COUNT(*) FROM professional WHERE location = 'Rural California';"}
{"prompt":"What is the total budget and the number of programs in each department for the next fiscal year? with given SQL schema CREATE TABLE department_budget (id INT, department VARCHAR(255), fiscal_year VARCHAR(255), program_budget DECIMAL(10, 2)); INSERT INTO department_budget (id, department, fiscal_year, program_budget) VALUES (1, 'Education', '2023', 5000), (2, 'Health', '2023', 7000), (3, 'Education', '2023', 3000), (4, 'Environment', '2023', 8000), (5, 'Health', '2023', 9000), (6, 'Education', '2023', 4000);","completion":"SELECT department, SUM(program_budget) AS total_budget, COUNT(*) AS num_programs FROM department_budget WHERE fiscal_year = '2024' GROUP BY department;"}
{"prompt":"What is the total number of donations and the total donation amount for donations made in the month of June? with given SQL schema CREATE TABLE Donations (id INT, donor_name TEXT, donation_amount FLOAT, donation_date DATE, state TEXT); INSERT INTO Donations (id, donor_name, donation_amount, donation_date, state) VALUES (1, 'John Doe', 250, '2022-06-01', 'NY'), (2, 'Jane Smith', 125, '2022-07-02', 'CA');","completion":"SELECT COUNT(*), SUM(donation_amount) FROM Donations WHERE EXTRACT(MONTH FROM donation_date) = 6;"}
{"prompt":"How many employees from each country have completed the 'SQL' course in the 'training' table? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE training (id INT, employee_id INT, course VARCHAR(255)); INSERT INTO employees (id, name, country) VALUES (1, 'John Doe', 'USA'); INSERT INTO employees (id, name, country) VALUES (2, 'Jane Smith', 'Canada'); INSERT INTO employees (id, name, country) VALUES (3, 'Alice Johnson', 'USA'); INSERT INTO training (id, employee_id, course) VALUES (1, 1, 'SQL'); INSERT INTO training (id, employee_id, course) VALUES (2, 1, 'Python'); INSERT INTO training (id, employee_id, course) VALUES (3, 3, 'SQL'); INSERT INTO training (id, employee_id, course) VALUES (4, 4, 'SQL');","completion":"SELECT e.country, COUNT(t.id) FROM employees e JOIN training t ON e.id = t.employee_id WHERE t.course = 'SQL' GROUP BY e.country;"}
{"prompt":"What is the distribution of renewable energy subsidies by technology in the US? with given SQL schema CREATE TABLE renewable_energy_subsidies (id INT, technology VARCHAR(255), year INT, amount INT);","completion":"SELECT technology, AVG(amount) as avg_subsidy, COUNT(*) as num_subsidies FROM renewable_energy_subsidies s JOIN energy_storage e ON s.technology = e.technology WHERE e.country = 'United States' GROUP BY technology;"}
{"prompt":"How many offshore platforms have been decommissioned since 2016? with given SQL schema CREATE TABLE Platforms (PlatformName TEXT, DecommissionDate DATE); INSERT INTO Platforms (PlatformName, DecommissionDate) VALUES ('Platform1', '2016-12-31'), ('Platform2', '2017-08-15'), ('Platform3', '2018-02-28');","completion":"SELECT COUNT(*) AS DecommissionedPlatforms  FROM Platforms WHERE DecommissionDate BETWEEN '2016-01-01' AND '2022-12-31';"}
{"prompt":"Which operators have the highest average production quantity per well? with given SQL schema CREATE TABLE wells (well_id INT, well_name TEXT, production_qty FLOAT, operator_id INT); INSERT INTO wells (well_id, well_name, production_qty, operator_id) VALUES (1, 'Well A', 1000, 1), (2, 'Well B', 1500, 1), (3, 'Well C', 800, 2); CREATE TABLE operators (operator_id INT, operator_name TEXT); INSERT INTO operators (operator_id, operator_name) VALUES (1, 'ABC Inc.'), (2, 'DEF'), (3, 'GHI Inc.');","completion":"SELECT o.operator_name, AVG(w.production_qty) as avg_production FROM wells w JOIN operators o ON w.operator_id = o.operator_id GROUP BY o.operator_name ORDER BY avg_production DESC;"}
{"prompt":"Get the total number of points scored by each team in the 2021 NBA season with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams VALUES (1, 'Brooklyn Nets'); INSERT INTO teams VALUES (2, 'Los Angeles Lakers'); CREATE TABLE points (team_id INT, points INT, season VARCHAR(10)); INSERT INTO points VALUES (1, 120, '2021'); INSERT INTO points VALUES (2, 110, '2021');","completion":"SELECT a.team_name, SUM(b.points) as total_points FROM teams a JOIN points b ON a.team_id = b.team_id WHERE b.season = '2021' GROUP BY a.team_name;"}
{"prompt":"Calculate the sum of all donations made on or after January 1, 2021 in the 'refugee_support' schema. with given SQL schema CREATE TABLE refugee_support.donations_2021 (donation_id INT, donor_id INT, donation_amount DECIMAL, donation_date DATE); INSERT INTO refugee_support.donations_2021 (donation_id, donor_id, donation_amount, donation_date) VALUES (1, 1, 50.00, '2021-01-02'), (2, 2, 100.00, '2021-03-15'), (3, 3, 25.00, '2021-06-20');","completion":"SELECT SUM(donation_amount) FROM refugee_support.donations_2021 WHERE donation_date >= '2021-01-01';"}
{"prompt":"Update the status of incomplete projects from 2018 to 'In Progress' with given SQL schema CREATE TABLE Projects (ProjectID int, Status varchar(50), Year int); INSERT INTO Projects (ProjectID, Status, Year) VALUES (1, 'Completed', 2018), (2, 'In Progress', 2019), (3, 'Completed', 2017), (4, 'Not Started', 2018);","completion":"UPDATE Projects SET Status = 'In Progress' WHERE Year = 2018 AND Status = 'Not Started';"}
{"prompt":"What is the total number of schools and hospitals in 'relief_operations' table? with given SQL schema CREATE TABLE relief_operations (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); INSERT INTO relief_operations (id, name, type, location) VALUES (1, 'School A', 'school', 'Country1'), (2, 'Hospital B', 'hospital', 'Country2');","completion":"SELECT SUM(CASE WHEN type = 'school' THEN 1 ELSE 0 END) as total_schools, SUM(CASE WHEN type = 'hospital' THEN 1 ELSE 0 END) as total_hospitals FROM relief_operations;"}
{"prompt":"Who are the top three contributors to accessible technology initiatives in India? with given SQL schema CREATE TABLE accessibility_contributors (contributor VARCHAR(50), contributions INT); INSERT INTO accessibility_contributors (contributor, contributions) VALUES ('ABC Corp', 35000), ('XYZ Foundation', 40000), ('TechAid India', 30000), ('Lara Solutions', 25000);","completion":"SELECT contributor FROM accessibility_contributors ORDER BY contributions DESC LIMIT 3;"}
{"prompt":"What is the total number of trips taken on accessible vehicles in the 'East' region for the current year? with given SQL schema CREATE TABLE Vehicles (VehicleID int, VehicleType varchar(255), Region varchar(255)); INSERT INTO Vehicles (VehicleID, VehicleType, Region) VALUES (1, 'Bus', 'East'), (2, 'Tram', 'West'), (3, 'Wheelchair Bus', 'South'), (4, 'Accessible Tram', 'East'); CREATE TABLE Trips (TripID int, VehicleID int, TripDateTime datetime);","completion":"SELECT COUNT(*) FROM Vehicles JOIN Trips ON Vehicles.VehicleID = Trips.VehicleID WHERE Vehicles.Region = 'East' AND Vehicles.VehicleType IN ('Wheelchair Bus', 'Accessible Tram') AND YEAR(Trips.TripDateTime) = YEAR(GETDATE());"}
{"prompt":"What is the distribution of clothing sizes sold to customers in France? with given SQL schema CREATE TABLE sizes (country VARCHAR(10), product VARCHAR(20), size DECIMAL(3,2)); INSERT INTO sizes (country, product, size) VALUES ('France', 'shirt', 40.0), ('France', 'shirt', 42.0), ('France', 'shirt', 44.0), ('France', 'pants', 32.0), ('France', 'pants', 34.0), ('France', 'pants', 36.0);","completion":"SELECT size, COUNT(*) FROM sizes WHERE country = 'France' GROUP BY size;"}
{"prompt":"Which countries source the most of each sustainable fabric type? with given SQL schema CREATE TABLE sourcing (id INT, country TEXT, fabric TEXT, quantity INT); INSERT INTO sourcing (id, country, fabric, quantity) VALUES (1, 'Italy', 'Organic Cotton', 400), (2, 'France', 'Organic Cotton', 300), (3, 'Germany', 'Recycled Polyester', 500), (4, 'Spain', 'Recycled Polyester', 400), (5, 'Italy', 'Hemp', 600), (6, 'France', 'Hemp', 200);","completion":"SELECT country, fabric, SUM(quantity) as total_quantity FROM sourcing GROUP BY country, fabric ORDER BY total_quantity DESC;"}
{"prompt":"How many packages arrived in Texas from China since 2021-01-01? with given SQL schema CREATE TABLE Packages (id INT, arrived DATE, destination VARCHAR(20)); INSERT INTO Packages (id, arrived, destination) VALUES (1, '2021-01-05', 'Texas'), (2, '2021-02-10', 'Texas'), (3, '2021-03-20', 'China');","completion":"SELECT COUNT(*) FROM Packages WHERE destination = 'Texas' AND arrived >= '2021-01-01' AND arrived < '2022-01-01' AND destination = 'China'"}
{"prompt":"Identify the freight forwarders and their respective total shipment weight for the region 'Asia' in the month of July 2021. with given SQL schema CREATE TABLE FreightForwarders (FFID INT, FFName VARCHAR(100), Region VARCHAR(50));CREATE TABLE ShipmentDetails (ShipmentID INT, FFID INT, ShipmentWeight DECIMAL(10,2), ShipmentDate DATE); INSERT INTO FreightForwarders VALUES (1, 'ABC Logistics', 'Asia'); INSERT INTO ShipmentDetails VALUES (1, 1, 500, '2021-07-01');","completion":"SELECT FreightForwarders.FFName, SUM(ShipmentDetails.ShipmentWeight) as TotalShipmentWeight FROM FreightForwarders INNER JOIN ShipmentDetails ON FreightForwarders.FFID = ShipmentDetails.FFID WHERE FreightForwarders.Region = 'Asia' AND MONTH(ShipmentDate) = 7 AND YEAR(ShipmentDate) = 2021 GROUP BY FreightForwarders.FFName;"}
{"prompt":"What is the average quantity of inventory in country 'France'? with given SQL schema CREATE TABLE warehouses (id VARCHAR(10), name VARCHAR(20), city VARCHAR(10), country VARCHAR(10)); CREATE TABLE inventory (item VARCHAR(10), warehouse_id VARCHAR(10), quantity INT); INSERT INTO warehouses (id, name, city, country) VALUES ('EWR-WH-01', 'Newark Warehouse', 'Newark', 'USA'), ('CDG-WH-01', 'Paris Warehouse', 'Paris', 'France'), ('DXB-WH-01', 'Dubai Warehouse', 'Dubai', 'UAE'); INSERT INTO inventory (item, warehouse_id, quantity) VALUES ('Laptop', 'EWR-WH-01', 500), ('Monitor', 'EWR-WH-01', 300), ('Keyboard', 'EWR-WH-01', 250), ('Laptop', 'CDG-WH-01', 600), ('Monitor', 'CDG-WH-01', 400), ('Keyboard', 'CDG-WH-01', 350), ('Laptop', 'DXB-WH-01', 700), ('Monitor', 'DXB-WH-01', 500), ('Keyboard', 'DXB-WH-01', 450);","completion":"SELECT AVG(quantity) as avg_quantity FROM inventory i JOIN warehouses w ON i.warehouse_id = w.id WHERE w.country = 'France';"}
{"prompt":"How many genetic research projects in Japan use CRISPR technology? with given SQL schema CREATE TABLE projects (id INT, name VARCHAR(50), country VARCHAR(50), techniques VARCHAR(50)); INSERT INTO projects (id, name, country, techniques) VALUES (1, 'ProjectA', 'Japan', 'CRISPR, PCR'); INSERT INTO projects (id, name, country, techniques) VALUES (2, 'ProjectB', 'Japan', 'PCR, bioinformatics'); INSERT INTO projects (id, name, country, techniques) VALUES (3, 'ProjectC', 'Japan', 'CRISPR, bioinformatics');","completion":"SELECT COUNT(*) FROM projects WHERE country = 'Japan' AND techniques LIKE '%CRISPR%';"}
{"prompt":"What is the total investment in biosensor technology development in Germany and France? with given SQL schema CREATE SCHEMA if not exists biosensors; CREATE TABLE if not exists biosensors.investments (id INT, country VARCHAR(50), investment_type VARCHAR(50), amount DECIMAL(10, 2)); INSERT INTO biosensors.investments (id, country, investment_type, amount) VALUES (1, 'Germany', 'Equity', 2000000.00), (2, 'France', 'Grants', 1500000.00), (3, 'Germany', 'Grants', 1000000.00), (4, 'France', 'Equity', 2500000.00);","completion":"SELECT SUM(amount) FROM biosensors.investments WHERE country IN ('Germany', 'France') AND investment_type IN ('Equity', 'Grants');"}
{"prompt":"What is the total number of bills sponsored by legislators in the 'Democrat' party for the topic 'Healthcare'? with given SQL schema CREATE TABLE Legislator (id INT, Name VARCHAR(50), Party VARCHAR(50), State VARCHAR(50)); CREATE TABLE Bill (id INT, BillID INT, StateSponsor VARCHAR(50), Sponsor INT, Topic VARCHAR(50)); INSERT INTO Legislator (id, Name, Party, State) VALUES (1, 'Alex Brown', 'Democrat', 'California'); INSERT INTO Legislator (id, Name, Party, State) VALUES (2, 'Taylor Green', 'Republican', 'Texas'); INSERT INTO Bill (id, BillID, StateSponsor, Sponsor, Topic) VALUES (1, 101, 'California', 1, 'Healthcare'); INSERT INTO Bill (id, BillID, StateSponsor, Sponsor, Topic) VALUES (2, 201, 'Texas', 2, 'Education');","completion":"SELECT COUNT(DISTINCT b.BillID) FROM Legislator l JOIN Bill b ON l.State = b.StateSponsor WHERE l.Party = 'Democrat' AND b.Topic = 'Healthcare';"}
{"prompt":"List all renewable energy projects and their corresponding budgets in the state of California, ordered by budget in descending order. with given SQL schema CREATE TABLE renewable_energy_projects (id INT, name VARCHAR(255), budget FLOAT, state VARCHAR(255)); INSERT INTO renewable_energy_projects (id, name, budget, state) VALUES (1, 'Solar Farm 1', 10000000.0, 'California'), (2, 'Wind Farm 1', 15000000.0, 'California');","completion":"SELECT * FROM renewable_energy_projects WHERE state = 'California' ORDER BY budget DESC;"}
{"prompt":"Add a record for a depression patient who underwent CBT with given SQL schema CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(50)); CREATE TABLE mental_health_conditions (id INT PRIMARY KEY, name VARCHAR(255), description TEXT); CREATE TABLE mental_health_treatment_approaches (id INT PRIMARY KEY, name VARCHAR(255), description TEXT); CREATE TABLE patient_outcomes (id INT PRIMARY KEY, patient_id INT, mental_health_condition_id INT, treatment_approach_id INT, outcome_date DATE, outcome_description TEXT);","completion":"INSERT INTO patient_outcomes (id, patient_id, mental_health_condition_id, treatment_approach_id, outcome_date, outcome_description) VALUES (1, 1, 1, 1, '2022-06-01', 'Improved mood and energy levels.');"}
{"prompt":"Which therapist conducted the longest therapy session, and how long did it last? with given SQL schema CREATE TABLE therapists (id INT, name VARCHAR(50), specialty VARCHAR(50)); INSERT INTO therapists (id, name, speciality) VALUES (1, 'Grace Lee', 'CBT'); INSERT INTO therapists (id, name, speciality) VALUES (2, 'Harrison Kim', 'DBT'); CREATE TABLE treatments (id INT, patient_id INT, therapist_id INT, date DATE, duration INT); INSERT INTO treatments (id, patient_id, therapist_id, date, duration) VALUES (1, 1, 1, '2022-01-01', 60); INSERT INTO treatments (id, patient_id, therapist_id, date, duration) VALUES (2, 2, 2, '2022-01-02', 90);","completion":"SELECT t.name as therapist_name, MAX(duration) as longest_session FROM treatments t JOIN therapists tr ON t.therapist_id = tr.id GROUP BY therapist_name;"}
{"prompt":"What is the average experience of electrical engineers for each dam project? with given SQL schema CREATE TABLE dams (id INT, name VARCHAR(255), location VARCHAR(255), budget FLOAT, project_manager VARCHAR(255), engineer_specialty VARCHAR(255), engineer_experience INT);","completion":"SELECT d.name, AVG(d.engineer_experience) as avg_experience FROM dams d WHERE d.engineer_specialty = 'Electrical' GROUP BY d.name;"}
{"prompt":"What is the average number of stories of all buildings in the state of New York that are taller than 150 meters? with given SQL schema CREATE TABLE building (id INT, name TEXT, state TEXT, number_of_stories INT, height INT); INSERT INTO building (id, name, state, number_of_stories, height) VALUES (1, 'Building A', 'New York', 50, 200); INSERT INTO building (id, name, state, number_of_stories, height) VALUES (2, 'Building B', 'New York', 60, 180);","completion":"SELECT AVG(number_of_stories) FROM building WHERE state = 'New York' AND height > 150;"}
{"prompt":"What is the average duration of criminal trials for Indigenous defendants compared to non-Indigenous defendants in Canada and New Zealand? with given SQL schema CREATE TABLE canada_criminal_trials (id INT, defendant_type VARCHAR(255), days_to_completion INT); INSERT INTO canada_criminal_trials (id, defendant_type, days_to_completion) VALUES (1, 'Indigenous', 60), (2, 'Non-Indigenous', 45);CREATE TABLE nz_criminal_trials (id INT, defendant_type VARCHAR(255), days_to_completion INT); INSERT INTO nz_criminal_trials (id, defendant_type, days_to_completion) VALUES (1, 'Indigenous', 70), (2, 'Non-Indigenous', 50);","completion":"SELECT AVG(days_to_completion) AS avg_duration FROM canada_criminal_trials WHERE defendant_type = 'Indigenous' UNION ALL SELECT AVG(days_to_completion) AS avg_duration FROM canada_criminal_trials WHERE defendant_type = 'Non-Indigenous' UNION ALL SELECT AVG(days_to_completion) AS avg_duration FROM nz_criminal_trials WHERE defendant_type = 'Indigenous' UNION ALL SELECT AVG(days_to_completion) AS avg_duration FROM nz_criminal_trials WHERE defendant_type = 'Non-Indigenous';"}
{"prompt":"Calculate the total biomass of marine species in 'MarineResearchArea' with given SQL schema CREATE TABLE SpeciesBiomass (species VARCHAR(255), biomass FLOAT); INSERT INTO SpeciesBiomass (species, biomass) VALUES ('Dolphin', 350.5), ('Shark', 400.0), ('Turtle', 200.0); CREATE TABLE MarineResearchArea (species VARCHAR(255), location VARCHAR(255)); INSERT INTO MarineResearchArea (species, location) VALUES ('Dolphin', 'MarineResearchArea'), ('Shark', 'MarineResearchArea'), ('Squid', 'MarineResearchArea');","completion":"SELECT SUM(biomass) FROM SpeciesBiomass INNER JOIN MarineResearchArea ON SpeciesBiomass.species = MarineResearchArea.species WHERE MarineResearchArea.location = 'MarineResearchArea';"}
{"prompt":"What is the total biomass for all species in the Arctic Ocean? with given SQL schema CREATE TABLE species_biomass (species VARCHAR(255), ocean VARCHAR(255), biomass FLOAT); INSERT INTO species_biomass (species, ocean, biomass) VALUES ('Polar Bear', 'Arctic Ocean', 500.0);","completion":"SELECT ocean, SUM(biomass) FROM species_biomass WHERE ocean = 'Arctic Ocean' GROUP BY ocean"}
{"prompt":"What is the total number of hours of content created in each content category, segmented by language? with given SQL schema CREATE TABLE content_info (content_id INT, content_type VARCHAR(20), content_category VARCHAR(20), content_language VARCHAR(20), creation_date DATE, content_length INT);","completion":"SELECT content_category, content_language, SUM(content_length \/ 60) as total_hours FROM content_info WHERE creation_date >= CURDATE() - INTERVAL 1 YEAR GROUP BY content_category, content_language;"}
{"prompt":"Who is the most frequent customer ordering vegetarian items? with given SQL schema CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50)); INSERT INTO customers VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Alice Johnson'); CREATE TABLE orders (order_id INT, customer_id INT, menu_id INT, order_date DATE); INSERT INTO orders VALUES (1, 1, 1, '2022-01-01'), (2, 2, 3, '2022-01-02'), (3, 3, 2, '2022-01-03'); CREATE TABLE menu (menu_id INT, item_name VARCHAR(50), is_vegetarian BOOLEAN, price DECIMAL(5,2)); INSERT INTO menu VALUES (1, 'Veggie Burger', true, 8.99), (2, 'Cheeseburger', false, 7.99), (3, 'Tofu Stir Fry', true, 11.99);","completion":"SELECT customers.customer_name, COUNT(orders.order_id) as order_count FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN menu ON orders.menu_id = menu.menu_id WHERE menu.is_vegetarian = true GROUP BY customers.customer_name ORDER BY order_count DESC LIMIT 1;"}
{"prompt":"Find the average daily production quantity of zinc for mining sites in South America, for the year 2017, with less than 30 employees. with given SQL schema CREATE TABLE zinc_mine (site_id INT, country VARCHAR(50), num_employees INT, extraction_date DATE, quantity INT); INSERT INTO zinc_mine (site_id, country, num_employees, extraction_date, quantity) VALUES (1, 'South America', 25, '2017-01-02', 120), (2, 'South America', 28, '2017-12-31', 180), (3, 'South America', 22, '2017-03-04', 220);","completion":"SELECT country, AVG(quantity) as avg_daily_zinc_prod FROM zinc_mine WHERE num_employees < 30 AND country = 'South America' AND extraction_date >= '2017-01-01' AND extraction_date <= '2017-12-31' GROUP BY country;"}
{"prompt":"What is the total number of accidents in the platinum mines in the last year? with given SQL schema CREATE TABLE AccidentsInMines (AccidentID INT, MineID INT, AccidentDate DATE);","completion":"SELECT COUNT(*) FROM AccidentsInMines WHERE (SELECT MineType FROM Mines WHERE Mines.MineID = AccidentsInMines.MineID) = 'Platinum' AND AccidentDate >= DATEADD(year, -1, GETDATE());"}
{"prompt":"How many days in the last month was the data usage for each customer above the average data usage for that customer? with given SQL schema CREATE TABLE daily_usage (customer_id INT, date DATE, data_usage FLOAT); INSERT INTO daily_usage VALUES (1, '2022-01-01', 5), (1, '2022-01-02', 7);","completion":"SELECT customer_id, COUNT(*) as days_above_average FROM (SELECT customer_id, date, data_usage, AVG(data_usage) OVER(PARTITION BY customer_id) as avg_usage FROM daily_usage WHERE date >= DATEADD(month, -1, GETDATE())) daily_usage_avg WHERE data_usage > avg_usage GROUP BY customer_id;"}
{"prompt":"What is the average social impact score for all programs in the programs table? with given SQL schema CREATE TABLE programs (program_id INT, social_impact_score DECIMAL(10,2)); INSERT INTO programs (program_id, social_impact_score) VALUES (1, 8.5), (2, 9.0), (3, 7.5);","completion":"SELECT AVG(social_impact_score) as avg_social_impact_score FROM programs;"}
{"prompt":"What is the average number of victories for players from Japan and South Korea, partitioned by game mode? with given SQL schema CREATE TABLE PlayerVictories (PlayerID INT, GameMode VARCHAR(255), Victories INT, Country VARCHAR(255)); INSERT INTO PlayerVictories (PlayerID, GameMode, Victories, Country) VALUES (1, 'Battle Royale', 25, 'Japan'), (2, 'Team Deathmatch', 18, 'South Korea');","completion":"SELECT GameMode, AVG(Victories) as AvgVictories FROM PlayerVictories WHERE Country IN ('Japan', 'South Korea') GROUP BY GameMode, Country WITH ROLLUP;"}
{"prompt":"What is the most common genre of PC games? with given SQL schema CREATE TABLE GameDesign (GameID INT, GameName VARCHAR(50), Genre VARCHAR(30), Platform VARCHAR(20)); INSERT INTO GameDesign (GameID, GameName, Genre, Platform) VALUES (1, 'Minecraft', 'Sandbox', 'PC'), (2, 'Call of Duty', 'FPS', 'PC'), (3, 'The Sims', 'Simulation', 'PC');","completion":"SELECT Genre, COUNT(*) as GameCount FROM GameDesign WHERE Platform = 'PC' GROUP BY Genre ORDER BY GameCount DESC LIMIT 1;"}
{"prompt":"Find the average soil moisture reading for each crop type in the month of May for 2021. with given SQL schema CREATE TABLE crop_data (id INT, crop_type VARCHAR(255), soil_moisture INT, measurement_date DATE); INSERT INTO crop_data (id, crop_type, soil_moisture, measurement_date) VALUES (1, 'Corn', 60, '2021-05-01'); INSERT INTO crop_data (id, crop_type, soil_moisture, measurement_date) VALUES (2, 'Soybean', 55, '2021-05-03');","completion":"SELECT crop_type, AVG(soil_moisture) as avg_moisture FROM crop_data WHERE measurement_date BETWEEN '2021-05-01' AND '2021-05-31' GROUP BY crop_type;"}
{"prompt":"Find the maximum temperature for each crop type with given SQL schema CREATE TABLE crop (id INT, type VARCHAR(255), temperature FLOAT); INSERT INTO crop (id, type, temperature) VALUES (1, 'corn', 22.5), (2, 'soybean', 20.0), (3, 'cotton', 24.3), (4, 'corn', 25.0), (5, 'soybean', 23.5);","completion":"SELECT type, MAX(temperature) FROM crop GROUP BY type;"}
{"prompt":"How many soil moisture sensors are currently active and located in a specific region? with given SQL schema CREATE TABLE SensorData (sensor_id INT, status VARCHAR(255), crop VARCHAR(255), region VARCHAR(255)); CREATE TABLE SoilMoistureSensor (sensor_id INT, location VARCHAR(255));","completion":"SELECT COUNT(*) FROM SensorData SD JOIN SoilMoistureSensor SMS ON SD.sensor_id = SMS.sensor_id WHERE SD.status = 'active' AND SD.region = 'Region A';"}
{"prompt":"List all farmers who have not serviced their irrigation systems in the last 6 months. with given SQL schema CREATE TABLE farmer_irrigation (id INT, farmer_id INT, system_type VARCHAR(50), service_date DATE); INSERT INTO farmer_irrigation (id, farmer_id, system_type, service_date) VALUES (1, 1, 'Drip', '2021-08-01'), (2, 2, 'Sprinkler', '2021-10-15'), (3, 3, 'Drip', '2021-11-01'), (4, 4, 'Sprinkler', '2022-02-01'), (5, 5, 'Drip', '2022-03-01'), (6, 6, 'Sprinkler', '2022-01-15'), (7, 7, 'Drip', '2021-06-01'), (8, 8, 'Sprinkler', '2022-04-01'), (9, 9, 'Drip', '2021-12-01'), (10, 10, 'Sprinkler', '2022-05-15');","completion":"SELECT farmers.name FROM farmers LEFT JOIN farmer_irrigation ON farmers.id = farmer_irrigation.farmer_id WHERE farmer_irrigation.service_date <= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"prompt":"List the policy areas with the lowest citizen satisfaction scores. with given SQL schema CREATE TABLE Policy (Area VARCHAR(20), Score INT); INSERT INTO Policy (Area, Score) VALUES ('Transportation', 70), ('Education', 85), ('Healthcare', 75), ('PublicSafety', 80);","completion":"SELECT Area, Score FROM (SELECT Area, Score, ROW_NUMBER() OVER (ORDER BY Score) AS RN FROM Policy) X WHERE RN IN (1, 2);"}
{"prompt":"What is the average response time for emergency calls in each borough of New York City in 2022? with given SQL schema CREATE TABLE emergency_calls (borough VARCHAR(255), year INT, response_time FLOAT); INSERT INTO emergency_calls (borough, year, response_time) VALUES ('Manhattan', 2022, 8.5), ('Brooklyn', 2022, 7.8), ('Bronx', 2022, 9.2), ('Queens', 2022, 8.9), ('Staten Island', 2022, 7.6);","completion":"SELECT borough, AVG(response_time) AS avg_response_time FROM emergency_calls WHERE year = 2022 GROUP BY borough;"}
{"prompt":"Show the names of companies that produced any Rare Earth elements in both 2015 and 2020. with given SQL schema CREATE TABLE Producers (ProducerID INT PRIMARY KEY, Name TEXT, ProductionYear INT, RareEarth TEXT, Quantity INT);","completion":"SELECT DISTINCT Name FROM Producers p1 JOIN Producers p2 ON p1.Name = p2.Name WHERE p1.ProductionYear = 2015 AND p2.ProductionYear = 2020;"}
{"prompt":"List the top 5 neighborhoods in Los Angeles with the highest number of listings that have green building certifications. with given SQL schema CREATE TABLE neighborhoods (name VARCHAR(255), city VARCHAR(255), state VARCHAR(255), country VARCHAR(255), PRIMARY KEY (name)); INSERT INTO neighborhoods (name, city, state, country) VALUES ('Silver Lake', 'Los Angeles', 'CA', 'USA');","completion":"SELECT name, COUNT(*) as num_listings FROM real_estate_listings WHERE city = 'Los Angeles' AND green_building_certification = TRUE GROUP BY name ORDER BY num_listings DESC LIMIT 5;"}
{"prompt":"What is the sum of the total square footage of properties in the 'sustainable_urbanism' view that are larger than 2000 square feet? with given SQL schema CREATE VIEW sustainable_urbanism AS SELECT properties.id, properties.city, SUM(properties.square_footage) as total_square_footage FROM properties JOIN sustainable_developments ON properties.id = sustainable_developments.id GROUP BY properties.id, properties.city; INSERT INTO properties (id, city, square_footage) VALUES (1, 'Austin', 1800.0), (2, 'Austin', 2200.0), (3, 'Seattle', 1500.0); INSERT INTO sustainable_developments (id, property_name, low_income_area) VALUES (1, 'Green Heights', true), (2, 'Eco Estates', false), (3, 'Solar Vista', false);","completion":"SELECT SUM(total_square_footage) FROM sustainable_urbanism WHERE total_square_footage > 2000;"}
{"prompt":"What is the total number of sustainable urbanism projects in the state of California? with given SQL schema CREATE TABLE sustainable_urbanism_projects (project_id INT, state VARCHAR(20)); INSERT INTO sustainable_urbanism_projects (project_id, state) VALUES (1, 'California'), (2, 'Oregon'), (3, 'California');","completion":"SELECT COUNT(*) FROM sustainable_urbanism_projects WHERE state = 'California';"}
{"prompt":"How many solar power projects were completed in California and Texas in 2020 and 2021? with given SQL schema CREATE TABLE solar_projects (project_id INT, state VARCHAR(50), completion_year INT); INSERT INTO solar_projects (project_id, state, completion_year) VALUES (1, 'California', 2020), (2, 'Texas', 2021), (3, 'California', 2019), (4, 'Texas', 2020), (5, 'California', 2021), (6, 'Texas', 2019), (7, 'California', 2018), (8, 'Texas', 2018);","completion":"SELECT state, COUNT(*) FROM solar_projects WHERE completion_year IN (2020, 2021) AND state IN ('California', 'Texas') GROUP BY state;"}
{"prompt":"What is the total revenue for a specific cuisine type in a given month? with given SQL schema CREATE TABLE revenue_by_cuisine (restaurant_id INT, cuisine VARCHAR(255), revenue FLOAT, revenue_date DATE); INSERT INTO revenue_by_cuisine (restaurant_id, cuisine, revenue, revenue_date) VALUES (1, 'Italian', 5000.00, '2022-01-01'), (2, 'Mexican', 6000.00, '2022-01-02'), (3, 'Italian', 4000.00, '2022-01-03'), (4, 'Chinese', 7000.00, '2022-01-04'), (5, 'Chinese', 8000.00, '2022-01-05'), (6, 'Italian', 9000.00, '2022-01-06');","completion":"SELECT cuisine, SUM(revenue) as total_revenue FROM revenue_by_cuisine WHERE cuisine = 'Italian' AND revenue_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY cuisine;"}
{"prompt":"Calculate the percentage of revenue generated from circular supply chains? with given SQL schema CREATE TABLE sales (sale_id INT, product_id INT, quantity INT, price DECIMAL, supply_chain TEXT);","completion":"SELECT (SUM(CASE WHEN supply_chain = 'Circular' THEN quantity * price ELSE 0 END) \/ SUM(quantity * price)) * 100 FROM sales;"}
{"prompt":"What is the average weight of spacecrafts for each manufacturing organization? with given SQL schema CREATE TABLE spacecrafts (id INT, name VARCHAR(50), manufacturing_org VARCHAR(50), weight FLOAT); INSERT INTO spacecrafts VALUES (1, 'Voyager 1', 'NASA', 795.5), (2, 'Voyager 2', 'NASA', 782.5), (3, 'Galileo', 'NASA', 2325.0), (4, 'Cassini', 'CNES', 2125.0), (5, 'Rosetta', 'ESA', 3000.0);","completion":"SELECT manufacturing_org, AVG(weight) as avg_weight FROM spacecrafts GROUP BY manufacturing_org;"}
{"prompt":"What is the percentage of games won by the 'Los Angeles Lakers'? with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Golden State Warriors'), (2, 'Los Angeles Lakers'); CREATE TABLE games (game_id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT); INSERT INTO games (game_id, home_team_id, away_team_id, home_team_score, away_team_score) VALUES (1, 1, 2, 100, 90), (2, 2, 1, 80, 90), (3, 1, 2, 110, 100), (4, 2, 1, 120, 110), (5, 1, 2, 105, 100);","completion":"SELECT 100.0 * AVG(CASE WHEN g.home_team_id = 2 THEN 1.0 ELSE 0.0 END + CASE WHEN g.away_team_id = 2 THEN 1.0 ELSE 0.0 END) \/ COUNT(*) as pct_games_won FROM games g;"}
{"prompt":"What is the total number of athletes in the 'Eastern Conference' who have participated in a wellbeing program? with given SQL schema CREATE TABLE athlete_wellbeing (athlete_id INT, athlete_name VARCHAR(50), conference VARCHAR(50), wellbeing_program BOOLEAN); INSERT INTO athlete_wellbeing (athlete_id, athlete_name, conference, wellbeing_program) VALUES (1, 'Athlete A', 'Eastern Conference', TRUE), (2, 'Athlete B', 'Western Conference', FALSE), (3, 'Athlete C', 'Eastern Conference', TRUE), (4, 'Athlete D', 'Eastern Conference', FALSE), (5, 'Athlete E', 'Western Conference', FALSE), (6, 'Athlete F', 'Eastern Conference', TRUE), (7, 'Athlete G', 'Western Conference', FALSE), (8, 'Athlete H', 'Eastern Conference', TRUE);","completion":"SELECT COUNT(*) FROM athlete_wellbeing WHERE conference = 'Eastern Conference' AND wellbeing_program = TRUE;"}
{"prompt":"What is the total number of tickets sold for outdoor stadium events in the summer months? with given SQL schema CREATE TABLE TicketSales (id INT, event_type VARCHAR(255), location VARCHAR(255), tickets_sold INT, month INT); INSERT INTO TicketSales (id, event_type, location, tickets_sold, month) VALUES (1, 'Concert', 'Outdoor Stadium', 12000, 6), (2, 'Sports Game', 'Indoor Arena', 8000, 7), (3, 'Festival', 'Outdoor Stadium', 15000, 8);","completion":"SELECT SUM(tickets_sold) FROM TicketSales WHERE location = 'Outdoor Stadium' AND month BETWEEN 6 AND 8;"}
{"prompt":"How many security incidents were recorded per month in the year 2021? with given SQL schema CREATE TABLE security_incidents (id INT, incident_date TIMESTAMP); INSERT INTO security_incidents (id, incident_date) VALUES (1, '2021-01-01 10:00:00'), (2, '2021-02-02 11:00:00');","completion":"SELECT DATE_FORMAT(incident_date, '%Y-%m') as month, COUNT(*) as total_incidents FROM security_incidents WHERE incident_date >= '2021-01-01' AND incident_date < '2022-01-01' GROUP BY month;"}
{"prompt":"What is the maximum trip duration for public transportation in Berlin? with given SQL schema CREATE TABLE public_transport (transport_id INT, trip_duration INT); INSERT INTO public_transport (transport_id, trip_duration) VALUES (1, 30), (2, 45), (3, 60), (4, 75);","completion":"SELECT MAX(trip_duration) as max_duration FROM public_transport;"}
{"prompt":"What was the average retail sales revenue per 'Shirt' item in the USA? with given SQL schema CREATE TABLE RetailSales (id INT, garment_type VARCHAR(10), country VARCHAR(20), revenue DECIMAL(10, 2)); INSERT INTO RetailSales (id, garment_type, country, revenue) VALUES (1, 'Shirt', 'USA', 50.99), (2, 'Dress', 'USA', 75.50), (3, 'Shirt', 'Canada', 45.25);","completion":"SELECT AVG(revenue) as avg_revenue_per_item FROM RetailSales WHERE garment_type = 'Shirt' AND country = 'USA';"}
{"prompt":"What is the total number of electric vehicle adoptions in each country? with given SQL schema CREATE TABLE CountryEVAdoptions (Country VARCHAR(255), Adoption INT); INSERT INTO CountryEVAdoptions (Country, Adoption) VALUES ('USA', 500000), ('China', 1000000), ('Germany', 300000), ('Japan', 400000);","completion":"SELECT Country, SUM(Adoption) AS TotalAdoption FROM CountryEVAdoptions GROUP BY Country;"}
{"prompt":"How many visitors attended the Renaissance Art exhibition in the last week of February 2022? with given SQL schema CREATE TABLE exhibitions (exhibition_id INT, name VARCHAR(255)); INSERT INTO exhibitions (exhibition_id, name) VALUES (1, 'Classical Art'), (2, 'Renaissance Art'); CREATE TABLE visitors (visitor_id INT, exhibition_id INT, visit_date DATE); INSERT INTO visitors (visitor_id, exhibition_id, visit_date) VALUES (1, 1, '2022-02-22'), (2, 1, '2022-02-23'), (3, 2, '2022-02-24'), (4, 2, '2022-02-25'), (5, 2, '2022-02-26'), (6, 2, '2022-02-28');","completion":"SELECT COUNT(visitor_id) as num_visitors FROM visitors WHERE exhibition_id = 2 AND visit_date >= '2022-02-22' AND visit_date <= '2022-02-28';"}
{"prompt":"What is the total waste generation by material type for the top 2 contributors in 2022? with given SQL schema CREATE TABLE waste_generation (year INT, location VARCHAR(255), material VARCHAR(255), weight_tons INT); INSERT INTO waste_generation (year, location, material, weight_tons) VALUES (2022, 'New York', 'Plastic', 15000), (2022, 'New York', 'Paper', 20000), (2022, 'Los Angeles', 'Plastic', 20000), (2022, 'Los Angeles', 'Paper', 25000), (2022, 'Los Angeles', 'Glass', 12000);","completion":"SELECT location, material, SUM(weight_tons) as total_weight FROM waste_generation WHERE year = 2022 GROUP BY location, material ORDER BY SUM(weight_tons) DESC LIMIT 2;"}
{"prompt":"What is the average monthly water usage for residential customers in the San Francisco region for the year 2020? with given SQL schema CREATE TABLE water_usage(customer_id INT, region VARCHAR(50), usage FLOAT, year INT, month INT); INSERT INTO water_usage(customer_id, region, usage, year, month) VALUES (1, 'San Francisco', 15.3, 2020, 1), (2, 'San Francisco', 14.8, 2020, 2);","completion":"SELECT AVG(usage) FROM water_usage WHERE region = 'San Francisco' AND year = 2020 GROUP BY month;"}
{"prompt":"What is the total water usage in Arizona and Nevada? with given SQL schema CREATE TABLE water_usage(state VARCHAR(20), volume_used INT); INSERT INTO water_usage VALUES('Arizona', 8000), ('Nevada', 6000);","completion":"SELECT volume_used FROM water_usage WHERE state IN ('Arizona', 'Nevada');"}
{"prompt":"What was the total wastewater treated per region in 2020? with given SQL schema CREATE TABLE wastewater_treatment (region TEXT, month TEXT, volume FLOAT); INSERT INTO wastewater_treatment (region, month, volume) VALUES ('North', 'Jan', 123456.7), ('North', 'Feb', 134567.8), ('South', 'Jan', 234567.8), ('South', 'Feb', 345678.9);","completion":"SELECT region, SUM(volume) as total_volume FROM wastewater_treatment WHERE YEAR(STR_TO_DATE(month, '%b')) = 2020 GROUP BY region;"}
{"prompt":"List the top 5 most popular workouts in New York based on the number of unique participants in the last month. with given SQL schema CREATE TABLE Workouts (WorkoutID INT, WorkoutName VARCHAR(50), WorkoutType VARCHAR(50), Participants INT, WorkoutDate DATE);","completion":"SELECT WorkoutName, COUNT(DISTINCT Participants) AS UniqueParticipants FROM Workouts WHERE WorkoutDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND State = 'New York' GROUP BY WorkoutName ORDER BY UniqueParticipants DESC LIMIT 5;"}
{"prompt":"What is the average heart rate for runners in the morning? with given SQL schema CREATE TABLE workout_data (id INT, user_id INT, activity_type VARCHAR(20), heart_rate INT, workout_time TIME); INSERT INTO workout_data (id, user_id, activity_type, heart_rate, workout_time) VALUES (1, 10, 'Running', 140, '07:00:00'), (2, 10, 'Cycling', 120, '08:00:00'), (3, 15, 'Running', 150, '06:00:00');","completion":"SELECT AVG(heart_rate) FROM workout_data WHERE activity_type = 'Running' AND EXTRACT(HOUR FROM workout_time) BETWEEN 0 AND 6;"}
{"prompt":"For users from the USA, calculate the running total of transaction amounts for each transaction type, partitioned by user. with given SQL schema CREATE TABLE users (id INT, country VARCHAR(20)); INSERT INTO users (id, country) VALUES (1, 'India'), (2, 'USA'), (3, 'USA'); CREATE TABLE transactions (id INT, user_id INT, type VARCHAR(20), amount DECIMAL(10, 2), transaction_date DATE); INSERT INTO transactions (id, user_id, type, amount, transaction_date) VALUES (1, 1, 'credit', 100.00, '2022-01-01'), (2, 1, 'debit', 50.00, '2022-01-05'), (3, 2, 'credit', 200.00, '2022-01-03'), (4, 2, 'debit', 150.00, '2022-01-31'), (5, 3, 'credit', 300.00, '2022-02-01');","completion":"SELECT user_id, type, amount, SUM(amount) OVER (PARTITION BY user_id, type ORDER BY transaction_date) as running_total FROM transactions INNER JOIN users ON transactions.user_id = users.id WHERE users.country = 'USA';"}
{"prompt":"Identify the rural infrastructure projects in 'RuralDev' database that have exceeded their budget. with given SQL schema CREATE TABLE rural_infrastructure_budget (id INT, name VARCHAR(255), budget FLOAT, actual_cost FLOAT); INSERT INTO rural_infrastructure_budget (id, name, budget, actual_cost) VALUES (1, 'Water Supply System', 450000.00, 500000.00), (2, 'Solar Farm', 900000.00, 1000000.00), (3, 'School', 180000.00, 200000.00);","completion":"SELECT name FROM rural_infrastructure_budget WHERE actual_cost > budget;"}
{"prompt":"What is the average age of women farmers who have completed agricultural training programs in Kenya? with given SQL schema CREATE TABLE farmers (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), country VARCHAR(50)); INSERT INTO farmers (id, name, age, gender, country) VALUES (1, 'Jane Njeri', 35, 'Female', 'Kenya'); INSERT INTO farmers (id, name, age, gender, country) VALUES (2, 'Anna Wangari', 40, 'Female', 'Kenya'); CREATE TABLE trainings (id INT, farmer_id INT, title VARCHAR(50), completion_date DATE); INSERT INTO trainings (id, farmer_id, title, completion_date) VALUES (1, 1, 'Agroecology Course', '2020-03-01'); INSERT INTO trainings (id, farmer_id, title, completion_date) VALUES (2, 2, 'Organic Farming Workshop', '2019-08-15');","completion":"SELECT AVG(age) FROM farmers f JOIN trainings t ON f.id = t.farmer_id WHERE f.gender = 'Female' AND f.country = 'Kenya';"}
{"prompt":"What is the earliest launch date for each space mission? with given SQL schema CREATE TABLE SpaceMission (ID INT, Name VARCHAR(50), LaunchDate DATE);","completion":"SELECT Name, MIN(LaunchDate) AS EarliestLaunchDate FROM SpaceMission GROUP BY Name;"}
{"prompt":"Find the number of animals in each status category with given SQL schema CREATE TABLE animals (id INT, name VARCHAR(50), status VARCHAR(20)); INSERT INTO animals (id, name, status) VALUES (1, 'Tiger', 'Endangered'); INSERT INTO animals (id, name, status) VALUES (2, 'Elephant', 'Vulnerable'); INSERT INTO animals (id, name, status) VALUES (3, 'Rhino', 'Critically Endangered'); INSERT INTO animals (id, name, status) VALUES (4, 'Panda', 'Threatened');","completion":"SELECT status, COUNT(*) FROM animals GROUP BY status;"}
{"prompt":"How many fish are there in the 'Tuna' species in the 'Caribbean' region? with given SQL schema CREATE TABLE Farm (id INT, farm_name TEXT, region TEXT, species TEXT, weight FLOAT, age INT); INSERT INTO Farm (id, farm_name, region, species, weight, age) VALUES (1, 'OceanPacific', 'Pacific', 'Tilapia', 500.3, 2), (2, 'SeaBreeze', 'Atlantic', 'Salmon', 300.1, 1), (3, 'OceanPacific', 'Pacific', 'Tilapia', 600.5, 3), (4, 'FarmX', 'Atlantic', 'Salmon', 700.2, 4), (5, 'SeaBreeze', 'Atlantic', 'Tilapia', 400, 2), (6, 'AquaFarm', 'Indian Ocean', 'Tuna', 900, 5), (7, 'CoralReef', 'Caribbean', 'Tuna', 1000, 6);","completion":"SELECT COUNT(*) FROM Farm WHERE species = 'Tuna' AND region = 'Caribbean';"}
{"prompt":"What was the average number of attendees for events in the 'Music' category? with given SQL schema CREATE TABLE event_attendance (id INT, event_id INT, attendee_count INT); INSERT INTO event_attendance (id, event_id, attendee_count) VALUES (1, 1, 250), (2, 2, 320), (3, 3, 175); CREATE TABLE events (id INT, category VARCHAR(10)); INSERT INTO events (id, category) VALUES (1, 'Dance'), (2, 'Music'), (3, 'Theater');","completion":"SELECT AVG(attendee_count) FROM event_attendance JOIN events ON event_attendance.event_id = events.id WHERE events.category = 'Music';"}
{"prompt":"What was the average number of construction laborers employed in the state of Illinois in 2019? with given SQL schema CREATE TABLE Labor_Statistics (id INT, employee_count INT, year INT, state VARCHAR(20)); INSERT INTO Labor_Statistics (id, employee_count, year, state) VALUES (1, 12000, 2019, 'Illinois');","completion":"SELECT AVG(employee_count) FROM Labor_Statistics WHERE year = 2019 AND state = 'Illinois';"}
{"prompt":"What is the average temperature in the coldest month for each production site? with given SQL schema CREATE TABLE Production_Sites (Site_ID INT, Site_Name TEXT, Average_Temperature DECIMAL(5,2)); INSERT INTO Production_Sites (Site_ID, Site_Name, Average_Temperature) VALUES (1, 'Site A', 15.6), (2, 'Site B', 12.9), (3, 'Site C', 18.7);","completion":"SELECT Site_Name, MIN(Average_Temperature) OVER (PARTITION BY Site_ID) as Coldest_Month_Avg_Temp FROM Production_Sites;"}
{"prompt":"Identify the sectors with zero emissions in the given dataset. with given SQL schema CREATE TABLE Emissions (sector VARCHAR(255), emissions FLOAT); INSERT INTO Emissions VALUES ('Energy', 3000.0), ('Industry', 2500.0), ('Agriculture', 0.0), ('Transportation', 1500.0);","completion":"SELECT sector FROM Emissions WHERE emissions = 0;"}
{"prompt":"Insert a new clinical trial for DrugE in 2022 in France. with given SQL schema CREATE TABLE clinical_trials (trial_id INT, drug_name VARCHAR(255), year INT, country VARCHAR(255)); INSERT INTO clinical_trials (trial_id, drug_name, year, country) VALUES (1, 'DrugA', 2018, 'USA'), (2, 'DrugB', 2019, 'Canada'), (3, 'DrugC', 2020, 'Germany');","completion":"INSERT INTO clinical_trials (trial_id, drug_name, year, country) VALUES (4, 'DrugE', 2022, 'France');"}
{"prompt":"What is the total sales revenue for each drug, ranked by the highest sales revenue first, for the year 2019? with given SQL schema CREATE TABLE sales_revenue_2019 (sales_revenue_id INT, drug_name VARCHAR(255), year INT, sales_revenue DECIMAL(10,2)); INSERT INTO sales_revenue_2019 (sales_revenue_id, drug_name, year, sales_revenue) VALUES (1, 'DrugG', 2019, 50000), (2, 'DrugH', 2019, 45000), (3, 'DrugI', 2019, 55000), (4, 'DrugG', 2019, 52000), (5, 'DrugH', 2019, 48000), (6, 'DrugI', 2019, 58000);","completion":"SELECT drug_name, SUM(sales_revenue) as total_sales_revenue FROM sales_revenue_2019 WHERE year = 2019 GROUP BY drug_name ORDER BY total_sales_revenue DESC;"}
{"prompt":"What is the number of vaccination centers providing COVID-19 vaccines and flu shots, differentiated by type, for each state, from the vaccination_centers and state_data tables? with given SQL schema CREATE TABLE vaccination_centers (center_id TEXT, state TEXT, vaccine_type TEXT); INSERT INTO vaccination_centers (center_id, state, vaccine_type) VALUES ('Center1', 'StateA', 'COVID-19'), ('Center2', 'StateA', 'Flu'), ('Center3', 'StateB', 'COVID-19'), ('Center4', 'StateB', 'Flu'); CREATE TABLE state_data (state TEXT, total_centers INT); INSERT INTO state_data (state, total_centers) VALUES ('StateA', 500), ('StateB', 600), ('StateC', 700), ('StateD', 800);","completion":"SELECT state, vaccine_type, COUNT(*) AS center_count FROM vaccination_centers WHERE vaccine_type IN ('COVID-19', 'Flu') GROUP BY state, vaccine_type;"}
{"prompt":"Which companies were founded in the US and have received funding from both venture capital and angel investors? with given SQL schema CREATE TABLE Companies (id INT, name TEXT, country TEXT); INSERT INTO Companies (id, name, country) VALUES (1, 'Acme Inc', 'USA'); INSERT INTO Companies (id, name, country) VALUES (2, 'Brick Co', 'USA'); CREATE TABLE Funding (id INT, company_id INT, investor_type TEXT, amount INT); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (1, 1, 'VC', 5000000); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (2, 1, 'Angel', 2000000); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (3, 2, 'VC', 7000000);","completion":"SELECT Companies.name FROM Companies INNER JOIN Funding funding_vc ON Companies.id = funding_vc.company_id INNER JOIN Funding funding_angel ON Companies.id = funding_angel.company_id WHERE Companies.country = 'USA' AND funding_vc.investor_type = 'VC' AND funding_angel.investor_type = 'Angel'"}
{"prompt":"What is the change in yield for each crop over time, for a specific farm? with given SQL schema CREATE TABLE farming (id INT, name TEXT, location TEXT, crop TEXT, yield INT, year INT); INSERT INTO farming VALUES (1, 'Smith Farm', 'Colorado', 'Corn', 120, 2020), (2, 'Brown Farm', 'Nebraska', 'Soybeans', 45, 2020), (3, 'Jones Farm', 'Iowa', 'Wheat', 80, 2020), (1, 'Smith Farm', 'Colorado', 'Corn', 130, 2021), (2, 'Brown Farm', 'Nebraska', 'Soybeans', 50, 2021), (3, 'Jones Farm', 'Iowa', 'Wheat', 85, 2021);","completion":"SELECT crop, (yield - LAG(yield) OVER (PARTITION BY crop, name ORDER BY year)) as yield_change FROM farming WHERE name = 'Smith Farm';"}
{"prompt":"List all records from the policy table related to service animals or emotional support animals. with given SQL schema CREATE TABLE policy (id INT, policy_name VARCHAR(255), description VARCHAR(255)); INSERT INTO policy (id, policy_name, description) VALUES (1, 'Service Animal Policy', 'Policy regarding the use of service animals on campus'); INSERT INTO policy (id, policy_name, description) VALUES (2, 'Emotional Support Animal Policy', 'Policy regarding the use of emotional support animals in student housing');","completion":"SELECT policy_name, description FROM policy WHERE policy_name LIKE '%Service Animal%' OR policy_name LIKE '%Emotional Support Animal%';"}
{"prompt":"List the names and types of all policy advocacy groups that have received funding in the last year, sorted by the amount of funding received. with given SQL schema CREATE TABLE PolicyAdvocacyGroups (GroupID INT, GroupName VARCHAR(100), GroupType VARCHAR(50)); INSERT INTO PolicyAdvocacyGroups(GroupID, GroupName, GroupType) VALUES (1, 'Autistic Self Advocacy Network', 'Autism'), (2, 'National Council on Independent Living', 'Disability Rights'), (3, 'American Association of People with Disabilities', 'Disability Rights'); CREATE TABLE Funding (FundingID INT, GroupID INT, Amount DECIMAL(10, 2), FundingDate DATE); INSERT INTO Funding(FundingID, GroupID, Amount, FundingDate) VALUES (1, 1, 5000, '2020-01-01'), (2, 2, 7000, '2021-01-01'), (3, 3, 9000, '2018-01-01');","completion":"SELECT PAG.GroupName, PAG.GroupType, F.Amount FROM PolicyAdvocacyGroups PAG INNER JOIN Funding F ON PAG.GroupID = F.GroupID WHERE F.FundingDate >= DATEADD(year, -1, GETDATE()) ORDER BY F.Amount DESC;"}
{"prompt":"What is the average sea level rise in the Atlantic Ocean over the last 10 years? with given SQL schema CREATE TABLE sea_level (year INT, ocean VARCHAR(255), rise FLOAT); INSERT INTO sea_level (year, ocean, rise) VALUES (2012, 'Atlantic Ocean', 0.4), (2013, 'Atlantic Ocean', 0.5);","completion":"SELECT AVG(rise) FROM sea_level WHERE ocean = 'Atlantic Ocean' AND year BETWEEN 2012 AND 2021;"}
{"prompt":"What is the sum of all oceanographic research grants awarded? with given SQL schema CREATE TABLE oceanographic_research_grants (grant_id INT, amount FLOAT); INSERT INTO oceanographic_research_grants (grant_id, amount) VALUES (1, 50000.0), (2, 75000.0), (3, 100000.0);","completion":"SELECT SUM(amount) FROM oceanographic_research_grants;"}
{"prompt":"What is the maximum balance of any digital asset with a type of 'asset'? with given SQL schema CREATE TABLE digital_assets (id INT, name TEXT, balance INT, type TEXT); INSERT INTO digital_assets (id, name, balance, type) VALUES (1, 'Asset1', 50, 'token'), (2, 'Asset2', 100, 'asset'), (3, 'Asset3', 150, 'token'), (4, 'Asset4', 200, 'asset');","completion":"SELECT MAX(digital_assets.balance) AS max_balance FROM digital_assets WHERE digital_assets.type = 'asset';"}
{"prompt":"Calculate the average number of years of experience for artists from each country in the 'ArtistsDemographics' table, ordered by the average in descending order. with given SQL schema CREATE TABLE ArtistsDemographics (ArtistID INT, Age INT, Gender VARCHAR(10), Nationality VARCHAR(50), YearsOfExperience INT); INSERT INTO ArtistsDemographics (ArtistID, Age, Gender, Nationality, YearsOfExperience) VALUES (1, 45, 'Male', 'American', 15), (2, 34, 'Female', 'Canadian', 8), (3, 50, 'Male', 'British', 22), (4, 35, 'Female', 'Mexican', 10), (5, 40, 'Non-binary', 'Australian', 12);","completion":"SELECT Nationality, AVG(YearsOfExperience) AS AvgYearsOfExperience FROM ArtistsDemographics GROUP BY Nationality ORDER BY AvgYearsOfExperience DESC;"}
{"prompt":"What is the total attendance for each cultural event in the past year, ordered from highest to lowest? with given SQL schema CREATE TABLE cultural_events (event_id INT, event_name VARCHAR(255), event_date DATE); INSERT INTO cultural_events (event_id, event_name, event_date) VALUES (1, 'Art Exhibit', '2021-06-01'), (2, 'Theatre Play', '2021-07-15'), (3, 'Music Concert', '2021-08-20');","completion":"SELECT event_name, SUM(attendance) as total_attendance FROM events_attendance JOIN cultural_events ON events_attendance.event_id = cultural_events.event_id WHERE events_attendance.attendance_date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY event_name ORDER BY total_attendance DESC;"}
{"prompt":"What is the total number of artworks created by artists from Asia? with given SQL schema CREATE TABLE artworks (id INT, artist VARCHAR(100), collection VARCHAR(50), region VARCHAR(10)); INSERT INTO artworks (id, artist, collection, region) VALUES (1, 'Min', 'Asian Collection', 'Asia'), (2, 'Claudia', 'European Collection', 'Europe'), (3, 'Hiroshi', 'Asian Collection', 'Asia');","completion":"SELECT COUNT(*) FROM artworks WHERE region = 'Asia';"}
{"prompt":"How many peacekeeping operations were conducted in 2014? with given SQL schema CREATE TABLE PeacekeepingOperations (Year INT, Operation VARCHAR(50), Country VARCHAR(50)); INSERT INTO PeacekeepingOperations (Year, Operation, Country) VALUES (2014, 'Operation 1', 'Country 1'), (2014, 'Operation 2', 'Country 2');","completion":"SELECT COUNT(*) FROM PeacekeepingOperations WHERE Year = 2014;"}
{"prompt":"Update the 'peace_agreement_signed' column in the 'peacekeeping_operations' table to 'Yes' for 'Operation United shield' with given SQL schema CREATE TABLE peacekeeping_operations (operation_id INT PRIMARY KEY, operation_name VARCHAR(50), start_date DATE, end_date DATE, participating_countries INT, peace_agreement_signed VARCHAR(50));","completion":"UPDATE peacekeeping_operations SET peace_agreement_signed = 'Yes' WHERE operation_name = 'Operation United shield';"}
{"prompt":"What is the three-year trend of military innovation expenditure for each nation, ranked from highest to lowest? with given SQL schema CREATE TABLE MilitaryInnovation (Nation VARCHAR(50), Year INT, Expenditure DECIMAL(10,2)); INSERT INTO MilitaryInnovation (Nation, Year, Expenditure) VALUES ('USA', 2019, 500), ('China', 2019, 400), ('Russia', 2019, 300), ('USA', 2020, 550), ('China', 2020, 450), ('Russia', 2020, 350), ('USA', 2021, 600), ('China', 2021, 500), ('Russia', 2021, 400);","completion":"SELECT Nation, AVG(Expenditure) OVER (PARTITION BY Nation ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AvgExpenditure, RANK() OVER (ORDER BY AVG(Expenditure) DESC) AS Rank FROM MilitaryInnovation GROUP BY Nation ORDER BY Rank;"}
{"prompt":"Find the average age of customers in each city who have made a transaction over 5000 in the last 6 months. with given SQL schema CREATE TABLE customers (id INT, name VARCHAR(50), age INT, city VARCHAR(50)); CREATE TABLE transactions (id INT, customer_id INT, transaction_amount DECIMAL(10, 2), transaction_date DATE); INSERT INTO transactions (id, customer_id, transaction_amount, transaction_date) VALUES (1, 1, 6000.00, '2022-01-01'), (2, 2, 9000.00, '2022-02-01');","completion":"SELECT city, AVG(age) as avg_age FROM customers JOIN transactions ON customers.id = transactions.customer_id WHERE transaction_amount > 5000 AND transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY city;"}
{"prompt":"How many transactions occurred in each region? with given SQL schema CREATE TABLE transactions (transaction_id INT, customer_id INT, region VARCHAR(20)); INSERT INTO transactions (transaction_id, customer_id, region) VALUES (1, 1, 'West Coast'), (2, 2, 'East Coast'), (3, 3, 'West Coast'), (4, 4, 'North East');","completion":"SELECT region, COUNT(*) FROM transactions GROUP BY region;"}
{"prompt":"Calculate average sustainability score for each location with given SQL schema CREATE TABLE suppliers (id INT, name VARCHAR(255), location VARCHAR(255), sustainability_score FLOAT); INSERT INTO suppliers (id, name, location, sustainability_score) VALUES (1, 'Supplier A', 'New York', 8.5), (2, 'Supplier B', 'Los Angeles', 9.2), (3, 'Supplier C', 'Chicago', 7.8);","completion":"SELECT location, AVG(sustainability_score) FROM suppliers GROUP BY location;"}
{"prompt":"Delete all records from the 'machines' table where the 'manufacturing_country' is 'Germany' with given SQL schema CREATE TABLE machines (id INT PRIMARY KEY, name VARCHAR(100), manufacturing_country VARCHAR(50));","completion":"DELETE FROM machines WHERE manufacturing_country = 'Germany';"}
{"prompt":"Find the number of workforce training sessions per team, ordered by the total number of training sessions in descending order. with given SQL schema CREATE TABLE workforce_training (team VARCHAR(50), total_hours FLOAT); INSERT INTO workforce_training (team, total_hours) VALUES ('engineering', 12.3), ('production', 14.7), ('maintenance', NULL);","completion":"SELECT team, ROW_NUMBER() OVER (ORDER BY total_hours DESC) AS rank FROM workforce_training WHERE total_hours IS NOT NULL;"}
{"prompt":"What is the total number of workers in each department across all factories? with given SQL schema CREATE TABLE factories (factory_id INT, department VARCHAR(255)); INSERT INTO factories VALUES (1, 'Assembly'), (1, 'Quality Control'), (2, 'Design'), (2, 'Testing'); CREATE TABLE workers (worker_id INT, factory_id INT, department VARCHAR(255), role VARCHAR(255)); INSERT INTO workers VALUES (1, 1, 'Assembly', 'Engineer'), (2, 1, 'Assembly', 'Technician'), (3, 1, 'Quality Control', 'Inspector'), (4, 2, 'Design', 'Architect'), (5, 2, 'Testing', 'Tester');","completion":"SELECT f.department, COUNT(w.worker_id) as total_workers FROM factories f JOIN workers w ON f.factory_id = w.factory_id GROUP BY f.department;"}
{"prompt":"What is the average age of healthcare workers in 'rural_hospitals'? with given SQL schema CREATE TABLE if not exists 'rural_hospitals' (id INT, name TEXT, address TEXT, worker_age INT, PRIMARY KEY(id));","completion":"SELECT AVG(worker_age) FROM 'rural_hospitals';"}
{"prompt":"What is the number of hospitals in each state, ordered by the number of hospitals? with given SQL schema CREATE TABLE hospitals (id INT, state VARCHAR(255), name VARCHAR(255)); INSERT INTO hospitals (id, state, name) VALUES (1, 'NY', 'Hospital A'), (2, 'CA', 'Hospital B'), (3, 'TX', 'Hospital C');","completion":"SELECT state, COUNT(*) as hospital_count FROM hospitals GROUP BY state ORDER BY hospital_count DESC;"}
{"prompt":"List the names of organizations that have made social impact investments in Latin America. with given SQL schema CREATE TABLE social_impact_investments (investment_id INT, organization_id INT, region VARCHAR(50)); CREATE TABLE organizations (organization_id INT, organization_name VARCHAR(100)); INSERT INTO social_impact_investments (investment_id, organization_id, region) VALUES (1, 1, 'Africa'), (2, 2, 'Europe'), (3, 3, 'Asia'), (4, 5, 'Latin America'); INSERT INTO organizations (organization_id, organization_name) VALUES (1, 'Global Impact Fund'), (2, 'Renewable Energy Foundation'), (3, 'Community Housing Initiative'), (5, 'Sustainable Agriculture Partners');","completion":"SELECT o.organization_name FROM social_impact_investments i INNER JOIN organizations o ON i.organization_id = o.organization_id WHERE i.region = 'Latin America';"}
{"prompt":"What is the minimum response time for cybersecurity incidents in the last year? with given SQL schema CREATE TABLE cybersecurity_responses (id INT, incident_id INT, response_time INT); INSERT INTO cybersecurity_responses (id, incident_id, response_time) VALUES (1, 1, 60), (2, 2, 90), (3, 3, 120); CREATE VIEW recent_cybersecurity_responses AS SELECT * FROM cybersecurity_responses WHERE incident_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);","completion":"SELECT MIN(response_time) FROM recent_cybersecurity_responses;"}
{"prompt":"How many new donors did we acquire in Q2 and Q3 of 2021? with given SQL schema CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(50), first_donation_date DATE);","completion":"SELECT COUNT(*) FROM (SELECT donor_id FROM Donors WHERE first_donation_date BETWEEN '2021-04-01' AND '2021-09-30' GROUP BY donor_id HAVING COUNT(*) = 1);"}
{"prompt":"Insert a new record in the 'courses' table with 'course_name' as 'Introduction to Open Pedagogy' and 'course_duration' as '15 weeks' with given SQL schema CREATE TABLE courses (course_id INT, course_name VARCHAR(50), course_duration VARCHAR(20));","completion":"INSERT INTO courses (course_name, course_duration) VALUES ('Introduction to Open Pedagogy', '15 weeks');"}
{"prompt":"Calculate the maximum carbon price in Germany and Norway? with given SQL schema CREATE TABLE carbon_prices_gn (country VARCHAR(20), price DECIMAL(5,2)); INSERT INTO carbon_prices_gn (country, price) VALUES ('Germany', 30.50), ('Germany', 31.20), ('Germany', 32.00), ('Norway', 40.00), ('Norway', 41.00), ('Norway', 42.00);","completion":"SELECT MAX(price) FROM carbon_prices_gn WHERE country IN ('Germany', 'Norway');"}
{"prompt":"What is the carbon price in Europe and Australia for the last quarter of 2020? with given SQL schema CREATE TABLE CarbonPrices (Country TEXT, Year INT, Quarter INT, CarbonPrice NUMBER); INSERT INTO CarbonPrices (Country, Year, Quarter, CarbonPrice) VALUES ('Europe', 2020, 4, 25), ('Australia', 2020, 4, 15); CREATE TABLE CarbonTaxes (Country TEXT, Year INT, Quarter INT, CarbonPrice NUMBER); INSERT INTO CarbonTaxes (Country, Year, Quarter, CarbonPrice) VALUES ('Europe', 2019, 4, 20), ('Australia', 2019, 4, 10);","completion":"SELECT Context.Country, Context.CarbonPrice FROM ( SELECT * FROM CarbonPrices WHERE CarbonPrices.Country IN ('Europe', 'Australia') AND CarbonPrices.Year = 2020 AND CarbonPrices.Quarter = 4 UNION SELECT * FROM CarbonTaxes WHERE CarbonTaxes.Country IN ('Europe', 'Australia') AND CarbonTaxes.Year = 2020 AND CarbonTaxes.Quarter = 4 ) AS Context;"}
{"prompt":"What is the average production of wells in 'FieldB' for the last quarter of 2019? with given SQL schema CREATE TABLE wells (well_id varchar(10), field varchar(10), production int, datetime date); INSERT INTO wells (well_id, field, production, datetime) VALUES ('W001', 'FieldB', 1200, '2019-10-01'), ('W002', 'FieldB', 1400, '2019-11-01');","completion":"SELECT AVG(production) FROM wells WHERE field = 'FieldB' AND datetime BETWEEN DATE_SUB(LAST_DAY('2019-12-01'), INTERVAL 3 MONTH) AND LAST_DAY('2019-12-01');"}
{"prompt":"Which rugby team has the most tries scored in the 'tries' table? with given SQL schema CREATE TABLE tries (try_id INT, player_id INT, match_id INT, team_id INT, tries INT); INSERT INTO tries (try_id, player_id, match_id, team_id, tries) VALUES (1, 4, 6, 403, 1);","completion":"SELECT team_id, SUM(tries) FROM tries GROUP BY team_id ORDER BY SUM(tries) DESC LIMIT 1;"}
{"prompt":"Who is the player with the most points scored in a single NBA season? with given SQL schema CREATE TABLE nba_players (player_name VARCHAR(100), points INT, assists INT, rebounds INT); INSERT INTO nba_players VALUES ('Michael Jordan', 3838, 527, 1404), ('LeBron James', 3627, 650, 1081), ('Kareem Abdul-Jabbar', 3838, 454, 1375), ('James Harden', 3044, 876, 534);","completion":"SELECT player_name, points FROM nba_players WHERE points = (SELECT MAX(points) FROM nba_players);"}
{"prompt":"What is the previous project's end date for each project, ordered by start date? with given SQL schema CREATE TABLE projects_ext (id INT, project_name VARCHAR(50), location VARCHAR(50), start_date DATE, end_date DATE, budget DECIMAL(10,2)); INSERT INTO projects_ext (id, project_name, location, start_date, end_date, budget) VALUES (1, 'Rebuilding School', 'Haiti', '2022-05-01', '2023-04-30', 150000.00), (2, 'Water Supply', 'Pakistan', '2022-07-01', '2024-06-30', 200000.00);","completion":"SELECT project_name, start_date, LAG(end_date) OVER (ORDER BY start_date) AS prev_end_date FROM projects_ext ORDER BY start_date;"}
{"prompt":"Which advocacy campaigns were launched in 'advocacy' table, and when? with given SQL schema CREATE TABLE advocacy (id INT, campaign VARCHAR(50), launch_date DATE, end_date DATE); INSERT INTO advocacy (id, campaign, launch_date, end_date) VALUES (1, 'Child Rights', '2021-01-01', '2021-12-31'), (2, 'Gender Equality', '2021-02-01', '2021-12-31');","completion":"SELECT campaign, launch_date FROM advocacy;"}
{"prompt":"Find the difference in technology accessibility scores between the first and last quarters for each region. with given SQL schema CREATE TABLE accessibility (region VARCHAR(50), quarter INT, score INT); INSERT INTO accessibility (region, quarter, score) VALUES ('Americas', 1, 80), ('Americas', 2, 85), ('Americas', 3, 75), ('Americas', 4, 90), ('APAC', 1, 70), ('APAC', 2, 75), ('APAC', 3, 80), ('APAC', 4, 85);","completion":"SELECT region, LAG(score, 3) OVER (PARTITION BY region ORDER BY quarter) - score as diff FROM accessibility;"}
{"prompt":"What is the total number of devices for accessibility in Europe? with given SQL schema CREATE TABLE device_accessibility_europe (country VARCHAR(20), device VARCHAR(20), cost FLOAT); INSERT INTO device_accessibility_europe (country, device, cost) VALUES ('Germany', 'Screen Reader', 110.00), ('France', 'Adaptive Keyboard', 95.00), ('United Kingdom', 'Speech Recognition Software', 130.00);","completion":"SELECT SUM(cost) FROM device_accessibility_europe WHERE country = 'Europe';"}
{"prompt":"Who are the top 3 contributors in terms of total donations? with given SQL schema CREATE TABLE donors (id INT, donor_name VARCHAR(50), donation_amount DECIMAL(5,2), donation_date DATE); INSERT INTO donors (id, donor_name, donation_amount, donation_date) VALUES (1, 'Donor1', 1000.00, '2021-01-01'); INSERT INTO donors (id, donor_name, donation_amount, donation_date) VALUES (2, 'Donor2', 1500.00, '2021-02-15'); INSERT INTO donors (id, donor_name, donation_amount, donation_date) VALUES (3, 'Donor3', 2000.00, '2021-03-30');","completion":"SELECT donor_name, SUM(donation_amount) OVER (ORDER BY donation_amount DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS total_donations, RANK() OVER (ORDER BY SUM(donation_amount) DESC) AS rank FROM donors;"}
{"prompt":"Show the number of donations made by each donor with given SQL schema CREATE TABLE donations (id INT, donor_id INT, amount DECIMAL(10,2)); INSERT INTO donations (id, donor_id, amount) VALUES (1, 1, 1000.00); INSERT INTO donations (id, donor_id, amount) VALUES (2, 2, 2000.00); INSERT INTO donations (id, donor_id, amount) VALUES (3, 3, 500.00);","completion":"SELECT donor_id, COUNT(*) as num_donations FROM donations GROUP BY donor_id;"}
{"prompt":"How many genetic research projects were completed each year in Germany? with given SQL schema CREATE SCHEMA if not exists genetics; USE genetics; CREATE TABLE if not exists projects (id INT PRIMARY KEY, name VARCHAR(255), completion_date DATE, country VARCHAR(255)); INSERT INTO projects (id, name, completion_date, country) VALUES (1, 'ProjectX', '2017-12-31', 'Germany'), (2, 'ProjectY', '2018-06-15', 'Germany'), (3, 'ProjectZ', '2019-04-22', 'Germany'), (4, 'ProjectP', '2020-02-03', 'Germany'), (5, 'ProjectQ', '2021-01-01', 'Germany'), (6, 'ProjectR', '2016-08-08', 'USA');","completion":"SELECT YEAR(completion_date) AS year, COUNT(*) AS completed_projects FROM projects WHERE country = 'Germany' GROUP BY year ORDER BY year;"}
{"prompt":"List the titles and filing dates of patents owned by GenTech. with given SQL schema CREATE TABLE company (id INT, name VARCHAR(50), industry VARCHAR(50), location VARCHAR(50)); INSERT INTO company (id, name, industry, location) VALUES (1, 'GenTech', 'Genetic Research', 'San Francisco'); INSERT INTO company (id, name, industry, location) VALUES (2, 'BioEngineer', 'Bioprocess Engineering', 'Boston'); INSERT INTO company (id, name, industry, location) VALUES (3, 'BioSolutions', 'Bioprocess Engineering', 'Seattle'); CREATE TABLE patent (id INT, title VARCHAR(100), company_id INT, filing_date DATE); INSERT INTO patent (id, title, company_id, filing_date) VALUES (1, 'GenTech Patent A', 1, '2020-01-01'); INSERT INTO patent (id, title, company_id, filing_date) VALUES (2, 'BioEngineer Patent B', 2, '2019-06-15'); INSERT INTO patent (id, title, company_id, filing_date) VALUES (3, 'GenTech Patent C', 1, '2018-03-20');","completion":"SELECT title, filing_date FROM patent WHERE company_id IN (SELECT id FROM company WHERE name = 'GenTech')"}
{"prompt":"Delete all FOIA requests with status 'Denied' in the 'foia_requests' table. with given SQL schema CREATE TABLE foia_requests (request_id INT, requester_name VARCHAR(100), request_date DATE, request_type VARCHAR(50), status VARCHAR(50));","completion":"DELETE FROM foia_requests WHERE status = 'Denied';"}
{"prompt":"Identify community health workers who have not been assigned any health equity metrics in Texas. with given SQL schema CREATE TABLE health_equity_metrics (worker_id INT, metric TEXT); INSERT INTO health_equity_metrics (worker_id, metric) VALUES (1, 'Accessibility'); CREATE TABLE community_health_workers_tx (worker_id INT, name TEXT); INSERT INTO community_health_workers_tx (worker_id, name) VALUES (1, 'Alice Johnson');","completion":"SELECT c.name FROM community_health_workers_tx c LEFT JOIN health_equity_metrics h ON c.worker_id = h.worker_id WHERE h.worker_id IS NULL AND c.name = 'Alice Johnson';"}
{"prompt":"What is the total number of mental health parity cases reported in 2020 and 2021? with given SQL schema CREATE TABLE MentalHealthParity (CaseID INT, ReportYear INT); INSERT INTO MentalHealthParity (CaseID, ReportYear) VALUES (1, 2020), (2, 2021), (3, 2020), (4, 2020), (5, 2021);","completion":"SELECT SUM(CASE WHEN ReportYear IN (2020, 2021) THEN 1 ELSE 0 END) as TotalCases FROM MentalHealthParity;"}
{"prompt":"What is the average revenue per OTA booking in the NA region for the last quarter? with given SQL schema CREATE TABLE ota_bookings_2 (booking_id INT, ota_name TEXT, region TEXT, booking_amount DECIMAL(10,2)); INSERT INTO ota_bookings_2 (booking_id, ota_name, region, booking_amount) VALUES (1, 'Booking.com', 'NA', 200.50), (2, 'Expedia', 'NA', 150.25), (3, 'Agoda', 'APAC', 300.00), (4, 'Expedia', 'NA', 250.00);","completion":"SELECT AVG(booking_amount) FROM ota_bookings_2 WHERE region = 'NA' AND booking_date >= DATEADD(quarter, -1, GETDATE());"}
{"prompt":"Identify the gallery in Vienna with the highest total revenue and display the gallery name and total revenue. with given SQL schema CREATE TABLE Exhibitions (id INT, gallery_id INT, city VARCHAR(20), revenue FLOAT); INSERT INTO Exhibitions (id, gallery_id, city, revenue) VALUES (1, 1, 'Vienna', 15000), (2, 2, 'Vienna', 12000), (3, 3, 'Vienna', 20000);","completion":"SELECT g.name, SUM(e.revenue) as total_revenue FROM Exhibitions e JOIN Galleries g ON e.gallery_id = g.id WHERE g.city = 'Vienna' GROUP BY g.name ORDER BY total_revenue DESC LIMIT 1;"}
{"prompt":"What is the average temperature recorded in the 'arctic_weather' table for each month? with given SQL schema CREATE TABLE arctic_weather (id INT, date DATE, temperature FLOAT); INSERT INTO arctic_weather (id, date, temperature) VALUES (1, '2021-01-01', 10), (2, '2021-02-01', 12), (3, '2021-03-01', 15);","completion":"SELECT MONTH(date) AS month, AVG(temperature) AS avg_temperature FROM arctic_weather GROUP BY month;"}
{"prompt":"What is the maximum number of years a traditional music form has been preserved in each province of India? with given SQL schema CREATE TABLE provinces (id INT, name TEXT); INSERT INTO provinces (id, name) VALUES (1, 'Uttar Pradesh'), (2, 'Maharashtra'), (3, 'Andhra Pradesh'); CREATE TABLE music_forms (id INT, province_id INT, name TEXT, year_preserved INT); INSERT INTO music_forms (id, province_id, name, year_preserved) VALUES (1, 1, 'Hindustani', 1000), (2, 1, 'Qawwali', 800), (3, 2, 'Marathi', 700), (4, 2, 'Bharud', 500), (5, 3, 'Carnatic', 1200), (6, 3, 'Harikatha', 900);","completion":"SELECT p.name, MAX(mf.year_preserved) FROM provinces p JOIN music_forms mf ON p.id = mf.province_id GROUP BY p.id;"}
{"prompt":"Calculate the total cost and average CO2 emissions for projects in the 'sustainability' schema where the name contains the word 'green' with given SQL schema CREATE SCHEMA IF NOT EXISTS sustainability; CREATE TABLE sustainability.projects (id INT, name VARCHAR(100), cost FLOAT, co2_emissions FLOAT); INSERT INTO sustainability.projects (id, name, cost, co2_emissions) VALUES (1, 'Green Roof Installation', 250000, 10), (2, 'Solar Panel Installation', 1000000, 20), (3, 'Wind Turbine Installation', 1500000, 30);","completion":"SELECT SUM(cost), AVG(co2_emissions) FROM sustainability.projects WHERE name LIKE '%green%';"}
{"prompt":"List all projects that were completed before their scheduled completion date with given SQL schema CREATE TABLE Project (id INT, name VARCHAR(255), scheduled_completion_date DATE, actual_completion_date DATE); INSERT INTO Project (id, name, scheduled_completion_date, actual_completion_date) VALUES (1, 'Project A', '2020-12-31', '2020-12-15'), (2, 'Project B', '2021-03-31', '2022-04-15'), (3, 'Project C', '2022-06-30', '2022-06-30');","completion":"SELECT * FROM Project WHERE actual_completion_date < scheduled_completion_date;"}
{"prompt":"How many countries in Antarctica have been promoting sustainable tourism since 2019? with given SQL schema CREATE TABLE Sustainable_Practices ( id INT PRIMARY KEY, country_id INT, certification_date DATE, FOREIGN KEY (country_id) REFERENCES Countries(id) ); INSERT INTO Sustainable_Practices (id, country_id, certification_date) VALUES (1, 14, '2019-07-01');","completion":"SELECT COUNT(DISTINCT c.id) as country_count FROM Countries c INNER JOIN Sustainable_Practices sp ON c.id = sp.country_id WHERE c.continent = 'Antarctica' AND sp.certification_date >= '2019-01-01';"}
{"prompt":"How many sustainable accommodations are there in North America with a rating of 4 or higher? with given SQL schema CREATE TABLE Accommodations (accommodation_id INT, name VARCHAR(50), country VARCHAR(50), sustainability_rating INT); INSERT INTO Accommodations (accommodation_id, name, country, sustainability_rating) VALUES (1, 'Eco Resort', 'Canada', 5); INSERT INTO Accommodations (accommodation_id, name, country, sustainability_rating) VALUES (2, 'Green Hotel', 'USA', 4);","completion":"SELECT COUNT(*) FROM Accommodations WHERE country IN ('North America') AND sustainability_rating >= 4;"}
{"prompt":"What is the maximum depth in the 'Trenches' table? with given SQL schema CREATE TABLE Trenches (TrenchID INT PRIMARY KEY, TrenchName TEXT, MaxDepth FLOAT);","completion":"SELECT MAX(MaxDepth) FROM Trenches;"}
{"prompt":"What is the minimum number of views of videos in the 'music' category? with given SQL schema CREATE TABLE videos_3 (id INT, title TEXT, views INT, category TEXT); INSERT INTO videos_3 (id, title, views, category) VALUES (1, 'Video1', 5000, 'music'), (2, 'Video2', 7000, 'music');","completion":"SELECT MIN(views) FROM videos_3 WHERE category = 'music';"}
{"prompt":"What is the total media representation score for each region? with given SQL schema CREATE TABLE media_representation (id INT, user_id INT, country VARCHAR(50), region VARCHAR(50), score INT); INSERT INTO media_representation (id, user_id, country, region, score) VALUES (1, 1, 'China', 'Asia', 80), (2, 2, 'Japan', 'Asia', 85), (3, 3, 'India', 'Asia', 75), (4, 4, 'Indonesia', 'Asia', 70), (5, 5, 'Australia', 'Australia', 82), (6, 6, 'New Zealand', 'Australia', 80), (7, 7, 'United States', 'North America', 78), (8, 8, 'Canada', 'North America', 75), (9, 9, 'Mexico', 'North America', 73), (10, 10, 'Brazil', 'South America', 71), (11, 11, 'Argentina', 'South America', 69), (12, 12, 'South Africa', 'Africa', 77), (13, 13, 'Egypt', 'Africa', 74), (14, 14, 'Nigeria', 'Africa', 72);","completion":"SELECT region, SUM(score) as total_score FROM media_representation GROUP BY region;"}
{"prompt":"What is the total runtime (in minutes) of all shows produced in the US? with given SQL schema CREATE TABLE shows (id INT, title VARCHAR(100), genre VARCHAR(50), country VARCHAR(50), release_year INT, runtime INT);","completion":"SELECT SUM(runtime) FROM shows WHERE country = 'US';"}
{"prompt":"What is the daily revenue from each category in the last month? with given SQL schema CREATE TABLE orders (order_id INT, order_date DATETIME, menu_id INT, quantity INT, price FLOAT);","completion":"SELECT DATE(order_date) as order_date, category, SUM(price * quantity) as daily_revenue FROM orders JOIN menus ON orders.menu_id = menus.menu_id GROUP BY DATE(order_date), category ORDER BY order_date, daily_revenue DESC;"}
{"prompt":"What is the total waste generated by each menu item category in the past year? with given SQL schema CREATE TABLE Waste (waste_id INT PRIMARY KEY, menu_item_category VARCHAR(50), waste_quantity DECIMAL(5,2), waste_date DATE);","completion":"SELECT menu_item_category, SUM(waste_quantity) FROM Waste WHERE waste_date >= DATEADD(year, -1, GETDATE()) GROUP BY menu_item_category;"}
{"prompt":"What is the total value of military equipment sales by country for 2021? with given SQL schema CREATE TABLE CountrySales (id INT PRIMARY KEY, year INT, country VARCHAR(50), sale_value FLOAT); INSERT INTO CountrySales (id, year, country, sale_value) VALUES (1, 2021, 'USA', 10000000); INSERT INTO CountrySales (id, year, country, sale_value) VALUES (2, 2021, 'Germany', 8000000);","completion":"SELECT year, country, SUM(sale_value) FROM CountrySales GROUP BY year, country;"}
{"prompt":"Get the total production of each product by quarter in 2021 with given SQL schema mining_production(mine_id, product, production_quantity, production_date)","completion":"SELECT product, DATE_TRUNC('quarter', production_date) AS production_quarter, SUM(production_quantity) AS total_production FROM mining_production WHERE production_date >= '2021-01-01' AND production_date < '2022-01-01' GROUP BY product, production_quarter;"}
{"prompt":"What is the total gold production by country in the last 3 years? with given SQL schema CREATE TABLE yearly_gold_production (id INT, country VARCHAR(255), year INT, quantity INT); INSERT INTO yearly_gold_production (id, country, year, quantity) VALUES (1, 'Australia', 2019, 300), (2, 'China', 2019, 400), (3, 'Russia', 2019, 250), (4, 'Australia', 2020, 320), (5, 'China', 2020, 420), (6, 'Russia', 2020, 260), (7, 'Australia', 2021, 350), (8, 'China', 2021, 450), (9, 'Russia', 2021, 270);","completion":"SELECT country, SUM(quantity) as total_gold_production FROM yearly_gold_production WHERE year BETWEEN 2019 AND 2021 GROUP BY country;"}
{"prompt":"How many female engineers are there in 'australian_mines'? with given SQL schema CREATE SCHEMA if not exists australia_schema;CREATE TABLE australia_schema.australian_mines (id INT, name VARCHAR, gender VARCHAR, role VARCHAR);INSERT INTO australia_schema.australian_mines (id, name, gender, role) VALUES (1, 'S worker', 'Female', 'Engineer'), (2, 'T engineer', 'Male', 'Engineer');","completion":"SELECT COUNT(*) FROM australia_schema.australian_mines WHERE gender = 'Female' AND role = 'Engineer';"}
{"prompt":"What is the average monthly data usage for mobile subscribers in Africa? with given SQL schema CREATE TABLE mobile_subscribers (id INT, region VARCHAR(20), data_usage INT, usage_date DATE);","completion":"SELECT region, AVG(data_usage) FROM mobile_subscribers WHERE region = 'Africa' GROUP BY region;"}
{"prompt":"What is the minimum subscription fee for 'LTE' technology in the 'subscriber_tech' table? with given SQL schema CREATE TABLE subscriber_tech (subscriber_id INT, subscription_start_date DATE, technology VARCHAR(50), subscription_fee DECIMAL(10, 2)); INSERT INTO subscriber_tech (subscriber_id, subscription_start_date, technology, subscription_fee) VALUES (1, '2020-01-01', 'Fiber', 50.00), (2, '2019-06-15', 'Cable', 40.00), (5, '2021-02-20', 'LTE', 30.00), (6, '2022-03-15', 'LTE', 25.00);","completion":"SELECT MIN(subscription_fee) as min_fee FROM subscriber_tech WHERE technology = 'LTE';"}
{"prompt":"What is the most popular genre among users? with given SQL schema CREATE TABLE users (id INT, name VARCHAR(50), favorite_genre VARCHAR(50)); INSERT INTO users (id, name, favorite_genre) VALUES (1, 'Alice', 'Pop'), (2, 'Bob', 'Rock'), (3, 'Charlie', 'Rock'), (4, 'David', 'Jazz'), (5, 'Eve', 'Pop');","completion":"SELECT favorite_genre, COUNT(*) as genre_count FROM users GROUP BY favorite_genre ORDER BY genre_count DESC LIMIT 1;"}
{"prompt":"What is the total number of concert ticket sales for artists who released their first album between 2015 and 2017? with given SQL schema CREATE TABLE ConcertTicketSales (id INT, year INT, artist_id INT); CREATE TABLE ArtistAlbums (id INT, artist_id INT, year INT);","completion":"SELECT COUNT(DISTINCT cts.artist_id) FROM ConcertTicketSales cts JOIN ArtistAlbums a ON cts.artist_id = a.artist_id WHERE a.year BETWEEN 2015 AND 2017;"}
{"prompt":"What is the total amount donated by each organization in Q1 2021, and what percentage of the total does each organization represent? with given SQL schema CREATE TABLE organizations (id INT, name TEXT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO organizations (id, name, donation_amount, donation_date) VALUES (1, 'ABC Corp', 1500.00, '2021-01-05'); INSERT INTO organizations (id, name, donation_amount, donation_date) VALUES (2, 'XYZ Inc', 2500.00, '2021-03-12');","completion":"SELECT o.name, SUM(o.donation_amount) AS total_donation, ROUND(100 * SUM(o.donation_amount) \/ (SELECT SUM(donation_amount) FROM organizations WHERE donation_date BETWEEN '2021-01-01' AND '2021-03-31'), 2) AS percentage FROM organizations o WHERE donation_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY o.name;"}
{"prompt":"How many deep-sea exploration missions were conducted in the Indian Ocean by each country in 2018? with given SQL schema CREATE TABLE deep_sea_exploration_missions (mission_id INT, mission_name VARCHAR(255), mission_date DATE, ocean_name VARCHAR(255), country VARCHAR(255)); INSERT INTO deep_sea_exploration_missions (mission_id, mission_name, mission_date, ocean_name, country) VALUES (1, 'Mariana Trench Exploration', '2018-01-01', 'Pacific Ocean', 'USA'), (2, 'Indian Ocean Ridges Study', '2018-07-01', 'Indian Ocean', 'India'), (3, 'Atlantic Ocean Floor Mapping', '2018-10-01', 'Atlantic Ocean', 'UK');","completion":"SELECT ocean_name, country, COUNT(*) AS num_missions FROM deep_sea_exploration_missions WHERE YEAR(mission_date) = 2018 AND ocean_name = 'Indian Ocean' GROUP BY ocean_name, country;"}
{"prompt":"Which vessels have been involved in accidents in the Pacific Ocean? with given SQL schema CREATE TABLE vessels (vessel_id INT, name VARCHAR(100)); CREATE TABLE maritime_accidents (accident_id INT, vessel_id INT, country VARCHAR(100), ocean VARCHAR(100)); INSERT INTO vessels (vessel_id, name) VALUES (1, 'Sea Serpent'); INSERT INTO maritime_accidents (accident_id, vessel_id, country, ocean) VALUES (1, 1, 'Canada', 'Pacific Ocean');","completion":"SELECT vessels.name FROM vessels INNER JOIN maritime_accidents ON vessels.vessel_id = maritime_accidents.vessel_id WHERE maritime_accidents.ocean = 'Pacific Ocean';"}
{"prompt":"List all organizations in the 'Organizations' table with a mission_area of 'Education'? with given SQL schema CREATE TABLE Organizations (org_id INT, name VARCHAR(50), mission_area VARCHAR(20));","completion":"SELECT * FROM Organizations WHERE mission_area = 'Education';"}
{"prompt":"Find the total budget allocated for public services in each state. with given SQL schema CREATE SCHEMA gov_data;CREATE TABLE gov_data.budget_allocation (state VARCHAR(20), service VARCHAR(20), budget INT); INSERT INTO gov_data.budget_allocation (state, service, budget) VALUES ('California', 'Education', 3000000), ('California', 'Healthcare', 4000000), ('Texas', 'Education', 2000000), ('Texas', 'Healthcare', 2500000), ('New York', 'Education', 2500000), ('New York', 'Healthcare', 3000000);","completion":"SELECT state, SUM(budget) as total_budget FROM gov_data.budget_allocation GROUP BY state;"}
{"prompt":"Which public service had the highest citizen satisfaction score in Q3 2021? with given SQL schema CREATE TABLE Satisfaction (Quarter TEXT, Service TEXT, Score INTEGER); INSERT INTO Satisfaction (Quarter, Service, Score) VALUES ('Q3 2021', 'Education', 85), ('Q3 2021', 'Healthcare', 80), ('Q3 2021', 'Transportation', 90);","completion":"SELECT Service, MAX(Score) FROM Satisfaction WHERE Quarter = 'Q3 2021' GROUP BY Service;"}
{"prompt":"How many properties in the table 'sustainable_developments' are located in low-income areas? with given SQL schema CREATE TABLE sustainable_developments (id INT, property_name VARCHAR(50), low_income_area BOOLEAN); INSERT INTO sustainable_developments (id, property_name, low_income_area) VALUES (1, 'Green Heights', true), (2, 'Eco Estates', false), (3, 'Solar Vista', true);","completion":"SELECT COUNT(*) FROM sustainable_developments WHERE low_income_area = true;"}
{"prompt":"What is the average daily revenue for restaurants serving 'Vegan' cuisine in the city of 'Los Angeles' for the first quarter of 2022? with given SQL schema CREATE TABLE restaurant_revenue(restaurant_id INT, cuisine VARCHAR(255), daily_revenue DECIMAL(10,2), revenue_date DATE);","completion":"SELECT AVG(daily_revenue) FROM restaurant_revenue WHERE cuisine = 'Vegan' AND city = 'Los Angeles' AND revenue_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY cuisine, city;"}
{"prompt":"What was the total revenue for 'Organic Veggie Pizza'? with given SQL schema CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255)); INSERT INTO restaurants (restaurant_id, name) VALUES (1, 'Pizza Hut'); CREATE TABLE menu_items (menu_item_id INT, name VARCHAR(255), price DECIMAL(5,2), restaurant_id INT); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (1, 'Organic Veggie Pizza', 12.99, 1);","completion":"SELECT SUM(price) FROM menu_items WHERE name = 'Organic Veggie Pizza' AND restaurant_id = 1;"}
{"prompt":"What is the total mass of the Juno spacecraft in kg? with given SQL schema CREATE TABLE spacecraft (name TEXT, mass_kg INTEGER); INSERT INTO spacecraft (name, mass_kg) VALUES ('Juno', 3625), ('Voyager 1', 722), ('Cassini', 5600);","completion":"SELECT mass_kg FROM spacecraft WHERE name = 'Juno';"}
{"prompt":"List all unique medical conditions of astronauts from Russia. with given SQL schema CREATE TABLE AstronautMedical (id INT, astronaut_id INT, nationality VARCHAR(50), medical_condition VARCHAR(50)); INSERT INTO AstronautMedical (id, astronaut_id, nationality, medical_condition) VALUES (1, 101, 'Russia', 'Anemia'); INSERT INTO AstronautMedical (id, astronaut_id, nationality, medical_condition) VALUES (2, 102, 'Russia', 'Dehydration'); INSERT INTO AstronautMedical (id, astronaut_id, nationality, medical_condition) VALUES (3, 103, 'USA', 'Motion Sickness');","completion":"SELECT DISTINCT medical_condition FROM AstronautMedical WHERE nationality = 'Russia';"}
{"prompt":"Which spacecraft have a mass greater than 1000 tons? with given SQL schema CREATE TABLE spacecraft (id INT, name VARCHAR(255), manufacturer VARCHAR(255), mass FLOAT); INSERT INTO spacecraft (id, name, manufacturer, mass) VALUES (1, 'Voyager 1', 'Galactic Pioneers Inc.', 770.), (2, 'Voyager 2', 'Galactic Pioneers Inc.', 780.), (3, 'New Horizons', 'Space Explorers Ltd.', 1010.);","completion":"SELECT name FROM spacecraft WHERE mass > 1000;"}
{"prompt":"How many unique IP addresses have been used for login attempts in the last month? with given SQL schema CREATE TABLE login_attempts (user_id INT, ip_address VARCHAR(255), timestamp TIMESTAMP); INSERT INTO login_attempts (user_id, ip_address, timestamp) VALUES (1, '192.168.1.1', '2022-01-01 10:00:00'), (2, '192.168.1.2', '2022-01-02 15:30:00'), (1, '192.168.1.1', '2022-01-03 08:45:00'), (3, '192.168.1.3', '2022-01-04 14:20:00'), (4, '192.168.1.4', '2022-01-05 21:00:00'), (1, '192.168.1.1', '2022-01-06 06:15:00'), (5, '192.168.1.5', '2022-01-07 12:30:00'), (1, '192.168.1.1', '2022-01-07 19:45:00');","completion":"SELECT COUNT(DISTINCT ip_address) as unique_ip_addresses FROM login_attempts WHERE timestamp >= '2022-01-01 00:00:00' AND timestamp < '2022-02-01 00:00:00';"}
{"prompt":"What are the top 5 most vulnerable systems in the IT department based on their average vulnerability scores in the last month? with given SQL schema CREATE TABLE systems (system_id INT, system_name VARCHAR(255), department VARCHAR(255), vulnerability_score DECIMAL(5,2));INSERT INTO systems (system_id, system_name, department, vulnerability_score) VALUES (1, 'Web Server 1', 'IT', 7.5), (2, 'Database Server 1', 'IT', 6.3), (3, 'Email Server 1', 'IT', 8.1), (4, 'Firewall 1', 'IT', 4.9), (5, 'Web Server 2', 'IT', 7.9), (6, 'Network Switch 1', 'Network', 5.1);","completion":"SELECT system_name, AVG(vulnerability_score) as avg_vulnerability_score FROM systems WHERE department = 'IT' GROUP BY system_name ORDER BY avg_vulnerability_score DESC LIMIT 5;"}
{"prompt":"What is the percentage of autonomous vehicles sold in the US that are electric? with given SQL schema CREATE TABLE AutonomousVehicles (Make VARCHAR(50), Model VARCHAR(50), Year INT, Country VARCHAR(50), Type VARCHAR(50), Sales INT);","completion":"SELECT 100.0 * SUM(CASE WHEN Type = 'Electric' THEN Sales ELSE 0 END) \/ SUM(Sales) AS Percentage FROM AutonomousVehicles WHERE Country = 'United States';"}
{"prompt":"What is the total number of bike-share trips in a month in New York City? with given SQL schema CREATE TABLE monthly_bike_trips (trip_id INT, city VARCHAR(20), trips_per_month INT); INSERT INTO monthly_bike_trips (trip_id, city, trips_per_month) VALUES (1, 'New York City', 90000), (2, 'New York City', 85000), (3, 'New York City', 95000);","completion":"SELECT SUM(trips_per_month) FROM monthly_bike_trips WHERE city = 'New York City';"}
{"prompt":"What are the total sales of each product category in the year 2020? with given SQL schema CREATE TABLE product_sales (product_id INT, product_category VARCHAR(50), sale_date DATE, revenue DECIMAL(10,2)); CREATE TABLE products (product_id INT, product_name VARCHAR(50)); CREATE VIEW product_sales_view AS SELECT product_id, product_category, EXTRACT(YEAR FROM sale_date) AS sale_year, SUM(revenue) AS total_revenue FROM product_sales JOIN products ON product_sales.product_id = products.product_id GROUP BY product_id, product_category, sale_year;","completion":"SELECT product_category, total_revenue FROM product_sales_view WHERE sale_year = 2020 GROUP BY product_category;"}
{"prompt":"Who is the top customer by sales in 2022? with given SQL schema CREATE TABLE customers (customer_id INT, total_sales_2022 FLOAT); INSERT INTO customers (customer_id, total_sales_2022) VALUES (1, 25000.0), (2, 30000.0), (3, 22000.0), (4, 35000.0);","completion":"SELECT customer_id, total_sales_2022 FROM customers ORDER BY total_sales_2022 DESC LIMIT 1;"}
{"prompt":"Update 'John Smith's' risk assessment score to 700 in the risk_assessment_table with given SQL schema CREATE TABLE risk_assessment_table (assessment_id INT, policy_holder TEXT, risk_score INT); INSERT INTO risk_assessment_table (assessment_id, policy_holder, risk_score) VALUES (1, 'John Smith', 650), (2, 'Jane Doe', 500), (3, 'Mike Johnson', 800);","completion":"UPDATE risk_assessment_table SET risk_score = 700 WHERE policy_holder = 'John Smith';"}
{"prompt":"Calculate the percentage of employees in each industry, categorized by union status with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(255), industry VARCHAR(255), union_status VARCHAR(255), num_employees INT); INSERT INTO employees (id, name, industry, union_status, num_employees) VALUES (1, 'John Doe', 'Manufacturing', 'Union', 50), (2, 'Jane Smith', 'Manufacturing', 'Non-Union', 75), (3, 'Bob Johnson', 'Retail', 'Union', 30), (4, 'Alice Williams', 'Retail', 'Union', 40), (5, 'Charlie Brown', 'Construction', 'Non-Union', 100);","completion":"SELECT industry, union_status, 100.0 * COUNT(*) \/ (SELECT SUM(COUNT(*)) FROM employees GROUP BY industry) as 'Percentage' FROM employees GROUP BY industry, union_status;"}
{"prompt":"Show total number of union members by state with given SQL schema CREATE TABLE union_members (id INT, name VARCHAR(50), state VARCHAR(2), city VARCHAR(20), occupation VARCHAR(20)); INSERT INTO union_members (id, name, state, city, occupation) VALUES (1, 'John Doe', 'NY', 'New York', 'Engineer'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (2, 'Jane Smith', 'CA', 'Los Angeles', 'Teacher'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (3, 'Alice Johnson', 'NY', 'Buffalo', 'Nurse');","completion":"SELECT state, COUNT(*) as total_members FROM union_members GROUP BY state;"}
{"prompt":"What is the maximum safety rating for vehicles in the vehiclesafety schema? with given SQL schema CREATE TABLE VehicleSafety (id INT, vehicle_id INT, safetyrating INT, PRIMARY KEY (id)); CREATE TABLE Vehicles (id INT, make VARCHAR(50), model VARCHAR(50), PRIMARY KEY (id)); CREATE TABLE LuxuryVehicles (id INT, vehicle_id INT, PRIMARY KEY (id), FOREIGN KEY (vehicle_id) REFERENCES Vehicles(id));","completion":"SELECT MAX(safetyrating) FROM vehicleSafety JOIN Vehicles ON vehicleSafety.vehicle_id = Vehicles.id WHERE EXISTS (SELECT * FROM LuxuryVehicles WHERE Vehicles.id = LuxuryVehicles.vehicle_id);"}
{"prompt":"What is the maximum cargo weight for each vessel in the 'cargo_tracking' table? with given SQL schema CREATE TABLE cargo_tracking (id INT, vessel_name VARCHAR(50), cargo_weight DECIMAL(10,2));","completion":"SELECT vessel_name, MAX(cargo_weight) FROM cargo_tracking GROUP BY vessel_name;"}
{"prompt":"What was the average speed of vessels that departed from Port A in Q1 2020? with given SQL schema CREATE TABLE Vessels (id INT, name TEXT, speed FLOAT, depart_port TEXT, depart_date DATE); INSERT INTO Vessels (id, name, speed, depart_port, depart_date) VALUES (1, 'Vessel1', 20.5, 'Port A', '2020-01-02'); INSERT INTO Vessels (id, name, speed, depart_port, depart_date) VALUES (2, 'Vessel2', 25.0, 'Port A', '2020-01-10');","completion":"SELECT AVG(speed) FROM Vessels WHERE depart_port = 'Port A' AND YEAR(depart_date) = 2020 AND QUARTER(depart_date) = 1;"}
{"prompt":"How many total visitors attended the community events? with given SQL schema CREATE TABLE community_events (id INT, event_name VARCHAR(50), location VARCHAR(50), attendance INT);  CREATE TABLE events_attended (id INT, event_id INT, attendee_id INT, date DATE); INSERT INTO community_events (id, event_name, location, attendance) VALUES (1, 'Art in the Park', 'City Park', 300), (2, 'Museum Night', 'Museum', 800), (3, 'Kids Workshop', 'Museum', 400);  INSERT INTO events_attended (id, event_id, attendee_id, date) VALUES (1, 1, 1, '2021-06-05'), (2, 1, 2, '2021-06-05'), (3, 2, 3, '2021-06-05'), (4, 2, 4, '2021-06-05'), (5, 3, 5, '2021-06-06');","completion":"SELECT SUM(community_events.attendance) FROM community_events JOIN events_attended ON community_events.id = events_attended.event_id;"}
{"prompt":"What is the maximum number of visitors at a single exhibition in Tokyo? with given SQL schema CREATE TABLE Exhibitions (exhibition_id INT, location VARCHAR(20), date DATE); INSERT INTO Exhibitions (exhibition_id, location, date) VALUES (1, 'Tokyo', '2022-06-01'), (2, 'Tokyo', '2022-06-15'), (3, 'Tokyo', '2022-07-01'); CREATE TABLE Visitors (visitor_id INT, exhibition_id INT, date DATE); INSERT INTO Visitors (visitor_id, exhibition_id, date) VALUES (1, 1, '2022-06-01'), (2, 1, '2022-06-01'), (3, 2, '2022-06-15'), (4, 3, '2022-07-01');","completion":"SELECT MAX(visitor_count) FROM (SELECT exhibition_id, COUNT(DISTINCT visitor_id) AS visitor_count FROM Visitors v JOIN Exhibitions e ON v.exhibition_id = e.exhibition_id WHERE e.location = 'Tokyo' GROUP BY exhibition_id) t;"}
{"prompt":"What is the total waste generation by material type for each city in the last quarter? with given SQL schema CREATE TABLE waste_generation(city VARCHAR(255), material_type VARCHAR(255), generation_date DATE, quantity INT); INSERT INTO waste_generation VALUES ('CityA', 'Plastic', '2022-01-01', 100);","completion":"SELECT city, material_type, SUM(quantity) OVER (PARTITION BY city, material_type ORDER BY generation_date RANGE BETWEEN INTERVAL '3 months' PRECEDING AND CURRENT ROW) FROM waste_generation WHERE generation_date > DATEADD(quarter, -1, CURRENT_DATE)"}
{"prompt":"How many drought-impacted regions are in Egypt and their average impact scores? with given SQL schema CREATE TABLE drought_impact_EG (region VARCHAR(50), country VARCHAR(20), impact_score INT); INSERT INTO drought_impact_EG (region, country, impact_score) VALUES ('Region1', 'Egypt', 60), ('Region2', 'Egypt', 70);","completion":"SELECT COUNT(*), AVG(impact_score) FROM drought_impact_EG WHERE country = 'Egypt';"}
{"prompt":"What is the average water consumption per capita in New York City for the year 2021? with given SQL schema CREATE TABLE new_york_water_use (year INT, population INT, water_consumption INT); INSERT INTO new_york_water_use (year, population, water_consumption) VALUES (2020, 8500000, 850000000), (2021, 8600000, 860000000);","completion":"SELECT AVG(new_york_water_use.water_consumption \/ new_york_water_use.population) as avg_water_consumption FROM new_york_water_use WHERE new_york_water_use.year = 2021;"}
{"prompt":"What is the total water consumption in California in 2020? with given SQL schema CREATE TABLE water_usage(state VARCHAR(20), year INT, consumption INT); INSERT INTO water_usage(state, year, consumption) VALUES ('California', 2015, 30000), ('California', 2016, 32000), ('California', 2017, 34000), ('California', 2018, 36000), ('California', 2019, 38000);","completion":"SELECT SUM(consumption) FROM water_usage WHERE state = 'California' AND year = 2020;"}
{"prompt":"List the total number of workout sessions attended by members from the USA and Canada, grouped by the country. with given SQL schema CREATE TABLE Members (MemberID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Members (MemberID, FirstName, LastName, Country) VALUES (1, 'John', 'Doe', 'USA'); INSERT INTO Members (MemberID, FirstName, LastName, Country) VALUES (2, 'Jane', 'Doe', 'Canada'); CREATE TABLE Workouts (WorkoutID INT, MemberID INT, WorkoutDate DATE); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutDate) VALUES (1, 1, '2022-01-12'); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutDate) VALUES (2, 2, '2022-01-14');","completion":"SELECT w.Country, COUNT(*) as TotalWorkouts FROM Workouts w INNER JOIN Members m ON w.MemberID = m.MemberID WHERE m.Country IN ('USA', 'Canada') GROUP BY w.Country;"}
{"prompt":"What is the minimum heart rate for users during evening workouts? with given SQL schema CREATE TABLE workouts (id INT, user_id INT, heart_rate INT, workout_time TIME); INSERT INTO workouts (id, user_id, heart_rate, workout_time) VALUES (1, 1, 120, '18:00:00');","completion":"SELECT MIN(heart_rate) FROM workouts WHERE workout_time BETWEEN '18:00:00' AND '23:59:59';"}
{"prompt":"Count the number of unique users who interacted with the algorithmic fairness system in the last quarter with given SQL schema CREATE TABLE interactions (id INT, user_id INT, interaction_date DATE); INSERT INTO interactions (id, user_id, interaction_date) VALUES (1, 1001, '2022-01-01'), (2, 1002, '2022-02-15'), (3, 1003, '2022-03-03'), (4, 1001, '2022-03-25'), (5, 1004, '2022-04-01'), (6, 1003, '2022-03-17');","completion":"SELECT COUNT(DISTINCT user_id) FROM interactions WHERE interaction_date >= DATE_SUB(NOW(), INTERVAL 3 MONTH);"}
{"prompt":"List all agricultural innovation metrics related to wheat in Egypt. with given SQL schema CREATE TABLE AgriInnov (id INT, metric VARCHAR(255), crop VARCHAR(255), country VARCHAR(255)); INSERT INTO AgriInnov (id, metric, crop, country) VALUES (1, 'Yield', 'Wheat', 'Egypt'), (2, 'Harvest Time', 'Wheat', 'Egypt');","completion":"SELECT * FROM AgriInnov WHERE crop = 'Wheat' AND country = 'Egypt';"}
{"prompt":"List all agricultural innovation projects and their respective coordinators in the 'rural_development' database, sorted by project type in ascending order. with given SQL schema CREATE TABLE agri_innovation_project (project_id INT, project_name VARCHAR(50), project_type VARCHAR(50), coordinator_id INT); INSERT INTO agri_innovation_project (project_id, project_name, project_type, coordinator_id) VALUES (1, 'Precision Agriculture', 'Technology', 1001); CREATE TABLE coordinator (coordinator_id INT, coordinator_name VARCHAR(50), age INT, location VARCHAR(50)); INSERT INTO coordinator (coordinator_id, coordinator_name, age, location) VALUES (1001, 'Anna Kim', 45, 'Seoul');","completion":"SELECT agri_innovation_project.project_name, agri_innovation_project.project_type, coordinator.coordinator_name FROM agri_innovation_project INNER JOIN coordinator ON agri_innovation_project.coordinator_id = coordinator.coordinator_id ORDER BY agri_innovation_project.project_type ASC;"}
{"prompt":"What is the distribution of rural infrastructure projects in India, Pakistan, and Bangladesh, partitioned by type and ordered by the number of projects? with given SQL schema CREATE TABLE Infrastructure_Projects (ProjectID INT, Country VARCHAR(10), Type VARCHAR(20)); INSERT INTO Infrastructure_Projects (ProjectID, Country, Type) VALUES (1, 'India', 'Irrigation'), (2, 'Pakistan', 'Transportation'), (3, 'Bangladesh', 'Energy'), (4, 'India', 'Transportation'), (5, 'Pakistan', 'Irrigation'), (6, 'Bangladesh', 'Transportation');","completion":"SELECT Country, Type, COUNT(*) as Num_Projects FROM Infrastructure_Projects WHERE Country IN ('India', 'Pakistan', 'Bangladesh') GROUP BY Country, Type ORDER BY Num_Projects DESC;"}
{"prompt":"What is the maximum duration of a space mission per astronaut? with given SQL schema CREATE TABLE Space_Missions (ID INT, Astronaut VARCHAR(50), Mission VARCHAR(50), Duration INT); INSERT INTO Space_Missions (ID, Astronaut, Mission, Duration) VALUES (1, 'Neil Armstrong', 'Apollo 11', 196), (2, 'Buzz Aldrin', 'Apollo 11', 195), (3, 'Peggy Whitson', 'Expedition 50\/51', 288), (4, 'Peter Douzinas', 'ISS', 168), (5, 'Sergei Krikalev', 'Mir', 803);","completion":"SELECT Astronaut, MAX(Duration) FROM Space_Missions GROUP BY Astronaut;"}
{"prompt":"What is the total amount of seafood (in tonnes) exported from Canada to the USA in 2021? with given SQL schema CREATE TABLE seafood_exports (id INT, exporter_country TEXT, importer_country TEXT, year INT, quantity INT, unit TEXT); INSERT INTO seafood_exports (id, exporter_country, importer_country, year, quantity, unit) VALUES (1, 'Canada', 'USA', 2021, 500, 'tonnes'), (2, 'Canada', 'USA', 2022, 600, 'tonnes');","completion":"SELECT SUM(quantity) FROM seafood_exports WHERE exporter_country = 'Canada' AND importer_country = 'USA' AND year = 2021 AND unit = 'tonnes';"}
{"prompt":"How many visitors who identify as 'Male' have spent more than $100 on events in the 'Art' category? with given SQL schema CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(10));CREATE TABLE Events (EventID INT, EventName VARCHAR(20), EventCategory VARCHAR(20));CREATE TABLE VisitorSpending (VisitorID INT, EventID INT, Spending INT);","completion":"SELECT COUNT(*) AS Num_Visitors FROM Visitors V INNER JOIN VisitorSpending VS ON V.VisitorID = VS.VisitorID INNER JOIN Events E ON VS.EventID = E.EventID WHERE V.Gender = 'Male' AND VS.Spending > 100 AND E.EventCategory = 'Art';"}
{"prompt":"get viewers who liked 'Encanto' and 'Ray' in the viewership table with given SQL schema CREATE TABLE viewership(id INT PRIMARY KEY, movie VARCHAR(255), viewer VARCHAR(255)); CREATE TABLE likes(id INT PRIMARY KEY, movie VARCHAR(255), viewer VARCHAR(255));","completion":"SELECT viewership.viewer FROM viewership INNER JOIN likes ON viewership.movie = likes.movie WHERE viewership.movie IN ('Encanto', 'Ray') AND likes.movie IN ('Encanto', 'Ray') GROUP BY viewership.viewer HAVING COUNT(DISTINCT viewership.movie) = 2;"}
{"prompt":"What is the average price of cannabis edibles per unit in Michigan in Q1 2023? with given SQL schema CREATE TABLE edibles_prices (price DECIMAL(5,2), unit INT, state VARCHAR(20), quarter VARCHAR(10)); INSERT INTO edibles_prices (price, unit, state, quarter) VALUES (20, 5, 'Michigan', 'Q1'), (22, 5, 'Michigan', 'Q1'), (18, 5, 'Michigan', 'Q1');","completion":"SELECT AVG(price \/ unit) as avg_price_per_unit FROM edibles_prices WHERE state = 'Michigan' AND quarter = 'Q1';"}
{"prompt":"How many climate adaptation projects were completed in North America between 2015 and 2017? with given SQL schema CREATE TABLE climate_adaptation_projects (id INT, project_name VARCHAR(100), region VARCHAR(100), budget FLOAT, completion_year INT); INSERT INTO climate_adaptation_projects (id, project_name, region, budget, completion_year) VALUES (1, 'Water Management System', 'North America', 12000000, 2016), (2, 'Green Spaces Expansion', 'Europe', 8000000, 2015);","completion":"SELECT COUNT(*) FROM climate_adaptation_projects WHERE region = 'North America' AND completion_year BETWEEN 2015 AND 2017;"}
{"prompt":"Identify the drug with the lowest sales amount in Europe in 2022. with given SQL schema CREATE TABLE sales (drug_name TEXT, continent TEXT, sales_amount INT, sale_date DATE); INSERT INTO sales (drug_name, continent, sales_amount, sale_date) VALUES ('Aspirin', 'Europe', 1000, '2022-01-01');","completion":"SELECT drug_name, MIN(sales_amount) FROM sales WHERE continent = 'Europe' AND sale_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY drug_name;"}
{"prompt":"What is the infection rate of Malaria in rural areas of Ghana, by district? with given SQL schema CREATE TABLE malaria_infections (id INT, patient_id INT, infection_date DATE, is_rural BOOLEAN, district VARCHAR(255));","completion":"SELECT district, COUNT(patient_id) \/ (SELECT COUNT(*) FROM malaria_infections WHERE is_rural = FALSE) AS infection_rate FROM malaria_infections WHERE is_rural = TRUE GROUP BY district;"}
{"prompt":"Add diversity metrics for company OPQ with gender Male and gender Non-binary in the 'diversity_metrics' table with given SQL schema CREATE TABLE diversity_metrics (company_name VARCHAR(50), gender VARCHAR(10), representation_percentage DECIMAL(5,2));","completion":"INSERT INTO diversity_metrics (company_name, gender, representation_percentage) VALUES ('OPQ', 'Male', 50.00), ('OPQ', 'Non-binary', 5.00);"}
{"prompt":"What is the maximum amount of funding raised by a company founded by a person of color in the sustainability industry? with given SQL schema CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_year INT, founder_race TEXT); INSERT INTO companies (id, name, industry, founding_year, founder_race) VALUES (1, 'EcoInnovations', 'Sustainability', 2012, 'Person of Color'); INSERT INTO companies (id, name, industry, founding_year, founder_race) VALUES (2, 'SmartGrid', 'Energy', 2018, 'White');","completion":"SELECT MAX(funding_amount) FROM funding_records INNER JOIN companies ON funding_records.company_id = companies.id WHERE companies.founder_race = 'Person of Color' AND companies.industry = 'Sustainability';"}
{"prompt":"What is the total funding received by startups in the technology sector that were founded by women? with given SQL schema CREATE TABLE startups(id INT, name TEXT, sector TEXT, founder_gender TEXT, funding FLOAT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Technology', 'Female', 2000000); INSERT INTO startups VALUES (2, 'Beta Corp', 'Retail', 'Male', 3000000); INSERT INTO startups VALUES (3, 'Gamma Start', 'Technology', 'Female', 5000000);","completion":"SELECT SUM(funding) FROM startups WHERE sector = 'Technology' AND founder_gender = 'Female';"}
{"prompt":"Which industries have the most companies founded in a given year? with given SQL schema CREATE TABLE Company (id INT, name VARCHAR(50), industry VARCHAR(50), founding_year INT); INSERT INTO Company (id, name, industry, founding_year) VALUES (1, 'Acme Inc', 'Tech', 2010); INSERT INTO Company (id, name, industry, founding_year) VALUES (2, 'Bravo Corp', 'Finance', 2005); INSERT INTO Company (id, name, industry, founding_year) VALUES (3, 'Charlie LLC', 'Retail', 2010); INSERT INTO Company (id, name, industry, founding_year) VALUES (4, 'Delta Inc', 'Healthcare', 2008);","completion":"SELECT industry, founding_year, COUNT(*) as company_count FROM Company GROUP BY industry, founding_year ORDER BY company_count DESC;"}
{"prompt":"Find the average age of farmers who cultivate maize in the 'crop_distribution' view. with given SQL schema CREATE VIEW crop_distribution AS SELECT f.name AS farmer_name, f.age AS farmer_age, c.crop_name FROM farmers f JOIN crops c ON f.id = c.farmer_id WHERE c.crop_name = 'maize'; INSERT INTO crops (id, farmer_id, crop_name, acres) VALUES (1, 1, 'maize', 50), (2, 2, 'maize', 75), (3, 3, 'soybean', 100);","completion":"SELECT AVG(farmer_age) FROM crop_distribution WHERE crop_name = 'maize';"}
{"prompt":"Add a new marine protected area 'Cabo Pulmo National Park' to Mexico with a size of 62.26 square miles. with given SQL schema CREATE TABLE marine_protected_areas (country VARCHAR(255), name VARCHAR(255), size FLOAT); INSERT INTO marine_protected_areas (country, name, size) VALUES ('Mexico', 'Cabo Pulmo National Park', 62.26);","completion":"INSERT INTO marine_protected_areas (country, name, size) VALUES ('Mexico', 'Cabo Pulmo National Park', 62.26);"}
{"prompt":"What is the name of the smart contract associated with the ID 5? with given SQL schema CREATE TABLE smart_contracts (id INT, name VARCHAR(255)); INSERT INTO smart_contracts (id, name) VALUES (5, 'Compound');","completion":"SELECT name FROM smart_contracts WHERE id = 5;"}
{"prompt":"What is the total supply of Bitcoin and Ethereum? with given SQL schema CREATE TABLE crypto_supply (coin VARCHAR(10), total_supply DECIMAL(20,2)); INSERT INTO crypto_supply (coin, total_supply) VALUES ('Bitcoin', 18763463.12), ('Ethereum', 113453453.23);","completion":"SELECT coin, total_supply FROM crypto_supply WHERE coin IN ('Bitcoin', 'Ethereum');"}
{"prompt":"Who is the creator of the 'Uniswap V3' smart contract? with given SQL schema CREATE TABLE smart_contracts (id INT, name VARCHAR(255), creator VARCHAR(255)); INSERT INTO smart_contracts (id, name, creator) VALUES (11, 'Uniswap V3', 'Hayden Adams');","completion":"SELECT creator FROM smart_contracts WHERE name = 'Uniswap V3';"}
{"prompt":"What is the average carbon sequestration in '2019' for 'African' forests? with given SQL schema CREATE TABLE forests (id INT, region VARCHAR(50)); INSERT INTO forests (id, region) VALUES (1, 'African'); CREATE TABLE species (id INT, name VARCHAR(50)); CREATE TABLE carbon_sequestration (id INT, species_id INT, forest_id INT, year INT, sequestration FLOAT); INSERT INTO carbon_sequestration (id, species_id, forest_id, year, sequestration) VALUES (1, 1, 1, 2019, 2.8);","completion":"SELECT AVG(sequestration) FROM carbon_sequestration JOIN forests ON carbon_sequestration.forest_id = forests.id WHERE forests.region = 'African' AND carbon_sequestration.year = 2019;"}
{"prompt":"What is the total carbon sequestration for each forest in the 'carbon' table? with given SQL schema CREATE TABLE carbon (forest_id INT, year INT, sequestration FLOAT);","completion":"SELECT forest_id, SUM(sequestration) FROM carbon GROUP BY forest_id;"}
{"prompt":"Show the percentage of natural ingredients in each beauty product with given SQL schema CREATE TABLE product_ingredients (product VARCHAR(255), ingredient VARCHAR(255), is_natural BOOLEAN); INSERT INTO product_ingredients (product, ingredient, is_natural) VALUES ('Shampoo', 'Water', TRUE), ('Conditioner', 'Silicones', FALSE);","completion":"SELECT product, (SUM(CASE WHEN is_natural THEN 1 ELSE 0 END) * 100.0 \/ COUNT(*)) AS natural_ingredient_percentage FROM product_ingredients GROUP BY product;"}
{"prompt":"Show the top 5 countries contributing to sales of organic skincare products. with given SQL schema CREATE TABLE cosmetics_sales(sales_date DATE, country VARCHAR(255), product_type VARCHAR(255), sales_quantity INT, sales_revenue DECIMAL(10,2)); CREATE TABLE product_ingredients(product_id INT, product_type VARCHAR(255), contains_natural_ingredients BOOLEAN, contains_organic_ingredients BOOLEAN);","completion":"SELECT cs.country, SUM(cs.sales_revenue) AS total_revenue FROM cosmetics_sales cs JOIN product_ingredients pi ON cs.product_type = pi.product_type WHERE pi.contains_natural_ingredients = TRUE AND pi.contains_organic_ingredients = TRUE GROUP BY cs.country ORDER BY total_revenue DESC LIMIT 5;"}
{"prompt":"List all museums that have had an increase in attendance in the last two years compared to the previous two years. with given SQL schema CREATE TABLE Museums (museum_id INT, museum_name VARCHAR(50), year INT, attendance INT); INSERT INTO Museums (museum_id, museum_name, year, attendance) VALUES (1, 'Metropolitan Museum', 2017, 10000), (2, 'British Museum', 2018, 12000), (3, 'Louvre Museum', 2019, 15000), (4, 'State Hermitage', 2020, 18000);","completion":"SELECT museum_name FROM Museums WHERE year BETWEEN 2018 AND 2020 GROUP BY museum_name HAVING AVG(attendance) > (SELECT AVG(attendance) FROM Museums WHERE year BETWEEN 2016 AND 2017 GROUP BY museum_name);"}
{"prompt":"What is the total assets of customers who have accounts in both New York and California branches? with given SQL schema CREATE TABLE branches (id INT, name VARCHAR(255)); INSERT INTO branches (id, name) VALUES (1, 'New York'), (2, 'California'); CREATE TABLE customers (id INT, name VARCHAR(255), total_assets DECIMAL(10, 2), branch_id INT); INSERT INTO customers (id, name, total_assets, branch_id) VALUES (1, 'Alice', 50000, 1), (2, 'Bob', 75000, 1), (3, 'Charlie', 30000, 2), (4, 'Diana', 60000, 2);","completion":"SELECT SUM(c.total_assets) FROM customers c INNER JOIN branches b ON c.branch_id = b.id WHERE b.name IN ('New York', 'California') GROUP BY b.name;"}
{"prompt":"What is the total transaction amount for customers in the Northeast region in January 2022? with given SQL schema CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_date DATE, transaction_amount DECIMAL(10,2)); INSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (1, 2, '2022-01-05', 350.00), (2, 1, '2022-01-10', 500.00), (3, 3, '2022-02-15', 700.00);","completion":"SELECT SUM(transaction_amount) FROM transactions WHERE customer_id IN (SELECT customer_id FROM customers WHERE region = 'Northeast') AND transaction_date BETWEEN '2022-01-01' AND '2022-01-31';"}
{"prompt":"How many excavation sites are located in 'Italy' or 'Greece'? with given SQL schema CREATE TABLE ExcavationSites (id INT, site VARCHAR(20), location VARCHAR(30), start_date DATE, end_date DATE); INSERT INTO ExcavationSites (id, site, location, start_date, end_date) VALUES (1, 'BronzeAge', 'UK', '2000-01-01', '2005-12-31'), (2, 'AncientRome', 'Italy', '1999-01-01', '2002-12-31'), (3, 'Mycenae', 'Greece', '2003-01-01', '2006-12-31');","completion":"SELECT COUNT(DISTINCT site) FROM ExcavationSites WHERE location IN ('Italy', 'Greece');"}
{"prompt":"Calculate the average number of doctor visits per rural patient with heart disease with given SQL schema CREATE TABLE doctors (doctor_id INTEGER, hospital TEXT); INSERT INTO doctors (doctor_id, hospital) VALUES (1, 'Pocahontas Memorial Hospital'), (2, 'Pocahontas Memorial Hospital'), (3, 'Memorial Hospital of Converse County'); CREATE TABLE visits (patient_id INTEGER, hospital TEXT, visit_date DATE, visit_type TEXT); INSERT INTO visits (patient_id, hospital, visit_date, visit_type) VALUES (1, 'Pocahontas Memorial Hospital', '2019-05-14', 'doctor'), (2, 'Pocahontas Memorial Hospital', '2020-03-12', 'doctor'), (3, 'Memorial Hospital of Converse County', '2020-07-20', 'doctor'); CREATE TABLE patients (patient_id INTEGER, diagnosis TEXT); INSERT INTO patients (patient_id, diagnosis) VALUES (1, 'heart disease'), (2, 'heart disease'), (3, 'diabetes');","completion":"SELECT AVG(visits_per_patient) FROM (SELECT patient_id, COUNT(*) as visits_per_patient FROM visits JOIN patients ON visits.patient_id = patients.patient_id WHERE diagnosis = 'heart disease' GROUP BY patient_id) as heart_disease_patients;"}
{"prompt":"How many doctors work in Indigenous rural areas, and what is their average salary? with given SQL schema CREATE TABLE doctors (id INT, age INT, salary INT, is_indigenous BOOLEAN); INSERT INTO doctors (id, age, salary, is_indigenous) VALUES (1, 55, 120000, true), (2, 45, 150000, false); CREATE TABLE locations (id INT, is_rural BOOLEAN); INSERT INTO locations (id, is_rural) VALUES (1, true), (2, false);","completion":"SELECT COUNT(doctors.id), AVG(doctors.salary) FROM doctors INNER JOIN locations ON doctors.id = locations.id WHERE locations.is_rural = true AND doctors.is_indigenous = true;"}
{"prompt":"What is the percentage of the population that is vaccinated by age group in rural areas? with given SQL schema CREATE TABLE population (id INT, age INT, location VARCHAR(50), vaccinated BOOLEAN); INSERT INTO population (id, age, location, vaccinated) VALUES (1, 20, 'Rural', true);","completion":"SELECT age_group, (SUM(vaccinated_count) * 100.0 \/ SUM(total_count)) as vaccination_percentage FROM (SELECT age\/10 as age_group, SUM(vaccinated) as vaccinated_count, COUNT(*) as total_count FROM population WHERE location = 'Rural' GROUP BY age\/10) as subquery GROUP BY age_group;"}
{"prompt":"What was the total amount of ESG investments made by Green Ventures in Q1 2021? with given SQL schema CREATE TABLE Green_Ventures (id INT, quarter VARCHAR(10), amount FLOAT); INSERT INTO Green_Ventures (id, quarter, amount) VALUES (1, 'Q1 2021', 500000), (2, 'Q2 2021', 700000);","completion":"SELECT SUM(amount) FROM Green_Ventures WHERE quarter = 'Q1 2021' AND context ILIKE '%ESG%';"}
{"prompt":"What is the average number of streams per day for each song by artists from the United States on Apple Music? with given SQL schema CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(100), Country VARCHAR(50)); INSERT INTO Artists (ArtistID, ArtistName, Country) VALUES (4, 'Billie Eilish', 'United States'); CREATE TABLE StreamingPlatforms (PlatformID INT, PlatformName VARCHAR(50)); INSERT INTO StreamingPlatforms (PlatformID, PlatformName) VALUES (1, 'Spotify'), (2, 'Apple Music'); CREATE TABLE SongsStreams (SongID INT, ArtistID INT, PlatformID INT, StreamCount INT, ReleaseDate DATE); INSERT INTO SongsStreams (SongID, ArtistID, PlatformID, StreamCount, ReleaseDate) VALUES (5, 4, 2, 1000000, '2019-03-29');","completion":"SELECT ss.SongID, AVG(ss.StreamCount \/ DATEDIFF('2022-12-31', ss.ReleaseDate)) AS AvgStreamsPerDay FROM SongsStreams ss JOIN Artists a ON ss.ArtistID = a.ArtistID JOIN StreamingPlatforms sp ON ss.PlatformID = sp.PlatformID WHERE a.Country = 'United States' AND sp.PlatformName = 'Apple Music' GROUP BY ss.SongID;"}
{"prompt":"What was the total budget for the Operations department in each quarter of 2019? with given SQL schema CREATE TABLE Operations_Budget (id INT, department VARCHAR(50), category VARCHAR(50), amount FLOAT, budget_date DATE); INSERT INTO Operations_Budget (id, department, category, amount, budget_date) VALUES (1, 'Operations', 'Salaries', 50000, '2019-01-01'); INSERT INTO Operations_Budget (id, department, category, amount, budget_date) VALUES (2, 'Operations', 'Office Supplies', 10000, '2019-02-01');","completion":"SELECT department, QUARTER(budget_date) as quarter, SUM(amount) as total_budget FROM Operations_Budget WHERE YEAR(budget_date) = 2019 AND department = 'Operations' GROUP BY department, quarter;"}
{"prompt":"What is the distribution of employees by education level? with given SQL schema CREATE TABLE Employees (id INT, name VARCHAR(50), education_level VARCHAR(50)); INSERT INTO Employees (id, name, education_level) VALUES (1, 'Jamal Thompson', 'Master''s'); INSERT INTO Employees (id, name, education_level) VALUES (2, 'Sophia Garcia', 'Bachelor''s'); INSERT INTO Employees (id, name, education_level) VALUES (3, 'Hassan Patel', 'PhD');","completion":"SELECT education_level, COUNT(*) AS total FROM Employees GROUP BY education_level;"}
{"prompt":"What is the maximum installed capacity (MW) of energy storage in 'Australia'? with given SQL schema CREATE TABLE max_energy_storage (storage_id INT, country VARCHAR(50), capacity FLOAT); INSERT INTO max_energy_storage (storage_id, country, capacity) VALUES (1, 'Australia', 50.1), (2, 'Japan', 75.2);","completion":"SELECT MAX(capacity) FROM max_energy_storage WHERE country = 'Australia';"}
{"prompt":"How many wells were drilled in the Gulf of Mexico each year from 2017 to 2020? with given SQL schema CREATE TABLE drilling (drilling_id INT, well_id INT, drilling_date DATE, location VARCHAR(50)); INSERT INTO drilling (drilling_id, well_id, drilling_date, location) VALUES (1, 4, '2017-03-02', 'Gulf of Mexico'), (2, 5, '2018-06-18', 'Gulf of Mexico'), (3, 6, '2019-09-24', 'Gulf of Mexico'), (4, 7, '2020-11-05', 'Gulf of Mexico');","completion":"SELECT EXTRACT(YEAR FROM drilling_date) as year, COUNT(DISTINCT well_id) as num_wells FROM drilling WHERE location = 'Gulf of Mexico' GROUP BY year ORDER BY year;"}
{"prompt":"Insert new records into 'ProductionFigures' table for the following data: (WellID, Year, GasQuantity, OilQuantity) - ('Well01', '2019', 5000, 10000), ('Well02', '2019', 6000, 12000) with given SQL schema CREATE TABLE ProductionFigures (WellID VARCHAR(10), Year INT, GasQuantity INT, OilQuantity INT);","completion":"INSERT INTO ProductionFigures (WellID, Year, GasQuantity, OilQuantity) VALUES ('Well01', '2019', '5000', '10000'), ('Well02', '2019', '6000', '12000');"}
{"prompt":"Update the age column for a player in the players table with given SQL schema CREATE TABLE players (id INT PRIMARY KEY, name VARCHAR(50), age INT, sport VARCHAR(50));","completion":"UPDATE players SET age = 25 WHERE name = 'John Doe';"}
{"prompt":"What is the most common foul in the 'basketball_fouls' table? with given SQL schema CREATE TABLE basketball_teams (team_id INT, name VARCHAR(50)); CREATE TABLE basketball_players (player_id INT, name VARCHAR(50), team_id INT); CREATE TABLE basketball_fouls (foul_id INT, player_id INT, type VARCHAR(50)); INSERT INTO basketball_teams (team_id, name) VALUES (1, 'Chicago Bulls'), (2, 'Los Angeles Lakers'); INSERT INTO basketball_players (player_id, name, team_id) VALUES (1, 'Michael Jordan', 1), (2, 'Kobe Bryant', 2); INSERT INTO basketball_fouls (foul_id, player_id, type) VALUES (1, 1, 'Block'), (2, 1, 'Charge'), (3, 2, 'Block'), (4, 2, 'Charge'), (5, 2, 'Travel');","completion":"SELECT type AS most_common_foul FROM basketball_fouls GROUP BY type ORDER BY COUNT(*) DESC LIMIT 1;"}
{"prompt":"How many workers in fair-trade certified factories are based in Latin America? with given SQL schema CREATE TABLE workers (id INT, certification VARCHAR(20), region VARCHAR(20)); INSERT INTO workers (id, certification, region) VALUES (1, 'Fair Trade', 'Brazil'), (2, 'GOTS', 'India'), (3, 'Fair Trade', 'Mexico');","completion":"SELECT COUNT(*) FROM workers WHERE certification = 'Fair Trade' AND region = 'Latin America';"}
{"prompt":"What is the total production cost of linen products in the Netherlands? with given SQL schema CREATE TABLE production_cost (country VARCHAR(255), material VARCHAR(255), product VARCHAR(255), cost DECIMAL(10,2)); INSERT INTO production_cost (country, material, product, cost) VALUES ('Netherlands', 'linen', 'shirt', 25.50); INSERT INTO production_cost (country, material, product, cost) VALUES ('Netherlands', 'linen', 'pants', 35.75);","completion":"SELECT SUM(cost) FROM production_cost WHERE country = 'Netherlands' AND material = 'linen';"}
{"prompt":"What is the total retail price of sustainable fabrics by country of origin? with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT, country_of_origin TEXT, retail_price DECIMAL(5,2)); INSERT INTO products (product_id, product_name, country_of_origin, retail_price) VALUES (1, 'Organic Cotton Shirt', 'India', 35.00), (2, 'Recycled Polyester Jacket', 'China', 120.00), (3, 'Hemp T-Shirt', 'France', 45.00);","completion":"SELECT country_of_origin, SUM(retail_price) as total_retail_price FROM products GROUP BY country_of_origin;"}
{"prompt":"Calculate the total value of loans issued to clients in the Asia-Pacific region, grouped by account type. with given SQL schema CREATE TABLE loans (loan_id INT, client_region VARCHAR(20), account_type VARCHAR(20), loan_amount DECIMAL(10, 2)); INSERT INTO loans (loan_id, client_region, account_type, loan_amount) VALUES (1, 'Asia-Pacific', 'Shariah Compliant', 12000.00), (2, 'Europe', 'Shariah Compliant', 9000.00), (3, 'Asia-Pacific', 'Conventional', 15000.00), (4, 'North America', 'Conventional', 10000.00);","completion":"SELECT account_type, SUM(loan_amount) FROM loans WHERE client_region = 'Asia-Pacific' GROUP BY account_type;"}
{"prompt":"How many financial capability training sessions were conducted by EmpowermentCDF in 2018? with given SQL schema CREATE TABLE EmpowermentCDF (id INT, event_type VARCHAR(20), event_date DATE); INSERT INTO EmpowermentCDF (id, event_type, event_date) VALUES (1, 'Financial Capability Training', '2018-02-14');","completion":"SELECT COUNT(*) FROM EmpowermentCDF WHERE event_type = 'Financial Capability Training' AND YEAR(event_date) = 2018;"}
{"prompt":"What is the third highest account balance for Shariah-compliant finance customers? with given SQL schema CREATE TABLE shariah_compliant_finance(customer_id INT, account_balance DECIMAL(10, 2)); INSERT INTO shariah_compliant_finance VALUES (1, 5000), (2, 7000), (3, 6000), (4, 8000), (5, 9000);","completion":"SELECT account_balance FROM (SELECT account_balance, RANK() OVER (ORDER BY account_balance DESC) as rn FROM shariah_compliant_finance) t WHERE rn = 3;"}
{"prompt":"Which program had the most unique donors in Q1 2022? with given SQL schema CREATE TABLE Q1Donors (DonorID INT, Program VARCHAR(30)); INSERT INTO Q1Donors (DonorID, Program) VALUES (1, 'Environment'), (2, 'Education'), (3, 'Environment'), (4, 'Health'), (5, 'Education');","completion":"SELECT Program, COUNT(DISTINCT DonorID) FROM Q1Donors WHERE Program IN ('Environment', 'Education', 'Health') GROUP BY Program ORDER BY COUNT(DISTINCT DonorID) DESC LIMIT 1;"}
{"prompt":"What is the minimum lead time for warehouse transfers in the New York warehouse? with given SQL schema CREATE TABLE WarehouseTransfers (id INT, source_warehouse_id INT, destination_warehouse_id INT, lead_time INT); INSERT INTO WarehouseTransfers (id, source_warehouse_id, destination_warehouse_id, lead_time) VALUES (1, 6, 7, 3), (2, 6, 7, 5), (3, 8, 6, 4); CREATE TABLE Warehouses (id INT, name TEXT, city TEXT, state TEXT); INSERT INTO Warehouses (id, name, city, state) VALUES (6, 'New York Warehouse', 'New York', 'NY'), (7, 'Chicago Warehouse', 'Chicago', 'IL'), (8, 'Denver Warehouse', 'Denver', 'CO');","completion":"SELECT MIN(lead_time) FROM WarehouseTransfers JOIN Warehouses ON WarehouseTransfers.source_warehouse_id = Warehouses.id WHERE Warehouses.name = 'New York Warehouse';"}
{"prompt":"What is the total number of packages shipped to the Midwest from all warehouses? with given SQL schema CREATE TABLE midwest_states (state_id INT, state_name VARCHAR(50)); INSERT INTO midwest_states (state_id, state_name) VALUES (1, 'Illinois'), (2, 'Indiana'), (3, 'Iowa'), (4, 'Kansas'), (5, 'Michigan'), (6, 'Minnesota'), (7, 'Missouri'), (8, 'Nebraska'), (9, 'Ohio'), (10, 'Wisconsin'); CREATE TABLE packages (package_id INT, package_weight INT, warehouse_id INT, recipient_state VARCHAR(50)); INSERT INTO packages (package_id, package_weight, warehouse_id, recipient_state) VALUES (1, 5, 1, 'California'), (2, 3, 2, 'Texas'), (3, 4, 3, 'Illinois');","completion":"SELECT COUNT(package_id) FROM packages WHERE recipient_state IN (SELECT state_name FROM midwest_states);"}
{"prompt":"Which startups in the 'StartupFunding' table received funding in 2020 or later and have a budget greater than $500,000? with given SQL schema CREATE SCHEMA BiotechStartups; CREATE TABLE StartupFunding (startup_name VARCHAR(50), funding_year INT, funding DECIMAL(10, 2)); INSERT INTO StartupFunding VALUES ('StartupA', 2019, 500000), ('StartupB', 2020, 750000);","completion":"SELECT startup_name FROM BiotechStartups.StartupFunding WHERE funding_year >= 2020 AND funding > 500000;"}
{"prompt":"What are the names of journals where at least one professor from the Physics department has published? with given SQL schema CREATE TABLE Publications (PublicationID INT, Author VARCHAR(50), Journal VARCHAR(50), Year INT); INSERT INTO Publications (PublicationID, Author, Journal, Year) VALUES (1, 'Alice', 'Journal of Physics', 2020); INSERT INTO Publications (PublicationID, Author, Journal, Year) VALUES (2, 'Bob', 'Journal of Chemistry', 2019); INSERT INTO Publications (PublicationID, Author, Journal, Year) VALUES (3, 'Carla', 'Journal of Physics', 2021); INSERT INTO Professors (ProfessorID, Name, Department) VALUES (1, 'Alice', 'Physics'); INSERT INTO Professors (ProfessorID, Name, Department) VALUES (2, 'Bob', 'Chemistry');","completion":"SELECT Journal FROM Publications WHERE Author IN (SELECT Name FROM Professors WHERE Department = 'Physics');"}
{"prompt":"Find the number of wind turbines installed in Germany in the year 2020. with given SQL schema CREATE TABLE renewable_energy (id INT, type TEXT, country TEXT, installation_year INT); INSERT INTO renewable_energy (id, type, country, installation_year) VALUES (1, 'Wind Turbine', 'Germany', 2020), (2, 'Solar Panel', 'France', 2019), (3, 'Wind Turbine', 'Germany', 2018);","completion":"SELECT COUNT(*) FROM renewable_energy WHERE type = 'Wind Turbine' AND country = 'Germany' AND installation_year = 2020;"}
{"prompt":"Retrieve the project names and their costs for green building projects in the GreenBuildings schema with given SQL schema CREATE SCHEMA GreenBuildings; USE GreenBuildings; CREATE TABLE GreenBuildingProjects (id INT, project_name VARCHAR(100), cost DECIMAL(10,2)); INSERT INTO GreenBuildingProjects (id, project_name, cost) VALUES (1, 'Solar Panel Installation', 150000.00), (2, 'Wind Turbine Installation', 200000.00);","completion":"SELECT project_name, cost FROM GreenBuildings.GreenBuildingProjects;"}
{"prompt":"Create a cross join table for mental health parity and community health workers with given SQL schema CREATE TABLE mental_health_parity (id INT PRIMARY KEY, state VARCHAR(2), year INT, accessibility FLOAT, quality FLOAT); CREATE TABLE community_health_workers (id INT PRIMARY KEY, state VARCHAR(2), year INT, workers_per_capita FLOAT, supervision_hours INT);","completion":"CREATE TABLE if not exists mental_health_parity_community_workers AS SELECT * FROM mental_health_parity CROSS JOIN community_health_workers WHERE FALSE;"}
{"prompt":"Insert data into \"hotel_sustainability\" table with values \"1\", \"Green Hotel\", \"Paris\", \"Recycling, Solar Power\" with given SQL schema CREATE TABLE hotel_sustainability (hotel_id integer, name text, location text, sustainable_practices text);","completion":"INSERT INTO hotel_sustainability (hotel_id, name, location, sustainable_practices) VALUES (1, 'Green Hotel', 'Paris', 'Recycling, Solar Power');"}
{"prompt":"List the names of all museums in Canada with a rating greater than 4.0 and having virtual tours. with given SQL schema CREATE TABLE museums (museum_id INT, name VARCHAR(255), country VARCHAR(255), rating FLOAT, virtual_tour BOOLEAN); INSERT INTO museums (museum_id, name, country, rating, virtual_tour) VALUES (1, 'Royal Ontario Museum', 'Canada', 4.4, TRUE), (2, 'Montreal Museum of Fine Arts', 'Canada', 4.1, FALSE), (3, 'Vancouver Art Gallery', 'Canada', 4.6, TRUE);","completion":"SELECT name FROM museums WHERE country = 'Canada' AND rating > 4.0 AND virtual_tour = TRUE;"}
{"prompt":"What is the average revenue of virtual tours in 'Spain'? with given SQL schema CREATE TABLE virtual_tours (id INT, name TEXT, country TEXT, revenue FLOAT); INSERT INTO virtual_tours (id, name, country, revenue) VALUES (1, 'Virtual Barcelona Tour', 'Spain', 2000);","completion":"SELECT AVG(revenue) FROM virtual_tours WHERE country = 'Spain';"}
{"prompt":"What is the maximum number of virtual tours taken by a single user in the UK? with given SQL schema CREATE TABLE virtual_tour_data (user_id INT, hotel_id INT, tour_date DATE); INSERT INTO virtual_tour_data (user_id, hotel_id, tour_date) VALUES (1, 10, '2022-01-01'), (2, 11, '2022-01-03'), (3, 12, '2022-01-05'), (4, 10, '2022-01-07'), (5, 10, '2022-01-09'); CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT); INSERT INTO hotels (hotel_id, hotel_name, country) VALUES (10, 'Royal Park Hotel', 'UK'), (11, 'The Ritz London', 'UK'), (12, 'Hotel de Crillon', 'France');","completion":"SELECT MAX(vt.user_tours) FROM (SELECT user_id, COUNT(DISTINCT hotel_id) as user_tours FROM virtual_tour_data WHERE country = 'UK' GROUP BY user_id) as vt;"}
{"prompt":"What is the most recent exhibition for each artist? with given SQL schema CREATE TABLE artist_exhibitions (artist_id INT, exhibition_id INT, exhibition_title VARCHAR(255), exhibition_location VARCHAR(255), exhibition_start_date DATE); INSERT INTO artist_exhibitions (artist_id, exhibition_id, exhibition_title, exhibition_location, exhibition_start_date) VALUES (1, 3, 'Da Vinci Masterpieces', 'Metropolitan Museum', '2024-01-01'); INSERT INTO artist_exhibitions (artist_id, exhibition_id, exhibition_title, exhibition_location, exhibition_start_date) VALUES (2, 4, 'Van Gogh and Expressionism', 'Museum of Modern Art', '2025-01-01');","completion":"SELECT artist_id, exhibition_id, exhibition_title, exhibition_location, exhibition_start_date, ROW_NUMBER() OVER (PARTITION BY artist_id ORDER BY exhibition_start_date DESC) as rank FROM artist_exhibitions;"}
{"prompt":"Update the language column of the record with id 4 in the heritage_sites table to 'French'. with given SQL schema CREATE TABLE heritage_sites (id INT, name VARCHAR(50), language VARCHAR(50)); INSERT INTO heritage_sites (id, name, language) VALUES (1, 'Mesa Verde', 'English'), (2, 'Old Quebec', 'French'), (3, 'Chichen Itza', 'Mayan'), (4, 'Angkor Wat', 'Khmer');","completion":"UPDATE heritage_sites SET language = 'French' WHERE id = 4;"}
{"prompt":"What are the names of the heritage sites that were added to the list in the last 5 years, along with the year they were added? with given SQL schema CREATE TABLE UNESCO_Heritage_Sites (id INT, site VARCHAR(100), year INT); INSERT INTO UNESCO_Heritage_Sites (id, site, year) VALUES (1, 'Colosseum', 1980), (2, 'Great Wall', 1987), (3, 'Alhambra', 1984);","completion":"SELECT site, year FROM UNESCO_Heritage_Sites WHERE year >= YEAR(CURRENT_DATE) - 5;"}
{"prompt":"Delete all records in the flights table where the carrier is WU\" with given SQL schema CREATE TABLE flights (id INT PRIMARY KEY, carrier VARCHAR(3), flight_number INT, origin VARCHAR(3), destination VARCHAR(3), scheduled_departure TIMESTAMP, scheduled_arrival TIMESTAMP);","completion":"DELETE FROM flights WHERE carrier = 'WU';"}
{"prompt":"How many marine species have been observed in the Indian Ocean, and what percentage of those are coral reef-dwelling species? with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(100), region VARCHAR(50), coral_reef_dweller BOOLEAN, biomass FLOAT);","completion":"SELECT COUNT(ms.id) as total_species, 100.0 * SUM(CASE WHEN ms.coral_reef_dweller THEN 1 ELSE 0 END) \/ COUNT(ms.id) as coral_reef_percentage FROM marine_species ms WHERE ms.region = 'Indian Ocean';"}
{"prompt":"List all the pollution control initiatives from the 'PollutionProjects' table with given SQL schema CREATE TABLE PollutionProjects (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE);","completion":"SELECT name FROM PollutionProjects;"}
{"prompt":"What is the maximum average depth for ocean floor mapping project sites in the 'MarineResearch' schema? with given SQL schema CREATE SCHEMA MarineResearch; CREATE TABLE OceanFloorMapping (site_id INT, location VARCHAR(255), avg_depth DECIMAL(5,2)); INSERT INTO OceanFloorMapping (site_id, location, avg_depth) VALUES (1, 'SiteA', 3500.50), (2, 'SiteB', 4600.25), (3, 'SiteC', 2100.00);","completion":"SELECT MAX(avg_depth) FROM MarineResearch.OceanFloorMapping;"}
{"prompt":"Update the names of all news agencies from country X to their official English names. with given SQL schema CREATE TABLE news_agencies (id INT, name TEXT, country TEXT); INSERT INTO news_agencies (id, name, country) VALUES (1, 'Agency 1', 'Country X'); CREATE TABLE articles (id INT, title TEXT, agency_id INT); INSERT INTO articles (id, title, agency_id) VALUES (1, 'Article 1', 1);","completion":"UPDATE news_agencies SET name = CASE WHEN country = 'Country X' THEN 'Official English Name 1' ELSE name END;"}
{"prompt":"What is the total monthly revenue of the 'Organic' product category? with given SQL schema CREATE TABLE Sales (SaleID INT, Product VARCHAR(50), Category VARCHAR(50), SaleDate DATE); INSERT INTO Sales (SaleID, Product, Category, SaleDate) VALUES (1, 'Orange', 'Organic', '2022-01-05'), (2, 'Banana', 'Organic', '2022-01-10');","completion":"SELECT SUM(SaleDate >= '2022-01-01' AND SaleDate < '2022-02-01') FROM Sales WHERE Category = 'Organic';"}
{"prompt":"How many mining-related accidents happened in Ontario or British Columbia? with given SQL schema CREATE TABLE accident (id INT, location VARCHAR(50), type VARCHAR(20)); INSERT INTO accident (id, location, type) VALUES (1, 'Ontario', 'mining'), (2, 'British Columbia', 'drilling'), (3, 'Alberta', 'extraction'), (4, 'Quebec', 'prospecting');","completion":"SELECT COUNT(*) FROM accident WHERE location IN ('Ontario', 'British Columbia') AND type LIKE '%mining%';"}
{"prompt":"What are the total amounts of copper and gold extracted by each company? with given SQL schema CREATE TABLE company (id INT, name VARCHAR(255));CREATE TABLE copper_extraction (company_id INT, amount INT);CREATE TABLE gold_extraction (company_id INT, amount INT);","completion":"SELECT c.name, SUM(ce.amount) as total_copper, SUM(ge.amount) as total_gold FROM company c LEFT JOIN copper_extraction ce ON c.id = ce.company_id LEFT JOIN gold_extraction ge ON c.id = ge.company_id GROUP BY c.name;"}
{"prompt":"What is the maximum environmental impact score for a mine site in Q1 2023? with given SQL schema CREATE TABLE environmental_impact_q1_2023 (site_id INT, impact_score INT, impact_date DATE); INSERT INTO environmental_impact_q1_2023 (site_id, impact_score, impact_date) VALUES (5, 70, '2023-01-15'), (5, 75, '2023-02-20'), (5, 80, '2023-03-31');","completion":"SELECT MAX(impact_score) FROM environmental_impact_q1_2023 WHERE impact_date BETWEEN '2023-01-01' AND '2023-03-31';"}
{"prompt":"What is the total CO2 emission in the 'environmental_impact' table for the years 2018 and 2019? with given SQL schema CREATE TABLE environmental_impact (id INT, year INT, co2_emission FLOAT); INSERT INTO environmental_impact (id, year, co2_emission) VALUES (1, 2018, 12000.00); INSERT INTO environmental_impact (id, year, co2_emission) VALUES (2, 2019, 15000.00); INSERT INTO environmental_impact (id, year, co2_emission) VALUES (3, 2020, 18000.00);","completion":"SELECT SUM(co2_emission) FROM environmental_impact WHERE year IN (2018, 2019);"}
{"prompt":"What is the distribution of articles by date for a specific news agency? with given SQL schema CREATE TABLE article_dates (id INT PRIMARY KEY, article_id INT, date DATE, FOREIGN KEY (article_id) REFERENCES articles(id));","completion":"SELECT date, COUNT(*) as total_articles FROM article_dates JOIN articles ON article_dates.article_id = articles.id WHERE articles.agency_id = 1 GROUP BY date;"}
{"prompt":"What is the average ocean acidification level in each ocean? with given SQL schema CREATE TABLE ocean_acidification_data (location text, level decimal); INSERT INTO ocean_acidification_data (location, level) VALUES ('Pacific Ocean', 8.2), ('Atlantic Ocean', 8.3), ('Indian Ocean', 8.1);","completion":"SELECT location, AVG(level) FROM ocean_acidification_data GROUP BY location;"}
{"prompt":"Get the last session date of each player in 'game_sessions' table. with given SQL schema CREATE TABLE game_sessions (SessionID INT, PlayerID INT, SessionDate DATE); INSERT INTO game_sessions (SessionID, PlayerID, SessionDate) VALUES (1, 1, '2021-06-01'); INSERT INTO game_sessions (SessionID, PlayerID, SessionDate) VALUES (2, 2, '2021-06-10');","completion":"SELECT PlayerID, MAX(SessionDate) AS LastSessionDate FROM game_sessions GROUP BY PlayerID;"}
{"prompt":"Identify the percentage of IoT devices with firmware version 3.x.x in the 'Asia' region. with given SQL schema CREATE TABLE IoTDevices (region VARCHAR(255), device_id INT, firmware_version VARCHAR(255)); INSERT INTO IoTDevices (region, device_id, firmware_version) VALUES ('Asia', 1001, '3.4.5'), ('Asia', 1002, '3.5.1'), ('Asia', 1003, '3.4.8'), ('Asia', 1004, '3.6.0'), ('Europe', 1005, '2.3.2'), ('Europe', 1006, '2.5.1');","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM IoTDevices WHERE region = 'Asia')) AS Percentage FROM IoTDevices WHERE region = 'Asia' AND firmware_version LIKE '3.%';"}
{"prompt":"What is the maximum temperature recorded for crop 'Rice'? with given SQL schema CREATE TABLE WeatherData (crop_type VARCHAR(20), temperature FLOAT, record_date DATE); INSERT INTO WeatherData (crop_type, temperature, record_date) VALUES ('Corn', 22.5, '2022-01-01'); INSERT INTO WeatherData (crop_type, temperature, record_date) VALUES ('Rice', 30.1, '2022-01-05');","completion":"SELECT MAX(temperature) FROM WeatherData WHERE crop_type = 'Rice';"}
{"prompt":"How many public transport trips were taken in London, Paris, and Berlin for the last month, by hour? with given SQL schema CREATE TABLE Trips (City VARCHAR(50), TripDate DATE, Hour INT, NumberOfTrips INT); INSERT INTO Trips (City, TripDate, Hour, NumberOfTrips) VALUES ('London', '2022-04-11', 1, 500), ('London', '2022-04-11', 2, 600), ('London', '2022-04-11', 3, 700), ('Paris', '2022-04-11', 1, 400), ('Paris', '2022-04-11', 2, 550), ('Paris', '2022-04-11', 3, 600), ('Berlin', '2022-04-11', 1, 300), ('Berlin', '2022-04-11', 2, 450), ('Berlin', '2022-04-11', 3, 500);","completion":"SELECT City, DATE_PART('hour', TripDate) as Hour, SUM(NumberOfTrips) as TotalTrips FROM Trips WHERE City IN ('London', 'Paris', 'Berlin') AND TripDate >= DATEADD(day, -30, CURRENT_DATE) GROUP BY City, Hour;"}
{"prompt":"What is the average property tax for single-family homes in each neighborhood? with given SQL schema CREATE TABLE Neighborhoods (NeighborhoodID INT, Name VARCHAR(50), AveragePropertyTax FLOAT);CREATE TABLE Properties (PropertyID INT, NeighborhoodID INT, PropertyType VARCHAR(50), PropertyTax FLOAT);","completion":"SELECT N.Name, AVG(P.PropertyTax) as AvgPropertyTax FROM Properties P JOIN Neighborhoods N ON P.NeighborhoodID = N.NeighborhoodID WHERE P.PropertyType = 'Single-Family' GROUP BY N.Name;"}
{"prompt":"What are the top 5 product categories with the highest average sales price across all stores? with given SQL schema CREATE TABLE stores (store_id INT, store_name VARCHAR(255));CREATE TABLE products (product_id INT, product_category VARCHAR(255), price DECIMAL(10,2));","completion":"SELECT product_category, AVG(price) as avg_price FROM products JOIN stores ON products.store_id = stores.store_id GROUP BY product_category ORDER BY avg_price DESC LIMIT 5;"}
{"prompt":"List the number of space missions launched by each country, grouped by the continent where the country is located, and show the total number of missions for each continent. with given SQL schema CREATE TABLE Space_Missions ( id INT, mission_name VARCHAR(255), country VARCHAR(255), launch_date DATE );   CREATE TABLE Countries ( id INT, country VARCHAR(255), continent VARCHAR(255) );","completion":"SELECT c.continent, COUNT(sm.country) as total_missions FROM Space_Missions sm JOIN Countries c ON sm.country = c.country GROUP BY c.continent;"}
{"prompt":"What is the count of missions involving a spacecraft with model Y, grouped by year? with given SQL schema CREATE TABLE MissionSpacecraft (id INT, mission_year INT, spacecraft_model VARCHAR(20));","completion":"SELECT mission_year, COUNT(*) FROM MissionSpacecraft WHERE spacecraft_model = 'Y' GROUP BY mission_year;"}
{"prompt":"Compare the number of electric and autonomous vehicles in New York and Los Angeles. with given SQL schema CREATE TABLE if not exists UsEvaCount(state CHAR(2), city CHAR(10), ev_count INT, av_count INT); INSERT INTO UsEvaCount(state, city, ev_count, av_count) VALUES ('NY', 'NewYork', 1200, 500), ('NY', 'NewYork', 1250, 550), ('NY', 'LosAngeles', 1500, 600), ('NY', 'LosAngeles', 1450, 650);","completion":"SELECT city, ev_count, av_count FROM UsEvaCount WHERE state IN ('NY') AND city IN ('NewYork', 'LosAngeles') GROUP BY city;"}
{"prompt":"Identify policyholders who have not submitted any claims in the last 6 months. with given SQL schema CREATE TABLE Policy (PolicyNumber INT, PolicyholderName VARCHAR(50)); CREATE TABLE Claim (ClaimID INT, PolicyNumber INT, ClaimDate DATE); INSERT INTO Policy VALUES (1, 'John Doe'), (2, 'Jane Smith'); INSERT INTO Claim VALUES (1, 1, '2021-01-01'), (2, 1, '2021-02-01'), (3, 2, '2021-04-01');","completion":"SELECT PolicyNumber, PolicyholderName FROM Policy WHERE PolicyNumber NOT IN (SELECT PolicyNumber FROM Claim WHERE ClaimDate > DATEADD(month, -6, GETDATE()));"}
{"prompt":"What is the average number of workplace safety incidents for each union in the healthcare industry? with given SQL schema CREATE TABLE union_healthcare (union_id INT, union_name TEXT, industry TEXT, incidents INT); INSERT INTO union_healthcare (union_id, union_name, industry, incidents) VALUES (1, 'Union X', 'Healthcare', 20), (2, 'Union Y', 'Healthcare', 15), (3, 'Union Z', 'Education', 10);","completion":"SELECT AVG(incidents) FROM union_healthcare WHERE industry = 'Healthcare';"}
{"prompt":"What is the average salary of female members in the 'construction' industry with a membership duration greater than 5 years? with given SQL schema CREATE TABLE union_members (id INT, gender VARCHAR(10), industry VARCHAR(20), salary INT, membership_duration INT); INSERT INTO union_members (id, gender, industry, salary, membership_duration) VALUES (1, 'Female', 'Construction', 50000, 6);","completion":"SELECT AVG(salary) FROM union_members WHERE gender = 'Female' AND industry = 'Construction' AND membership_duration > 5;"}
{"prompt":"What is the average salary of workers in the 'Finance' industry who are not part of a union? with given SQL schema CREATE TABLE workers (id INT, industry VARCHAR(255), salary FLOAT, union_member BOOLEAN); INSERT INTO workers (id, industry, salary, union_member) VALUES (1, 'Manufacturing', 50000.0, true), (2, 'Finance', 70000.0, false), (3, 'Retail', 30000.0, false);","completion":"SELECT AVG(salary) FROM workers WHERE industry = 'Finance' AND union_member = false;"}
{"prompt":"What is the total capacity of all vessels? with given SQL schema CREATE TABLE Vessels (ID VARCHAR(20), Name VARCHAR(20), Type VARCHAR(20), Capacity INT); INSERT INTO Vessels VALUES ('V024', 'Vessel X', 'Cargo', 12000), ('V025', 'Vessel Y', 'Cargo', 15000), ('V026', 'Vessel Z', 'Passenger', 2000);","completion":"SELECT SUM(Capacity) FROM Vessels;"}
{"prompt":"Find the unique languages spoken by visitors aged between 30 and 50 from South America. with given SQL schema CREATE TABLE visitors (id INT, name VARCHAR(100), country VARCHAR(50), age INT, language VARCHAR(50)); INSERT INTO visitors (id, name, country, age, language) VALUES (1, 'Jose Garcia', 'Brazil', 40, 'Portuguese'), (2, 'Maria Rodriguez', 'Argentina', 35, 'Spanish');","completion":"SELECT DISTINCT language FROM visitors WHERE age BETWEEN 30 AND 50 AND country LIKE 'South%';"}
{"prompt":"What is the number of unique visitors from each country? with given SQL schema CREATE TABLE Countries (id INT, name VARCHAR(20)); ALTER TABLE Visitors ADD COLUMN country_id INT;","completion":"SELECT Countries.name, COUNT(DISTINCT Visitors.id) FROM Visitors JOIN Countries ON Visitors.country_id = Countries.id GROUP BY Countries.name;"}
{"prompt":"What is the average recycling rate in South America? with given SQL schema CREATE TABLE recycling_rates (country VARCHAR(50), recycling_rate DECIMAL(5,2)); INSERT INTO recycling_rates (country, recycling_rate) VALUES ('Brazil', 50.0), ('Argentina', 40.0), ('Colombia', 35.0);","completion":"SELECT AVG(recycling_rate) FROM recycling_rates WHERE country IN ('Brazil', 'Argentina', 'Colombia', 'Peru', 'Chile');"}
{"prompt":"Find the average daily water consumption in cubic meters for 'Los Angeles' during the drought of 2016 with given SQL schema CREATE TABLE drought_info (region VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO drought_info (region, start_date, end_date) VALUES ('Los Angeles', '2016-01-01', '2016-12-31'); CREATE TABLE daily_consumption (region VARCHAR(50), date DATE, consumption FLOAT); INSERT INTO daily_consumption (region, date, consumption) VALUES ('Los Angeles', '2016-01-01', 1200), ('Los Angeles', '2016-01-02', 1100), ('Los Angeles', '2016-01-03', 1300);","completion":"SELECT AVG(consumption) FROM daily_consumption WHERE region = 'Los Angeles' AND date BETWEEN '2016-01-01' AND '2016-12-31';"}
{"prompt":"How many water treatment facilities are there in each country, and what is their distribution by continent? with given SQL schema CREATE TABLE facilities (id INT, facility_name VARCHAR(50), country VARCHAR(50), total_employees INT); INSERT INTO facilities (id, facility_name, country, total_employees) VALUES (1, 'Water Treatment Plant 1', 'Brazil', 25); INSERT INTO facilities (id, facility_name, country, total_employees) VALUES (2, 'Water Treatment Plant 2', 'India', 30);","completion":"SELECT country, COUNT(*) as facility_count, CONTINENT(location) as continent FROM facilities JOIN countries ON facilities.country = countries.country_name GROUP BY country, continent;"}
{"prompt":"What is the explainability score for each AI algorithm, partitioned by algorithm type, ordered by score in descending order? with given SQL schema CREATE TABLE ai_algorithms_explainability (algorithm_id INT, algorithm_name VARCHAR(50), explainability_score DECIMAL(5,2)); INSERT INTO ai_algorithms_explainability (algorithm_id, algorithm_name, explainability_score) VALUES (1, 'Decision Tree', 0.93), (2, 'Logistic Regression', 0.91), (3, 'K-Nearest Neighbors', 0.87), (4, 'Naive Bayes', 0.85);","completion":"SELECT algorithm_name, AVG(explainability_score) as avg_explainability_score FROM ai_algorithms_explainability GROUP BY algorithm_name ORDER BY avg_explainability_score DESC;"}
{"prompt":"Update the name of the project to 'Solar Irrigation' in the 'rural_projects' table with given SQL schema CREATE TABLE rural_projects (id INT, project_name VARCHAR(255), country VARCHAR(255));","completion":"UPDATE rural_projects SET project_name = 'Solar Irrigation' WHERE id = 1;"}
{"prompt":"What was the sum of agricultural innovation metrics reported in Senegal in 2020? with given SQL schema CREATE TABLE Metrics (id INT, metric_id INT, metric_type VARCHAR(20), country VARCHAR(20), report_date DATE); INSERT INTO Metrics (id, metric_id, metric_type, country, report_date) VALUES (1, 5001, 'Agricultural Innovation', 'Senegal', '2020-01-01'), (2, 5002, 'Economic Diversification', 'Senegal', '2020-02-15'), (3, 5003, 'Agricultural Innovation', 'Senegal', '2020-03-31');","completion":"SELECT SUM(CASE WHEN metric_type = 'Agricultural Innovation' THEN 1 ELSE 0 END) FROM Metrics WHERE country = 'Senegal' AND YEAR(report_date) = 2020;"}
{"prompt":"Remove all records for aircraft models that were never involved in a safety incident from the flight_safety table with given SQL schema CREATE TABLE flight_safety (id INT PRIMARY KEY, aircraft_model VARCHAR(100), manufacturer VARCHAR(100), severity VARCHAR(50), report_date DATE);","completion":"DELETE FROM flight_safety WHERE aircraft_model NOT IN (SELECT aircraft_model FROM flight_safety GROUP BY aircraft_model HAVING COUNT(*) > 0);"}
{"prompt":"What is the average age of all active astronauts by country of origin? with given SQL schema CREATE TABLE Astronauts (AstronautID INT, CountryOfOrigin VARCHAR(50), Active BOOLEAN, Age INT);","completion":"SELECT CountryOfOrigin, AVG(Age) AS AvgAge FROM Astronauts WHERE Active = TRUE GROUP BY CountryOfOrigin;"}
{"prompt":"Count the number of distinct animal types in the 'animal_population' table. with given SQL schema CREATE TABLE animal_population (animal_id INT, animal_type VARCHAR(10), age INT); INSERT INTO animal_population (animal_id, animal_type, age) VALUES (1, 'lion', 3); INSERT INTO animal_population (animal_id, animal_type, age) VALUES (2, 'tiger', 4); INSERT INTO animal_population (animal_id, animal_type, age) VALUES (3, 'lion', 5);","completion":"SELECT COUNT(DISTINCT animal_type) FROM animal_population;"}
{"prompt":"What is the total number of animals adopted by each community? with given SQL schema CREATE TABLE CommunityEducation(Community VARCHAR(20), AnimalsAdopted INT); INSERT INTO CommunityEducation VALUES ('CommunityA', 35), ('CommunityB', 28), ('CommunityC', 42);","completion":"SELECT Community, SUM(AnimalsAdopted) FROM CommunityEducation GROUP BY Community;"}
{"prompt":"Count the number of aquatic farms in each country from the 'farms' table. with given SQL schema CREATE TABLE farms (id INT PRIMARY KEY, name VARCHAR(50), species VARCHAR(50), country VARCHAR(50), size INT); INSERT INTO farms (id, name, species, country, size) VALUES (1, 'Farm A', 'Salmon', 'Norway', 500), (2, 'Farm B', 'Tilapia', 'Egypt', 250), (3, 'Farm C', 'Cod', 'Canada', 800), (4, 'Farm D', 'Prawns', 'India', 300);","completion":"SELECT country, COUNT(*) FROM farms GROUP BY country;"}
{"prompt":"Determine the maximum sustainable yield of Catfish in the Pacific Ocean in 2024. with given SQL schema CREATE TABLE msy (species VARCHAR(255), msy_value FLOAT, year INT, region VARCHAR(255), PRIMARY KEY (species, year, region)); INSERT INTO msy (species, msy_value, year, region) VALUES ('Catfish', 22000, 2024, 'Pacific Ocean'), ('Tuna', 35000, 2024, 'Pacific Ocean'), ('Salmon', 18000, 2024, 'Atlantic Ocean');","completion":"SELECT msy_value FROM msy WHERE species = 'Catfish' AND year = 2024 AND region = 'Pacific Ocean';"}
{"prompt":"What is the average stocking density of Tilapia in freshwater farms in Indonesia? with given SQL schema CREATE TABLE freshwater_farms (farmer_id INT, fish_species TEXT, stocking_density FLOAT); INSERT INTO freshwater_farms (farmer_id, fish_species, stocking_density) VALUES (1, 'Tilapia', 1.5), (2, 'Catfish', 2.0), (3, 'Tilapia', 2.5);","completion":"SELECT AVG(stocking_density) FROM freshwater_farms WHERE fish_species = 'Tilapia' AND country = 'Indonesia';"}
{"prompt":"What was the total attendance at dance programs by age group in 2020? with given SQL schema CREATE TABLE Attendance (id INT, age_group VARCHAR(10), program VARCHAR(20), attendance INT); INSERT INTO Attendance (id, age_group, program, attendance) VALUES (1, '5-10', 'Dance', 50), (2, '11-15', 'Dance', 75), (3, '16-20', 'Dance', 100);","completion":"SELECT program, age_group, SUM(attendance) as total_attendance FROM Attendance WHERE program = 'Dance' AND YEAR(event_date) = 2020 GROUP BY program, age_group;"}
{"prompt":"What is the average price per gram of concentrates for each producer in California? with given SQL schema CREATE TABLE Producers (ProducerID INT, Name VARCHAR(100), State VARCHAR(100)); CREATE TABLE Products (ProductID INT, ProductName VARCHAR(100), ProducerID INT, PricePerGram DECIMAL(5,2), Type VARCHAR(100));","completion":"SELECT P.Name, AVG(P.PricePerGram) as AvgPricePerGram FROM Products P JOIN Producers PR ON P.ProducerID = PR.ProducerID WHERE PR.State = 'California' AND P.Type = 'Concentrates' GROUP BY P.Name;"}
{"prompt":"How many cases were handled by attorneys who identify as Latinx and have more than 5 years of experience? with given SQL schema CREATE TABLE attorneys (id INT, name VARCHAR(50), years_of_experience INT, ethnicity VARCHAR(50)); INSERT INTO attorneys (id, name, years_of_experience, ethnicity) VALUES (1, 'John Doe', 12, 'White'); INSERT INTO attorneys (id, name, years_of_experience, ethnicity) VALUES (2, 'Jane Smith', 3, 'White'); INSERT INTO attorneys (id, name, years_of_experience, ethnicity) VALUES (3, 'Carlos Rodriguez', 7, 'Latinx'); INSERT INTO attorneys (id, name, years_of_experience, ethnicity) VALUES (4, 'Maria Garcia', 12, 'Latinx');","completion":"SELECT COUNT(*) FROM attorneys WHERE ethnicity = 'Latinx' AND years_of_experience > 5;"}
{"prompt":"Update the safety protocol for 'Product K' from 'Protocol 4' to 'Protocol 7' in the safety_protocols table. with given SQL schema CREATE TABLE chemical_products (id INT, name TEXT); CREATE TABLE safety_protocols (id INT, product_id INT, protocol TEXT);","completion":"UPDATE safety_protocols SET protocol = 'Protocol 7' WHERE product_id = (SELECT id FROM chemical_products WHERE name = 'Product K') AND protocol = 'Protocol 4';"}
{"prompt":"What is the production cost of each chemical product, grouped by the manufacturer? with given SQL schema CREATE TABLE ChemicalProducts (ProductID INT, ProductName TEXT, Manufacturer TEXT, ProductionCost DECIMAL(5,2)); INSERT INTO ChemicalProducts (ProductID, ProductName, Manufacturer, ProductionCost) VALUES (1, 'Product A', 'Manufacturer X', 50.5), (2, 'Product B', 'Manufacturer Y', 75.3), (3, 'Product C', 'Manufacturer X', 25.5), (4, 'Product D', 'Manufacturer Z', 150.3);","completion":"SELECT Manufacturer, SUM(ProductionCost) AS TotalProductionCost FROM ChemicalProducts GROUP BY Manufacturer;"}
{"prompt":"What is the number of 'climate communication' campaigns launched in 'Europe' in '2022' from the 'communication' table? with given SQL schema CREATE TABLE communication (region VARCHAR(255), campaigns INT, year INT);","completion":"SELECT COUNT(*) FROM communication WHERE region = 'Europe' AND year = 2022;"}
{"prompt":"What is the total funding allocated for climate change adaptation projects in 2018 and 2020? with given SQL schema CREATE TABLE climate_adaptation_funding(project_id INT, year INT, amount FLOAT); INSERT INTO climate_adaptation_funding (project_id, year, amount) VALUES (30, 2018, 75000.0), (31, 2019, 90000.0), (32, 2020, 60000.0);","completion":"SELECT SUM(amount) FROM climate_adaptation_funding WHERE year IN (2018, 2020);"}
{"prompt":"Find the drugs and their respective total sales for rare diseases indication with sales greater than the average sales for infectious diseases. with given SQL schema CREATE TABLE sales (id INT, drug_id INT, quarter INT, year INT, revenue FLOAT); INSERT INTO sales (id, drug_id, quarter, year, revenue) VALUES (1, 1, 1, 2022, 1500000); CREATE TABLE drugs (id INT, name VARCHAR(50), company VARCHAR(50), indication VARCHAR(50)); INSERT INTO drugs (id, name, company, indication) VALUES (1, 'DrugA', 'ABC Corp', 'Rare_Diseases');","completion":"SELECT s.drug_id, d.name, SUM(s.revenue) as total_sales FROM sales s JOIN drugs d ON s.drug_id = d.id WHERE d.indication = 'Rare_Diseases' GROUP BY s.drug_id HAVING total_sales > (SELECT AVG(s2.revenue) FROM sales s2 JOIN drugs d2 ON s2.drug_id = d2.id WHERE d2.indication = 'Infectious_Diseases')"}
{"prompt":"What is the total number of healthcare providers by type? with given SQL schema CREATE TABLE providers (provider_id INT, provider_type VARCHAR(20)); INSERT INTO providers (provider_id, provider_type) VALUES (1, 'Physician'), (2, 'Nurse Practitioner'), (3, 'Physician Assistant');","completion":"SELECT provider_type, COUNT(*) as total_providers FROM providers GROUP BY provider_type;"}
{"prompt":"Delete all records from the \"company_profiles\" table where the company's founding year is before 2000 with given SQL schema CREATE TABLE company_profiles (company_name VARCHAR(255), founding_year INT, diversity_metric FLOAT);","completion":"DELETE FROM company_profiles WHERE founding_year < 2000;"}
{"prompt":"Drop the disability accommodations table with given SQL schema CREATE TABLE disability_accommodations (id INT PRIMARY KEY, student_id INT, accommodation_type VARCHAR(255), start_date DATE, end_date DATE);","completion":"DROP TABLE disability_accommodations;"}
{"prompt":"How many marine species are endemic to the Coral Triangle? with given SQL schema CREATE TABLE marine_species (id INT, species VARCHAR(255), endemic_coral_triangle BOOLEAN); INSERT INTO marine_species (id, species, endemic_coral_triangle) VALUES (1, 'Clownfish', TRUE);","completion":"SELECT COUNT(*) FROM marine_species WHERE endemic_coral_triangle = TRUE"}
{"prompt":"How many smart contracts were deployed each month in 2023? with given SQL schema CREATE TABLE smart_contracts (contract_address VARCHAR(42), deployment_date DATE); INSERT INTO smart_contracts (contract_address, deployment_date) VALUES ('0x123', '2023-01-01'), ('0x456', '2023-01-15'), ('0x789', '2023-02-01'), ('0xabc', '2023-02-15'), ('0xdef', '2023-03-01');","completion":"SELECT EXTRACT(MONTH FROM deployment_date) AS month, COUNT(*) FROM smart_contracts GROUP BY month ORDER BY month;"}
{"prompt":"Update carbon sequestration data for India in 2021 with given SQL schema CREATE TABLE carbon_sequestration (country_code CHAR(3), year INT, sequestration FLOAT); INSERT INTO carbon_sequestration (country_code, year, sequestration) VALUES ('IND', 2021, 1.2), ('IND', 2020, 1.1), ('CHN', 2021, 4.1), ('CHN', 2020, 3.9);","completion":"UPDATE carbon_sequestration SET sequestration = 1.3 WHERE country_code = 'IND' AND year = 2021;"}
{"prompt":"What is the total volume of timber sold by each salesperson, broken down by month? with given SQL schema CREATE TABLE salesperson (salesperson_id INT, name TEXT, region TEXT); INSERT INTO salesperson (salesperson_id, name, region) VALUES (1, 'John Doe', 'North'), (2, 'Jane Smith', 'South'); CREATE TABLE timber_sales (sales_id INT, salesperson_id INT, volume REAL, sale_date DATE); INSERT INTO timber_sales (sales_id, salesperson_id, volume, sale_date) VALUES (1, 1, 120, '2021-01-01'), (2, 1, 150, '2021-02-01'), (3, 2, 180, '2021-01-01');","completion":"SELECT salesperson_id, DATE_PART('month', sale_date) as month, SUM(volume) as total_volume FROM timber_sales JOIN salesperson ON timber_sales.salesperson_id = salesperson.salesperson_id GROUP BY salesperson_id, month ORDER BY salesperson_id, month;"}
{"prompt":"How many products are sourced from fair-trade suppliers? with given SQL schema CREATE TABLE products (product_id INT PRIMARY KEY, fair_trade BOOLEAN); INSERT INTO products (product_id, fair_trade) VALUES (1, true), (2, false), (3, true), (4, false);","completion":"SELECT COUNT(*) FROM products WHERE fair_trade = true;"}
{"prompt":"What is the average weight of ingredients for a given product? with given SQL schema CREATE TABLE ingredients (ingredient_id INT, product_id INT, weight FLOAT); INSERT INTO ingredients VALUES (1, 1, 2.5), (2, 1, 3.5), (3, 2, 1.5), (4, 2, 4.5);","completion":"SELECT AVG(weight) FROM ingredients WHERE product_id = 1;"}
{"prompt":"What is the percentage of cruelty-free haircare products in the European market? with given SQL schema CREATE TABLE products(product_id INT, product_name VARCHAR(50), is_cruelty_free BOOLEAN, product_category VARCHAR(50)); INSERT INTO products VALUES (5, 'Argan Oil Shampoo', TRUE, 'Haircare'); INSERT INTO products VALUES (6, 'Keratin Conditioner', FALSE, 'Haircare'); CREATE TABLE sales(product_id INT, sale_date DATE, quantity INT, country VARCHAR(50)); INSERT INTO sales VALUES (5, '2021-03-25', 20, 'DE'); INSERT INTO sales VALUES (6, '2021-03-26', 10, 'FR');","completion":"SELECT ROUND(COUNT(CASE WHEN products.is_cruelty_free THEN 1 END)\/COUNT(*) * 100, 2) as percentage FROM products JOIN sales ON products.product_id = sales.product_id WHERE products.product_category = 'Haircare' AND sales.country = 'Europe';"}
{"prompt":"List all disaster types and their respective average preparedness scores, for the year 2017, from the 'DisasterPreparedness' table. with given SQL schema CREATE TABLE DisasterPreparedness (id INT, year INT, disasterType VARCHAR(30), score INT);","completion":"SELECT disasterType, AVG(score) FROM DisasterPreparedness WHERE year = 2017 GROUP BY disasterType;"}
{"prompt":"What is the percentage of crimes reported in the city of Miami that were violent crimes in the year 2019? with given SQL schema CREATE TABLE crimes (id INT, city VARCHAR(20), year INT, violent_crime BOOLEAN); INSERT INTO crimes (id, city, year, violent_crime) VALUES (1, 'Miami', 2019, true), (2, 'Miami', 2019, false), (3, 'Miami', 2019, true);","completion":"SELECT (COUNT(*) FILTER (WHERE violent_crime)) * 100.0 \/ COUNT(*) FROM crimes WHERE city = 'Miami' AND year = 2019;"}
{"prompt":"What is the total number of military equipment types maintained by each division? with given SQL schema CREATE TABLE division (division_id INT, division_name VARCHAR(50)); INSERT INTO division (division_id, division_name) VALUES (1, 'Aviation'), (2, 'Ground'), (3, 'Naval'); CREATE TABLE equipment (equipment_id INT, equipment_name VARCHAR(50), division_id INT); INSERT INTO equipment (equipment_id, equipment_name, division_id) VALUES (1, 'F-16 Fighting Falcon', 1), (2, 'M1 Abrams', 2), (3, 'USS Gerald R. Ford', 3);","completion":"SELECT division_id, COUNT(DISTINCT equipment_name) as total_equipment_types FROM equipment GROUP BY division_id;"}
{"prompt":"Rank the cargoes by their quantities in descending order, partitioned by the vessel they belong to. with given SQL schema CREATE TABLE Cargo (CargoID INT, CargoName VARCHAR(50), Quantity INT, VesselID INT); INSERT INTO Cargo (CargoID, CargoName, Quantity, VesselID) VALUES (1, 'Electronics', 5000, 1); INSERT INTO Cargo (CargoID, CargoName, Quantity, VesselID) VALUES (2, 'Clothing', 3000, 2); CREATE TABLE Vessel (VesselID INT, VesselName VARCHAR(50), GrossTonnage INT); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage) VALUES (1, 'Ever Ace', 235000); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage) VALUES (2, 'Algeciras', 128000);","completion":"SELECT CargoName, Quantity, RANK() OVER (PARTITION BY VesselID ORDER BY Quantity DESC) AS Rank FROM Cargo;"}
{"prompt":"What is the average weight of cargo for vessels in the 'Tanker' type that were built after 2000? with given SQL schema CREATE TABLE ships (id INT, name VARCHAR(50), type VARCHAR(50), year_built INT, max_capacity INT, port_id INT); CREATE TABLE cargos (id INT, description VARCHAR(50), weight FLOAT, port_id INT, ship_id INT); CREATE VIEW ship_cargo AS SELECT s.name AS ship_name, c.description AS cargo_description, c.weight FROM ships s JOIN cargos c ON s.id = c.ship_id;","completion":"SELECT AVG(c.weight) AS avg_weight FROM ships s JOIN cargos c ON s.id = c.ship_id WHERE s.type = 'Tanker' AND s.year_built > 2000;"}
{"prompt":"What is the total amount spent on raw materials for the 'textile' industry for the entire year of 2021? with given SQL schema CREATE TABLE expenses (expense_id INT, date DATE, category VARCHAR(20), amount FLOAT); INSERT INTO expenses (expense_id, date, category, amount) VALUES (1, '2021-01-01', 'textile', 2500), (2, '2021-05-15', 'tooling', 1500), (3, '2021-12-31', 'textile', 5000);","completion":"SELECT SUM(amount) FROM expenses WHERE category = 'textile' AND date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"Identify the excavation site with the least number of bone fragments. with given SQL schema CREATE TABLE SiteN (site_id INT, site_name VARCHAR(20), artifact_type VARCHAR(20), quantity INT); INSERT INTO SiteN (site_id, site_name, artifact_type, quantity) VALUES (1, 'SiteN', 'Bone Fragments', 5), (2, 'SiteO', 'Pottery', 20), (3, 'SiteP', 'Bone Fragments', 15);","completion":"SELECT site_name FROM SiteN WHERE artifact_type = 'Bone Fragments' GROUP BY site_name HAVING SUM(quantity) = (SELECT MIN(quantity) FROM (SELECT SUM(quantity) as quantity FROM SiteN WHERE artifact_type = 'Bone Fragments' GROUP BY site_name) as subquery);"}
{"prompt":"What is the total number of patients diagnosed with 'Anxiety' or 'Depression' in 'RuralHealthFacility8'? with given SQL schema CREATE TABLE RuralHealthFacility8 (id INT, name TEXT, diagnosis TEXT); INSERT INTO RuralHealthFacility8 (id, name, diagnosis) VALUES (1, 'Ivan Purple', 'Anxiety'), (2, 'Judy Orange', 'Depression');","completion":"SELECT COUNT(*) FROM RuralHealthFacility8 WHERE diagnosis IN ('Anxiety', 'Depression');"}
{"prompt":"How many unique social causes has investor ABC supported? with given SQL schema CREATE TABLE investor_activities (investor VARCHAR(20), cause VARCHAR(30)); INSERT INTO investor_activities (investor, cause) VALUES ('XYZ', 'climate change'), ('XYZ', 'poverty reduction'), ('ABC', 'climate change');","completion":"SELECT COUNT(DISTINCT cause) FROM investor_activities WHERE investor = 'ABC';"}
{"prompt":"List all social impact investments in the Agriculture sector with ESG scores above 85, ordered by investment date and ESG score, including only investments made by French investors. with given SQL schema CREATE TABLE SocialImpactInvestments (InvestmentID INT, InvestmentDate DATE, Sector VARCHAR(20), ESGScore INT, InvestorCountry VARCHAR(20)); INSERT INTO SocialImpactInvestments VALUES (1, '2021-01-01', 'Agriculture', 86, 'France'), (2, '2021-02-01', 'Healthcare', 75, 'Germany'), (3, '2021-03-01', 'Agriculture', 82, 'France');","completion":"SELECT * FROM SocialImpactInvestments WHERE Sector = 'Agriculture' AND ESGScore > 85 AND InvestorCountry = 'France' ORDER BY InvestmentDate, ESGScore DESC;"}
{"prompt":"How many unique volunteers participated in programs in New York? with given SQL schema CREATE TABLE VolunteerEvents (EventID INT, EventName TEXT, Location TEXT, EventType TEXT); INSERT INTO VolunteerEvents (EventID, EventName, Location, EventType) VALUES (1, 'Tutoring Session', 'Texas', 'Education'), (2, 'Coding Workshop', 'New York', 'Education'); CREATE TABLE VolunteerHours (HourID INT, VolunteerID INT, EventID INT, Hours INT, HourDate DATE); INSERT INTO VolunteerHours (HourID, VolunteerID, EventID, Hours, HourDate) VALUES (1, 1, 1, 5, '2022-01-01'), (2, 2, 1, 6, '2022-01-01');","completion":"SELECT COUNT(DISTINCT VolunteerID) FROM VolunteerHours JOIN VolunteerEvents ON VolunteerHours.EventID = VolunteerEvents.EventID WHERE VolunteerEvents.Location = 'New York';"}
{"prompt":"How many professional development courses did each teacher complete, ordered by the number of courses completed? with given SQL schema CREATE TABLE teacher_pd (teacher_id INT, course_id INT); INSERT INTO teacher_pd (teacher_id, course_id) VALUES (1, 1001), (2, 1002), (3, 1003), (4, 1004), (5, 1005), (1, 1006), (2, 1007);","completion":"SELECT teacher_id, COUNT(course_id) as num_courses FROM teacher_pd GROUP BY teacher_id ORDER BY num_courses DESC;"}
{"prompt":"How many solar energy projects have been completed in Germany and Spain? with given SQL schema CREATE TABLE solar_projects (country VARCHAR(20), completed BOOLEAN); INSERT INTO solar_projects (country, completed) VALUES ('Germany', true), ('Germany', true), ('Spain', true), ('Spain', true), ('Spain', true);","completion":"SELECT COUNT(*) FROM solar_projects WHERE country IN ('Germany', 'Spain') AND completed = true;"}
{"prompt":"Insert a new record into the \"carbon_prices\" table for the date 2022-02-01 with a price of 25.25 with given SQL schema CREATE TABLE carbon_prices (id INT, date DATE, price FLOAT);","completion":"INSERT INTO carbon_prices (id, date, price) VALUES (1, '2022-02-01', 25.25);"}
{"prompt":"Insert new records into the 'renewable_energy_production' table for wind and solar production in 'Texas' and 'California' with given SQL schema CREATE TABLE renewable_energy_production (id INT PRIMARY KEY, source VARCHAR(255), state VARCHAR(255), production_gwh FLOAT);","completion":"INSERT INTO renewable_energy_production (source, state, production_gwh) VALUES ('wind', 'Texas', 50), ('solar', 'Texas', 75), ('wind', 'California', 60), ('solar', 'California', 80);"}
{"prompt":"What are the names of cricket players who have scored a century in Australia? with given SQL schema CREATE TABLE Matches (MatchID INT, Team1 VARCHAR(50), Team2 VARCHAR(50), Venue VARCHAR(50), Country VARCHAR(50)); INSERT INTO Matches (MatchID, Team1, Team2, Venue, Country) VALUES (1, 'Australia', 'India', 'Melbourne Cricket Ground', 'Australia'); CREATE TABLE Players (PlayerID INT, Name VARCHAR(50), Team VARCHAR(50), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Name, Team, Country) VALUES (1, 'Virat Kohli', 'India', 'India'); CREATE TABLE Scores (ScoreID INT, Player VARCHAR(50), Runs INT, MatchID INT); INSERT INTO Scores (ScoreID, Player, Runs, MatchID) VALUES (1, 'Virat Kohli', 100, 1);","completion":"SELECT DISTINCT P.Name FROM Players P INNER JOIN Scores S ON P.PlayerID = S.Player WHERE S.Runs = 100 AND S.MatchID IN (SELECT MatchID FROM Matches WHERE Venue = 'Melbourne Cricket Ground' AND Country = 'Australia');"}
{"prompt":"List the number of advocacy campaigns and their total budget for each year. with given SQL schema CREATE TABLE years (id INT, name VARCHAR(255)); CREATE TABLE campaigns (id INT, year_id INT, name VARCHAR(255), budget FLOAT);","completion":"SELECT y.name as year_name, COUNT(campaigns.id) as campaign_count, SUM(campaigns.budget) as total_budget FROM years y LEFT JOIN campaigns ON y.id = campaigns.year_id GROUP BY y.id;"}
{"prompt":"What is the rank of each volunteer by age within their skill? with given SQL schema CREATE TABLE volunteers (id INT, name TEXT, age INT, gender TEXT, skill TEXT, location TEXT); INSERT INTO volunteers (id, name, age, gender, skill, location) VALUES (1, 'John Doe', 30, 'Male', 'Medical', 'New York'); INSERT INTO volunteers (id, name, age, gender, skill, location) VALUES (2, 'Jane Smith', 28, 'Female', 'Engineering', 'Los Angeles');","completion":"SELECT *, RANK() OVER (PARTITION BY skill ORDER BY age) as rank FROM volunteers;"}
{"prompt":"How many technology accessibility projects were launched in total? with given SQL schema CREATE TABLE acc_proj (name TEXT, launch_year INTEGER, accessible TEXT); INSERT INTO acc_proj (name, launch_year, accessible) VALUES ('AccProj1', 2021, 'yes'), ('AccProj2', 2022, 'no'), ('AccProj3', 2022, 'yes');","completion":"SELECT COUNT(*) FROM acc_proj WHERE accessible = 'yes';"}
{"prompt":"How many trains in Tokyo have a delay greater than 5 minutes? with given SQL schema CREATE TABLE trains (id INT, city VARCHAR(50), delay TIME); INSERT INTO trains (id, city, delay) VALUES (1, 'Tokyo', '00:07'), (2, 'Tokyo', '00:03'), (3, 'Paris', '00:10'), (4, 'Paris', '00:02');","completion":"SELECT COUNT(*) FROM trains WHERE city = 'Tokyo' AND delay > '00:05:00';"}
{"prompt":"What is the total amount spent on recycled materials in the last 6 months? with given SQL schema CREATE TABLE expenses(expense_id INT, date DATE, material VARCHAR(20), amount DECIMAL(5,2)); INSERT INTO expenses(expense_id, date, material, amount) VALUES(1, '2022-01-01', 'recycled cotton', 100.00), (2, '2022-01-15', 'recycled polyester', 150.00), (3, '2022-02-01', 'recycled cotton', 200.00);","completion":"SELECT SUM(amount) FROM expenses WHERE material IN ('recycled cotton', 'recycled polyester') AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What is the maximum financial capability score in Africa? with given SQL schema CREATE TABLE financial_capability (client_id INT, country VARCHAR(50), score DECIMAL(3,2)); INSERT INTO financial_capability (client_id, country, score) VALUES (1, 'South Africa', 82.7), (2, 'Egypt', 78.4), (3, 'Nigeria', 88.3);","completion":"SELECT MAX(score) FROM financial_capability WHERE country = 'Africa';"}
{"prompt":"Delete all records of product Z from the Food table. with given SQL schema CREATE TABLE Food (FoodID varchar(10), FoodName varchar(20)); INSERT INTO Food VALUES ('Z', 'Product Z');","completion":"DELETE FROM Food WHERE FoodID = 'Z';"}
{"prompt":"Find the top 2 most expensive fruits in the \"Produce_2022\" table with given SQL schema CREATE TABLE Produce_2022 (id INT, name VARCHAR(50), type VARCHAR(20), price DECIMAL(5,2)); INSERT INTO Produce_2022 (id, name, type, price) VALUES (1, 'Mangoes', 'Organic', 2.49), (2, 'Pineapples', 'Organic', 3.59), (3, 'Avocados', 'Organic', 1.99), (4, 'Strawberries', 'Organic', 4.99);","completion":"SELECT name, price FROM Produce_2022 WHERE type = 'Organic' AND name LIKE 'Fruits' ORDER BY price DESC LIMIT 2;"}
{"prompt":"What is the minimum and maximum serving size for vegan meals in the United States? with given SQL schema CREATE TABLE MealSizes(id INT, name TEXT, serving_size INT, is_vegan BOOLEAN, country TEXT); INSERT INTO MealSizes(id, name, serving_size, is_vegan, country) VALUES (1, 'Vegan Pizza', 250, TRUE, 'USA'), (2, 'Chickpea Curry', 380, TRUE, 'USA');","completion":"SELECT MIN(serving_size), MAX(serving_size) FROM MealSizes WHERE is_vegan = TRUE AND country = 'USA';"}
{"prompt":"What is the maximum delivery time for packages shipped from the Mumbai warehouse in Q4 2021? with given SQL schema CREATE TABLE deliveries (id INT, delivery_time FLOAT, warehouse VARCHAR(20), quarter INT); INSERT INTO deliveries (id, delivery_time, warehouse, quarter) VALUES (1, 10.0, 'Mumbai', 4), (2, 15.0, 'Delhi', 1), (3, 12.0, 'Mumbai', 4); CREATE TABLE warehouses (id INT, name VARCHAR(20)); INSERT INTO warehouses (id, name) VALUES (1, 'Mumbai'), (2, 'Delhi');","completion":"SELECT MAX(delivery_time) FROM deliveries d JOIN warehouses w ON d.warehouse = w.name WHERE w.name = 'Mumbai' AND d.quarter = 4;"}
{"prompt":"What is the total grant amount awarded to minority serving institutions in 2021? with given SQL schema CREATE TABLE grants (id INT, institution_type VARCHAR(255), year INT, amount DECIMAL(10,2)); INSERT INTO grants (id, institution_type, year, amount) VALUES (1, 'Minority Serving Institution', 2021, 75000), (2, 'Research University', 2021, 150000), (3, 'Liberal Arts College', 2020, 90000);","completion":"SELECT SUM(amount) FROM grants WHERE institution_type = 'Minority Serving Institution' AND year = 2021;"}
{"prompt":"What is the minimum budget (in USD) for smart city projects in the 'SmartCityProjects' table? with given SQL schema CREATE TABLE SmartCityProjects ( id INT, projectName VARCHAR(50), budget DECIMAL(10,2), startDate DATE ); INSERT INTO SmartCityProjects (id, projectName, budget, startDate) VALUES (1, 'Intelligent Lighting System', 8000000.50, '2021-01-01'), (2, 'Smart Waste Management', 5000000.00, '2021-05-15'), (3, 'Advanced Traffic Management', 12000000.25, '2022-03-20');","completion":"SELECT MIN(budget) FROM SmartCityProjects;"}
{"prompt":"What is the sum of energy consumption in each continent? with given SQL schema CREATE TABLE energy_consumption (id INT, location VARCHAR(50), amount INT); INSERT INTO energy_consumption (id, location, amount) VALUES (1, 'North America', 12000), (2, 'South America', 15000), (3, 'Europe', 10000), (4, 'Asia', 18000), (5, 'Africa', 8000), (6, 'Australia', 9000);","completion":"SELECT substring(location, 1, 2) AS continent, SUM(amount) FROM energy_consumption GROUP BY continent;"}
{"prompt":"Which community health workers received more than two types of trainings? with given SQL schema CREATE TABLE CommunityHealthWorkerTrainings (WorkerID INT, Training VARCHAR(50)); INSERT INTO CommunityHealthWorkerTrainings (WorkerID, Training) VALUES (1, 'Cultural Competency'), (2, 'Mental Health First Aid'), (3, 'Crisis Prevention'), (4, 'Cultural Competency'), (5, 'Motivational Interviewing'), (1, 'Language Access'), (6, 'Cultural Competency'), (7, 'Mental Health First Aid'), (8, 'Crisis Prevention'), (9, 'Cultural Competency'), (10, 'Motivational Interviewing'), (11, 'Cultural Competency'), (12, 'Mental Health First Aid'), (13, 'Crisis Prevention'), (14, 'Cultural Competency'), (15, 'Motivational Interviewing');","completion":"SELECT WorkerID FROM (SELECT WorkerID, COUNT(DISTINCT Training) as NumTrainings FROM CommunityHealthWorkerTrainings GROUP BY WorkerID) as distinct_trainings WHERE NumTrainings > 2;"}
{"prompt":"Name the top 3 countries with the most cultural heritage sites. with given SQL schema CREATE TABLE countries (country_id INT, country_name VARCHAR(255), region VARCHAR(255)); CREATE TABLE sites (site_id INT, site_name VARCHAR(255), country_name VARCHAR(255)); INSERT INTO countries (country_id, country_name, region) VALUES (1, 'Egypt', 'Africa'); INSERT INTO sites (site_id, site_name, country_name) VALUES (1, 'Pyramids of Giza', 'Egypt');","completion":"SELECT country_name, COUNT(*) AS site_count FROM sites JOIN countries ON sites.country_name = countries.country_name WHERE region = 'Africa' GROUP BY country_name ORDER BY site_count DESC LIMIT 3;"}
{"prompt":"Show the number of virtual tours offered in each country. with given SQL schema CREATE TABLE virtual_tours (tour_id INT, country VARCHAR(50), tour_type VARCHAR(50));","completion":"SELECT country, COUNT(tour_id) AS num_virtual_tours FROM virtual_tours GROUP BY country;"}
{"prompt":"How many virtual tours were engaged in the last month, by country? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, tour_name TEXT, engagement INT, country TEXT); INSERT INTO virtual_tours (tour_id, tour_name, engagement, country) VALUES (1, 'Tour A', 250, 'USA'), (2, 'Tour B', 300, 'Canada');","completion":"SELECT country, SUM(engagement) FROM virtual_tours WHERE engagement >= DATEADD(month, -1, GETDATE()) GROUP BY country;"}
{"prompt":"What is the average hotel rating for the 'luxury' hotels in the 'New York' region? with given SQL schema CREATE TABLE hotels (id INT, name VARCHAR(255), rating FLOAT, category VARCHAR(255), city VARCHAR(255)); INSERT INTO hotels (id, name, rating, category, city) VALUES (1, 'Hotel 1', 4.5, 'luxury', 'New York'); INSERT INTO hotels (id, name, rating, category, city) VALUES (2, 'Hotel 2', 4.7, 'luxury', 'New York');","completion":"SELECT AVG(rating) FROM hotels WHERE category = 'luxury' AND city = 'New York';"}
{"prompt":"Update the preservation status of heritage sites based on the data in the PreservationStatus table. with given SQL schema CREATE TABLE HeritageSites (site_id INT, site_name VARCHAR(20), site_type VARCHAR(20), preservation_status VARCHAR(10)); CREATE TABLE PreservationStatus (site_id INT, status_name VARCHAR(20), status_date DATE);","completion":"UPDATE HeritageSites hs SET hs.preservation_status = (SELECT status_name FROM PreservationStatus WHERE hs.site_id = PreservationStatus.site_id AND status_date = (SELECT MAX(status_date) FROM PreservationStatus WHERE site_id = PreservationStatus.site_id)) WHERE EXISTS (SELECT 1 FROM PreservationStatus WHERE HeritageSites.site_id = PreservationStatus.site_id);"}
{"prompt":"Find the maximum pollution level in the Mediterranean Sea. with given SQL schema CREATE TABLE Pollution_Monitoring (monitoring_location text, monitoring_date date, pollution_level numeric);","completion":"SELECT MAX(pollution_level) FROM Pollution_Monitoring WHERE monitoring_location LIKE '%Mediterranean%';"}
{"prompt":"Identify the species unique to 'MarineResearchAreaA' and 'MarineResearchAreaB' with given SQL schema CREATE TABLE ResearchAreaSpecies (area VARCHAR(255), species VARCHAR(255)); INSERT INTO ResearchAreaSpecies (area, species) VALUES ('MarineResearchAreaA', 'Coral'), ('MarineResearchAreaA', 'Starfish'), ('MarineResearchAreaB', 'Jellyfish');","completion":"(SELECT species FROM ResearchAreaSpecies WHERE area = 'MarineResearchAreaA' EXCEPT SELECT species FROM ResearchAreaSpecies WHERE area = 'MarineResearchAreaB') UNION (SELECT species FROM ResearchAreaSpecies WHERE area = 'MarineResearchAreaB' EXCEPT SELECT species FROM ResearchAreaSpecies WHERE area = 'MarineResearchAreaA');"}
{"prompt":"Who are the directors who have directed the most movies? with given SQL schema CREATE TABLE movies (id INT, title VARCHAR(255), director_id INT); CREATE VIEW movies_per_director AS SELECT director_id as id, COUNT(*) as movies_count FROM movies GROUP BY director_id; INSERT INTO movies (id, title, director_id) VALUES (1, 'Movie1', 1), (2, 'Movie2', 2), (3, 'Movie3', 1), (4, 'Movie4', 3), (5, 'Movie5', 2); CREATE TABLE directors (id INT, name VARCHAR(255)); INSERT INTO directors (id, name) VALUES (1, 'Director1'), (2, 'Director2'), (3, 'Director3');","completion":"SELECT directors.name, movies_per_director.movies_count FROM directors JOIN movies_per_director ON directors.id = movies_per_director.id ORDER BY movies_count DESC;"}
{"prompt":"Delete all defense project timelines with Nigeria. with given SQL schema CREATE TABLE DefenseProjectTimelines (id INT PRIMARY KEY, project_name VARCHAR(50), negotiation_start_date DATE, negotiation_end_date DATE, country VARCHAR(50)); INSERT INTO DefenseProjectTimelines (id, project_name, negotiation_start_date, negotiation_end_date, country) VALUES (1, 'S-400 Missile Defense System', '2016-01-01', '2018-01-01', 'Nigeria'), (2, 'AK-12 Assault Rifle', '2017-01-01', '2019-01-01', 'Nigeria');","completion":"DELETE FROM DefenseProjectTimelines WHERE country = 'Nigeria';"}
{"prompt":"What is the total value of defense contracts signed with the Russian government in 2019? with given SQL schema CREATE TABLE DefenseContracts (id INT PRIMARY KEY, year INT, government VARCHAR(50), contract_value FLOAT); INSERT INTO DefenseContracts (id, year, government, contract_value) VALUES (1, 2019, 'Russian Government', 5000000); INSERT INTO DefenseContracts (id, year, government, contract_value) VALUES (2, 2019, 'Russian Government', 3000000);","completion":"SELECT SUM(contract_value) FROM DefenseContracts WHERE year = 2019 AND government = 'Russian Government';"}
{"prompt":"What is the total value of military equipment sales by country for the year 2020, ordered from highest to lowest? with given SQL schema CREATE TABLE Military_Equipment_Sales (sale_id INT, sale_value FLOAT, sale_year INT, country VARCHAR(50));","completion":"SELECT country, SUM(sale_value) as total_sales FROM Military_Equipment_Sales WHERE sale_year = 2020 GROUP BY country ORDER BY total_sales DESC;"}
{"prompt":"Delete all records of mining projects in Australia that were completed before 2015-01-01? with given SQL schema CREATE TABLE projects (id INT, name TEXT, continent TEXT, start_date DATE, end_date DATE); INSERT INTO projects (id, name, continent, start_date, end_date) VALUES (1, 'Australia Coal', 'Australia', '2010-01-01', '2014-12-31'), (2, 'Australia Iron Ore', 'Australia', '2016-01-01', '2019-12-31');","completion":"DELETE FROM projects WHERE continent = 'Australia' AND end_date < '2015-01-01';"}
{"prompt":"Find the name and productivity of the top 3 bauxite mines in India? with given SQL schema CREATE TABLE mine (id INT, name TEXT, location TEXT, mineral TEXT, productivity INT); INSERT INTO mine (id, name, location, mineral, productivity) VALUES (1, 'NALCO', 'India', 'Bauxite', 2000), (2, 'Hindalco', 'India', 'Bauxite', 1800), (3, 'Vedanta', 'India', 'Bauxite', 1600);","completion":"SELECT name, productivity FROM mine WHERE mineral = 'Bauxite' AND location = 'India' ORDER BY productivity DESC LIMIT 3;"}
{"prompt":"What is the total CO2 emissions per site for Mexican mining operations in 2018? with given SQL schema CREATE TABLE EnvironmentalImpact (Site VARCHAR(255), CO2Emissions INT, WaterUsage INT, WasteGeneration INT, ReportDate DATE, Country VARCHAR(255));","completion":"SELECT Site, SUM(CO2Emissions) as TotalCO2Emissions FROM EnvironmentalImpact WHERE ReportDate BETWEEN '2018-01-01' AND '2018-12-31' AND Country = 'Mexico' GROUP BY Site;"}
{"prompt":"What is the average monthly data usage for postpaid mobile customers in each city? with given SQL schema CREATE TABLE mobile_customers (customer_id INT, name VARCHAR(50), data_usage FLOAT, city VARCHAR(50)); INSERT INTO mobile_customers (customer_id, name, data_usage, city) VALUES (1, 'John Doe', 3.5, 'Seattle'); INSERT INTO mobile_customers (customer_id, name, data_usage, city) VALUES (2, 'Jane Smith', 4.2, 'Seattle'); INSERT INTO mobile_customers (customer_id, name, data_usage, city) VALUES (3, 'Bob Johnson', 3.8, 'New York'); INSERT INTO mobile_customers (customer_id, name, data_usage, city) VALUES (4, 'Alice Williams', 4.5, 'New York');","completion":"SELECT city, AVG(data_usage) FROM mobile_customers WHERE plan_type = 'postpaid' GROUP BY city;"}
{"prompt":"Which mobile subscribers have used more than twice the average monthly data usage? with given SQL schema CREATE TABLE subscribers(id INT, monthly_data_usage DECIMAL(5,2)); INSERT INTO subscribers(id, monthly_data_usage) VALUES (1, 3.5), (2, 4.2), (3, 5.0), (4, 2.0), (5, 6.0);","completion":"SELECT id, monthly_data_usage FROM subscribers WHERE monthly_data_usage > 2*(SELECT AVG(monthly_data_usage) FROM subscribers);"}
{"prompt":"Find the top 3 genres with the highest revenue in 2022 for streaming services in the USA. with given SQL schema CREATE TABLE streaming_services (service_id INT, service_name VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO streaming_services (service_id, service_name, revenue) VALUES (1, 'StreamingCo', 5000000.00); CREATE TABLE genre_sales (sale_id INT, service_id INT, genre VARCHAR(255), sales DECIMAL(10,2)); INSERT INTO genre_sales (sale_id, service_id, genre, sales) VALUES (1, 1, 'Rock', 150000.00);","completion":"SELECT genre, SUM(sales) as total_sales FROM genre_sales gs JOIN streaming_services s ON gs.service_id = s.service_id WHERE s.service_country = 'USA' AND s.service_year = 2022 GROUP BY genre ORDER BY total_sales DESC LIMIT 3;"}
{"prompt":"How many unique volunteers have participated in events held in the Pacific region in 2019? with given SQL schema CREATE TABLE events (event_id INT PRIMARY KEY, region VARCHAR(50), num_volunteers INT); INSERT INTO events (event_id, region, num_volunteers) VALUES (1, 'Pacific', 50), (2, 'Atlantic', 75), (3, 'Pacific', 80);","completion":"SELECT COUNT(DISTINCT region) FROM events WHERE region = 'Pacific' AND YEAR(event_date) = 2019;"}
{"prompt":"Show the number of unique donors for each cause area, excluding any duplicates. with given SQL schema CREATE TABLE donations (id INT, donor_id INT, amount INT); CREATE TABLE donors (id INT, name VARCHAR(30), cause_area VARCHAR(20)); INSERT INTO donors (id, name, cause_area) VALUES (1, 'Sana', 'education'), (2, 'Jamal', 'health'), (3, 'Lila', 'health'), (4, 'Hamza', 'education'); INSERT INTO donations (id, donor_id, amount) VALUES (1, 1, 500), (2, 1, 500), (3, 2, 700), (4, 3, 800), (5, 4, 500);","completion":"SELECT cause_area, COUNT(DISTINCT donor_id) FROM donations JOIN donors ON donations.donor_id = donors.id GROUP BY cause_area;"}
{"prompt":"Who has donated from 'IL'? with given SQL schema CREATE TABLE donors_3 (id INT PRIMARY KEY, name VARCHAR(50), age INT, city VARCHAR(50), state VARCHAR(50)); INSERT INTO donors_3 (id, name, age, city, state) VALUES (1, 'John Doe', 35, 'New York', 'NY'), (2, 'Jane Smith', 40, 'Buffalo', 'NY'), (3, 'Mike Johnson', 50, 'Boston', 'MA'), (4, 'Emily Davis', 30, 'Chicago', 'IL');","completion":"SELECT donors_3.name  FROM donors_3  INNER JOIN donations_5 ON donors_3.id = donations_5.donor_id WHERE donations_5.state = 'IL';"}
{"prompt":"What is the total number of underwater archaeological sites in the Mediterranean Sea? with given SQL schema CREATE TABLE underwater_sites (name VARCHAR(255), location VARCHAR(255), type VARCHAR(255));","completion":"SELECT COUNT(*) FROM underwater_sites WHERE location = 'Mediterranean Sea' AND type = 'archaeological site';"}
{"prompt":"What is the number of players in the \"Underground Fighters\" game who have never lost a match? with given SQL schema CREATE TABLE MatchRecords (PlayerID INT, GameName VARCHAR(20), Wins INT, Losses INT); INSERT INTO MatchRecords (PlayerID, GameName, Wins, Losses) VALUES (5001, 'Underground Fighters', 18, 0), (5002, 'Underground Fighters', 12, 2), (5003, 'Underground Fighters', 20, 1);","completion":"SELECT COUNT(*) FROM MatchRecords WHERE GameName = 'Underground Fighters' AND Losses = 0;"}
{"prompt":"List all players who have achieved Master rank or higher in the game's ranking system. with given SQL schema CREATE TABLE Players (id INT, game_id INT, rank ENUM('Bronze', 'Silver', 'Gold', 'Platinum', 'Diamond', 'Master', 'Grandmaster', 'Challenger')); INSERT INTO Players (id, game_id, rank) VALUES (1, 1, 'Gold'), (2, 1, 'Platinum'), (3, 1, 'Diamond'), (4, 1, 'Master'), (5, 1, 'Grandmaster'), (6, 1, 'Bronze'), (7, 1, 'Challenger'), (8, 1, 'Silver');","completion":"SELECT * FROM Players WHERE rank IN ('Master', 'Grandmaster', 'Challenger');"}
{"prompt":"Which countries have the highest adoption rate of VR technology in gaming? with given SQL schema CREATE TABLE gaming_vr (country VARCHAR(50), adoption_rate DECIMAL(5,2)); INSERT INTO gaming_vr (country, adoption_rate) VALUES ('United States', 0.25), ('Japan', 0.18), ('South Korea', 0.32);","completion":"SELECT country, adoption_rate FROM gaming_vr ORDER BY adoption_rate DESC LIMIT 1;"}
{"prompt":"What are the total water consumption from rare earth element production in each country? with given SQL schema CREATE TABLE water_consumption (country VARCHAR(50), consumption INT); INSERT INTO water_consumption (country, consumption) VALUES ('China', 25000), ('USA', 7000), ('Australia', 4000), ('India', 1000), ('Brazil', 500);","completion":"SELECT country, SUM(consumption) FROM water_consumption GROUP BY country;"}
{"prompt":"How many electric vehicles were sold in California in 2020 and 2021? with given SQL schema CREATE TABLE electric_vehicles (id INT, year INT, state VARCHAR(255), sales INT); INSERT INTO electric_vehicles (id, year, state, sales) VALUES (1, 2020, 'California', 50000), (2, 2021, 'California', 60000);","completion":"SELECT SUM(sales) FROM electric_vehicles WHERE state = 'California' AND year IN (2020, 2021);"}
{"prompt":"What is the average energy efficiency rating for buildings in different climate zones? with given SQL schema CREATE TABLE building_energy_zone1 (zone VARCHAR(255), efficiency FLOAT); INSERT INTO building_energy_zone1 (zone, efficiency) VALUES ('Zone 1 - Cold', 0.7), ('Zone 1 - Cold', 0.75), ('Zone 1 - Cold', 0.8); CREATE TABLE building_energy_zone2 (zone VARCHAR(255), efficiency FLOAT); INSERT INTO building_energy_zone2 (zone, efficiency) VALUES ('Zone 2 - Mixed', 0.65), ('Zone 2 - Mixed', 0.7), ('Zone 2 - Mixed', 0.75);","completion":"SELECT zone, AVG(efficiency) AS avg_efficiency FROM building_energy_zone1 GROUP BY zone UNION ALL SELECT zone, AVG(efficiency) AS avg_efficiency FROM building_energy_zone2 GROUP BY zone;"}
{"prompt":"What is the earliest installation date for solar panels in Italy? with given SQL schema CREATE TABLE solar_panels_italy (id INT, installation_date DATE); INSERT INTO solar_panels_italy (id, installation_date) VALUES (1, '2018-01-01'), (2, '2019-01-01'), (3, '2020-01-01');","completion":"SELECT MIN(installation_date) as earliest_date FROM solar_panels_italy;"}
{"prompt":"Insert a new record into the sustainable_sourcing table with the following data: restaurant_id = 103, ingredient = 'Quinoa', sourcing_percentage = 95 with given SQL schema CREATE TABLE sustainable_sourcing (id INT PRIMARY KEY, restaurant_id INT, ingredient VARCHAR(50), sourcing_percentage DECIMAL(5, 2));","completion":"INSERT INTO sustainable_sourcing (restaurant_id, ingredient, sourcing_percentage) VALUES (103, 'Quinoa', 95);"}
{"prompt":"What was the average daily revenue for each cuisine type in the first quarter of 2022? with given SQL schema CREATE TABLE daily_revenue (date DATE, cuisine VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO daily_revenue (date, cuisine, revenue) VALUES ('2022-01-01', 'Italian', 150.00), ('2022-01-01', 'Mexican', 120.00), ('2022-01-02', 'Italian', 170.00), ('2022-01-02', 'Mexican', 140.00);","completion":"SELECT cuisine, AVG(revenue) as avg_daily_revenue FROM daily_revenue WHERE date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY cuisine;"}
{"prompt":"How many space missions have been successful versus unsuccessful? with given SQL schema CREATE TABLE space_missions (mission TEXT, outcome TEXT); INSERT INTO space_missions (mission, outcome) VALUES ('Mission 1', 'Success'), ('Mission 2', 'Failure'), ('Mission 3', 'Success'), ('Mission 4', 'Success'), ('Mission 5', 'Failure'), ('Mission 6', 'Failure'), ('Mission 7', 'Success');","completion":"SELECT outcome, COUNT(*) FROM space_missions GROUP BY outcome;"}
{"prompt":"Drop the 'autonomous_vehicles_view' with given SQL schema CREATE TABLE autonomous_vehicles (id INT PRIMARY KEY, manufacturer VARCHAR(255), model VARCHAR(255), year INT, type VARCHAR(255), price FLOAT);","completion":"DROP VIEW autonomous_vehicles_view;"}
{"prompt":"Find the total number of trips made by shared autonomous vehicles in Seattle with given SQL schema CREATE TABLE shared_vehicles (id INT, vehicle_type VARCHAR(20), is_autonomous BOOLEAN, trip_count INT); INSERT INTO shared_vehicles (id, vehicle_type, is_autonomous, trip_count) VALUES (1, 'ebike', false, 1200), (2, 'escooter', false, 800), (3, 'car', true, 1500); CREATE TABLE city_data (city VARCHAR(20), has_autonomous_vehicles BOOLEAN); INSERT INTO city_data (city, has_autonomous_vehicles) VALUES ('Seattle', true), ('Denver', false), ('Portland', true);","completion":"SELECT SUM(trip_count) FROM shared_vehicles WHERE is_autonomous = true AND vehicle_type != 'ebike' AND vehicle_type != 'escooter' AND city IN (SELECT city FROM city_data WHERE has_autonomous_vehicles = true AND city = 'Seattle');"}
{"prompt":"What is the average fuel efficiency of hybrid cars in Seoul? with given SQL schema CREATE TABLE hybrid_cars (car_id INT, fuel_efficiency INT); INSERT INTO hybrid_cars (car_id, fuel_efficiency) VALUES (1, 40), (2, 45), (3, 50), (4, 55);","completion":"SELECT AVG(fuel_efficiency) as avg_efficiency FROM hybrid_cars;"}
{"prompt":"Find the percentage of transactions in which a garment was sold at full price, per city. with given SQL schema CREATE TABLE Stores (StoreID INT, City VARCHAR(50)); INSERT INTO Stores VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Chicago'); CREATE TABLE Transactions (TransactionID INT, StoreID INT, FullPrice BOOLEAN); INSERT INTO Transactions VALUES (1, 1, TRUE), (2, 1, FALSE), (3, 2, TRUE), (4, 3, FALSE), (5, 1, TRUE);","completion":"SELECT City, 100.0 * SUM(FullPrice) \/ COUNT(*) AS Full_Price_Percentage FROM Stores JOIN Transactions ON Stores.StoreID = Transactions.StoreID GROUP BY City;"}
{"prompt":"What is the total revenue for the 't-shirt' garment type? with given SQL schema CREATE TABLE sales (id INT, garment_type VARCHAR(20), color VARCHAR(20), price DECIMAL(10, 2), quantity INT);","completion":"SELECT SUM(price * quantity) AS total_revenue FROM sales WHERE garment_type = 't-shirt';"}
{"prompt":"Which sustainable fabric type has the highest order quantity? with given SQL schema CREATE TABLE orders (id INT, fabric_id INT, type VARCHAR(255), order_quantity INT); INSERT INTO orders (id, fabric_id, type, order_quantity) VALUES","completion":"SELECT type, MAX(order_quantity) FROM orders WHERE type LIKE '%Sustainable%' GROUP BY type;"}
{"prompt":"Alter the 'policyholders' table to add a new column 'zip_code' with given SQL schema CREATE TABLE policyholders (policyholder_id INT PRIMARY KEY, name VARCHAR(100), age INT, gender VARCHAR(10), city VARCHAR(50), state VARCHAR(50));","completion":"ALTER TABLE policyholders ADD COLUMN zip_code VARCHAR(10);"}
{"prompt":"Update the address of policyholder with ID 3 to '123 Main St, San Francisco, CA'. with given SQL schema CREATE TABLE policyholders (id INT, name TEXT, address TEXT, state TEXT, policy_type TEXT); INSERT INTO policyholders (id, name, address, state, policy_type) VALUES (3, 'Sophia Garcia', '456 Elm St, Los Angeles, CA', 'California', 'Life'), (4, 'Daniel Kim', '789 Oak St, San Jose, CA', 'California', 'Health');","completion":"UPDATE policyholders SET address = '123 Main St, San Francisco, CA' WHERE policyholders.id = 3;"}
{"prompt":"Insert data into 'waste_types' table with given SQL schema CREATE TABLE waste_types (id INT PRIMARY KEY, waste_type VARCHAR(255)); INSERT INTO waste_types (id, waste_type) VALUES (1, 'Plastic');","completion":"INSERT INTO waste_types (id, waste_type) VALUES (2, 'Paper');"}
{"prompt":"How many drought impacts were reported for the Greenville Wastewater Treatment Plant in the month of January 2022? with given SQL schema CREATE TABLE WastewaterTreatmentFacilities (FacilityID INT, FacilityName VARCHAR(255), Address VARCHAR(255), City VARCHAR(255), State VARCHAR(255), ZipCode VARCHAR(10)); INSERT INTO WastewaterTreatmentFacilities (FacilityID, FacilityName, Address, City, State, ZipCode) VALUES (1, 'Blue Ridge Wastewater Treatment Plant', '1200 W Main St', 'Blue Ridge', 'GA', '30513'), (2, 'Greenville Wastewater Treatment Plant', '450 Powerhouse Rd', 'Greenville', 'SC', '29605'); CREATE TABLE DroughtImpact (ImpactID INT, FacilityID INT, ImpactDate DATE, ImpactDescription VARCHAR(255)); INSERT INTO DroughtImpact (ImpactID, FacilityID, ImpactDate, ImpactDescription) VALUES (1, 1, '2022-01-01', 'Reduced flow due to drought conditions'), (2, 1, '2022-01-05', 'Operational changes to conserve water'), (3, 2, '2022-01-10', 'Water restriction measures in place');","completion":"SELECT COUNT(*) FROM DroughtImpact WHERE FacilityID = 2 AND ImpactDate BETWEEN '2022-01-01' AND '2022-01-31';"}
{"prompt":"How many water treatment plants are there in the province of Ontario, Canada? with given SQL schema CREATE TABLE water_treatment_plants_ontario (id INT, province VARCHAR); INSERT INTO water_treatment_plants_ontario (id, province) VALUES (1, 'Ontario'), (2, 'Quebec'), (3, 'Ontario'), (4, 'British Columbia');","completion":"SELECT COUNT(*) FROM water_treatment_plants_ontario WHERE province = 'Ontario';"}
{"prompt":"What is the average monthly water consumption per capita in urban areas? with given SQL schema CREATE TABLE urban_areas (id INT, city VARCHAR(50), population INT, monthly_consumption FLOAT); INSERT INTO urban_areas (id, city, population, monthly_consumption) VALUES (1, 'New York', 8500000, 1200000000), (2, 'Los Angeles', 4000000, 600000000);","completion":"SELECT AVG(monthly_consumption \/ population) FROM urban_areas;"}
{"prompt":"How many users have a heart rate over 120 BPM for more than 30 minutes in a workout session? with given SQL schema CREATE TABLE WorkoutData (UserID INT, WorkoutDate DATE, Duration INT, AvgHeartRate INT); INSERT INTO WorkoutData (UserID, WorkoutDate, Duration, AvgHeartRate) VALUES (1, '2022-01-01', 60, 100), (2, '2022-01-02', 45, 130), (3, '2022-01-03', 30, 125);","completion":"SELECT COUNT(*) FROM (SELECT UserID, SUM(Duration) FROM WorkoutData WHERE AvgHeartRate > 120 GROUP BY UserID) AS HighHR;"}
{"prompt":"What is the maximum, minimum, and average creativity score for AI-generated artworks in the 'creative_ai' table, grouped by artwork type? with given SQL schema CREATE TABLE creative_ai (artwork_type VARCHAR(20), creativity_score FLOAT); INSERT INTO creative_ai (artwork_type, creativity_score) VALUES ('painting', 0.85), ('sculpture', 0.91), ('painting', 0.78), ('music', 0.95);","completion":"SELECT artwork_type, MIN(creativity_score) as min_score, MAX(creativity_score) as max_score, AVG(creativity_score) as avg_score FROM creative_ai GROUP BY artwork_type;"}
{"prompt":"Identify the number of agricultural innovation initiatives for historically underrepresented communities. with given SQL schema CREATE TABLE Communities (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO Communities (id, name, type) VALUES (1, 'C1', 'Historically Underrepresented'), (2, 'C2', 'Mainstream'), (3, 'C3', 'Historically Underrepresented'); CREATE TABLE Innovations (id INT, community_id INT, innovation_name VARCHAR(255), date DATE); INSERT INTO Innovations (id, community_id, innovation_name, date) VALUES (1, 1, 'Solar-Powered Irrigation', '2021-03-01'), (2, 3, 'Drought-Resistant Crops', '2020-09-15'), (3, 2, 'Precision Agriculture', '2019-07-01');","completion":"SELECT COUNT(Innovations.id) FROM Innovations INNER JOIN Communities ON Innovations.community_id = Communities.id WHERE Communities.type = 'Historically Underrepresented';"}
{"prompt":"Display the total number of community education programs in the year 2021. with given SQL schema CREATE TABLE education_programs (program_date DATE, program_type VARCHAR(50));","completion":"SELECT COUNT(*) FROM education_programs WHERE EXTRACT(YEAR FROM program_date) = 2021 AND program_type = 'community education program';"}
{"prompt":"Update the population of 'Tiger' in the 'animal_population' table to 600. with given SQL schema CREATE TABLE animal_population (id INT, species VARCHAR(255), population INT); INSERT INTO animal_population (id, species, population) VALUES (1, 'Tiger', 500), (2, 'Elephant', 2000), (3, 'Lion', 800);","completion":"UPDATE animal_population SET population = 600 WHERE species = 'Tiger';"}
{"prompt":"Which education programs have an instructor named 'Jane Smith'? with given SQL schema CREATE TABLE education_programs (id INT, program_name VARCHAR(50), instructor VARCHAR(50), start_date DATE, end_date DATE, enrollment INT); INSERT INTO education_programs (id, program_name, instructor, start_date, end_date, enrollment) VALUES (5, 'Bird Identification and Monitoring', 'Jane Smith', '2022-04-01', '2022-05-31', 25); INSERT INTO education_programs (id, program_name, instructor, start_date, end_date, enrollment) VALUES (6, 'Wildlife Identification and Tracking', 'John Doe', '2022-06-01', '2022-08-31', 30);","completion":"SELECT program_name FROM education_programs WHERE instructor = 'Jane Smith';"}
{"prompt":"Calculate the average phosphorus level for fish farming in Scotland? with given SQL schema CREATE TABLE scotland_fish_farming (site_id INT, site_name TEXT, phosphorus FLOAT, country TEXT); INSERT INTO scotland_fish_farming (site_id, site_name, phosphorus, country) VALUES (1, 'Site I', 0.25, 'Scotland'), (2, 'Site J', 0.32, 'Scotland'), (3, 'Site K', 0.28, 'Scotland');","completion":"SELECT AVG(phosphorus) FROM scotland_fish_farming;"}
{"prompt":"What is the total amount of funding received by art programs in the 'Rural' areas? with given SQL schema CREATE SCHEMA if not exists arts_culture; CREATE TABLE if not exists arts_culture.programs(program_id INT, program_name VARCHAR(50), location VARCHAR(20)); CREATE TABLE if not exists arts_culture.funding(funding_id INT, program_id INT, amount INT);","completion":"SELECT SUM(funding.amount) FROM arts_culture.funding JOIN arts_culture.programs ON funding.program_id = programs.program_id WHERE programs.location = 'Rural';"}
{"prompt":"Which regions had the highest number of first-time visitors to the theatre in 2022? with given SQL schema CREATE TABLE TheatreVisits (ID INT, VisitDate DATE, VisitorID INT, Region VARCHAR(50)); CREATE TABLE FirstTimeVisitors (ID INT, VisitorID INT, FirstVisit DATE);","completion":"SELECT r.Region, COUNT(DISTINCT v.VisitorID) as FirstTimeVisitorsCount FROM TheatreVisits v JOIN FirstTimeVisitors f ON v.VisitorID = f.VisitorID JOIN (SELECT DISTINCT Region FROM TheatreVisits WHERE VisitDate >= '2022-01-01' AND VisitDate < '2023-01-01') r ON v.Region = r.Region WHERE f.FirstVisit >= '2022-01-01' AND f.FirstVisit < '2023-01-01' GROUP BY r.Region ORDER BY FirstTimeVisitorsCount DESC;"}
{"prompt":"What is the total budget for all TV shows released in 2018? with given SQL schema CREATE TABLE Shows (id INT, title VARCHAR(255), type VARCHAR(10), release_year INT, budget DECIMAL(10,2)); INSERT INTO Shows (id, title, type, release_year, budget) VALUES (1, 'Show1', 'Series', 2018, 2000000.00); INSERT INTO Shows (id, title, type, release_year, budget) VALUES (2, 'Show2', 'Movie', 2020, 700000.00);","completion":"SELECT SUM(budget) FROM Shows WHERE type = 'Series' AND release_year = 2018;"}
{"prompt":"Show the construction labor statistics for the last quarter, for the Western region, and rank the statistics by their employee counts in descending order. with given SQL schema CREATE TABLE LaborStatsByQuarter (StatID int, Region varchar(20), Quarter int, Employees int); INSERT INTO LaborStatsByQuarter (StatID, Region, Quarter, Employees) VALUES (1, 'Western', 3, 2500), (2, 'Central', 4, 3000), (3, 'Western', 4, 2800);","completion":"SELECT Region, Employees, ROW_NUMBER() OVER (PARTITION BY Region ORDER BY Employees DESC) as rn FROM LaborStatsByQuarter WHERE Region = 'Western' AND Quarter IN (3, 4);"}
{"prompt":"What is the total area of sustainable building projects in the state of Texas that were completed before 2020? with given SQL schema CREATE TABLE sustainable_building_projects (project_id INT, project_name VARCHAR(100), state VARCHAR(50), completion_year INT, area DECIMAL(10,2)); INSERT INTO sustainable_building_projects (project_id, project_name, state, completion_year, area) VALUES (1, 'GreenTowers', 'California', 2021, 50000), (2, 'EcoHQ', 'Texas', 2020, 40000), (3, 'SolarVilla', 'Washington', 2019, 30000);","completion":"SELECT SUM(area) FROM sustainable_building_projects WHERE state = 'Texas' AND completion_year < 2020;"}
{"prompt":"What are the top 5 states with the most dispensaries? with given SQL schema CREATE TABLE DispensariesByState (State TEXT, DispensaryCount INTEGER); INSERT INTO DispensariesByState (State, DispensaryCount) VALUES ('California', 1000), ('Colorado', 750), ('Oregon', 550), ('Washington', 400), ('Nevada', 350);","completion":"SELECT State, DispensaryCount FROM DispensariesByState ORDER BY DispensaryCount DESC LIMIT 5;"}
{"prompt":"Add new record ('Magnesium Sulfate', 150, '2022-07-01') to 'chemical_usage' table with given SQL schema CREATE TABLE chemical_usage (id INT, chemical_name VARCHAR(50), usage_quantity INT, usage_date DATE);","completion":"INSERT INTO chemical_usage (chemical_name, usage_quantity, usage_date) VALUES ('Magnesium Sulfate', 150, '2022-07-01');"}
{"prompt":"Insert a new record into the \"chemicals\" table with given SQL schema CREATE TABLE chemicals (id INT PRIMARY KEY, chemical_name VARCHAR(255), formula VARCHAR(255), hazard_level INT);","completion":"INSERT INTO chemicals (id, chemical_name, formula, hazard_level) VALUES (1, 'Ammonia', 'NH3', 2);"}
{"prompt":"List the names and capacities of all tanks located in the Northern region. with given SQL schema CREATE TABLE Tanks (name VARCHAR(20), capacity INT, location VARCHAR(20)); INSERT INTO Tanks (name, capacity, location) VALUES ('Tank1', 50000, 'Northern'), ('Tank2', 75000, 'Southern');","completion":"SELECT name, capacity FROM Tanks WHERE location = 'Northern';"}
{"prompt":"What is the average safety score for chemical plants located in the United States, grouped by state, where the total number of safety inspections is greater than 10? with given SQL schema CREATE TABLE chemical_plants (plant_id INT, plant_name TEXT, location TEXT, safety_score INT, num_inspections INT); INSERT INTO chemical_plants (plant_id, plant_name, location, safety_score, num_inspections) VALUES (1, 'Plant A', 'US-NY', 95, 12), (2, 'Plant B', 'US-NY', 92, 8), (3, 'Plant C', 'US-CA', 88, 15), (4, 'Plant D', 'US-CA', 90, 7), (5, 'Plant E', 'MX-MX', 85, 9);","completion":"SELECT location, AVG(safety_score) as avg_safety_score FROM chemical_plants WHERE location LIKE 'US-%' GROUP BY location HAVING SUM(num_inspections) > 10;"}
{"prompt":"Which adaptation projects in the 'climate_adaptation' table have a budget over 100000? with given SQL schema CREATE TABLE climate_adaptation (project_name TEXT, budget INTEGER); INSERT INTO climate_adaptation (project_name, budget) VALUES ('Green Roofs', 50000), ('Coastal Wetlands Restoration', 120000), ('Urban Forest Expansion', 200000);","completion":"SELECT project_name FROM climate_adaptation WHERE budget > 100000;"}
{"prompt":"What is the infant mortality rate in Brazil? with given SQL schema CREATE TABLE Mortality (Country TEXT, Type TEXT, Rate INT); INSERT INTO Mortality (Country, Type, Rate) VALUES ('Brazil', 'Infant', 20), ('Brazil', 'Child', 30), ('Brazil', 'Maternal', 40);","completion":"SELECT Rate FROM Mortality WHERE Country = 'Brazil' AND Type = 'Infant';"}
{"prompt":"What is the total funding amount for startups founded by women in the transportation sector? with given SQL schema CREATE TABLE funding(startup_id INT, funding_amount DECIMAL(10, 2)); INSERT INTO funding(startup_id, funding_amount) VALUES (1, 200000.00);   CREATE TABLE startups(id INT, name TEXT, industry TEXT, founder_gender TEXT); INSERT INTO startups(id, name, industry, founder_gender) VALUES (1, 'TransportationWomen', 'Transportation', 'Female');","completion":"SELECT SUM(funding_amount) FROM funding JOIN startups ON startups.id = funding.startup_id WHERE startups.industry = 'Transportation' AND startups.founder_gender = 'Female';"}
{"prompt":"What is the average yield per acre for each crop type in urban agriculture? with given SQL schema CREATE TABLE crop_types (crop_type TEXT, acres NUMERIC, yield NUMERIC); INSERT INTO crop_types (crop_type, acres, yield) VALUES ('Wheat', 2.1, 13000), ('Rice', 3.5, 18000), ('Corn', 4.2, 25000), ('Soybeans', 2.9, 16000), ('Wheat', 2.5, 14000);","completion":"SELECT crop_type, AVG(yield\/acres) as avg_yield_per_acre FROM crop_types GROUP BY crop_type;"}
{"prompt":"What is the average budget spent on disability support programs per university department? with given SQL schema CREATE TABLE Disability_Support_Data (Program_ID INT, Program_Name VARCHAR(50), Budget DECIMAL(10,2), Department VARCHAR(50));","completion":"SELECT Department, AVG(Budget) as Avg_Budget FROM Disability_Support_Data GROUP BY Department;"}
{"prompt":"Identify smart contracts with an average gas usage above 50000 in the 'SmartContracts' table, partitioned by contract creator and ordered by the highest average gas usage in descending order. with given SQL schema CREATE TABLE SmartContracts (contract_address VARCHAR(40), contract_creator VARCHAR(40), gas_used INT, num_transactions INT); INSERT INTO SmartContracts (contract_address, contract_creator, gas_used, num_transactions) VALUES ('0x123', 'Alice', 60000, 10), ('0x456', 'Bob', 45000, 15), ('0x789', 'Alice', 55000, 12);","completion":"SELECT contract_creator, contract_address, AVG(gas_used) as avg_gas_usage, RANK() OVER (PARTITION BY contract_creator ORDER BY AVG(gas_used) DESC) as rank FROM SmartContracts GROUP BY contract_creator, contract_address HAVING avg_gas_usage > 50000 ORDER BY contract_creator, rank;"}
{"prompt":"What are the names and countries of origin for developers who have created more than 3 smart contracts? with given SQL schema CREATE TABLE Developers (DeveloperId INT, DeveloperName VARCHAR(50), Country VARCHAR(50)); CREATE TABLE SmartContracts (ContractId INT, ContractName VARCHAR(50), DeveloperId INT); INSERT INTO Developers (DeveloperId, DeveloperName, Country) VALUES (1, 'Carla', 'Mexico'); INSERT INTO Developers (DeveloperId, DeveloperName, Country) VALUES (2, 'Deepak', 'India'); INSERT INTO SmartContracts (ContractId, ContractName, DeveloperId) VALUES (1, 'ContractA', 1); INSERT INTO SmartContracts (ContractId, ContractName, DeveloperId) VALUES (2, 'ContractB', 1); INSERT INTO SmartContracts (ContractId, ContractName, DeveloperId) VALUES (3, 'ContractC', 1); INSERT INTO SmartContracts (ContractId, ContractName, DeveloperId) VALUES (4, 'ContractD', 2);","completion":"SELECT d.DeveloperName, d.Country FROM Developers d INNER JOIN SmartContracts sc ON d.DeveloperId = sc.DeveloperId GROUP BY d.DeveloperId, d.DeveloperName, d.Country HAVING COUNT(sc.ContractId) > 3;"}
{"prompt":"Who are the top 3 developers with the most decentralized applications on the blockchain platform? with given SQL schema CREATE TABLE developers (id INT, developer_name VARCHAR(50), developer_location VARCHAR(30)); CREATE TABLE dapps (id INT, dapp_name VARCHAR(50), dapp_category VARCHAR(30), dapp_platform VARCHAR(20), developer_id INT); INSERT INTO developers (id, developer_name, developer_location) VALUES (1, 'John Doe', 'USA'); INSERT INTO dapps (id, dapp_name, dapp_category, dapp_platform, developer_id) VALUES (6, 'Dapp 1', 'Category 1', 'Platform 1', 1); INSERT INTO dapps (id, dapp_name, dapp_category, dapp_platform, developer_id) VALUES (7, 'Dapp 2', 'Category 2', 'Platform 2', 1); INSERT INTO developers (id, developer_name, developer_location) VALUES (2, 'Jane Smith', 'Canada'); INSERT INTO dapps (id, dapp_name, dapp_category, dapp_platform, developer_id) VALUES (8, 'Dapp 3', 'Category 3', 'Platform 3', 2);","completion":"SELECT d.developer_name, COUNT(*) as dapp_count FROM developers d JOIN dapps da ON d.id = da.developer_id GROUP BY d.developer_name ORDER BY dapp_count DESC LIMIT 3;"}
{"prompt":"What is the average carbon sequestration rate for each tree species? with given SQL schema CREATE TABLE TreeSpecies (id INT, name VARCHAR(255)); INSERT INTO TreeSpecies (id, name) VALUES (1, 'Oak'), (2, 'Pine'), (3, 'Maple'), (4, 'Birch'); CREATE TABLE CarbonSequestration (species_id INT, sequestration_rate DECIMAL(5,2)); INSERT INTO CarbonSequestration (species_id, sequestration_rate) VALUES (1, 12.5), (2, 15.0), (3, 10.5), (4, 13.0), (1, 13.0), (2, 14.5), (3, 11.0), (4, 12.5);","completion":"SELECT Ts.id, Ts.name, AVG(Cs.sequestration_rate) as avg_sequestration_rate FROM CarbonSequestration Cs JOIN TreeSpecies Ts ON Cs.species_id = Ts.id GROUP BY Ts.id, Ts.name;"}
{"prompt":"Determine the most frequently purchased product by customers from the UK. with given SQL schema CREATE TABLE customer_purchases (customer_id INT, product_name VARCHAR(50), purchase_date DATE, country VARCHAR(50)); INSERT INTO customer_purchases (customer_id, product_name, purchase_date, country) VALUES (1, 'Lipstick', '2021-01-01', 'US'), (2, 'Mascara', '2021-01-05', 'US'), (3, 'Lipstick', '2021-01-10', 'CA'), (4, 'Lipstick', '2021-01-15', 'UK'), (5, 'Foundation', '2021-01-20', 'US'), (6, 'Moisturizer', '2021-02-01', 'UK');","completion":"SELECT product_name, COUNT(*) as purchase_count FROM customer_purchases WHERE country = 'UK' GROUP BY product_name ORDER BY purchase_count DESC LIMIT 1;"}
{"prompt":"What is the average rating of halal-certified makeup products in Malaysia? with given SQL schema CREATE TABLE cosmetics (product_id INT, product_name VARCHAR(100), rating DECIMAL(2,1), is_halal_certified BOOLEAN, product_type VARCHAR(50));","completion":"SELECT AVG(rating) FROM cosmetics WHERE is_halal_certified = TRUE AND product_type = 'makeup' AND country = 'Malaysia';"}
{"prompt":"How many community policing events were held in the \"north\" region in 2020 and 2021, with more than 50 attendees? with given SQL schema CREATE TABLE community_policing_events (id INT, event_date DATE, location VARCHAR(20), attendees INT);","completion":"SELECT COUNT(*) FROM community_policing_events WHERE location = 'north' AND EXTRACT(YEAR FROM event_date) IN (2020, 2021) AND attendees > 50;"}
{"prompt":"Update the 'aid' value for 'Yemen' in the year 2018 to 1500000.00 in the 'humanitarian_assistance' table with given SQL schema CREATE TABLE humanitarian_assistance (id INT PRIMARY KEY, country VARCHAR(50), year INT, aid FLOAT, organization VARCHAR(50));","completion":"WITH cte AS (UPDATE humanitarian_assistance SET aid = 1500000.00 WHERE country = 'Yemen' AND year = 2018 RETURNING *) INSERT INTO humanitarian_assistance SELECT * FROM cte;"}
{"prompt":"What is the maximum number of humanitarian assistance missions conducted by a single unit in a year? with given SQL schema CREATE TABLE HumanitarianAssistance (Year INT, Unit VARCHAR(50), Missions INT); INSERT INTO HumanitarianAssistance (Year, Unit, Missions) VALUES (2018, 'Unit A', 12), (2018, 'Unit B', 15), (2018, 'Unit C', 18);","completion":"SELECT Unit, MAX(Missions) FROM HumanitarianAssistance GROUP BY Unit;"}
{"prompt":"Update status to 'in-transit' for cargo records that have been at the destination for less than a week with given SQL schema CREATE SCHEMA if not exists ocean_shipping;CREATE TABLE if not exists ocean_shipping.cargo (id INT, status VARCHAR(255), arrived_at DATE);","completion":"UPDATE ocean_shipping.cargo SET status = 'in-transit' WHERE arrived_at > DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY) AND status = 'delivered';"}
{"prompt":"List the names of all companies in the renewable energy sector that have implemented industry 4.0 technologies in Africa. with given SQL schema CREATE TABLE companies (id INT, name TEXT, country TEXT, industry TEXT, industry_4_0 BOOLEAN); INSERT INTO companies (id, name, country, industry, industry_4_0) VALUES (1, 'GHI Corp', 'South Africa', 'Renewable Energy', TRUE), (2, 'JKL Inc', 'Egypt', 'Oil and Gas', FALSE), (3, 'MNO Co', 'Nigeria', 'Renewable Energy', FALSE);","completion":"SELECT name FROM companies WHERE industry = 'Renewable Energy' AND country IN ('South Africa', 'Egypt', 'Nigeria') AND industry_4_0 = TRUE;"}
{"prompt":"What is the total age of 'stone' artifacts in 'american_archaeology'? with given SQL schema CREATE TABLE american_archaeology (id INT, site_name VARCHAR(50), artifact_name VARCHAR(50), age INT, material VARCHAR(20));","completion":"SELECT SUM(age) FROM american_archaeology WHERE material = 'stone';"}
{"prompt":"What is the total healthcare expenditure for rural county 'Adirondacks'? with given SQL schema CREATE TABLE healthcare_expenditure (county TEXT, expenditure INTEGER); INSERT INTO healthcare_expenditure (county, expenditure) VALUES ('Adirondacks', 500000), ('Adirondacks', 600000), ('Adirondacks', 700000);","completion":"SELECT SUM(expenditure) FROM healthcare_expenditure WHERE county = 'Adirondacks';"}
{"prompt":"What was the percentage of total budget spent on programs with positive outcomes in 2021? with given SQL schema CREATE TABLE Programs (program_id INT, program_name VARCHAR(50), budget DECIMAL(10,2), outcome VARCHAR(10)); CREATE TABLE Outcomes (outcome_id INT, program_id INT, outcome_date DATE);","completion":"SELECT 100.0 * SUM(CASE WHEN outcome = 'positive' THEN budget ELSE 0 END) \/ SUM(budget) AS percentage FROM Programs WHERE program_id IN (SELECT program_id FROM Outcomes WHERE YEAR(outcome_date) = 2021);"}
{"prompt":"Delete all the student records with a mental health score below 70? with given SQL schema CREATE TABLE students (student_id INT, student_name VARCHAR(50), mental_health_score INT); INSERT INTO students (student_id, student_name, mental_health_score) VALUES (1, 'John Doe', 75), (2, 'Jane Doe', 80), (3, 'Mike Johnson', 85), (4, 'Sara Connor', 65);","completion":"DELETE FROM students WHERE mental_health_score < 70;"}
{"prompt":"What is the average number of professional development courses completed by teachers in each department? with given SQL schema CREATE TABLE teacher_professional_development (teacher_id INT, department VARCHAR(255), course_completed INT); INSERT INTO teacher_professional_development (teacher_id, department, course_completed) VALUES (1, 'Math', 3), (2, 'Science', 2), (3, 'English', 5), (4, 'Math', 4), (5, 'Science', 1), (6, 'English', 4);","completion":"SELECT department, AVG(course_completed) FROM teacher_professional_development GROUP BY department;"}
{"prompt":"What is the average salary for new hires in the last 3 months, segmented by department? with given SQL schema CREATE TABLE NewHires (EmployeeID INT, Department VARCHAR(20), Salary DECIMAL(10,2), HireDate DATE); INSERT INTO NewHires (EmployeeID, Department, Salary, HireDate) VALUES (1, 'Marketing', 80000.00, '2022-01-01'), (2, 'IT', 90000.00, '2022-02-15');","completion":"SELECT Department, AVG(Salary) FROM NewHires WHERE HireDate BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND CURRENT_DATE GROUP BY Department;"}
{"prompt":"Find the number of wells drilled in the year 2020 in Texas with given SQL schema CREATE TABLE wells (id INT, well_name VARCHAR(255), location VARCHAR(255), drill_year INT, company VARCHAR(255)); INSERT INTO wells (id, well_name, location, drill_year, company) VALUES (1, 'Well001', 'Texas', 2020, 'CompanyA'); INSERT INTO wells (id, well_name, location, drill_year, company) VALUES (2, 'Well002', 'Colorado', 2019, 'CompanyB');","completion":"SELECT COUNT(*) FROM wells WHERE drill_year = 2020 AND location = 'Texas';"}
{"prompt":"Show the number of games won by each team in the current season, sorted by the number of wins in descending order. with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(100), city VARCHAR(50), league VARCHAR(50), division VARCHAR(50), games_played INT, at_bats INT, hits INT, home_runs INT, rbi INT, wins INT); INSERT INTO teams (team_id, team_name, city, league, division, games_played, at_bats, hits, home_runs, rbi, wins) VALUES (1, 'Red Sox', 'Boston', 'AL', 'East', 120, 450, 120, 25, 75, 60); INSERT INTO teams (team_id, team_name, city, league, division, games_played, at_bats, hits, home_runs, rbi, wins) VALUES (2, 'Yankees', 'New York', 'AL', 'East', 130, 500, 145, 30, 80, 70);","completion":"SELECT team_name, SUM(wins) as wins  FROM teams  WHERE league = 'AL' AND DATE_PART('year', game_date) = EXTRACT(YEAR FROM NOW())  GROUP BY team_name  ORDER BY wins DESC;"}
{"prompt":"How many employees are there in the Ethical AI team who joined after 2021-06-01? with given SQL schema CREATE TABLE employee_roster (id INT, name VARCHAR(50), team VARCHAR(50), join_date DATE); INSERT INTO employee_roster (id, name, team, join_date) VALUES (1, 'Jack', 'Ethical AI', '2021-07-15'), (2, 'Kate', 'Data Science', '2022-04-01'), (3, 'Luke', 'Ethical AI', '2021-05-20');","completion":"SELECT COUNT(*) FROM employee_roster WHERE team = 'Ethical AI' AND join_date > '2021-06-01';"}
{"prompt":"Insert a new record for a developer who works on a digital divide project with given SQL schema CREATE TABLE developers (id INT, name VARCHAR(50), salary FLOAT, project VARCHAR(50));","completion":"INSERT INTO developers (id, name, salary, project) VALUES (3, 'Charlie', 90000.0, 'Digital Divide');"}
{"prompt":"What is the total number of ethical AI certifications issued by country? with given SQL schema CREATE TABLE EthicalAICertifications (CertificationID INT PRIMARY KEY, CountryName VARCHAR(100), CertificationCount INT); INSERT INTO EthicalAICertifications (CertificationID, CountryName, CertificationCount) VALUES (1, 'USA', 500), (2, 'Canada', 300), (3, 'Mexico', 200);","completion":"SELECT CountryName, SUM(CertificationCount) as TotalCertifications FROM EthicalAICertifications GROUP BY CountryName;"}
{"prompt":"Insert a new accessible vehicle in the 'yellow' line. with given SQL schema CREATE TABLE vehicles (line VARCHAR(10), type VARCHAR(20), accessibility BOOLEAN);","completion":"INSERT INTO vehicles (line, type, accessibility) VALUES ('yellow', 'bus', TRUE);"}
{"prompt":"Update the name of the passenger with the id 3 to 'Emily Lee'. with given SQL schema CREATE TABLE PASSENGERS (id INT, name VARCHAR(50)); INSERT INTO PASSENGERS VALUES (3, 'James Brown');","completion":"UPDATE PASSENGERS SET name = 'Emily Lee' WHERE id = 3;"}
{"prompt":"How many consumers are aware of circular economy principles? with given SQL schema CREATE TABLE consumers (id INT, aware_of_circular_economy BOOLEAN); INSERT INTO consumers (id, aware_of_circular_economy) VALUES (1, true), (2, false), (3, true), (4, true);","completion":"SELECT COUNT(*) FROM consumers WHERE aware_of_circular_economy = true;"}
{"prompt":"What is the total quantity of sustainable raw materials consumed by factories in Africa? with given SQL schema CREATE TABLE SustainableRawMaterials (id INT, material VARCHAR(50), quantity INT); INSERT INTO SustainableRawMaterials (id, material, quantity) VALUES (1, 'Organic Cotton', 5000), (2, 'Reclaimed Wood', 2000), (3, 'Regenerated Leather', 3000); CREATE TABLE AfricanFactories (id INT, factory_name VARCHAR(50), material VARCHAR(50), quantity INT); INSERT INTO AfricanFactories (id, factory_name, material, quantity) VALUES (1, 'GreenFactory', 'Organic Cotton', 2000), (2, 'EcoTextiles', 'Reclaimed Wood', 1000), (3, 'SustainableWeaves', 'Regenerated Leather', 1500);","completion":"SELECT SUM(AfricanFactories.quantity) FROM SustainableRawMaterials INNER JOIN AfricanFactories ON SustainableRawMaterials.material = AfricanFactories.material;"}
{"prompt":"How many posts were made by users in the \"Asia-Pacific\" region in the last week? with given SQL schema CREATE TABLE posts (id INT, user_id INT, region VARCHAR(20), post_date DATE); INSERT INTO posts (id, user_id, region, post_date) VALUES (1, 1, 'Asia-Pacific', '2022-01-01'), (2, 2, 'Europe', '2022-02-01'), (3, 3, 'Asia-Pacific', '2022-03-01'), (4, 4, 'North America', '2022-04-01'), (5, 5, 'Asia-Pacific', '2022-06-01');","completion":"SELECT COUNT(*) FROM posts WHERE region = 'Asia-Pacific' AND post_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"}
{"prompt":"What is the total advertising spend by companies from Mexico, in March 2022? with given SQL schema CREATE TABLE companies (id INT, name TEXT, country TEXT); INSERT INTO companies (id, name, country) VALUES (1, 'Empresa1', 'Mexico'), (2, 'Empresa2', 'Mexico'), (3, 'Company3', 'Canada'), (4, 'Firma4', 'Spain'); CREATE TABLE ad_spend (company_id INT, amount DECIMAL, date DATE); INSERT INTO ad_spend (company_id, amount, date) VALUES (1, 1500, '2022-03-01'), (1, 1200, '2022-03-05'), (2, 1800, '2022-03-03'), (3, 800, '2022-03-04'), (4, 1000, '2022-03-04');","completion":"SELECT SUM(ad_spend.amount) FROM ad_spend JOIN companies ON ad_spend.company_id = companies.id WHERE companies.country = 'Mexico' AND ad_spend.date >= '2022-03-01' AND ad_spend.date <= '2022-03-31';"}
{"prompt":"How many customers prefer size 12 and above in women's clothing from Canada? with given SQL schema CREATE TABLE CanadianSizes (CustomerID INT, Country VARCHAR(255), PreferredSize INT); INSERT INTO CanadianSizes (CustomerID, Country, PreferredSize) VALUES (1, 'CA', 16), (2, 'CA', 14), (3, 'CA', 18), (4, 'CA', 12), (5, 'CA', 10);","completion":"SELECT COUNT(*) FROM CanadianSizes WHERE Country = 'CA' AND PreferredSize >= 12;"}
{"prompt":"What are the financial wellbeing programs in the United States and the United Kingdom? with given SQL schema CREATE TABLE fwp_programs (program_name TEXT, country TEXT); INSERT INTO fwp_programs (program_name, country) VALUES ('US Financial Wellbeing', 'USA'), ('UK Financial Capability', 'UK'), ('Global Financial Literacy', 'Global');","completion":"SELECT program_name FROM fwp_programs WHERE country IN ('USA', 'UK');"}
{"prompt":"What is the total financial impact of each program? with given SQL schema CREATE TABLE program_financials (id INT, program_id INT, amount DECIMAL(10, 2));","completion":"SELECT pf.program_id, SUM(pf.amount) as total_financial_impact FROM program_financials pf GROUP BY pf.program_id;"}
{"prompt":"How many organic food suppliers are there in the EU? with given SQL schema CREATE TABLE suppliers (id INT, country VARCHAR(20), organic BOOLEAN); INSERT INTO suppliers (id, country, organic) VALUES (1, 'Germany', true), (2, 'France', false);","completion":"SELECT COUNT(*) FROM suppliers WHERE country IN ('EU countries') AND organic = true;"}
{"prompt":"How many pallets were handled by each warehouse in 'Paris'? with given SQL schema CREATE TABLE Warehouse (id INT, name VARCHAR(20), city VARCHAR(20)); INSERT INTO Warehouse (id, name, city) VALUES (1, 'Paris Warehouse 1', 'Paris'), (2, 'Paris Warehouse 2', 'Paris'); CREATE TABLE Handling (id INT, shipment_id INT, warehouse_id INT, pallets INT); INSERT INTO Handling (id, shipment_id, warehouse_id, pallets) VALUES (1, 101, 1, 500), (2, 102, 1, 750), (3, 103, 2, 300);","completion":"SELECT w.name, SUM(h.pallets) FROM Handling h JOIN Warehouse w ON h.warehouse_id = w.id WHERE w.city = 'Paris' GROUP BY h.warehouse_id;"}
{"prompt":"What is the total volume of freight forwarded from Mexico to Canada? with given SQL schema CREATE TABLE Canada_Freight (id INT, origin_country VARCHAR(50), destination_country VARCHAR(50), volume FLOAT); INSERT INTO Canada_Freight (id, origin_country, destination_country, volume) VALUES (1, 'Mexico', 'Canada', 120.5), (2, 'Mexico', 'Canada', 240.6), (3, 'USA', 'Canada', 360.7);","completion":"SELECT SUM(volume) FROM Canada_Freight WHERE origin_country = 'Mexico' AND destination_country = 'Canada';"}
{"prompt":"What is the total weight of shipments to country USA? with given SQL schema CREATE TABLE shipments (shipment_id INT, country VARCHAR(255), weight INT); INSERT INTO shipments (shipment_id, country, weight) VALUES (1, 'USA', 50), (2, 'USA', 70), (3, 'USA', 60);","completion":"SELECT SUM(weight) FROM shipments WHERE country = 'USA';"}
{"prompt":"What is the percentage of the population in Illinois that has a college degree? with given SQL schema CREATE TABLE states (id INT, name VARCHAR(255)); INSERT INTO states (id, name) VALUES (1, 'Illinois'); CREATE TABLE residents (id INT, state_id INT, degree BOOLEAN, population INT); INSERT INTO residents (id, state_id, degree, population) VALUES (1, 1, true, 500000), (2, 1, false, 400000), (3, 1, true, 600000), (4, 1, false, 300000);","completion":"SELECT AVG(residents.degree) * 100 AS pct_college_degree FROM residents INNER JOIN states ON residents.state_id = states.id WHERE states.name = 'Illinois';"}
{"prompt":"What is the number of female and non-binary faculty members in each college? with given SQL schema CREATE TABLE college (college_name TEXT); INSERT INTO college (college_name) VALUES ('College of Science'), ('College of Arts'), ('College of Business'); CREATE TABLE faculty (faculty_id INTEGER, college_name TEXT, gender TEXT); INSERT INTO faculty (faculty_id, college_name, gender) VALUES (1, 'College of Science', 'Male'), (2, 'College of Science', 'Female'), (3, 'College of Arts', 'Non-binary'), (4, 'College of Business', 'Male'), (5, 'College of Science', 'Non-binary');","completion":"SELECT college_name, gender, COUNT(*) FROM faculty WHERE gender IN ('Female', 'Non-binary') GROUP BY college_name, gender;"}
{"prompt":"Display the number of buildings with each certification level for a given city in the 'green_buildings' table with given SQL schema CREATE TABLE green_buildings (id INT, building_name VARCHAR(50), city VARCHAR(50), certification_level VARCHAR(50));","completion":"SELECT city, certification_level, COUNT(*) as building_count FROM green_buildings GROUP BY city, certification_level;"}
{"prompt":"What is the total installed capacity of solar energy projects in the 'renewable_energy' table? with given SQL schema CREATE TABLE renewable_energy (project_id INT, project_name VARCHAR(100), location VARCHAR(100), energy_type VARCHAR(50), installed_capacity FLOAT); INSERT INTO renewable_energy (project_id, project_name, location, energy_type, installed_capacity) VALUES (1, 'Solar Farm 1', 'Australia', 'Solar', 30.0), (2, 'Wind Farm 1', 'Sweden', 'Wind', 65.3);","completion":"SELECT SUM(installed_capacity) FROM renewable_energy WHERE energy_type = 'Solar';"}
{"prompt":"List the hotels in the hotels table that offer a wellness facility but do not offer a spa facility. with given SQL schema CREATE TABLE hotels (hotel_id INT, name VARCHAR(50), facility VARCHAR(50)); INSERT INTO hotels (hotel_id, name, facility) VALUES (1, 'Hotel X', 'spa,gym,wellness'), (2, 'Hotel Y', 'wellness'), (3, 'Hotel Z', 'spa,wellness'), (4, 'Hotel W', 'gym,wellness'), (5, 'Hotel V', 'spa,gym'), (6, 'Hotel U', 'wellness,pool');","completion":"SELECT * FROM hotels WHERE facility LIKE '%wellness%' AND facility NOT LIKE '%spa%';"}
{"prompt":"How many paintings were on display at the 'Artistic Wonders' gallery in each month of 2021, excluding paintings on display for less than a week? with given SQL schema CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(50), Nationality VARCHAR(50), ActiveYears INT);CREATE TABLE Paintings (PaintingID INT, PaintingName VARCHAR(50), ArtistID INT, DisplayStart DATE, DisplayEnd DATE);CREATE TABLE Gallery (GalleryID INT, GalleryName VARCHAR(50), City VARCHAR(50));INSERT INTO Artists VALUES (1, 'Claude Monet', 'French', 67); INSERT INTO Paintings VALUES (1, 'Water Lilies', 1, '2020-01-01', '2021-12-31'); INSERT INTO Gallery VALUES (1, 'Artistic Wonders', 'Paris');","completion":"SELECT DATEPART(YEAR, DisplayStart) AS Year, DATEPART(MONTH, DisplayStart) AS Month, COUNT(*) AS PaintingsOnDisplay FROM Paintings JOIN Gallery ON Paintings.GalleryID = Gallery.GalleryID WHERE GalleryName = 'Artistic Wonders' AND DisplayEnd >= DATEADD(DAY, 7, DisplayStart) AND DisplayStart <= '2021-12-31' GROUP BY DATEPART(YEAR, DisplayStart), DATEPART(MONTH, DisplayStart);"}
{"prompt":"What is the total number of species recorded in the Arctic Research Station 16 and 17? with given SQL schema CREATE TABLE Arctic_Research_Station_16 (id INT, species TEXT); CREATE TABLE Arctic_Research_Station_17 (id INT, species TEXT);","completion":"SELECT COUNT(DISTINCT species) FROM Arctic_Research_Station_16; SELECT COUNT(DISTINCT species) FROM Arctic_Research_Station_17; SELECT COUNT(DISTINCT species) FROM (SELECT * FROM Arctic_Research_Station_16 UNION ALL SELECT * FROM Arctic_Research_Station_17) AS Arctic_Species;"}
{"prompt":"Add a new treatment type 'art therapy' for patient 5 in Canada with given SQL schema CREATE SCHEMA mental_health; USE mental_health; CREATE TABLE patients (patient_id INT, diagnosis VARCHAR(50), age INT, country VARCHAR(50)); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type VARCHAR(50), treatment_date DATE, country VARCHAR(50)); INSERT INTO patients VALUES (5, 'depression', 45, 'Canada');","completion":"INSERT INTO treatments VALUES (9, 5, 'art therapy', '2022-03-20', 'Canada');"}
{"prompt":"Delete the record of a patient in Argentina who received art therapy with given SQL schema CREATE TABLE mental_health.patients (patient_id INT, first_name VARCHAR(50), last_name VARCHAR(50), age INT, gender VARCHAR(50), country VARCHAR(50)); INSERT INTO mental_health.patients (patient_id, first_name, last_name, age, gender, country) VALUES (12, 'Ana', 'Gomez', 30, 'Female', 'Argentina'); CREATE TABLE mental_health.treatments (treatment_id INT, patient_id INT, therapist_id INT, treatment_type VARCHAR(50), country VARCHAR(50)); INSERT INTO mental_health.treatments (treatment_id, patient_id, therapist_id, treatment_type, country) VALUES (13, 12, 102, 'Art Therapy', 'Argentina');","completion":"DELETE FROM mental_health.treatments WHERE patient_id = (SELECT patient_id FROM mental_health.patients WHERE first_name = 'Ana' AND last_name = 'Gomez' AND country = 'Argentina'); DELETE FROM mental_health.patients WHERE first_name = 'Ana' AND last_name = 'Gomez' AND country = 'Argentina';"}
{"prompt":"What is the total number of visitors to Asian destinations who participated in voluntourism in the last 3 years? with given SQL schema CREATE TABLE visitors (visitor_id INT, destination TEXT, visit_date DATE, voluntourism BOOLEAN); INSERT INTO visitors (visitor_id, destination, visit_date, voluntourism) VALUES (1, 'Bali', '2019-05-15', TRUE), (2, 'Phuket', '2020-12-28', FALSE), (3, 'Kyoto', '2018-07-22', TRUE);","completion":"SELECT COUNT(*) FROM visitors WHERE destination LIKE 'Asia%' AND voluntourism = TRUE AND visit_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR);"}
{"prompt":"How many articles have been published in each country, and what is the percentage of articles in the 'politics' category in each country? with given SQL schema CREATE TABLE articles (article_id INT, title VARCHAR(50), category VARCHAR(20), country VARCHAR(20)); INSERT INTO articles (article_id, title, category, country) VALUES (1, 'Politics in 2022', 'politics', 'USA'), (2, 'British Politics', 'politics', 'UK'), (3, 'Indian Economy', 'economy', 'India');","completion":"SELECT country, COUNT(*) as article_count, 100.0 * COUNT(CASE WHEN category = 'politics' THEN 1 END) \/ COUNT(*) as politics_percentage FROM articles GROUP BY country;"}
{"prompt":"Update the category of articles with the word 'sports' in the title to 'sport'. with given SQL schema CREATE TABLE articles (id INT, title TEXT, category TEXT, likes INT, created_at DATETIME); INSERT INTO articles (id, title, category, likes, created_at) VALUES (1, 'Climate crisis: 12 years to save the planet', 'climate change', 100, '2022-01-01 10:30:00');","completion":"UPDATE articles SET category = 'sport' WHERE title LIKE '%sports%';"}
{"prompt":"What is the proportion of articles about the environment in the \"NYTimes\" and \"WashingtonPost\"? with given SQL schema CREATE TABLE EnvironmentArticles (id INT, publication DATE, newspaper VARCHAR(20)); INSERT INTO EnvironmentArticles (id, publication, newspaper) VALUES (1, '2022-01-01', 'NYTimes'), (2, '2022-01-15', 'WashingtonPost'), (3, '2022-02-01', 'NYTimes');","completion":"SELECT (COUNT(*) FILTER (WHERE newspaper = 'NYTimes') + COUNT(*) FILTER (WHERE newspaper = 'WashingtonPost')) * 100.0 \/ (SELECT COUNT(*) FROM EnvironmentArticles) AS proportion FROM EnvironmentArticles WHERE newspaper IN ('NYTimes', 'WashingtonPost') AND category = 'environment';"}
{"prompt":"Which news articles have been published in both the 'media' and 'news' schemas? with given SQL schema CREATE TABLE media.articles (article_id INT, title VARCHAR(100), publish_date DATE); CREATE TABLE news.articles (article_id INT, title VARCHAR(100), publish_date DATE); INSERT INTO media.articles (article_id, title, publish_date) VALUES (1, 'Article 1', '2021-01-01'), (2, 'Article 2', '2021-02-01'); INSERT INTO news.articles (article_id, title, publish_date) VALUES (1, 'Article 1', '2021-01-01'), (3, 'Article 3', '2021-03-01');","completion":"SELECT media.articles.title FROM media.articles INNER JOIN news.articles ON media.articles.title = news.articles.title;"}
{"prompt":"Delete all records from the 'programs' table where the 'program_name' is 'Literacy Program' with given SQL schema CREATE TABLE programs (id INT, program_name TEXT, region TEXT); INSERT INTO programs (id, program_name, region) VALUES (1, 'Arts Education', 'Northwest'), (2, 'Science Education', 'Southeast'), (3, 'Literacy Program', 'Northeast');","completion":"DELETE FROM programs WHERE program_name = 'Literacy Program';"}
{"prompt":"What is the total number of volunteers and total volunteer hours for each region, excluding the top 3 regions with the highest total volunteer hours? with given SQL schema CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, Region TEXT, VolunteerHours INT, EventDate DATE); INSERT INTO Volunteers VALUES (1, 'Ahmed Al-Hassan', 'Middle East and North Africa', 20, '2022-01-01'), (2, 'Fatima Al-Farsi', 'Europe', 15, '2022-02-01');","completion":"SELECT Region, COUNT(VolunteerID) as TotalVolunteers, SUM(VolunteerHours) as TotalHours FROM Volunteers v JOIN (SELECT Region, ROW_NUMBER() OVER (ORDER BY SUM(VolunteerHours) DESC) as rn FROM Volunteers GROUP BY Region) tmp ON v.Region = tmp.Region WHERE rn > 3 GROUP BY Region;"}
{"prompt":"Who is the oldest donor from each city? with given SQL schema CREATE TABLE donors_2 (id INT PRIMARY KEY, name VARCHAR(50), age INT, city VARCHAR(50), state VARCHAR(50)); INSERT INTO donors_2 (id, name, age, city, state) VALUES (1, 'John Doe', 35, 'New York', 'NY'), (2, 'Jane Smith', 40, 'Buffalo', 'NY'), (3, 'Mike Johnson', 50, 'Boston', 'MA');","completion":"SELECT city, MAX(age) as oldest_donor_age FROM donors_2 GROUP BY city;"}
{"prompt":"Display the average depth of each ocean with a depth greater than 3000 meters. with given SQL schema CREATE TABLE OCEAN_DEPTHS (OCEAN VARCHAR(20), AVERAGE_DEPTH FLOAT); INSERT INTO OCEAN_DEPTHS (OCEAN, AVERAGE_DEPTH) VALUES ('Pacific Ocean', 4000), ('Atlantic Ocean', 3500), ('Indian Ocean', 3800), ('Southern Ocean', 4500), ('Arctic Ocean', 1500);","completion":"SELECT OCEAN, AVERAGE_DEPTH FROM OCEAN_DEPTHS WHERE AVERAGE_DEPTH > 3000;"}
{"prompt":"What is the average donation amount in 'Asia' region? with given SQL schema CREATE TABLE donations (id INT, donor_id INT, donation_amount DECIMAL(10,2), region VARCHAR(50)); INSERT INTO donations (id, donor_id, donation_amount, region) VALUES (1, 1, 100.00, 'Asia'); INSERT INTO donations (id, donor_id, donation_amount, region) VALUES (2, 2, 200.00, 'Africa'); INSERT INTO donations (id, donor_id, donation_amount, region) VALUES (3, 3, 300.00, 'Europe');","completion":"SELECT AVG(donation_amount) FROM donations WHERE region = 'Asia';"}
{"prompt":"What is the total number of donations and total amount donated for each region in the 'Regions' table? with given SQL schema CREATE TABLE Regions (RegionID int, RegionName varchar(50), DonationCount int, TotalDonations numeric(18,2));","completion":"SELECT RegionName, SUM(DonationCount) as TotalDonationsCount, SUM(TotalDonations) as TotalDonationsAmount FROM Regions GROUP BY RegionName;"}
{"prompt":"What is the total duration played for each player? with given SQL schema CREATE TABLE PlayerGame (PlayerID INT, GameID INT, Played DATE, StartTime TIMESTAMP, EndTime TIMESTAMP); INSERT INTO PlayerGame (PlayerID, GameID, Played, StartTime, EndTime) VALUES (1, 1, '2022-01-01', '2022-01-01 10:00:00', '2022-01-01 12:00:00'), (2, 2, '2022-01-02', '2022-01-02 14:00:00', '2022-01-02 16:00:00'), (3, 1, '2022-01-03', '2022-01-03 10:00:00', '2022-01-03 11:00:00'), (4, 3, '2022-01-04', '2022-01-04 18:00:00', '2022-01-04 19:00:00');","completion":"SELECT PlayerID, SUM(TIMESTAMPDIFF(MINUTE, StartTime, EndTime)) FROM PlayerGame GROUP BY PlayerID;"}
{"prompt":"How many players from each country are in the 'Players' table? with given SQL schema CREATE TABLE Players (PlayerID INT, Name VARCHAR(100), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Name, Country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'), (3, 'James Brown', 'England'), (4, 'Sophia Johnson', 'Germany'), (5, 'Emma White', 'USA'), (6, 'Oliver Black', 'Canada');","completion":"SELECT Country, COUNT(*) AS PlayerCount FROM Players GROUP BY Country;"}
{"prompt":"What is the minimum temperature reading for sensor with ID 102 in the 'sensors' table? with given SQL schema CREATE TABLE sensors (id INT, sensor_id INT, temperature DECIMAL(5,2)); INSERT INTO sensors (id, sensor_id, temperature) VALUES (1, 101, 23.5), (2, 102, 25.7), (3, 103, 21.8), (4, 104, 27.3);","completion":"SELECT MIN(temperature) FROM sensors WHERE sensor_id = 102;"}
{"prompt":"Insert a new record of budget allocation for the 'Emergency Services' department for the year 2025 with given SQL schema CREATE TABLE budget_allocation (department TEXT, year INT, allocation DECIMAL(10,2));","completion":"INSERT INTO budget_allocation (department, year, allocation) VALUES ('Emergency Services', 2025, 800000.00);"}
{"prompt":"What is the average production quantity of neodymium in 2020 for mines located in Canada? with given SQL schema CREATE TABLE mines (id INT, name TEXT, location TEXT, production_quantity INT, year INT); INSERT INTO mines (id, name, location, production_quantity, year) VALUES (1, 'Great Western Minerals Group', 'Canada', 350, 2020), (2, 'Neo Material Technologies', 'Canada', 420, 2020);","completion":"SELECT AVG(production_quantity) FROM mines WHERE location = 'Canada' AND year = 2020 AND element = 'neodymium';"}
{"prompt":"Find the total square footage of wheelchair-accessible properties in Boston. with given SQL schema CREATE TABLE properties (id INT, city VARCHAR(20), square_footage INT, wheelchair_accessible BOOLEAN); INSERT INTO properties (id, city, square_footage, wheelchair_accessible) VALUES (1, 'Boston', 1000, true); INSERT INTO properties (id, city, square_footage, wheelchair_accessible) VALUES (2, 'Boston', 1200, false);","completion":"SELECT SUM(square_footage) FROM properties WHERE city = 'Boston' AND wheelchair_accessible = true;"}
{"prompt":"How many hydroelectric power plants were constructed in Malaysia, Philippines, and Singapore between 2015 and 2020? with given SQL schema CREATE TABLE hydro_plants (plant_id INT, country VARCHAR(50), construction_year INT); INSERT INTO hydro_plants (plant_id, country, construction_year) VALUES (1, 'Malaysia', 2016), (2, 'Philippines', 2018), (3, 'Singapore', 2017), (4, 'Malaysia', 2019), (5, 'Philippines', 2020), (6, 'Singapore', 2015), (7, 'Malaysia', 2018);","completion":"SELECT COUNT(*) FROM hydro_plants WHERE country IN ('Malaysia', 'Philippines', 'Singapore') AND construction_year BETWEEN 2015 AND 2020;"}
{"prompt":"Update the name of the Wind Farm in Germany with the highest capacity with given SQL schema CREATE TABLE wind_farms (id INT, name VARCHAR(100), country VARCHAR(50), capacity_mw FLOAT); INSERT INTO wind_farms (id, name, country, capacity_mw) VALUES (1, 'Windfarm 1', 'Germany', 120.5), (2, 'Windfarm 2', 'Germany', 250.3);","completion":"UPDATE wind_farms SET name = 'Super Windfarm' WHERE country = 'Germany' ORDER BY capacity_mw DESC LIMIT 1;"}
{"prompt":"Show the total cost of all astrophysics research projects led by researchers from the Canadian Space Agency, grouped by research publication year. with given SQL schema CREATE TABLE AstrophysicsResearch (id INT, title VARCHAR(500), abstract TEXT, publication_date DATE, lead_researcher INT, institution VARCHAR(500)); CREATE TABLE Researchers (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), nationality VARCHAR(50), affiliation VARCHAR(500)); INSERT INTO Researchers (id, name, nationality) VALUES (1, 'Sarah Lee', 'Canadian'); INSERT INTO AstrophysicsResearch (id, title, publication_date, lead_researcher) VALUES (1, 'Project A', '2020-01-01', 1);","completion":"SELECT YEAR(publication_date) AS publication_year, SUM(r.total_cost) AS total_cost FROM AstrophysicsResearch r JOIN Researchers re ON r.lead_researcher = re.id WHERE re.nationality = 'Canadian' GROUP BY YEAR(publication_date);"}
{"prompt":"Identify fans who have attended both basketball and soccer games in the last 9 months. with given SQL schema CREATE TABLE fan_attendance(fan_id INT, game_type VARCHAR(10), attendance_date DATE); INSERT INTO fan_attendance(fan_id, game_type, attendance_date) VALUES (1, 'basketball', '2022-04-05'), (2, 'soccer', '2022-05-07'), (3, 'basketball', '2022-06-10'), (1, 'soccer', '2022-06-12'), (4, 'basketball', '2022-07-15'), (3, 'soccer', '2022-07-17');","completion":"SELECT fan_id FROM fan_attendance WHERE game_type = 'basketball' AND attendance_date >= DATEADD(month, -9, GETDATE()) INTERSECT SELECT fan_id FROM fan_attendance WHERE game_type = 'soccer' AND attendance_date >= DATEADD(month, -9, GETDATE());"}
{"prompt":"What are the total ticket sales for basketball and soccer games? with given SQL schema CREATE TABLE games (game_id INT, game_type VARCHAR(10)); INSERT INTO games (game_id, game_type) VALUES (1, 'Basketball'), (2, 'Soccer'); CREATE TABLE sales (sale_id INT, game_id INT, revenue DECIMAL(5,2)); INSERT INTO sales (sale_id, game_id, revenue) VALUES (1, 1, 500.00), (2, 1, 750.00), (3, 2, 800.00), (4, 2, 1000.00);","completion":"SELECT SUM(sales.revenue) FROM sales JOIN games ON sales.game_id = games.game_id WHERE games.game_type IN ('Basketball', 'Soccer');"}
{"prompt":"What are the details of phishing threats and their associated malicious IPs? with given SQL schema CREATE TABLE threat_intelligence(id INT, threat_name VARCHAR(255), category VARCHAR(255), origin VARCHAR(255)); INSERT INTO threat_intelligence(id, threat_name, category, origin) VALUES (1, 'Phishing Attack', 'Phishing', 'Russia'); CREATE TABLE suspicious_ips(id INT, ip_address VARCHAR(255), location VARCHAR(255), last_seen DATETIME); INSERT INTO suspicious_ips(id, ip_address, location, last_seen) VALUES (1, '192.168.1.2', 'Russia', '2021-03-02 11:00:00');","completion":"SELECT ti.threat_name, si.ip_address, si.location, si.last_seen FROM threat_intelligence ti INNER JOIN suspicious_ips si ON ti.origin = si.location WHERE ti.category = 'Phishing';"}
{"prompt":"What is the total number of threat intelligence entries for the last 3 months? with given SQL schema CREATE TABLE ThreatIntelligence (EntryID INT, EntryDate DATE); INSERT INTO ThreatIntelligence (EntryID, EntryDate) VALUES (1, '2022-05-15'); INSERT INTO ThreatIntelligence (EntryID, EntryDate) VALUES (2, '2022-04-17');","completion":"SELECT COUNT(*) FROM ThreatIntelligence WHERE EntryDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"}
{"prompt":"What is the total number of electric and hybrid vehicles in 'vehicle_data' table? with given SQL schema CREATE TABLE vehicle_data (id INT, vehicle_type VARCHAR(20), is_electric BOOLEAN, is_hybrid BOOLEAN);","completion":"SELECT COUNT(*) FROM vehicle_data WHERE is_electric = true OR is_hybrid = true;"}
{"prompt":"Calculate the total revenue generated from the US market. with given SQL schema CREATE TABLE Sales (id INT PRIMARY KEY, market VARCHAR(20), revenue DECIMAL(10,2)); INSERT INTO Sales (id, market, revenue) VALUES (1, 'US', 20000.00), (2, 'Canada', 15000.00);","completion":"SELECT SUM(revenue) FROM Sales WHERE market = 'US';"}
{"prompt":"How many units of each product were sold in Canada in Q2 and Q3 of 2021? with given SQL schema CREATE TABLE product_sales (product_name VARCHAR(30), country VARCHAR(20), quarter INT, year INT, units_sold INT); INSERT INTO product_sales (product_name, country, quarter, year, units_sold) VALUES ('t-shirt', 'Canada', 2, 2021, 800), ('t-shirt', 'Canada', 3, 2021, 900), ('jeans', 'Canada', 2, 2021, 1200), ('jeans', 'Canada', 3, 2021, 1300);","completion":"SELECT product_name, SUM(units_sold) FROM product_sales WHERE country = 'Canada' AND (quarter = 2 OR quarter = 3) AND year = 2021 GROUP BY product_name;"}
{"prompt":"Update the names of members in the 'transportation' union to 'crew'. with given SQL schema CREATE TABLE unions (id INT, name TEXT, member_name TEXT);   CREATE TABLE members (id INT, union_id INT, name TEXT);","completion":"UPDATE members SET name = 'crew' WHERE union_id IN (SELECT id FROM unions WHERE name = 'transportation');"}
{"prompt":"What is the total number of workers in unions that have a collective bargaining agreement in the technology sector? with given SQL schema CREATE TABLE union_tech (union_id INT, union_name TEXT, members INT, cb_agreement BOOLEAN); INSERT INTO union_tech (union_id, union_name, members, cb_agreement) VALUES (1, 'Union A', 5000, true), (2, 'Union B', 3000, false), (3, 'Union C', 7000, true);","completion":"SELECT SUM(members) FROM union_tech WHERE cb_agreement = true;"}
{"prompt":"Delete all records from the patents table with a filing date older than 5 years. with given SQL schema CREATE TABLE patents (patent_id INT, patent_number INT, filing_date DATE, vehicle_id INT);","completion":"DELETE FROM patents WHERE filing_date < DATEADD(year, -5, GETDATE());"}
{"prompt":"What is the average horsepower of luxury vehicles in the 'GreenCar' database produced after 2017? with given SQL schema CREATE TABLE LuxuryVehicles (Id INT, Make VARCHAR(50), Model VARCHAR(50), Year INT, Horsepower INT);","completion":"SELECT AVG(Horsepower) FROM LuxuryVehicles WHERE Year > 2017;"}
{"prompt":"What is the average safety rating of vehicles manufactured in each country? with given SQL schema CREATE TABLE Vehicles (id INT, make VARCHAR(50), model VARCHAR(50), safety_rating FLOAT, country VARCHAR(50));","completion":"SELECT country, AVG(safety_rating) FROM Vehicles GROUP BY country;"}
{"prompt":"What is the minimum safety rating of electric vehicles in the 'green_cars' table? with given SQL schema CREATE TABLE green_cars (id INT, make VARCHAR(50), model VARCHAR(50), type VARCHAR(50), safety_rating INT);","completion":"SELECT MIN(safety_rating) FROM green_cars WHERE type = 'Electric';"}
{"prompt":"Get the number of visitors and exhibitions for each art category. with given SQL schema CREATE TABLE art_categories (id INT, category VARCHAR(50), num_visitors INT, num_exhibitions INT); INSERT INTO art_categories (id, category, num_visitors, num_exhibitions) VALUES (1, 'Painting', 1200, 500), (2, 'Sculpture', 800, 300);","completion":"SELECT category, SUM(num_visitors) as total_visitors, SUM(num_exhibitions) as total_exhibitions FROM art_categories GROUP BY category;"}
{"prompt":"Which exhibition had the highest number of visitors in Los Angeles in the first half of 2019? with given SQL schema CREATE TABLE Exhibition_Visitor_Count (exhibition_id INT, city VARCHAR(50), half INT, year INT, visitor_count INT);","completion":"SELECT exhibition_id, MAX(visitor_count) FROM Exhibition_Visitor_Count WHERE city = 'Los Angeles' AND half IN (1, 2) AND year = 2019 GROUP BY exhibition_id;"}
{"prompt":"What is the total water consumption in liters for users in 'Asia' in March 2022? with given SQL schema CREATE TABLE water_consumption_by_region (user_location VARCHAR(20), consumption FLOAT, consumption_date DATE); INSERT INTO water_consumption_by_region (user_location, consumption, consumption_date) VALUES ('Africa', 150, '2022-03-01'), ('Asia', 250, '2022-03-01'), ('Africa', 160, '2022-03-02'), ('Asia', 240, '2022-03-02');","completion":"SELECT SUM(consumption) FROM water_consumption_by_region WHERE user_location = 'Asia' AND consumption_date >= '2022-03-01' AND consumption_date < '2022-04-01';"}
{"prompt":"What is the average safety score for each creative AI algorithm, grouped by their application domains? with given SQL schema CREATE TABLE creative_ai_algorithms (algorithm_id INT, algorithm_name VARCHAR(255), domain VARCHAR(255), safety_score FLOAT);CREATE TABLE ai_application_domains (domain_id INT, domain VARCHAR(255));","completion":"SELECT caa.domain, AVG(caa.safety_score) FROM creative_ai_algorithms caa INNER JOIN ai_application_domains aad ON caa.domain = aad.domain GROUP BY caa.domain;"}
{"prompt":"How many rural infrastructure projects have been implemented in Mexico since 2010 that targeted economic diversification? with given SQL schema CREATE TABLE infrastructure_projects (id INT, project_name VARCHAR(100), location VARCHAR(50), start_date DATE, end_date DATE, sector VARCHAR(50)); INSERT INTO infrastructure_projects (id, project_name, location, start_date, end_date, sector) VALUES (1, 'Rural Road Improvement', 'Puebla', '2012-01-01', '2013-12-31', 'Transportation'); INSERT INTO infrastructure_projects (id, project_name, location, start_date, end_date, sector) VALUES (2, 'Solar Powered Water Pumping System', 'Oaxaca', '2011-04-15', '2012-03-31', 'Energy');","completion":"SELECT COUNT(*) FROM infrastructure_projects WHERE location = 'Mexico' AND sector = 'Economic Diversification' AND start_date <= '2010-12-31' AND (end_date >= '2010-12-31' OR end_date IS NULL);"}
{"prompt":"List all the accidents involving Russian airlines since 2000, along with the aircraft type and the number of fatalities. with given SQL schema CREATE TABLE AirlineAccidents (AccidentID INT, Airline VARCHAR(50), AircraftType VARCHAR(50), Date DATE, Fatalities INT);","completion":"SELECT AirlineAccidents.Airline, AirlineAccidents.AircraftType, AirlineAccidents.Date, AirlineAccidents.Fatalities FROM AirlineAccidents WHERE AirlineAccidents.Airline LIKE '%Russian%' AND AirlineAccidents.Date >= '2000-01-01' ORDER BY AirlineAccidents.Date;"}
{"prompt":"Display the name and family of all fish species in the \"fish_species\" table that have a region of \"South America\" with given SQL schema create table fish_species (id integer, name text, family text, region text); insert into fish_species (id, name, family, region) values (1, 'Pacu', 'Serrasalmidae', 'South America'); insert into fish_species (id, name, family, region) values (2, 'Piranha', 'Serrasalmidae', 'South America'); insert into fish_species (id, name, family, region) values (3, 'Dorado', 'Salmoniformes', 'South America');","completion":"select name, family from fish_species where region = 'South America';"}
{"prompt":"What is the average stock level and biomass for each species in the 'fish_stock' table? with given SQL schema CREATE TABLE fish_stock (id INT, species VARCHAR(255), stock_level INT, biomass DECIMAL(6,2)); INSERT INTO fish_stock (id, species, stock_level, biomass) VALUES (1, 'Tilapia', 250, 325.45), (2, 'Salmon', 180, 2134.67), (3, 'Tilapia', 300, 412.34), (4, 'Catfish', 150, 654.32), (5, 'Salmon', 200, 2500.00);","completion":"SELECT species, AVG(stock_level) as avg_stock_level, AVG(biomass) as avg_biomass FROM fish_stock GROUP BY species;"}
{"prompt":"What is the maximum and minimum dissolved oxygen level for each species of fish in the aquaculture facility? with given SQL schema CREATE TABLE fish_species (id INT, species TEXT, dissolved_oxygen_tolerance FLOAT);CREATE TABLE fish_population (id INT, species TEXT, population INT, dissolved_oxygen FLOAT, date DATE);","completion":"SELECT species, MAX(dissolved_oxygen) AS max_dissolved_oxygen, MIN(dissolved_oxygen) AS min_dissolved_oxygen FROM fish_population fp JOIN fish_species fs ON fp.species = fs.species GROUP BY species;"}
{"prompt":"What is the maximum biomass of fish for each species in Africa? with given SQL schema CREATE TABLE fish_stock (id INT, species VARCHAR, biomass FLOAT, country VARCHAR); INSERT INTO fish_stock (id, species, biomass, country) VALUES (1, 'Tilapia', 500.0, 'Egypt'), (2, 'Salmon', 800.0, 'Norway'), (3, 'Trout', 300.0, 'New Zealand'), (4, 'Bass', 700.0, 'South Africa'), (5, 'Tilapia', 600.0, 'Tanzania');","completion":"SELECT species, MAX(biomass) FROM fish_stock WHERE country IN ('Egypt', 'South Africa', 'Tanzania') GROUP BY species;"}
{"prompt":"What are the average labor costs for green building projects in California? with given SQL schema CREATE TABLE Green_Buildings (Project_ID INT, Project_Name VARCHAR(255), State VARCHAR(255), Labor_Cost DECIMAL(10,2)); INSERT INTO Green_Buildings (Project_ID, Project_Name, State, Labor_Cost) VALUES (1, 'Solar Farm', 'California', 150000.00), (2, 'Wind Turbine Park', 'California', 200000.00);","completion":"SELECT AVG(Labor_Cost) FROM Green_Buildings WHERE State = 'California';"}
{"prompt":"Find all cases and their associated attorneys that have an expense greater than $500 with given SQL schema CREATE TABLE cases (case_id INT, attorney_id INT); CREATE TABLE attorneys_expenses (attorney_expense_id INT, attorney_id INT, amount DECIMAL(10, 2));","completion":"SELECT cases.case_id, attorneys_expenses.attorney_id, attorneys_expenses.amount FROM cases INNER JOIN attorneys_expenses ON cases.attorney_id = attorneys_expenses.attorney_id WHERE attorneys_expenses.amount > 500;"}
{"prompt":"How many cases were handled by attorneys who joined the firm in 2015 or later? with given SQL schema CREATE TABLE attorneys (attorney_id INT, join_year INT); CREATE TABLE cases (case_id INT, attorney_id INT, billing_amount INT);","completion":"SELECT COUNT(DISTINCT cases.case_id) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.join_year >= 2015;"}
{"prompt":"What is the maximum number of cases handled by attorneys who identify as male? with given SQL schema CREATE TABLE attorneys (attorney_id INT, gender VARCHAR(10), total_cases INT); INSERT INTO attorneys (attorney_id, gender, total_cases) VALUES (1, 'Female', 15), (2, 'Male', 20), (3, 'Male', 10);","completion":"SELECT MAX(total_cases) FROM attorneys WHERE gender = 'Male';"}
{"prompt":"What is the average annual climate finance investment in the Middle East? with given SQL schema CREATE TABLE climate_finance_investments (id INT, country VARCHAR(50), investment FLOAT, year INT); INSERT INTO climate_finance_investments (id, country, investment, year) VALUES (1, 'Iran', 2000000, 2018), (2, 'Iraq', 1500000, 2018), (3, 'Israel', 3000000, 2019);","completion":"SELECT AVG(investment) FROM climate_finance_investments WHERE country = 'Iran' OR country = 'Iraq' OR country = 'Israel' GROUP BY year;"}
{"prompt":"How many primary care physicians are there in each county of Los Angeles in 2022? with given SQL schema CREATE TABLE Physicians (ID INT, Specialty VARCHAR(20), County VARCHAR(20), State VARCHAR(20), Date DATE); INSERT INTO Physicians (ID, Specialty, County, State, Date) VALUES (1, 'Primary Care', 'Los Angeles', 'California', '2022-01-01');","completion":"SELECT County, COUNT(*) FROM Physicians WHERE Specialty = 'Primary Care' AND State = 'California' AND YEAR(Date) = 2022 GROUP BY County;"}
{"prompt":"What is the infant mortality rate in Latin America by country? with given SQL schema CREATE TABLE latin_america (country VARCHAR(50), infant_mortality_rate DECIMAL(3,1)); INSERT INTO latin_america (country, infant_mortality_rate) VALUES ('Argentina', 8.2), ('Brazil', 13.0), ('Chile', 6.4);","completion":"SELECT country, AVG(infant_mortality_rate) as avg_infant_mortality_rate FROM latin_america GROUP BY country;"}
{"prompt":"What is the current circulating supply of digital asset 'Polkadot'? with given SQL schema CREATE TABLE digital_assets_supply (asset_name TEXT, circulating_supply INT, total_supply INT); INSERT INTO digital_assets_supply (asset_name, circulating_supply, total_supply) VALUES ('Polkadot', 1000000000, 1000000000);","completion":"SELECT circulating_supply FROM digital_assets_supply WHERE asset_name = 'Polkadot';"}
{"prompt":"List all timber production records for the year 2000, including the species and volume, in descending order by volume. with given SQL schema CREATE TABLE timber_production (id INT, year INT, species VARCHAR(255), volume FLOAT); INSERT INTO timber_production (id, year, species, volume) VALUES (1, 2000, 'Pine', 1200), (2, 2000, 'Oak', 1500), (3, 2001, 'Spruce', 1800);","completion":"SELECT species, volume FROM timber_production WHERE year = 2000 ORDER BY volume DESC;"}
{"prompt":"How many 'Foundation' products have a rating of at least 4.0? with given SQL schema CREATE TABLE Products (ProductID int, ProductName varchar(50), Category varchar(50), Rating float); INSERT INTO Products (ProductID, ProductName, Category, Rating) VALUES (1, 'Foundation A', 'Foundation', 3.5), (2, 'Foundation B', 'Foundation', 4.2), (3, 'Lipstick C', 'Lipstick', 4.7);","completion":"SELECT COUNT(*) as NumRated4 FROM Products WHERE Category = 'Foundation' AND Rating >= 4.0;"}
{"prompt":"What is the total revenue for cosmetic products in the United Kingdom that are certified as vegan and cruelty-free? with given SQL schema CREATE TABLE cosmetics_sales (product_id INT, product_name TEXT, is_vegan BOOLEAN, is_cruelty_free BOOLEAN, country TEXT, revenue INT);","completion":"SELECT SUM(revenue) FROM cosmetics_sales WHERE is_vegan = TRUE AND is_cruelty_free = TRUE AND country = 'United Kingdom';"}
{"prompt":"What is the maximum response time for each community? with given SQL schema CREATE TABLE communities (community_id INT, community_name VARCHAR(50)); CREATE TABLE emergencies (emergency_id INT, community_id INT, responded_date DATE, response_time INT); INSERT INTO communities (community_id, community_name) VALUES (1, 'Community A'), (2, 'Community B'), (3, 'Community C'); INSERT INTO emergencies (emergency_id, community_id, responded_date, response_time) VALUES (1, 1, '2021-01-01', 15), (2, 2, '2021-02-01', 20), (3, 3, '2021-03-01', 25), (4, 1, '2021-04-01', 18);","completion":"SELECT community_name, MAX(response_time) max_response_time FROM emergencies JOIN communities ON emergencies.community_id = communities.community_id GROUP BY community_name;"}
{"prompt":"Show all military innovation records that are not related to 'Country W' with given SQL schema CREATE TABLE military_innovation (id INT, country VARCHAR(255), innovation VARCHAR(255));","completion":"SELECT * FROM military_innovation WHERE country != 'Country W';"}
{"prompt":"What is the minimum and maximum transaction amount for customers in the West region? with given SQL schema CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_date DATE, transaction_amount DECIMAL(10,2)); INSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (1, 2, '2022-01-05', 350.00), (2, 1, '2022-01-10', 500.00), (3, 4, '2022-01-15', 600.00), (4, 4, '2022-01-30', 800.00);","completion":"SELECT MIN(transaction_amount), MAX(transaction_amount) FROM transactions WHERE customer_id IN (SELECT customer_id FROM customers WHERE region = 'West');"}
{"prompt":"What is the average salary of workers in the manufacturing industry, grouped by their job role and location, for the year 2021? with given SQL schema CREATE TABLE Workers (worker_id INT, job_role VARCHAR(255), location VARCHAR(255), salary DECIMAL(10,2), join_date DATE); INSERT INTO Workers (worker_id, job_role, location, salary, join_date) VALUES (1, 'Engineer', 'New York', 75000.00, '2021-01-01'); INSERT INTO Workers (worker_id, job_role, location, salary, join_date) VALUES (2, 'Technician', 'California', 50000.00, '2021-01-01');","completion":"SELECT w.job_role, w.location, AVG(w.salary) as avg_salary FROM Workers w WHERE YEAR(w.join_date) = 2021 GROUP BY w.job_role, w.location;"}
{"prompt":"Find excavation sites with more than 50 artifacts. with given SQL schema CREATE TABLE excavation_sites (id INT, name VARCHAR(255)); CREATE TABLE artifacts (id INT, excavation_site_id INT, year INT, type VARCHAR(255));","completion":"SELECT es.name FROM excavation_sites es JOIN artifacts a ON es.id = a.excavation_site_id GROUP BY es.name HAVING COUNT(a.id) > 50;"}
{"prompt":"Delete records of hospitals in Alabama. with given SQL schema CREATE TABLE hospitals (id INT, name TEXT, location TEXT); INSERT INTO hospitals (id, name, location) VALUES (1, 'Hospital A', 'Rural Texas'); INSERT INTO hospitals (id, name, location) VALUES (5, 'Hospital E', 'Rural Alabama');","completion":"DELETE FROM hospitals WHERE location = 'Rural Alabama';"}
{"prompt":"What is the number of hospitals in 'rural_healthcare' table? with given SQL schema CREATE TABLE rural_healthcare (name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); INSERT INTO rural_healthcare (name, type, location) VALUES ('Rural General Hospital', 'Hospital', 'Bushland'), ('Rural Community Hospital', 'Hospital', 'Forest Region');","completion":"SELECT COUNT(*) FROM rural_healthcare WHERE type = 'Hospital';"}
{"prompt":"Update the name of the artist with id 1 to 'Adele'. with given SQL schema CREATE TABLE artists (id INT, name TEXT); INSERT INTO artists (id, name) VALUES (1, 'Taylor Swift'), (2, 'Eminem');","completion":"UPDATE artists SET name = 'Adele' WHERE id = 1;"}
{"prompt":"What are the names of the top 5 artists with the highest number of streams on the \"platformP\" platform, considering only the \"country\" genre? with given SQL schema CREATE TABLE platformP (artist_name TEXT, genre TEXT, streams BIGINT);","completion":"SELECT artist_name FROM platformP WHERE genre = 'country' GROUP BY artist_name ORDER BY SUM(streams) DESC LIMIT 5;"}
{"prompt":"Who are the top 2 artists with the most R&B songs? with given SQL schema CREATE TABLE songs (song_id INT, song_title TEXT, artist_name TEXT, genre TEXT); INSERT INTO songs VALUES (1, 'Love Song', 'Alicia Keys', 'R&B'), (2, 'Rolling in the Deep', 'Adele', 'R&B'), (3, 'Empire State of Mind', 'Jay-Z', 'R&B'), (4, 'Crazy', 'Gnarls Barkley', 'Soul'), (5, 'Tears Always Win', 'Alicia Keys', 'R&B'); CREATE TABLE artists (artist_id INT, artist_name TEXT); INSERT INTO artists VALUES (1, 'Alicia Keys'), (2, 'Adele'), (3, 'Jay-Z'), (4, 'Gnarls Barkley');","completion":"SELECT artists.artist_name, COUNT(songs.song_id) as song_count FROM songs INNER JOIN artists ON songs.artist_name = artists.artist_name WHERE songs.genre = 'R&B' GROUP BY artists.artist_name ORDER BY song_count DESC LIMIT 2;"}
{"prompt":"How many professional development courses did teachers complete in each department? with given SQL schema CREATE TABLE teacher_professional_development (teacher_id INT, department_id INT, course_count INT);","completion":"SELECT department_id, SUM(course_count) as total_courses FROM teacher_professional_development GROUP BY department_id;"}
{"prompt":"What is the percentage of students who participated in lifelong learning programs in each school? with given SQL schema CREATE TABLE school_lifelong_learning_participation (school_id INT, student_id INT, participated_in_program BOOLEAN); INSERT INTO school_lifelong_learning_participation (school_id, student_id, participated_in_program) VALUES (1, 1, true), (1, 2, false), (1, 3, true), (2, 4, true), (2, 5, true), (3, 6, false), (3, 7, false), (3, 8, true); CREATE TABLE schools (school_id INT, school_name TEXT); INSERT INTO schools (school_id, school_name) VALUES (1, 'Green Valley High'), (2, 'Oak Park Middle'), (3, 'Sunshine Elementary');","completion":"SELECT s.school_name, 100.0 * AVG(CASE WHEN sllp.participated_in_program THEN 1.0 ELSE 0.0 END) as percentage_participated FROM school_lifelong_learning_participation sllp JOIN schools s ON sllp.school_id = s.school_id GROUP BY sllp.school_id;"}
{"prompt":"What is the average capacity of geothermal plants? with given SQL schema CREATE TABLE geothermal_plants (name TEXT, location TEXT, capacity_MW INTEGER); INSERT INTO geothermal_plants (name, location, capacity_MW) VALUES ('Plant D', 'Country A', 60), ('Plant E', 'Country B', 80), ('Plant F', 'Country C', 70);","completion":"SELECT AVG(capacity_MW) FROM geothermal_plants;"}
{"prompt":"List the number of unique volunteers and total volunteer hours for each community. with given SQL schema CREATE TABLE volunteers (id INT, community_id INT, hours FLOAT); CREATE TABLE communities (id INT, name VARCHAR(255));","completion":"SELECT c.name, COUNT(DISTINCT volunteers.id) as volunteer_count, SUM(volunteers.hours) as total_volunteer_hours FROM communities c LEFT JOIN volunteers ON c.id = volunteers.community_id GROUP BY c.id;"}
{"prompt":"What is the total number of disaster response projects in Asia? with given SQL schema CREATE TABLE disaster_response_projects (id INT, name VARCHAR(100), region VARCHAR(50), status VARCHAR(20)); INSERT INTO disaster_response_projects (id, name, region, status) VALUES (1, 'Project A', 'Asia', 'Completed'), (2, 'Project B', 'Africa', 'In Progress'), (3, 'Project C', 'Asia', 'Completed');","completion":"SELECT COUNT(*) FROM disaster_response_projects WHERE region = 'Asia';"}
{"prompt":"What is the total number of ethical AI patents filed in Mexico, Argentina, and Colombia? with given SQL schema CREATE TABLE patents (patent_id INT, title VARCHAR(50), filed_country VARCHAR(50), ethical BOOLEAN); INSERT INTO patents (patent_id, title, filed_country, ethical) VALUES (1, 'PatentA', 'Mexico', true), (2, 'PatentB', 'Argentina', false), (3, 'PatentC', 'Colombia', true), (4, 'PatentD', 'Mexico', true), (5, 'PatentE', 'Argentina', true);","completion":"SELECT COUNT(*) FROM patents WHERE ethical = true AND filed_country IN ('Mexico', 'Argentina', 'Colombia');"}
{"prompt":"Update the financial wellbeing score of clients in Indonesia to 1 point higher than their current score. with given SQL schema CREATE TABLE financial_wellbeing_id (client_id INT, financial_wellbeing_score INT, country VARCHAR(50)); INSERT INTO financial_wellbeing_id (client_id, financial_wellbeing_score, country) VALUES (1, 7, 'Indonesia'), (2, 3, 'Indonesia'), (3, 6, 'Indonesia');","completion":"WITH updated_scores AS (UPDATE financial_wellbeing_id SET financial_wellbeing_score = financial_wellbeing_score + 1 WHERE country = 'Indonesia') SELECT * FROM updated_scores;"}
{"prompt":"Identify all ingredients that appear in more than one cuisine type. with given SQL schema CREATE TABLE cuisines (id INT, name TEXT, ingredient TEXT);","completion":"SELECT ingredient FROM cuisines GROUP BY ingredient HAVING COUNT(DISTINCT name) > 1;"}
{"prompt":"Show the total number of records in the \"Sustainability\" table with given SQL schema CREATE TABLE Sustainability (id INT, company VARCHAR(50), rating DECIMAL(2,1), year INT); INSERT INTO Sustainability (id, company, rating, year) VALUES (1, 'Company1', 3.5, 2019), (2, 'Company2', 4.2, 2020);","completion":"SELECT COUNT(*) FROM Sustainability;"}
{"prompt":"Update the FoodSafetyRecords.OrganicFarms table to include a new record for a certified organic farm in Kenya. with given SQL schema CREATE TABLE FoodSafetyRecords.OrganicFarms (farmName TEXT, country TEXT, certified BOOLEAN);","completion":"INSERT INTO FoodSafetyRecords.OrganicFarms (farmName, country, certified) VALUES ('Ngong Organic Farm', 'Kenya', TRUE);"}
{"prompt":"Find the average warehouse management costs for the Sydney and Melbourne warehouses in Q2 2023? with given SQL schema CREATE TABLE warehouse_costs_apac (warehouse_id INT, warehouse_location VARCHAR(255), cost DECIMAL(10,2), quarter INT, year INT); INSERT INTO warehouse_costs_apac (warehouse_id, warehouse_location, cost, quarter, year) VALUES (1, 'Sydney Warehouse', 3800.00, 2, 2023), (2, 'Melbourne Warehouse', 3200.00, 2, 2023), (3, 'Brisbane Warehouse', 2800.00, 2, 2023);","completion":"SELECT warehouse_location, AVG(cost) as avg_cost FROM warehouse_costs_apac WHERE warehouse_location IN ('Sydney Warehouse', 'Melbourne Warehouse') AND quarter = 2 AND year = 2023 GROUP BY warehouse_location;"}
{"prompt":"What is the average number of public consultations attended by residents in urban areas? with given SQL schema CREATE TABLE residents (id INT, age INT, city VARCHAR(50), state VARCHAR(50), rural BOOLEAN, consultations INT); INSERT INTO residents (id, age, city, state, rural, consultations) VALUES (1, 34, 'New York', 'NY', false, 2), (2, 55, 'Los Angeles', 'CA', false, 1); CREATE TABLE cities (id INT, name VARCHAR(50), state VARCHAR(50), rural BOOLEAN); INSERT INTO cities (id, name, state, rural) VALUES (1, 'New York', 'NY', false), (2, 'Los Angeles', 'CA', false), (3, 'Smallville', 'NY', true);","completion":"SELECT AVG(consultations) as avg_consultations FROM residents r JOIN cities c ON r.city = c.name WHERE r.rural = false;"}
{"prompt":"Add a new carbon offset initiative to the \"carbon_offsets\" table with given SQL schema CREATE TABLE carbon_offsets (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), amount FLOAT);","completion":"INSERT INTO carbon_offsets (id, name, location, type, amount) VALUES (1, 'TreePlanting', 'Paris', 'Trees', 1000.0);"}
{"prompt":"What is the percentage of mental health parity violations in each state? with given SQL schema CREATE TABLE parity_violations (state VARCHAR(25), violation_count INT); INSERT INTO parity_violations (state, violation_count) VALUES ('California', 20), ('New York', 15), ('Texas', 10), ('Florida', 25), ('Illinois', 30), ('Pennsylvania', 22), ('Ohio', 18), ('Georgia', 27);","completion":"SELECT state, ROUND(100.0*SUM(violation_count) \/ (SELECT SUM(violation_count) FROM parity_violations), 2) as violation_percentage FROM parity_violations GROUP BY state;"}
{"prompt":"List the local economic impact of tourism in New York and Los Angeles. with given SQL schema CREATE TABLE local_economy (city TEXT, impact FLOAT); INSERT INTO local_economy (city, impact) VALUES ('New York', 12000), ('Los Angeles', 9000);","completion":"SELECT city, impact FROM local_economy WHERE city IN ('New York', 'Los Angeles');"}
{"prompt":"What is the average revenue generated by sustainable tourism initiatives in North America per month? with given SQL schema CREATE TABLE sustainable_tourism_revenue (revenue_id INT, initiative_id INT, country TEXT, revenue DECIMAL(10,2), timestamp TIMESTAMP); INSERT INTO sustainable_tourism_revenue (revenue_id, initiative_id, country, revenue, timestamp) VALUES (1, 1, 'USA', 2500.00, '2022-01-01 12:00:00'), (2, 2, 'Canada', 3000.00, '2022-01-05 15:30:00');","completion":"SELECT AVG(revenue) FROM sustainable_tourism_revenue WHERE country IN ('USA', 'Canada') AND DATE_TRUNC('month', timestamp) = DATE_TRUNC('month', NOW());"}
{"prompt":"What is the average number of voice commands successfully executed per day for luxury hotels? with given SQL schema CREATE TABLE voice_commands (id INT PRIMARY KEY, hotel_category VARCHAR(50), voice_command VARCHAR(50), success_count INT, command_date DATE); INSERT INTO voice_commands (id, hotel_category, voice_command, success_count, command_date) VALUES (1, 'Luxury', 'Adjust lighting', 35, '2022-03-01'), (2, 'Luxury', 'Play music', 28, '2022-03-02');","completion":"SELECT hotel_category, AVG(success_count) FROM voice_commands WHERE hotel_category = 'Luxury' GROUP BY hotel_category, DATE_TRUNC('day', command_date) HAVING COUNT(*) > 1;"}
{"prompt":"What is the total revenue per hotel for the first two days of June, 2021, considering AI-powered hotel operations? with given SQL schema CREATE TABLE ota_bookings (ota_id INT, booking_date DATE, revenue FLOAT); INSERT INTO ota_bookings (ota_id, booking_date, revenue) VALUES (1, '2021-06-01', 500.0), (3, '2021-06-01', 400.0), (2, '2021-06-02', 600.0); CREATE TABLE hotels (hotel_id INT, ota_id INT, hotel_name VARCHAR(50), ai_operations INT); INSERT INTO hotels (hotel_id, ota_id, hotel_name, ai_operations) VALUES (1, 1, 'Hotel A', 1), (2, 2, 'Hotel B', 1), (3, 3, 'Hotel C', 0);","completion":"SELECT h.hotel_name, SUM(ob.revenue) as total_revenue FROM ota_bookings ob JOIN hotels h ON ob.ota_id = h.ota_id WHERE booking_date BETWEEN '2021-06-01' AND '2021-06-02' AND h.ai_operations = 1 GROUP BY h.hotel_name;"}
{"prompt":"Which OTA (Online Travel Agency) has the highest virtual tour engagement in the 'ota_stats' table? with given SQL schema CREATE TABLE ota_stats (ota_name TEXT, virtual_tour_views INT); INSERT INTO ota_stats (ota_name, virtual_tour_views) VALUES ('Expedia', 15000), ('Booking.com', 18000), ('Agoda', 12000);","completion":"SELECT ota_name, MAX(virtual_tour_views) FROM ota_stats;"}
{"prompt":"Update the temperature of the record from 2011 to -18.5 with given SQL schema CREATE TABLE climate (id INT PRIMARY KEY, year INT, temperature FLOAT, precipitation FLOAT, location VARCHAR(100));","completion":"WITH upd AS (UPDATE climate SET temperature = -18.5 WHERE year = 2011) SELECT id, year, temperature, precipitation, location FROM climate;"}
{"prompt":"What is the average budget allocated for community engagement programs in North America? with given SQL schema CREATE TABLE CommunityEngagement (Location VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO CommunityEngagement (Location, Budget) VALUES ('North America', 600000);","completion":"SELECT AVG(Budget) FROM CommunityEngagement WHERE Location = 'North America';"}
{"prompt":"Display total cost of all road projects in New York with given SQL schema CREATE TABLE road_projects (id INT, name TEXT, cost FLOAT, location TEXT); INSERT INTO road_projects (id, name, cost, location) VALUES (1, 'Road Project A', 500000.00, 'New York'), (2, 'Road Project B', 750000.00, 'California');","completion":"SELECT SUM(cost) FROM road_projects WHERE location = 'New York';"}
{"prompt":"Find the number of tourists who visited Australia in 2018 with given SQL schema CREATE TABLE tourism_stats (destination VARCHAR(255), year INT, visitors INT); INSERT INTO tourism_stats (destination, year, visitors) VALUES ('Australia', 2018, 17000000);","completion":"SELECT visitors FROM tourism_stats WHERE destination = 'Australia' AND year = 2018;"}
{"prompt":"What are the top 5 destinations with the most positive impact on sustainable tourism? with given SQL schema CREATE TABLE sustainable_practices (practice_id INT, practice_name VARCHAR(50), destination_id INT, PRIMARY KEY (practice_id), FOREIGN KEY (destination_id) REFERENCES destinations(destination_id));CREATE TABLE destinations (destination_id INT, destination_name VARCHAR(50), region_id INT, PRIMARY KEY (destination_id));CREATE TABLE regions (region_id INT, region_name VARCHAR(50), PRIMARY KEY (region_id));CREATE TABLE ratings (rating_id INT, rating INT, tourist_id INT, destination_id INT, PRIMARY KEY (rating_id), FOREIGN KEY (tourist_id) REFERENCES tourists(tourist_id), FOREIGN KEY (destination_id) REFERENCES destinations(destination_id));","completion":"SELECT d.destination_name, COUNT(r.rating_id) as total_ratings, AVG(r.rating) as avg_rating, RANK() OVER (ORDER BY AVG(r.rating) DESC) as rating_rank FROM destinations d JOIN ratings r ON d.destination_id = r.destination_id GROUP BY d.destination_name ORDER BY total_ratings DESC, avg_rating DESC LIMIT 5;"}
{"prompt":"List the top 3 organic items with the highest inventory value? with given SQL schema CREATE TABLE organic_inventory (item_id INT, item_name VARCHAR(255), category VARCHAR(255), quantity INT, unit_price DECIMAL(5,2)); INSERT INTO organic_inventory (item_id, item_name, category, quantity, unit_price) VALUES (1, 'Quinoa', 'Grains', 50, 3.99), (2, 'Tofu', 'Proteins', 30, 2.99), (3, 'Almond Milk', 'Dairy Alternatives', 40, 2.59);","completion":"SELECT item_name, quantity * unit_price as total_value FROM organic_inventory ORDER BY total_value DESC LIMIT 3;"}
{"prompt":"What is the total quantity of menu items sold in the 'Appetizers' category from the 'Asian' cuisine type? with given SQL schema CREATE TABLE menu (menu_id INT, menu_name VARCHAR(50), category VARCHAR(50), cuisine VARCHAR(50), quantity_sold INT, price DECIMAL(5,2), month_sold INT); INSERT INTO menu (menu_id, menu_name, category, cuisine, quantity_sold, price, month_sold) VALUES (12, 'Spring Rolls', 'Appetizers', 'Asian', 30, 4.99, 1), (13, 'Edamame', 'Appetizers', 'Asian', 40, 3.99, 1);","completion":"SELECT SUM(quantity_sold) FROM menu WHERE category = 'Appetizers' AND cuisine = 'Asian';"}
{"prompt":"List the number of employees by gender and department in the mining company with given SQL schema CREATE TABLE department (id INT, name VARCHAR(255)); CREATE TABLE employee (id INT, name VARCHAR(255), department VARCHAR(255), role VARCHAR(255), salary INT, gender VARCHAR(255)); INSERT INTO department (id, name) VALUES (1, 'Mining'), (2, 'Engineering'), (3, 'Human Resources'); INSERT INTO employee (id, name, department, role, salary, gender) VALUES (1, 'John Doe', 'Engineering', 'Manager', 80000, 'Male'), (2, 'Jane Smith', 'Engineering', 'Engineer', 70000, 'Female'), (3, 'Mike Johnson', 'Engineering', 'Technician', 60000, 'Male'), (4, 'Sara Connor', 'Mining', 'Manager', 85000, 'Female'), (5, 'Tom Williams', 'Mining', 'Laborer', 55000, 'Male'), (6, 'Amy Davis', 'Human Resources', 'HR Specialist', 75000, 'Female');","completion":"SELECT d.name as department, e.gender as gender, COUNT(e.id) as num_employees FROM department d JOIN employee e ON d.name = e.department GROUP BY d.name, e.gender;"}
{"prompt":"Calculate the percentage of mobile and broadband subscribers in each region. with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, region_id INT); INSERT INTO mobile_subscribers (subscriber_id, region_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 1), (6, 2), (7, 3), (8, 4); CREATE TABLE broadband_subscribers (subscriber_id INT, region_id INT); INSERT INTO broadband_subscribers (subscriber_id, region_id) VALUES (9, 1), (10, 2), (11, 3), (12, 4), (13, 1), (14, 2), (15, 3), (16, 4); CREATE TABLE regions (region_id INT, region_name VARCHAR(20)); INSERT INTO regions (region_id, region_name) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West');","completion":"SELECT r.region_name, (COUNT(m.subscriber_id) * 100.0 \/ (COUNT(m.subscriber_id) + COUNT(b.subscriber_id))) AS mobile_percentage, (COUNT(b.subscriber_id) * 100.0 \/ (COUNT(m.subscriber_id) + COUNT(b.subscriber_id))) AS broadband_percentage FROM regions r LEFT JOIN mobile_subscribers m ON r.region_id = m.region_id LEFT JOIN broadband_subscribers b ON r.region_id = b.region_id GROUP BY r.region_id;"}
{"prompt":"Delete broadband subscribers who have not used their service in the last 6 months. with given SQL schema CREATE TABLE broadband_subscribers_usage (subscriber_id INT, usage_date DATE); INSERT INTO broadband_subscribers_usage (subscriber_id, usage_date) VALUES (17, '2022-01-02'); INSERT INTO broadband_subscribers_usage (subscriber_id, usage_date) VALUES (18, '2022-02-03');","completion":"DELETE FROM broadband_subscribers WHERE subscriber_id NOT IN (SELECT subscriber_id FROM broadband_subscribers_usage WHERE usage_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH));"}
{"prompt":"How many mobile customers have used more than 20 GB of data in the past week? with given SQL schema CREATE TABLE mobile_usage (customer_id INT, last_week_data_usage INT, international_call BOOLEAN); INSERT INTO mobile_usage (customer_id, last_week_data_usage, international_call) VALUES (6, 25, FALSE), (7, 18, FALSE), (8, 22, FALSE), (9, 15, FALSE), (10, 28, FALSE);","completion":"SELECT COUNT(*) FROM mobile_usage WHERE last_week_data_usage > 20;"}
{"prompt":"What are the top 5 genres by the number of streams in the United States? with given SQL schema CREATE TABLE streams (stream_id int, user_id int, track_id int, genre varchar(255), timestamp datetime); INSERT INTO streams (stream_id, user_id, track_id, genre, timestamp) VALUES (1, 123, 345, 'Rock', '2022-01-01 10:00:00'), (2, 124, 346, 'Pop', '2022-01-01 11:00:00');","completion":"SELECT genre, COUNT(*) as stream_count FROM streams WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' AND genre IS NOT NULL GROUP BY genre ORDER BY stream_count DESC LIMIT 5;"}
{"prompt":"What is the maximum word count for articles published by 'Sophia Garcia' in the 'media' schema? with given SQL schema CREATE TABLE media.articles (article_id INT, title VARCHAR(100), author VARCHAR(100), publish_date DATE, word_count INT); INSERT INTO media.articles (article_id, title, author, publish_date, word_count) VALUES (1, 'Art\u00edculo 1', 'Sophia Garcia', '2021-01-01', 500), (2, 'Art\u00edculo 2', 'Sophia Garcia', '2021-02-01', 600), (3, 'Art\u00edculo 3', 'Michael Lee', '2021-03-01', 700);","completion":"SELECT MAX(word_count) FROM media.articles WHERE author = 'Sophia Garcia';"}
{"prompt":"What is the total number of volunteers for nonprofits in California? with given SQL schema CREATE TABLE Nonprofits (NonprofitID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), MissionStatement TEXT, TotalVolunteers INT); CREATE TABLE Volunteers (VolunteerID INT, VolunteerName VARCHAR(50), NonprofitID INT, Hours INT);","completion":"SELECT SUM(V.Hours) FROM Volunteers V INNER JOIN Nonprofits N ON V.NonprofitID = N.NonprofitID WHERE N.State = 'CA';"}
{"prompt":"Delete the record with id 6 from the table \"ocean_acidification\" with given SQL schema CREATE TABLE ocean_acidification (id INT, location VARCHAR(50), pH FLOAT, date DATE);","completion":"DELETE FROM ocean_acidification WHERE id = 6;"}
{"prompt":"List all countries with deep-sea exploration programs and their budgets. with given SQL schema CREATE TABLE countries (country_name TEXT, exploration_program BOOLEAN); CREATE TABLE budgets (country_name TEXT, budget FLOAT); INSERT INTO countries (country_name, exploration_program) VALUES ('Canada', TRUE), ('Mexico', FALSE); INSERT INTO budgets (country_name, budget) VALUES ('Canada', 1000000.0), ('Mexico', 50000.0);","completion":"SELECT countries.country_name, budgets.budget FROM countries INNER JOIN budgets ON countries.country_name = budgets.country_name WHERE countries.exploration_program = TRUE;"}
{"prompt":"What is the maximum age of players who have not participated in esports events? with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (2, 30, 'Female', 'Canada'); CREATE TABLE EsportsEvents (EventID INT, PlayerID INT, EventName VARCHAR(50));","completion":"SELECT MAX(Players.Age) FROM Players LEFT JOIN EsportsEvents ON Players.PlayerID = EsportsEvents.PlayerID WHERE EsportsEvents.PlayerID IS NULL;"}
{"prompt":"Delete the farm record with ID 203 with given SQL schema CREATE TABLE farms (farm_id INT, name VARCHAR(50), location VARCHAR(50));","completion":"DELETE FROM farms WHERE farm_id = 203;"}
{"prompt":"What is the production trend of Neodymium and Dysprosium from 2018 to 2021? with given SQL schema CREATE TABLE production (year INT, element VARCHAR(10), quantity INT); INSERT INTO production (year, element, quantity) VALUES (2018, 'Neodymium', 5000), (2019, 'Neodymium', 5500), (2020, 'Neodymium', 6000), (2021, 'Neodymium', 6500), (2018, 'Dysprosium', 3000), (2019, 'Dysprosium', 3500), (2020, 'Dysprosium', 4000), (2021, 'Dysprosium', 4500);","completion":"SELECT year, element, SUM(quantity) FROM production GROUP BY year, element;"}
{"prompt":"List all co-owners and the properties they own in New York, NY. with given SQL schema CREATE TABLE properties (id INT, city VARCHAR(50), price INT); CREATE TABLE co_owners (property_id INT, owner_name VARCHAR(50)); INSERT INTO properties (id, city, price) VALUES (1, 'New York', 800000), (2, 'Los Angeles', 600000); INSERT INTO co_owners (property_id, owner_name) VALUES (1, 'David'), (1, 'Ella'), (2, 'Frank');","completion":"SELECT properties.city, co_owners.owner_name FROM properties INNER JOIN co_owners ON properties.id = co_owners.property_id WHERE properties.city = 'New York';"}
{"prompt":"What is the average revenue per day for each restaurant location in the breakfast category? with given SQL schema CREATE TABLE daily_revenue(location VARCHAR(255), revenue DECIMAL(10,2), date DATE); CREATE TABLE menu_category(menu_item VARCHAR(255), category VARCHAR(255)); INSERT INTO daily_revenue VALUES ('Location A', 500, '2023-01-01'); INSERT INTO daily_revenue VALUES ('Location A', 600, '2023-01-02'); INSERT INTO menu_category VALUES ('Pancakes', 'Breakfast');","completion":"SELECT location, AVG(revenue\/COUNT(*)) as avg_revenue FROM daily_revenue dr INNER JOIN menu_category mc ON dr.date = mc.menu_item WHERE category = 'Breakfast' GROUP BY location;"}
{"prompt":"Which menu items have been sold for more than $10,000, and what is the total quantity sold? with given SQL schema CREATE TABLE menu_items (menu_item_id INT, menu_item_name VARCHAR(50), category VARCHAR(50), price FLOAT, quantity_sold INT); INSERT INTO menu_items (menu_item_id, menu_item_name, category, price, quantity_sold) VALUES (1, 'Burger', 'Main Course', 12.99, 1500);","completion":"SELECT menu_item_name, SUM(quantity_sold) FROM menu_items WHERE price * quantity_sold > 10000 GROUP BY menu_item_name;"}
{"prompt":"What is the name of all Russian astronauts? with given SQL schema CREATE TABLE Astronauts (id INT, name VARCHAR(255), agency VARCHAR(255), missions INT); INSERT INTO Astronauts (id, name, agency, missions) VALUES (1, 'Mae Jemison', 'NASA', 2), (2, 'Yuri Gagarin', 'Roscosmos', 1);","completion":"SELECT name FROM Astronauts WHERE agency = 'Roscosmos';"}
{"prompt":"Which company has manufactured the most satellites? with given SQL schema CREATE TABLE manufacturers (id INT, name TEXT); CREATE TABLE satellites (id INT, manufacturer_id INT, name TEXT, launch_date DATE); INSERT INTO manufacturers (id, name) VALUES (1, 'SpaceX'), (2, 'Blue Origin'), (3, 'ISRO'), (4, 'CAST'); INSERT INTO satellites (id, manufacturer_id, name, launch_date) VALUES (1, 1, 'StarDragon', '2012-05-25'), (2, 1, 'Falcon', '2015-12-21'), (3, 2, 'New Glenn', '2022-01-11'), (4, 3, 'ChinaSat 1E', '2000-12-05'), (5, 3, 'ChinaSat 2A', '2003-08-13'), (6, 4, 'Shijian 9', '2017-11-19'), (7, 1, 'StarLink', '2020-05-24'), (8, 1, 'StarLink', '2020-06-13');","completion":"SELECT m.name, COUNT(s.id) FROM manufacturers m JOIN satellites s ON m.id = s.manufacturer_id GROUP BY m.name ORDER BY COUNT(s.id) DESC;"}
{"prompt":"Show the number of security incidents and their severity by quarter with given SQL schema CREATE TABLE incident_quarterly (id INT, incident_date DATE, severity VARCHAR(10)); INSERT INTO incident_quarterly (id, incident_date, severity) VALUES (1, '2022-01-01', 'Low'), (2, '2022-01-15', 'Medium'), (3, '2022-04-01', 'High'), (4, '2022-07-01', 'Critical'), (5, '2022-10-01', 'Low'), (6, '2022-10-15', 'Medium');","completion":"SELECT EXTRACT(QUARTER FROM incident_date) as quarter, severity, COUNT(*) as incidents FROM incident_quarterly GROUP BY quarter, severity;"}
{"prompt":"Find the top 5 most profitable garments based on their sales in Q2 of 2022, and display the garment_name and total revenue. with given SQL schema CREATE TABLE Garments (garment_id INT, garment_name VARCHAR(50), category VARCHAR(50)); INSERT INTO Garments (garment_id, garment_name, category) VALUES (1, 'Cotton T-Shirt', 'Tops'), (2, 'Jeans', 'Bottoms'), (3, 'Silk Blouse', 'Tops'), (4, 'Wool Coat', 'Outerwear'); CREATE TABLE Sales_Details (sale_id INT, garment_id INT, sale_quantity INT, sale_price DECIMAL(10,2)); INSERT INTO Sales_Details (sale_id, garment_id, sale_quantity, sale_price) VALUES (1, 1, 10, 20), (2, 2, 8, 50), (3, 3, 5, 80), (4, 4, 3, 150); CREATE TABLE Sales (sale_id INT, sale_date DATE); INSERT INTO Sales (sale_id, sale_date) VALUES (1, '2022-04-01'), (2, '2022-04-02'), (3, '2022-04-03'), (4, '2022-04-04');","completion":"SELECT g.garment_name, SUM(sd.sale_quantity * sd.sale_price) AS total_revenue FROM Sales s JOIN Sales_Details sd ON s.sale_id = sd.sale_id JOIN Garments g ON sd.garment_id = g.garment_id WHERE s.sale_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY g.garment_name ORDER BY total_revenue DESC LIMIT 5;"}
{"prompt":"How many workplace safety inspections were conducted in each state? with given SQL schema CREATE TABLE safety_inspections (id INT, state VARCHAR(2), inspections INT); INSERT INTO safety_inspections (id, state, inspections) VALUES (1, 'California', 350), (2, 'Texas', 420), (3, 'New York', 500);","completion":"SELECT state, SUM(inspections) as total_inspections FROM safety_inspections GROUP BY state;"}
{"prompt":"What is the average safety rating of vehicles manufactured in Germany? with given SQL schema CREATE TABLE Vehicle (id INT, make VARCHAR(50), model VARCHAR(50), safety_rating FLOAT, country VARCHAR(50));","completion":"SELECT AVG(safety_rating) FROM Vehicle WHERE country = 'Germany';"}
{"prompt":"Insert a new record into the vessel_performance table with the following details: vessel_id = V003, max_speed = 20 knots, average_speed = 15 knots with given SQL schema vessel_performance(vessel_id, max_speed, average_speed)","completion":"INSERT INTO vessel_performance (vessel_id, max_speed, average_speed) VALUES ('V003', 20, 15);"}
{"prompt":"What is the total cargo weight for each vessel? with given SQL schema CREATE TABLE vessel_cargo (id INT, vessel_id INT, trip_id INT, cargo_weight INT); INSERT INTO vessel_cargo VALUES (1, 1, 1, 500), (2, 1, 2, 700), (3, 2, 1, 600), (4, 3, 1, 800);","completion":"SELECT vessel_id, SUM(cargo_weight) FROM vessel_cargo GROUP BY vessel_id;"}
{"prompt":"What is the waste generation per capita for each country in 'waste_generation'? with given SQL schema CREATE TABLE waste_generation (country VARCHAR(50), year INT, population INT, waste_amount INT);","completion":"SELECT country, AVG(waste_amount\/population) as avg_waste_per_capita FROM waste_generation GROUP BY country;"}
{"prompt":"What is the average water consumption per household in Mumbai for the years 2018 and 2019? with given SQL schema CREATE TABLE Household_Water_Usage (Household_ID INT, City VARCHAR(20), Year INT, Water_Consumption FLOAT); INSERT INTO Household_Water_Usage (Household_ID, City, Year, Water_Consumption) VALUES (1, 'Mumbai', 2018, 150.5), (2, 'Mumbai', 2019, 130.2);","completion":"SELECT Year, AVG(Water_Consumption) FROM Household_Water_Usage WHERE City = 'Mumbai' AND Year IN (2018, 2019) GROUP BY Year;"}
{"prompt":"List the top 3 datasets with the longest average testing times for models using the 'random_forest' algorithm. with given SQL schema CREATE TABLE testing_times (id INT, dataset VARCHAR(255), algorithm VARCHAR(255), avg_time FLOAT); INSERT INTO testing_times (id, dataset, algorithm, avg_time) VALUES (1, 'MNIST', 'random_forest', 1.2), (2, 'CIFAR-10', 'random_forest', 1.5), (3, 'ImageNet', 'svm', 1.9), (4, 'MNIST', 'svm', 1.1);","completion":"SELECT dataset, avg_time FROM testing_times WHERE algorithm = 'random_forest' ORDER BY avg_time DESC LIMIT 3;"}
{"prompt":"Update the output_quality to 'good' for records in the creative_ai table where the id is between 1 and 10 and the application is 'image generation' with given SQL schema CREATE TABLE creative_ai (id INTEGER, application TEXT, output_quality TEXT, last_updated TIMESTAMP);","completion":"UPDATE creative_ai SET output_quality = 'good' WHERE id BETWEEN 1 AND 10 AND application = 'image generation';"}
{"prompt":"How many rural infrastructure projects were completed in '2022' in the 'Asia-Pacific' region? with given SQL schema CREATE TABLE rural_infrastructure(id INT, project TEXT, location TEXT, completion_year INT); INSERT INTO rural_infrastructure (id, project, location, completion_year) VALUES (1, 'Rural Road Project', 'Asia-Pacific', 2022);","completion":"SELECT COUNT(*) FROM rural_infrastructure WHERE location = 'Asia-Pacific' AND completion_year = 2022;"}
{"prompt":"Insert a new animal 'Giant Panda' into the database with the habitat_id 1 (Forest) with given SQL schema CREATE TABLE habitats (id INT PRIMARY KEY, habitat_type VARCHAR(50)); INSERT INTO habitats (id, habitat_type) VALUES (1, 'Forest'); INSERT INTO habitats (id, habitat_type) VALUES (2, 'Grassland'); INSERT INTO habitats (id, habitat_type) VALUES (3, 'Wetland'); CREATE TABLE animals (id INT PRIMARY KEY, animal_name VARCHAR(50), habitat_id INT, FOREIGN KEY (habitat_id) REFERENCES habitats(id)); INSERT INTO animals (id, animal_name, habitat_id) VALUES (1, 'Tiger', 1); INSERT INTO animals (id, animal_name, habitat_id) VALUES (2, 'Elephant', 2); INSERT INTO animals (id, animal_name, habitat_id) VALUES (3, 'Crane', 3);","completion":"INSERT INTO animals (id, animal_name, habitat_id) VALUES ((SELECT COALESCE(MAX(id), 0) + 1 FROM animals), 'Giant Panda', 1);"}
{"prompt":"What is the maximum viewership for TV shows in the Comedy genre? with given SQL schema CREATE TABLE TV_Shows (show_id INT, title VARCHAR(100), genre VARCHAR(50), viewership INT); INSERT INTO TV_Shows (show_id, title, genre, viewership) VALUES (1, 'ShowA', 'Comedy', 9000000); INSERT INTO TV_Shows (show_id, title, genre, viewership) VALUES (2, 'ShowB', 'Drama', 8000000); INSERT INTO TV_Shows (show_id, title, genre, viewership) VALUES (3, 'ShowC', 'Comedy', 10000000);","completion":"SELECT title, MAX(viewership) FROM TV_Shows WHERE genre = 'Comedy' GROUP BY title;"}
{"prompt":"Calculate the total billing for each case type with given SQL schema CREATE TABLE billing (id INT, case_id INT, attorney_id INT, hours_worked INT, billable_rate DECIMAL(10,2)); INSERT INTO billing (id, case_id, attorney_id, hours_worked, billable_rate) VALUES (1, 1, 1, 15, 200.00); INSERT INTO billing (id, case_id, attorney_id, hours_worked, billable_rate) VALUES (2, 2, 2, 20, 250.00); CREATE TABLE cases (id INT, client_id INT, case_type VARCHAR(50), opened_date DATE, closed_date DATE); INSERT INTO cases (id, client_id, case_type, opened_date, closed_date) VALUES (1, 1, 'Civil', '2020-01-01', '2020-03-01'); INSERT INTO cases (id, client_id, case_type, opened_date, closed_date) VALUES (2, 2, 'Criminal', '2021-02-12', '2021-04-15');","completion":"SELECT case_type, SUM(hours_worked * billable_rate) as total_billing FROM billing JOIN cases ON billing.case_id = cases.id GROUP BY case_type;"}
{"prompt":"What are the total climate finance expenditures for Oceania in each sector? with given SQL schema CREATE TABLE climate_finance_oceania (id INT, country VARCHAR(50), sector VARCHAR(50), amount FLOAT); INSERT INTO climate_finance_oceania (id, country, sector, amount) VALUES (1, 'Australia', 'Climate Mitigation', 3500000); INSERT INTO climate_finance_oceania (id, country, sector, amount) VALUES (2, 'Australia', 'Climate Adaptation', 2000000); INSERT INTO climate_finance_oceania (id, country, sector, amount) VALUES (3, 'New Zealand', 'Climate Mitigation', 1800000); INSERT INTO climate_finance_oceania (id, country, sector, amount) VALUES (4, 'New Zealand', 'Climate Adaptation', 1500000);","completion":"SELECT sector, SUM(amount) as total_amount FROM climate_finance_oceania WHERE country IN ('Australia', 'New Zealand') GROUP BY sector;"}
{"prompt":"What are the combined sales figures for 'Lipitor' in the US and 'Crestor' in Canada? with given SQL schema CREATE TABLE drug_sales (drug_name TEXT, region TEXT, revenue FLOAT); INSERT INTO drug_sales (drug_name, region, revenue) VALUES ('Lipitor', 'US', 3000000), ('Crestor', 'Canada', 2500000);","completion":"SELECT SUM(revenue) FROM drug_sales WHERE (drug_name = 'Lipitor' AND region = 'US') OR (drug_name = 'Crestor' AND region = 'Canada');"}
{"prompt":"What is the percentage of patients diagnosed with Measles who have been vaccinated in each state? with given SQL schema CREATE TABLE Patients (ID INT, Disease VARCHAR(20), Vaccinated VARCHAR(5), State VARCHAR(20)); INSERT INTO Patients (ID, Disease, Vaccinated, State) VALUES (1, 'Measles', 'Yes', 'California'), (2, 'Measles', 'No', 'California');","completion":"SELECT State, (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM Patients WHERE Disease = 'Measles' AND State = Patients.State)) AS Percentage FROM Patients WHERE Vaccinated = 'Yes' GROUP BY State;"}
{"prompt":"Which female founders have received the most funding? with given SQL schema CREATE TABLE founders (founder_id INT, founder_name VARCHAR(50), gender CHAR(1), startup_id INT); CREATE TABLE startups (startup_id INT, funding_amount INT); INSERT INTO founders VALUES (1, 'Alice', 'F', 1), (2, 'Bob', 'M', 2), (3, 'Charlie', 'M', 3); INSERT INTO startups VALUES (1, 500000), (2, 750000), (3, 300000);","completion":"SELECT f.founder_name, SUM(s.funding_amount) as total_funding FROM founders f JOIN startups s ON f.startup_id = s.startup_id WHERE f.gender = 'F' GROUP BY f.founder_name ORDER BY total_funding DESC;"}
{"prompt":"What is the total funding raised by startups from the US? with given SQL schema CREATE TABLE startups (id INT, name TEXT, founded_year INT, industry TEXT, country TEXT, funding FLOAT);","completion":"SELECT SUM(funding) FROM startups WHERE country = 'United States';"}
{"prompt":"How many 'crop_yield' records are there for each 'farm' in the 'crop_yields' table? with given SQL schema CREATE TABLE crop_yields (id INT, farm_id INT, crop VARCHAR(50), yield FLOAT);","completion":"SELECT farm_id, COUNT(*) FROM crop_yields GROUP BY farm_id;"}
{"prompt":"Count the number of endangered species in the table \"marine_mammals\" with given SQL schema CREATE TABLE marine_mammals (id INT PRIMARY KEY, name VARCHAR(255), species VARCHAR(255), population INT, conservation_status VARCHAR(255)); INSERT INTO marine_mammals (id, name, species, population, conservation_status) VALUES (1, 'Blue Whale', 'Balaenoptera musculus', 10000, 'Endangered'), (2, 'Dolphin', 'Tursiops truncatus', 60000, 'Least Concern');","completion":"SELECT COUNT(*) FROM marine_mammals WHERE conservation_status = 'Endangered';"}
{"prompt":"What is the total number of digital assets issued by companies based in the US? with given SQL schema CREATE TABLE companies (id INT, name TEXT, country TEXT); INSERT INTO companies (id, name, country) VALUES (1, 'Securitize', 'USA'), (2, 'Polymath', 'Canada');","completion":"SELECT SUM(CASE WHEN country = 'USA' THEN 1 ELSE 0 END) FROM companies;"}
{"prompt":"What is the total carbon sequestration for each type of forest? with given SQL schema CREATE TABLE forest_type (forest_type VARCHAR(255), avg_carbon_ton FLOAT, area_ha INT); INSERT INTO forest_type (forest_type, avg_carbon_ton, area_ha) VALUES ('Forest1', 2.3, 5000), ('Forest2', 2.5, 7000), ('Forest3', 2.8, 6000), ('Forest4', 3.0, 8000), ('Forest5', 3.2, 9000);","completion":"SELECT forest_type, AVG(avg_carbon_ton)*area_ha AS total_carbon_seq FROM forest_type GROUP BY forest_type;"}
{"prompt":"What is the average consumer rating for cruelty-free cosmetics products sourced from India? with given SQL schema CREATE TABLE product_info (product_name TEXT, is_cruelty_free BOOLEAN, consumer_rating REAL, source_country TEXT); INSERT INTO product_info (product_name, is_cruelty_free, consumer_rating, source_country) VALUES ('Product 16', true, 4.6, 'IN'), ('Product 17', false, 3.9, 'CN'), ('Product 18', true, 4.2, 'US'), ('Product 19', false, 1.7, 'CN'), ('Product 20', true, 2.9, 'IN');","completion":"SELECT AVG(consumer_rating) FROM product_info WHERE is_cruelty_free = true AND source_country = 'IN';"}
{"prompt":"Find the average price of cruelty-free foundation products in Canada. with given SQL schema CREATE TABLE cosmetics (product VARCHAR(255), price DECIMAL(10,2), cruelty_free BOOLEAN); CREATE VIEW canada_cosmetics AS SELECT * FROM cosmetics WHERE country = 'Canada';","completion":"SELECT AVG(price) FROM canada_cosmetics WHERE product_category = 'Foundations' AND cruelty_free = true;"}
{"prompt":"Find the number of products with a price point below $10 and a rating above 4.5? with given SQL schema CREATE TABLE Product_Info(Product_Name VARCHAR(30), Price DECIMAL(5,2), Rating DECIMAL(3,2)); INSERT INTO Product_Info(Product_Name, Price, Rating) VALUES('Product A', 8.50, 4.7), ('Product B', 12.00, 4.8), ('Product C', 7.99, 4.6), ('Product D', 9.99, 4.9), ('Product E', 6.50, 4.4), ('Product F', 11.00, 4.2), ('Product G', 5.99, 4.8), ('Product H', 8.99, 4.7), ('Product I', 10.00, 4.3), ('Product J', 7.50, 4.5);","completion":"SELECT COUNT(*) FROM Product_Info WHERE Price < 10 AND Rating > 4.5;"}
{"prompt":"List vegan skincare products with a price below 15 EUR, available in Spain with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT, price DECIMAL(5,2), is_vegan BOOLEAN, country TEXT);","completion":"SELECT * FROM products WHERE is_vegan = TRUE AND price < 15 AND country = 'Spain';"}
{"prompt":"What is the average rating of cosmetics products manufactured in the USA? with given SQL schema CREATE TABLE Product (product_id INT, product_name VARCHAR(50), category VARCHAR(50), manufacturer_country VARCHAR(50)); INSERT INTO Product (product_id, product_name, category, manufacturer_country) VALUES (1, 'Lipstick', 'Cosmetics', 'USA');","completion":"SELECT AVG(Review.rating) FROM Review INNER JOIN Product ON Review.product_id = Product.product_id WHERE Product.manufacturer_country = 'USA' AND Product.category = 'Cosmetics';"}
{"prompt":"Delete all veteran unemployment claims filed more than 1 year ago in all states? with given SQL schema CREATE TABLE veteran_unemployment (id INT, claim_date DATE, state VARCHAR(50), claim_status VARCHAR(50)); INSERT INTO veteran_unemployment (id, claim_date, state, claim_status) VALUES (1, '2021-01-05', 'California', 'Filed'), (2, '2022-02-10', 'Texas', 'Rejected');","completion":"DELETE FROM veteran_unemployment WHERE claim_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"prompt":"What are the threat intelligence metrics for a specific country over the past year? with given SQL schema CREATE TABLE threat_intelligence (date DATE, threat_level INT, incident_count INT, country VARCHAR(255)); INSERT INTO threat_intelligence (date, threat_level, incident_count, country) VALUES ('2021-01-01', 5, 200, 'USA'), ('2021-02-01', 4, 150, 'USA'), ('2021-03-01', 6, 220, 'USA'), ('2021-04-01', 3, 100, 'USA'), ('2021-05-01', 7, 250, 'USA'), ('2021-06-01', 4, 180, 'USA'), ('2021-07-01', 5, 200, 'USA'), ('2021-08-01', 6, 220, 'USA'), ('2021-09-01', 3, 100, 'USA'), ('2021-10-01', 7, 250, 'USA'), ('2021-11-01', 4, 180, 'USA'), ('2021-12-01', 5, 200, 'USA');","completion":"SELECT country, EXTRACT(YEAR FROM date) AS year, AVG(threat_level), AVG(incident_count) FROM threat_intelligence WHERE country = 'USA' GROUP BY country, year;"}
{"prompt":"Display all peacekeeping operations from the 'peacekeeping_operations' table with given SQL schema CREATE TABLE peacekeeping_operations (operation_id INT, operation_name VARCHAR(255), start_date DATE, end_date DATE, operation_region VARCHAR(255));","completion":"SELECT * FROM peacekeeping_operations WHERE end_date IS NULL;"}
{"prompt":"What is the average unloading time in minutes for ports in Asia? with given SQL schema CREATE TABLE Port (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), continent VARCHAR(255)); INSERT INTO Port (id, name, country, continent) VALUES (1, 'Port of Shanghai', 'Shanghai', 'Asia');","completion":"SELECT Port_id, AVG(unloading_time) FROM Port_Performance WHERE continent = 'Asia' GROUP BY Port_id;"}
{"prompt":"What is the maximum cargo weight handled by each crane in the last month? with given SQL schema CREATE TABLE cranes (id INT, name VARCHAR(50), type VARCHAR(50), max_weight INT); CREATE TABLE cargo_handling (id INT, crane_id INT, cargo_weight INT, handling_date DATE); INSERT INTO cranes VALUES (1, 'Crane 1', 'Gantry', 50); INSERT INTO cranes VALUES (2, 'Crane 2', 'Gantry', 60); INSERT INTO cargo_handling VALUES (1, 1, 40, '2022-01-01'); INSERT INTO cargo_handling VALUES (2, 2, 55, '2022-01-15'); INSERT INTO cargo_handling VALUES (3, 1, 45, '2022-02-01');","completion":"SELECT cranes.name, MAX(cargo_handling.cargo_weight) FROM cranes INNER JOIN cargo_handling ON cranes.id = cargo_handling.crane_id WHERE cargo_handling.handling_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY cranes.name;"}
{"prompt":"List all 'recycling' initiatives in the 'sustainability_programs' table. with given SQL schema CREATE TABLE sustainability_programs (id INT, name TEXT, type TEXT); INSERT INTO sustainability_programs (id, name, type) VALUES (1, 'plastic_recycling', 'recycling'), (2, 'paper_recycling', 'recycling'), (3, 'electronic_waste', 'disposal');","completion":"SELECT name FROM sustainability_programs WHERE type = 'recycling';"}
{"prompt":"What is the average salary of workers in the 'manufacturing' industry across different regions? with given SQL schema CREATE TABLE Workers (id INT, name VARCHAR(50), salary FLOAT, industry VARCHAR(50)); INSERT INTO Workers (id, name, salary, industry) VALUES (1, 'John Doe', 50000, 'manufacturing'); INSERT INTO Workers (id, name, salary, industry) VALUES (2, 'Jane Smith', 55000, 'manufacturing'); CREATE TABLE Regions (id INT, region_name VARCHAR(50)); INSERT INTO Regions (id, region_name) VALUES (1, 'Northeast'); INSERT INTO Regions (id, region_name) VALUES (2, 'Southeast');","completion":"SELECT AVG(Workers.salary) FROM Workers INNER JOIN Regions ON Workers.id = Regions.id WHERE Workers.industry = 'manufacturing';"}
{"prompt":"Find the total number of investments in each sector, ordered from highest to lowest. with given SQL schema CREATE TABLE investments(id INT, sector VARCHAR(20), esg_score INT); INSERT INTO investments VALUES(1, 'Tech', 85), (2, 'Healthcare', 75), (3, 'Tech', 82);","completion":"SELECT sector, COUNT(*) as total_investments FROM investments GROUP BY sector ORDER BY total_investments DESC;"}
{"prompt":"How many military satellites of space_power type are present in the SATELLITE_DATA table? with given SQL schema CREATE TABLE SATELLITE_DATA (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255));","completion":"SELECT COUNT(*) FROM SATELLITE_DATA WHERE type = 'space_power';"}
{"prompt":"What is the total number of cybersecurity incidents in the Asia-Pacific region by year? with given SQL schema CREATE TABLE cybersecurity_incidents (id INT, incident_date DATE, region VARCHAR(255)); INSERT INTO cybersecurity_incidents (id, incident_date, region) VALUES (1, '2020-01-01', 'Asia-Pacific'); INSERT INTO cybersecurity_incidents (id, incident_date, region) VALUES (2, '2021-03-15', 'Europe');","completion":"SELECT YEAR(incident_date) AS year, COUNT(*) AS total_incidents FROM cybersecurity_incidents WHERE region = 'Asia-Pacific' GROUP BY year;"}
{"prompt":"What is the total revenue, by platform, for the last quarter? with given SQL schema CREATE TABLE revenue_platform (revenue_id INT, platform VARCHAR(255), revenue DECIMAL);  CREATE VIEW quarterly_revenue AS SELECT platform, SUM(revenue) as total_revenue FROM revenue_platform WHERE revenue_date >= DATEADD(quarter, -1, CURRENT_DATE) GROUP BY platform;","completion":"SELECT * FROM quarterly_revenue;"}
{"prompt":"Show the total budget allocated for each program category in 2023. with given SQL schema CREATE TABLE Budget (id INT, category TEXT, year INT, allocated_amount INT); INSERT INTO Budget (id, category, year, allocated_amount) VALUES (1, 'Education', 2023, 30000); INSERT INTO Budget (id, category, year, allocated_amount) VALUES (2, 'Healthcare', 2023, 50000);","completion":"SELECT category, SUM(allocated_amount) FROM Budget WHERE year = 2023 GROUP BY category;"}
{"prompt":"Update the budget for program_id 104 to 8500 starting from 2022-07-01. with given SQL schema CREATE TABLE Programs (program_id INT, budget DECIMAL(10,2), start_date DATE); INSERT INTO Programs (program_id, budget, start_date) VALUES (101, 10000, '2021-01-01'), (104, 7000, '2021-04-01');","completion":"UPDATE Programs SET budget = 8500, start_date = '2022-07-01' WHERE program_id = 104;"}
{"prompt":"What was the average donation amount per donor by country for 2022? with given SQL schema CREATE TABLE Donors (donor_id INT, donation_amount DECIMAL(10,2), donor_country VARCHAR(255), donation_date DATE); INSERT INTO Donors (donor_id, donation_amount, donor_country, donation_date) VALUES (6, 500, 'Canada', '2022-01-01'), (7, 350, 'Mexico', '2022-02-01'), (8, 700, 'Brazil', '2022-03-01'), (9, 280, 'South Africa', '2022-04-01'), (10, 600, 'India', '2022-05-01');","completion":"SELECT donor_country, AVG(donation_amount) as avg_donation FROM Donors WHERE donation_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY donor_country;"}
{"prompt":"What's the average amount donated and number of donors per day for the past week? with given SQL schema CREATE TABLE Donations (Id INT, DonationDate DATE, Amount DECIMAL(10,2), DonorId INT); INSERT INTO Donations VALUES (1, '2022-01-01', 100.00, 1), (2, '2022-01-01', 200.00, 2);","completion":"SELECT DATE_TRUNC('day', DonationDate) as Day, AVG(Amount) as AvgAmount, COUNT(DISTINCT DonorId) as DistinctDonors FROM Donations WHERE DonationDate >= DATEADD(day, -7, CURRENT_DATE) GROUP BY Day;"}
{"prompt":"List all the community centers in Colombia, including their capacities and locations. with given SQL schema CREATE TABLE community_centers (id INT, name TEXT, capacity INT, location TEXT, country TEXT); INSERT INTO community_centers (id, name, capacity, location, country) VALUES (1, 'Centro Comunitario 1', 100, 'Bogot\u00e1', 'Colombia'); INSERT INTO community_centers (id, name, capacity, location, country) VALUES (2, 'Centro Comunitario 2', 150, 'Medell\u00edn', 'Colombia');","completion":"SELECT * FROM community_centers WHERE country = 'Colombia';"}
{"prompt":"What is the total funding received by organizations that have implemented digital divide initiatives? with given SQL schema CREATE TABLE funding (funding_id INT, org_id INT, amount INT); INSERT INTO funding (funding_id, org_id, amount) VALUES (1, 1, 100000), (2, 1, 200000), (3, 2, 150000); CREATE TABLE organizations (org_id INT, name VARCHAR(50), implemented_digital_divide_initiatives BOOLEAN); INSERT INTO organizations (org_id, name, implemented_digital_divide_initiatives) VALUES (1, 'Tech for Good Inc.', TRUE), (2, 'Social Impact Corp.', FALSE);","completion":"SELECT SUM(amount) FROM funding INNER JOIN organizations ON funding.org_id = organizations.org_id WHERE implemented_digital_divide_initiatives = TRUE;"}
{"prompt":"Which vehicle type in the 'Bus' service had the most maintenance incidents in the last month? with given SQL schema CREATE TABLE MaintenanceIncidents (IncidentID INT, VehicleID INT, VehicleType VARCHAR(50), IncidentDate DATE); INSERT INTO MaintenanceIncidents (IncidentID, VehicleID, VehicleType, IncidentDate) VALUES (1, 1, 'MiniBus', '2022-02-01'), (2, 1, 'MiniBus', '2022-02-03'), (3, 2, 'Coach', '2022-02-02'), (4, 3, 'MidiBus', '2022-02-04'), (5, 4, 'MiniBus', '2022-02-05'), (6, 4, 'MiniBus', '2022-02-06'), (7, 5, 'MidiBus', '2022-02-07'), (8, 5, 'MidiBus', '2022-02-08'), (9, 1, 'MiniBus', '2022-02-09');","completion":"SELECT v.VehicleType, COUNT(*) as MaintenanceIncidents FROM Vehicles v JOIN MaintenanceIncidents mi ON v.VehicleID = mi.VehicleID WHERE v.Service = 'Bus' AND mi.IncidentDate >= DATEADD(month, -1, GETDATE()) GROUP BY v.VehicleType ORDER BY MaintenanceIncidents DESC;"}
{"prompt":"Update the minimum living wage for 'Bangladesh' in the 'apparel_manufacturing' sector with given SQL schema CREATE TABLE living_wage (country VARCHAR(50), apparel_manufacturing_sector VARCHAR(50), living_wage_minimum FLOAT, living_wage_maximum FLOAT); INSERT INTO living_wage (country, apparel_manufacturing_sector, living_wage_minimum, living_wage_maximum) VALUES ('Bangladesh', 'apparel_manufacturing', 80, 120);","completion":"UPDATE living_wage SET living_wage_minimum = 90 WHERE country = 'Bangladesh' AND apparel_manufacturing_sector = 'apparel_manufacturing';"}
{"prompt":"What is the percentage of factories in each country that have implemented circular economy practices? with given SQL schema CREATE TABLE factory_circle (factory VARCHAR(255), country VARCHAR(255), practice VARCHAR(255)); INSERT INTO factory_circle (factory, country, practice) VALUES ('Factory1', 'Bangladesh', 'yes'), ('Factory2', 'Bangladesh', 'no'), ('Factory3', 'Bangladesh', 'yes'), ('Factory4', 'China', 'yes'), ('Factory5', 'China', 'no'), ('Factory6', 'India', 'no'), ('Factory7', 'India', 'yes'), ('Factory8', 'India', 'yes');","completion":"SELECT country, 100.0 * COUNT(*) FILTER (WHERE practice = 'yes') \/ COUNT(*) AS percentage FROM factory_circle GROUP BY country;"}
{"prompt":"What is the total quantity of sustainable material 'organic cotton' used by manufacturers in the 'Europe' region? with given SQL schema CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50), Region VARCHAR(50)); INSERT INTO Manufacturers (ManufacturerID, ManufacturerName, Region) VALUES (1, 'EcoFriendlyFabrics', 'Europe'), (2, 'GreenYarns', 'Asia'); CREATE TABLE Materials (MaterialID INT, MaterialName VARCHAR(50), QuantityUsed INT); INSERT INTO Materials (MaterialID, MaterialName, QuantityUsed) VALUES (1, 'organic cotton', 2000, (2, 'recycled polyester', 1500));","completion":"SELECT SUM(QuantityUsed) FROM Materials WHERE MaterialName = 'organic cotton' AND Region = 'Europe';"}
{"prompt":"Show the number of financial wellbeing programs offered in each country. with given SQL schema CREATE TABLE financial_wellbeing_programs (program_id INT, program_name TEXT, country TEXT); INSERT INTO financial_wellbeing_programs (program_id, program_name, country) VALUES (1, 'Wellness Workshops', 'Canada'), (2, 'Financial Fitness', 'Mexico'), (3, 'Empowerment Seminars', 'Brazil'), (4, 'Mindful Money', 'USA');","completion":"SELECT financial_wellbeing_programs.country, COUNT(financial_wellbeing_programs.program_id) FROM financial_wellbeing_programs GROUP BY financial_wellbeing_programs.country;"}
{"prompt":"What is the average amount of Shariah-compliant financing for clients in the top 3 countries with the most Shariah-compliant financing, excluding clients from Saudi Arabia and the UAE? with given SQL schema CREATE TABLE shariah_financing(client_id INT, client_country VARCHAR(25), amount FLOAT);INSERT INTO shariah_financing(client_id, client_country, amount) VALUES (1, 'Bahrain', 5000), (2, 'UAE', 7000), (3, 'Indonesia', 6000), (4, 'Saudi Arabia', 8000), (5, 'Bahrain', 9000), (6, 'UAE', 10000), (7, 'Indonesia', 11000), (8, 'Saudi Arabia', 12000), (9, 'Bahrain', 13000), (10, 'UAE', 14000), (11, 'Indonesia', 15000), (12, 'Bahrain', 16000);","completion":"SELECT client_country, AVG(amount) as avg_financing FROM shariah_financing WHERE client_country NOT IN ('Saudi Arabia', 'UAE') GROUP BY client_country ORDER BY AVG(amount) DESC LIMIT 3;"}
{"prompt":"List the programs that have not received any donations in the last year, excluding those related to Disaster Relief? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, Category TEXT); CREATE TABLE Donations (DonationID INT, ProgramID INT, DonationDate DATE); INSERT INTO Programs (ProgramID, ProgramName, Category) VALUES (1, 'Education', 'General'), (2, 'Health', 'General'), (3, 'Disaster Relief', 'Special'); INSERT INTO Donations (DonationID, ProgramID, DonationDate) VALUES (1, 1, '2021-01-01'), (2, 2, '2022-02-15'), (3, 3, '2021-09-01');","completion":"SELECT ProgramName FROM Programs p WHERE ProgramID NOT IN (SELECT Donations.ProgramID FROM Donations WHERE Donations.DonationDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND Category != 'Special';"}
{"prompt":"What is the total budget and number of programs for each program category? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, ProgramCategory TEXT, Budget DECIMAL); INSERT INTO Programs (ProgramID, ProgramName, ProgramCategory, Budget) VALUES (1, 'Education', 'Social', 15000.00), (2, 'Healthcare', 'Health', 20000.00), (3, 'Environment', 'Environment', 10000.00), (4, 'Awareness', 'Social', 5000.00);","completion":"SELECT ProgramCategory, SUM(Budget) as TotalBudget, COUNT(ProgramID) as TotalPrograms FROM Programs GROUP BY ProgramCategory;"}
{"prompt":"What is the total number of packages shipped from each warehouse in the province of Ontario, Canada in the month of June? with given SQL schema CREATE TABLE warehouses (id INT, city VARCHAR(255), state VARCHAR(255), country VARCHAR(255)); CREATE TABLE packages (id INT, warehouse_id INT, weight INT, shipped_date DATE); INSERT INTO packages (id, warehouse_id, weight, shipped_date) VALUES (1, 1, 50, '2022-06-01'), (2, 2, 30, '2022-06-02'), (3, 3, 40, '2022-06-03'); INSERT INTO warehouses (id, city, state, country) VALUES (1, 'Toronto', 'Ontario', 'Canada'), (2, 'Montreal', 'Quebec', 'Canada'), (3, 'Vancouver', 'British Columbia', 'Canada');","completion":"SELECT warehouses.city, COUNT(*) FROM packages JOIN warehouses ON packages.warehouse_id = warehouses.id WHERE warehouses.state = 'Ontario' AND warehouses.country = 'Canada' AND MONTH(packages.shipped_date) = 6 GROUP BY warehouses.city;"}
{"prompt":"How many bioprocess engineering projects have been conducted in Africa using CRISPR technology? with given SQL schema CREATE TABLE bioprocess_engineering (project_name VARCHAR(255), location VARCHAR(255), technology VARCHAR(255)); INSERT INTO bioprocess_engineering (project_name, location, technology) VALUES ('ProjAfrica', 'Africa', 'CRISPR-Cas9');","completion":"SELECT COUNT(*) FROM bioprocess_engineering WHERE location = 'Africa' AND technology = 'CRISPR-Cas9';"}
{"prompt":"What is the average funding received by biotech startups in the US, grouped by state? with given SQL schema CREATE SCHEMA if not exists biotech; USE biotech; CREATE TABLE if not exists startups (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), industry VARCHAR(255), funding DECIMAL(10,2)); INSERT INTO startups (id, name, location, industry, funding) VALUES (1, 'StartupA', 'California', 'Biotech', 5000000.00), (2, 'StartupB', 'NewYork', 'Biotech', 7000000.00), (3, 'StartupC', 'California', 'Healthcare', 3000000.00);","completion":"SELECT location, AVG(funding) FROM startups WHERE industry = 'Biotech' GROUP BY location;"}
{"prompt":"What is the name of the biotech startup that received the most funding in the United States? with given SQL schema CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.startups (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), funding FLOAT); INSERT INTO biotech.startups (id, name, location, funding) VALUES (1, 'StartupA', 'USA', 9000000), (2, 'StartupB', 'USA', 6000000), (3, 'StartupC', 'Canada', 3000000), (4, 'StartupD', 'USA', 8000000);","completion":"SELECT name FROM biotech.startups WHERE location = 'USA' AND funding = (SELECT MAX(funding) FROM biotech.startups WHERE location = 'USA');"}
{"prompt":"What is the total budget allocated for healthcare projects in each city in the state of Florida? with given SQL schema CREATE TABLE Cities (CityID INTEGER, CityName TEXT, State TEXT); CREATE TABLE HealthcareProjects (ProjectID INTEGER, ProjectCityID INTEGER, ProjectBudget INTEGER);","completion":"SELECT C.CityName, SUM(HP.ProjectBudget) FROM Cities C INNER JOIN HealthcareProjects HP ON C.CityID = HP.ProjectCityID WHERE C.State = 'Florida' GROUP BY C.CityName;"}
{"prompt":"How many students are enrolled in the Data Science program in the Fall semester? with given SQL schema CREATE TABLE student_enrollment(id INT, program TEXT, semester TEXT); INSERT INTO student_enrollment(id, program, semester) VALUES (1, 'Data Science', 'Fall'), (2, 'Mathematics', 'Spring');","completion":"SELECT COUNT(*) FROM student_enrollment WHERE program = 'Data Science' AND semester = 'Fall';"}
{"prompt":"How many indigenous communities are in the Arctic Research Station 13 and 14? with given SQL schema CREATE TABLE Arctic_Research_Station_13 (id INT, community TEXT); CREATE TABLE Arctic_Research_Station_14 (id INT, community TEXT);","completion":"SELECT COUNT(DISTINCT community) FROM Arctic_Research_Station_13; SELECT COUNT(DISTINCT community) FROM Arctic_Research_Station_14; SELECT COUNT(DISTINCT community) FROM (SELECT * FROM Arctic_Research_Station_13 UNION ALL SELECT * FROM Arctic_Research_Station_14) AS Arctic_Communities;"}
{"prompt":"What is the maximum number of years a heritage site has been closed for restoration? with given SQL schema CREATE TABLE restoration (id INT, site_name VARCHAR(255), start_year INT, end_year INT); INSERT INTO restoration (id, site_name, start_year, end_year) VALUES (1, 'Angkor Wat', 1965, 1972), (2, 'Petra', 1993, 1998);","completion":"SELECT MAX(end_year - start_year) FROM restoration;"}
{"prompt":"Get the names of all solar farms in Arizona with given SQL schema CREATE TABLE Infrastructure (id INT, name VARCHAR(100), type VARCHAR(50), location VARCHAR(100), state VARCHAR(50)); INSERT INTO Infrastructure (id, name, type, location, state) VALUES (10, 'Arizona Solar One', 'Solar Farm', 'Buckeye', 'Arizona');","completion":"SELECT name FROM Infrastructure WHERE type = 'Solar Farm' AND state = 'Arizona';"}
{"prompt":"Update the name of the record with id 2 in the 'contractors' table to 'GreenTech' with given SQL schema CREATE TABLE contractors (id INT, name VARCHAR(50), country VARCHAR(50), registration_date DATE);","completion":"UPDATE contractors SET name = 'GreenTech' WHERE id = 2;"}
{"prompt":"What is the total length of all the rail tracks in 'Asia'? with given SQL schema CREATE TABLE RailTracks (TrackID int, Location varchar(100), Length decimal(10,2)); INSERT INTO RailTracks VALUES (1, 'Asia', 500); INSERT INTO RailTracks VALUES (2, 'Asia', 700);","completion":"SELECT SUM(Length) FROM RailTracks WHERE Location = 'Asia';"}
{"prompt":"Which projects in 'bridge_data' have a 'construction_year' between 2010 and 2020? with given SQL schema CREATE TABLE bridge_data (id INT, bridge_name VARCHAR(50), construction_year INT); INSERT INTO bridge_data (id, bridge_name, construction_year) VALUES (1, 'Golden Gate Bridge', 1937), (2, 'Sydney Harbour Bridge', 1932); INSERT INTO bridge_data (id, bridge_name, construction_year) VALUES (3, 'New Bridge', 2015);","completion":"SELECT * FROM bridge_data WHERE construction_year BETWEEN 2010 AND 2020;"}
{"prompt":"What is the average travel advisory level for each country in Europe? with given SQL schema CREATE TABLE if not exists countries (id INT, name VARCHAR(20)); CREATE TABLE if not exists advisories (id INT, country_id INT, level INT);","completion":"SELECT c.name, AVG(a.level) FROM advisories a JOIN countries c ON a.country_id = c.id WHERE c.name IN ('Austria', 'Belgium', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'Norway', 'Poland', 'Portugal', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'United Kingdom') GROUP BY c.name;"}
{"prompt":"What is the maximum carbon emissions reduction achieved by hotels in each continent, and the number of hotels that achieved this reduction? with given SQL schema CREATE TABLE Hotels (HotelID INT, HotelName VARCHAR(50), Continent VARCHAR(20), CO2EmissionsReduction INT); INSERT INTO Hotels (HotelID, HotelName, Continent, CO2EmissionsReduction) VALUES (1, 'GreenPalace', 'Asia', 30), (2, 'EcoLodge', 'Africa', 25);","completion":"SELECT Continent, MAX(CO2EmissionsReduction) as MaxReduction, COUNT(*) as HotelCount FROM Hotels GROUP BY Continent;"}
{"prompt":"Which countries have had a travel advisory of \"Reconsider travel\" or higher since 2010? with given SQL schema CREATE TABLE TravelAdvisories (id INT PRIMARY KEY, country_id INT, year INT, advisory VARCHAR(255)); INSERT INTO TravelAdvisories (id, country_id, year, advisory) VALUES (1, 1, 2010, 'Exercise normal precautions'); INSERT INTO TravelAdvisories (id, country_id, year, advisory) VALUES (2, 1, 2011, 'Exercise normal precautions'); INSERT INTO TravelAdvisories (id, country_id, year, advisory) VALUES (3, 2, 2010, 'Reconsider travel'); INSERT INTO TravelAdvisories (id, country_id, year, advisory) VALUES (4, 2, 2011, 'Exercise normal precautions'); INSERT INTO TravelAdvisories (id, country_id, year, advisory) VALUES (5, 3, 2010, 'Do not travel'); INSERT INTO TravelAdvisories (id, country_id, year, advisory) VALUES (6, 3, 2011, 'Reconsider travel');","completion":"SELECT country_id FROM TravelAdvisories WHERE advisory IN ('Reconsider travel', 'Do not travel') AND year >= 2010 GROUP BY country_id;"}
{"prompt":"List all the marine research stations and their respective regions with given SQL schema CREATE TABLE research_stations (station_id INT, station_name VARCHAR(30), region_id INT); INSERT INTO research_stations (station_id, station_name, region_id) VALUES (1, 'Station A', 1), (2, 'Station B', 2), (3, 'Station C', 3);","completion":"SELECT station_name, region_id FROM research_stations;"}
{"prompt":"Determine the most popular dish in each category with given SQL schema CREATE TABLE menu (dish_id INT, dish_name VARCHAR(255), dish_type VARCHAR(255), sales INT); INSERT INTO menu (dish_id, dish_name, dish_type, sales) VALUES (1, 'Quinoa Salad', 'Vegetarian', 150), (2, 'Chicken Sandwich', 'Non-Vegetarian', 200), (3, 'Pumpkin Soup', 'Vegetarian', 120);","completion":"SELECT dish_type, dish_name, sales FROM menu m1 WHERE sales = (SELECT MAX(sales) FROM menu m2 WHERE m1.dish_type = m2.dish_type) GROUP BY dish_type;"}
{"prompt":"How many menu items have a price below $5? with given SQL schema CREATE TABLE menus (menu_id INT, menu_name VARCHAR(50), type VARCHAR(20), price DECIMAL(5,2)); INSERT INTO menus (menu_id, menu_name, type, price) VALUES (1, 'Quinoa Salad', 'vegetarian', 9.99), (2, 'Margherita Pizza', 'non-vegetarian', 12.99), (3, 'Chickpea Curry', 'vegetarian', 10.99), (5, 'Vegan Burger', 'vegan', 11.99), (6, 'Vegan Ice Cream', 'vegan', 5.99), (7, 'French Fries', 'vegetarian', 3.99), (8, 'Soda', 'non-vegetarian', 2.49);","completion":"SELECT COUNT(*) FROM menus WHERE price < 5.00;"}
{"prompt":"What is the total number of ground vehicles sold by Lockheed Martin in 2020? with given SQL schema CREATE TABLE military_sales (equipment_type VARCHAR(20), manufacturer VARCHAR(20), year INT, quantity INT); INSERT INTO military_sales (equipment_type, manufacturer, year, quantity) VALUES ('Ground Vehicles', 'Lockheed Martin', 2020, 1200);","completion":"SELECT SUM(quantity) FROM military_sales WHERE equipment_type = 'Ground Vehicles' AND manufacturer = 'Lockheed Martin' AND year = 2020;"}
{"prompt":"What is the average productivity score for workers in the 'extraction' site?' with given SQL schema CREATE TABLE productivity (id INT, site TEXT, worker INT, score INT); INSERT INTO productivity (id, site, worker, score) VALUES (1, 'extraction', 1, 90), (2, 'extraction', 2, 95), (3, 'drilling', 1, 85);","completion":"SELECT AVG(score) FROM productivity WHERE site = 'extraction';"}
{"prompt":"What is the percentage of workers who identify as female or male in each department, including the total number of workers in each department? with given SQL schema CREATE TABLE department (dept_id INT, dept_name VARCHAR(50), worker_id INT); INSERT INTO department (dept_id, dept_name, worker_id) VALUES (1, 'Mining', 1), (1, 'Mining', 5), (2, 'Engineering', 2); CREATE TABLE worker_demographics (worker_id INT, worker_gender VARCHAR(10)); INSERT INTO worker_demographics (worker_id, worker_gender) VALUES (1, 'Female'), (2, 'Male'), (3, 'Female'), (4, 'Non-binary'), (5, 'Other');","completion":"SELECT dept_name, worker_gender, COUNT(*) as count, COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id) as percentage, (SELECT COUNT(*) FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id) as total FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id GROUP BY dept_name, worker_gender;"}
{"prompt":"What is the average number of words in news articles in the \"news_articles\" table written by female authors? with given SQL schema CREATE TABLE news_articles (id INT, title VARCHAR(100), author_id INT, word_count INT, author_gender VARCHAR(10)); INSERT INTO news_articles (id, title, author_id, word_count, author_gender) VALUES (1, 'News Article 1', 1, 500, 'Female'), (2, 'News Article 2', 2, 700, 'Male');","completion":"SELECT AVG(word_count) FROM news_articles WHERE author_gender = 'Female';"}
{"prompt":"What is the average word count for articles published in the 'news' schema, grouped by author? with given SQL schema CREATE TABLE news.articles (article_id INT, title VARCHAR(100), author VARCHAR(100), word_count INT); INSERT INTO news.articles (article_id, title, author, word_count) VALUES (1, 'Article 1', 'John Doe', 500), (2, 'Article 2', 'Jane Doe', 600), (3, 'Article 3', 'John Doe', 700);","completion":"SELECT author, AVG(word_count) FROM news.articles GROUP BY author;"}
{"prompt":"What is the total number of news articles published per month in 2021, grouped by their respective categories? with given SQL schema CREATE TABLE news_articles (article_id INT, pub_date DATE, category VARCHAR(255)); INSERT INTO news_articles (article_id, pub_date, category) VALUES (1, '2021-01-01', 'Politics'), (2, '2021-01-10', 'Sports'), (3, '2021-03-15', 'Entertainment');","completion":"SELECT MONTH(pub_date) AS month, category, COUNT(*) AS total FROM news_articles WHERE YEAR(pub_date) = 2021 GROUP BY month, category;"}
{"prompt":"What is the sum of donations and the number of volunteers for organizations that have more than 2 volunteers? with given SQL schema CREATE TABLE Organization (OrgID INT, Name VARCHAR(255)); CREATE TABLE Volunteer (VolID INT, OrgID INT, Name VARCHAR(255)); CREATE TABLE Donation (DonID INT, OrgID INT, Amount DECIMAL(10, 2)); INSERT INTO Organization VALUES (1, 'Greenpeace'), (2, 'Red Cross'), (3, 'Wildlife Fund'); INSERT INTO Volunteer VALUES (1, 1, 'John'), (2, 1, 'Jane'), (3, 2, 'Bob'), (4, 2, 'Alice'), (5, 3, 'Ella'), (6, 3, 'Don'); INSERT INTO Donation VALUES (1, 1, 50.00), (2, 1, 100.00), (3, 2, 75.00), (4, 2, 200.00), (5, 3, 120.00);","completion":"SELECT o.OrgID, SUM(d.Amount) as TotalDonations, COUNT(v.VolID) as TotalVolunteers FROM Organization o LEFT JOIN Volunteer v ON o.OrgID = v.OrgID LEFT JOIN Donation d ON o.OrgID = d.OrgID WHERE (SELECT COUNT(*) FROM Volunteer WHERE Volunteer.OrgID = o.OrgID) > 2 GROUP BY o.OrgID;"}
{"prompt":"What is the maximum donation amount for each organization in the 'Donations' and 'Organizations' tables? with given SQL schema CREATE TABLE Donations (donation_id INT, org_id INT, donation_amount DECIMAL(10,2));","completion":"SELECT O.name, MAX(D.donation_amount) FROM Donations D INNER JOIN Organizations O ON D.org_id = O.org_id GROUP BY O.name;"}
{"prompt":"What is the total donation amount in 2022 by donors located in the Middle East or North Africa? with given SQL schema CREATE TABLE Donors (DonorID int, DonorType varchar(50), Country varchar(50), AmountDonated numeric(18,2), DonationDate date); INSERT INTO Donors (DonorID, DonorType, Country, AmountDonated, DonationDate) VALUES (1, 'Organization', 'Egypt', 10000, '2022-01-01'), (2, 'Individual', 'Saudi Arabia', 5000, '2022-02-01'), (3, 'Organization', 'Iran', 15000, '2022-03-01'), (4, 'Individual', 'Algeria', 8000, '2022-04-01');","completion":"SELECT SUM(AmountDonated) FROM Donors WHERE DonorType = 'Organization' AND (Country LIKE 'Middle East%' OR Country LIKE 'North Africa%') AND YEAR(DonationDate) = 2022;"}
{"prompt":"What is the total donation amount in the first half of 2022, ranked by amount? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount FLOAT);","completion":"SELECT DonorID, SUM(DonationAmount) as 'Total Donation Amount' FROM Donations WHERE DonationDate BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY DonorID ORDER BY SUM(DonationAmount) DESC;"}
{"prompt":"How many female players are there? with given SQL schema Player_Demographics","completion":"SELECT COUNT(*) FROM Player_Demographics WHERE Gender = 'Female';"}
{"prompt":"What is the highest-rated action game? with given SQL schema CREATE TABLE Action_Games (Game_ID INT, Game_Name VARCHAR(20), Rating INT); INSERT INTO Action_Games (Game_ID, Game_Name, Rating) VALUES (1, 'Game 1', 90), (2, 'Game 2', 85), (3, 'Game 3', 95);","completion":"SELECT Game_Name, MAX(Rating) FROM Action_Games;"}
{"prompt":"What is the minimum playtime for players who have played the game 'Simulation' and are from Asia? with given SQL schema CREATE TABLE PlayerGameData (PlayerID INT, Age INT, Game VARCHAR(20), Playtime INT, Country VARCHAR(20)); INSERT INTO PlayerGameData (PlayerID, Age, Game, Playtime, Country) VALUES (5, 30, 'Simulation', 40, 'Japan'), (6, 35, 'Simulation', 60, 'China'), (7, 28, 'Racing', 70, 'USA');","completion":"SELECT MIN(Playtime) FROM PlayerGameData WHERE Game = 'Simulation' AND Country = 'Asia';"}
{"prompt":"What is the earliest capture time for each satellite image in the 'satellite_images' table? with given SQL schema CREATE TABLE satellite_images (image_id INT, image_url TEXT, capture_time TIMESTAMP); INSERT INTO satellite_images (image_id, image_url, capture_time) VALUES (1, 'image1.jpg', '2022-01-01 10:00:00'), (2, 'image2.jpg', '2021-05-01 10:00:00');","completion":"SELECT image_id, MIN(capture_time) OVER (PARTITION BY image_id) FROM satellite_images;"}
{"prompt":"What is the total budget allocated for all categories in 2022, in the 'annual_budget' table? with given SQL schema CREATE TABLE annual_budget (year INT, category VARCHAR(255), budget INT); INSERT INTO annual_budget (year, category, budget) VALUES (2022, 'Education', 1000000), (2023, 'Infrastructure', 1500000);","completion":"SELECT SUM(budget) FROM annual_budget WHERE year = 2022;"}
{"prompt":"Add a new record of inclusive housing data in the GreenVille area. with given SQL schema CREATE TABLE InclusiveHousing (area TEXT, num_units INT, wheelchair_accessible BOOLEAN, pets_allowed BOOLEAN); INSERT INTO InclusiveHousing (area, num_units, wheelchair_accessible, pets_allowed) VALUES ('Eastside', 10, TRUE, FALSE), ('Westside', 15, TRUE, TRUE);","completion":"INSERT INTO InclusiveHousing (area, num_units, wheelchair_accessible, pets_allowed) VALUES ('GreenVille', 20, TRUE, TRUE);"}
{"prompt":"What is the total installed capacity of wind projects in the 'EcoPower' schema? with given SQL schema CREATE SCHEMA EcoPower; CREATE TABLE WindProjects (project_id INT, name VARCHAR(100), location VARCHAR(100), installed_capacity INT); INSERT INTO WindProjects (project_id, name, location, installed_capacity) VALUES (1, 'WindFarm 1', 'California', 50000);","completion":"SELECT SUM(installed_capacity) FROM EcoPower.WindProjects;"}
{"prompt":"What percentage of restaurants in each city have a food safety score above 90? with given SQL schema CREATE TABLE food_safety_inspections(restaurant_id INT, city TEXT, score FLOAT); INSERT INTO food_safety_inspections(restaurant_id, city, score) VALUES (1, 'New York', 95.0), (2, 'New York', 90.0), (3, 'Los Angeles', 85.0), (4, 'Los Angeles', 92.0);","completion":"SELECT city, (COUNT(*) FILTER (WHERE score > 90)) * 100.0 \/ COUNT(*) as percentage FROM food_safety_inspections GROUP BY city;"}
{"prompt":"Get the product with the highest price from each supplier. with given SQL schema CREATE TABLE product (product_id INT, name VARCHAR(255), price DECIMAL(5,2), supplier_id INT); INSERT INTO product (product_id, name, price, supplier_id) VALUES (1, 'Organic Cotton T-Shirt', 20.99, 1), (2, 'Polyester Hoodie', 35.99, 2), (3, 'Bamboo Socks', 9.99, 1);","completion":"SELECT product_id, name, price, supplier_id FROM (SELECT product_id, name, price, supplier_id, RANK() OVER (PARTITION BY supplier_id ORDER BY price DESC) AS tier FROM product) AS tiered_products WHERE tier = 1;"}
{"prompt":"What is the total quantity of products sold by each brand? with given SQL schema CREATE TABLE brands (brand_id INT, brand_name VARCHAR(255)); INSERT INTO brands (brand_id, brand_name) VALUES (1, 'BrandA'), (2, 'BrandB'); CREATE TABLE sales (sale_id INT, brand_id INT, product_quantity INT);","completion":"SELECT brands.brand_name, SUM(sales.product_quantity) as total_quantity FROM sales JOIN brands ON sales.brand_id = brands.brand_id GROUP BY brands.brand_name;"}
{"prompt":"How many manned missions were conducted by NASA before 2000? with given SQL schema CREATE TABLE SpaceMissions (id INT, name VARCHAR(100), agency VARCHAR(100), year INT, manned BOOLEAN); INSERT INTO SpaceMissions (id, name, agency, year, manned) VALUES (1, 'Apollo 11', 'NASA', 1969, true); INSERT INTO SpaceMissions (id, name, agency, year, manned) VALUES (2, 'Apollo 13', 'NASA', 1970, true);","completion":"SELECT COUNT(*) FROM SpaceMissions WHERE agency = 'NASA' AND year < 2000 AND manned = true;"}
{"prompt":"Find the total number of fans who have attended football and basketball games separately. with given SQL schema CREATE TABLE fans (id INT, name VARCHAR(50)); CREATE TABLE events (id INT, event_type VARCHAR(20), tickets_bought INT); INSERT INTO fans (id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Richard Roe'); INSERT INTO events (id, event_type, tickets_bought) VALUES (1, 'Football', 2), (1, 'Basketball', 1), (2, 'Football', 1), (2, 'Basketball', 3), (3, 'Football', 1), (3, 'Basketball', 2);","completion":"SELECT SUM(CASE WHEN event_type = 'Basketball' THEN tickets_bought ELSE 0 END) + SUM(CASE WHEN event_type = 'Football' THEN tickets_bought ELSE 0 END) FROM events INNER JOIN fans ON events.id = fans.id;"}
{"prompt":"What is the average age of female fans who prefer the 'Soccer' team in the 'fan_demographics' table? with given SQL schema CREATE TABLE fan_demographics (id INT PRIMARY KEY, name VARCHAR(100), gender VARCHAR(10), age INT, favorite_team VARCHAR(50)); CREATE TABLE teams (id INT PRIMARY KEY, name VARCHAR(100), sport VARCHAR(50));","completion":"SELECT AVG(fd.age) as avg_age FROM fan_demographics fd JOIN teams t ON fd.favorite_team = t.name WHERE fd.gender = 'Female' AND t.name = 'Soccer';"}
{"prompt":"How many autonomous vehicles were manufactured in 'Germany' and 'Italy' by the 'FutureTech' company in the manufacturers table? with given SQL schema CREATE TABLE manufacturers (id INT, company TEXT, country TEXT, vehicle_type TEXT, fuel_type TEXT, total_manufactured INT); INSERT INTO manufacturers (id, company, country, vehicle_type, fuel_type, total_manufactured) VALUES (1, 'FutureTech', 'Germany', 'Car', 'Electric', 500), (2, 'GreenMotors', 'USA', 'Truck', 'Hydrogen', 700), (3, 'FutureTech', 'Italy', 'Car', 'Autonomous', 800);","completion":"SELECT company, country, SUM(total_manufactured) as total_autonomous_vehicles_manufactured FROM manufacturers WHERE company = 'FutureTech' AND (country = 'Germany' OR country = 'Italy') AND fuel_type = 'Autonomous' GROUP BY company, country;"}
{"prompt":"Who are the users who used electric vehicles and their trip details? with given SQL schema CREATE TABLE users (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), city VARCHAR(50));CREATE TABLE vehicles (id INT, vehicle_type VARCHAR(20), is_electric BOOLEAN);CREATE TABLE trips (id INT, user_id INT, vehicle_id INT, trip_distance FLOAT, trip_duration INT, departure_time TIMESTAMP, arrival_time TIMESTAMP);INSERT INTO users (id, name, age, gender, city) VALUES (3, 'Alex', 30, 'Female', 'New York');INSERT INTO vehicles (id, vehicle_type, is_electric) VALUES (1, 'Tesla', true), (2, 'Bike', false);INSERT INTO trips (id, user_id, vehicle_id, trip_distance, trip_duration, departure_time, arrival_time) VALUES (3, 3, 1, 15.3, 25, '2022-01-03 12:00:00', '2022-01-03 12:25:00');","completion":"SELECT u.name, v.vehicle_type, t.trip_distance, t.trip_duration FROM users u JOIN trips t ON u.id = t.user_id JOIN vehicles v ON t.vehicle_id = v.id WHERE v.is_electric = true;"}
{"prompt":"When did the latest collective bargaining agreements expire for each union? with given SQL schema CREATE TABLE collective_bargaining (id INT, union_id INT, company VARCHAR, agreement_date DATE, expiration_date DATE); INSERT INTO collective_bargaining (id, union_id, company, agreement_date, expiration_date) VALUES (3, 1, 'DEF Industries', '2021-02-01', '2023-01-31'); INSERT INTO collective_bargaining (id, union_id, company, agreement_date, expiration_date) VALUES (4, 2, 'MNO Ltd', '2020-10-15', '2022-10-14');","completion":"SELECT union_id, MAX(expiration_date) OVER (PARTITION BY union_id) as latest_expiration_date FROM collective_bargaining;"}
{"prompt":"List the total cargo weight for each cargo type in the 'cargo_tracking' table? with given SQL schema CREATE TABLE cargo_tracking (cargo_id INT, cargo_type VARCHAR(50), weight FLOAT, timestamp TIMESTAMP);","completion":"SELECT cargo_type, SUM(weight) FROM cargo_tracking GROUP BY cargo_type;"}
{"prompt":"What is the total waste generation in Brazil over the past 3 years? with given SQL schema CREATE TABLE WasteGenerationBrazil (year INT, amount INT); INSERT INTO WasteGenerationBrazil (year, amount) VALUES (2019, 1200000), (2020, 1300000), (2021, 1400000);","completion":"SELECT SUM(amount) FROM WasteGenerationBrazil;"}
{"prompt":"List the top 2 states with the lowest wastewater treatment plant efficiency in ascending order. with given SQL schema CREATE TABLE WastewaterTreatmentPlants (ID INT, State VARCHAR(20), Efficiency FLOAT); INSERT INTO WastewaterTreatmentPlants (ID, State, Efficiency) VALUES (7, 'New York', 0.85), (8, 'New York', 0.87), (9, 'Pennsylvania', 0.83), (10, 'Pennsylvania', 0.84);","completion":"SELECT State, Efficiency FROM (SELECT State, Efficiency, ROW_NUMBER() OVER (ORDER BY Efficiency ASC) as rn FROM WastewaterTreatmentPlants) tmp WHERE rn <= 2"}
{"prompt":"What is the total volume of water used for irrigation in Colorado? with given SQL schema CREATE TABLE water_use (id INT, location TEXT, use_type TEXT, volume FLOAT); INSERT INTO water_use (id, location, use_type, volume) VALUES (1, 'Denver', 'Irrigation', 100000), (2, 'Colorado Springs', 'Irrigation', 150000), (3, 'Boulder', 'Industrial', 200000);","completion":"SELECT SUM(volume) as total_volume FROM water_use WHERE location IN ('Denver', 'Colorado Springs', 'Boulder') AND use_type = 'Irrigation';"}
{"prompt":"What is the total water consumption for residential and commercial sectors in 2020? with given SQL schema CREATE TABLE water_usage(sector VARCHAR(20), year INT, consumption INT); INSERT INTO water_usage VALUES ('Residential', 2018, 5000), ('Residential', 2019, 5500), ('Residential', 2020, 6000), ('Commercial', 2018, 3000), ('Commercial', 2019, 3400), ('Commercial', 2020, 3800);","completion":"SELECT sector, SUM(consumption) FROM water_usage WHERE year = 2020 AND sector IN ('Residential', 'Commercial') GROUP BY sector;"}
{"prompt":"What is the average heart rate for each member in the last week? with given SQL schema CREATE TABLE workout_data(member_id INT, heart_rate INT, workout_date DATE); INSERT INTO workout_data(member_id, heart_rate, workout_date) VALUES (1,120,'2022-02-14'),(2,150,'2022-02-15'),(3,130,'2022-02-16'),(4,160,'2022-02-17'),(5,110,'2022-02-18'),(6,170,'2022-02-19'),(7,140,'2022-02-20'),(8,180,'2022-02-21'),(9,100,'2022-02-22'),(10,190,'2022-02-23'),(11,120,'2022-02-24'),(12,130,'2022-02-25');","completion":"SELECT member_id, AVG(heart_rate) FROM workout_data WHERE workout_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY member_id;"}
{"prompt":"How many agricultural innovation projects were completed in Q2 2022, partitioned by completion status? with given SQL schema CREATE TABLE AgriculturalInnovation (ProjectID INT, ProjectName VARCHAR(100), CompletionStatus VARCHAR(20), CompletionDate DATE); INSERT INTO AgriculturalInnovation VALUES (1,'Precision Farming','Completed','2022-04-15'),(2,'Vertical Farming','In Progress','2022-06-30'),(3,'Drip Irrigation','Completed','2022-05-28'),(4,'Genetic Engineering','In Progress','2022-07-20'),(5,'Drone Pollination','Completed','2022-04-22');","completion":"SELECT CompletionStatus, COUNT(*) AS ProjectCount FROM AgriculturalInnovation WHERE CompletionDate BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY CompletionStatus;"}
{"prompt":"How many art workshops were held in African countries in the last two years? with given SQL schema CREATE TABLE ArtWorkshops (workshopID INT, workshopLocation VARCHAR(50), workshopDate DATE); INSERT INTO ArtWorkshops (workshopID, workshopLocation, workshopDate) VALUES (1, 'Nigeria', '2020-03-01'), (2, 'Kenya', '2021-04-10'), (3, 'Egypt', '2022-01-20');","completion":"SELECT COUNT(*) FROM ArtWorkshops WHERE workshopLocation IN ('Nigeria', 'Kenya', 'Egypt') AND workshopDate >= DATEADD(year, -2, GETDATE());"}
{"prompt":"What is the average attendance for arts and culture events in 'Toronto' for events with an attendance of over 1000? with given SQL schema CREATE TABLE Events (event_id INT, city VARCHAR(20), attendee_count INT); INSERT INTO Events (event_id, city, attendee_count) VALUES (1, 'Toronto', 1200), (2, 'Toronto', 1500), (3, 'Toronto', 900);","completion":"SELECT AVG(attendee_count) FROM Events WHERE city = 'Toronto' AND attendee_count > 1000;"}
{"prompt":"How many materials in the sustainable_materials table have a recycled_content_percentage greater than 85%? with given SQL schema CREATE TABLE sustainable_materials (material_name TEXT, recycled_content_percentage FLOAT, embodied_carbon_kg_co2 FLOAT); INSERT INTO sustainable_materials (material_name, recycled_content_percentage, embodied_carbon_kg_co2) VALUES ('Bamboo', 90, 0.45), ('Reclaimed Wood', 80, 0.75), ('Straw Bale', 100, 1.3);","completion":"SELECT COUNT(*) FROM sustainable_materials WHERE recycled_content_percentage > 85;"}
{"prompt":"What is the average investment in climate finance for each country in South America in 2021? with given SQL schema CREATE TABLE climate_finance (country VARCHAR(50), investment INT, year INT, region VARCHAR(50)); INSERT INTO climate_finance (country, investment, year, region) VALUES ('Brazil', 2000000, 2021, 'South America'), ('Argentina', 1500000, 2021, 'South America');","completion":"SELECT country, AVG(investment) as avg_investment FROM climate_finance WHERE year = 2021 AND region = 'South America' GROUP BY country;"}
{"prompt":"What is the total climate finance allocated for adaptation projects in South America? with given SQL schema CREATE TABLE climate_finance (region VARCHAR(50), amount FLOAT, sector VARCHAR(50)); INSERT INTO climate_finance (region, amount, sector) VALUES ('Asia', 6000000, 'Mitigation'), ('Africa', 4000000, 'Mitigation'), ('South America', 5000000, 'Adaptation');","completion":"SELECT SUM(amount) FROM climate_finance WHERE region = 'South America' AND sector = 'Adaptation';"}
{"prompt":"List the R&D expenditures for the top 5 pharmaceutical companies in Germany. with given SQL schema CREATE TABLE r_and_d_expenditures (company VARCHAR(255), country VARCHAR(255), amount FLOAT); INSERT INTO r_and_d_expenditures (company, country, amount) VALUES ('PharmaA', 'Germany', 5000000);","completion":"SELECT company, SUM(amount) FROM r_and_d_expenditures WHERE country = 'Germany' GROUP BY company ORDER BY SUM(amount) DESC LIMIT 5;"}
{"prompt":"How many hospitals are present in each state? with given SQL schema CREATE TABLE Hospitals (ID INT, State VARCHAR(50), City VARCHAR(50)); INSERT INTO Hospitals (ID, State, City) VALUES (1, 'StateA', 'CityA'), (2, 'StateA', 'CityB'), (3, 'StateB', 'CityC'), (4, 'StateB', 'CityD');","completion":"SELECT State, COUNT(DISTINCT State) as HospitalCount FROM Hospitals GROUP BY State;"}
{"prompt":"What is the maximum number of hospital visits for patients with cancer in New York? with given SQL schema CREATE TABLE Patients (PatientID INT, Cancer TEXT, HospitalVisits INT, State TEXT); INSERT INTO Patients (PatientID, Cancer, HospitalVisits, State) VALUES (1, 'Breast Cancer', 3, 'New York');","completion":"SELECT MAX(HospitalVisits) FROM Patients WHERE Cancer IS NOT NULL AND State = 'New York';"}
{"prompt":"What is the percentage of women in the workforce in Germany? with given SQL schema CREATE TABLE Labor (ID INT, Country VARCHAR(100), Year INT, WomenInWorkforcePercentage FLOAT); INSERT INTO Labor (ID, Country, Year, WomenInWorkforcePercentage) VALUES (1, 'Germany', 2020, 49);","completion":"SELECT WomenInWorkforcePercentage FROM Labor WHERE Country = 'Germany' AND Year = 2020;"}
{"prompt":"What is the maximum funding amount received by a startup in the biotech sector? with given SQL schema CREATE TABLE funding(startup_id INT, funding_amount DECIMAL(10, 2)); INSERT INTO funding(startup_id, funding_amount) VALUES (1, 1000000.00);   CREATE TABLE startups(id INT, name TEXT, industry TEXT); INSERT INTO startups(id, name, industry) VALUES (1, 'BiotechMax', 'Biotech');","completion":"SELECT MAX(funding_amount) FROM funding JOIN startups ON startups.id = funding.startup_id WHERE startups.industry = 'Biotech';"}
{"prompt":"What is the minimum funding received by startups founded by individuals from Africa in the e-commerce sector? with given SQL schema CREATE TABLE startups (id INT, name TEXT, industry TEXT, founders TEXT, funding FLOAT); INSERT INTO startups (id, name, industry, founders, funding) VALUES (1, 'AfricanEcom', 'E-commerce', 'Africa', 2000000);","completion":"SELECT MIN(funding) FROM startups WHERE industry = 'E-commerce' AND founders = 'Africa';"}
{"prompt":"What is the number of startups founded by non-binary individuals in the technology industry? with given SQL schema CREATE TABLE company (id INT, name TEXT, founder_gender TEXT, industry TEXT); INSERT INTO company (id, name, founder_gender, industry) VALUES (1, 'CodeForAll', 'Non-binary', 'Technology'); INSERT INTO company (id, name, founder_gender, industry) VALUES (2, 'TechVillage', 'Male', 'Technology');","completion":"SELECT COUNT(*) FROM company WHERE founder_gender = 'Non-binary' AND industry = 'Technology';"}
{"prompt":"How many startups were founded by underrepresented minorities in the last 5 years? with given SQL schema CREATE TABLE startups(id INT, name TEXT, founder_minority TEXT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Yes'); INSERT INTO startups VALUES (2, 'Beta Corp', 'No'); CREATE TABLE founding_dates(startup_id INT, founded_year INT); INSERT INTO founding_dates VALUES (1, 2018); INSERT INTO founding_dates VALUES (2, 2017);","completion":"SELECT COUNT(*) FROM startups INNER JOIN founding_dates ON startups.id = founding_dates.startup_id WHERE founder_minority = 'Yes' AND founded_year >= YEAR(CURRENT_DATE) - 5;"}
{"prompt":"What are the names and founding years of companies founded in Chilean accelerators between 2010 and 2015? with given SQL schema CREATE TABLE accelerator (id INT, accelerator_name VARCHAR(50), location VARCHAR(50), start_year INT, end_year INT); CREATE TABLE company (id INT, name VARCHAR(50), founding_year INT, industry VARCHAR(50), accelerator_id INT);","completion":"SELECT a.accelerator_name, c.name, c.founding_year FROM accelerator a INNER JOIN company c ON a.id = c.accelerator_id WHERE a.location = 'Chile' AND c.founding_year >= a.start_year AND c.founding_year <= a.end_year AND a.start_year BETWEEN 2010 AND 2015;"}
{"prompt":"Show all regulatory frameworks related to blockchain. with given SQL schema CREATE TABLE regulatory_frameworks (framework_id INT, name VARCHAR(64), description VARCHAR(256));","completion":"SELECT * FROM regulatory_frameworks WHERE description LIKE '%blockchain%';"}
{"prompt":"What's the average gas limit for smart contracts on the Binance Smart Chain? with given SQL schema CREATE TABLE binance_smart_chain (contract_address VARCHAR(42), gas_limit INTEGER);","completion":"SELECT AVG(gas_limit) FROM binance_smart_chain;"}
{"prompt":"What is the total number of wildlife habitats for each type, grouped by type? with given SQL schema CREATE TABLE wildlife_habitat(type VARCHAR(255), count INT); INSERT INTO wildlife_habitat(type, count) VALUES ('Forest', 300), ('Wetland', 200), ('Grassland', 150), ('Desert', 50);","completion":"SELECT type, SUM(count) FROM wildlife_habitat GROUP BY type;"}
{"prompt":"What are the total sales for cruelty-free makeup brands in the United Kingdom? with given SQL schema CREATE TABLE brands (brand_id INT, brand_name TEXT, is_cruelty_free BOOLEAN); INSERT INTO brands (brand_id, brand_name, is_cruelty_free) VALUES (1, 'Natural Beauty', true), (2, 'Cosmetics Inc.', false), (3, 'Vegan Cosmetics', true); CREATE TABLE sales (sale_id INT, brand_id INT, sale_quantity INT, sale_country TEXT); INSERT INTO sales (sale_id, brand_id, sale_quantity, sale_country) VALUES (1, 1, 700, 'UK'), (2, 2, 800, 'US'), (3, 3, 900, 'CA'), (4, 1, 600, 'DE'), (5, 2, 500, 'FR');","completion":"SELECT SUM(s.sale_quantity) as total_sales FROM sales s JOIN brands b ON s.brand_id = b.brand_id WHERE b.is_cruelty_free = true AND s.sale_country = 'UK';"}
{"prompt":"What are the total sales for each region in Q3 of 2022? with given SQL schema CREATE TABLE sales (product_id INT, product_name VARCHAR(100), category VARCHAR(50), sale_date DATE, revenue DECIMAL(10, 2), region VARCHAR(50)); INSERT INTO sales (product_id, product_name, category, sale_date, revenue, region) VALUES (1, 'Lipstick', 'Cosmetics', '2022-07-02', 25.99, 'North'), (2, 'Foundation', 'Cosmetics', '2022-07-15', 34.99, 'South');","completion":"SELECT region, EXTRACT(QUARTER FROM sale_date) AS quarter, SUM(revenue) AS total_sales FROM sales GROUP BY region, quarter HAVING quarter = 3;"}
{"prompt":"Display the soldier names and branches from the view with given SQL schema CREATE VIEW soldier_details AS SELECT id, name, branch FROM soldiers;","completion":"SELECT name, branch FROM soldier_details;"}
{"prompt":"Show peacekeeping operations that involved more than one military branch with given SQL schema CREATE TABLE peacekeeping_operations (id INT, operation_name VARCHAR(255), military_branch1 VARCHAR(255), military_branch2 VARCHAR(255), year INT);","completion":"SELECT operation_name FROM peacekeeping_operations WHERE military_branch1 <> military_branch2;"}
{"prompt":"What is the total assets of clients who have invested in mutual funds but not in stocks? with given SQL schema CREATE TABLE clients (client_id INT, name TEXT, age INT, gender TEXT, total_assets DECIMAL(10,2)); INSERT INTO clients VALUES (1, 'John Doe', 35, 'Male', 250000.00), (2, 'Jane Smith', 45, 'Female', 500000.00); CREATE TABLE investments (client_id INT, investment_type TEXT); INSERT INTO investments VALUES (1, 'Stocks'), (1, 'Bonds'), (2, 'Stocks'), (3, 'Mutual Funds');","completion":"SELECT c.total_assets FROM clients c INNER JOIN investments i ON c.client_id = i.client_id WHERE i.investment_type = 'Mutual Funds' AND c.client_id NOT IN (SELECT client_id FROM investments WHERE investment_type = 'Stocks');"}
{"prompt":"List the top 3 cities with the most volunteer hours. with given SQL schema CREATE TABLE CityVolunteers (city TEXT, hours FLOAT); INSERT INTO CityVolunteers (city, hours) VALUES ('NYC', 450.0), ('LA', 300.5), ('Chicago', 350.1), ('Houston', 200.2);","completion":"SELECT city, hours FROM CityVolunteers ORDER BY hours DESC LIMIT 3;"}
{"prompt":"What percentage of the total budget in 2022 was spent on administrative expenses? with given SQL schema CREATE TABLE Expenses (ExpenseID int, ExpenseType varchar(50), Amount decimal(10,2), ExpenseDate date); INSERT INTO Expenses VALUES (1, 'Administrative', 25000, '2022-01-01');","completion":"SELECT (SUM(CASE WHEN ExpenseType = 'Administrative' THEN Amount ELSE 0 END) \/ SUM(Amount)) * 100 FROM Expenses WHERE ExpenseDate BETWEEN '2022-01-01' AND '2022-12-31'"}
{"prompt":"How many students have improved their mental health score by more than 10 points since enrolling? with given SQL schema CREATE TABLE student_mental_health (student_id INT, mental_health_score INT, date DATE); CREATE TABLE enrollments (student_id INT, enrollment_date DATE);","completion":"SELECT COUNT(smh.student_id) as num_improved FROM student_mental_health smh JOIN enrollments e ON smh.student_id = e.student_id WHERE smh.mental_health_score > e.mental_health_score + 10;"}
{"prompt":"What is the minimum salary for employees who identify as Latinx in the Sales department? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Ethnicity VARCHAR(20), Department VARCHAR(20), Salary INT); INSERT INTO Employees (EmployeeID, Gender, Ethnicity, Department, Salary) VALUES (1, 'Female', 'Latinx', 'Sales', 60000); INSERT INTO Employees (EmployeeID, Gender, Ethnicity, Department, Salary) VALUES (2, 'Male', 'Asian', 'Marketing', 70000);","completion":"SELECT MIN(Salary) FROM Employees WHERE Ethnicity = 'Latinx' AND Department = 'Sales';"}
{"prompt":"What was the average energy efficiency score for each region in 2021? with given SQL schema CREATE TABLE energy_efficiency (region VARCHAR(255), year INT, score INT); INSERT INTO energy_efficiency (region, year, score) VALUES ('Northeast', 2021, 85); INSERT INTO energy_efficiency (region, year, score) VALUES ('Midwest', 2021, 82);","completion":"SELECT region, AVG(score) FROM energy_efficiency WHERE year = 2021 GROUP BY region;"}
{"prompt":"What was the energy efficiency rating of the top 5 most efficient cars in the world, by make and model, in 2020? with given SQL schema CREATE TABLE cars (make text, model text, year integer, efficiency decimal);","completion":"SELECT make, model, MAX(efficiency) as top_efficiency FROM cars WHERE year = 2020 GROUP BY make, model ORDER BY top_efficiency DESC LIMIT 5;"}
{"prompt":"Show the total number of races won by the 'formula1_drivers' table in ascending order. with given SQL schema CREATE TABLE formula1_drivers (driver_id INT, driver_name VARCHAR(50), races_won INT);","completion":"SELECT driver_name, SUM(races_won) as total_races_won FROM formula1_drivers GROUP BY driver_name ORDER BY total_races_won ASC;"}
{"prompt":"What is the average number of rebounds per game by Wilt Chamberlain in the NBA? with given SQL schema CREATE TABLE wilt_stats (game INT, points INT, rebounds INT); INSERT INTO wilt_stats (game, points, rebounds) VALUES (1, 50, 25), (2, 40, 30);","completion":"SELECT AVG(rebounds) FROM wilt_stats;"}
{"prompt":"What is the highest scoring game in the history of the UEFA Champions League? with given SQL schema CREATE TABLE games (game_id INT, home_team INT, away_team INT, home_goals INT, away_goals INT);","completion":"SELECT home_team, away_team, home_goals, away_goals FROM games WHERE (home_goals + away_goals) = (SELECT MAX(home_goals + away_goals) FROM games);"}
{"prompt":"Delete all records from the \"funding_sources\" table where the \"region\" is \"South America\" and the \"funding_type\" is \"loan\". with given SQL schema CREATE TABLE funding_sources (funding_source_id INT PRIMARY KEY, name VARCHAR(255), region VARCHAR(255), funding_type VARCHAR(255));","completion":"DELETE FROM funding_sources WHERE region = 'South America' AND funding_type = 'loan';"}
{"prompt":"What is the percentage of accessible technology projects in each country? with given SQL schema CREATE TABLE accessible_tech (id INT, country VARCHAR(2), project_accessibility VARCHAR(10)); INSERT INTO accessible_tech (id, country, project_accessibility) VALUES (1, 'US', 'yes'), (2, 'CA', 'no'), (3, 'MX', 'yes'), (4, 'BR', 'yes'), (5, 'AR', 'no');","completion":"SELECT country, COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM accessible_tech) AS percentage FROM accessible_tech WHERE project_accessibility = 'yes' GROUP BY country;"}
{"prompt":"List all stations with wheelchair accessibility and elevator availability with given SQL schema CREATE TABLE stations (station_id INT, name VARCHAR(255), latitude DECIMAL(9,6), longitude DECIMAL(9,6)); CREATE TABLE accessibility (station_id INT, wheelchair_accessible BOOLEAN, elevator_availability BOOLEAN);","completion":"SELECT s.name FROM stations s JOIN accessibility a ON s.station_id = a.station_id WHERE a.wheelchair_accessible = TRUE AND a.elevator_availability = TRUE;"}
{"prompt":"List unique user IDs that used the 'Eco Pass' in the first quarter of 2022 with given SQL schema CREATE TABLE users (id INT PRIMARY KEY, user_id INT, pass_type VARCHAR(20));","completion":"SELECT DISTINCT user_id FROM users WHERE pass_type = 'Eco Pass' AND (DATE(NOW()) - DATE(created_at)) >= INTERVAL '3 months';"}
{"prompt":"What is the total revenue for each route type, by day? with given SQL schema CREATE TABLE Routes (RouteID int, RouteType varchar(10), StartingLocation varchar(20)); CREATE TABLE Fares (RouteID int, Fare float); CREATE TABLE PassengerCounts (RouteID int, Date date, PassengerCount int); INSERT INTO Routes VALUES (1, 'Bus', 'City Center'), (2, 'Tram', 'City Center'); INSERT INTO Fares VALUES (1, 2.5), (2, 3.0); INSERT INTO PassengerCounts VALUES (1, '2022-01-01', 100), (1, '2022-01-02', 110), (2, '2022-01-01', 120);","completion":"SELECT Routes.RouteType, PassengerCounts.Date, SUM(Fares.Fare * PassengerCounts.PassengerCount) as daily_revenue FROM Routes INNER JOIN Fares ON Routes.RouteID = Fares.RouteID INNER JOIN PassengerCounts ON Routes.RouteID = PassengerCounts.RouteID GROUP BY Routes.RouteType, PassengerCounts.Date;"}
{"prompt":"What are the top 5 cities with the most user engagement on our platform, in terms of likes, shares, and comments, for the year 2022? with given SQL schema CREATE TABLE cities (city_id INT, city_name VARCHAR(255));CREATE TABLE user_activity (activity_id INT, user_id INT, city_id INT, activity_type VARCHAR(50), activity_date DATE);","completion":"SELECT c.city_name, SUM(CASE WHEN activity_type IN ('like', 'share', 'comment') THEN 1 ELSE 0 END) as total_engagement FROM cities c JOIN user_activity ua ON c.city_id = ua.city_id WHERE ua.activity_date >= '2022-01-01' AND ua.activity_date < '2023-01-01' GROUP BY c.city_name ORDER BY total_engagement DESC LIMIT 5;"}
{"prompt":"What is the total amount of microfinance loans provided by the BRAC Bank last year? with given SQL schema CREATE TABLE microfinance_loans (bank VARCHAR(50), product VARCHAR(50), amount FLOAT, loan_date DATE); INSERT INTO microfinance_loans (bank, product, amount, loan_date) VALUES ('BRAC Bank', 'Microenterprise Loan', 1000.00, '2022-01-01'), ('BRAC Bank', 'Education Loan', 2000.00, '2022-02-01'), ('BRAC Bank', 'Housing Loan', 3000.00, '2022-03-01');","completion":"SELECT SUM(amount) FROM microfinance_loans WHERE bank = 'BRAC Bank' AND YEAR(loan_date) = YEAR(CURRENT_DATE()) - 1;"}
{"prompt":"How many hours did volunteers contribute to environmental programs in Australia in H1 2021? with given SQL schema CREATE TABLE Volunteers (id INT, volunteer_name VARCHAR(255), program VARCHAR(255), volunteer_hours INT, volunteer_date DATE); INSERT INTO Volunteers (id, volunteer_name, program, volunteer_hours, volunteer_date) VALUES (1, 'David Williams', 'Environment', 20, '2021-02-15'), (2, 'Emily Green', 'Environment', 25, '2021-06-05');","completion":"SELECT SUM(volunteer_hours) FROM Volunteers WHERE program = 'Environment' AND volunteer_date BETWEEN '2021-01-01' AND '2021-06-30';"}
{"prompt":"Identify all suppliers who provide non-GMO ingredients to restaurants with Michelin stars. with given SQL schema CREATE TABLE Suppliers (id INT, name VARCHAR(50), isNonGMO BOOLEAN); CREATE TABLE Restaurants (id INT, name VARCHAR(50), numStars INT); CREATE TABLE Ingredients (supplierId INT, restaurantId INT, isNonGMO BOOLEAN);","completion":"SELECT Suppliers.name FROM Suppliers INNER JOIN Ingredients ON Suppliers.id = Ingredients.supplierId INNER JOIN Restaurants ON Ingredients.restaurantId = Restaurants.id WHERE Restaurants.numStars > 2 AND Ingredients.isNonGMO = TRUE;"}
{"prompt":"What is the maximum sustainability rating for each supplier type? with given SQL schema CREATE TABLE supplier_types (id INT, type VARCHAR(255), description VARCHAR(255)); INSERT INTO supplier_types (id, type, description) VALUES (1, 'Organic', 'Suppliers that specialize in organic food production.'); INSERT INTO supplier_types (id, type, description) VALUES (2, 'Local', 'Suppliers that are locally owned and operated.'); CREATE TABLE supplier_type_ratings (supplier_id INT, supplier_type_id INT, rating FLOAT); INSERT INTO supplier_type_ratings (supplier_id, supplier_type_id, rating) VALUES (1, 1, 4.8); INSERT INTO supplier_type_ratings (supplier_id, supplier_type_id, rating) VALUES (2, 1, 4.2); INSERT INTO supplier_type_ratings (supplier_id, supplier_type_id, rating) VALUES (1, 2, 4.9);","completion":"SELECT st.type, MAX(str.rating) AS max_rating FROM supplier_types st JOIN supplier_type_ratings str ON st.id = str.supplier_type_id GROUP BY st.type;"}
{"prompt":"What is the total quantity of products shipped to each continent? with given SQL schema CREATE TABLE shipments (shipment_id INT, continent TEXT); INSERT INTO shipments (shipment_id, continent) VALUES (1, 'Europe'), (2, 'Asia'), (3, 'Europe'), (4, 'Americas'), (5, 'Africa'); CREATE TABLE shipment_items (product TEXT, shipment_id INT, quantity INT); INSERT INTO shipment_items (product, shipment_id, quantity) VALUES ('Product A', 1, 100), ('Product B', 2, 200), ('Product A', 3, 300), ('Product C', 4, 400), ('Product B', 5, 500);","completion":"SELECT s.continent, SUM(si.quantity) as total_quantity FROM shipment_items si JOIN shipments s ON si.shipment_id = s.shipment_id GROUP BY s.continent;"}
{"prompt":"What is the average funding amount for biotech startups in California? with given SQL schema CREATE TABLE biotech_startups (id INT, name TEXT, location TEXT, funding_amount INT); INSERT INTO biotech_startups (id, name, location, funding_amount) VALUES (1, 'GenSolutions', 'California', 12000000);","completion":"SELECT AVG(funding_amount) FROM biotech_startups WHERE location = 'California';"}
{"prompt":"How many community health workers are there in each state? with given SQL schema CREATE TABLE community_health_workers (state VARCHAR(2), worker_id INT);","completion":"SELECT state, COUNT(worker_id) FROM community_health_workers GROUP BY state;"}
{"prompt":"Find the number of tourists who have experienced virtual tours in Asia. with given SQL schema CREATE TABLE tourists (tourist_id INT, name VARCHAR, country VARCHAR, virtual_tour_experience INT); CREATE VIEW asian_tourists AS SELECT * FROM tourists WHERE country LIKE '%%Asia%%';","completion":"SELECT COUNT(*) FROM asian_tourists WHERE virtual_tour_experience > 0;"}
{"prompt":"Find the total price of artworks by 'Gustav Klimt' in the 'Art Nouveau' period. with given SQL schema CREATE TABLE Artworks (id INT, artist_name VARCHAR(100), period VARCHAR(50), artwork_name VARCHAR(100), price FLOAT); INSERT INTO Artworks (id, artist_name, period, artwork_name, price) VALUES (1, 'Gustav Klimt', 'Art Nouveau', 'The Kiss', 10000000.0); INSERT INTO Artworks (id, artist_name, period, artwork_name, price) VALUES (2, 'Gustav Klimt', 'Art Nouveau', 'Portrait of Adele Bloch-Bauer I', 135000000.0);","completion":"SELECT SUM(price) as total_price FROM Artworks WHERE artist_name = 'Gustav Klimt' AND period = 'Art Nouveau';"}
{"prompt":"What was the average visitor count for all exhibitions in 'Cubism' genre in Paris, France? with given SQL schema CREATE TABLE Exhibitions (id INT, name TEXT, genre TEXT, visitor_count INT, city TEXT, country TEXT);","completion":"SELECT AVG(visitor_count) FROM Exhibitions WHERE genre = 'Cubism' AND city = 'Paris' AND country = 'France';"}
{"prompt":"Create a view to display all therapists with the specialization of 'CBT' with given SQL schema CREATE VIEW cbt_therapists AS SELECT therapist_id, name, specialization, experience FROM therapists WHERE specialization = 'CBT';","completion":"CREATE VIEW cbt_therapists AS SELECT therapist_id, name, specialization, experience FROM therapists WHERE specialization = 'CBT';"}
{"prompt":"Delete all records related to destinations that were not marketed in 2022. with given SQL schema CREATE TABLE marketing_campaigns (destination VARCHAR(20), year INT); INSERT INTO marketing_campaigns (destination, year) VALUES ('Japan', 2020), ('France', 2021), ('Germany', 2022), ('Italy', 2020);","completion":"DELETE FROM marketing_campaigns WHERE year != 2022;"}
{"prompt":"What is the total number of marine species in the Atlantic Ocean with a conservation status of 'Critically Endangered' or 'Extinct'? with given SQL schema CREATE TABLE AtlanticSpecies (species_name TEXT, location TEXT, conservation_status TEXT); INSERT INTO AtlanticSpecies (species_name, location, conservation_status) VALUES ('North Atlantic Right Whale', 'Atlantic Ocean', 'Critically Endangered'), ('Staghorn Coral', 'Atlantic Ocean', 'Critically Endangered'), ('Black Abalone', 'Atlantic Ocean', 'Extinct');","completion":"SELECT COUNT(*) FROM AtlanticSpecies WHERE conservation_status IN ('Critically Endangered', 'Extinct');"}
{"prompt":"List all TV shows with a runtime greater than 60 minutes? with given SQL schema CREATE TABLE shows (id INT, title TEXT, runtime FLOAT); INSERT INTO shows (id, title, runtime) VALUES (1, 'Show1', 65), (2, 'Show2', 45), (3, 'Show3', 70);","completion":"SELECT title FROM shows WHERE runtime > 60;"}
{"prompt":"What is the total inventory value for each category in the UK? with given SQL schema CREATE TABLE inventory (id INT, item_id INT, category TEXT, quantity INT, price DECIMAL(5,2));INSERT INTO inventory (id, item_id, category, quantity, price) VALUES (1, 1, 'Pizza', 100, 5.99), (2, 2, 'Pasta', 75, 6.99), (3, 3, 'Salad', 50, 4.99);","completion":"SELECT c.category, SUM(i.quantity * i.price) AS total_inventory_value FROM inventory i JOIN categories c ON i.category = c.id WHERE c.country = 'UK' GROUP BY c.category;"}
{"prompt":"Which defense projects have been delayed in the Asia-Pacific region? with given SQL schema CREATE TABLE DefenseProjects (id INT, project_name VARCHAR(255), region VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO DefenseProjects (id, project_name, region, start_date, end_date) VALUES (1, 'Aircraft Carrier Construction', 'Asia-Pacific', '2020-01-01', '2023-12-31'), (2, 'Cybersecurity Training Program', 'Asia-Pacific', '2019-06-01', '2021-05-31');","completion":"SELECT project_name FROM DefenseProjects WHERE region = 'Asia-Pacific' AND end_date < CURDATE();"}
{"prompt":"Delete a record from the broadband_usage table with given SQL schema CREATE TABLE broadband_usage (usage_id INT, subscriber_id INT, usage_start_time TIMESTAMP, usage_end_time TIMESTAMP, data_used DECIMAL(10,2));","completion":"DELETE FROM broadband_usage WHERE usage_id = 11111;"}
{"prompt":"Show the top 3 most liked articles and their authors, published in the last month. with given SQL schema CREATE TABLE articles (id INT, title TEXT, category TEXT, likes INT, created_at DATETIME, author_id INT); INSERT INTO articles (id, title, category, likes, created_at, author_id) VALUES (1, 'Climate crisis: 12 years to save the planet', 'climate change', 100, '2022-01-01 10:30:00', 123);","completion":"SELECT title, author_id, likes FROM articles WHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH) ORDER BY likes DESC LIMIT 3"}
{"prompt":"What is the average age of all female news reporters across all news agencies? with given SQL schema CREATE TABLE news_agency (name VARCHAR(255), location VARCHAR(255));CREATE TABLE reporter (id INT, name VARCHAR(255), age INT, gender VARCHAR(10), news_agency_id INT); INSERT INTO news_agency (name, location) VALUES ('ABC News', 'New York'), ('CNN', 'Atlanta'), ('Fox News', 'New York'); INSERT INTO reporter (id, name, age, gender, news_agency_id) VALUES (1, 'Alice', 35, 'Female', 1), (2, 'Bella', 45, 'Female', 2), (3, 'Carol', 30, 'Female', 3);","completion":"SELECT AVG(age) FROM reporter WHERE gender = 'Female';"}
{"prompt":"Insert a new entry in the 'divers' table for 'Selma' who is from 'Brazil' and has 'PADI' certification. with given SQL schema CREATE TABLE divers (diver_id INT, name TEXT, country TEXT, certification TEXT);","completion":"INSERT INTO divers (diver_id, name, country, certification) VALUES (4, 'Selma', 'Brazil', 'PADI');"}
{"prompt":"Find the top 5 players with the highest scores in the 'historical_tournaments' view, including their scores and the names of the tournaments they participated in. with given SQL schema CREATE VIEW historical_tournaments AS SELECT tournaments.tournament_name, players.player_name, players.score FROM tournaments JOIN players_scores ON tournaments.tournament_id = players_scores.tournament_id JOIN players ON players_scores.player_id = players.player_id;  CREATE TABLE tournaments (tournament_id INT, tournament_name TEXT);  CREATE TABLE players_scores (player_id INT, tournament_id INT, score INT);  CREATE TABLE players (player_id INT, player_name TEXT);","completion":"SELECT players.player_name, MAX(players_scores.score) as high_score, tournaments.tournament_name FROM historical_tournaments JOIN players ON historical_tournaments.player_id = players.player_id JOIN players_scores ON historical_tournaments.player_id = players_scores.player_id JOIN tournaments ON players_scores.tournament_id = tournaments.tournament_id GROUP BY players.player_id, tournaments.tournament_name ORDER BY high_score DESC LIMIT 5;"}
{"prompt":"Show the total rainfall (in millimeters) for each field in the 'PrecisionFarm' farm from May to August 2021. with given SQL schema CREATE TABLE RainfallData (id INT, field VARCHAR(255), timestamp TIMESTAMP, rainfall DECIMAL(5,2));","completion":"SELECT field, SUM(rainfall) FROM RainfallData WHERE field IN ('PrecisionFarm1', 'PrecisionFarm2', 'PrecisionFarm3') AND MONTH(timestamp) BETWEEN 5 AND 8 AND YEAR(timestamp) = 2021 GROUP BY field;"}
{"prompt":"What is the average temperature recorded by weather stations in the 'PrecisionFarm1' field during the growing season of 2021? with given SQL schema CREATE TABLE WeatherStations (id INT, field VARCHAR(255), temperature DECIMAL(5,2), timestamp TIMESTAMP);","completion":"SELECT AVG(temperature) FROM WeatherStations WHERE field = 'PrecisionFarm1' AND timestamp BETWEEN '2021-03-01' AND '2021-10-31';"}
{"prompt":"Calculate the average daily production of Samarium for each country in the Asia continent from January 1st, 2020 to December 31st, 2020. with given SQL schema CREATE TABLE Country (Code TEXT, Name TEXT, Continent TEXT); INSERT INTO Country (Code, Name, Continent) VALUES ('CN', 'China', 'Asia'), ('AU', 'Australia', 'Australia'), ('KR', 'South Korea', 'Asia'), ('IN', 'India', 'Asia'); CREATE TABLE ProductionDaily (Date DATE, Country TEXT, Company TEXT, Element TEXT, Quantity INT); INSERT INTO ProductionDaily (Date, Country, Company, Element, Quantity) VALUES ('2020-01-01', 'CN', 'Kappa Inc', 'Samarium', 50), ('2020-01-01', 'IN', 'Lambda Ltd', 'Samarium', 40), ('2020-01-02', 'CN', 'Kappa Inc', 'Samarium', 55), ('2020-01-02', 'IN', 'Lambda Ltd', 'Samarium', 45);","completion":"SELECT Country, AVG(Quantity) FROM ProductionDaily WHERE Element = 'Samarium' AND Date BETWEEN '2020-01-01' AND '2020-12-31' AND Country IN (SELECT Name FROM Country WHERE Continent = 'Asia') GROUP BY Country;"}
{"prompt":"How many instances of 'Dysprosium' production were there in each country after 2015? with given SQL schema CREATE TABLE production (element VARCHAR(10), country VARCHAR(20), quantity INT, year INT); INSERT INTO production (element, country, quantity, year) VALUES ('Dysprosium', 'Malaysia', 8000, 2016), ('Dysprosium', 'India', 11000, 2017), ('Dysprosium', 'Malaysia', 9000, 2018), ('Dysprosium', 'India', 13000, 2019), ('Dysprosium', 'Malaysia', 10000, 2020), ('Dysprosium', 'India', 14000, 2021);","completion":"SELECT country, COUNT(*) FROM production WHERE element = 'Dysprosium' AND year > 2015 GROUP BY country;"}
{"prompt":"What is the average annual REE production for Vietnam between 2017 and 2021? with given SQL schema CREATE TABLE production (country VARCHAR(255), REE VARCHAR(255), amount INT, year INT); INSERT INTO production (country, REE, amount, year) VALUES ('Vietnam', 'Neodymium', 2000, 2017); INSERT INTO production (country, REE, amount, year) VALUES ('Vietnam', 'Praseodymium', 2200, 2018); INSERT INTO production (country, REE, amount, year) VALUES ('Vietnam', 'Dysprosium', 2500, 2019); INSERT INTO production (country, REE, amount, year) VALUES ('Vietnam', 'Terbium', 2800, 2020); INSERT INTO production (country, REE, amount, year) VALUES ('Vietnam', ' Europium', 3100, 2021);","completion":"SELECT AVG(amount) as avg_annual_production FROM production WHERE country = 'Vietnam' AND year BETWEEN 2017 AND 2021;"}
{"prompt":"What is the average production of Gadolinium in 2018 for countries with production > 15,000? with given SQL schema CREATE TABLE production (country VARCHAR(255), year INT, element VARCHAR(10), quantity INT); INSERT INTO production (country, year, element, quantity) VALUES ('China', 2018, 'Gd', 25000), ('Australia', 2018, 'Gd', 20000), ('China', 2018, 'Gd', 26000), ('Russia', 2018, 'Gd', 15000);","completion":"SELECT AVG(quantity) FROM production WHERE year = 2018 AND country IN (SELECT country FROM production WHERE element = 'Gd' AND quantity > 15000 GROUP BY country);"}
{"prompt":"What is the number of properties with inclusive housing features in the 'housing_data' table for each city? with given SQL schema CREATE TABLE housing_data (id INT, address VARCHAR(255), city VARCHAR(255), state VARCHAR(255), square_footage INT, inclusive_features VARCHAR(255)); INSERT INTO housing_data (id, address, city, state, square_footage, inclusive_features) VALUES (1, '123 Maple St', 'San Francisco', 'CA', 1200, 'wheelchair accessible'), (2, '456 Oak St', 'Austin', 'TX', 1500, 'none'), (3, '789 Pine St', 'Seattle', 'WA', 1800, 'affordable housing');","completion":"SELECT city, COUNT(*) FROM housing_data WHERE inclusive_features IS NOT NULL GROUP BY city;"}
{"prompt":"What is the average CO2 emission reduction in Geothermal Projects? with given SQL schema CREATE TABLE Geothermal_Projects (project_id INT, location VARCHAR(50), co2_emission_reduction FLOAT); INSERT INTO Geothermal_Projects (project_id, location, co2_emission_reduction) VALUES (1, 'Iceland', 4500.0), (2, 'New Zealand', 3000.0), (3, 'Italy', 2500.0);","completion":"SELECT AVG(co2_emission_reduction) FROM Geothermal_Projects;"}
{"prompt":"List all restaurants that serve gluten-free options? with given SQL schema CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255), serves_gluten_free BOOLEAN); INSERT INTO restaurants (restaurant_id, name, serves_gluten_free) VALUES (1, 'Green Garden', TRUE), (2, 'Bistro Bella', FALSE), (3, 'Asian Fusion', FALSE); CREATE TABLE menu (menu_item VARCHAR(255), gluten_free BOOLEAN); INSERT INTO menu (menu_item, gluten_free) VALUES ('Quinoa Salad', TRUE), ('Chicken Alfredo', FALSE);","completion":"SELECT r.name FROM restaurants r WHERE r.serves_gluten_free = TRUE;"}
{"prompt":"What is the average labor cost for factories in African countries? with given SQL schema CREATE TABLE factories (factory_id INT, country VARCHAR(50), labor_cost DECIMAL(10,2)); INSERT INTO factories (factory_id, country, labor_cost) VALUES (1, 'Kenya', 500), (2, 'Nigeria', 450), (3, 'South Africa', 520);","completion":"SELECT AVG(factories.labor_cost) FROM factories WHERE factories.country IN ('Kenya', 'Nigeria', 'South Africa');"}
{"prompt":"How many astrophysics research projects are there on Neutron Stars and Quasars? with given SQL schema CREATE TABLE AstroResearch (ResearchID INT PRIMARY KEY, Subject VARCHAR(255), Description TEXT, ResearcherID INT); INSERT INTO AstroResearch (ResearchID, Subject, Description, ResearcherID) VALUES (3, 'Neutron Stars', 'Observations and simulations of neutron stars', 103); INSERT INTO AstroResearch (ResearchID, Subject, Description, ResearcherID) VALUES (4, 'Quasars', 'Study of quasars in distant galaxies', 104);","completion":"SELECT COUNT(*) FROM AstroResearch WHERE Subject IN ('Neutron Stars', 'Quasars');"}
{"prompt":"What is the minimum distance from Earth recorded by each spacecraft during its mission? with given SQL schema CREATE TABLE spacecraft_missions (id INT, spacecraft_name VARCHAR(255), mission_duration INT, min_distance_from_earth FLOAT); INSERT INTO spacecraft_missions (id, spacecraft_name, mission_duration, min_distance_from_earth) VALUES (1, 'Spacecraft1', 365, 500.0), (2, 'Spacecraft2', 730, 700.0);","completion":"SELECT spacecraft_name, MIN(min_distance_from_earth) FROM spacecraft_missions GROUP BY spacecraft_name;"}
{"prompt":"What is the total number of tickets sold in the \"ticket_sales\" table for soccer games in the year 2021? with given SQL schema CREATE TABLE ticket_sales (id INT, sport TEXT, date DATE, quantity INT); INSERT INTO ticket_sales (id, sport, date, quantity) VALUES (1, 'basketball', '2022-01-01', 50), (2, 'soccer', '2021-12-31', 75);","completion":"SELECT SUM(quantity) FROM ticket_sales WHERE sport = 'soccer' AND YEAR(date) = 2021;"}
{"prompt":"How many high severity vulnerabilities were found in the transportation department's systems in the last month? with given SQL schema CREATE TABLE dept_vulnerabilities (id INT, department VARCHAR(255), severity FLOAT, discovered_at TIMESTAMP); INSERT INTO dept_vulnerabilities (id, department, severity, discovered_at) VALUES (1, 'transportation', 8.5, '2021-09-03 09:30:00'), (2, 'education', 4.0, '2021-10-20 11:00:00');","completion":"SELECT COUNT(*) FROM dept_vulnerabilities WHERE department = 'transportation' AND severity >= 7.0 AND discovered_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"}
{"prompt":"What is the total number of security incidents for each department in the organization? with given SQL schema CREATE TABLE incident (incident_id INT, incident_date DATE, incident_description TEXT, department_id INT);CREATE TABLE department (department_id INT, department_name VARCHAR(255));","completion":"SELECT d.department_name, COUNT(i.incident_id) AS incident_count FROM incident i JOIN department d ON i.department_id = d.department_id GROUP BY d.department_name;"}
{"prompt":"Update policyholder information for policy type 'Renters'. with given SQL schema CREATE TABLE Policy (PolicyID INT, PolicyType VARCHAR(50), PolicyHolderName VARCHAR(50), PolicyHolderAddress VARCHAR(50)); INSERT INTO Policy VALUES (1, 'Renters', 'John Doe', '123 Main St'), (2, 'Home', 'Jane Smith', '456 Elm St'), (3, 'Life', 'Bob Johnson', '789 Oak Rd');","completion":"UPDATE Policy SET PolicyHolderName = 'Jane Doe', PolicyHolderAddress = '456 Oak Rd' WHERE PolicyType = 'Renters';"}
{"prompt":"Find the number of hybrid vehicles sold in the US, Germany, and Japan. with given SQL schema CREATE TABLE vehicle_sales (sale_id INT, vehicle_id INT, country VARCHAR(20), quantity INT); CREATE TABLE vehicles (vehicle_id INT, model VARCHAR(20), manufacture VARCHAR(20), vehicle_type VARCHAR(20));","completion":"SELECT SUM(vs.quantity) FROM vehicle_sales vs JOIN vehicles v ON vs.vehicle_id = v.vehicle_id WHERE v.vehicle_type = 'hybrid' AND vs.country IN ('US', 'Germany', 'Japan');"}
{"prompt":"What is the average safety rating of electric vehicles released in the US after 2018? with given SQL schema CREATE TABLE if not exists Vehicles (Id int, Name varchar(100), Type varchar(50), SafetyRating float, ReleaseYear int, Country varchar(50)); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, ReleaseYear, Country) VALUES (1, 'Tesla Model 3', 'Electric', 5.3, 2017, 'USA'), (2, 'Tesla Model S', 'Electric', 5.4, 2012, 'USA'), (3, 'Nissan Leaf', 'Electric', 4.8, 2010, 'Japan');","completion":"SELECT AVG(SafetyRating) FROM (SELECT SafetyRating FROM Vehicles WHERE Type = 'Electric' AND Country = 'USA' AND ReleaseYear > 2018) AS Subquery;"}
{"prompt":"What is the total number of electric vehicle sales in each country? with given SQL schema CREATE TABLE Country (country_id INT, country_name VARCHAR(50)); INSERT INTO Country (country_id, country_name) VALUES (1, 'USA'); CREATE TABLE EV_Sales (sale_id INT, model VARCHAR(50), buyer_country INT, sale_date DATE); INSERT INTO EV_Sales (sale_id, model, buyer_country, sale_date) VALUES (1, 'Tesla Model 3', 1, '2022-08-15');","completion":"SELECT c.country_name, COUNT(es.sale_id) as \"Total Sales\" FROM Country c JOIN EV_Sales es ON c.country_id = es.buyer_country GROUP BY c.country_name;"}
{"prompt":"What was the maximum age of visitors who attended the Surrealism exhibition? with given SQL schema CREATE TABLE Exhibitions (exhibition_id INT, name VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO Exhibitions (exhibition_id, name, start_date, end_date) VALUES (1, 'Impressionist', '2020-05-01', '2021-01-01'), (2, 'Cubism', '2019-08-15', '2020-03-30'), (3, 'Surrealism', '2018-12-15', '2019-09-15'); CREATE TABLE Visitors (visitor_id INT, exhibition_id INT, age INT, gender VARCHAR(50));","completion":"SELECT MAX(age) FROM Visitors WHERE exhibition_id = 3;"}
{"prompt":"Calculate the total waste generated in 'BC' and 'Alberta' with given SQL schema CREATE TABLE waste_generation (id INT, province VARCHAR(20), amount INT); INSERT INTO waste_generation (id, province, amount) VALUES (1, 'BC', 2500), (2, 'Alberta', 3500);","completion":"SELECT SUM(amount) FROM waste_generation WHERE province IN ('BC', 'Alberta');"}
{"prompt":"Determine the landfill capacity in Toronto as of 2022. with given SQL schema CREATE TABLE landfill_capacity(city VARCHAR(20), capacity INT, year INT); INSERT INTO landfill_capacity VALUES('Toronto', 7000000, 2022), ('Toronto', 7500000, 2021), ('Montreal', 6000000, 2022);","completion":"SELECT capacity FROM landfill_capacity WHERE city = 'Toronto' AND year = 2022;"}
{"prompt":"Show the total waste generation in Mumbai with given SQL schema CREATE TABLE waste_generation (id INT PRIMARY KEY, location VARCHAR(50), waste_type VARCHAR(50), quantity INT);","completion":"SELECT SUM(quantity) FROM waste_generation WHERE location = 'Mumbai';"}
{"prompt":"What is the maximum waste generation per capita in the world? with given SQL schema CREATE TABLE WasteGeneration (country VARCHAR(255), waste_generation_kg_per_capita DECIMAL(5,2), region VARCHAR(255)); INSERT INTO WasteGeneration (country, waste_generation_kg_per_capita, region) VALUES ('Denmark', 7.5, 'Europe'), ('Canada', 4.8, 'America'), ('Japan', 3.2, 'Asia');","completion":"SELECT MAX(waste_generation_kg_per_capita) FROM WasteGeneration;"}
{"prompt":"What is the drought impact in each state? with given SQL schema CREATE TABLE drought_impact(state VARCHAR(20), drought_impact DECIMAL(5,2)); INSERT INTO drought_impact VALUES('Florida', 0.15), ('California', 0.20);","completion":"SELECT state, drought_impact FROM drought_impact;"}
{"prompt":"What is the minimum water usage in MWh in a single month for the industrial sector in 2020? with given SQL schema CREATE TABLE min_water_usage_per_month (year INT, sector VARCHAR(20), month INT, usage FLOAT); INSERT INTO min_water_usage_per_month (year, sector, month, usage) VALUES (2020, 'industrial', 1, 5000); INSERT INTO min_water_usage_per_month (year, sector, month, usage) VALUES (2020, 'industrial', 2, 5500); INSERT INTO min_water_usage_per_month (year, sector, month, usage) VALUES (2020, 'industrial', 3, 6000);","completion":"SELECT MIN(usage) FROM min_water_usage_per_month WHERE year = 2020 AND sector = 'industrial';"}
{"prompt":"What was the water usage by month for the customer with id 5? with given SQL schema CREATE TABLE customer_water_usage (customer_id INT, month TEXT, usage FLOAT); INSERT INTO customer_water_usage (customer_id, month, usage) VALUES (5, 'Jan', 120.5), (5, 'Feb', 110.7);","completion":"SELECT month, usage FROM customer_water_usage WHERE customer_id = 5;"}
{"prompt":"What is the total number of models developed by each researcher for explainable AI? with given SQL schema CREATE TABLE researchers (id INT, name TEXT); INSERT INTO researchers (id, name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie'); CREATE TABLE models (id INT, researcher_id INT, name TEXT, domain TEXT); INSERT INTO models (id, researcher_id, name, domain) VALUES (1, 1, 'XAIModel1', 'Explainable AI'), (2, 1, 'XAIModel2', 'Explainable AI'), (3, 2, 'XAIModel3', 'Explainable AI'), (4, 3, 'XAIModel4', 'Explainable AI');","completion":"SELECT researchers.name, COUNT(models.id) as total_models FROM researchers INNER JOIN models ON researchers.id = models.researcher_id WHERE models.domain = 'Explainable AI' GROUP BY researchers.name;"}
{"prompt":"How many rural infrastructure projects were completed in India before 2017? with given SQL schema CREATE TABLE projects (id INT, location VARCHAR(50), completion_date DATE); INSERT INTO projects (id, location, completion_date) VALUES (1, 'India', '2016-05-01'), (2, 'Brazil', '2017-12-31'), (3, 'Ghana', '2016-08-15'), (4, 'India', '2018-09-05'), (5, 'Tanzania', '2014-11-23');","completion":"SELECT COUNT(*) FROM projects WHERE location = 'India' AND completion_date < '2017-01-01';"}
{"prompt":"What is the total budget for economic diversification efforts in 2018? with given SQL schema CREATE TABLE economic_diversification (id INT, year INT, effort VARCHAR(50), budget FLOAT); INSERT INTO economic_diversification (id, year, effort, budget) VALUES (1, 2018, 'Tourism', 200000.00), (2, 2019, 'Renewable Energy', 800000.00), (3, 2020, 'Handicrafts', 500000.00);","completion":"SELECT SUM(budget) FROM economic_diversification WHERE year = 2018;"}
{"prompt":"How many flight safety incidents were reported for each aircraft model in the last 6 months? with given SQL schema CREATE TABLE Flight_Safety (incident_id INT, incident_date DATE, aircraft_model VARCHAR(255), incident_type VARCHAR(255)); INSERT INTO Flight_Safety (incident_id, incident_date, aircraft_model, incident_type) VALUES (1, '2022-03-01', 'B737', 'Engine Failure'), (2, '2022-04-01', 'A320', 'Landing Gear Malfunction'), (3, '2022-05-01', 'B737', 'Pressurization Issue');","completion":"SELECT aircraft_model, COUNT(*) FROM Flight_Safety WHERE incident_date >= DATEADD(month, -6, CURRENT_DATE) GROUP BY aircraft_model;"}
{"prompt":"Insert a new record into the flight_safety table with the following details: Flight ID 30, Flight Date '2023-03-01', Carrier 'SpaceX', Event 'Emergency Landing', Outcome 'Success' with given SQL schema CREATE TABLE flight_safety (flight_id INT, flight_date DATE, carrier VARCHAR(255), event VARCHAR(255), outcome VARCHAR(255));","completion":"INSERT INTO flight_safety (flight_id, flight_date, carrier, event, outcome) VALUES (30, '2023-03-01', 'SpaceX', 'Emergency Landing', 'Success');"}
{"prompt":"What are the names of satellites launched by Indian organizations after 2010? with given SQL schema CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(50), LaunchDate DATE, CountryOfOrigin VARCHAR(50), Manufacturer VARCHAR(50)); INSERT INTO Satellites (SatelliteID, Name, LaunchDate, CountryOfOrigin, Manufacturer) VALUES (3, 'GSAT-12', '2011-07-15', 'India', 'ISRO');","completion":"SELECT Name FROM Satellites WHERE CountryOfOrigin = 'India' AND LaunchDate > '2010-01-01';"}
{"prompt":"Delete the 'Galapagos Islands' habitat record in the 'habitat_preservation' table with given SQL schema CREATE TABLE habitat_preservation (id INT PRIMARY KEY, location VARCHAR(50), size_acres FLOAT, preservation_status VARCHAR(50), protected_species VARCHAR(50));","completion":"DELETE FROM habitat_preservation WHERE location = 'Galapagos Islands';"}
{"prompt":"How many animals have been successfully relocated to their natural habitats in South America? with given SQL schema CREATE TABLE Relocation (AnimalID INT, AnimalName VARCHAR(50), Success INT, Location VARCHAR(50)); INSERT INTO Relocation (AnimalID, AnimalName, Success, Location) VALUES (1, 'Jaguar', 120, 'South America'); INSERT INTO Relocation (AnimalID, AnimalName, Success, Location) VALUES (2, 'Anaconda', 150, 'South America');","completion":"SELECT SUM(Success) FROM Relocation WHERE Location = 'South America';"}
{"prompt":"What was the total CO2 emissions for fish feed production in Chile in 2020? with given SQL schema CREATE TABLE fish_feed_production (country VARCHAR(50), year INT, co2_emissions FLOAT);","completion":"SELECT SUM(co2_emissions) FROM fish_feed_production WHERE country = 'Chile' AND year = 2020;"}
{"prompt":"What is the total funding from corporations for performing arts programs in the last 5 years? with given SQL schema CREATE TABLE Funding (funding_id INT, source VARCHAR(255), amount DECIMAL(10, 2), date DATE); CREATE TABLE Programs (program_id INT, name VARCHAR(255), category VARCHAR(255));","completion":"SELECT SUM(F.amount) FROM Funding F JOIN Programs P ON 1=1 WHERE F.source LIKE '%Corporation%' AND F.date >= DATE(CURRENT_DATE) - INTERVAL 5 YEAR AND P.category = 'Performing Arts';"}
{"prompt":"What is the total number of construction workers in 'Solar Ranch'? with given SQL schema CREATE TABLE Construction_Workers (worker_id INT, name VARCHAR(30), hours_worked FLOAT, location VARCHAR(20)); INSERT INTO Construction_Workers VALUES (1, 'Maria Garcia', 150.25, 'Solar Ranch'), (2, 'James Brown', 200.50, 'Eco City'), (3, 'Fatima Alvarez', 300.75, 'Solar Ranch'), (4, 'Tariq Patel', 250.50, 'Solar Ranch');","completion":"SELECT COUNT(DISTINCT worker_id) FROM Construction_Workers WHERE location = 'Solar Ranch';"}
{"prompt":"Calculate the total billing amount for all cases in the database. with given SQL schema CREATE TABLE case_data (case_type VARCHAR(20), billing_amount DECIMAL(10,2)); INSERT INTO case_data (case_type, billing_amount) VALUES ('Civil', 5000.00), ('Criminal', 3000.00), ('Family', 6000.00);","completion":"SELECT SUM(billing_amount) as total_billing FROM case_data;"}
{"prompt":"Find the maximum billing amount for cases with a 'Non-Precedential' precedent type? with given SQL schema CREATE TABLE cases (case_id INT, precedent_type VARCHAR(20), billing_amount FLOAT); INSERT INTO cases (case_id, precedent_type, billing_amount) VALUES (1, 'Precedential', 5000), (2, 'Non-Precedential', 3000), (3, 'Precedential', 7000), (4, 'Non-Precedential', 8000), (5, 'Non-Precedential', 9000);","completion":"SELECT MAX(billing_amount) FROM cases WHERE precedent_type = 'Non-Precedential';"}
{"prompt":"What is the average billing rate for attorneys in a particular region? with given SQL schema CREATE TABLE Attorneys (AttorneyID INT PRIMARY KEY, Region VARCHAR(255), HourlyRate DECIMAL(5,2)); INSERT INTO Attorneys (AttorneyID, Region, HourlyRate) VALUES (1, 'Northeast', 300.00), (2, 'Southeast', 250.00), (3, 'Northeast', 350.00);","completion":"SELECT AVG(HourlyRate) FROM Attorneys WHERE Region = 'Northeast';"}
{"prompt":"What are the names and safety scores of all green chemicals? with given SQL schema CREATE TABLE chemicals (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), safety_score INT);","completion":"SELECT c.name, c.safety_score FROM chemicals c WHERE c.category = 'green';"}
{"prompt":"What is the percentage of the population that has access to clean water in each continent? with given SQL schema CREATE TABLE water_data (id INT, country VARCHAR(50), continent CHAR(2), access_to_clean_water BOOLEAN); INSERT INTO water_data VALUES (1, 'Canada', 'NA', true), (2, 'Mexico', 'NA', false), (3, 'Brazil', 'SA', true), (4, 'Russia', 'EU', true);","completion":"SELECT continent, COUNT(*) FILTER (WHERE access_to_clean_water) * 100.0 \/ COUNT(*) AS percentage FROM water_data GROUP BY continent;"}
{"prompt":"Delete all companies from the 'DiverseCompanies' table that have not received any diversity recognition. with given SQL schema CREATE TABLE DiverseCompanies (id INT, name TEXT, country TEXT); CREATE TABLE DiversityRecognition (id INT, company_id INT, recognition_type TEXT); INSERT INTO DiverseCompanies (id, name, country) VALUES (1, 'No Recognition', 'Brazil');","completion":"DELETE FROM DiverseCompanies WHERE id NOT IN (SELECT company_id FROM DiversityRecognition)"}
{"prompt":"Insert a new innovation trend for \"GreenTech Solutions\": \"Artificial Intelligence in Renewable Energy\" with given SQL schema CREATE TABLE innovation (id INT PRIMARY KEY AUTO_INCREMENT, company_id INT, trend VARCHAR(255), impact FLOAT, innovation_date DATE);","completion":"INSERT INTO innovation (company_id, trend, impact) VALUES ((SELECT id FROM company WHERE name = 'GreenTech Solutions'), 'Artificial Intelligence in Renewable Energy', NULL);"}
{"prompt":"What is the average cost of disability-related equipment per student in the education department? with given SQL schema CREATE TABLE students (id INT, department VARCHAR(255)); INSERT INTO students (id, department) VALUES (1, 'education'), (2, 'engineering'), (3, 'education'); CREATE TABLE equipment (id INT, student_id INT, cost DECIMAL(10,2)); INSERT INTO equipment (id, student_id, cost) VALUES (1, 1, 500.00), (2, 1, 200.00), (3, 3, 300.00), (4, 3, 100.00), (5, 2, 700.00);","completion":"SELECT AVG(e.cost) as avg_cost FROM equipment e INNER JOIN students s ON e.student_id = s.id WHERE s.department = 'education';"}
{"prompt":"Insert new records in the marine_species table for species named 'Green Sea Turtle', 'Leatherback Sea Turtle', and 'Loggerhead Sea Turtle' with populations of 8000, 5000, and 3000 respectively with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(50), population INT);","completion":"INSERT INTO marine_species (name, population) VALUES ('Green Sea Turtle', 8000), ('Leatherback Sea Turtle', 5000), ('Loggerhead Sea Turtle', 3000);"}
{"prompt":"What is the maximum depth of all marine protected areas with a conservation status of 'Least Concern'? with given SQL schema CREATE TABLE marine_protected_areas (id INT, name VARCHAR(255), area_size FLOAT, avg_depth FLOAT, conservation_status VARCHAR(100)); INSERT INTO marine_protected_areas (id, name, area_size, avg_depth, conservation_status) VALUES (1, 'Coral Triangle', 518000, -200, 'Least Concern'), (2, 'Great Barrier Reef', 344400, -500, 'Critically Endangered'), (3, 'Galapagos Marine Reserve', 133000, -300, 'Endangered');","completion":"SELECT MAX(avg_depth) FROM marine_protected_areas WHERE conservation_status = 'Least Concern';"}
{"prompt":"Which organic cosmetic products were sold by suppliers with a sustainability score of 90 or higher and have a revenue of over $1000? with given SQL schema CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(100), product VARCHAR(100), country VARCHAR(100), sustainability_score INT); CREATE TABLE cosmetics_sales (id INT PRIMARY KEY, product VARCHAR(100), quantity INT, revenue FLOAT, supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); CREATE TABLE cosmetics (id INT PRIMARY KEY, product VARCHAR(100), organic BOOLEAN);","completion":"SELECT cs.product FROM cosmetics_sales cs JOIN suppliers s ON cs.supplier_id = s.id JOIN cosmetics c ON cs.product = c.product WHERE c.organic = TRUE AND s.sustainability_score >= 90 AND cs.revenue > 1000;"}
{"prompt":"What is the count of emergency incidents for each type, partitioned by emergency response team and ordered by the total? with given SQL schema CREATE TABLE emergency_incidents (id INT, incident_type VARCHAR(255), response_team VARCHAR(255), incident_count INT); INSERT INTO emergency_incidents (id, incident_type, response_team, incident_count) VALUES (1, 'Medical', 'Team A', 100), (2, 'Fire', 'Team B', 50), (3, 'Rescue', 'Team A', 80), (4, 'Medical', 'Team B', 200);","completion":"SELECT incident_type, response_team, COUNT(*) as incident_count FROM emergency_incidents GROUP BY incident_type, response_team ORDER BY incident_count DESC;"}
{"prompt":"Delete all records from the 'threat_intelligence' table for the country of Russia with given SQL schema threat_intelligence(threat_id, country, category, sub_category, description, threat_level)","completion":"DELETE FROM threat_intelligence WHERE country = 'Russia';"}
{"prompt":"What is the maximum number of days of downtime experienced by military equipment in the last 6 months? with given SQL schema CREATE TABLE Equipment (id INT, name VARCHAR(100), downtime DECIMAL(10,2)); INSERT INTO Equipment (id, name, downtime) VALUES (1, 'Tank', 5), (2, 'Fighter Jet', 10), (3, 'Helicopter', 15);","completion":"SELECT MAX(downtime) FROM Equipment WHERE downtime >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"prompt":"Identify the top 3 rural counties with the highest percentage of residents who have been vaccinated against influenza. with given SQL schema CREATE TABLE county (name VARCHAR(50), population INT, flu_vaccinations INT); INSERT INTO county (name, population, flu_vaccinations) VALUES ('Woodland', 5000, 3000); INSERT INTO county (name, population, flu_vaccinations) VALUES ('Prairie', 6000, 4500); INSERT INTO county (name, population, flu_vaccinations) VALUES ('Mountain', 7000, 5500); INSERT INTO county (name, population, flu_vaccinations) VALUES ('Seaside', 8000, 6500);","completion":"SELECT name, (flu_vaccinations * 100.0 \/ population) AS percentage FROM county ORDER BY percentage DESC LIMIT 3;"}
{"prompt":"How many social impact investments were made in 'Asia' in 2019? with given SQL schema CREATE TABLE investments (id INT, location VARCHAR(50), investment_year INT, investment_type VARCHAR(20)); INSERT INTO investments (id, location, investment_year, investment_type) VALUES (1, 'Asia', 2019, 'social impact'), (2, 'Europe', 2018, 'social impact'), (3, 'Asia', 2019, 'traditional'), (4, 'North America', 2020, 'social impact');","completion":"SELECT COUNT(*) FROM investments WHERE location = 'Asia' AND investment_year = 2019 AND investment_type = 'social impact';"}
{"prompt":"Identify the intelligence operations that were conducted in the last 3 months, and rank them based on their budget. with given SQL schema CREATE TABLE intel_ops_dates (id INT, operation VARCHAR, budget INT, op_date DATE); INSERT INTO intel_ops_dates (id, operation, budget, op_date) VALUES (1, 'Operation Red Folder', 5000000, '2022-04-01'), (2, 'Operation Black Vault', 7000000, '2022-02-15'), (3, 'Operation Blue Sail', 6000000, '2022-01-01');","completion":"SELECT operation, budget, ROW_NUMBER() OVER (ORDER BY budget DESC, op_date DESC) as rank FROM intel_ops_dates WHERE op_date >= DATEADD(month, -3, GETDATE());"}
{"prompt":"How many times has the song 'Bohemian Rhapsody' been streamed on Spotify and Apple Music? with given SQL schema CREATE TABLE song_streams (stream_id INT, song_title VARCHAR(100), platform VARCHAR(20), streams INT); INSERT INTO song_streams (stream_id, song_title, platform, streams) VALUES (1, 'Bohemian Rhapsody', 'Spotify', 1000000), (2, 'Bohemian Rhapsody', 'Apple Music', 500000);","completion":"SELECT SUM(s.streams) as total_streams FROM song_streams s WHERE s.song_title = 'Bohemian Rhapsody';"}
{"prompt":"What was the total amount donated by individuals in the \"Arts & Culture\" program in the year 2020? with given SQL schema CREATE TABLE Donations (id INT, donor VARCHAR(50), program VARCHAR(50), amount DECIMAL(10,2), donation_date DATE); INSERT INTO Donations (id, donor, program, amount, donation_date) VALUES (1, 'John Doe', 'Arts & Culture', 500.00, '2020-01-01');","completion":"SELECT SUM(amount) FROM Donations WHERE program = 'Arts & Culture' AND YEAR(donation_date) = 2020 AND donor NOT IN ('Organizations','Companies');"}
{"prompt":"How many professional development courses were completed by teachers in the \"Westside\" school in 2019? with given SQL schema CREATE TABLE teachers (teacher_id INT, school VARCHAR(20), courses_completed INT, year INT); INSERT INTO teachers (teacher_id, school, courses_completed, year) VALUES (1, 'Westside', 12, 2019), (2, 'Westside', 14, 2019), (3, 'Westside', 9, 2019);","completion":"SELECT SUM(courses_completed) FROM teachers WHERE school = 'Westside' AND year = 2019;"}
{"prompt":"Insert new teacher records for 'Arizona' and 'Nevada' who have completed their professional development with given SQL schema CREATE TABLE NewTeachers (TeacherID INT, State VARCHAR(10), ProfessionalDevelopment VARCHAR(10)); INSERT INTO NewTeachers (TeacherID, State, ProfessionalDevelopment) VALUES (1, 'AZ', 'Completed'), (2, 'NV', 'Completed');","completion":"INSERT INTO NewTeachers (TeacherID, State, ProfessionalDevelopment) VALUES (3, 'Arizona', 'Completed'), (4, 'Nevada', 'Completed');"}
{"prompt":"What is the total energy consumption of residential and commercial buildings in Australia in 2020? with given SQL schema CREATE TABLE EnergyConsumption (Sector TEXT, Year INT, Consumption NUMBER); INSERT INTO EnergyConsumption (Sector, Year, Consumption) VALUES ('Residential', 2020, 120000), ('Commercial', 2020, 180000), ('Industrial', 2020, 240000); CREATE TABLE Emissions (Sector TEXT, Year INT, Emissions NUMBER); INSERT INTO Emissions (Sector, Year, Emissions) VALUES ('Residential', 2020, 3000), ('Commercial', 2020, 6000), ('Industrial', 2020, 9000);","completion":"SELECT EnergyConsumption.Sector, SUM(EnergyConsumption.Consumption) AS Total_Energy_Consumption FROM EnergyConsumption WHERE EnergyConsumption.Sector IN ('Residential', 'Commercial') AND EnergyConsumption.Year = 2020 GROUP BY EnergyConsumption.Sector;"}
{"prompt":"What is the total installed capacity of solar farms in China and Spain? with given SQL schema CREATE TABLE solar_farm (id INT, country VARCHAR(20), name VARCHAR(50), capacity FLOAT); INSERT INTO solar_farm (id, country, name, capacity) VALUES (1, 'China', 'Solarfarm 1', 200.5), (2, 'Spain', 'Solarfarm 2', 100.6), (3, 'China', 'Solarfarm 3', 150.7);","completion":"SELECT SUM(capacity) FROM solar_farm WHERE country IN ('China', 'Spain');"}
{"prompt":"What is the production quantity for 'Well B'? with given SQL schema CREATE TABLE well_quantities (well_name TEXT, production_quantity INT); INSERT INTO well_quantities (well_name, production_quantity) VALUES ('Well A', 4000), ('Well B', 5000), ('Well C', 6000);","completion":"SELECT production_quantity FROM well_quantities WHERE well_name = 'Well B';"}
{"prompt":"Find the number of matches played at home and away for each team, and the win\/loss ratio for home and away matches, in the football_matches dataset. with given SQL schema CREATE TABLE football_matches (team VARCHAR(50), location VARCHAR(50), result VARCHAR(50));","completion":"SELECT team, COUNT(location) as total_matches, SUM(CASE WHEN result = 'win' AND location = 'home' THEN 1 ELSE 0 END) as home_wins, SUM(CASE WHEN result = 'loss' AND location = 'home' THEN 1 ELSE 0 END) as home_losses, SUM(CASE WHEN result = 'win' AND location = 'away' THEN 1 ELSE 0 END) as away_wins, SUM(CASE WHEN result = 'loss' AND location = 'away' THEN 1 ELSE 0 END) as away_losses FROM football_matches GROUP BY team;"}
{"prompt":"What is the total points scored by a player? with given SQL schema CREATE TABLE players (player_id INT, player_name TEXT); CREATE TABLE points (point_id INT, player_id INT, points INT);","completion":"SELECT p.player_name, SUM(p.points) as total_points FROM points p GROUP BY p.player_name;"}
{"prompt":"Delete all records in the \"ai_ethics\" table where the \"region\" is \"Europe\" with given SQL schema CREATE TABLE ai_ethics (company TEXT, region TEXT, guidelines TEXT); INSERT INTO ai_ethics (company, region, guidelines) VALUES ('Microsoft', 'North America', 'Ethical AI guidelines for AI development'); INSERT INTO ai_ethics (company, region, guidelines) VALUES ('Google', 'Europe', 'AI ethical guidelines for AI usage'); INSERT INTO ai_ethics (company, region, guidelines) VALUES ('IBM', 'Asia', 'AI ethical guidelines for AI deployment');","completion":"DELETE FROM ai_ethics WHERE region = 'Europe';"}
{"prompt":"List all organizations that have received funding for ethical AI from government sources, but not from private sources. with given SQL schema CREATE TABLE organizations (org_id INT, name VARCHAR(50), gov_funding BOOLEAN, private_funding BOOLEAN); INSERT INTO organizations (org_id, name, gov_funding, private_funding) VALUES (1, 'Ethical AI Corp.', TRUE, FALSE), (2, 'AI for Good Inc.', FALSE, TRUE), (3, 'Government AI Initiative', TRUE, FALSE), (4, 'Non-profit AI', FALSE, FALSE);","completion":"SELECT name FROM organizations WHERE gov_funding = TRUE AND private_funding = FALSE;"}
{"prompt":"What is the average score for AI tools designed for social good? with given SQL schema CREATE TABLE ai_tools (id INT, name TEXT, type TEXT, score FLOAT); INSERT INTO ai_tools (id, name, type, score) VALUES (1, 'ToolA', 'SocialGood', 4.2), (2, 'ToolB', 'SocialGood', 4.6), (3, 'ToolC', 'SocialGood', 4.9);","completion":"SELECT AVG(score) FROM ai_tools WHERE type = 'SocialGood';"}
{"prompt":"What is the minimum budget required for digital divide projects in Africa? with given SQL schema CREATE TABLE projects (id INT, name VARCHAR(50), region VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO projects (id, name, region, budget) VALUES (1, 'ConnectAfrica', 'Africa', 100000.00), (2, 'DigitalDivideAfrica', 'Africa', 200000.00);","completion":"SELECT MIN(budget) FROM projects WHERE region = 'Africa' AND name LIKE '%digital divide%';"}
{"prompt":"What is the total number of posts created by users from Germany, grouped by age and gender? with given SQL schema CREATE TABLE users (user_id INT, age INT, gender VARCHAR(10), country VARCHAR(10)); INSERT INTO users (user_id, age, gender, country) VALUES (101, 25, 'Female', 'Germany'), (102, 35, 'Male', 'France'); CREATE TABLE posts (post_id INT, user_id INT, post_type VARCHAR(20)); INSERT INTO posts (post_id, user_id, post_type) VALUES (1, 101, 'Text'), (2, 102, 'Image');","completion":"SELECT u.age, u.gender, COUNT(*) AS total_posts FROM users u INNER JOIN posts p ON u.user_id = p.user_id WHERE u.country = 'Germany' GROUP BY u.age, u.gender;"}
{"prompt":"What is the total revenue from ads targeting users interested in veganism in Q3 2022? with given SQL schema CREATE TABLE ads (id INT, user INT, platform VARCHAR(50), target VARCHAR(50), start_date DATE, end_date DATE, revenue DECIMAL(10, 2));","completion":"SELECT SUM(revenue) FROM ads WHERE target = 'veganism' AND platform IN ('Facebook', 'Instagram') AND start_date BETWEEN '2022-07-01' AND '2022-09-30';"}
{"prompt":"How many unique customers made sustainable clothing purchases in Asia? with given SQL schema CREATE TABLE Customers (id INT, name VARCHAR(50), sustainable_purchase_date DATE, location VARCHAR(50)); INSERT INTO Customers (id, name, sustainable_purchase_date, location) VALUES (1, 'Alice', '2022-01-01', 'USA'), (2, 'Bob', '2022-02-15', 'China'), (3, 'Charlie', '2022-03-05', 'India'), (4, 'David', '2022-04-10', 'Canada'), (5, 'Eve', '2022-05-25', 'Vietnam'), (6, 'Frank', '2022-06-12', 'Mexico');","completion":"SELECT COUNT(DISTINCT id) FROM Customers WHERE EXISTS (SELECT 1 FROM Sales WHERE Customers.id = Sales.customer_id AND material IN ('Organic Cotton', 'Hemp', 'Recycled Polyester', 'Tencel', 'Bamboo') AND location IN ('China', 'India', 'Vietnam'));"}
{"prompt":"Average financial wellbeing score for programs in the Southern region with given SQL schema CREATE TABLE financial_wellbeing_programs (id INT, score FLOAT, region VARCHAR(255));","completion":"SELECT AVG(score) FROM financial_wellbeing_programs WHERE region = 'Southern';"}
{"prompt":"What is the total number of Shariah-compliant financial institutions in the United Arab Emirates? with given SQL schema CREATE TABLE shariah_compliant_finance (id INT, institution_name VARCHAR(255), country VARCHAR(255)); INSERT INTO shariah_compliant_finance (id, institution_name, country) VALUES (1, 'Dubai Islamic Bank', 'United Arab Emirates'), (2, 'Abu Dhabi Islamic Bank', 'United Arab Emirates'), (3, 'Emirates Islamic', 'United Arab Emirates');","completion":"SELECT COUNT(*) FROM shariah_compliant_finance WHERE country = 'United Arab Emirates';"}
{"prompt":"Show the number of volunteers for each program, grouped by program type with given SQL schema CREATE TABLE programs (id INT, name VARCHAR(50), type VARCHAR(20)); CREATE TABLE volunteers (id INT, program_id INT, name VARCHAR(50));","completion":"SELECT p.type, COUNT(v.id) as num_volunteers FROM programs p JOIN volunteers v ON p.id = v.program_id GROUP BY p.type;"}
{"prompt":"Which suppliers provide the most \"Free-Range Chicken\" and \"Grass-Fed Beef\"? with given SQL schema CREATE TABLE Suppliers(supplier VARCHAR(20), product VARCHAR(20), quantity INT); INSERT INTO Suppliers(supplier, product, quantity) VALUES('Supplier A', 'Free-Range Chicken', 100), ('Supplier B', 'Grass-Fed Beef', 150), ('Supplier A', 'Grass-Fed Beef', 75);","completion":"SELECT supplier, product, SUM(quantity) as total_quantity FROM Suppliers GROUP BY supplier, product ORDER BY SUM(quantity) DESC;"}
{"prompt":"What is the total weight of items shipped to South America? with given SQL schema CREATE TABLE ShipmentWeights(id INT, item_name VARCHAR(50), shipment_weight INT, destination_continent VARCHAR(50)); INSERT INTO ShipmentWeights(id, item_name, shipment_weight, destination_continent) VALUES (1, 'Item 1', 100, 'South America'), (2, 'Item 2', 120, 'South America');","completion":"SELECT SUM(shipment_weight) FROM ShipmentWeights WHERE destination_continent = 'South America';"}
{"prompt":"List all biotech startups that received funding in 2022 and their respective funding amounts. with given SQL schema CREATE TABLE biotech_startups (name TEXT, funding FLOAT, date DATE); INSERT INTO biotech_startups (name, funding, date) VALUES ('StartupA', 3500000, '2022-02-28'); INSERT INTO biotech_startups (name, funding, date) VALUES ('StartupB', 4500000, '2022-07-12');","completion":"SELECT name, funding FROM biotech_startups WHERE date BETWEEN '2022-01-01' AND '2022-12-31';"}
{"prompt":"Percentage of people living in urban areas in each Asian country in 2020. with given SQL schema CREATE TABLE population (id INT, country VARCHAR(50), urban BOOLEAN, year INT); INSERT INTO population (id, country, urban, year) VALUES (1, 'China', true, 2020), (2, 'India', false, 2020), (3, 'Indonesia', true, 2020), (4, 'Pakistan', false, 2020), (5, 'Bangladesh', true, 2020);","completion":"SELECT country, 100.0 * SUM(CASE WHEN urban = true THEN 1 ELSE 0 END) \/ COUNT(*) AS percentage FROM population WHERE year = 2020 GROUP BY country;"}
{"prompt":"What are the names and research interests of all faculty members who have published in the Journal of Computer Science? with given SQL schema CREATE TABLE Faculty (FacultyID INT, Name VARCHAR(50), ResearchInterest VARCHAR(50)); INSERT INTO Faculty VALUES (1, 'John Doe', 'Machine Learning'); CREATE TABLE Publications (PublicationID INT, Title VARCHAR(50), FacultyID INT); INSERT INTO Publications VALUES (1, 'Journal of Computer Science', 1);","completion":"SELECT Faculty.Name, Faculty.ResearchInterest FROM Faculty INNER JOIN Publications ON Faculty.FacultyID = Publications.FacultyID WHERE Publications.Title = 'Journal of Computer Science';"}
{"prompt":"Find renewable energy projects that are not located in the top 5 most populous cities in the world. with given SQL schema CREATE TABLE renewable_projects (project_name VARCHAR(255), city VARCHAR(255)); CREATE TABLE city_populations (city VARCHAR(255), population INT);","completion":"SELECT project_name FROM renewable_projects RP WHERE city NOT IN (SELECT city FROM (SELECT city, ROW_NUMBER() OVER (ORDER BY population DESC) as rank FROM city_populations) CP WHERE rank <= 5);"}
{"prompt":"Delete the record of the community health worker with the highest age in 'ON' province. with given SQL schema CREATE TABLE CommunityHealthWorkersCanada (WorkerID INT, Age INT, Gender VARCHAR(1), Province VARCHAR(2)); INSERT INTO CommunityHealthWorkersCanada (WorkerID, Age, Gender, Province) VALUES (1, 35, 'F', 'ON'), (2, 40, 'M', 'QC'), (3, 45, 'F', 'BC'), (4, 50, 'M', 'AB'), (5, 55, 'F', 'ON');","completion":"DELETE FROM CommunityHealthWorkersCanada WHERE WorkerID = (SELECT WorkerID FROM (SELECT WorkerID, ROW_NUMBER() OVER (PARTITION BY Province ORDER BY Age DESC) rn FROM CommunityHealthWorkersCanada) t WHERE t.rn = 1 AND t.Province = 'ON');"}
{"prompt":"Update the race of patient with ID 1 to 'Native American' in the patients table. with given SQL schema CREATE TABLE patients (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), race VARCHAR(20), ethnicity VARCHAR(30)); INSERT INTO patients (id, name, age, gender, race, ethnicity) VALUES (1, 'John Doe', 35, 'Male', 'Caucasian', 'Non-Hispanic'), (2, 'Jane Smith', 40, 'Female', 'African American', 'African American'), (3, 'Maria Garcia', 45, 'Female', 'Hispanic', 'Hispanic'), (4, 'David Kim', 50, 'Male', 'Asian', 'Asian');","completion":"UPDATE patients SET race = 'Native American' WHERE id = 1;"}
{"prompt":"How many eco-friendly hotels are there in Canada? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT); CREATE TABLE eco_hotels (hotel_id INT, is_eco BOOLEAN); INSERT INTO hotels (hotel_id, hotel_name, country) VALUES (1, 'Eco-Hotel', 'Canada'), (2, 'Urban-Hotel', 'Canada'); INSERT INTO eco_hotels (hotel_id, is_eco) VALUES (1, true), (2, false);","completion":"SELECT COUNT(*) FROM hotels INNER JOIN eco_hotels ON hotels.hotel_id = eco_hotels.hotel_id WHERE is_eco = true AND country = 'Canada';"}
{"prompt":"What is the average revenue generated from virtual tours in Greece in 2021? with given SQL schema CREATE TABLE virtual_tours_greece (site_id INT, site_name TEXT, country TEXT, year INT, revenue INT); INSERT INTO virtual_tours_greece (site_id, site_name, country, year, revenue) VALUES (1, 'Acropolis', 'Greece', 2021, 4000), (2, 'Parthenon', 'Greece', 2021, 6000);","completion":"SELECT AVG(revenue) FROM virtual_tours_greece WHERE country = 'Greece' AND year = 2021;"}
{"prompt":"What is the revenue generated from cultural heritage sites in Tokyo's Shibuya district? with given SQL schema CREATE TABLE sites (id INT, name TEXT, city TEXT, region TEXT, revenue FLOAT); INSERT INTO sites (id, name, city, region, revenue) VALUES (1, 'Site1', 'Tokyo', 'Shibuya', 1000.0), (2, 'Site2', 'Tokyo', 'Shibuya', 1200.0);","completion":"SELECT SUM(revenue) FROM sites WHERE city = 'Tokyo' AND region = 'Shibuya';"}
{"prompt":"Show the number of heritage sites in each country, ordered by the number of heritage sites in descending order. with given SQL schema CREATE TABLE heritage_sites (site_id INT, site_name TEXT, country TEXT, year_listed INT); INSERT INTO heritage_sites (site_id, site_name, country, year_listed) VALUES (1, 'Machu Picchu', 'Peru', 1983), (2, 'Petra', 'Jordan', 1985);","completion":"SELECT country, COUNT(*) as num_heritage_sites FROM heritage_sites GROUP BY country ORDER BY num_heritage_sites DESC;"}
{"prompt":"What is the average number of heritage sites per country in Asia? with given SQL schema CREATE TABLE continents (id INT, name TEXT); INSERT INTO continents (id, name) VALUES (1, 'Asia'), (2, 'Africa'); CREATE TABLE countries (id INT, continent_id INT, name TEXT); INSERT INTO countries (id, continent_id, name) VALUES (1, 1, 'China'), (2, 1, 'India'), (3, 2, 'Nigeria'); CREATE TABLE heritage_sites (id INT, country_id INT, name TEXT); INSERT INTO heritage_sites (id, country_id, name) VALUES (1, 1, 'Great Wall'), (2, 1, 'Forbidden City'), (3, 2, 'Taj Mahal'), (4, 3, 'Zuma Rock');","completion":"SELECT c.continent_id, AVG(COUNT(*)) FROM countries c JOIN heritage_sites hs ON c.id = hs.country_id WHERE c.continent_id = 1 GROUP BY c.continent_id;"}
{"prompt":"Identify the number of mental health conditions per patient with given SQL schema CREATE TABLE patients_conditions (patient_id INT, condition VARCHAR(20)); INSERT INTO patients_conditions (patient_id, condition) VALUES (1, 'depression'), (1, 'anxiety');","completion":"SELECT patient_id, COUNT(condition) FROM patients_conditions GROUP BY patient_id;"}
{"prompt":"What is the average age of patients diagnosed with depression in Mexico? with given SQL schema CREATE SCHEMA mental_health; USE mental_health; CREATE TABLE patients (patient_id INT, diagnosis VARCHAR(50), age INT, country VARCHAR(50)); INSERT INTO patients VALUES (1, 'depression', 35, 'Mexico');","completion":"SELECT AVG(age) FROM patients WHERE diagnosis = 'depression' AND country = 'Mexico';"}
{"prompt":"What is the average age of patients who received therapy in 'clinic_a' and 'clinic_b'? with given SQL schema CREATE TABLE clinic_a (patient_id INT, age INT, therapy_received BOOLEAN); INSERT INTO clinic_a (patient_id, age, therapy_received) VALUES (1, 35, true), (2, 42, true), (3, 28, false); CREATE TABLE clinic_b (patient_id INT, age INT, therapy_received BOOLEAN); INSERT INTO clinic_b (patient_id, age, therapy_received) VALUES (4, 50, true), (5, 32, false), (6, 45, true);","completion":"SELECT AVG(age) FROM (SELECT age FROM clinic_a WHERE therapy_received = true UNION ALL SELECT age FROM clinic_b WHERE therapy_received = true) AS combined_clinics;"}
{"prompt":"What is the average rating of eco-friendly hotels in Costa Rica? with given SQL schema CREATE TABLE eco_hotels (hotel_id INT, name TEXT, country TEXT, rating FLOAT); INSERT INTO eco_hotels (hotel_id, name, country, rating) VALUES (1, 'Hotel Aguas Claras', 'Costa Rica', 4.6), (2, 'Hotel Cascada Verde', 'Costa Rica', 4.8);","completion":"SELECT AVG(rating) FROM eco_hotels WHERE country = 'Costa Rica';"}
{"prompt":"Which sustainable tourism initiatives in Tokyo, Japan, were launched in the last year? with given SQL schema CREATE TABLE if not exists countries (country_id INT, name TEXT); INSERT INTO countries (country_id, name) VALUES (1, 'Japan'); CREATE TABLE if not exists cities (city_id INT, name TEXT, country_id INT, population INT); INSERT INTO cities (city_id, name, country_id, population) VALUES (1, 'Tokyo', 1, 9000000); CREATE TABLE if not exists tourism_initiatives (initiative_id INT, name TEXT, city_id INT, launch_date DATE, is_sustainable BOOLEAN); INSERT INTO tourism_initiatives (initiative_id, name, city_id, launch_date, is_sustainable) VALUES (1, 'Green Spaces Expansion', 1, '2021-04-01', TRUE), (2, 'Bicycle Sharing Program', 1, '2021-07-01', TRUE), (3, 'Smart Public Transport', 1, '2022-01-01', TRUE), (4, 'Historic Building Restoration', 1, '2022-03-15', FALSE);","completion":"SELECT name FROM tourism_initiatives WHERE city_id = (SELECT city_id FROM cities WHERE name = 'Tokyo' AND country_id = (SELECT country_id FROM countries WHERE name = 'Japan')) AND is_sustainable = TRUE AND launch_date >= (CURRENT_DATE - INTERVAL '1 year');"}
{"prompt":"Insert a new record into 'customer_preferences' for customer 101 and menu item 1 with a preference score of 90 with given SQL schema CREATE TABLE customer_preferences (customer_id INT, item_id INT, preference_score INT);","completion":"INSERT INTO customer_preferences (customer_id, item_id, preference_score) VALUES (101, 1, 90);"}
{"prompt":"Update the quantity of 'Local Cheese' to 45 in inventory. with given SQL schema CREATE TABLE inventory (id INT PRIMARY KEY, product VARCHAR(100), quantity INT); INSERT INTO inventory (id, product, quantity) VALUES (1, 'Fresh Mozzarella', 50), (2, 'Tomato Sauce', 100), (3, 'Romaine Lettuce', 30), (4, 'Free-Range Eggs', 60), (5, 'Local Cheese', 40);","completion":"UPDATE inventory SET quantity = 45 WHERE product = 'Local Cheese';"}
{"prompt":"What are the names and quantities of military equipment sold to India? with given SQL schema CREATE TABLE equipment_sales (id INT, equipment_name VARCHAR, quantity INT, country VARCHAR);","completion":"SELECT equipment_name, quantity FROM equipment_sales WHERE country = 'India';"}
{"prompt":"Determine the total production quantity of silver for mining sites in Mexico, between the dates '2017-05-01' and '2017-09-30', having less than 40 employees. with given SQL schema CREATE TABLE silver_mine_2 (site_id INT, country VARCHAR(50), num_employees INT, extraction_date DATE, quantity INT); INSERT INTO silver_mine_2 (site_id, country, num_employees, extraction_date, quantity) VALUES (1, 'Mexico', 35, '2017-05-02', 1200), (2, 'Mexico', 30, '2017-08-31', 1800), (3, 'Mexico', 37, '2017-07-04', 2200);","completion":"SELECT country, SUM(quantity) as total_silver_prod FROM silver_mine_2 WHERE num_employees < 40 AND country = 'Mexico' AND extraction_date >= '2017-05-01' AND extraction_date <= '2017-09-30' GROUP BY country;"}
{"prompt":"Find the number of employees by department in the mining company with given SQL schema CREATE TABLE department (id INT, name VARCHAR(255), employees INT); INSERT INTO department (id, name, employees) VALUES (1, 'Mining', 300), (2, 'Engineering', 250), (3, 'Human Resources', 50);","completion":"SELECT d.name, COUNT(d.employees) as num_employees FROM department d GROUP BY d.name;"}
{"prompt":"What is the average revenue for each genre, excluding genres with less than 3 concerts? with given SQL schema CREATE SCHEMA if not exists music_schema;CREATE TABLE if not exists concerts (id INT, name VARCHAR, city VARCHAR, genre VARCHAR, revenue FLOAT);INSERT INTO concerts (id, name, city, genre, revenue) VALUES (1, 'Music Festival', 'New York', 'Pop', 50000.00), (2, 'Rock Concert', 'Chicago', 'Rock', 75000.00), (3, 'Jazz Festival', 'Los Angeles', 'Jazz', 125000.00), (4, 'Hip Hop Concert', 'Miami', 'Hip Hop', 60000.00), (5, 'Country Music Festival', 'Nashville', 'Country', 40000.00), (6, 'EDM Festival', 'Las Vegas', 'EDM', 80000.00), (7, 'Pop Concert', 'Los Angeles', 'Pop', 70000.00), (8, 'Rock Festival', 'Chicago', 'Rock', 65000.00), (9, 'Jazz Concert', 'Los Angeles', 'Jazz', 110000.00), (10, 'Hip Hop Festival', 'Miami', 'Hip Hop', 75000.00);","completion":"SELECT genre, AVG(revenue) as avg_revenue FROM music_schema.concerts GROUP BY genre HAVING COUNT(*) >= 3;"}
{"prompt":"Get the average word count for articles published before 2020 in the 'news_articles' table with given SQL schema CREATE TABLE news_articles (article_id INT, author_name VARCHAR(50), title VARCHAR(100), published_date DATE, word_count INT);","completion":"SELECT AVG(word_count) as average_word_count FROM news_articles WHERE published_date < '2020-01-01';"}
{"prompt":"What are the total donations received by organizations located in California, grouped by their mission areas? with given SQL schema CREATE TABLE organizations (id INT, name VARCHAR(100), mission_area VARCHAR(50), state VARCHAR(50)); INSERT INTO organizations VALUES (1, 'Organization A', 'Education', 'California'); INSERT INTO organizations VALUES (2, 'Organization B', 'Health', 'California'); CREATE TABLE donations (id INT, organization_id INT, amount DECIMAL(10, 2)); INSERT INTO donations VALUES (1, 1, 5000); INSERT INTO donations VALUES (2, 1, 7500); INSERT INTO donations VALUES (3, 2, 10000);","completion":"SELECT o.mission_area, SUM(d.amount) as total_donations FROM organizations o INNER JOIN donations d ON o.id = d.organization_id WHERE o.state = 'California' GROUP BY o.mission_area;"}
{"prompt":"Find the total biomass of all shark species in the Southern Ocean. with given SQL schema CREATE TABLE shark_species (name TEXT, location TEXT, biomass REAL); INSERT INTO shark_species (name, location, biomass) VALUES ('Great White Shark', 'Southern Ocean', '1000'), ('Hammerhead Shark', 'Atlantic Ocean', '500');","completion":"SELECT SUM(biomass) FROM shark_species WHERE location = 'Southern Ocean';"}
{"prompt":"Insert a new record for a donor from Mexico with an amount of 7000. with given SQL schema CREATE TABLE donors (id INT, name TEXT, country TEXT, amount_donated DECIMAL(10,2)); INSERT INTO donors (id, name, country, amount_donated) VALUES (1, 'Alice', 'United States', 5000.00), (2, 'Bob', 'Canada', 6000.00), (3, 'Charlie', 'India', 4000.00);","completion":"INSERT INTO donors (name, country, amount_donated) VALUES ('David', 'Mexico', 7000);"}
{"prompt":"Update the resolution to 0.45 for the satellite image with id 1 with given SQL schema CREATE TABLE satellite_images (id INT PRIMARY KEY, image_url TEXT, resolution FLOAT, capture_date DATE); INSERT INTO satellite_images (id, image_url, resolution, capture_date) VALUES (1, 'https:\/\/example.com\/image1.jpg', 0.5, '2021-12-25'), (2, 'https:\/\/example.com\/image2.jpg', 0.7, '2021-12-26'), (3, 'https:\/\/example.com\/image3.jpg', 0.6, '2021-12-27');","completion":"UPDATE satellite_images SET resolution = 0.45 WHERE id = 1;"}
{"prompt":"How many citizen feedback records were recorded for each city in 2020? with given SQL schema CREATE TABLE Feedback (CityName VARCHAR(50), FeedbackID INT, Date DATE); INSERT INTO Feedback (CityName, FeedbackID, Date) VALUES ('CityA', 1, '2020-01-01'), ('CityA', 2, '2020-02-01'), ('CityB', 3, '2020-01-01'), ('CityB', 4, '2020-03-01'), ('CityC', 5, '2020-01-01');","completion":"SELECT CityName, COUNT(*) FROM Feedback WHERE Date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY CityName;"}
{"prompt":"What is the total budget allocated for housing and transportation services in 2021 across all regions, excluding the South? with given SQL schema CREATE TABLE Budget (Year INT, Service VARCHAR(20), Region VARCHAR(20), Amount DECIMAL(10,2)); INSERT INTO Budget (Year, Service, Region, Amount) VALUES (2021, 'Housing', 'Northeast', 75000.00), (2021, 'Transportation', 'South', 80000.00), (2021, 'Housing', 'West', 90000.00);","completion":"SELECT SUM(Amount) FROM Budget WHERE Year = 2021 AND (Service IN ('Housing', 'Transportation') AND Region != 'South');"}
{"prompt":"What is the total number of citizen feedback submissions received in each department in the last year, grouped by feedback type? with given SQL schema CREATE TABLE Feedback (Submission_Date DATE, Department VARCHAR(255), Feedback_Type VARCHAR(255), Submission_ID INT); INSERT INTO Feedback VALUES ('2022-01-01', 'Healthcare', 'Positive', 1), ('2022-02-01', 'Education', 'Negative', 2), ('2022-03-31', 'Healthcare', 'Neutral', 3), ('2022-04-01', 'Education', 'Positive', 4), ('2022-05-01', 'Transportation', 'Negative', 5);","completion":"SELECT Department, Feedback_Type, COUNT(*) OVER (PARTITION BY Department, Feedback_Type) AS Total_Submissions FROM Feedback WHERE Submission_Date >= DATEADD(year, -1, GETDATE());"}
{"prompt":"List all the Praseodymium production data from 2018 to 2020 with given SQL schema CREATE TABLE production_praseodymium (year INT, quantity INT); INSERT INTO production_praseodymium (year, quantity) VALUES (2015, 800), (2016, 900), (2017, 1000), (2018, 1200), (2019, 1400), (2020, 1600), (2021, 1800);","completion":"SELECT * FROM production_praseodymium WHERE year BETWEEN 2018 AND 2020;"}
{"prompt":"What is the minimum square footage of a co-owned property in the city of Boston? with given SQL schema CREATE TABLE properties (id INT, city VARCHAR(20), size INT, co_owned BOOLEAN); INSERT INTO properties (id, city, size, co_owned) VALUES (1, 'Boston', 1100, TRUE), (2, 'Boston', 1300, FALSE), (3, 'Boston', 1500, TRUE);","completion":"SELECT MIN(size) FROM properties WHERE city = 'Boston' AND co_owned = TRUE;"}
{"prompt":"What is the average carbon offset amount for carbon offset programs in the 'Energy Production' sector? with given SQL schema CREATE TABLE Carbon_Offset_Programs (id INT, sector VARCHAR(20), year INT, carbon_offset_amount INT); INSERT INTO Carbon_Offset_Programs (id, sector, year, carbon_offset_amount) VALUES (1, 'Transportation', 2018, 50000), (2, 'Energy Production', 2019, 75000), (3, 'Transportation', 2020, 65000), (4, 'Manufacturing', 2021, 80000), (5, 'Energy Production', 2020, 80000), (6, 'Energy Production', 2018, 60000);","completion":"SELECT AVG(carbon_offset_amount) FROM Carbon_Offset_Programs WHERE sector = 'Energy Production';"}
{"prompt":"Update the price for record with item_name 'Veggie Burger' to be 9.99 in the menu_items table with given SQL schema CREATE TABLE menu_items (item_name VARCHAR(255), price DECIMAL(5,2));","completion":"UPDATE menu_items SET price = 9.99 WHERE item_name = 'Veggie Burger';"}
{"prompt":"How many missions have been led by astronauts from underrepresented communities? with given SQL schema CREATE TABLE Astronauts (id INT, name VARCHAR(100), community VARCHAR(100)); CREATE TABLE Missions (id INT, leader_astronaut_id INT, name VARCHAR(100)); INSERT INTO Astronauts VALUES (1, 'Alexandria Ocasio-Cortez', 'Latino'); INSERT INTO Missions VALUES (1, 1, 'Mars Mission 1');","completion":"SELECT COUNT(*) FROM Missions INNER JOIN Astronauts ON Missions.leader_astronaut_id = Astronauts.id WHERE Astronauts.community <> 'Mainstream';"}
{"prompt":"How many spacecraft were launched by China in each year? with given SQL schema CREATE TABLE spacecraft_launches (id INT, country VARCHAR(50), year INT, quantity INT); INSERT INTO spacecraft_launches (id, country, year, quantity) VALUES (1, 'China', 2000, 1);","completion":"SELECT country, year, SUM(quantity) FROM spacecraft_launches WHERE country = 'China' GROUP BY country, year;"}
{"prompt":"What is the total number of spacecraft components produced by each manufacturer? with given SQL schema CREATE TABLE SpacecraftComponents (id INT, spacecraft_id INT, manufacturer TEXT, component_type TEXT); CREATE TABLE Spacecraft (id INT, name TEXT, manufacturer TEXT);","completion":"SELECT manufacturer, COUNT(*) FROM SpacecraftComponents GROUP BY manufacturer;"}
{"prompt":"How many critical vulnerabilities are in the HR department? with given SQL schema CREATE TABLE vulnerabilities (id INT, department VARCHAR(255), severity VARCHAR(255)); INSERT INTO vulnerabilities (id, department, severity) VALUES (1, 'HR', 'critical'), (2, 'IT', 'high'), (3, 'HR', 'medium'), (4, 'HR', 'low');","completion":"SELECT COUNT(*) FROM vulnerabilities WHERE department = 'HR' AND severity = 'critical';"}
{"prompt":"List all threat intelligence data related to the United States. with given SQL schema CREATE TABLE threat_intelligence (id INT, source VARCHAR(20), description TEXT, country VARCHAR(20)); INSERT INTO threat_intelligence (id, source, description, country) VALUES (1, 'NSA', 'Zero-day exploit', 'United States');","completion":"SELECT * FROM threat_intelligence WHERE country = 'United States';"}
{"prompt":"List the top 5 policyholders with the highest claim amounts in Texas. with given SQL schema CREATE TABLE policyholders (id INT, policyholder_name TEXT, state TEXT, age INT, gender TEXT); INSERT INTO policyholders (id, policyholder_name, state, age, gender) VALUES (1, 'John Doe', 'TX', 35, 'Male'); INSERT INTO policyholders (id, policyholder_name, state, age, gender) VALUES (2, 'Jane Smith', 'TX', 42, 'Female'); CREATE TABLE claims (id INT, policyholder_id INT, claim_amount INT); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (1, 1, 500); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (2, 2, 2000); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (3, 1, 800);","completion":"SELECT policyholders.policyholder_name, SUM(claims.claim_amount) AS total_claim_amount FROM claims JOIN policyholders ON claims.policyholder_id = policyholders.id WHERE policyholders.state = 'TX' GROUP BY policyholders.policyholder_name ORDER BY total_claim_amount DESC LIMIT 5;"}
{"prompt":"What is the average claim amount per region? with given SQL schema CREATE TABLE claims (id INT, policyholder_id INT, region VARCHAR(20), claim_amount DECIMAL(10,2)); INSERT INTO claims (id, policyholder_id, region, claim_amount) VALUES (1, 1, 'South', 1500.00), (2, 2, 'West', 3000.00), (3, 3, 'South', 500.00), (4, 4, 'East', 4500.00), (5, 1, 'South', 2000.00);","completion":"SELECT region, AVG(claim_amount) as avg_claim_amount FROM claims GROUP BY region;"}
{"prompt":"What is the total claim amount for policy number 1001? with given SQL schema CREATE TABLE claims (claim_id INT, policy_id INT, claim_amount DECIMAL); INSERT INTO claims (claim_id, policy_id, claim_amount) VALUES (1, 1001, 2500.00), (2, 1002, 3000.00), (3, 1003, 1500.00);","completion":"SELECT SUM(claim_amount) FROM claims WHERE policy_id = 1001;"}
{"prompt":"What is the adoption rate of electric vehicles in major cities? with given SQL schema CREATE TABLE ElectricVehicleAdoption (City VARCHAR(50), Make VARCHAR(50), Model VARCHAR(50), Year INT, Adoption DECIMAL(5,2)); INSERT INTO ElectricVehicleAdoption (City, Make, Model, Year, Adoption) VALUES ('Los Angeles', 'Tesla', 'Model 3', 2020, 25.3), ('New York', 'Chevrolet', 'Bolt', 2020, 12.6), ('Beijing', 'BYD', 'e5', 2020, 18.8), ('Berlin', 'Audi', 'e-Tron', 2020, 10.5), ('Tokyo', 'Nissan', 'Leaf', 2020, 15.2);","completion":"SELECT City, AVG(Adoption) as Avg_Adoption_Rate FROM ElectricVehicleAdoption GROUP BY City;"}
{"prompt":"Delete vessels from the 'Vessels' table with a cargo weight less than 3000 tons. with given SQL schema CREATE TABLE Vessels (ID INT PRIMARY KEY, Name TEXT, Category TEXT, CargoWeight FLOAT); INSERT INTO Vessels (ID, Name, Category, CargoWeight) VALUES (1, 'Cargo Ship 1', 'Cargo Ship', 5500), (2, 'Fishing Vessel 1', 'Fishing Vessel', 300), (3, 'Cargo Ship 2', 'Cargo Ship', 7000);","completion":"DELETE FROM Vessels WHERE CargoWeight < 3000;"}
{"prompt":"What is the total waste generation by region for the year 2020, including recyclables and non-recyclables? with given SQL schema CREATE TABLE WasteGeneration (region VARCHAR(255), waste_type VARCHAR(255), year INT, amount INT); INSERT INTO WasteGeneration (region, waste_type, year, amount) VALUES ('North', 'Recyclables', 2020, 15000), ('North', 'Non-Recyclables', 2020, 20000), ('South', 'Recyclables', 2020, 10000), ('South', 'Non-Recyclables', 2020, 25000), ('East', 'Recyclables', 2020, 20000), ('East', 'Non-Recyclables', 2020, 18000), ('West', 'Recyclables', 2020, 12000), ('West', 'Non-Recyclables', 2020, 22000);","completion":"SELECT SUM(amount) as TotalWaste, region FROM WasteGeneration WHERE year = 2020 GROUP BY region;"}
{"prompt":"What is the total water usage for all customers in the top 5 most populous counties in California? with given SQL schema CREATE TABLE customers (customer_id INT, county VARCHAR(50), water_usage FLOAT); INSERT INTO customers (customer_id, county, water_usage) VALUES (1, 'Los_Angeles', 5000), (2, 'San_Diego', 4000), (3, 'Orange', 6000), (4, 'Riverside', 7000), (5, 'San_Bernardino', 8000), (6, 'Ventura', 9000), (7, 'Santa_Barbara', 10000), (8, 'San_Luis_Obispo', 11000), (9, 'Monterey', 12000), (10, 'Alameda', 13000); CREATE TABLE counties (county VARCHAR(50), PRIMARY KEY (county)); INSERT INTO counties (county) VALUES ('Los_Angeles'), ('San_Diego'), ('Orange'), ('Riverside'), ('San_Bernardino'), ('Ventura'), ('Santa_Barbara'), ('San_Luis_Obispo'), ('Monterey'), ('Alameda');","completion":"SELECT SUM(customers.water_usage) FROM customers JOIN (SELECT county FROM counties GROUP BY county ORDER BY COUNT(*) DESC LIMIT 5) AS top_counties ON customers.county = top_counties.county;"}
{"prompt":"Identify the average age of all animals in the 'critically endangered' status with given SQL schema CREATE TABLE animals (id INT, name VARCHAR(50), status VARCHAR(20), age INT); INSERT INTO animals (id, name, status, age) VALUES (1, 'Tiger', 'Endangered', 10); INSERT INTO animals (id, name, status, age) VALUES (2, 'Elephant', 'Vulnerable', 30); INSERT INTO animals (id, name, status, age) VALUES (3, 'Rhino', 'Critically Endangered', 5);","completion":"SELECT AVG(age) FROM animals WHERE status = 'Critically Endangered';"}
{"prompt":"What is the average size of habitats in the 'habitat_preservation' table? with given SQL schema CREATE TABLE habitat_preservation (id INT, habitat_name VARCHAR(50), acres FLOAT); INSERT INTO habitat_preservation (id, habitat_name, acres) VALUES (1, 'Forest', 500.5), (2, 'Wetlands', 300.2), (3, 'Grasslands', 700.1);","completion":"SELECT AVG(acres) FROM habitat_preservation;"}
{"prompt":"What is the maximum age of all koalas in the 'australia' habitat? with given SQL schema CREATE TABLE habitats (name VARCHAR(255), animal_type VARCHAR(255), max_age DECIMAL(5,2)); INSERT INTO habitats (name, animal_type, max_age) VALUES ('australia', 'koala', 15.5);","completion":"SELECT max_age FROM habitats WHERE name = 'australia' AND animal_type = 'koala';"}
{"prompt":"What is the average price of cannabis concentrate per gram in Illinois in Q2 2022? with given SQL schema CREATE TABLE concentrate_prices (price DECIMAL(5,2), gram INT, state VARCHAR(20), quarter VARCHAR(10)); INSERT INTO concentrate_prices (price, gram, state, quarter) VALUES (30, 2, 'Illinois', 'Q2'), (32, 2, 'Illinois', 'Q2'), (28, 2, 'Illinois', 'Q2');","completion":"SELECT AVG(price \/ gram) as avg_price_per_gram FROM concentrate_prices WHERE state = 'Illinois' AND quarter = 'Q2';"}
{"prompt":"How many safety incidents were reported by the chemical plant in the North American region in the last 90 days? with given SQL schema CREATE TABLE safety_incident_records (id INT, incident_date DATE, plant_name VARCHAR(255), region VARCHAR(255), incident_description VARCHAR(255)); INSERT INTO safety_incident_records (id, incident_date, plant_name, region, incident_description) VALUES (1, '2022-04-10', 'Plant Z', 'North America', 'Fire'), (2, '2022-05-25', 'Plant Z', 'North America', 'Explosion');","completion":"SELECT COUNT(*) FROM safety_incident_records WHERE plant_name = 'Plant Z' AND region = 'North America' AND incident_date >= '2022-02-01' AND incident_date < '2022-05-01';"}
{"prompt":"What is the R&D expenditure for each quarter in 2021? with given SQL schema CREATE TABLE rd_expenditure (quarter INT, year INT, amount FLOAT); INSERT INTO rd_expenditure (quarter, year, amount) VALUES (1, 2021, 150000), (2, 2021, 160000), (3, 2021, 180000), (4, 2021, 190000);","completion":"SELECT CONCAT('Q', quarter), year, amount FROM rd_expenditure WHERE year = 2021;"}
{"prompt":"How many startups have received funding in the transportation sector, and what percentage of all startups is this? with given SQL schema CREATE TABLE startup (id INT, name TEXT, industry TEXT); INSERT INTO startup VALUES (1, 'StartupA', 'Transportation'); INSERT INTO startup VALUES (2, 'StartupB', 'Tech');","completion":"SELECT COUNT(*) as transportation_funded, (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM startup)) as funded_percentage FROM startup WHERE industry = 'Transportation' AND id IN (SELECT startup_id FROM investment_round);"}
{"prompt":"What is the count of organic farms in the USA? with given SQL schema CREATE TABLE farms (country VARCHAR(255), organic BOOLEAN); INSERT INTO farms (country, organic) VALUES ('USA', TRUE), ('USA', FALSE), ('USA', TRUE), ('USA', TRUE), ('Canada', FALSE);","completion":"SELECT COUNT(*) FROM farms WHERE country = 'USA' AND organic = TRUE;"}
{"prompt":"Find the earliest accommodation date and the accommodation type for students with learning disabilities. with given SQL schema CREATE TABLE accommodation (student_id INT, accommodation_type TEXT, accommodation_date DATE); INSERT INTO accommodation (student_id, accommodation_type, accommodation_date) VALUES (1, 'Tutoring', '2022-01-01'), (2, 'Quiet Space', '2022-02-01'), (3, 'Extended Testing Time', '2022-03-01'), (4, 'Tutoring', '2022-04-01');","completion":"SELECT accommodation_type, MIN(accommodation_date) as min_date FROM accommodation WHERE student_id IN (SELECT student_id FROM student WHERE disability = 'Learning Disability') GROUP BY accommodation_type;"}
{"prompt":"How many students have multiple accommodations in NY and CA? with given SQL schema CREATE TABLE Accommodations (id INT, student_id INT, accommodation_type VARCHAR(50), cost FLOAT);","completion":"SELECT state, COUNT(DISTINCT student_id) as multiple_accommodations_count FROM Accommodations a JOIN Students s ON a.student_id = s.id WHERE s.state IN ('NY', 'CA') GROUP BY state;"}
{"prompt":"What is the minimum age of students with visual impairments who have received accommodations in the last 6 months? with given SQL schema CREATE TABLE Accommodations (id INT, student VARCHAR(255), date DATE); CREATE TABLE Students (id INT, name VARCHAR(255), age INT, disability VARCHAR(255));","completion":"SELECT MIN(age) FROM Students INNER JOIN Accommodations ON Students.id = Accommodations.student WHERE disability = 'visual impairment' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What are the dapps using the Rust smart contract? with given SQL schema CREATE TABLE if not exists blockchain_domain.smart_contracts (contract_id INT PRIMARY KEY, name VARCHAR(255), gas_cost FLOAT); CREATE TABLE if not exists blockchain_domain.decentralized_applications (dapp_id INT PRIMARY KEY, name VARCHAR(255), smart_contract_id INT, FOREIGN KEY (smart_contract_id) REFERENCES blockchain_domain.smart_contracts(contract_id));","completion":"SELECT dapp_id, name FROM blockchain_domain.decentralized_applications WHERE smart_contract_id = (SELECT contract_id FROM blockchain_domain.smart_contracts WHERE name = 'Rust');"}
{"prompt":"What is the regulatory framework status in 'singapore'? with given SQL schema CREATE TABLE regulation (id INT, country VARCHAR(20), status VARCHAR(20)); INSERT INTO regulation (id, country, status) VALUES (1, 'singapore', 'approved');","completion":"SELECT status FROM regulation WHERE country = 'singapore';"}
{"prompt":"List the top 5 regions with the highest total sustainable forest management area, in square kilometers, for the year 2019? with given SQL schema CREATE TABLE sustainable_forest_management (id INT, region VARCHAR(255), year INT, area FLOAT); INSERT INTO sustainable_forest_management (id, region, year, area) VALUES (1, 'North America', 2019, 123456.12), (2, 'South America', 2019, 234567.12), (3, 'Europe', 2019, 345678.12);","completion":"SELECT region, SUM(area) as total_area FROM sustainable_forest_management WHERE year = 2019 GROUP BY region ORDER BY total_area DESC LIMIT 5;"}
{"prompt":"What is the total area of forests in each region? with given SQL schema CREATE TABLE forests (forest_id INT, region TEXT, area REAL); INSERT INTO forests (forest_id, region, area) VALUES (1, 'North', 5000), (2, 'South', 7000), (3, 'Mexico', 3000);","completion":"SELECT region, SUM(area) as total_area FROM forests GROUP BY region;"}
{"prompt":"What is the average price of eco-friendly nail polish sold in France? with given SQL schema CREATE TABLE NailPolishSales (productID INT, productName VARCHAR(50), category VARCHAR(50), country VARCHAR(50), isEcoFriendly BOOLEAN, price DECIMAL(5,2)); INSERT INTO NailPolishSales (productID, productName, category, country, isEcoFriendly, price) VALUES (1, 'Nail Polish', 'Nail Care', 'France', TRUE, 12.99);","completion":"SELECT AVG(price) FROM NailPolishSales WHERE category = 'Nail Care' AND country = 'France' AND isEcoFriendly = TRUE;"}
{"prompt":"What is the total number of artworks in the 'ArtCollection' table, categorized by the style of the artwork? with given SQL schema CREATE TABLE ArtCollection (ArtworkID INT, ArtworkStyle VARCHAR(50)); INSERT INTO ArtCollection (ArtworkID, ArtworkStyle) VALUES (1, 'Abstract'), (2, 'Realism'), (3, 'Impressionism'), (4, 'Cubism'), (5, 'Surrealism'), (6, 'Expressionism');","completion":"SELECT ArtworkStyle, COUNT(*) AS ArtworksByStyle FROM ArtCollection GROUP BY ArtworkStyle;"}
{"prompt":"What is the total number of veteran employment applications and hires in Florida in the past quarter? with given SQL schema CREATE TABLE veteran_employment (application_id INT, application_date DATE, application_status VARCHAR(255), state VARCHAR(255)); INSERT INTO veteran_employment (application_id, application_date, application_status, state) VALUES (1, '2021-01-01', 'Applied', 'Florida'); INSERT INTO veteran_employment (application_id, application_date, application_status, state) VALUES (2, '2021-03-01', 'Hired', 'Florida');","completion":"SELECT SUM(CASE WHEN application_status = 'Applied' THEN 1 ELSE 0 END) as total_applications, SUM(CASE WHEN application_status = 'Hired' THEN 1 ELSE 0 END) as total_hires FROM veteran_employment WHERE state = 'Florida' AND application_date >= DATEADD(quarter, -1, GETDATE());"}
{"prompt":"Update the 'peacekeeping_operations' table and change the location of the 'MONUSCO' to 'South Sudan' with given SQL schema CREATE TABLE peacekeeping_operations (id INT PRIMARY KEY, operation_name VARCHAR(50), location VARCHAR(50)); INSERT INTO peacekeeping_operations (id, operation_name, location) VALUES (1, 'MONUSCO', 'Democratic Republic of the Congo'); INSERT INTO peacekeeping_operations (id, operation_name, location) VALUES (2, 'MINUSCA', 'Central African Republic');","completion":"UPDATE peacekeeping_operations SET location = 'South Sudan' WHERE operation_name = 'MONUSCO';"}
{"prompt":"What is the maximum number of personnel deployed in defense diplomacy events by each department, and the average number of defense diplomacy events per department, for departments that have deployed more than 500 personnel, ordered by the average number of events in descending order? with given SQL schema CREATE TABLE Departments(DepartmentID INT, DepartmentName TEXT); CREATE TABLE DefenseDiplomacyEvents(EventID INT, EventName TEXT, DepartmentID INT, Personnel INT);","completion":"SELECT DepartmentName, MAX(Personnel) as MaxPersonnel, AVG(COUNT(EventID)) as AvgEventsPerDept FROM DefenseDiplomacyEvents JOIN Departments ON DefenseDiplomacyEvents.DepartmentID = Departments.DepartmentID GROUP BY DepartmentName HAVING MaxPersonnel > 500 ORDER BY AvgEventsPerDept DESC;"}
{"prompt":"What is the average assets value for customers in each region? with given SQL schema CREATE TABLE customers (customer_id INT, name TEXT, region TEXT, assets_value DECIMAL); INSERT INTO customers (customer_id, name, region, assets_value) VALUES (1, 'John Doe', 'New York', 50000.00), (2, 'Jane Smith', 'California', 75000.00), (3, 'Bob Johnson', 'New York', 60000.00);","completion":"SELECT region, AVG(assets_value) FROM customers GROUP BY region;"}
{"prompt":"What is the total value of assets for clients who have made at least one transaction in the last month? with given SQL schema CREATE TABLE clients (client_id INT, currency VARCHAR(10)); INSERT INTO clients (client_id, currency) VALUES (1, 'USD'), (2, 'EUR'); CREATE TABLE assets (asset_id INT, client_id INT, value INT, transaction_date DATE); INSERT INTO assets (asset_id, client_id, value, transaction_date) VALUES (1, 1, 5000, '2022-01-01'), (2, 1, 7000, '2022-01-05'), (3, 2, 30000, '2022-02-01');","completion":"SELECT SUM(value) FROM assets WHERE client_id IN (SELECT client_id FROM assets WHERE transaction_date >= DATEADD(month, -1, GETDATE()));"}
{"prompt":"What is the total capacity of refrigerated cargo ships that docked at the port of Oakland in 2021? with given SQL schema CREATE TABLE ships (ship_id INT, ship_name VARCHAR(255), ship_type VARCHAR(255), capacity INT);CREATE TABLE docking (docking_id INT, ship_id INT, port VARCHAR(255), year INT);INSERT INTO ships (ship_id, ship_name, ship_type, capacity) VALUES (1, 'MSC Tigris', 'refrigerated cargo', 12000);INSERT INTO docking (docking_id, ship_id, port, year) VALUES (1, 1, 'Oakland', 2021);","completion":"SELECT SUM(capacity) FROM ships S JOIN docking D ON S.ship_id = D.ship_id WHERE S.ship_type = 'refrigerated cargo' AND D.port = 'Oakland' AND D.year = 2021;"}
{"prompt":"Do any manufacturers in the USA have a recycling program and a waste reduction percentage above 25%? with given SQL schema CREATE TABLE manufacturers (manufacturer_id INT, name VARCHAR(255), location VARCHAR(255), industry_4_0_investment FLOAT, recycling_program BOOLEAN, waste_reduction_percentage FLOAT); INSERT INTO manufacturers (manufacturer_id, name, location, industry_4_0_investment, recycling_program, waste_reduction_percentage) VALUES (1, 'Smart Machines', 'Germany', 350000, FALSE, 20.5), (2, 'Eco Engines', 'Sweden', 420000, TRUE, 35.0), (3, 'Precision Robotics', 'Japan', 500000, TRUE, 15.7), (4, 'Green Innovations', 'USA', 375000, TRUE, 28.2), (5, 'FutureTech', 'USA', 410000, FALSE, 12.0);","completion":"SELECT m.name FROM manufacturers m WHERE m.location = 'USA' AND m.recycling_program = TRUE AND m.waste_reduction_percentage > 25;"}
{"prompt":"What is the average number of hospital beds per rural hospital? with given SQL schema CREATE TABLE hospitals (id INT, num_beds INT, rural BOOLEAN); INSERT INTO hospitals (id, num_beds, rural) VALUES (1, 50, true), (2, 100, false);","completion":"SELECT AVG(num_beds) FROM hospitals WHERE rural = true;"}
{"prompt":"What is the maximum number of patients served by a rural health center in Europe? with given SQL schema CREATE TABLE centers (id INT, name VARCHAR(50), location VARCHAR(50), patients_served INT);","completion":"SELECT MAX(patients_served) FROM centers WHERE location LIKE '%Europe%' AND location LIKE '%rural%';"}
{"prompt":"How many investments were made in the 'Africa' region in Q4 2021? with given SQL schema CREATE TABLE investments (id INT, region VARCHAR(20), date DATE); INSERT INTO investments (id, region, date) VALUES (1, 'Asia-Pacific', '2021-01-05'), (2, 'Europe', '2021-02-10'), (3, 'Asia-Pacific', '2021-03-25'), (4, 'Africa', '2021-10-15'), (5, 'Europe', '2021-11-30'), (6, 'Africa', '2021-12-12');","completion":"SELECT COUNT(*) FROM investments WHERE region = 'Africa' AND date BETWEEN '2021-10-01' AND '2021-12-31';"}
{"prompt":"How many social impact investments were made by investors from 'Canada' in 2020? with given SQL schema CREATE TABLE investments (id INT, investor_country VARCHAR(20), investment_year INT, investment_amount FLOAT); INSERT INTO investments (id, investor_country, investment_year, investment_amount) VALUES (1, 'Canada', 2020, 150000), (2, 'USA', 2019, 120000), (3, 'Canada', 2018, 175000);","completion":"SELECT COUNT(*) FROM investments WHERE investor_country = 'Canada' AND investment_year = 2020;"}
{"prompt":"What is the total number of military vehicles produced by company 'XYZ'? with given SQL schema CREATE TABLE military_vehicles (company TEXT, quantity INT, production_date DATE); INSERT INTO military_vehicles (company, quantity, production_date) VALUES ('ABC', 100, '2023-01-01'); INSERT INTO military_vehicles (company, quantity, production_date) VALUES ('XYZ', 200, '2023-02-01');","completion":"SELECT SUM(quantity) FROM military_vehicles WHERE company = 'XYZ';"}
{"prompt":"Which countries have not reported any national security incidents in the last 3 years? with given SQL schema CREATE TABLE if not exists national_security_incidents (country VARCHAR(50), year INT, incident_count INT);","completion":"SELECT country FROM national_security_incidents WHERE year >= 2020 AND incident_count = 0 GROUP BY country;"}
{"prompt":"Which onshore wells in the Permian Basin have the highest production rate? with given SQL schema CREATE TABLE wells (well_id INT, well_name VARCHAR(255), well_type VARCHAR(255), location VARCHAR(255)); INSERT INTO wells VALUES (1, 'Well A', 'Offshore', 'Gulf of Mexico'); INSERT INTO wells VALUES (2, 'Well B', 'Onshore', 'Permian Basin');","completion":"SELECT well_id, well_name, production_rate FROM (SELECT well_id, well_name, production_rate, row_number() OVER (PARTITION BY well_type ORDER BY production_rate DESC) as rn FROM well_production WHERE well_type = 'Onshore' AND location = 'Permian Basin') WHERE rn = 1;"}
{"prompt":"Calculate the average goals conceded per game for the top 5 teams in the English Premier League with given SQL schema CREATE TABLE teams (id INT PRIMARY KEY, name TEXT, league TEXT, goals_conceded INT, goals_scored INT, games_played INT); INSERT INTO teams (id, name, league, goals_conceded, goals_scored, games_played) VALUES (1, 'Manchester City', 'English Premier League', 14, 51, 23), (2, 'Liverpool', 'English Premier League', 14, 50, 22), (3, 'Chelsea', 'English Premier League', 17, 45, 23), (4, 'Arsenal', 'English Premier League', 21, 38, 23), (5, 'Manchester United', 'English Premier League', 21, 43, 23), (6, 'Tottenham Hotspur', 'English Premier League', 22, 41, 23);","completion":"SELECT AVG(goals_conceded\/games_played) FROM (SELECT * FROM teams ORDER BY goals_conceded ASC LIMIT 5) AS top_five_teams;"}
{"prompt":"What is the maximum number of wins by a team in a single English Premier League season, and which team was it? with given SQL schema CREATE TABLE seasons (season_id INT, team TEXT, wins INT);","completion":"SELECT team, MAX(wins) FROM seasons;"}
{"prompt":"Calculate the number of schools and hospitals in each community by joining the schools, hospitals, and communities tables. with given SQL schema CREATE TABLE communities (id INT, name VARCHAR(255)); CREATE TABLE schools (id INT, community_id INT, name VARCHAR(255)); CREATE TABLE hospitals (id INT, community_id INT, name VARCHAR(255));","completion":"SELECT c.name, COUNT(s.id) as school_count, COUNT(h.id) as hospital_count FROM communities c INNER JOIN schools s ON c.id = s.community_id INNER JOIN hospitals h ON c.id = h.community_id GROUP BY c.id;"}
{"prompt":"How many vehicles are due for maintenance in the 'vehicles' table, grouped by vehicle type? with given SQL schema CREATE TABLE vehicles (vehicle_id INT, vehicle_type VARCHAR(50), last_maintenance DATE); INSERT INTO vehicles (vehicle_id, vehicle_type, last_maintenance) VALUES (1, 'Bus', '2022-01-01'), (2, 'Tram', '2022-02-15'), (3, 'Train', '2022-03-05'), (4, 'Bus', '2022-04-10');","completion":"SELECT vehicle_type, COUNT(*) as num_vehicles FROM vehicles WHERE last_maintenance < DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY vehicle_type;"}
{"prompt":"List the vehicle models for which there is a record of maintenance in the last month. with given SQL schema CREATE TABLE Vehicles (id INT, model VARCHAR(255), last_maintenance DATE);","completion":"SELECT model FROM Vehicles WHERE last_maintenance >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"Calculate the percentage of sustainable materials in the inventory for each size. with given SQL schema CREATE TABLE Inventory (id INT, size VARCHAR(20), material VARCHAR(20), is_sustainable BOOLEAN); INSERT INTO Inventory (id, size, material, is_sustainable) VALUES (1, 'S', 'Cotton', TRUE), (2, 'M', 'Polyester', FALSE), (3, 'L', 'Wool', TRUE), (4, 'XL', 'Silk', FALSE), (5, 'S', 'Denim', TRUE), (6, 'M', 'Tencel', TRUE), (7, 'L', 'Hemp', TRUE), (8, 'XL', 'Modal', FALSE), (9, 'S', 'Linen', TRUE);","completion":"SELECT size, 100.0 * SUM(is_sustainable) \/ COUNT(*) AS percentage FROM Inventory GROUP BY size;"}
{"prompt":"What is the average price difference between regular and sale items for each brand? with given SQL schema CREATE TABLE Brands (brand_id INT, brand_name TEXT); CREATE TABLE Items (item_id INT, brand_id INT, price DECIMAL, is_on_sale BOOLEAN);","completion":"SELECT b.brand_name, AVG(CASE WHEN i.is_on_sale THEN i.price ELSE NULL END) - AVG(CASE WHEN NOT i.is_on_sale THEN i.price ELSE NULL END) as price_difference FROM Brands b JOIN Items i ON b.brand_id = i.brand_id GROUP BY b.brand_name;"}
{"prompt":"Update the financial wellbeing score of clients in Singapore to 1 point higher than their current score, if their score is currently below 7. with given SQL schema CREATE TABLE financial_wellbeing_sg (client_id INT, financial_wellbeing_score INT, country VARCHAR(50)); INSERT INTO financial_wellbeing_sg (client_id, financial_wellbeing_score, country) VALUES (1, 7, 'Singapore'), (2, 3, 'Singapore'), (3, 6, 'Singapore');","completion":"WITH updated_scores AS (UPDATE financial_wellbeing_sg SET financial_wellbeing_score = financial_wellbeing_score + 1 WHERE country = 'Singapore' AND financial_wellbeing_score < 7) SELECT * FROM updated_scores;"}
{"prompt":"List the programs and their total expenses in 2022, sorted by expenses in descending order. with given SQL schema CREATE TABLE programs (id INT, program_name TEXT, start_date DATE, end_date DATE, total_expenses FLOAT); INSERT INTO programs (id, program_name, start_date, end_date, total_expenses) VALUES (1, 'Education', '2021-01-01', '2022-12-31', 25000.00), (2, 'Health', '2021-07-01', '2023-06-30', 30000.00);","completion":"SELECT program_name, total_expenses FROM programs WHERE YEAR(start_date) = 2022 OR YEAR(end_date) = 2022 OR (YEAR(start_date) < 2022 AND YEAR(end_date) > 2022) ORDER BY total_expenses DESC;"}
{"prompt":"List all food recalls in the last 30 days, ordered by date? with given SQL schema CREATE TABLE recall (id INT, product VARCHAR(50), date DATE); INSERT INTO recall (id, product, date) VALUES (1, 'Chicken nuggets', '2022-05-01'), (2, 'Almond milk', '2022-03-15'), (3, 'Frozen berries', '2022-01-20'), (4, 'Tuna', '2022-06-10');","completion":"SELECT * FROM recall WHERE date >= DATEADD(day, -30, GETDATE()) ORDER BY date;"}
{"prompt":"Who are the top 3 countries with the most evidence-based policy making programs in the last 3 years? with given SQL schema CREATE TABLE evidence_based_policy_making (program_id INT, country VARCHAR(50), launch_year INT); INSERT INTO evidence_based_policy_making (program_id, country, launch_year) VALUES (1, 'United States', 2019), (2, 'Canada', 2018), (3, 'United Kingdom', 2020), (4, 'United States', 2018), (5, 'Canada', 2019), (6, 'United States', 2020), (7, 'Germany', 2019), (8, 'France', 2018), (9, 'United Kingdom', 2019), (10, 'Germany', 2020);","completion":"SELECT country, COUNT(*) as num_programs FROM evidence_based_policy_making WHERE launch_year >= 2018 GROUP BY country ORDER BY num_programs DESC LIMIT 3;"}
{"prompt":"What is the average age of community health workers who identify as non-binary, by state? with given SQL schema CREATE TABLE CommunityHealthWorkers (WorkerID INT, Age INT, Gender VARCHAR(10), State VARCHAR(20)); INSERT INTO CommunityHealthWorkers (WorkerID, Age, Gender, State) VALUES (1, 34, 'Female', 'California'), (2, 42, 'Male', 'Texas'), (3, 50, 'Female', 'California'), (4, 48, 'Non-binary', 'New York');","completion":"SELECT State, AVG(Age) as AvgAge FROM CommunityHealthWorkers WHERE Gender = 'Non-binary' GROUP BY State;"}
{"prompt":"What is the average visitor count of museums in the UK? with given SQL schema CREATE TABLE museum_visitors(id INT, museum_name TEXT, country TEXT, visitor_count INT); INSERT INTO museum_visitors (id, museum_name, country, visitor_count) VALUES (1, 'British Museum', 'UK', 2000), (2, 'Museum of Modern Art', 'USA', 1500);","completion":"SELECT AVG(visitor_count) FROM museum_visitors WHERE country = 'UK';"}
{"prompt":"What is the name of the most rated museum in the USA? with given SQL schema CREATE TABLE museums (museum_id INT, museum_name TEXT, country TEXT, rating FLOAT); INSERT INTO museums (museum_id, museum_name, country, rating) VALUES (1, 'Museum A', 'USA', 4.6), (2, 'Museum B', 'USA', 4.5), (3, 'Museum C', 'USA', 4.7);","completion":"SELECT museum_name FROM museums WHERE country = 'USA' GROUP BY museum_name ORDER BY AVG(rating) DESC LIMIT 1;"}
{"prompt":"What is the total number of eco-friendly hotels in Rome? with given SQL schema CREATE TABLE eco_hotels (hotel_id INT, city TEXT, sustainable_certification BOOLEAN); INSERT INTO eco_hotels (hotel_id, city, sustainable_certification) VALUES (1, 'Rome', true), (2, 'Rome', false);","completion":"SELECT COUNT(*) FROM eco_hotels WHERE city = 'Rome' AND sustainable_certification = true;"}
{"prompt":"What was the daily revenue of virtual tours in India on Independence Day? with given SQL schema CREATE TABLE daily_revenue(date DATE, site_id INT, revenue INT); INSERT INTO daily_revenue (date, site_id, revenue) VALUES ('2021-08-15', 1, 500), ('2021-08-15', 2, 700), ('2021-08-16', 1, 600); CREATE TABLE virtual_tours(site_id INT, site_name TEXT, country TEXT); INSERT INTO virtual_tours (site_id, site_name, country) VALUES (1, 'Taj Mahal', 'India'), (2, 'Red Fort', 'India');","completion":"SELECT SUM(revenue) FROM daily_revenue WHERE date = '2021-08-15' AND site_id IN (SELECT site_id FROM virtual_tours WHERE country = 'India');"}
{"prompt":"Update the price of all bookings in the \"luxury\" hotel category that were made before 2020 to a 10% increase with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name VARCHAR(50), city VARCHAR(50), category VARCHAR(50)); CREATE TABLE bookings (booking_id INT, hotel_id INT, guest_name VARCHAR(50), checkin_date DATE, checkout_date DATE, price DECIMAL(10,2));","completion":"UPDATE bookings b SET price = b.price * 1.10 WHERE EXISTS (SELECT 1 FROM hotels h WHERE h.hotel_id = b.hotel_id AND h.category = 'luxury') AND b.checkin_date < '2020-01-01';"}
{"prompt":"Which artists have their artwork displayed in the 'Impressionist Gallery'? with given SQL schema CREATE TABLE Artworks (artwork_id INT, artist_name VARCHAR(50), gallery_name VARCHAR(50)); INSERT INTO Artworks (artwork_id, artist_name, gallery_name) VALUES (1, 'Claude Monet', 'Impressionist Gallery'), (2, 'Pierre-Auguste Renoir', 'Impressionist Gallery');","completion":"SELECT DISTINCT artist_name FROM Artworks WHERE gallery_name = 'Impressionist Gallery';"}
{"prompt":"What is the average eco-friendliness score of accommodations in Oceania by year? with given SQL schema CREATE TABLE Accommodations (Accommodation_ID INT, Accommodation_Name VARCHAR(50), City VARCHAR(30), Country VARCHAR(50), Eco_Friendliness_Score INT, Visit_Year INT); INSERT INTO Accommodations (Accommodation_ID, Accommodation_Name, City, Country, Eco_Friendliness_Score, Visit_Year) VALUES (1, 'EcoLodge', 'Sydney', 'Australia', 85, 2019), (2, 'GreenHotel', 'Melbourne', 'Australia', 90, 2019), (3, 'SustainableResort', 'Auckland', 'New Zealand', 80, 2019), (4, 'EcoVilla', 'Wellington', 'New Zealand', 88, 2019); CREATE TABLE Countries (Country VARCHAR(50), Continent VARCHAR(30)); INSERT INTO Countries (Country, Continent) VALUES ('Australia', 'Oceania'), ('New Zealand', 'Oceania');","completion":"SELECT C.Continent, V.Visit_Year, AVG(A.Eco_Friendliness_Score) AS Avg_Eco_Score  FROM Accommodations A  JOIN Countries C  ON A.Country = C.Country  WHERE C.Continent = 'Oceania'  GROUP BY C.Continent, V.Visit_Year  ORDER BY V.Visit_Year;"}
{"prompt":"What is the change in international tourist arrivals in Oceania between 2018 and 2020? with given SQL schema CREATE TABLE ArrivalsByRegion (Year INT, Region VARCHAR(255), Arrivals INT); INSERT INTO ArrivalsByRegion (Year, Region, Arrivals) VALUES (2018, 'Oceania', 10000000), (2019, 'Oceania', 10500000), (2020, 'Oceania', 5000000);","completion":"SELECT Region, Arrivals, (Arrivals - LAG(Arrivals, 1) OVER (PARTITION BY Region ORDER BY Year)) AS ArrivalChange FROM ArrivalsByRegion WHERE Region = 'Oceania' AND Year BETWEEN 2018 AND 2020;"}
{"prompt":"Which dish has the most orders in Spain? with given SQL schema CREATE TABLE orders (id INT, dish_id INT, quantity INT);INSERT INTO orders (id, dish_id, quantity) VALUES (1, 1, 2), (2, 2, 3), (3, 3, 5);","completion":"SELECT d.name, MAX(o.quantity) FROM dishes d JOIN orders o ON d.id = o.dish_id GROUP BY d.name HAVING country = 'Spain';"}
{"prompt":"List all mobile towers that have not experienced any network outages in the past six months. with given SQL schema CREATE TABLE mobile_towers (id INT, latitude DECIMAL(9,6), longitude DECIMAL(9,6), status VARCHAR(255));CREATE VIEW network_outages AS SELECT tower_id, date FROM network_issues WHERE issue_type = 'outage';","completion":"SELECT mt.id, mt.latitude, mt.longitude FROM mobile_towers mt LEFT JOIN network_outages no ON mt.id = no.tower_id WHERE no.tower_id IS NULL AND no.date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"Show the total revenue from concert ticket sales for the artist 'BTS' with given SQL schema CREATE TABLE concerts (id INT, artist_name VARCHAR(255), tickets_sold INT, ticket_price DECIMAL(5,2)); INSERT INTO concerts (id, artist_name, tickets_sold, ticket_price) VALUES (1, 'Taylor Swift', 12000, 75), (2, 'BTS', 15000, 100);","completion":"SELECT artist_name, SUM(tickets_sold * ticket_price) as total_revenue FROM concerts WHERE artist_name = 'BTS' GROUP BY artist_name;"}
{"prompt":"What is the total revenue for each artist in the Music_Streaming table? with given SQL schema CREATE TABLE Music_Streaming (song_id INT, artist VARCHAR(50), price DECIMAL(10, 2)); INSERT INTO Music_Streaming (song_id, artist, price) VALUES (1, 'Taylor Swift', 0.99), (2, 'The Rolling Stones', 1.29), (3, 'Miles Davis', 1.49), (4, 'Taylor Swift', 0.99), (5, 'Jay Z', 1.79);","completion":"SELECT artist, SUM(price) as total_revenue FROM Music_Streaming GROUP BY artist;"}
{"prompt":"Which news articles were published before the earliest published date in the news_articles table? with given SQL schema CREATE TABLE news_articles (id INT, title VARCHAR(100), author_id INT, published_date DATE); INSERT INTO news_articles (id, title, author_id, published_date) VALUES (1, 'Media Ethics in Journalism', 3, '2022-03-15'); INSERT INTO news_articles (id, title, author_id, published_date) VALUES (2, 'Audience Demographics in News Reporting', 1, '2022-03-17');","completion":"SELECT * FROM news_articles WHERE published_date < (SELECT MIN(published_date) FROM news_articles);"}
{"prompt":"What is the average number of victories for players from Japan in 'Battle Royale' games? with given SQL schema CREATE TABLE player_profiles (player_id INT, player_country VARCHAR(50)); INSERT INTO player_profiles (player_id, player_country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'Brazil'), (5, 'Japan'); CREATE TABLE player_games (player_id INT, game_name VARCHAR(100), victories INT); INSERT INTO player_games (player_id, game_name, victories) VALUES (1, 'GameA', 5), (2, 'GameB', 7), (3, 'GameC', 8), (4, 'GameD', 3), (5, 'GameA', 6);","completion":"SELECT player_country, AVG(victories) FROM player_profiles JOIN player_games ON player_profiles.player_id = player_games.player_id WHERE player_country = 'Japan' AND game_name = 'Battle Royale' GROUP BY player_country;"}
{"prompt":"Delete the satellite image for farm 501 taken on May 3, 2022 with given SQL schema CREATE TABLE satellite_images (farm_id INT, image_data VARCHAR(500), timestamp DATETIME);","completion":"DELETE FROM satellite_images WHERE farm_id = 501 AND timestamp = '2022-05-03 14:30:00';"}
{"prompt":"Identify the top 5 mining locations with the highest average Gadolinium production in 2020, using a cross join. with given SQL schema CREATE TABLE mines (id INT, location VARCHAR(50), Gadolinium_prod FLOAT, datetime DATETIME); INSERT INTO mines (id, location, Gadolinium_prod, datetime) VALUES (1, 'Mount Weld', 120.0, '2020-01-01 10:00:00'), (2, 'Bayan Obo', 350.0, '2020-02-15 14:30:00');","completion":"SELECT a.location, AVG(a.Gadolinium_prod) FROM mines a CROSS JOIN mines b GROUP BY a.location ORDER BY AVG(a.Gadolinium_prod) DESC LIMIT 5;"}
{"prompt":"Which ethical labor certifications are associated with which products in the product_labor_certifications table? with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(50)); CREATE TABLE labor_certifications (certification_id INT, certification_name VARCHAR(50)); CREATE TABLE product_labor_certifications (product_id INT, certification_id INT); INSERT INTO products (product_id, product_name) VALUES (1, 'Eco Sweatshirt'), (2, 'Sustainable Sneakers'); INSERT INTO labor_certifications (certification_id, certification_name) VALUES (1, 'Fair Trade'), (2, 'Certified B Corporation'); INSERT INTO product_labor_certifications (product_id, certification_id) VALUES (1, 1), (1, 2), (2, 1);","completion":"SELECT p.product_name, lc.certification_name FROM products p INNER JOIN product_labor_certifications plc ON p.product_id = plc.product_id INNER JOIN labor_certifications lc ON plc.certification_id = lc.certification_id;"}
{"prompt":"How many astronauts are there from Russia? with given SQL schema CREATE TABLE Astronauts (ID INT, Name VARCHAR(50), Nationality VARCHAR(50)); INSERT INTO Astronauts VALUES (1, 'Mark Watney', 'USA'), (2, 'Melissa Lewis', 'USA'), (3, 'Alex Vogel', 'Russia'), (4, 'Kelly Stuart', 'USA');","completion":"SELECT COUNT(*) FROM Astronauts WHERE Nationality = 'Russia';"}
{"prompt":"What is the distribution of security incidents by day of the week for the last year? with given SQL schema CREATE TABLE security_incidents_by_day (day_of_week VARCHAR(10), incident_count INT, incident_date DATE); INSERT INTO security_incidents_by_day (day_of_week, incident_count, incident_date) VALUES ('Monday', 120, '2022-01-01'), ('Tuesday', 140, '2022-01-02'), ('Wednesday', 160, '2022-01-03'), ('Thursday', 130, '2022-01-04'), ('Friday', 110, '2022-01-05');","completion":"SELECT DATENAME(dw, incident_date) AS day_of_week, COUNT(*) AS incident_count FROM security_incidents WHERE incident_date >= DATEADD(year, -1, GETDATE()) GROUP BY DATENAME(dw, incident_date);"}
{"prompt":"What is the maximum number of days to resolve a security incident in each region? with given SQL schema CREATE TABLE IncidentResolution (id INT, region VARCHAR(255), resolution_days INT); INSERT INTO IncidentResolution (id, region, resolution_days) VALUES (1, 'Americas', 15), (2, 'Europe', 10), (3, 'Asia', 20);","completion":"SELECT IncidentResolution.region AS Region, MAX(IncidentResolution.resolution_days) AS Max_Resolution_Days FROM IncidentResolution GROUP BY IncidentResolution.region;"}
{"prompt":"Delete records in the garments table where the quantity is less than 10 with given SQL schema CREATE TABLE garments (id INT, garment_name VARCHAR(50), category VARCHAR(50), quantity INT);","completion":"DELETE FROM garments WHERE quantity < 10;"}
{"prompt":"What is the average salary of part-time workers in the 'finance' sector? with given SQL schema CREATE TABLE finance (id INT, employee_name TEXT, hours_worked INT, salary REAL); INSERT INTO finance (id, employee_name, hours_worked, salary) VALUES (1, 'Mark Anderson', 20, 70000.00), (2, 'Nancy Thompson', 25, 75000.00), (3, 'Oliver Brown', 30, 80000.00);","completion":"SELECT AVG(salary) FROM finance WHERE hours_worked < 30 AND sector = 'finance';"}
{"prompt":"How many cargo vessels are there? with given SQL schema CREATE TABLE Vessels (ID VARCHAR(20), Name VARCHAR(20), Type VARCHAR(20), AverageSpeed FLOAT); INSERT INTO Vessels VALUES ('V018', 'Vessel R', 'Cargo', 18.2), ('V019', 'Vessel S', 'Cargo', 16.3), ('V020', 'Vessel T', 'Passenger', 28.0);","completion":"SELECT COUNT(*) FROM Vessels WHERE Type = 'Cargo';"}
{"prompt":"List all vessels in the 'cargo' table that have an average speed greater than 25 knots with given SQL schema CREATE TABLE IF NOT EXISTS cargo (id INT PRIMARY KEY, vessel_name VARCHAR(255), average_speed DECIMAL(5,2)); INSERT INTO cargo (id, vessel_name, average_speed) VALUES (1, 'Poseidon', 26.3), (2, 'Oceanus', 28.1), (3, 'Neptune', 22.9), (4, 'Atlantis', 30.5), (5, 'Aquarius', 24.7);","completion":"SELECT vessel_name FROM cargo WHERE average_speed > 25;"}
{"prompt":"List the exhibitions with the highest number of visitors from outside the EU. with given SQL schema CREATE TABLE Exhibition (id INT, name VARCHAR(100), Visitor_id INT); CREATE TABLE Visitor (id INT, name VARCHAR(100), country VARCHAR(50)); INSERT INTO Exhibition (id, name, Visitor_id) VALUES (1, 'Ancient Civilizations', 1), (2, 'Modern Art', 2); INSERT INTO Visitor (id, name, country) VALUES (1, 'James Bond', 'UK'), (2, 'Maria Garcia', 'Mexico');","completion":"SELECT Exhibition.name FROM Exhibition JOIN Visitor ON Exhibition.Visitor_id = Visitor.id WHERE Visitor.country NOT IN ('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden') GROUP BY Exhibition.name ORDER BY COUNT(DISTINCT Exhibition.Visitor_id) DESC LIMIT 1;"}
{"prompt":"What is the change in landfill capacity in the last month for each country? with given SQL schema CREATE TABLE landfill_capacity(country VARCHAR(255), capacity_date DATE, capacity INT); INSERT INTO landfill_capacity VALUES ('CountryA', '2022-01-01', 1000);","completion":"SELECT country, LAG(capacity) OVER (PARTITION BY country ORDER BY capacity_date) as previous_capacity, capacity, capacity - LAG(capacity) OVER (PARTITION BY country ORDER BY capacity_date) as capacity_change FROM landfill_capacity WHERE capacity_date > DATEADD(month, -1, CURRENT_DATE)"}
{"prompt":"What is the total water usage by region and day of the week? with given SQL schema CREATE TABLE WaterUsage (id INT, region VARCHAR(50), usage_date DATE, usage_amount INT); INSERT INTO WaterUsage (id, region, usage_date, usage_amount) VALUES (1, 'Northeast', '2022-01-01', 5000); INSERT INTO WaterUsage (id, region, usage_date, usage_amount) VALUES (2, 'Southeast', '2022-01-02', 7000);","completion":"SELECT region, EXTRACT(DOW FROM usage_date) AS day_of_week, SUM(usage_amount) AS total_usage FROM WaterUsage GROUP BY region, day_of_week;"}
{"prompt":"Insert a new record of a user who joined on Jan 1, 2022 and last logged in on Jan 5, 2022 into the \"Members\" table with given SQL schema CREATE TABLE Members (Id INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), JoinDate DATETIME, LastLogin DATETIME);","completion":"INSERT INTO Members (Id, FirstName, LastName, JoinDate, LastLogin) VALUES (10, 'John', 'Doe', '2022-01-01', '2022-01-05');"}
{"prompt":"Who are the top 3 users with the highest step count on a specific day? with given SQL schema CREATE TABLE Users (id INT, name VARCHAR(20)); INSERT INTO Users (id, name) VALUES (1, 'John'), (2, 'Sarah'), (3, 'Mike'); CREATE TABLE Steps (user_id INT, step_count INT, date DATE); INSERT INTO Steps (user_id, step_count, date) VALUES (1, 10000, '2022-01-01'), (2, 8000, '2022-01-01'), (3, 12000, '2022-01-01'), (1, 9000, '2022-01-02'), (2, 11000, '2022-01-02'), (3, 13000, '2022-01-02');","completion":"SELECT u.name, s.step_count FROM Users u JOIN Steps s ON u.id = s.user_id WHERE s.date = '2022-01-02' ORDER BY s.step_count DESC LIMIT 3;"}
{"prompt":"List the top 5 AI safety incidents by the number of user complaints, in the last 3 years, for AI models used in the finance domain, and display the incident type, AI algorithm, and number of complaints. with given SQL schema CREATE TABLE ai_safety_incidents (incident_id INT, incident_type VARCHAR(50), ai_algorithm VARCHAR(50), incident_date DATE, user_complaints INT, domain VARCHAR(50));","completion":"SELECT incident_type, ai_algorithm, SUM(user_complaints) AS total_complaints FROM ai_safety_incidents WHERE domain = 'finance' AND incident_date >= DATE(CURRENT_DATE) - INTERVAL 3 YEAR GROUP BY incident_type, ai_algorithm ORDER BY total_complaints DESC LIMIT 5;"}
{"prompt":"What is the maximum number of launches for a SpaceX Falcon9 mission? with given SQL schema CREATE TABLE SpaceX_Missions (Id INT, Name VARCHAR(50), NumLaunches INT); INSERT INTO SpaceX_Missions (Id, Name, NumLaunches) VALUES (1, 'Falcon1', 5), (2, 'Falcon9', 10), (3, 'FalconHeavy', 3);","completion":"SELECT MAX(NumLaunches) FROM SpaceX_Missions WHERE Name = 'Falcon9';"}
{"prompt":"List all the animals in the 'animal_population' table that are part of a vulnerable or endangered species with given SQL schema CREATE TABLE animal_population (species VARCHAR(50), animal_count INT, conservation_status VARCHAR(20));","completion":"SELECT species FROM animal_population WHERE conservation_status IN ('vulnerable', 'endangered');"}
{"prompt":"What was the average production cost per gram for each strain grown in Colorado in 2020? with given SQL schema CREATE TABLE Production (id INT, strain TEXT, state TEXT, cost_per_gram FLOAT); INSERT INTO Production (id, strain, state, cost_per_gram) VALUES (1, 'Strain X', 'CO', 5.00), (2, 'Strain Y', 'CO', 7.00), (3, 'Strain Z', 'CO', 3.00);","completion":"SELECT strain, AVG(cost_per_gram) FROM Production WHERE state = 'CO' GROUP BY strain;"}
{"prompt":"List all departments, the number of chemicals they handle, and the number of machines used in their manufacturing processes. with given SQL schema CREATE TABLE Departments (DepartmentID INT, DepartmentName VARCHAR(20)); INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (1, 'Manufacturing'), (2, 'Engineering'), (3, 'Chemical Safety'), (4, 'Product Development'); CREATE TABLE Chemicals (ChemicalID INT, ChemicalName VARCHAR(20), DepartmentID INT); INSERT INTO Chemicals (ChemicalID, ChemicalName, DepartmentID) VALUES (1, 'Hydrochloric Acid', 1), (2, 'Nitric Acid', 2), (3, 'Sodium Hydroxide', 3), (4, 'New Chemical', 4); CREATE TABLE Machinery (MachineID INT, MachineName VARCHAR(20), DepartmentID INT); INSERT INTO Machinery (MachineID, MachineName, DepartmentID) VALUES (1, 'Mixer 1', 1), (2, 'Cutter 2', 2), (3, 'Dispenser 3', 3), (4, 'Innovator 4', 4);","completion":"SELECT D.DepartmentName, COUNT(C.ChemicalID) AS ChemicalCount, COUNT(M.MachineID) AS MachineCount FROM Departments D LEFT JOIN Chemicals C ON D.DepartmentID = C.DepartmentID LEFT JOIN Machinery M ON D.DepartmentID = M.DepartmentID GROUP BY D.DepartmentName;"}
{"prompt":"List safety officers in the Production and Research departments. with given SQL schema CREATE TABLE Employees (Id INT, Name VARCHAR(50), Role VARCHAR(50), Department VARCHAR(50)); INSERT INTO Employees (Id, Name, Role, Department) VALUES (1, 'Jane Smith', 'Safety Officer', 'Production'), (2, 'Robert Johnson', 'Engineer', 'Research');","completion":"SELECT * FROM Employees WHERE Role = 'Safety Officer' AND Department IN ('Production', 'Research');"}
{"prompt":"What is the average temperature in the chemical storage facilities in New York and New Jersey combined? with given SQL schema CREATE TABLE storage_facilities (id INT, name TEXT, state TEXT, temperature FLOAT); INSERT INTO storage_facilities (id, name, state, temperature) VALUES (1, 'Facility1', 'New York', 20.5), (2, 'Facility2', 'New York', 21.3), (3, 'Facility3', 'New Jersey', 18.8), (4, 'Facility4', 'New Jersey', 19.9);","completion":"SELECT AVG(temperature) FROM storage_facilities WHERE state IN ('New York', 'New Jersey');"}
{"prompt":"What is the total energy consumption of the Chemical Plant B in the last quarter? with given SQL schema CREATE TABLE EnergyConsumption (EnergyID INT, Plant VARCHAR(255), EnergyQuantity DECIMAL(5,2), Timestamp DATETIME);","completion":"SELECT SUM(EnergyQuantity) FROM EnergyConsumption WHERE Plant = 'Chemical Plant B' AND Timestamp BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) AND CURRENT_DATE();"}
{"prompt":"What is the total quantity of chemical 'A' stored in tanks? with given SQL schema CREATE TABLE tank_inventory (tank_id INT, chemical VARCHAR(20), quantity INT); INSERT INTO tank_inventory (tank_id, chemical, quantity) VALUES (1, 'A', 500), (2, 'B', 300), (3, 'A', 700);","completion":"SELECT SUM(quantity) FROM tank_inventory WHERE chemical = 'A';"}
{"prompt":"What is the average life expectancy in Africa and Asia? with given SQL schema CREATE TABLE life_expectancy (continent VARCHAR(20), life_expectancy DECIMAL(5,2)); INSERT INTO life_expectancy (continent, life_expectancy) VALUES ('Africa', 60.5), ('Asia', 71.0);","completion":"SELECT AVG(life_expectancy) FROM life_expectancy WHERE continent IN ('Africa', 'Asia');"}
{"prompt":"What is the percentage of the population that is fully vaccinated against COVID-19 in Australia and Argentina? with given SQL schema CREATE TABLE covid_vaccinations (country VARCHAR(20), percentage_fully_vaccinated DECIMAL(5,2)); INSERT INTO covid_vaccinations (country, percentage_fully_vaccinated) VALUES ('Australia', 80.0), ('Argentina', 50.0);","completion":"SELECT AVG(percentage_fully_vaccinated) FROM covid_vaccinations WHERE country IN ('Australia', 'Argentina');"}
{"prompt":"What is the ranking of hospitals in Canada by budget? with given SQL schema CREATE TABLE hospitals (id INT, name VARCHAR, city VARCHAR, state VARCHAR, country VARCHAR, budget DECIMAL(10,2)); INSERT INTO hospitals (id, name, city, state, country, budget) VALUES (1, 'Toronto General Hospital', 'Toronto', 'ON', 'Canada', 800000); INSERT INTO hospitals (id, name, city, state, country, budget) VALUES (2, 'Vancouver General Hospital', 'Vancouver', 'BC', 'Canada', 700000);","completion":"SELECT hospitals.*, ROW_NUMBER() OVER(PARTITION BY hospitals.country ORDER BY hospitals.budget DESC) as rank FROM hospitals WHERE hospitals.country = 'Canada';"}
{"prompt":"List the names of startups that have more funding than the startup with the highest funding in the 'east_coast' region with given SQL schema CREATE TABLE companies (id INT, name TEXT, region TEXT, funding FLOAT); INSERT INTO companies (id, name, region, funding) VALUES (1, 'Startup A', 'west_coast', 5000000), (2, 'Startup B', 'east_coast', 3000000), (3, 'Startup C', 'west_coast', 7000000), (4, 'Startup D', 'east_coast', 8000000);","completion":"SELECT name FROM companies WHERE funding > (SELECT MAX(funding) FROM companies WHERE region = 'east_coast');"}
{"prompt":"Which marine species have been observed in both the Arctic and Antarctic oceans? with given SQL schema CREATE TABLE marine_species (id INT, species_name VARCHAR(50), common_name VARCHAR(50), region VARCHAR(20));INSERT INTO marine_species (id, species_name, common_name, region) VALUES (1, 'Orcinus_orca', 'Killer Whale', 'Arctic');INSERT INTO marine_species (id, species_name, common_name, region) VALUES (2, 'Balaenoptera_bonaerensis', 'Antarctic Minke Whale', 'Antarctic');","completion":"SELECT species_name FROM marine_species WHERE region IN ('Arctic', 'Antarctic') GROUP BY species_name HAVING COUNT(DISTINCT region) = 2;"}
{"prompt":"list all marine species that are found exclusively in the Indian Ocean, excluding sharks and rays with given SQL schema CREATE TABLE marine_species (id INT, species_name TEXT, habitat TEXT, conservation_status TEXT); INSERT INTO marine_species (id, species_name, habitat, conservation_status) VALUES (1, 'Clownfish', 'Coral Reefs', 'Least Concern');","completion":"SELECT species_name FROM marine_species WHERE habitat LIKE '%Indian Ocean%' AND species_name NOT IN (SELECT species_name FROM marine_species WHERE species_name LIKE '%Shark%' OR species_name LIKE '%Ray%') AND id NOT IN (SELECT species_id FROM sharks_and_rays) GROUP BY species_name HAVING COUNT(*) = 1;"}
{"prompt":"List the smart contract names and their corresponding blockchain networks from the 'smart_contracts' and 'blockchains' tables. with given SQL schema CREATE TABLE smart_contracts (contract_id INT, contract_name VARCHAR(50), blockchain_id INT); CREATE TABLE blockchains (blockchain_id INT, blockchain_name VARCHAR(50)); INSERT INTO smart_contracts (contract_id, contract_name, blockchain_id) VALUES (1, 'Uniswap', 1); INSERT INTO blockchains (blockchain_id, blockchain_name) VALUES (1, 'Ethereum');","completion":"SELECT smart_contracts.contract_name, blockchains.blockchain_name FROM smart_contracts INNER JOIN blockchains ON smart_contracts.blockchain_id = blockchains.blockchain_id;"}
{"prompt":"Update the 'SmartContracts' table to insert a new smart contract with a unique ContractID and the given parameters. with given SQL schema CREATE TABLE SmartContracts (ContractID INT, ContractName VARCHAR(255), ContractVersion VARCHAR(255), ContractOwner VARCHAR(255));","completion":"INSERT INTO SmartContracts (ContractID, ContractName, ContractVersion, ContractOwner) SELECT MAX(ContractID) + 1, 'SampleContract', '1.0', 'SampleOwner' FROM SmartContracts WHERE NOT EXISTS (SELECT 1 FROM SmartContracts WHERE ContractID = MAX(ContractID) + 1);"}
{"prompt":"What is the percentage of violent crimes reported in the city of New York in 2019, grouped by the type of crime? with given SQL schema CREATE TABLE crimes (id INT, city VARCHAR(20), year INT, violent_crime BOOLEAN, crime_type VARCHAR(20)); INSERT INTO crimes (id, city, year, violent_crime, crime_type) VALUES (1, 'New York', 2019, true, 'Assault'), (2, 'New York', 2019, false, 'Theft'), (3, 'New York', 2019, true, 'Robbery');","completion":"SELECT crime_type, (COUNT(*) FILTER (WHERE violent_crime)) * 100.0 \/ COUNT(*) FROM crimes WHERE city = 'New York' AND year = 2019 GROUP BY crime_type;"}
{"prompt":"Show the number of humanitarian assistance missions conducted by the European Union in 2021 with given SQL schema CREATE TABLE humanitarian_assistance_missions (mission_id INT, organization VARCHAR(255), mission_name VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO humanitarian_assistance_missions (mission_id, organization, mission_name, start_date, end_date) VALUES (1, 'European Union', 'Mission A', '2021-01-01', '2021-12-31');","completion":"SELECT COUNT(*) FROM humanitarian_assistance_missions WHERE organization = 'European Union' AND YEAR(start_date) = 2021;"}
{"prompt":"Identify any machines in the manufacturing process that have not been serviced in the past 6 months. with given SQL schema CREATE TABLE machines (machine_id INT, last_service DATE); INSERT INTO machines VALUES (1, '2021-08-01'), (2, '2021-10-15'), (3, '2022-02-05'), (4, '2022-03-10'), (5, '2022-04-02');","completion":"SELECT machine_id FROM machines WHERE last_service < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What is the total waste produced by the textile industry in Asia? with given SQL schema CREATE TABLE waste (factory_id INT, industry VARCHAR(50), region VARCHAR(50), waste_generated INT);","completion":"SELECT SUM(waste_generated) FROM waste WHERE industry = 'textile' AND region = 'Asia';"}
{"prompt":"Find the number of artifacts excavated from 'Africa' in the year 2000. with given SQL schema CREATE TABLE Artifacts (ArtifactID int, Name text, SiteID int, ExcavationYear int); INSERT INTO Artifacts (ArtifactID, Name, SiteID, ExcavationYear) VALUES (1, 'Artifact1', 3, 2000);","completion":"SELECT COUNT(*) FROM Artifacts WHERE Country = 'Africa' AND ExcavationYear = 2000;"}
{"prompt":"What is the average age of patients diagnosed with Asthma in the rural areas of Texas? with given SQL schema CREATE TABLE Patients (PatientID INT, Age INT, Gender VARCHAR(10), Diagnosis VARCHAR(20), Location VARCHAR(20)); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (1, 35, 'Male', 'Asthma', 'Texas'); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (2, 42, 'Female', 'Asthma', 'Texas');","completion":"SELECT AVG(Age) FROM Patients WHERE Diagnosis = 'Asthma' AND Location = 'Texas';"}
{"prompt":"What is the average investment amount made in a specific country? with given SQL schema CREATE TABLE Investments (InvestmentID INT, InvestorID INT, Country VARCHAR(20), Amount INT); INSERT INTO Investments (InvestmentID, InvestorID, Country, Amount) VALUES (1, 1, 'USA', 4000), (2, 1, 'Canada', 3000), (3, 2, 'Mexico', 5000), (4, 2, 'Brazil', 6000), (5, 3, 'USA', 7000), (6, 3, 'Canada', 8000);","completion":"SELECT AVG(Amount) as AverageInvestment FROM Investments WHERE Country = 'USA';"}
{"prompt":"What is the total amount donated by each donor in 2023, ranked in ascending order? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50), DonationDate DATE, Amount DECIMAL(10,2)); INSERT INTO Donors (DonorID, DonorName, DonationDate, Amount) VALUES (1, 'Jane Smith', '2023-01-01', 50.00), (2, 'John Doe', '2023-02-01', 100.00), (3, 'Alice Johnson', '2023-01-15', 75.00);","completion":"SELECT DonorName, SUM(Amount) AS TotalDonated FROM Donors WHERE YEAR(DonationDate) = 2023 GROUP BY DonorName ORDER BY TotalDonated ASC;"}
{"prompt":"How many candidates from underrepresented communities have been interviewed for each job category in the past 6 months? with given SQL schema CREATE TABLE Interviews (InterviewID int, InterviewDate date, CandidateName varchar(50), CandidateGender varchar(10), CandidateCommunity varchar(50), JobCategory varchar(50)); INSERT INTO Interviews (InterviewID, InterviewDate, CandidateName, CandidateGender, CandidateCommunity, JobCategory) VALUES (1, '2023-02-01', 'David Kim', 'Male', 'LGBTQ+', 'Software Engineer'), (2, '2023-02-02', 'Sophia Lee', 'Female', 'Women in Tech', 'Data Analyst'), (3, '2023-02-03', 'Daniel Park', 'Male', 'Neurodiverse', 'Software Engineer'), (4, '2023-02-04', 'Olivia Choi', 'Female', 'First Generation Immigrant', 'Data Scientist'), (5, '2023-02-05', 'William Han', 'Male', 'Racial Minority', 'Software Engineer'), (6, '2023-02-06', 'Ava Kim', 'Female', 'LGBTQ+', 'Data Analyst'), (7, '2023-02-07', 'Mohamed Ahmed', 'Male', 'First Generation Immigrant', 'Data Scientist');","completion":"SELECT JobCategory, CandidateCommunity, COUNT(*) AS num_candidates FROM Interviews WHERE InterviewDate >= DATEADD(month, -6, GETDATE()) GROUP BY JobCategory, CandidateCommunity;"}
{"prompt":"What is the maximum number of wells drilled, in a single month, for all operators in the Bakken Formation, in the year 2019? with given SQL schema CREATE TABLE DrillingWells (WellID INT, Location VARCHAR(20), DrillingMonth DATE, DrillingOperator VARCHAR(20), NumberOfWells INT); INSERT INTO DrillingWells (WellID, Location, DrillingMonth, DrillingOperator, NumberOfWells) VALUES (1, 'Bakken Formation', '2019-01-01', 'Operator A', 50), (2, 'Bakken Formation', '2019-02-01', 'Operator B', 60), (3, 'Barnett Shale', '2018-01-01', 'Operator A', 40);","completion":"SELECT DrillingOperator, MAX(NumberOfWells) FROM DrillingWells WHERE Location = 'Bakken Formation' AND YEAR(DrillingMonth) = 2019 GROUP BY DrillingOperator;"}
{"prompt":"How many times has each NHL team played against international opponents? with given SQL schema CREATE TABLE nhl_teams (team_id INT, team_name VARCHAR(100)); CREATE TABLE nhl_games (game_id INT, home_team_id INT, away_team_id INT, opponent_type VARCHAR(50));","completion":"SELECT ht.team_name, COUNT(*) as game_count FROM nhl_teams ht JOIN nhl_games g ON ht.team_id = g.home_team_id WHERE g.opponent_type = 'International' GROUP BY ht.team_name;"}
{"prompt":"What is the total number of yellow cards given to a single team in the 'soccer_matches' table? with given SQL schema CREATE TABLE soccer_matches (id INT, home_team VARCHAR(50), away_team VARCHAR(50), location VARCHAR(50), date DATE, yellow_cards_home INT, yellow_cards_away INT); INSERT INTO soccer_matches (id, home_team, away_team, location, date, yellow_cards_home, yellow_cards_away) VALUES (1, 'Manchester City', 'Liverpool', 'Manchester', '2022-01-01', 3, 2); INSERT INTO soccer_matches (id, home_team, away_team, location, date, yellow_cards_home, yellow_cards_away) VALUES (2, 'Real Madrid', 'Barcelona', 'Madrid', '2022-02-10', 1, 0);","completion":"SELECT (SUM(yellow_cards_home) + SUM(yellow_cards_away)) FROM soccer_matches;"}
{"prompt":"What is the win-loss record for each team in the last 10 matches? with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); CREATE TABLE matches (match_id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, match_date DATE, home_team_won BOOLEAN);","completion":"SELECT t.team_name, SUM(CASE WHEN m.home_team_won THEN 1 ELSE 0 END) as wins, SUM(CASE WHEN NOT m.home_team_won THEN 1 ELSE 0 END) as losses FROM matches m JOIN teams t ON (m.home_team_id = t.team_id OR m.away_team_id = t.team_id) WHERE m.match_date >= DATEADD(day, -10, GETDATE()) GROUP BY t.team_name;"}
{"prompt":"How many schools and hospitals are there in Colombia and which ones need repairs? with given SQL schema CREATE TABLE schools (id INT, country VARCHAR(20), name VARCHAR(50), needs_repair BOOLEAN); CREATE TABLE hospitals (id INT, country VARCHAR(20), name VARCHAR(50), needs_repair BOOLEAN);","completion":"SELECT 'Schools' as facility_type, COUNT(*) as total, SUM(needs_repair) as repairs_needed FROM schools WHERE country = 'Colombia' UNION ALL SELECT 'Hospitals' as facility_type, COUNT(*) as total, SUM(needs_repair) as repairs_needed FROM hospitals WHERE country = 'Colombia';"}
{"prompt":"How many unique donors have contributed to the 'community_development' table? with given SQL schema CREATE TABLE community_development (donation_id INT, donor VARCHAR(50), amount DECIMAL(10,2), donation_date DATE); INSERT INTO community_development (donation_id, donor, amount, donation_date) VALUES (1, 'Charlie Brown', 75.00, '2021-01-01'), (2, 'David Wilson', 125.00, '2021-02-01'), (3, 'Charlie Brown', 50.00, '2021-03-01');","completion":"SELECT COUNT(DISTINCT donor) FROM community_development;"}
{"prompt":"Which countries received the most humanitarian aid in 2020? with given SQL schema CREATE TABLE donations (id INT, donor_name VARCHAR(50), donation_amount DECIMAL(10,2), donation_date DATE, country_code CHAR(2));","completion":"SELECT country_code, SUM(donation_amount) FROM donations WHERE YEAR(donation_date) = 2020 AND program_type = 'Humanitarian Aid' GROUP BY country_code ORDER BY SUM(donation_amount) DESC;"}
{"prompt":"Delete the \"social_impact_scores\" table with given SQL schema CREATE TABLE social_impact_scores (company TEXT, score INTEGER, year INTEGER); INSERT INTO social_impact_scores (company, score, year) VALUES ('Microsoft', 85, 2021); INSERT INTO social_impact_scores (company, score, year) VALUES ('Google', 82, 2021); INSERT INTO social_impact_scores (company, score, year) VALUES ('Amazon', 78, 2021); CREATE TABLE technology_companies (name TEXT, region TEXT, industry TEXT);","completion":"DROP TABLE social_impact_scores;"}
{"prompt":"List all the organizations involved in technology for social good in Asia. with given SQL schema CREATE TABLE organizations (id INT, name VARCHAR(50), region VARCHAR(50), involvement VARCHAR(50)); INSERT INTO organizations (id, name, region, involvement) VALUES (1, 'Tech4Good', 'Asia', 'social good'), (2, 'GreenTechAsia', 'Asia', 'green technology'), (3, 'AIforAsia', 'Asia', 'social good');","completion":"SELECT name FROM organizations WHERE region = 'Asia' AND involvement = 'social good';"}
{"prompt":"Find the total fare collected and number of trips per payment type with given SQL schema CREATE TABLE payment_stats (route_id INT, payment_type VARCHAR(10), trips_taken INT, fare_collected DECIMAL(5,2)); INSERT INTO payment_stats (route_id, payment_type, trips_taken, fare_collected) VALUES (1, 'Cash', 250, 625.00), (1, 'Card', 250, 750.00), (2, 'Cash', 300, 825.00), (2, 'Card', 300, 1125.00);","completion":"SELECT payment_type, SUM(trips_taken) as total_trips, SUM(fare_collected) as total_fare FROM payment_stats GROUP BY payment_type;"}
{"prompt":"Identify the average price of fair trade clothing items in the 'EthicalFashion' database with given SQL schema CREATE TABLE clothing_items (item_id INT, item_name VARCHAR(255), price DECIMAL(10,2), is_fair_trade BOOLEAN);","completion":"SELECT AVG(price) FROM clothing_items WHERE is_fair_trade = TRUE;"}
{"prompt":"What are the top 3 countries with the most users on the social media platform, based on user location data? with given SQL schema CREATE TABLE user_location (user_id INT, country VARCHAR(50)); INSERT INTO user_location (user_id, country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'Brazil'), (5, 'Argentina');","completion":"SELECT country, COUNT(user_id) as user_count FROM user_location GROUP BY country ORDER BY user_count DESC LIMIT 3;"}
{"prompt":"Which countries source the most silk and wool textiles? with given SQL schema CREATE TABLE TextileSourcing (country VARCHAR(20), material VARCHAR(20), quantity INT); INSERT INTO TextileSourcing VALUES ('China', 'Silk', 5000), ('Italy', 'Wool', 3000), ('Australia', 'Wool', 4000);","completion":"SELECT country, SUM(quantity) FROM TextileSourcing WHERE material IN ('Silk', 'Wool') GROUP BY country ORDER BY SUM(quantity) DESC;"}
{"prompt":"What is the total amount of socially responsible loans issued to women in 2021? with given SQL schema CREATE TABLE socially_responsible_lending (id INT PRIMARY KEY, loan_amount DECIMAL(10, 2), borrower_gender TEXT, lending_date DATE);","completion":"SELECT SUM(loan_amount) FROM socially_responsible_lending WHERE borrower_gender = 'Female' AND lending_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"List all reverse logistics metrics for January 2023 with given SQL schema CREATE TABLE ReverseLogistics (id INT, metric INT, date DATE); INSERT INTO ReverseLogistics (id, metric, date) VALUES (1, 200, '2023-01-01'), (2, 300, '2023-01-05');","completion":"SELECT metric FROM ReverseLogistics WHERE date BETWEEN '2023-01-01' AND '2023-01-31';"}
{"prompt":"Update bioprocess engineering project information with given SQL schema CREATE TABLE bioprocess_engineering_projects (project_id INT, project_name VARCHAR(255), project_leader VARCHAR(255));","completion":"UPDATE bioprocess_engineering_projects SET project_leader = 'Dr. Jane Smith' WHERE project_id = 1;"}
{"prompt":"What are the names of genetic researchers who have expertise in CRISPR or gene therapy and are based in the US or Canada? with given SQL schema CREATE SCHEMA if not exists genetics; CREATE TABLE if not exists genetics.researchers (id INT, name VARCHAR(100), country VARCHAR(50), expertise VARCHAR(50)); INSERT INTO genetics.researchers (id, name, country, expertise) VALUES (1, 'John Doe', 'US', 'CRISPR'); INSERT INTO genetics.researchers (id, name, country, expertise) VALUES (2, 'Jane Smith', 'CA', 'Gene Therapy'); INSERT INTO genetics.researchers (id, name, country, expertise) VALUES (3, 'Alice Johnson', 'MX', 'Genomics');","completion":"SELECT name FROM genetics.researchers WHERE (expertise = 'CRISPR' OR expertise = 'Gene Therapy') AND (country = 'US' OR country = 'CA');"}
{"prompt":"What is the maximum funding received by a biotech startup in the year 2020? with given SQL schema CREATE TABLE startups (id INT, name VARCHAR(100), industry VARCHAR(50), location VARCHAR(50), funding DECIMAL(10,2)); INSERT INTO startups (id, name, industry, location, funding) VALUES (1, 'StartupA', 'Biotech', 'US', 20000000.50), (2, 'StartupB', 'Biotech', 'UK', 30000000.00), (3, 'StartupC', 'Pharma', 'US', 15000000.00), (4, 'StartupD', 'Biotech', 'DE', 25000000.75);","completion":"SELECT MAX(funding) FROM startups WHERE industry = 'Biotech' AND YEAR(start_date) = 2020;"}
{"prompt":"What is the total number of open data initiatives by state? with given SQL schema CREATE TABLE state_data (state VARCHAR(255), num_initiatives INT); INSERT INTO state_data VALUES ('Alabama', 15), ('Alaska', 12), ('Arizona', 20);","completion":"SELECT state, SUM(num_initiatives) FROM state_data GROUP BY state;"}
{"prompt":"How many mental health parity complaints were filed in the last 12 months by state? with given SQL schema CREATE TABLE mental_health_parity_complaints (complaint_id INT, complaint_date DATE, state VARCHAR(20)); INSERT INTO mental_health_parity_complaints (complaint_id, complaint_date, state) VALUES (1, '2021-01-01', 'California'), (2, '2021-03-15', 'New York'), (3, '2020-12-31', 'Texas');","completion":"SELECT state, COUNT(*) as num_complaints FROM mental_health_parity_complaints WHERE complaint_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) GROUP BY state;"}
{"prompt":"What is the total number of mental health parity coverage in each state, in descending order? with given SQL schema CREATE TABLE MentalHealthParity (State VARCHAR(20), Coverage DECIMAL(5,2)); INSERT INTO MentalHealthParity (State, Coverage) VALUES ('California', 0.75), ('Texas', 0.82), ('New York', 0.91), ('Florida', 0.68), ('Illinois', 0.77);","completion":"SELECT State, SUM(Coverage) as TotalCoverage FROM MentalHealthParity GROUP BY State ORDER BY TotalCoverage DESC;"}
{"prompt":"List all unique hotel_ids from the 'virtual_tour_stats' table with given SQL schema CREATE TABLE virtual_tour_stats (hotel_id INT, view_date DATE, view_duration INT);","completion":"SELECT DISTINCT hotel_id FROM virtual_tour_stats;"}
{"prompt":"Which artists have their works exhibited in the 'Contemporary Art Museum' located in 'New York'? with given SQL schema CREATE TABLE Artists (ArtistID int, Name varchar(50), Nationality varchar(50)); INSERT INTO Artists VALUES (1, 'Pablo Picasso', 'Spanish'); INSERT INTO Artists VALUES (2, 'Andy Warhol', 'American'); CREATE TABLE Exhibitions (ExhibitionID int, Title varchar(50), Museum varchar(50), City varchar(50)); INSERT INTO Exhibitions VALUES (1, 'Cubism', 'Museum of Modern Art', 'New York'); INSERT INTO Exhibitions VALUES (2, 'Pop Art', 'Contemporary Art Museum', 'New York'); CREATE TABLE Exhibits (ExhibitionID int, ArtistID int); INSERT INTO Exhibits VALUES (2, 2);","completion":"SELECT Artists.Name FROM Artists JOIN Exhibits ON Artists.ArtistID = Exhibits.ArtistID JOIN Exhibitions ON Exhibits.ExhibitionID = Exhibitions.ExhibitionID WHERE Exhibitions.Museum = 'Contemporary Art Museum' AND Exhibitions.City = 'New York';"}
{"prompt":"What is the total biomass of each species in the 'species_biomass' table, grouped by species name? with given SQL schema CREATE TABLE species_biomass (species_id INT, species_name TEXT, biomass FLOAT);","completion":"SELECT species_name, SUM(biomass) FROM species_biomass GROUP BY species_name;"}
{"prompt":"Calculate the percentage of endangered languages in each continent, ordered by the percentage in descending order. with given SQL schema CREATE TABLE languages (language_id INT, language_name TEXT, continent TEXT, endangered BOOLEAN); INSERT INTO languages (language_id, language_name, continent, endangered) VALUES (1, 'Quechua', 'South America', true), (2, 'Maori', 'Oceania', false);","completion":"SELECT continent, ROUND(100.0 * SUM(CASE WHEN endangered THEN 1 ELSE 0 END) \/ COUNT(*), 2) as percentage FROM languages GROUP BY continent ORDER BY percentage DESC;"}
{"prompt":"What events have taken place at heritage sites established after the site's establishment? with given SQL schema CREATE TABLE HeritageSites (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), year_established INT); INSERT INTO HeritageSites (id, name, location, year_established) VALUES (2, 'Angkor Wat', 'Cambodia', 1113);","completion":"SELECT hs.name, hs.year_established, e.event_name, e.year FROM HeritageSites hs INNER JOIN Events e ON hs.id = e.heritage_site_id WHERE hs.year_established < e.year;"}
{"prompt":"List all public awareness campaigns in New York focused on anxiety disorders. with given SQL schema CREATE TABLE campaigns (id INT, name TEXT, state TEXT, condition TEXT); INSERT INTO campaigns (id, name, state, condition) VALUES (1, 'BraveNY', 'New York', 'Anxiety'); INSERT INTO campaigns (id, name, state, condition) VALUES (2, 'TexasTough', 'Texas', 'Depression');","completion":"SELECT name FROM campaigns WHERE state = 'New York' AND condition = 'Anxiety';"}
{"prompt":"Find the maximum construction cost for wastewater treatment plants in 'Ontario' with given SQL schema CREATE TABLE wastewater_treatment_plants (id INT, name VARCHAR(50), location VARCHAR(50), construction_cost DECIMAL(10,2)); INSERT INTO wastewater_treatment_plants (id, name, location, construction_cost) VALUES (1, 'Toronto Wastewater Treatment Plant', 'Ontario', 80000000.00);","completion":"SELECT MAX(construction_cost) FROM wastewater_treatment_plants WHERE location = 'Ontario';"}
{"prompt":"List all legal technology patents filed in the EU between 2015 and 2018. with given SQL schema CREATE TABLE patents (patent_id INT, filed_date DATE, country VARCHAR(20)); INSERT INTO patents (patent_id, filed_date, country) VALUES (1, '2015-01-01', 'Germany'), (2, '2018-12-31', 'France');","completion":"SELECT patent_id FROM patents WHERE country LIKE 'EU%' AND filed_date BETWEEN '2015-01-01' AND '2018-12-31';"}
{"prompt":"What is the average depth of marine life zones, grouped by type? with given SQL schema CREATE TABLE marine_life (id INT, type TEXT, depth FLOAT); INSERT INTO marine_life (id, type, depth) VALUES (1, 'Trench', 6000.0), (2, 'Abyssal', 4000.0), (3, 'Hadal', 10000.0);","completion":"SELECT type, AVG(depth) avg_depth FROM marine_life GROUP BY type;"}
{"prompt":"How many broadband subscribers are there in the state of New York, excluding customers with speeds less than 100 Mbps? with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, speed FLOAT, state VARCHAR(20)); INSERT INTO broadband_subscribers (subscriber_id, speed, state) VALUES (1, 75, 'New York'), (2, 150, 'California');","completion":"SELECT COUNT(*) FROM broadband_subscribers WHERE state = 'New York' AND speed >= 100;"}
{"prompt":"What is the total revenue generated by concert ticket sales in the US? with given SQL schema CREATE TABLE concert_tickets (ticket_id int, venue_id int, ticket_price decimal, timestamp datetime, country varchar(255)); INSERT INTO concert_tickets (ticket_id, venue_id, ticket_price, timestamp, country) VALUES (1, 789, 50.00, '2022-06-01 12:00:00', 'United States');","completion":"SELECT SUM(ticket_price) as total_revenue FROM concert_tickets WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' AND country = 'United States';"}
{"prompt":"What is the average number of articles published per day? with given SQL schema CREATE TABLE news_articles (article_id INT PRIMARY KEY, title TEXT, topic TEXT, author TEXT, publication_date DATE);","completion":"SELECT AVG(1.0 * COUNT(*) \/ COUNT(DISTINCT publication_date)) FROM news_articles;"}
{"prompt":"What is the total number of volunteers for each country, for countries with more than 500 total volunteer hours? with given SQL schema CREATE TABLE organizations (id INT, name TEXT, country TEXT, total_volunteer_hours INT); INSERT INTO organizations (id, name, country, total_volunteer_hours) VALUES (1, 'Org A', 'USA', 1200), (2, 'Org B', 'Canada', 800), (3, 'Org C', 'Mexico', 1500);","completion":"SELECT country, SUM(total_volunteer_hours) as total_hours FROM organizations GROUP BY country HAVING SUM(total_volunteer_hours) > 500;"}
{"prompt":"Which causes received funding from donors in both the United States and Canada? with given SQL schema CREATE TABLE donor_location (donor_id INT, country VARCHAR(50), cause VARCHAR(50), donation DECIMAL(10,2)); INSERT INTO donor_location (donor_id, country, cause, donation) VALUES (1, 'United States', 'Global Health', 1000.00), (2, 'Canada', 'Education', 2000.00), (3, 'United States', 'Environment', 1500.00), (4, 'Canada', 'Animal Welfare', 2500.00);","completion":"SELECT cause FROM donor_location WHERE country = 'United States' INTERSECT SELECT cause FROM donor_location WHERE country = 'Canada';"}
{"prompt":"What is the average temperature in Texas for the past month? with given SQL schema CREATE TABLE Weather (location VARCHAR(50), temperature INT, timestamp TIMESTAMP);","completion":"SELECT AVG(temperature) FROM Weather WHERE location = 'Texas' AND timestamp > NOW() - INTERVAL '1 month';"}
{"prompt":"Calculate the average property price per square foot in Sydney for properties built since 2015. with given SQL schema CREATE TABLE Sydney_Properties (PropertyID INT, Neighborhood VARCHAR(255), Year INT, Units INT, Price INT, SquareFootage INT); INSERT INTO Sydney_Properties (PropertyID, Neighborhood, Year, Units, Price, SquareFootage) VALUES (1, 'Bondi', 2014, 3, 1200000, 1000), (2, 'Manly', 2015, 4, 1500000, 1200), (3, 'Coogee', 2016, 5, 1800000, 1500), (4, 'Paddington', 2017, 2, 1000000, 800);","completion":"SELECT AVG(Price \/ SquareFootage) FROM Sydney_Properties WHERE Year >= 2015;"}
{"prompt":"Determine the average food safety inspection scores for restaurants located in 'City A' and 'City B'. with given SQL schema CREATE TABLE restaurants (id INT, name VARCHAR(255), city VARCHAR(255), score INT); INSERT INTO restaurants (id, name, city, score) VALUES (1, 'Restaurant A', 'City A', 90), (2, 'Restaurant B', 'City B', 85), (3, 'Restaurant C', 'City A', 95);","completion":"SELECT city, AVG(score) FROM restaurants GROUP BY city HAVING city IN ('City A', 'City B');"}
{"prompt":"Determine the number of days since the last food safety inspection for each restaurant with given SQL schema CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255)); INSERT INTO Restaurants (RestaurantID, RestaurantName) VALUES (1, 'Mama Mia'), (2, 'Taqueria Los Compadres'), (3, 'Wok Express'); CREATE TABLE Inspections (InspectionID int, RestaurantID int, Violation varchar(255), InspectionDate date); INSERT INTO Inspections (InspectionID, RestaurantID, Violation, InspectionDate) VALUES (1, 2, 'Cross-contamination', '2022-01-01'), (2, 3, 'Improper food storage', '2022-01-05');","completion":"SELECT R.RestaurantName, DATEDIFF(CURDATE(), MAX(I.InspectionDate)) as DaysSinceLastInspection FROM Restaurants R LEFT JOIN Inspections I ON R.RestaurantID = I.RestaurantID GROUP BY R.RestaurantID;"}
{"prompt":"What is the name of the vendor with the highest revenue from organic products? with given SQL schema CREATE TABLE Vendors (VendorID INT, VendorName TEXT, Country TEXT);CREATE TABLE Products (ProductID INT, ProductName TEXT, Price DECIMAL, Organic BOOLEAN, VendorID INT); INSERT INTO Vendors VALUES (1, 'VendorF', 'UK'), (2, 'VendorG', 'UK'); INSERT INTO Products VALUES (1, 'Carrot', 0.6, true, 1), (2, 'Broccoli', 1.2, true, 1), (3, 'Apple', 1.5, true, 2), (4, 'Banana', 0.8, true, 2);","completion":"SELECT v.VendorName FROM Vendors v JOIN Products p ON v.VendorID = p.VendorID WHERE p.Organic = true GROUP BY v.VendorID, v.VendorName HAVING SUM(Price) = (SELECT MAX(TotalPrice) FROM (SELECT SUM(Price) AS TotalPrice FROM Products p JOIN Vendors v ON p.VendorID = v.VendorID WHERE p.Organic = true GROUP BY v.VendorID) t);"}
{"prompt":"What is the maximum temperature ever recorded in space? with given SQL schema CREATE TABLE space_temperatures (id INT, temperature FLOAT); INSERT INTO space_temperatures (id, temperature) VALUES (1, 1000);","completion":"SELECT MAX(temperature) FROM space_temperatures;"}
{"prompt":"Find the number of fans who have attended games of teams with mascots that include the word 'wolf'? with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(50), mascot VARCHAR(50));CREATE TABLE fans (fan_id INT, team_id INT, attended BOOLEAN);INSERT INTO teams (team_id, team_name, mascot) VALUES (1, 'Timberwolves', 'Wolf'), (2, 'Grizzlies', 'Bear'), (3, 'Lynx', 'Cat');INSERT INTO fans (fan_id, team_id, attended) VALUES (1, 1, 1), (2, 1, 1), (3, 2, 0), (4, 3, 1);","completion":"SELECT COUNT(*) AS wolf_fans FROM teams t INNER JOIN fans f ON t.team_id = f.team_id WHERE t.mascot LIKE '%wolf%' AND f.attended = 1;"}
{"prompt":"How many times has a specific IP address been associated with malicious activity in the past year? with given SQL schema CREATE TABLE malicious_activity (id INT, ip_address VARCHAR(255), date DATE); INSERT INTO malicious_activity (id, ip_address, date) VALUES (1, '192.168.1.1', '2022-01-01'), (2, '10.0.0.1', '2022-01-05'), (3, '192.168.1.1', '2022-01-20');","completion":"SELECT COUNT(*) FROM malicious_activity WHERE ip_address = '192.168.1.1' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 365 DAY);"}
{"prompt":"List all cities with their respective counts of autonomous vehicles with given SQL schema CREATE TABLE public.vehicles (id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO public.vehicles (id, type, city) VALUES (1, 'autonomous_bus', 'Toronto'), (2, 'conventional_bus', 'Toronto'), (3, 'autonomous_car', 'Montreal'), (4, 'conventional_car', 'Montreal');","completion":"SELECT city, COUNT(*) FROM public.vehicles WHERE type LIKE 'autonomous%' GROUP BY city;"}
{"prompt":"What is the total number of electric buses across all cities? with given SQL schema CREATE TABLE transportation (id INT, city VARCHAR(255), vehicle_type VARCHAR(255), quantity INT); INSERT INTO transportation (id, city, vehicle_type, quantity) VALUES (1, 'NYC', 'Electric Bus', 200);","completion":"SELECT SUM(quantity) FROM transportation WHERE vehicle_type = 'Electric Bus';"}
{"prompt":"Calculate the total revenue for garments manufactured in the US and sold in California. with given SQL schema CREATE TABLE garment_manufacturing(id INT PRIMARY KEY, garment_id INT, country VARCHAR(50), material VARCHAR(50), manufacturing_date DATE, quantity INT); CREATE TABLE garment_sales(id INT PRIMARY KEY, garment_id INT, store_id INT, sale_date DATE, units INT, revenue DECIMAL(10,2));","completion":"SELECT SUM(gs.revenue) FROM garment_manufacturing gm JOIN garment_sales gs ON gm.garment_id = gs.garment_id WHERE gm.country = 'United States' AND gs.store_id IN (SELECT id FROM stores WHERE region = 'California');"}
{"prompt":"Count the number of 'T-Shirt' items manufactured in Turkey in 2022. with given SQL schema CREATE TABLE Manufacturing (id INT, garment_type VARCHAR(20), country VARCHAR(20), year INT, quantity INT); INSERT INTO Manufacturing (id, garment_type, country, year, quantity) VALUES (1, 'Dress', 'Turkey', 2022, 300), (2, 'Shirt', 'Turkey', 2022, 450), (3, 'Pant', 'Turkey', 2022, 600), (4, 'T-Shirt', 'Turkey', 2022, 250);","completion":"SELECT COUNT(*) as num_tshirts FROM Manufacturing WHERE garment_type = 'T-Shirt' AND country = 'Turkey' AND year = 2022;"}
{"prompt":"What was the total sales amount for each product category in 2021? with given SQL schema CREATE TABLE sales_2021 AS SELECT * FROM sales WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31'; ALTER TABLE sales_2021 ADD COLUMN product_category VARCHAR(50); UPDATE sales_2021 SET product_category = CASE WHEN product_id = 1 THEN 'Tops' WHEN product_id = 2 THEN 'Bottoms' WHEN product_id = 3 THEN 'Outerwear' WHEN product_id = 4 THEN 'Accessories' END;","completion":"SELECT product_category, SUM(sale_amount) FROM sales_2021 GROUP BY product_category;"}
{"prompt":"Find the total premium for auto policies in New Jersey. with given SQL schema CREATE TABLE policyholders (id INT, name TEXT, state TEXT, policy_type TEXT, premium FLOAT); INSERT INTO policyholders (id, name, state, policy_type, premium) VALUES (1, 'Rebecca Martinez', 'New Jersey', 'Auto', 1500.00), (2, 'Mohammed Ahmed', 'New York', 'Home', 2000.00);","completion":"SELECT SUM(policyholders.premium) FROM policyholders WHERE policyholders.state = 'New Jersey' AND policyholders.policy_type = 'Auto';"}
{"prompt":"What are the unique labor rights advocacy groups in Latin America? with given SQL schema CREATE TABLE labor_advocacy (group_name VARCHAR(50), region VARCHAR(50)); INSERT INTO labor_advocacy (group_name, region) VALUES ('CUT', 'Brazil'); INSERT INTO labor_advocacy (group_name, region) VALUES ('CNT', 'Argentina'); INSERT INTO labor_advocacy (group_name, region) VALUES ('CGT', 'Mexico'); INSERT INTO labor_advocacy (group_name, region) VALUES ('UNORCA', 'Colombia');","completion":"SELECT DISTINCT group_name FROM labor_advocacy WHERE region IN ('Brazil', 'Argentina', 'Mexico', 'Colombia');"}
{"prompt":"What is the average union membership size for workplaces in the 'labor_rights' table? with given SQL schema CREATE TABLE labor_rights (workplace_id INT, union_membership_size INT);","completion":"SELECT AVG(union_membership_size) FROM labor_rights;"}
{"prompt":"What are the vehicle models that have a battery range of 350 miles or more, and were sold between January and June 2023? with given SQL schema CREATE TABLE VehicleSales (SaleID INT, VehicleModel VARCHAR(50), SaleDate DATE); INSERT INTO VehicleSales (SaleID, VehicleModel, SaleDate) VALUES (1, 'Model S', '2023-02-01'); INSERT INTO VehicleSales (SaleID, VehicleModel, SaleDate) VALUES (2, 'Model X', '2023-03-15'); CREATE TABLE VehicleSpecifications (SpecID INT, VehicleModel VARCHAR(50), SpecName VARCHAR(50), SpecValue VARCHAR(50)); INSERT INTO VehicleSpecifications (SpecID, VehicleModel, SpecName, SpecValue) VALUES (1, 'Model S', 'Battery Range', '400'); INSERT INTO VehicleSpecifications (SpecID, VehicleModel, SpecName, SpecValue) VALUES (2, 'Model X', 'Battery Range', '360');","completion":"SELECT VehicleModel FROM VehicleSales INNER JOIN VehicleSpecifications ON VehicleSales.VehicleModel = VehicleSpecifications.VehicleModel WHERE VehicleSpecifications.SpecName = 'Battery Range' AND VehicleSpecifications.SpecValue >= 350 AND VehicleSales.SaleDate BETWEEN '2023-01-01' AND '2023-06-30'"}
{"prompt":"What is the average landfill tipping fee in the state of New York? with given SQL schema CREATE TABLE landfill (state VARCHAR(2), tipping_fee DECIMAL(5,2)); INSERT INTO landfill (state, tipping_fee) VALUES ('NY', 65.30), ('NJ', 71.50), ('CA', 51.75);","completion":"SELECT AVG(tipping_fee) FROM landfill WHERE state = 'NY';"}
{"prompt":"Insert new water conservation initiatives in the 'Great Lakes' region with given SQL schema CREATE TABLE conservation_initiatives ( id INT PRIMARY KEY, region VARCHAR(255), initiative_name VARCHAR(255), start_date DATE, end_date DATE);","completion":"INSERT INTO conservation_initiatives (id, region, initiative_name, start_date, end_date) VALUES (1, 'Great Lakes', 'Rainwater harvesting program', CURDATE(), DATE_ADD(CURDATE(), INTERVAL 1 YEAR));"}
{"prompt":"How many users joined in the last 30 days? with given SQL schema CREATE TABLE user_registrations (id INT, registration_date DATE); INSERT INTO user_registrations (id, registration_date) VALUES (1, '2022-06-15'), (2, '2022-07-10'), (3, '2022-07-28'), (4, '2022-08-01');","completion":"SELECT COUNT(*) FROM user_registrations WHERE registration_date >= CURDATE() - INTERVAL 30 DAY;"}
{"prompt":"What is the average safety rating of all creative AI applications? with given SQL schema CREATE TABLE creative_ai (app_name TEXT, safety_rating INTEGER); INSERT INTO creative_ai (app_name, safety_rating) VALUES ('AI Painter', 85), ('AI Music Composer', 90), ('AI Poet', 80);","completion":"SELECT AVG(safety_rating) FROM creative_ai;"}
{"prompt":"What's the total number of farmers in the 'young_farmer_program' table? with given SQL schema CREATE TABLE young_farmer_program (id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), age INT, gender VARCHAR(10), location VARCHAR(50));","completion":"SELECT COUNT(*) FROM young_farmer_program;"}
{"prompt":"Determine the difference in launch dates for each pair of consecutive satellite launches, partitioned by country. with given SQL schema CREATE TABLE SatelliteLaunches (LaunchID INT, Country VARCHAR(50), LaunchDate DATE); INSERT INTO SatelliteLaunches (LaunchID, Country, LaunchDate) VALUES (1, 'USA', '2015-01-01'); INSERT INTO SatelliteLaunches (LaunchID, Country, LaunchDate) VALUES (2, 'USA', '2016-01-01'); INSERT INTO SatelliteLaunches (LaunchID, Country, LaunchDate) VALUES (3, 'China', '2014-01-01'); INSERT INTO SatelliteLaunches (LaunchID, Country, LaunchDate) VALUES (4, 'China', '2015-01-01'); INSERT INTO SatelliteLaunches (LaunchID, Country, LaunchDate) VALUES (5, 'Russia', '2013-01-01');","completion":"SELECT Country, LaunchDate, LEAD(LaunchDate) OVER (PARTITION BY Country ORDER BY LaunchDate) AS Next_LaunchDate, DATEDIFF(day, LaunchDate, LEAD(LaunchDate) OVER (PARTITION BY Country ORDER BY LaunchDate)) AS Days_Between_Launches FROM SatelliteLaunches;"}
{"prompt":"List all aircraft produced by Orbital Manufacturing with a production cost greater than $12 million. with given SQL schema CREATE TABLE Aircraft (aircraft_id INT, manufacturer VARCHAR(255), production_cost FLOAT); INSERT INTO Aircraft (aircraft_id, manufacturer, production_cost) VALUES (1, 'Orbital Manufacturing', 15000000), (2, 'Aerodyne Inc.', 11000000), (3, 'Orbital Manufacturing', 13500000);","completion":"SELECT aircraft_id, manufacturer, production_cost FROM Aircraft WHERE manufacturer = 'Orbital Manufacturing' AND production_cost > 12000000;"}
{"prompt":"What is the distribution of aircraft accidents by year for each airline type? with given SQL schema CREATE TABLE AircraftAccidentsByYear (id INT, airline VARCHAR(50), airline_type VARCHAR(50), accident_year INT); INSERT INTO AircraftAccidentsByYear (id, airline, airline_type, accident_year) VALUES (1, 'Delta', '737', 2015), (2, 'Delta', '757', 2017), (3, 'United', '747', 2013), (4, 'United', '777', 2018), (5, 'Southwest', '737', 2016), (6, 'Southwest', '738', 2019);","completion":"SELECT airline_type, accident_year, COUNT(*) as total_accidents FROM AircraftAccidentsByYear GROUP BY airline_type, accident_year ORDER BY airline_type, accident_year;"}
{"prompt":"DELETE all records of donors who have not donated more than $5000 in total between 2018 and 2022. with given SQL schema CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(50), total_donations DECIMAL(10,2)); INSERT INTO Donors (donor_id, donor_name, total_donations) VALUES (1, 'John Smith', 8000), (2, 'Jane Doe', 6000), (3, 'Bob Brown', 3000), (4, 'Alice Johnson', 5000), (5, 'Charlie Davis', 7000);","completion":"DELETE FROM Donors WHERE donor_id NOT IN (SELECT donor_id FROM (SELECT donor_id, SUM(donation_amount) AS total_donations FROM Donations WHERE donation_year BETWEEN 2018 AND 2022 GROUP BY donor_id) AS DonationTotals WHERE total_donations > 5000);"}
{"prompt":"Find the number of attendees at an event in New York City. with given SQL schema CREATE TABLE Events (EventID INT, EventName TEXT, City TEXT, Attendees INT); INSERT INTO Events (EventID, EventName, City, Attendees) VALUES (1, 'Art Exhibit', 'New York City', 200), (2, 'Theater Performance', 'Chicago', 150), (3, 'Music Concert', 'Los Angeles', 300);","completion":"SELECT COUNT(Attendees) FROM Events WHERE City = 'New York City';"}
{"prompt":"What is the total funding received by art programs for underrepresented communities in the last 5 years? with given SQL schema CREATE TABLE FundingSources (ID INT, FundingSource VARCHAR(255), Amount DECIMAL(10,2), FundingDate DATE); CREATE TABLE ArtPrograms (ID INT, ProgramName VARCHAR(255), ProgramType VARCHAR(255), StartDate DATE, EndDate DATE);","completion":"SELECT SUM(f.Amount) as TotalFunding FROM FundingSources f JOIN ArtPrograms a ON f.FundingDate BETWEEN a.StartDate AND a.EndDate WHERE a.ProgramType = 'Underrepresented Communities' AND f.FundingDate >= DATEADD(year, -5, GETDATE());"}
{"prompt":"What was the average age of attendees at musical events in New York? with given SQL schema CREATE TABLE Events (event_id INT, event_type VARCHAR(50), location VARCHAR(50)); INSERT INTO Events (event_id, event_type, location) VALUES (1, 'Musical', 'New York'), (2, 'Theater', 'Los Angeles'); CREATE TABLE Attendance (attendee_id INT, event_id INT, age INT); INSERT INTO Attendance (attendee_id, event_id, age) VALUES (1, 1, 35), (2, 1, 45), (3, 1, 28), (4, 2, 50);","completion":"SELECT AVG(age) FROM Attendance A WHERE EXISTS (SELECT 1 FROM Events E WHERE E.event_id = A.event_id AND E.event_type = 'Musical' AND E.location = 'New York')"}
{"prompt":"insert new tv show 'Money Heist' into the tv_shows table with given SQL schema CREATE TABLE tv_shows(id INT PRIMARY KEY, name VARCHAR(255), rating INT);","completion":"INSERT INTO tv_shows(id, name, rating) VALUES(1, 'Money Heist', 8);"}
{"prompt":"Delete records of completed projects from the Projects table. with given SQL schema CREATE TABLE Projects (ProjectID INT, ProjectName VARCHAR(50), StartDate DATE, EndDate DATE, EmployeeID INT, FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID));","completion":"DELETE FROM Projects WHERE EndDate < CURDATE();"}
{"prompt":"Update the name of the contractor, 'Smith Inc.', to 'GreenSmith Inc.' in the 'contractors' table where the contractor_id is 101 with given SQL schema CREATE TABLE contractors (contractor_id INT, name VARCHAR(50)); INSERT INTO contractors (contractor_id, name) VALUES (101, 'Smith Inc.');","completion":"UPDATE contractors SET name = 'GreenSmith Inc.' WHERE contractor_id = 101;"}
{"prompt":"Update the permit status to 'approved' for permit ID 1234 with given SQL schema CREATE TABLE building_permits (permit_id INT, status VARCHAR(20));","completion":"UPDATE building_permits SET status = 'approved' WHERE permit_id = 1234;"}
{"prompt":"Which dispensaries sold the most pre-rolls in Q2 2021, sorted by total sales? with given SQL schema CREATE TABLE Dispensaries (DispensaryID INT, Name VARCHAR(100), Location VARCHAR(100)); CREATE TABLE Inventory (ProductID INT, ProductName VARCHAR(100), DispensaryID INT, QuantitySold INT, SaleDate DATE);","completion":"SELECT I.ProductName, SUM(I.QuantitySold) as TotalSales FROM Inventory I JOIN Dispensaries D ON I.DispensaryID = D.DispensaryID WHERE I.ProductName = 'Pre-rolls' AND I.SaleDate BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY I.ProductName ORDER BY TotalSales DESC;"}
{"prompt":"Find the minimum billing amount for cases in the 'Northern' region. with given SQL schema CREATE TABLE cases (id INT, region VARCHAR(10), billing_amount INT); INSERT INTO cases (id, region, billing_amount) VALUES (1, 'Eastern', 5000), (2, 'Western', 7000), (3, 'Eastern', 6000), (4, 'Northern', 8000), (5, 'Northern', 3000);","completion":"SELECT MIN(billing_amount) FROM cases WHERE region = 'Northern';"}
{"prompt":"List the case number, outcome, and corresponding attorney ID for cases in the 'criminal' schema, ordered by case number. with given SQL schema CREATE SCHEMA criminal; CREATE TABLE case_outcomes (case_number INT, outcome VARCHAR(255)); CREATE TABLE cases (case_id INT, case_number INT, attorney_id INT);","completion":"SELECT co.case_number, co.outcome, c.attorney_id FROM criminal.case_outcomes co INNER JOIN cases c ON co.case_number = c.case_number ORDER BY co.case_number;"}
{"prompt":"What is the average settlement amount for cases with billable hours greater than 30? with given SQL schema CREATE TABLE Billing (BillID INT, CaseID INT, Hours INT, BillAmount INT); INSERT INTO Billing (BillID, CaseID, Hours, BillAmount) VALUES (2, 2, 35, 7000);CREATE TABLE Settlements (SettlementID INT, CaseID INT, SettlementAmount INT); INSERT INTO Settlements (SettlementID, CaseID, SettlementAmount) VALUES (2, 2, 12000);","completion":"SELECT AVG(s.SettlementAmount) FROM Settlements s JOIN Billing b ON s.CaseID = b.CaseID WHERE b.Hours > 30"}
{"prompt":"What is the minimum number of successful cases handled by attorneys who identify as Latinx? with given SQL schema CREATE TABLE attorneys (attorney_id INT, ethnicity VARCHAR(20), successful_cases INT); INSERT INTO attorneys (attorney_id, ethnicity, successful_cases) VALUES (1, 'Caucasian', 15), (2, 'African', 10), (3, 'Latinx', 14), (4, 'Asian', 12);","completion":"SELECT MIN(successful_cases) FROM attorneys WHERE ethnicity = 'Latinx';"}
{"prompt":"Which chemical manufacturers produce a specific type of chemical and have not reported any safety incidents in the past year? with given SQL schema CREATE TABLE chemical_manufacturers (manufacturer_id INT, name VARCHAR(255)); INSERT INTO chemical_manufacturers (manufacturer_id, name) VALUES (1, 'ManufacturerA'), (2, 'ManufacturerB'), (3, 'ManufacturerC'); CREATE TABLE produces (producer_id INT, manufacturer_id INT, chemical_type VARCHAR(255)); INSERT INTO produces (producer_id, manufacturer_id, chemical_type) VALUES (1, 1, 'ChemicalA'), (2, 2, 'ChemicalB'), (3, 3, 'ChemicalA'); CREATE TABLE safety_incidents (incident_id INT, manufacturer_id INT, reported_date DATE); INSERT INTO safety_incidents (incident_id, manufacturer_id, reported_date) VALUES (1, 1, '2020-01-01'), (2, 2, '2020-05-05'), (3, 3, '2020-12-25');","completion":"SELECT p.name FROM produces p JOIN chemical_manufacturers cm ON p.manufacturer_id = cm.manufacturer_id WHERE p.chemical_type = 'ChemicalA' AND cm.manufacturer_id NOT IN (SELECT si.manufacturer_id FROM safety_incidents si WHERE si.reported_date BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE())"}
{"prompt":"What is the number of climate change-related news articles published in Australia in 2019 and 2020? with given SQL schema CREATE TABLE NewsArticles (title VARCHAR(50), year INT, location VARCHAR(50)); INSERT INTO NewsArticles (title, year, location) VALUES ('Climate change in Australia', 2019, 'Australia'), ('Climate change in Australia', 2020, 'Australia');","completion":"SELECT location, COUNT(*) as 'Number of News Articles' FROM NewsArticles WHERE year IN (2019, 2020) AND location = 'Australia' GROUP BY location;"}
{"prompt":"What are the R&D expenses per quarter for a specific drug? with given SQL schema CREATE TABLE r_and_d_expenses (expense_id INT, drug_id INT, expense_date DATE, amount FLOAT); INSERT INTO r_and_d_expenses (expense_id, drug_id, expense_date, amount) VALUES (1, 1001, '2019-01-01', 50000.0), (2, 1001, '2019-04-01', 55000.0), (3, 1001, '2019-07-01', 60000.0), (4, 1001, '2019-10-01', 65000.0), (5, 1002, '2019-01-01', 45000.0);","completion":"SELECT drug_id, DATE_TRUNC('quarter', expense_date) as quarter, SUM(amount) as total_expenses FROM r_and_d_expenses WHERE drug_id = 1001 GROUP BY drug_id, quarter;"}
{"prompt":"What are the top 5 countries with the highest sales for a specific drug? with given SQL schema CREATE TABLE sales_data (id INT, drug VARCHAR(255), country VARCHAR(255), sales DECIMAL(10,2)); INSERT INTO sales_data (id, drug, country, sales) VALUES (1, 'DrugA', 'USA', 1000000.00); INSERT INTO sales_data (id, drug, country, sales) VALUES (2, 'DrugA', 'Canada', 500000.00); INSERT INTO sales_data (id, drug, country, sales) VALUES (3, 'DrugB', 'USA', 800000.00);","completion":"SELECT drug, country, SUM(sales) FROM sales_data GROUP BY drug, country ORDER BY SUM(sales) DESC LIMIT 5;"}
{"prompt":"What are the names and number of females in the vaccination_sites table who administer the Moderna vaccine? with given SQL schema CREATE TABLE vaccination_sites (site_id INT, site_name TEXT, vaccine TEXT, num_female_staff INT); INSERT INTO vaccination_sites (site_id, site_name, vaccine, num_female_staff) VALUES (1, 'Site A', 'Moderna', 15), (2, 'Site B', 'Johnson', 8), (3, 'Site C', 'Pfizer', 12);","completion":"SELECT site_name, num_female_staff FROM vaccination_sites WHERE vaccine = 'Moderna' AND num_female_staff > 0;"}
{"prompt":"What is the percentage of the population fully vaccinated against COVID-19, by race and ethnicity? with given SQL schema CREATE TABLE covid_vaccinations (race_ethnicity VARCHAR(20), pct_fully_vaccinated FLOAT); INSERT INTO covid_vaccinations (race_ethnicity, pct_fully_vaccinated) VALUES ('White', 70.5), ('Black', 62.3), ('Hispanic', 58.1), ('Asian', 75.6), ('Native American', 55.0), ('Pacific Islander', 65.4);","completion":"SELECT race_ethnicity, (SUM(pct_fully_vaccinated) \/ COUNT(race_ethnicity) * 100) as pct_fully_vaccinated FROM covid_vaccinations GROUP BY race_ethnicity;"}
{"prompt":"Delete diversity metrics for 2019 from the database. with given SQL schema CREATE TABLE Diversity (Company VARCHAR(50), Year INT, DiverseEmployees INT); INSERT INTO Diversity (Company, Year, DiverseEmployees) VALUES ('Acme Inc.', 2018, 50), ('Acme Inc.', 2019, 75), ('Acme Inc.', 2020, 85), ('Beta Corp.', 2018, 30), ('Beta Corp.', 2019, 35), ('Beta Corp.', 2020, 40);","completion":"DELETE FROM Diversity WHERE Year = 2019;"}
{"prompt":"What is the percentage of crop yield by crop in 'crop_distribution' table? with given SQL schema CREATE TABLE crop_distribution (country VARCHAR(50), crop VARCHAR(50), yield INT); INSERT INTO crop_distribution (country, crop, yield) VALUES ('Canada', 'corn', 1000), ('Canada', 'wheat', 2000), ('USA', 'corn', 3000), ('USA', 'wheat', 4000), ('Mexico', 'corn', 2500), ('Mexico', 'wheat', 1500);","completion":"SELECT crop, ROUND(100.0 * yield \/ SUM(yield) OVER (), 2) as yield_percentage FROM crop_distribution;"}
{"prompt":"Which indigenous food systems have the highest production in Africa? with given SQL schema CREATE TABLE indigenous_systems (continent VARCHAR(255), system_name VARCHAR(255), production INT); INSERT INTO indigenous_systems (continent, system_name, production) VALUES ('Africa', 'SystemA', 3000), ('Africa', 'SystemB', 3500), ('Europe', 'SystemC', 2000); CREATE VIEW african_indigenous_systems AS SELECT * FROM indigenous_systems WHERE continent = 'Africa';","completion":"SELECT system_name, MAX(production) FROM african_indigenous_systems GROUP BY system_name"}
{"prompt":"How many support programs were offered in each region? with given SQL schema CREATE TABLE support_program (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO support_program (id, name, region) VALUES (1, 'Tutoring', 'Northeast'), (2, 'Mentoring', 'Northeast'), (3, 'Skills Training', 'Southeast'), (4, 'Counseling', 'Southeast'), (5, 'Job Placement', 'Midwest');","completion":"SELECT region, COUNT(id) as total_programs FROM support_program GROUP BY region;"}
{"prompt":"Delete all records from the \"ocean_temperature\" table where the temperature is below -2 degrees Celsius with given SQL schema CREATE TABLE ocean_temperature (id INT PRIMARY KEY, location VARCHAR(255), temperature FLOAT); INSERT INTO ocean_temperature (id, location, temperature) VALUES (1, 'Pacific Ocean', 28.5); INSERT INTO ocean_temperature (id, location, temperature) VALUES (2, 'Atlantic Ocean', 29.8); INSERT INTO ocean_temperature (id, location, temperature) VALUES (3, 'Indian Ocean', 27.3);","completion":"DELETE FROM ocean_temperature WHERE temperature < -2;"}
{"prompt":"What is the minimum depth of all marine protected areas in the Pacific region? with given SQL schema CREATE TABLE marine_protected_areas (name TEXT, region TEXT, min_depth FLOAT);   INSERT INTO marine_protected_areas (name, region, min_depth) VALUES ('MPA1', 'Pacific', 123.45);   INSERT INTO marine_protected_areas (name, region, min_depth) VALUES ('MPA2', 'Atlantic', 234.56);","completion":"SELECT MIN(min_depth) FROM marine_protected_areas WHERE region = 'Pacific';"}
{"prompt":"List all smart contracts and their respective total transaction volume for Q3 2021, ordered by the smart contracts with the highest transaction volume in Q3 2021. with given SQL schema CREATE TABLE SmartContracts (contract_id INT, contract_name VARCHAR(255), transaction_volume DECIMAL(18,2)); INSERT INTO SmartContracts (contract_id, contract_name, transaction_volume) VALUES (1, 'Uniswap', 156789.12), (2, 'SushiSwap', 256789.12), (3, 'Aave', 356789.12), (4, 'Compound', 456789.12), (5, 'Yearn Finance', 556789.12);","completion":"SELECT contract_name, transaction_volume FROM (SELECT contract_name, transaction_volume, RANK() OVER (ORDER BY transaction_volume DESC) as rank FROM SmartContracts WHERE SmartContracts.transaction_date BETWEEN '2021-07-01' AND '2021-09-30') AS ranked_contracts ORDER BY rank;"}
{"prompt":"What are the top 3 decentralized applications by transaction volume? with given SQL schema CREATE TABLE decentralized_applications (id INT, dapp_name VARCHAR(255), transaction_volume INT); INSERT INTO decentralized_applications (id, dapp_name, transaction_volume) VALUES (1, 'Uniswap', 10000000), (2, 'Aave', 5000000), (3, 'Compound', 7000000), (4, 'SushiSwap', 8000000), (5, 'Yearn Finance', 6000000), (6, 'MakerDAO', 9000000);","completion":"SELECT dapp_name, transaction_volume FROM decentralized_applications ORDER BY transaction_volume DESC LIMIT 3;"}
{"prompt":"What is the total area of 'Temperate Forests' under sustainable management? with given SQL schema CREATE TABLE TemperateForests (region VARCHAR(20), area FLOAT, management_status VARCHAR(10)); INSERT INTO TemperateForests (region, area, management_status) VALUES ('Temperate Forests', 12345.67, 'sustainable'), ('Temperate Forests', 8765.43, 'unsustainable');","completion":"SELECT SUM(area) FROM TemperateForests WHERE region = 'Temperate Forests' AND management_status = 'sustainable';"}
{"prompt":"Which beauty products have lead ingredients associated with health risks? with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(100), brand_name VARCHAR(100));CREATE TABLE ingredients (ingredient_id INT, ingredient_name VARCHAR(100), lead_indicator BOOLEAN);CREATE TABLE product_ingredients (product_id INT, ingredient_id INT);","completion":"SELECT p.product_name, i.ingredient_name FROM products p JOIN product_ingredients pi ON p.product_id = pi.product_id JOIN ingredients i ON pi.ingredient_id = i.ingredient_id WHERE i.lead_indicator = true;"}
{"prompt":"What is the total revenue for each cultural event category, and how many events are there in total for each category? with given SQL schema CREATE TABLE revenue (id INT, event TEXT, category TEXT, price DECIMAL(5,2), quantity INT); INSERT INTO revenue (id, event, category, price, quantity) VALUES (1, 'Concert', 'music', 50.00, 100), (2, 'Jazz Festival', 'music', 35.00, 200), (3, 'Theatre Play', 'theatre', 75.00, 150);","completion":"SELECT category, SUM(price * quantity) as total_revenue, COUNT(DISTINCT event) as num_events FROM revenue GROUP BY category;"}
{"prompt":"What is the minimum transaction amount for clients who made their first transaction in Q1 2023 and have a credit score over 800? with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(50), credit_score INT, first_transaction_date DATE);CREATE TABLE transactions (transaction_id INT, client_id INT, transaction_date DATE, total_amount DECIMAL(10,2));","completion":"SELECT MIN(total_amount) FROM transactions t INNER JOIN clients c ON t.client_id = c.client_id WHERE c.first_transaction_date = t.transaction_date AND c.credit_score > 800 AND t.transaction_date BETWEEN '2023-01-01' AND '2023-03-31'"}
{"prompt":"Find the total number of units produced by each worker, ranked by the highest total. with given SQL schema CREATE TABLE worker (id INT, name VARCHAR(50), units_produced INT); INSERT INTO worker (id, name, units_produced) VALUES (1, 'John Doe', 1000), (2, 'Jane Smith', 1200), (3, 'Mike Johnson', 1500), (4, 'Alice Williams', 1800);","completion":"SELECT name, SUM(units_produced) as total_units FROM worker GROUP BY name ORDER BY total_units DESC;"}
{"prompt":"Update the 'Angkor Wat' excavation to have a start date of 1300-01-01. with given SQL schema CREATE TABLE ExcavationSites (SiteID INT PRIMARY KEY, Name VARCHAR(255), Country VARCHAR(255), StartDate DATE, EndDate DATE); INSERT INTO ExcavationSites (SiteID, Name, Country, StartDate, EndDate) VALUES (5, 'Angkor Wat', 'Cambodia', '1860-01-01', '1860-05-01');","completion":"UPDATE ExcavationSites SET StartDate = '1300-01-01' WHERE Name = 'Angkor Wat';"}
{"prompt":"Update the location of a rural clinic in 'rural_clinics' table. with given SQL schema CREATE TABLE rural_clinics (id INT, name TEXT, location TEXT, num_workers INT, avg_age FLOAT);","completion":"UPDATE rural_clinics SET location = 'Rural Area 6' WHERE id = 3;"}
{"prompt":"What is the total number of patients served by rural healthcare centers in Canada and the UK, excluding those served in urban areas? with given SQL schema CREATE TABLE patients_canada_uk (name TEXT, location TEXT, healthcare_center TEXT, served_in INT); INSERT INTO patients_canada_uk (name, location, healthcare_center, served_in) VALUES ('Patient A', 'Rural Canada', 'HC A', 1), ('Patient B', 'Urban Canada', 'HC B', 1), ('Patient C', 'Rural UK', 'HC C', 1);","completion":"SELECT SUM(served_in) as total_patients FROM patients_canada_uk WHERE location LIKE 'Rural%';"}
{"prompt":"What's the total number of sustainable investments made by venture capital firms in the United States? with given SQL schema CREATE TABLE venture_capitals (id INT, name VARCHAR(100), location VARCHAR(100)); INSERT INTO venture_capitals (id, name, location) VALUES (1, 'Sequoia Capital', 'United States'), (2, 'Kleiner Perkins', 'United States'); CREATE TABLE sustainable_investments (id INT, venture_capital_id INT, value FLOAT); INSERT INTO sustainable_investments (id, venture_capital_id, value) VALUES (1, 1, 10000000), (2, 1, 20000000), (3, 2, 15000000);","completion":"SELECT SUM(value) FROM sustainable_investments JOIN venture_capitals ON sustainable_investments.venture_capital_id = venture_capitals.id WHERE venture_capitals.location = 'United States';"}
{"prompt":"How many volunteer hours were recorded for each program in Q2 2021? with given SQL schema CREATE TABLE VolunteerHours (VolunteerID INT, ProgramID INT, Hours DECIMAL(5,2), HourDate DATE); INSERT INTO VolunteerHours (VolunteerID, ProgramID, Hours, HourDate) VALUES (1, 1, 5, '2021-04-15'), (2, 2, 3, '2021-06-02'), (1, 1, 4, '2021-05-31'), (3, 3, 2, '2021-04-01'); CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Arts & Culture'), (2, 'Health & Wellness'), (3, 'Environment');","completion":"SELECT ProgramID, SUM(Hours) as TotalHours FROM VolunteerHours WHERE HourDate BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY ProgramID;"}
{"prompt":"Find the CO2 emissions (t) of the energy sector in Australia with given SQL schema CREATE TABLE co2_emissions (id INT, country VARCHAR(50), sector VARCHAR(50), emissions FLOAT); INSERT INTO co2_emissions (id, country, sector, emissions) VALUES (1, 'Canada', 'Transportation', 120), (2, 'Canada', 'Energy', 150), (3, 'Australia', 'Energy', 200);","completion":"SELECT emissions FROM co2_emissions WHERE country = 'Australia' AND sector = 'Energy';"}
{"prompt":"What is the average hydroelectric power generation in Norway and Sweden? with given SQL schema CREATE TABLE hydro_power (country VARCHAR(20), generation FLOAT); INSERT INTO hydro_power (country, generation) VALUES ('Norway', 128.5), ('Norway', 129.1), ('Sweden', 98.7), ('Sweden', 99.3);","completion":"SELECT AVG(generation) as avg_generation, country FROM hydro_power GROUP BY country;"}
{"prompt":"List all the projects implemented in Nepal, their implementing organizations, and the total budget for each project, sorted by the implementing organizations. with given SQL schema CREATE TABLE projects (id INT, name TEXT, country TEXT, budget INT); INSERT INTO projects VALUES (1, 'School Rebuilding', 'Nepal', 100000); CREATE TABLE organizations_projects (organization_id INT, project_id INT); INSERT INTO organizations_projects VALUES (1, 1); CREATE TABLE organizations (id INT, name TEXT); INSERT INTO organizations VALUES (1, 'UNICEF');","completion":"SELECT o.name, p.name, SUM(p.budget) FROM projects p INNER JOIN organizations_projects op ON p.id = op.project_id INNER JOIN organizations o ON op.organization_id = o.id WHERE p.country = 'Nepal' GROUP BY o.id, p.name ORDER BY o.name;"}
{"prompt":"What is the average amount of aid provided per refugee in the Middle East? with given SQL schema CREATE TABLE refugees (id INT, name TEXT, region TEXT); CREATE TABLE aid_distributions (id INT, refugee_id INT, amount DECIMAL); INSERT INTO refugees (id, name, region) VALUES (1, 'Ahmed', 'Middle East'), (2, 'Fatima', 'Middle East'), (3, 'Jose', 'South America'); INSERT INTO aid_distributions (id, refugee_id, amount) VALUES (1, 1, 100.00), (2, 1, 150.00), (3, 2, 200.00);","completion":"SELECT AVG(ad.amount) as avg_aid_per_refugee FROM refugees r INNER JOIN aid_distributions ad ON r.id = ad.refugee_id WHERE r.region = 'Middle East';"}
{"prompt":"Which users live in 'North America' and are in the 'Older' age group? with given SQL schema CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), age INT, city VARCHAR(50), region VARCHAR(50)); INSERT INTO users (id, name, age, city, region) VALUES (1, 'Alice', 30, 'New York', 'North America'); INSERT INTO users (id, name, age, city, region) VALUES (2, 'Bob', 25, 'San Francisco', 'North America'); INSERT INTO users (id, name, age, city, region) VALUES (3, 'Charlie', 65, 'Los Angeles', 'North America');","completion":"SELECT name FROM users WHERE region = 'North America' AND (CASE WHEN age > 30 THEN 'Older' ELSE 'Younger' END) = 'Older';"}
{"prompt":"Find the number of accessible and non-accessible vehicles in the wheelchair-friendly fleet with given SQL schema CREATE TABLE wheelchair_friendly_fleet (vehicle_id INT, vehicle_type VARCHAR(10), accessible BOOLEAN); INSERT INTO wheelchair_friendly_fleet (vehicle_id, vehicle_type, accessible) VALUES (5, 'Minibus', true), (6, 'Van', true), (7, 'Minibus', false), (8, 'Tuk-tuk', true);","completion":"SELECT vehicle_type, SUM(accessible) as number_of_accessible_vehicles, SUM(NOT accessible) as number_of_non_accessible_vehicles FROM wheelchair_friendly_fleet GROUP BY vehicle_type;"}
{"prompt":"What are the names of all routes that have a bus and a subway service? with given SQL schema CREATE TABLE Routes (RouteID int, RouteName varchar(50), ServiceType varchar(50)); INSERT INTO Routes VALUES (1, 'Route 1', 'Bus'); INSERT INTO Routes VALUES (2, 'Route 2', 'Subway'); INSERT INTO Routes VALUES (3, 'Route 3', 'Bus and Subway');","completion":"SELECT RouteName FROM Routes WHERE ServiceType = 'Bus' INTERSECT SELECT RouteName FROM Routes WHERE ServiceType = 'Subway';"}
{"prompt":"Which routes are wheelchair accessible in a given city? with given SQL schema CREATE TABLE routes (id INT, name VARCHAR(255), type VARCHAR(255), city VARCHAR(255), length INT, wheelchair_accessible BOOLEAN); INSERT INTO routes (id, name, type, city, length, wheelchair_accessible) VALUES (1, '10', 'Bus', 'NYC', 25000, true), (2, '20', 'Train', 'NYC', 50000, true), (3, '30', 'Tram', 'Paris', 30000, false), (4, '40', 'Subway', 'London', 40000, true), (5, '50', 'Ferry', 'Sydney', 15000, true);","completion":"SELECT r.name, r.city, CASE WHEN r.wheelchair_accessible THEN 'Yes' ELSE 'No' END as Accessible FROM routes r WHERE r.city = 'NYC';"}
{"prompt":"Identify the number of unique garment categories in the 'circular_economy' table. with given SQL schema CREATE TABLE circular_economy (id INT, garment VARCHAR(20), garment_category VARCHAR(20)); INSERT INTO circular_economy (id, garment, garment_category) VALUES (1, 'recycled_sweater', 'sweaters'), (2, 'upcycled_jeans', 'jeans'), (3, 'refurbished_shoes', 'shoes'), (4, 'vintage_dress', 'dresses');","completion":"SELECT COUNT(DISTINCT garment_category) FROM circular_economy;"}
{"prompt":"What are the top 3 countries with the most users who have interacted with sponsored posts in the last month? with given SQL schema CREATE TABLE sponsored_posts (post_id INT, user_id INT, country VARCHAR(50), interaction_date DATE); INSERT INTO sponsored_posts (post_id, user_id, country, interaction_date) VALUES (1, 123, 'USA', '2021-08-01');","completion":"SELECT country, COUNT(user_id) as interaction_count FROM sponsored_posts WHERE interaction_date >= DATEADD(month, -1, GETDATE()) GROUP BY country ORDER BY interaction_count DESC LIMIT 3;"}
{"prompt":"Insert a new record for a donation of $1000 made by an individual donor named \"John Doe\" on January 1, 2022. with given SQL schema CREATE TABLE donations (id INT, donor_id INT, donation_date DATE, amount_donated DECIMAL(10,2)); CREATE TABLE donors (id INT, name TEXT);","completion":"INSERT INTO donations (id, donor_id, donation_date, amount_donated) VALUES (1, (SELECT id FROM donors WHERE name = 'John Doe' LIMIT 1), '2022-01-01', 1000); INSERT INTO donors (id, name) VALUES (1, 'John Doe') ON DUPLICATE KEY UPDATE id = id;"}
{"prompt":"How many food safety records were updated in Q1 of 2022? with given SQL schema CREATE TABLE FoodSafetyRecords (RecordID INT, UpdateDate DATE); INSERT INTO FoodSafetyRecords (RecordID, UpdateDate) VALUES (1, '2022-01-01'), (2, '2022-01-05'), (3, '2022-02-10'), (4, '2022-03-20'), (5, '2022-03-30');","completion":"SELECT COUNT(*) FROM FoodSafetyRecords WHERE UpdateDate BETWEEN '2022-01-01' AND '2022-03-31';"}
{"prompt":"What are the names of startups that have received funding from investors with over 3 million funds, and are involved in Genetic Research or Bioprocess Engineering? with given SQL schema CREATE TABLE public.investors ( id SERIAL PRIMARY KEY, name VARCHAR(100), type VARCHAR(50), funds INTEGER ); CREATE TABLE public.investments ( id SERIAL PRIMARY KEY, investor_id INTEGER, startup_id INTEGER ); CREATE TABLE public.startups ( id SERIAL PRIMARY KEY, name VARCHAR(100), industry VARCHAR(50), funding INTEGER );","completion":"SELECT startups.name FROM public.startups JOIN public.investments ON startups.id = investments.startup_id JOIN public.investors ON investments.investor_id = investors.id WHERE (startups.industry = 'Genetic Research' OR startups.industry = 'Bioprocess Engineering') AND investors.funds > 3000000;"}
{"prompt":"Who are the researchers that have contributed to the 'gene sequencing' project? with given SQL schema CREATE TABLE researchers (id INT, name VARCHAR(50), project VARCHAR(50)); INSERT INTO researchers (id, name, project) VALUES (1, 'Alice', 'gene sequencing'), (2, 'Bob', 'biosensor development'), (3, 'Charlie', 'gene sequencing');","completion":"SELECT name FROM researchers WHERE project = 'gene sequencing';"}
{"prompt":"What are the total research grant funds awarded to faculty members in the Mathematics department, excluding grants awarded to faculty members named Karen? with given SQL schema CREATE SCHEMA research;CREATE TABLE grants(faculty_name TEXT,department TEXT,amount INTEGER);INSERT INTO grants(faculty_name,department,amount)VALUES('Karen','Mathematics',150000),('Larry','Physics',200000),('Melissa','Physics',50000);","completion":"SELECT SUM(amount) FROM research.grants WHERE department='Mathematics' AND faculty_name<>'Karen';"}
{"prompt":"What is the minimum amount of funding received by a graduate student in the Engineering department from research grants? with given SQL schema CREATE TABLE graduate_students (id INT, name VARCHAR(50), department VARCHAR(50)); CREATE TABLE research_grants (id INT, graduate_student_id INT, amount DECIMAL(10,2));","completion":"SELECT MIN(rg.amount) FROM research_grants rg JOIN graduate_students gs ON rg.graduate_student_id = gs.id WHERE gs.department = 'Engineering';"}
{"prompt":"How many green buildings are there in the green_buildings table? with given SQL schema CREATE TABLE IF NOT EXISTS green_buildings (  building_id INT,   building_name VARCHAR(255),   PRIMARY KEY (building_id)); INSERT INTO green_buildings (building_id, building_name) VALUES (1, 'Eco-Tower'), (2, 'Green Heights'), (3, 'Sustainable Haven');","completion":"SELECT COUNT(*) FROM green_buildings;"}
{"prompt":"Insert a new record into the \"buildings\" table with given SQL schema CREATE TABLE buildings (id INT PRIMARY KEY, name VARCHAR(255), city VARCHAR(255), country VARCHAR(255), built_year INT);","completion":"INSERT INTO buildings (id, name, city, country, built_year) VALUES (1, 'GreenHub', 'San Francisco', 'USA', 2020);"}
{"prompt":"What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type? with given SQL schema CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);","completion":"SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;"}
{"prompt":"Which countries have the highest average spending on virtual tours per user? with given SQL schema CREATE TABLE Users (UserID INT, CountryID INT); INSERT INTO Users (UserID, CountryID) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 3), (7, 4), (8, 4); CREATE TABLE Spending (SpendingID INT, UserID INT, VirtualTourID INT, Amount DECIMAL(10,2)); INSERT INTO Spending (SpendingID, UserID, VirtualTourID, Amount) VALUES (1, 1, 1, 50), (2, 1, 2, 75), (3, 2, 1, 60), (4, 2, 3, 80), (5, 3, 4, 90), (6, 3, 5, 100), (7, 5, 6, 70), (8, 5, 7, 85), (9, 6, 8, 95), (10, 6, 9, 100), (11, 7, 10, 80), (12, 7, 11, 90), (13, 8, 12, 75), (14, 8, 13, 85);","completion":"SELECT U.CountryName, AVG(S.Amount) as AvgSpending FROM Users U INNER JOIN Spending S ON U.UserID = S.UserID INNER JOIN VirtualTours VT ON S.VirtualTourID = VT.VirtualTourID GROUP BY U.CountryID ORDER BY AvgSpending DESC;"}
{"prompt":"What are the top 3 most common mediums used by artists from Italy? with given SQL schema CREATE TABLE ArtWorks (ArtworkID int, Title varchar(100), Medium varchar(100), ArtistID int);","completion":"SELECT Medium, COUNT(ArtworkID) FROM ArtWorks"}
{"prompt":"What is the total budget allocated for each resource category in the 'resource_categories' table? with given SQL schema CREATE TABLE resource_categories (resource_category TEXT, allocated_budget FLOAT);","completion":"SELECT resource_category, SUM(allocated_budget) as total_allocated_budget FROM resource_categories GROUP BY resource_category;"}
{"prompt":"How many cultural and natural heritage sites are in Asia? with given SQL schema CREATE TABLE Heritage_Sites (Site_ID INT PRIMARY KEY, Name VARCHAR(100), Country VARCHAR(50), Type VARCHAR(50)); INSERT INTO Heritage_Sites (Site_ID, Name, Country, Type) VALUES (1, 'Angkor Wat', 'Cambodia', 'Cultural'); INSERT INTO Heritage_Sites (Site_ID, Name, Country, Type) VALUES (2, 'Machu Picchu', 'Peru', 'Cultural'); INSERT INTO Heritage_Sites (Site_ID, Name, Country, Type) VALUES (3, 'Great Barrier Reef', 'Australia', 'Natural');","completion":"SELECT COUNT(*) FROM Heritage_Sites WHERE Country IN ('Cambodia', 'Peru', 'Australia') AND Type IN ('Cultural', 'Natural');"}
{"prompt":"How many public awareness campaigns were launched in February and August in the 'campaigns' schema? with given SQL schema CREATE TABLE campaigns (campaign_id INT, launch_date DATE); INSERT INTO campaigns (campaign_id, launch_date) VALUES (1, '2019-02-01'), (2, '2020-05-15'), (3, '2018-12-31'), (4, '2021-03-20'), (5, '2021-08-01'), (6, '2022-02-10');","completion":"SELECT EXTRACT(MONTH FROM launch_date) AS month, COUNT(*) AS campaigns_launched FROM campaigns WHERE EXTRACT(MONTH FROM launch_date) IN (2, 8) GROUP BY month;"}
{"prompt":"Find the maximum construction cost for a project in Germany with given SQL schema CREATE TABLE infrastructure_projects (id INT, name TEXT, location TEXT, construction_cost FLOAT); INSERT INTO infrastructure_projects (id, name, location, construction_cost) VALUES (1, 'Brooklyn Bridge', 'USA', 15000000); INSERT INTO infrastructure_projects (id, name, location, construction_cost) VALUES (2, 'Chunnel', 'UK', 21000000); INSERT INTO infrastructure_projects (id, name, location, construction_cost) VALUES (3, 'Tokyo Tower', 'Japan', 33000000); INSERT INTO infrastructure_projects (id, name, location, construction_cost) VALUES (4, 'Brandenburg Gate', 'Germany', 25000000);","completion":"SELECT MAX(construction_cost) FROM infrastructure_projects WHERE location = 'Germany';"}
{"prompt":"How many infrastructure projects are there for each 'city'? with given SQL schema CREATE TABLE InfrastructureProjects (id INT, name TEXT, city TEXT, category TEXT, budget FLOAT); INSERT INTO InfrastructureProjects (id, name, city, category, budget) VALUES (1, 'Highway 12 Expansion', 'CityA', 'Transportation', 2000000); INSERT INTO InfrastructureProjects (id, name, city, category, budget) VALUES (2, 'Bridgewater Park Pedestrian Path', 'CityB', 'Parks', 500000); INSERT INTO InfrastructureProjects (id, name, city, category, budget) VALUES (3, 'Railway Crossing Upgrade', 'CityA', 'Transportation', 1500000); INSERT INTO InfrastructureProjects (id, name, city, category, budget) VALUES (4, 'New Community Center', 'CityB', 'Community', 3000000); INSERT INTO InfrastructureProjects (id, name, city, category, budget) VALUES (5, 'Wastewater Treatment Plant', 'CityC', 'Waste Management', 1200000);","completion":"SELECT city, COUNT(*) FROM InfrastructureProjects GROUP BY city;"}
{"prompt":"Identify the longest tunnel in each region of the United States, and display the region, tunnel name, and length. with given SQL schema CREATE TABLE tunnels (id INT, tunnel_name VARCHAR(255), region VARCHAR(255), length FLOAT); INSERT INTO tunnels (id, tunnel_name, region, length) VALUES (1, 'Hoosac Tunnel', 'Northeast', 24.7), (2, 'Cascade Tunnel', 'Northwest', 26.2), (3, 'Selmon Crosstown Expressway', 'Southeast', 21.5);","completion":"SELECT region, tunnel_name, length FROM tunnels T1 WHERE length = (SELECT MAX(length) FROM tunnels T2 WHERE T2.region = T1.region) ORDER BY region;"}
{"prompt":"What is the maximum resilience score of all infrastructure in the city of Tokyo, Japan? with given SQL schema CREATE TABLE Infrastructure (id INT, type VARCHAR(50), location VARCHAR(50), resilience_score FLOAT);","completion":"SELECT MAX(resilience_score) FROM Infrastructure WHERE location = 'Tokyo';"}
{"prompt":"Insert a new record into the \"international_visitor_statistics\" table for \"Japan\" with 2021 visit data with given SQL schema CREATE TABLE international_visitor_statistics (id INT PRIMARY KEY, country TEXT, year INT, visitor_count INT);","completion":"INSERT INTO international_visitor_statistics (id, country, year, visitor_count) VALUES (1, 'Japan', 2021, 15000000);"}
{"prompt":"Total CO2 emissions for each transportation method in Oceania with given SQL schema CREATE TABLE if not exists transportation (transport_id INT, transport VARCHAR(20), region VARCHAR(50), co2_emission INT); INSERT INTO transportation (transport_id, transport, region, co2_emission) VALUES (1, 'Airplane', 'Oceania', 445), (2, 'Train', 'Oceania', 14), (3, 'Car', 'Oceania', 185), (4, 'Bus', 'Oceania', 80), (5, 'Bicycle', 'Oceania', 0);","completion":"SELECT transport, SUM(co2_emission) as total_emission FROM transportation WHERE region = 'Oceania' GROUP BY transport;"}
{"prompt":"What is the maximum depth of any ocean floor mapping project site in the 'OceanMapping' schema? with given SQL schema CREATE SCHEMA OceanMapping; CREATE TABLE Sites (site_id INT, depth FLOAT); INSERT INTO Sites (site_id, depth) VALUES (1, 3000.2), (2, 4000.3), (3, 5000.4), (4, 6000.5), (5, 7000.6);","completion":"SELECT MAX(depth) FROM OceanMapping.Sites;"}
{"prompt":"What is the total number of articles, published in 2020, that contain the word \"disinformation\" and were written by authors from South America? with given SQL schema CREATE TABLE articles (id INT, title VARCHAR(255), publication_year INT, content TEXT, author_location VARCHAR(255));","completion":"SELECT COUNT(*) as num_articles FROM articles WHERE publication_year = 2020 AND author_location = 'South America' AND content LIKE '%disinformation%';"}
{"prompt":"What is the total waste generated for vegan and non-vegan items? with given SQL schema CREATE TABLE items (item_name VARCHAR(50), item_type VARCHAR(10)); INSERT INTO items (item_name, item_type) VALUES ('Bruschetta', 'non-vegan'), ('Veggie Burger', 'vegan'); CREATE TABLE location_waste (location_name VARCHAR(50), waste_amount NUMERIC(10, 2)); INSERT INTO location_waste (location_name, waste_amount) VALUES ('San Francisco', 1000.00), ('New York', 1500.00), ('Los Angeles', 500.00);","completion":"SELECT item_type, SUM(waste_amount) AS total_waste FROM items JOIN location_waste ON '1' = '1' GROUP BY item_type;"}
{"prompt":"List all defense projects with a budget greater than 500,000,000 that were completed after 2020. with given SQL schema CREATE TABLE DefenseProjects (project_name VARCHAR(255), start_date DATE, end_date DATE, budget FLOAT); INSERT INTO DefenseProjects (project_name, start_date, end_date, budget) VALUES ('Project B', '2021-01-01', '2023-12-31', 600000000);","completion":"SELECT * FROM DefenseProjects WHERE budget > 500000000 AND end_date > '2020-12-31';"}
{"prompt":"Which defense projects had a delay of over 6 months in H1 2022? with given SQL schema CREATE TABLE projects(id INT, project VARCHAR(50), start_date DATE, end_date DATE, planned BOOLEAN);","completion":"SELECT project FROM projects WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30' AND end_date BETWEEN '2022-07-01' AND '2022-12-31' AND planned = FALSE;"}
{"prompt":"Rank the mining operations by the total amount of coal produced, with ties. with given SQL schema CREATE TABLE CoalProduction (MineID INT, Production DATE, CoalProduced INT); INSERT INTO CoalProduction (MineID, ProductionDate, CoalProduced) VALUES (1, '2022-01-01', 500), (1, '2022-01-02', 550), (1, '2022-01-03', 600), (2, '2022-01-01', 700), (2, '2022-01-02', 750), (2, '2022-01-03', 800), (3, '2022-01-01', 900), (3, '2022-01-02', 950), (3, '2022-01-03', 1000), (4, '2022-01-01', 400), (4, '2022-01-02', 450), (4, '2022-01-03', 500);","completion":"SELECT MineID, SUM(CoalProduced) as Total_CoalProduced, RANK() OVER (ORDER BY SUM(CoalProduced) DESC) as Rank FROM CoalProduction GROUP BY MineID;"}
{"prompt":"Which mine had the highest lead production? with given SQL schema CREATE TABLE mine_resources (mine_name VARCHAR(50), year INT, lead_production FLOAT);","completion":"SELECT mine_name, MAX(lead_production) FROM mine_resources GROUP BY mine_name;"}
{"prompt":"Create a view named 'top_artists' to show the top 5 artists by total streams with given SQL schema CREATE TABLE artists (artist_id INT PRIMARY KEY, artist_name VARCHAR(100), genre VARCHAR(50), total_streams INT); INSERT INTO artists (artist_id, artist_name, genre, total_streams) VALUES (1, 'Taylor Swift', 'Pop', 15000000); INSERT INTO artists (artist_id, artist_name, genre, total_streams) VALUES (2, 'BTS', 'K-Pop', 20000000); INSERT INTO artists (artist_id, artist_name, genre, total_streams) VALUES (3, 'Drake', 'Hip-Hop', 12000000); INSERT INTO artists (artist_id, artist_name, genre, total_streams) VALUES (4, 'Eminem', 'Hip-Hop', 30000000); INSERT INTO artists (artist_id, artist_name, genre, total_streams) VALUES (5, 'Adele', 'Pop', 18000000);","completion":"CREATE VIEW top_artists AS SELECT * FROM artists ORDER BY total_streams DESC LIMIT 5;"}
{"prompt":"What is the average number of streams per day for jazz songs in New Orleans last month? with given SQL schema CREATE TABLE Streams (song_genre VARCHAR(255), city VARCHAR(255), stream_count INT, stream_date DATE); INSERT INTO Streams (song_genre, city, stream_count, stream_date) VALUES ('jazz', 'New Orleans', 300, '2022-02-01'), ('pop', 'New York', 500, '2022-02-02');","completion":"SELECT AVG(stream_count\/1.0) FROM Streams WHERE song_genre = 'jazz' AND city = 'New Orleans' AND stream_date >= DATEADD(MONTH, -1, GETDATE());"}
{"prompt":"Insert a new marine protected area in the Mediterranean Sea with a depth of 1000 meters with given SQL schema CREATE TABLE marine_protected_areas (name TEXT, depth FLOAT);","completion":"INSERT INTO marine_protected_areas (name, depth) VALUES ('Mediterranean Sanctuary', 1000.0);"}
{"prompt":"Which causes received donations from the most countries? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50), DonationAmount DECIMAL(10,2), CauseID INT, Country VARCHAR(50));CREATE TABLE Causes (CauseID INT, CauseName VARCHAR(50));","completion":"SELECT C.CauseName, COUNT(DISTINCT D.Country) FROM Donors D JOIN Causes C ON D.CauseID = C.CauseID GROUP BY C.CauseName ORDER BY COUNT(DISTINCT D.Country) DESC;"}
{"prompt":"Who are the eSports players with the lowest number of losses in \"Dota 2\" tournaments? with given SQL schema CREATE TABLE Players (PlayerName VARCHAR(255), TournamentLosses INT); INSERT INTO Players (PlayerName, TournamentLosses) VALUES ('PlayerA', 3), ('PlayerB', 1), ('PlayerC', 0), ('PlayerD', 4), ('PlayerE', 2);","completion":"SELECT PlayerName FROM Players WHERE TournamentLosses = (SELECT MIN(TournamentLosses) FROM Players);"}
{"prompt":"What is the total playtime of a specific game on different platforms? with given SQL schema CREATE TABLE game_platforms (id INT, game VARCHAR(20), platform VARCHAR(10), playtime INT); INSERT INTO game_platforms (id, game, platform, playtime) VALUES (1, 'Game1', 'PC', 20), (2, 'Game1', 'Console', 30), (3, 'Game1', 'Mobile', 10);","completion":"SELECT platform, SUM(playtime) as sum FROM game_platforms WHERE game = 'Game1' GROUP BY platform;"}
{"prompt":"What is the minimum temperature recorded in Field21 and Field22 in the year 2023? with given SQL schema CREATE TABLE Field21 (date DATE, temperature FLOAT); INSERT INTO Field21 VALUES ('2023-01-01', 10), ('2023-01-02', 5); CREATE TABLE Field22 (date DATE, temperature FLOAT); INSERT INTO Field22 VALUES ('2023-01-01', 8), ('2023-01-02', 3);","completion":"SELECT LEAST(f21.temperature, f22.temperature) as min_temperature FROM Field21 f21 INNER JOIN Field22 f22 ON f21.date = f22.date WHERE EXTRACT(YEAR FROM f21.date) = 2023;"}
{"prompt":"What was the total budget allocated for education in the year 2020 across all regions? with given SQL schema CREATE TABLE Budget (year INT, region VARCHAR(255), category VARCHAR(255), amount INT); INSERT INTO Budget (year, region, category, amount) VALUES (2020, 'North', 'Education', 5000000), (2020, 'South', 'Education', 6000000), (2020, 'East', 'Education', 4000000), (2020, 'West', 'Education', 7000000);","completion":"SELECT SUM(amount) FROM Budget WHERE year = 2020 AND category = 'Education';"}
{"prompt":"What is the total number of inclusive housing units in the cities of Tokyo, Japan and Berlin, Germany? with given SQL schema CREATE TABLE inclusive_housing (id INT, city VARCHAR(50), units INT); INSERT INTO inclusive_housing (id, city, units) VALUES (1, 'Tokyo', 80), (2, 'Berlin', 90), (3, 'Tokyo', 100), (4, 'Berlin', 110);","completion":"SELECT SUM(units) as total_units FROM inclusive_housing WHERE city IN ('Tokyo', 'Berlin');"}
{"prompt":"Delete the 'Chicken Caesar Salad' record with the lowest revenue on February 22, 2022? with given SQL schema CREATE TABLE restaurant_revenue (item VARCHAR(50), revenue NUMERIC(10,2), sales_date DATE); INSERT INTO restaurant_revenue (item, revenue, sales_date) VALUES ('Chicken Caesar Salad', 25.00, '2022-02-22'), ('Organic Veggie Pizza', 120.50, '2022-01-01'), ('Organic Veggie Pizza', 155.25, '2022-01-02');","completion":"DELETE FROM restaurant_revenue WHERE item = 'Chicken Caesar Salad' AND sales_date = '2022-02-22' AND revenue = (SELECT MIN(revenue) FROM restaurant_revenue WHERE item = 'Chicken Caesar Salad' AND sales_date = '2022-02-22');"}
{"prompt":"How many menu items contain ingredients sourced from local suppliers for each restaurant? with given SQL schema CREATE TABLE restaurants (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO restaurants VALUES (1, 'Restaurant A', 'City A'); INSERT INTO restaurants VALUES (2, 'Restaurant B', 'City B'); CREATE TABLE menu_items (id INT, name VARCHAR(50), restaurant_id INT, price DECIMAL(5,2)); INSERT INTO menu_items VALUES (1, 'Item A', 1, 10.99); INSERT INTO menu_items VALUES (2, 'Item B', 1, 12.99); INSERT INTO menu_items VALUES (3, 'Item C', 2, 11.99); CREATE TABLE ingredients (id INT, name VARCHAR(50), local_source BOOLEAN, menu_item_id INT); INSERT INTO ingredients VALUES (1, 'Ingredient A', TRUE, 1); INSERT INTO ingredients VALUES (2, 'Ingredient B', FALSE, 1); INSERT INTO ingredients VALUES (3, 'Ingredient C', TRUE, 2); INSERT INTO ingredients VALUES (4, 'Ingredient D', FALSE, 2); INSERT INTO ingredients VALUES (5, 'Ingredient E', TRUE, 3);","completion":"SELECT r.name, COUNT(DISTINCT mi.id) as num_local_items FROM restaurants r JOIN menu_items mi ON r.id = mi.restaurant_id JOIN ingredients i ON mi.id = i.menu_item_id WHERE i.local_source = TRUE GROUP BY r.name;"}
{"prompt":"What is the total sales for 'Restaurant A' for the month of January? with given SQL schema CREATE TABLE sales (id INT, restaurant_id INT, sales DECIMAL(5,2), sale_date DATE); INSERT INTO sales (id, restaurant_id, sales, sale_date) VALUES (1, 1, 100.00, '2022-01-01'), (2, 1, 200.00, '2022-01-02'), (3, 2, 150.00, '2022-01-03'), (4, 3, 50.00, '2022-01-04'), (5, 4, 300.00, '2022-02-01');","completion":"SELECT SUM(sales) FROM sales WHERE restaurant_id = 1 AND MONTH(sale_date) = 1;"}
{"prompt":"Create a table named 'supplier_ethics' with given SQL schema CREATE TABLE supplier_ethics (supplier_id INT, country VARCHAR(50), labor_practices VARCHAR(50), sustainability_score INT);","completion":"CREATE TABLE supplier_ethics (supplier_id INT, country VARCHAR(50), labor_practices VARCHAR(50), sustainability_score INT);"}
{"prompt":"List the names of all Mars rovers and their launch dates. with given SQL schema CREATE TABLE spacecraft (id INT, name VARCHAR(255), type VARCHAR(255), launch_date DATE);","completion":"SELECT spacecraft.name, spacecraft.launch_date FROM spacecraft WHERE type = 'Mars rover';"}
{"prompt":"What is the lifespan of each satellite, ranked by lifespan? with given SQL schema CREATE TABLE satellites (satellite_name VARCHAR(50), launch_date DATE, decommission_date DATE); INSERT INTO satellites (satellite_name, launch_date, decommission_date) VALUES ('ISS', '1998-11-20', '2028-11-20'), ('Hubble Space Telescope', '1990-04-24', '2040-04-24'), ('Spitzer Space Telescope', '2003-08-25', '2023-01-30');","completion":"SELECT satellite_name, DATEDIFF(day, launch_date, decommission_date) AS lifespan FROM satellites ORDER BY lifespan DESC;"}
{"prompt":"What is the latest end date of astronaut medical records in 2012? with given SQL schema CREATE TABLE MedicalRecords (id INT, astronaut_id INT, start_date DATE, end_date DATE); INSERT INTO MedicalRecords (id, astronaut_id, start_date, end_date) VALUES (1, 1, '2010-01-01', '2010-01-10'), (2, 2, '2012-05-01', '2012-12-31');","completion":"SELECT MAX(end_date) FROM MedicalRecords WHERE YEAR(end_date) = 2012;"}
{"prompt":"Which spacecraft have been used in the most unique space missions? with given SQL schema CREATE TABLE spacecraft_missions_unique (id INT PRIMARY KEY, spacecraft_name VARCHAR(50), mission_name VARCHAR(50));","completion":"SELECT spacecraft_name, COUNT(DISTINCT mission_name) as unique_missions FROM spacecraft_missions_unique GROUP BY spacecraft_name;"}
{"prompt":"How many tickets were sold for each team's away games in Q2 of 2022? with given SQL schema CREATE TABLE teams (id INT, name VARCHAR(255)); INSERT INTO teams (id, name) VALUES (1, 'TeamA'), (2, 'TeamB'), (3, 'TeamC'); CREATE TABLE games (id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, price DECIMAL(5,2), game_date DATE); CREATE VIEW away_games AS SELECT id, away_team_id, price, game_date FROM games;","completion":"SELECT t.name, COUNT(*) as tickets_sold FROM away_games h JOIN teams t ON h.away_team_id = t.id WHERE h.game_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY t.name;"}
{"prompt":"List all unique sports and the number of teams for each sport in 'team_performances_table' with given SQL schema CREATE TABLE team_performances_table (team_id INT, team_name VARCHAR(50), sport VARCHAR(20), wins INT, losses INT); INSERT INTO team_performances_table (team_id, team_name, sport, wins, losses) VALUES (1, 'Blue Lions', 'Basketball', 25, 15); INSERT INTO team_performances_table (team_id, team_name, sport, wins, losses) VALUES (2, 'Green Devils', 'Soccer', 12, 8);","completion":"SELECT sport, COUNT(DISTINCT team_name) AS team_count FROM team_performances_table GROUP BY sport;"}
{"prompt":"What is the total number of trips taken in autonomous tuk-tuks in Bangkok? with given SQL schema CREATE TABLE autonomous_tuk_tuks (tuk_tuk_id INT, trip_id INT, trip_start_time TIMESTAMP, trip_end_time TIMESTAMP, start_latitude DECIMAL(9,6), start_longitude DECIMAL(9,6), end_latitude DECIMAL(9,6), end_longitude DECIMAL(9,6));","completion":"SELECT COUNT(DISTINCT trip_id) FROM autonomous_tuk_tuks WHERE start_longitude BETWEEN 100.3 AND 100.9 AND start_latitude BETWEEN 13.5 AND 14.1;"}
{"prompt":"What are the union membership statistics for unions that have engaged in successful collective bargaining in the healthcare sector? with given SQL schema CREATE TABLE Membership (UnionName TEXT, Sector TEXT, MemberCount INT); INSERT INTO Membership (UnionName, Sector, MemberCount) VALUES ('UnionHealthA', 'Healthcare', 3000), ('UnionHealthB', 'Healthcare', 5000), ('UnionHealthC', 'Healthcare', 2000);","completion":"SELECT UnionName, MemberCount FROM Membership WHERE Sector = 'Healthcare' AND UnionName IN (SELECT UnionName FROM CBAs WHERE ExpirationDate > CURDATE());"}
{"prompt":"What is the maximum weekly wage for workers in the 'service' industry in unions? with given SQL schema CREATE TABLE unions (id INT, name TEXT); CREATE TABLE workers (id INT, union_id INT, industry TEXT, wage FLOAT); INSERT INTO unions (id, name) VALUES (1, 'Union M'), (2, 'Union N'), (3, 'Union O'); INSERT INTO workers (id, union_id, industry, wage) VALUES (1, 1, 'service', 600), (2, 1, 'service', 650), (3, 2, 'service', 700), (4, 2, 'service', 750), (5, 3, 'service', 800), (6, 3, 'service', 850);","completion":"SELECT MAX(wage) FROM workers JOIN unions ON workers.union_id = unions.id WHERE industry = 'service';"}
{"prompt":"What is the minimum mileage range of the Nissan Leaf? with given SQL schema CREATE TABLE vehicle_range (make VARCHAR(255), model VARCHAR(255), mileage_range INT); INSERT INTO vehicle_range (make, model, mileage_range) VALUES ('Nissan', 'Leaf', 150), ('Nissan', 'Versa', 400);","completion":"SELECT mileage_range FROM vehicle_range WHERE make = 'Nissan' AND model = 'Leaf';"}
{"prompt":"What is the maximum speed recorded for vessels in the Baltic Sea, and which vessels achieved this speed? with given SQL schema CREATE TABLE vessel_speed (id INT, vessel_id INT, speed FLOAT, speed_date DATE, speed_location TEXT);","completion":"SELECT vessel_id, MAX(speed) FROM vessel_speed WHERE speed_location = 'Baltic Sea' GROUP BY vessel_id HAVING MAX(speed) = (SELECT MAX(speed) FROM vessel_speed WHERE speed_location = 'Baltic Sea');"}
{"prompt":"Insert new records into 'water_usage' table with given SQL schema CREATE TABLE water_usage (id INT PRIMARY KEY, region VARCHAR(20), usage FLOAT);","completion":"INSERT INTO water_usage (id, region, usage) VALUES (1, 'Midwest', 500.5), (2, 'Northwest', 700.2), (3, 'Southeast', 800.1);"}
{"prompt":"List all algorithmic fairness tables that have a primary key named 'algorithm_id' with given SQL schema CREATE TABLE AlgoFairness_Table1 (algorithm_id INT, metric VARCHAR(50), value FLOAT); CREATE TABLE AlgoFairness_Table2 (algorithm_id INT, bias INT, mitigation VARCHAR(50)); CREATE TABLE AlgoFairness_Table3 (id INT, algorithm_id INT, accuracy FLOAT, fairness INT);","completion":"SELECT table_name FROM information_schema.columns WHERE column_name = 'algorithm_id' AND table_schema = 'your_schema';"}
{"prompt":"What are the names of all innovation projects in the 'rural_infrastructure' table, excluding those with a budget over 50000? with given SQL schema CREATE TABLE rural_infrastructure (name VARCHAR(255), budget INT); INSERT INTO rural_infrastructure (name, budget) VALUES ('Dam Construction', 40000), ('Well Digging', 30000), ('Irrigation System', 70000);","completion":"SELECT name FROM rural_infrastructure WHERE budget <= 50000;"}
{"prompt":"Add a new safety incident to the safety_incidents table (id: 4, aircraft: 'Space Shuttle Challenger', date: '1986-01-28', description: 'O-ring failure') with given SQL schema CREATE TABLE safety_incidents (id INT, aircraft VARCHAR(255), date DATE, description VARCHAR(255));","completion":"INSERT INTO safety_incidents (id, aircraft, date, description) VALUES (4, 'Space Shuttle Challenger', '1986-01-28', 'O-ring failure');"}
{"prompt":"Update the size of the 'Serengeti Plains' habitat in the 'habitat_preservation' table with given SQL schema CREATE TABLE habitat_preservation (id INT PRIMARY KEY, location VARCHAR(50), size_acres FLOAT, preservation_status VARCHAR(50), protected_species VARCHAR(50));","completion":"UPDATE habitat_preservation SET size_acres = 5700000.0 WHERE location = 'Serengeti Plains';"}
{"prompt":"What is the number of animals in each sanctuary that have increased by more than 10% since the last year? with given SQL schema CREATE TABLE animal_count_data (sanctuary_id INT, year INT, animal_count INT); INSERT INTO animal_count_data (sanctuary_id, year, animal_count) VALUES (1, 2021, 25), (1, 2022, 30), (2, 2021, 30), (2, 2022, 35), (3, 2021, 20), (3, 2022, 22), (4, 2021, 15), (4, 2022, 16);","completion":"SELECT sanctuary_id, (animal_count-LAG(animal_count, 1) OVER (PARTITION BY sanctuary_id ORDER BY year))\/LAG(animal_count, 1) OVER (PARTITION BY sanctuary_id ORDER BY year) * 100 AS increase_percentage FROM animal_count_data WHERE (animal_count-LAG(animal_count, 1) OVER (PARTITION BY sanctuary_id ORDER BY year))\/LAG(animal_count, 1) OVER (PARTITION BY sanctuary_id ORDER BY year) > 10;"}
{"prompt":"What was the number of volunteers who contributed more than 10 hours to the \"Music Outreach\" program? with given SQL schema CREATE TABLE volunteers_2 (program VARCHAR(255), hours INT); INSERT INTO volunteers_2 (program, hours) VALUES ('Music Outreach', 12), ('Music Outreach', 8), ('Theater Education', 15);","completion":"SELECT COUNT(*) FROM volunteers_2 WHERE program = 'Music Outreach' AND hours > 10;"}
{"prompt":"Identify the top 3 customers with the highest total purchases at a specific dispensary in Colorado. with given SQL schema CREATE TABLE Customers (Customer_ID INT, Customer_Name TEXT, Dispensary_ID INT); INSERT INTO Customers (Customer_ID, Customer_Name, Dispensary_ID) VALUES (1, 'Lila Green', 2); CREATE TABLE Sales (Sale_ID INT, Customer_ID INT, Total_Purchase DECIMAL); INSERT INTO Sales (Sale_ID, Customer_ID, Total_Purchase) VALUES (1, 1, 200.00);","completion":"SELECT Customer_Name, SUM(Total_Purchase) as Total FROM Sales JOIN Customers ON Sales.Customer_ID = Customers.Customer_ID WHERE Dispensary_ID = 2 GROUP BY Customer_ID ORDER BY Total DESC LIMIT 3;"}
{"prompt":"Display the total billing amount for cases in the 'Boston' office. with given SQL schema CREATE TABLE cases (case_id INT, billing_amount DECIMAL(10,2), office_id INT); INSERT INTO cases (case_id, billing_amount, office_id) VALUES (1, 500.00, 1), (2, 750.00, 1), (3, 1000.00, 2); CREATE TABLE offices (office_id INT, office_name VARCHAR(20)); INSERT INTO offices (office_id, office_name) VALUES (1, 'Boston'), (2, 'New York'), (3, 'Chicago');","completion":"SELECT SUM(billing_amount) FROM cases c JOIN offices o ON c.office_id = o.office_id WHERE o.office_name = 'Boston';"}
{"prompt":"What is the minimum billing amount for cases in the real estate category? with given SQL schema CREATE TABLE cases (case_id INT, category VARCHAR(20), billing_amount DECIMAL(10, 2));","completion":"SELECT MIN(billing_amount) FROM cases WHERE category = 'real estate';"}
{"prompt":"What is the win rate for cases handled by attorneys with more than 10 years of experience? with given SQL schema CREATE TABLE Cases (CaseID INT, CaseYear INT, AttorneyID INT, ClientID INT, CaseOutcome VARCHAR(10)); INSERT INTO Cases (CaseID, CaseYear, AttorneyID, ClientID, CaseOutcome) VALUES (3, 2021, 3, 3, 'Won'); INSERT INTO Cases (CaseID, CaseYear, AttorneyID, ClientID, CaseOutcome) VALUES (4, 2020, 4, 4, 'Lost');","completion":"SELECT COUNT(CaseID) as NumberOfCases, AVG(CASE WHEN CaseOutcome = 'Won' THEN 1 ELSE 0 END) as WinRate FROM Cases WHERE YearsOfExperience > 10;"}
{"prompt":"Identify the chemical plants in Canada with safety violation costs higher than their preceding plant. with given SQL schema CREATE TABLE chemical_plants (plant_id INT, plant_name VARCHAR(50), country VARCHAR(50), safety_violation_cost DECIMAL(10,2), plant_order INT); INSERT INTO chemical_plants (plant_id, plant_name, country, safety_violation_cost, plant_order) VALUES (1, 'Plant A', 'Canada', 5000, 1), (2, 'Plant B', 'Canada', 7000, 2), (3, 'Plant C', 'USA', 3000, 1);","completion":"SELECT plant_id, plant_name, safety_violation_cost FROM (SELECT plant_id, plant_name, safety_violation_cost, LAG(safety_violation_cost) OVER (PARTITION BY country ORDER BY plant_order) AS lag_value FROM chemical_plants WHERE country = 'Canada') tmp WHERE safety_violation_cost > lag_value;"}
{"prompt":"What is the maximum temperature in the chemical storage facilities located in Canada? with given SQL schema CREATE TABLE storage_facilities (id INT, facility_name TEXT, country TEXT, temperature DECIMAL(5,2)); INSERT INTO storage_facilities (id, facility_name, country, temperature) VALUES (1, 'Facility A', 'Canada', 15.3), (2, 'Facility B', 'Mexico', 28.9);","completion":"SELECT MAX(temperature) FROM storage_facilities WHERE country = 'Canada';"}
{"prompt":"What is the average number of hospital beds per 1000 people in Southeast Asia? with given SQL schema CREATE TABLE hospitals (id INT, beds INT, population INT, location TEXT); INSERT INTO hospitals (id, beds, population, location) VALUES (1, 500, 10000, 'Southeast Asia'); INSERT INTO hospitals (id, beds, population, location) VALUES (2, 600, 12000, 'Southeast Asia');","completion":"SELECT AVG(beds \/ population * 1000) FROM hospitals WHERE location = 'Southeast Asia';"}
{"prompt":"List all unique industries that have startups founded before 2015. with given SQL schema CREATE TABLE startups (id INT, name TEXT, industry TEXT, founder_gender TEXT, founding_year INT); INSERT INTO startups (id, name, industry, founder_gender, founding_year) VALUES (1, 'Acme Inc', 'Tech', 'Male', 2010), (2, 'Beta Corp', 'Retail', 'Female', 2015), (3, 'Gamma Startups', 'Biotech', 'Male', 2020);","completion":"SELECT DISTINCT industry FROM startups WHERE founding_year < 2015;"}
{"prompt":"What is the success rate of startups founded by immigrants? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founder_immigrant BOOLEAN, is_active BOOLEAN);","completion":"SELECT 100.0 * AVG(CASE WHEN founder_immigrant THEN 1.0 ELSE 0.0 END * CASE WHEN is_active THEN 1.0 ELSE 0.0 END) as success_rate FROM companies;"}
{"prompt":"What is the minimum funding amount received by a company founded by a person with a disability in the education industry? with given SQL schema CREATE TABLE Companies (id INT, name TEXT, founders TEXT, industry TEXT); INSERT INTO Companies (id, name, founders, industry) VALUES (1, 'EdLift', 'Disabled, Male', 'Education'); INSERT INTO Companies (id, name, founders, industry) VALUES (2, 'TechBoost', 'Asian, Male', 'Technology'); CREATE TABLE Investment_Rounds (company_id INT, funding_amount INT, round_number INT); INSERT INTO Investment_Rounds (company_id, funding_amount, round_number) VALUES (1, 500000, 1); INSERT INTO Investment_Rounds (company_id, funding_amount, round_number) VALUES (1, 750000, 2); INSERT INTO Investment_Rounds (company_id, funding_amount, round_number) VALUES (2, 3000000, 1);","completion":"SELECT MIN(r.funding_amount) FROM Companies c JOIN Investment_Rounds r ON c.id = r.company_id WHERE c.founders LIKE '%Disabled%' AND c.industry = 'Education';"}
{"prompt":"Identify the change in crop yield for each farm, from 2021 to 2022. with given SQL schema CREATE TABLE Yield (FarmID int, Year int, Yield int); INSERT INTO Yield (FarmID, Year, Yield) VALUES (1, 2021, 150), (1, 2022, 180), (2, 2021, 200), (2, 2022, 220), (3, 2021, 100), (3, 2022, 110);","completion":"SELECT FarmID, (Y2.Yield - Y1.Yield) as YieldChange FROM Yield Y1 JOIN Yield Y2 ON Y1.FarmID = Y2.FarmID AND Y1.Year = 2021 AND Y2.Year = 2022;"}
{"prompt":"How many marine mammal species are listed as endangered? with given SQL schema CREATE TABLE marine_mammals (name VARCHAR(255), conservation_status VARCHAR(50)); INSERT INTO marine_mammals (name, conservation_status) VALUES ('Blue Whale', 'Endangered'), ('Dolphin', 'Least Concern');","completion":"SELECT COUNT(*) FROM marine_mammals WHERE conservation_status = 'Endangered';"}
{"prompt":"What is the total number of marine mammals in the Arctic and Antarctic? with given SQL schema CREATE TABLE marine_mammals (mammal_name VARCHAR(255), region VARCHAR(255)); CREATE TABLE regions (region_name VARCHAR(255), region_id INTEGER);","completion":"SELECT SUM(region = 'Arctic' OR region = 'Antarctic') FROM marine_mammals;"}
{"prompt":"What is the total number of marine species observed in the Pacific and Atlantic oceans? with given SQL schema CREATE TABLE oceans (ocean_id INT, name VARCHAR(20)); INSERT INTO oceans (ocean_id, name) VALUES (1, 'Pacific'), (2, 'Atlantic'); CREATE TABLE species_oceans (species_id INT, species_name VARCHAR(20), ocean_id INT); INSERT INTO species_oceans (species_id, species_name, ocean_id) VALUES (1, 'Clownfish', 1), (2, 'Dolphin', 2), (3, 'Shark', 1), (4, 'Starfish', 2);","completion":"SELECT COUNT(*) FROM species_oceans WHERE ocean_id IN (1, 2);"}
{"prompt":"What is the total transaction volume for the top 3 digital assets by market capitalization in the 'developed_markets' schema? with given SQL schema CREATE SCHEMA developed_markets; CREATE TABLE developed_markets.digital_assets (asset_name VARCHAR(10), market_cap BIGINT, daily_transaction_volume BIGINT); INSERT INTO developed_markets.digital_assets (asset_name, market_cap, daily_transaction_volume) VALUES ('AssetG', 30000000, 15000000), ('AssetH', 25000000, 12000000), ('AssetI', 20000000, 10000000), ('AssetJ', 15000000, 8000000), ('AssetK', 10000000, 6000000);","completion":"SELECT SUM(daily_transaction_volume) FROM (SELECT daily_transaction_volume FROM developed_markets.digital_assets ORDER BY market_cap DESC FETCH NEXT 3 ROWS ONLY) t;"}
{"prompt":"What is the density of trees (trees per hectare) by tree type in each country? with given SQL schema CREATE TABLE countries (id INT, name VARCHAR(255)); INSERT INTO countries (id, name) VALUES (1, 'Canada'), (2, 'USA'); CREATE TABLE tree_densities (id INT, country_id INT, tree_type_id INT, trees_per_hectare INT); INSERT INTO tree_densities (id, country_id, tree_type_id, trees_per_hectare) VALUES (1, 1, 1, 100), (2, 1, 2, 150), (3, 2, 1, 80), (4, 2, 2, 120); CREATE TABLE tree_types (id INT, name VARCHAR(255)); INSERT INTO tree_types (id, name) VALUES (1, 'Coniferous'), (2, 'Deciduous');","completion":"SELECT c.name, tt.name, AVG(td.trees_per_hectare) avg_trees_per_hectare FROM tree_densities td JOIN countries c ON td.country_id = c.id JOIN tree_types tt ON td.tree_type_id = tt.id GROUP BY c.name, tt.name;"}
{"prompt":"What are the top 5 cruelty-free cosmetic products with the highest consumer preference ratings? with given SQL schema CREATE TABLE cosmetics (product_id INT, product_name TEXT, cruelty_free BOOLEAN, consumer_rating FLOAT); INSERT INTO cosmetics VALUES (1, 'Lipstick A', true, 4.6), (2, 'Foundation B', false, 4.3), (3, 'Mascara C', true, 4.7), (4, 'Eyeshadow D', true, 4.5), (5, 'Blush E', false, 4.4);","completion":"SELECT product_name, cruelty_free, consumer_rating FROM cosmetics WHERE cruelty_free = true ORDER BY consumer_rating DESC LIMIT 5;"}
{"prompt":"When was the first military innovation initiated? with given SQL schema CREATE TABLE Timeline (id INT, event VARCHAR(50), year INT); INSERT INTO Timeline (id, event, year) VALUES (1, 'First Innovation', 1950);","completion":"SELECT MIN(year) FROM Timeline;"}
{"prompt":"Find the average transaction amount for each customer with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(50)); INSERT INTO customers VALUES (1, 'Alice'); INSERT INTO customers VALUES (2, 'Bob'); CREATE TABLE transactions (transaction_id INT, customer_id INT, amount DECIMAL(10,2)); INSERT INTO transactions VALUES (1, 1, 50.00); INSERT INTO transactions VALUES (2, 1, 75.00); INSERT INTO transactions VALUES (3, 2, 100.00);","completion":"SELECT t.customer_id, AVG(t.amount) as avg_amount FROM transactions t GROUP BY t.customer_id;"}
{"prompt":"What is the total transaction amount for each customer? with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(50)); CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_amount DECIMAL(10,2)); INSERT INTO customers (customer_id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'); INSERT INTO transactions (transaction_id, customer_id, transaction_amount) VALUES (1, 1, 500.00), (2, 1, 700.00), (3, 2, 300.00);","completion":"SELECT c.name, SUM(t.transaction_amount) FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.name;"}
{"prompt":"How many vessels are owned by companies based in the European Union, with a total capacity of over 1,000,000 tons? with given SQL schema CREATE TABLE companies (company_id INT, company_name TEXT, country TEXT); INSERT INTO companies VALUES (1, 'Company X', 'Germany'), (2, 'Company Y', 'France'), (3, 'Company Z', 'Italy'); CREATE TABLE vessels (vessel_id INT, company_id INT, capacity INT); INSERT INTO vessels VALUES (1, 1, 800000), (2, 1, 900000), (3, 2, 700000), (4, 3, 1200000);","completion":"SELECT COUNT(vessels.vessel_id) FROM vessels JOIN companies ON vessels.company_id = companies.company_id WHERE companies.country = 'European Union' GROUP BY vessels.company_id HAVING SUM(vessels.capacity) > 1000000;"}
{"prompt":"What is the total revenue for mental health services provided in rural healthcare facilities in Oregon and Washington, grouped by facility? with given SQL schema CREATE TABLE services (id INT, name TEXT, revenue INT, facility_id INT); INSERT INTO services (id, name, revenue, facility_id) VALUES (1, 'Mental Health', 5000, 101); CREATE TABLE facilities (id INT, name TEXT, location TEXT, capacity INT);","completion":"SELECT facilities.name, SUM(services.revenue) as total_revenue FROM services JOIN facilities ON services.facility_id = facilities.id WHERE facilities.location IN ('Oregon', 'Washington') AND services.name = 'Mental Health' GROUP BY facilities.name;"}
{"prompt":"Who are the top 3 suppliers of military equipment to the African Union in 2022? with given SQL schema CREATE TABLE suppliers(supplier_id INT, supplier_name VARCHAR(255), country VARCHAR(255), total_sales FLOAT, year INT); INSERT INTO suppliers(supplier_id, supplier_name, country, total_sales, year) VALUES (1, 'Supplier1', 'Country1', 30000000, 2022), (2, 'Supplier2', 'Country2', 25000000, 2022), (3, 'Supplier3', 'Country3', 20000000, 2022), (4, 'Supplier4', 'Country4', 15000000, 2022);","completion":"SELECT supplier_name, total_sales FROM suppliers WHERE country = 'African Union' AND year = 2022 ORDER BY total_sales DESC LIMIT 3;"}
{"prompt":"Which artist has the highest number of total streams on Spotify and Apple Music? with given SQL schema CREATE TABLE artist_streams (stream_id INT, artist_name VARCHAR(100), platform VARCHAR(20), total_streams INT); INSERT INTO artist_streams (stream_id, artist_name, platform, total_streams) VALUES (1, 'Queen', 'Spotify', 10000000), (2, 'Queen', 'Apple Music', 5000000), (3, 'Taylor Swift', 'Spotify', 8000000), (4, 'Taylor Swift', 'Apple Music', 6000000);","completion":"SELECT a.artist_name, MAX(a.total_streams) as highest_streams FROM artist_streams a WHERE a.platform IN ('Spotify', 'Apple Music') GROUP BY a.artist_name;"}
{"prompt":"Calculate the percentage of employees in each department who are from underrepresented racial or ethnic groups. with given SQL schema CREATE TABLE Employees (EmployeeID int, Department varchar(20), RaceEthnicity varchar(50)); INSERT INTO Employees (EmployeeID, Department, RaceEthnicity) VALUES (1, 'IT', 'Asian'), (2, 'IT', 'White'), (3, 'Sales', 'Black'), (4, 'Sales', 'Hispanic'), (5, 'Sales', 'Asian');","completion":"SELECT e.Department, ROUND(COUNT(CASE WHEN e.RaceEthnicity IN ('Black', 'Hispanic', 'Native American', 'Pacific Islander') THEN 1 END) * 100.0 \/ COUNT(*), 1) AS Percent_Underrepresented FROM Employees e GROUP BY e.Department;"}
{"prompt":"Find the average salary for athletes in each sport in the athlete_salaries table. with given SQL schema CREATE TABLE athlete_salaries (athlete_id INT, name VARCHAR(50), sport VARCHAR(20), salary DECIMAL(10, 2)); INSERT INTO athlete_salaries (athlete_id, name, sport, salary) VALUES (1, 'LeBron James', 'Basketball', 45000000.00); INSERT INTO athlete_salaries (athlete_id, name, sport, salary) VALUES (2, 'Tom Brady', 'Football', 30000000.00);","completion":"SELECT sport, AVG(salary) FROM athlete_salaries GROUP BY sport;"}
{"prompt":"What is the minimum donation amount made in the year 2019? with given SQL schema CREATE TABLE donations (id INT, donation_date DATE, donation_amount DECIMAL); INSERT INTO donations (id, donation_date, donation_amount) VALUES (1, '2019-01-01', 50.00), (2, '2019-01-01', 10.00), (3, '2019-12-31', 25.00);","completion":"SELECT MIN(donation_amount) FROM donations WHERE YEAR(donation_date) = 2019;"}
{"prompt":"Delete patents not related to AI. with given SQL schema CREATE TABLE patents (id INT, inventor_id INT, patent_year INT, ai_related BOOLEAN);","completion":"DELETE FROM patents WHERE id NOT IN (SELECT p.id FROM patents p WHERE p.ai_related = true);"}
{"prompt":"What is the maximum budget allocated for technology for social good projects in African countries? with given SQL schema CREATE TABLE SocialGoodBudget (Country VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO SocialGoodBudget (Country, Budget) VALUES ('Kenya', 1200000.00), ('Nigeria', 1500000.00), ('South Africa', 1800000.00); CREATE TABLE Countries (Country VARCHAR(50), Continent VARCHAR(50)); INSERT INTO Countries (Country, Continent) VALUES ('Kenya', 'Africa'), ('Nigeria', 'Africa'), ('South Africa', 'Africa');","completion":"SELECT MAX(SocialGoodBudget.Budget) AS MaxBudget FROM SocialGoodBudget INNER JOIN Countries ON SocialGoodBudget.Country = Countries.Country WHERE Countries.Continent = 'Africa';"}
{"prompt":"List the number of vehicles of each type in the Berlin U-Bahn fleet with given SQL schema CREATE TABLE berlin_ubahn_inventory (inventory_id int, vehicle_type varchar(255), model varchar(255)); INSERT INTO berlin_ubahn_inventory (inventory_id, vehicle_type, model) VALUES (1, 'Train', 'Type A'), (2, 'Train', 'Type B'), (3, 'Tram', 'Type C');","completion":"SELECT vehicle_type, COUNT(*) AS count FROM berlin_ubahn_inventory GROUP BY vehicle_type;"}
{"prompt":"Show the total revenue generated from circular economy practices in the 'EthicalFashion' database with given SQL schema CREATE TABLE sales (sale_id INT, item_id INT, sale_price DECIMAL(10,2), is_circular_economy BOOLEAN);","completion":"SELECT SUM(sale_price) FROM sales WHERE is_circular_economy = TRUE;"}
{"prompt":"What is the percentage of users in Canada who have used the hashtag #travel? with given SQL schema CREATE TABLE posts (id INT, user_id INT, hashtags TEXT); INSERT INTO posts (id, user_id, hashtags) VALUES (1, 1, '#travel'), (2, 1, '#food'), (3, 2, '#travel'), (4, 3, '#art'), (5, 4, '#music'); CREATE TABLE users (id INT, country VARCHAR(2)); INSERT INTO users (id, country) VALUES (1, 'CA'), (2, 'US'), (3, 'CA'), (4, 'DE');","completion":"SELECT 100.0 * COUNT(DISTINCT user_id) \/ (SELECT COUNT(DISTINCT user_id) FROM posts JOIN users ON posts.user_id = users.id WHERE users.country = 'CA') as percentage_travel FROM posts JOIN users ON posts.user_id = users.id WHERE hashtags LIKE '%#travel%' AND users.country = 'CA';"}
{"prompt":"Insert a new sustainable fabric type 'Organic Hemp' into the 'Fabric' table with given SQL schema CREATE TABLE Fabric (id INT PRIMARY KEY, name VARCHAR(50), source_country VARCHAR(50), sustainability_score INT);","completion":"INSERT INTO Fabric (id, name, source_country, sustainability_score) VALUES (10, 'Organic Hemp', 'China', 85);"}
{"prompt":"Show the minimum quantity of all items in the Inventory table with given SQL schema CREATE TABLE Inventory (item_id INT, item_name VARCHAR(50), quantity INT, warehouse_id INT);","completion":"SELECT MIN(quantity) FROM Inventory;"}
{"prompt":"What are the total quantities of items shipped to each continent? with given SQL schema CREATE TABLE Shipment (id INT, source_country VARCHAR(255), destination_continent VARCHAR(255), quantity INT); INSERT INTO Shipment (id, source_country, destination_continent, quantity) VALUES (1, 'China', 'Asia', 500), (2, 'United States', 'North America', 300), (3, 'Germany', 'Europe', 200), (4, 'Brazil', 'South America', 100);","completion":"SELECT destination_continent, SUM(quantity) FROM Shipment GROUP BY destination_continent"}
{"prompt":"What is the order ID and delivery time for the fastest delivery made by each courier in the 'courier_performances' view, ordered by the fastest delivery time? with given SQL schema CREATE VIEW courier_performances AS SELECT courier_id, order_id, MIN(delivery_time) as fastest_delivery_time FROM orders GROUP BY courier_id, order_id;","completion":"SELECT courier_id, order_id, MIN(fastest_delivery_time) as fastest_delivery_time FROM courier_performances GROUP BY courier_id, order_id ORDER BY fastest_delivery_time;"}
{"prompt":"How many female and male faculty members are there in each college? with given SQL schema CREATE TABLE college (college_name TEXT); INSERT INTO college (college_name) VALUES ('College of Science'), ('College of Arts'), ('College of Business'); CREATE TABLE faculty (faculty_id INTEGER, college_name TEXT, gender TEXT); INSERT INTO faculty (faculty_id, college_name, gender) VALUES (1, 'College of Science', 'Male'), (2, 'College of Science', 'Female'), (3, 'College of Arts', 'Non-binary'), (4, 'College of Business', 'Male');","completion":"SELECT college_name, gender, COUNT(*) FROM faculty GROUP BY college_name, gender;"}
{"prompt":"Identify the local economic impact of each region by summing the revenue of all hotels in that region? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, region TEXT, revenue FLOAT); INSERT INTO hotels (hotel_id, hotel_name, region, revenue) VALUES (1, 'Hotel 1', 'Region 1', 100000), (2, 'Hotel 2', 'Region 1', 200000), (3, 'Hotel 3', 'Region 2', 150000), (4, 'Hotel 4', 'Region 2', 250000);","completion":"SELECT region, SUM(revenue) AS total_revenue FROM hotels GROUP BY region;"}
{"prompt":"Display the top 3 most booked 'eco-friendly' hotels based on the last month's bookings. with given SQL schema CREATE TABLE ecohotels (id INT, name VARCHAR(255), eco_friendly BOOLEAN, rating FLOAT); INSERT INTO ecohotels (id, name, eco_friendly, rating) VALUES (1, 'Green Hotel', 1, 4.2); INSERT INTO ecohotels (id, name, eco_friendly, rating) VALUES (2, 'Eco Lodge', 1, 4.5);","completion":"SELECT * FROM ecohotels WHERE eco_friendly = 1 AND id IN (SELECT hotel_id FROM otabookings WHERE booking_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY hotel_id ORDER BY COUNT(*) DESC LIMIT 3);"}
{"prompt":"How many research stations are there per country in the Arctic with more than 30 scientists? with given SQL schema CREATE TABLE research_stations (id INT, station_name VARCHAR, country VARCHAR, num_scientists INT); INSERT INTO research_stations VALUES (1, 'Station A', 'Norway', 50);","completion":"SELECT country, COUNT(*) FROM research_stations WHERE num_scientists > 30 GROUP BY country;"}
{"prompt":"Update the 'design_standards' table to set the 'standard_status' to 'Obsolete' for all records where 'standard_version' is less than 3 with given SQL schema CREATE TABLE design_standards (standard_id INT, standard_name TEXT, standard_version INT, standard_status TEXT);","completion":"UPDATE design_standards SET standard_status = 'Obsolete' WHERE standard_version < 3;"}
{"prompt":"What are the total construction costs for all projects in 'New York' and 'Texas'? with given SQL schema CREATE TABLE Projects (name TEXT, state TEXT, cost INTEGER); INSERT INTO Projects (name, state, cost) VALUES ('Highway Expansion', 'New York', 1000000); INSERT INTO Projects (name, state, cost) VALUES ('Transportation Upgrade', 'Texas', 2000000);","completion":"SELECT SUM(cost) FROM Projects WHERE state IN ('New York', 'Texas');"}
{"prompt":"Compare the number of tourists visiting eco-friendly destinations in 2021 and 2022. with given SQL schema CREATE TABLE destinations_2021 (id INT, destination VARCHAR(50), num_tourists INT); INSERT INTO destinations_2021 (id, destination, num_tourists) VALUES (1, 'Bali', 1200), (2, 'Maldives', 1500), (3, 'New Zealand', 1800), (4, 'Costa Rica', 900), (5, 'Nepal', 1000); CREATE TABLE destinations_2022 (id INT, destination VARCHAR(50), num_tourists INT); INSERT INTO destinations_2022 (id, destination, num_tourists) VALUES (1, 'Bali', 1500), (2, 'Maldives', 1700), (3, 'New Zealand', 2000), (4, 'Costa Rica', 1200), (5, 'Nepal', 1300); CREATE TABLE eco_destinations (id INT, destination VARCHAR(50)); INSERT INTO eco_destinations (id, destination) VALUES (1, 'Bali'), (2, 'Costa Rica'), (3, 'Nepal');","completion":"SELECT d2022.destination, (d2022.num_tourists - d2021.num_tourists) AS tourist_change FROM destinations_2022 d2022 JOIN destinations_2021 d2021 ON d2022.destination = d2021.destination JOIN eco_destinations ed ON d2022.destination = ed.destination;"}
{"prompt":"What is the average sentence length (in months) for offenders in the justice_data schema's sentencing table who have been convicted of violent crimes? with given SQL schema CREATE TABLE justice_data.sentencing (id INT, case_number INT, offender_id INT, sentence_length INT, conviction VARCHAR(50));","completion":"SELECT AVG(sentence_length) FROM justice_data.sentencing WHERE conviction LIKE '%violent%';"}
{"prompt":"What is the percentage of cases that are dismissed in the criminal justice system? with given SQL schema CREATE TABLE cases (case_id INT, dismissed BOOLEAN);","completion":"SELECT 100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM cases) AS percentage FROM cases WHERE dismissed = TRUE;"}
{"prompt":"What is the distribution of articles by language in the 'articles' table? with given SQL schema CREATE TABLE articles (article_language VARCHAR(50), article_title VARCHAR(100), publication_date DATE); INSERT INTO articles (article_language, article_title, publication_date) VALUES ('English', 'Article 1', '2021-01-01'); INSERT INTO articles (article_language, article_title, publication_date) VALUES ('Spanish', 'Article 2', '2021-01-02');","completion":"SELECT article_language, COUNT(*) as article_count FROM articles GROUP BY article_language;"}
{"prompt":"How many vendors offer gluten-free options in the downtown area? with given SQL schema CREATE TABLE VendorLocation (VendorID INT, Location VARCHAR(50)); INSERT INTO VendorLocation (VendorID, Location) VALUES (1, 'Downtown'), (2, 'Uptown'); CREATE TABLE MenuItems (MenuItemID INT, VendorID INT, MenuItemName VARCHAR(50), MenuItemType VARCHAR(50), GlutenFree VARCHAR(5)); INSERT INTO MenuItems (MenuItemID, VendorID, MenuItemName, MenuItemType, GlutenFree) VALUES (1, 1, 'Chicken Caesar Salad', 'Salad', 'Yes'), (2, 1, 'Ham Sandwich', 'Sandwich', 'No'), (3, 2, 'Beef Burrito', 'Mexican', 'No');","completion":"SELECT COUNT(*) FROM MenuItems WHERE VendorID IN (SELECT VendorID FROM VendorLocation WHERE Location = 'Downtown') AND GlutenFree = 'Yes';"}
{"prompt":"What was the average waste per menu item last month? with given SQL schema CREATE TABLE inventory (item VARCHAR(255), daily_waste NUMERIC, date DATE); INSERT INTO inventory (item, daily_waste, date) VALUES ('Chicken Alfredo', 20, '2021-10-01'), ('Veggie Lasagna', 15, '2021-10-01'), ('Beef Tacos', 10, '2021-10-01');","completion":"SELECT item, AVG(daily_waste) FROM inventory WHERE date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) GROUP BY item;"}
{"prompt":"What are the workforce diversity statistics for each mining site? with given SQL schema CREATE TABLE mining_sites (id INT, name VARCHAR(50)); CREATE TABLE workforce (site_id INT, gender VARCHAR(10), role VARCHAR(20)); INSERT INTO mining_sites (id, name) VALUES (1, 'Site A'), (2, 'Site B'), (3, 'Site C'); INSERT INTO workforce (site_id, gender, role) VALUES (1, 'Male', 'Engineer'), (1, 'Female', 'Operator'), (2, 'Male', 'Manager'), (2, 'Non-binary', 'Engineer'), (3, 'Male', 'Operator'), (3, 'Female', 'Manager');","completion":"SELECT ms.name, w.gender, COUNT(w.site_id) as count FROM mining_sites ms INNER JOIN workforce w ON ms.id = w.site_id GROUP BY ms.name, w.gender;"}
{"prompt":"What is the percentage of mobile customers who use more than 10 GB of data per month in each state? with given SQL schema CREATE TABLE mobile_customers (id INT, state VARCHAR(50), data_usage FLOAT);","completion":"SELECT state, 100.0 * SUM(CASE WHEN data_usage > 10 THEN 1 ELSE 0 END) \/ COUNT(*) AS pct FROM mobile_customers GROUP BY state;"}
{"prompt":"What is the total number of mobile and broadband subscribers for each technology, ranked in descending order? with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, technology VARCHAR(20), region VARCHAR(50)); INSERT INTO mobile_subscribers (subscriber_id, technology, region) VALUES (1, '4G', 'North'), (2, '5G', 'North'), (3, '3G', 'South'), (4, '5G', 'East'); CREATE TABLE broadband_subscribers (subscriber_id INT, technology VARCHAR(20), region VARCHAR(50)); INSERT INTO broadband_subscribers (subscriber_id, technology, region) VALUES (5, 'Fiber', 'North'), (6, 'Cable', 'North'), (7, 'Fiber', 'West'), (8, 'DSL', 'East');","completion":"SELECT 'Mobile' AS source, technology, COUNT(*) AS total FROM mobile_subscribers GROUP BY technology UNION ALL SELECT 'Broadband' AS source, technology, COUNT(*) AS total FROM broadband_subscribers GROUP BY technology ORDER BY total DESC;"}
{"prompt":"What is the total number of investigative journalism articles published in the last 3 months, and what percentage of the total publications do they represent? with given SQL schema CREATE TABLE publications (id INT, title VARCHAR(100), genre VARCHAR(20), publication_date DATE);INSERT INTO publications (id, title, genre, publication_date) VALUES (1, 'Uncovering Corruption', 'investigative journalism', '2022-04-01');INSERT INTO publications (id, title, genre, publication_date) VALUES (2, 'The Hidden Truth', 'opinion', '2022-03-15');","completion":"SELECT COUNT(*) AS total_investigative_articles FROM publications WHERE genre = 'investigative journalism' AND publication_date >= DATEADD(month, -3, GETDATE());SELECT COUNT(*) AS total_publications FROM publications;SELECT (total_investigative_articles * 100.0 \/ total_publications) AS percentage FROM (SELECT COUNT(*) AS total_investigative_articles FROM publications WHERE genre = 'investigative journalism' AND publication_date >= DATEADD(month, -3, GETDATE())) AS investigative_articles, (SELECT COUNT(*) AS total_publications FROM publications) AS total_publications;"}
{"prompt":"What is the average donation amount in the education sector, for donations made in the last 6 months? with given SQL schema CREATE TABLE donations (id INT, donation_date DATE, donation_amount DECIMAL(10,2), sector TEXT); INSERT INTO donations (id, donation_date, donation_amount, sector) VALUES (1, '2022-01-01', 100.00, 'Education'), (2, '2022-02-14', 200.00, 'Health'), (3, '2022-03-05', 150.00, 'Education');","completion":"SELECT sector, AVG(donation_amount) as avg_donation FROM donations WHERE donation_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND sector = 'Education' GROUP BY sector;"}
{"prompt":"List all records from the 'PlayerData' table with given SQL schema CREATE TABLE PlayerData (PlayerID INT, Name VARCHAR(50), Age INT, Country VARCHAR(50)); INSERT INTO PlayerData (PlayerID, Name, Age, Country) VALUES ('1', 'John Doe', '25', 'USA'), ('2', 'Jane Smith', '30', 'Canada');","completion":"SELECT * FROM PlayerData;"}
{"prompt":"Identify the number of IoT sensors in operation in Texas with given SQL schema CREATE TABLE sensor_data (sensor_id INT, sensor_location VARCHAR(50), operation_status VARCHAR(10));","completion":"SELECT COUNT(sensor_id) FROM sensor_data WHERE sensor_location = 'Texas';"}
{"prompt":"List all hospitals in California with their corresponding budgets and number of beds? with given SQL schema CREATE TABLE hospitals (id INT, name TEXT, city TEXT, budget FLOAT, beds INT); INSERT INTO hospitals (id, name, city, budget, beds) VALUES (1, 'UCLA Medical Center', 'Los Angeles', 3000000, 500);","completion":"SELECT hospitals.name, hospitals.budget, hospitals.beds FROM hospitals WHERE hospitals.city IN (SELECT cities.name FROM cities WHERE cities.state = 'California');"}
{"prompt":"Who are the top 5 customers in the 'customers' table that have purchased the most products from the 'sustainable_products' table? with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(255), email VARCHAR(255));","completion":"SELECT c.name, COUNT(sp.product_id) as purchases FROM customers c JOIN sustainable_products sp ON c.customer_id = sp.customer_id GROUP BY c.name ORDER BY purchases DESC LIMIT 5;"}
{"prompt":"How many tickets were sold for home games in Q1 of 2021? with given SQL schema CREATE TABLE games (id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, price DECIMAL(5,2), game_date DATE); CREATE VIEW home_games AS SELECT id, home_team_id, price, game_date FROM games;","completion":"SELECT COUNT(*) as tickets_sold FROM home_games WHERE game_date BETWEEN '2021-01-01' AND '2021-03-31';"}
{"prompt":"Insert new records of ticket sales for a new event, including event and salesperson information. with given SQL schema CREATE TABLE salesperson (salesperson_id INT, name VARCHAR(50), position VARCHAR(50)); CREATE TABLE tickets (ticket_id INT, salesperson_id INT, event_id INT, price DECIMAL(5,2), quantity INT); CREATE TABLE events (event_id INT, name VARCHAR(50), date DATE); INSERT INTO salesperson VALUES (1, 'John Doe', 'Senior Salesperson'); INSERT INTO events VALUES (2, 'New Event', '2023-04-15');","completion":"INSERT INTO tickets (ticket_id, salesperson_id, event_id, price, quantity) VALUES (2, 1, 2, 75, 50), (3, 2, 2, 65, 75); INSERT INTO events (event_id, name, date) VALUES (2, 'New Event', '2023-04-15');"}
{"prompt":"What is the average age of athletes in the athlete_wellbeing table? with given SQL schema CREATE TABLE athlete_wellbeing (athlete_id INT, name VARCHAR(50), age INT, sport VARCHAR(20));","completion":"SELECT AVG(age) FROM athlete_wellbeing;"}
{"prompt":"What are the top 3 most common types of vulnerabilities found in the healthcare sector in the year 2020? with given SQL schema CREATE TABLE vulnerabilities (id INT, sector VARCHAR(255), year INT, vulnerability VARCHAR(255), count INT); INSERT INTO vulnerabilities (id, sector, year, vulnerability, count) VALUES (1, 'healthcare', 2020, 'SQL injection', 2), (2, 'healthcare', 2020, 'Cross-site scripting', 3), (3, 'healthcare', 2020, 'Buffer overflow', 1);","completion":"SELECT vulnerability, count FROM vulnerabilities WHERE sector = 'healthcare' AND year = 2020 GROUP BY vulnerability ORDER BY count DESC LIMIT 3;"}
{"prompt":"What is the average cost of materials for each garment category? with given SQL schema CREATE TABLE material_costs (garment_category VARCHAR(50), material_cost DECIMAL(10,2));","completion":"SELECT garment_category, AVG(material_cost) AS avg_material_cost FROM material_costs GROUP BY garment_category;"}
{"prompt":"Which garment type has the highest total sales revenue? with given SQL schema CREATE TABLE transactions (id INT, garment_id INT, price DECIMAL(5,2), quantity INT); INSERT INTO transactions (id, garment_id, price, quantity) VALUES","completion":"SELECT garments.type, SUM(transactions.price * transactions.quantity) AS revenue FROM transactions INNER JOIN garments ON transactions.garment_id = garments.id GROUP BY garments.type ORDER BY revenue DESC LIMIT 1;"}
{"prompt":"What is the policy number, coverage amount, and effective date for policies with a policyholder address in 'New York'? with given SQL schema CREATE TABLE policy (policy_number INT, coverage_amount INT, policyholder_address VARCHAR(50)); INSERT INTO policy VALUES (1, 50000, 'New York'); INSERT INTO policy VALUES (2, 75000, 'Los Angeles');","completion":"SELECT policy_number, coverage_amount, effective_date FROM policy INNER JOIN address ON policy.policyholder_address = address.address_line1 WHERE address.city = 'New York';"}
{"prompt":"How many workers are represented by the 'United Steelworkers' union? with given SQL schema CREATE TABLE if not exists union_membership (union_id INT, worker_id INT); INSERT INTO union_membership (union_id, worker_id) VALUES (1, 1001), (1, 1002), (1, 1003), (2, 2001), (2, 2002), (3, 3001);","completion":"SELECT COUNT(worker_id) FROM union_membership WHERE union_id = (SELECT union_id FROM unions WHERE union_name = 'United Steelworkers');"}
{"prompt":"What is the average fuel consumption of vessels with Type 'Tanker'? with given SQL schema CREATE TABLE Vessels (ID VARCHAR(10), Name VARCHAR(20), Type VARCHAR(20), Fuel_Consumption FLOAT); INSERT INTO Vessels (ID, Name, Type, Fuel_Consumption) VALUES ('1', 'Vessel A', 'Cargo', 5.5), ('2', 'Vessel B', 'Tanker', 7.0), ('3', 'Vessel C', 'Bulk Carrier', 6.0), ('4', 'Vessel D', 'Container', 5.0);","completion":"SELECT AVG(Fuel_Consumption) FROM Vessels WHERE Type = 'Tanker';"}
{"prompt":"Which vessels had safety incidents in the Mediterranean Sea in the past year? with given SQL schema CREATE TABLE SafetyRecords (Id INT, VesselName VARCHAR(50), Location VARCHAR(50), IncidentDate DATETIME);","completion":"SELECT DISTINCT VesselName FROM SafetyRecords WHERE Location LIKE '%Mediterranean Sea%' AND IncidentDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY VesselName HAVING COUNT(*) > 0;"}
{"prompt":"What is the average number of installations visited per visitor, partitioned by city? with given SQL schema CREATE TABLE Cities (CityID INT, City VARCHAR(50)); INSERT INTO Cities (CityID, City) VALUES (1, 'New York'), (2, 'Los Angeles'); CREATE TABLE Visits (VisitID INT, VisitorID INT, CityID INT, InstallationID INT); INSERT INTO Visits (VisitID, VisitorID, CityID, InstallationID) VALUES (1, 1, 1, 1), (2, 1, 1, 2), (3, 2, 2, 3);","completion":"SELECT City, AVG(InstallationID) OVER (PARTITION BY CityID) AS AvgInstallationsPerVisitor FROM Visits V JOIN Cities C ON V.CityID = C.CityID;"}
{"prompt":"Insert a new record of circular economy initiative for the city of New York in 2025. with given SQL schema CREATE TABLE circular_economy(city VARCHAR(20), year INT, initiative VARCHAR(50));","completion":"INSERT INTO circular_economy VALUES('New York', 2025, 'Implementing a city-wide composting program');"}
{"prompt":"List the top 3 states with highest water usage in the agricultural sector in 2020. with given SQL schema CREATE TABLE water_usage_by_state (year INT, sector VARCHAR(20), state VARCHAR(20), usage FLOAT); INSERT INTO water_usage_by_state (year, sector, state, usage) VALUES (2020, 'agricultural', 'California', 50000); INSERT INTO water_usage_by_state (year, sector, state, usage) VALUES (2020, 'agricultural', 'Texas', 45000); INSERT INTO water_usage_by_state (year, sector, state, usage) VALUES (2020, 'agricultural', 'Florida', 40000);","completion":"SELECT sector, state, SUM(usage) AS total_usage FROM water_usage_by_state WHERE year = 2020 AND sector = 'agricultural' GROUP BY sector, state ORDER BY total_usage DESC LIMIT 3;"}
{"prompt":"What is the total duration of weightlifting sessions for each member? with given SQL schema CREATE TABLE WorkoutSessions (SessionID INT, MemberID INT, Duration INT, WorkoutType VARCHAR(20)); INSERT INTO WorkoutSessions (SessionID, MemberID, Duration, WorkoutType) VALUES (1, 1, 60, 'Weightlifting'), (2, 2, 45, 'Yoga'), (3, 1, 75, 'Weightlifting'), (4, 3, 90, 'Running');","completion":"SELECT MemberID, SUM(Duration) AS TotalWeightliftingDuration FROM WorkoutSessions WHERE WorkoutType = 'Weightlifting' GROUP BY MemberID;"}
{"prompt":"What is the total number of workouts and total workout time per user for users with a membership type of 'Basic'? with given SQL schema CREATE TABLE Members (id INT, user_name VARCHAR, membership_type VARCHAR, signup_date DATE); CREATE TABLE Workouts (id INT, user_id INT, workout_date DATE, workout_duration INT); INSERT INTO Members (id, user_name, membership_type, signup_date) VALUES (1, 'John Doe', 'Premium', '2020-01-01'), (2, 'Jane Smith', 'Basic', '2019-06-15'), (3, 'Alice Johnson', 'Premium', '2020-03-20'); INSERT INTO Workouts (id, user_id, workout_date, workout_duration) VALUES (1, 1, '2020-01-01', 60), (2, 1, '2020-01-02', 70), (3, 2, '2019-06-15', 90), (4, 3, '2020-03-20', 65), (5, 3, '2020-03-21', 70);","completion":"SELECT Members.user_name, SUM(Workouts.workout_duration) AS total_workout_time, COUNT(Workouts.id) AS total_workouts FROM Members JOIN Workouts ON Members.id = Workouts.user_id WHERE Members.membership_type = 'Basic' GROUP BY Members.user_name;"}
{"prompt":"What is the median investment for agricultural innovation projects in Europe? with given SQL schema CREATE TABLE AgriculturalInnovation (ProjectID INT, ProjectName VARCHAR(50), Location VARCHAR(50), Investment FLOAT); INSERT INTO AgriculturalInnovation (ProjectID, ProjectName, Location, Investment) VALUES (1, 'Precision Farming Project', 'France', 120000.00), (2, 'Vertical Farming Project', 'Germany', 180000.00);","completion":"SELECT AVG(Investment) FROM (SELECT DISTINCT Investment FROM AgriculturalInnovation WHERE Location = 'Europe' ORDER BY Investment) WHERE PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY Investment) = Investment;"}
{"prompt":"How many satellites have been deployed by each country in the last 10 years? with given SQL schema CREATE TABLE satellite_deployments (id INT, country VARCHAR(255), launch_year INT); INSERT INTO satellite_deployments (id, country, launch_year) VALUES (1, 'USA', 2012), (2, 'China', 2013), (3, 'Russia', 2011), (4, 'India', 2010), (5, 'Japan', 2014), (6, 'USA', 2018), (7, 'Germany', 2019), (8, 'France', 2020), (9, 'Canada', 2017), (10, 'Australia', 2016);","completion":"SELECT country, COUNT(*) AS num_satellites FROM satellite_deployments WHERE launch_year >= 2011 GROUP BY country;"}
{"prompt":"How many space missions were successfully completed by 'AgencyX'? with given SQL schema CREATE TABLE Missions (id INT, name VARCHAR(50), agency VARCHAR(50), success BOOLEAN); INSERT INTO Missions (id, name, agency, success) VALUES (1, 'Mission1', 'AgencyX', TRUE), (2, 'Mission2', 'AgencyX', FALSE), (3, 'Mission3', 'AgencyY', TRUE);","completion":"SELECT COUNT(*) FROM Missions WHERE agency = 'AgencyX' AND success = TRUE;"}
{"prompt":"Create a view that displays all fish in the 'tropical' and 'temperate' locations with given SQL schema CREATE TABLE fish_stock (fish_id INT PRIMARY KEY, species VARCHAR(50), location VARCHAR(50), biomass FLOAT); INSERT INTO fish_stock (fish_id, species, location, biomass) VALUES (1, 'tuna', 'tropical', 250.5), (2, 'salmon', 'arctic', 180.3), (3, 'cod', 'temperate', 120.0);","completion":"CREATE VIEW fish_in_warm_waters AS SELECT * FROM fish_stock WHERE location IN ('tropical', 'temperate');"}
{"prompt":"Update the name of the dispensary with dispensary_id 502 to 'The Healing Center' in the 'dispensaries' table with given SQL schema CREATE TABLE dispensaries (dispensary_id INT, name VARCHAR(255), address VARCHAR(255));","completion":"UPDATE dispensaries SET name = 'The Healing Center' WHERE dispensary_id = 502;"}
{"prompt":"What are the average innovation scores for products manufactured in France and Germany, grouped by chemical compound? with given SQL schema CREATE TABLE product (id INT, name VARCHAR(255), manufacturer_country VARCHAR(255), chemical_compound VARCHAR(255), innovation_score INT); INSERT INTO product (id, name, manufacturer_country, chemical_compound, innovation_score) VALUES (1, 'Product A', 'France', 'Compound X', 80), (2, 'Product B', 'Germany', 'Compound Y', 85), (3, 'Product C', 'Mexico', 'Compound Z', 70);","completion":"SELECT chemical_compound, AVG(innovation_score) FROM product WHERE manufacturer_country IN ('France', 'Germany') GROUP BY chemical_compound;"}
{"prompt":"Remove the 'budget' column from 'climate_mitigation_projects' table with given SQL schema CREATE TABLE climate_mitigation_projects (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), start_date DATE, end_date DATE, budget FLOAT);","completion":"ALTER TABLE climate_mitigation_projects DROP COLUMN budget;"}
{"prompt":"What is the total R&D expenditure for each drug category? with given SQL schema CREATE TABLE rd_expenditure (drug_id INT, category_id INT, amount INT); INSERT INTO rd_expenditure (drug_id, category_id, amount) VALUES (101, 1, 20000), (102, 1, 25000), (201, 2, 15000), (202, 2, 20000), (301, 3, 30000); CREATE TABLE drug_categories (id INT, category VARCHAR(255)); INSERT INTO drug_categories (id, category) VALUES (1, 'Analgesics'), (2, 'Antidepressants'), (3, 'Antihistamines');","completion":"SELECT dc.category, SUM(re.amount) as total_rd_expenditure FROM rd_expenditure re JOIN drug_categories dc ON re.category_id = dc.id GROUP BY dc.category;"}
{"prompt":"How many infectious disease cases were reported in Texas and Florida in 2020 and 2021? with given SQL schema CREATE TABLE infectious_disease_reporting (state VARCHAR(20), year INT, cases INT); INSERT INTO infectious_disease_reporting (state, year, cases) VALUES ('Texas', 2020, 1000), ('Texas', 2021, 1200), ('Florida', 2020, 1500), ('Florida', 2021, 1800);","completion":"SELECT SUM(cases) FROM infectious_disease_reporting WHERE state IN ('Texas', 'Florida') AND year BETWEEN 2020 AND 2021;"}
{"prompt":"What is the minimum funding received by a startup founded by a person from the LGBTQ+ community in the real estate sector? with given SQL schema CREATE TABLE startups(id INT, name TEXT, industry TEXT, founder_community TEXT, funding FLOAT); INSERT INTO startups (id, name, industry, founder_community, funding) VALUES (1, 'RealtyPride', 'Real Estate', 'LGBTQ+', 500000);","completion":"SELECT MIN(funding) FROM startups WHERE industry = 'Real Estate' AND founder_community = 'LGBTQ+';"}
{"prompt":"What is the average yield of crops for each country, ranked by average yield? with given SQL schema CREATE TABLE farming (id INT, name TEXT, country TEXT, crop TEXT, yield INT); INSERT INTO farming VALUES (1, 'Smith Farm', 'USA', 'Corn', 120), (2, 'Brown Farm', 'Canada', 'Soybeans', 45), (3, 'Jones Farm', 'Mexico', 'Wheat', 80);","completion":"SELECT country, AVG(yield) as avg_yield, ROW_NUMBER() OVER (ORDER BY AVG(yield) DESC) as rank FROM farming GROUP BY country;"}
{"prompt":"What is the average yield per acre for crops grown in the Pacific region in 2021? with given SQL schema CREATE TABLE crops (id INT, name VARCHAR(50), yield INT, acrate DECIMAL(5,2), region VARCHAR(50), year INT); INSERT INTO crops (id, name, yield, acrate, region, year) VALUES (1, 'Corn', 150, 2.3, 'Pacific', 2021);","completion":"SELECT AVG(yield * acrate) FROM crops WHERE region = 'Pacific' AND year = 2021;"}
{"prompt":"How many students with disabilities are enrolled in each region's universities? with given SQL schema CREATE TABLE Regions (RegionID INT PRIMARY KEY, RegionName VARCHAR(50)); CREATE TABLE Universities (UniversityID INT PRIMARY KEY, UniversityName VARCHAR(50), RegionID INT, FOREIGN KEY (RegionID) REFERENCES Regions(RegionID)); CREATE TABLE Students (StudentID INT PRIMARY KEY, StudentName VARCHAR(50), Disability BOOLEAN, UniversityID INT, FOREIGN KEY (UniversityID) REFERENCES Universities(UniversityID));","completion":"SELECT r.RegionName, COUNT(s.StudentID) as StudentCount FROM Regions r JOIN Universities u ON r.RegionID = u.RegionID JOIN Students s ON u.UniversityID = s.UniversityID WHERE s.Disability = TRUE GROUP BY r.RegionName;"}
{"prompt":"What is the minimum depth ever reached by a submersible in the Pacific Ocean? with given SQL schema CREATE TABLE submersible_dives (id INT, submersible_name VARCHAR(50), region VARCHAR(20), dive_date DATE, max_depth INT, min_depth INT);INSERT INTO submersible_dives (id, submersible_name, region, dive_date, max_depth, min_depth) VALUES (1, 'Trieste', 'Atlantic', '1960-01-23', 10972, 10916);INSERT INTO submersible_dives (id, submersible_name, region, dive_date, max_depth, min_depth) VALUES (2, 'Mir', 'Atlantic', '2000-08-23', 6170, 6000);INSERT INTO submersible_dives (id, submersible_name, region, dive_date, max_depth, min_depth) VALUES (3, 'Pacific_Drop', 'Pacific', '2005-06-15', 8000, 7500);","completion":"SELECT MIN(min_depth) FROM submersible_dives WHERE region = 'Pacific';"}
{"prompt":"What are the cryptocurrency exchanges with their corresponding blockchain companies, ranked by exchange ID in ascending order, for the Bitcoin platform? with given SQL schema CREATE TABLE cryptocurrency_exchanges (exchange_id INT, exchange_name VARCHAR(50), company_id INT); INSERT INTO cryptocurrency_exchanges (exchange_id, exchange_name, company_id) VALUES (1, 'Binance', 1); INSERT INTO cryptocurrency_exchanges (exchange_id, exchange_name, company_id) VALUES (2, 'Coinbase', 2); INSERT INTO cryptocurrency_exchanges (exchange_id, exchange_name, company_id) VALUES (3, 'Kraken', 3); CREATE TABLE blockchain_companies (company_id INT, company_name VARCHAR(50), platform VARCHAR(50)); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (1, 'Binance', 'Bitcoin'); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (2, 'Blockstream', 'Bitcoin'); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (3, 'Blockchair', 'Bitcoin');","completion":"SELECT ce.exchange_name, bc.company_name, ce.exchange_id, ROW_NUMBER() OVER (PARTITION BY bc.platform ORDER BY ce.exchange_id ASC) as rank FROM cryptocurrency_exchanges ce JOIN blockchain_companies bc ON ce.company_id = bc.company_id WHERE bc.platform = 'Bitcoin';"}
{"prompt":"What is the average carbon sequestration per hectare for the entire dataset? with given SQL schema CREATE TABLE carbon_sequestration(region VARCHAR(255), sequestration FLOAT, area INT); INSERT INTO carbon_sequestration(region, sequestration, area) VALUES ('North', 5.6, 1000), ('South', 4.8, 1500), ('East', 6.2, 1200), ('West', 5.1, 1800);","completion":"SELECT AVG(sequestration) FROM carbon_sequestration;"}
{"prompt":"What is the average carbon sequestration rate per tree species by region? with given SQL schema CREATE TABLE tree_species (species_id INT, species_name VARCHAR(100), avg_carbon_sequestration_rate DECIMAL(5,2)); INSERT INTO tree_species (species_id, species_name, avg_carbon_sequestration_rate) VALUES (1, 'Oak', 15.5), (2, 'Pine', 12.8), (3, 'Maple', 18.2), (4, 'Birch', 10.9); CREATE TABLE regions (region_id INT, region_name VARCHAR(100)); INSERT INTO regions (region_id, region_name) VALUES (1, 'Northern'), (2, 'Southern'), (3, 'Eastern'), (4, 'Western'); CREATE TABLE tree_regions (tree_id INT, species_id INT, region_id INT); INSERT INTO tree_regions (tree_id, species_id, region_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4);","completion":"SELECT r.region_name, AVG(ts.avg_carbon_sequestration_rate) as avg_rate FROM tree_regions tr JOIN tree_species ts ON tr.species_id = ts.species_id JOIN regions r ON tr.region_id = r.region_id GROUP BY r.region_name;"}
{"prompt":"Update the price of all \"Lipstick\" products to $10.00. with given SQL schema CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2));","completion":"UPDATE products SET price = 10.00 WHERE name = 'Lipstick';"}
{"prompt":"What was the average response time for each community district in the past month? with given SQL schema CREATE TABLE community_districts (cd_number INT, community_name VARCHAR(255)); INSERT INTO community_districts (cd_number, community_name) VALUES  (1, 'Williamsburg'), (2, 'Greenpoint'), (3, 'Bushwick'); CREATE TABLE response_times (response_date DATE, cd_number INT, response_time INT);","completion":"SELECT cd.community_name, AVG(rt.response_time) as avg_response_time FROM community_districts cd JOIN response_times rt ON cd.cd_number = rt.cd_number WHERE rt.response_date >= CURDATE() - INTERVAL 1 MONTH GROUP BY cd.community_name;"}
{"prompt":"List all artists who have performed in New York and Chicago, along with their highest-earning performance. with given SQL schema CREATE TABLE artist_events (artist_id INT, event_id INT, earnings DECIMAL(5,2)); CREATE TABLE artists (id INT, name VARCHAR(50)); CREATE TABLE events (id INT, city VARCHAR(20));","completion":"SELECT artists.name, MAX(artist_events.earnings) FROM artists INNER JOIN artist_events ON artists.id = artist_events.artist_id INNER JOIN events ON artist_events.event_id = events.id WHERE city IN ('New York', 'Chicago') GROUP BY artists.name;"}
{"prompt":"Identify the number of unique clients in the Oceanian region who have made at least one transaction. with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(50), region VARCHAR(20)); CREATE TABLE transactions (transaction_id INT, client_id INT); INSERT INTO clients (client_id, name, region) VALUES (1, 'John Doe', 'Oceanian'), (2, 'Jane Smith', 'Oceanian'), (3, 'Mike Johnson', 'European'); INSERT INTO transactions (transaction_id, client_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3);","completion":"SELECT COUNT(DISTINCT c.client_id) FROM clients c INNER JOIN transactions t ON c.client_id = t.client_id WHERE c.region = 'Oceanian';"}
{"prompt":"What is the number of patients diagnosed with hypertension in the rural county of \"Mountain\" who are also over the age of 65? with given SQL schema CREATE TABLE patients (id INT, name VARCHAR(50), age INT, diagnosis VARCHAR(50)); INSERT INTO patients (id, name, age, diagnosis) VALUES (1, 'John Doe', 55, 'Diabetes'); INSERT INTO patients (id, name, age, diagnosis) VALUES (2, 'Jane Smith', 60, 'Hypertension'); INSERT INTO patients (id, name, age, diagnosis) VALUES (3, 'Bob Johnson', 65, 'Hypertension'); INSERT INTO patients (id, name, age, diagnosis) VALUES (4, 'Alice Williams', 70, 'Hypertension'); CREATE TABLE county (name VARCHAR(50), population INT); INSERT INTO county (name, population) VALUES ('Mountain', 7000);","completion":"SELECT COUNT(*) FROM patients WHERE diagnosis = 'Hypertension' AND age > 65 AND (SELECT name FROM county WHERE population = (SELECT population FROM county WHERE name = 'Mountain')) = 'Mountain';"}
{"prompt":"List all countries with their respective number of artists with given SQL schema CREATE TABLE Country (id INT, country VARCHAR(255)); CREATE TABLE Artist (id INT, country_id INT, name VARCHAR(255));","completion":"SELECT C.country, COUNT(A.id) as artist_count FROM Country C INNER JOIN Artist A ON C.id = A.country_id GROUP BY C.country;"}
{"prompt":"How many open pedagogy resources were accessed in 'Spring 2022'? with given SQL schema CREATE TABLE open_pedagogy_resources (resource_id INT, access_date DATE); INSERT INTO open_pedagogy_resources (resource_id, access_date) VALUES (1, '2022-03-01'), (2, '2022-03-02'), (3, '2022-03-03');","completion":"SELECT COUNT(DISTINCT resource_id) FROM open_pedagogy_resources WHERE access_date = '2022-03-01';"}
{"prompt":"What is the average mental health score of students in each school, ranked from highest to lowest? with given SQL schema CREATE TABLE schools (school_id INT, school_name VARCHAR(50)); INSERT INTO schools VALUES (1, 'School A'), (2, 'School B'), (3, 'School C'); CREATE TABLE student_mental_health (student_id INT, school_id INT, mental_health_score INT); INSERT INTO student_mental_health VALUES (1, 1, 75), (2, 1, 80), (3, 2, 60), (4, 2, 65), (5, 3, 85), (6, 3, 90);","completion":"SELECT school_id, school_name, AVG(mental_health_score) as avg_score FROM student_mental_health JOIN schools ON student_mental_health.school_id = schools.school_id GROUP BY school_id, school_name ORDER BY avg_score DESC;"}
{"prompt":"What is the maximum production quantity for wells in the 'gulf of Mexico'? with given SQL schema CREATE TABLE wells (id INT, name VARCHAR(255), location VARCHAR(255), production_quantity INT); INSERT INTO wells (id, name, location, production_quantity) VALUES (1, 'Well A', 'North Sea', 1000), (2, 'Well B', 'Gulf of Mexico', 2000), (3, 'Well C', 'North Sea', 1500), (4, 'Well D', 'Gulf of Mexico', 2500);","completion":"SELECT MAX(production_quantity) FROM wells WHERE location = 'Gulf of Mexico';"}
{"prompt":"Which wells in 'FieldA' have a production greater than 1500 in any month of 2021? with given SQL schema CREATE TABLE wells (well_id varchar(10), field varchar(10), production int, datetime date); INSERT INTO wells (well_id, field, production, datetime) VALUES ('W001', 'FieldA', 1500, '2021-01-01'), ('W002', 'FieldA', 1800, '2021-02-01');","completion":"SELECT well_id, field, production FROM wells WHERE field = 'FieldA' AND production > 1500 AND YEAR(datetime) = 2021;"}
{"prompt":"Calculate the average number of goals per game for the top 2 teams in the Indian Super League with given SQL schema CREATE TABLE teams (id INT PRIMARY KEY, name TEXT, league TEXT, goals_scored INT, goals_conceded INT, games_played INT); INSERT INTO teams (id, name, league, goals_scored, goals_conceded, games_played) VALUES (1, 'Mumbai City FC', 'Indian Super League', 22, 12, 16), (2, 'Hyderabad FC', 'Indian Super League', 20, 12, 16), (3, 'Goa FC', 'Indian Super League', 18, 12, 16), (4, 'Kerala Blasters FC', 'Indian Super League', 17, 13, 16), (5, 'Bengaluru FC', 'Indian Super League', 15, 12, 16);","completion":"SELECT AVG(goals_scored\/games_played) FROM (SELECT * FROM teams ORDER BY goals_scored DESC LIMIT 2) AS top_two_teams;"}
{"prompt":"Find the average height of basketball players in the NBA, categorized by their position. with given SQL schema CREATE TABLE nba_players_height (id INT, player_id INT, height_feet INT, height_inches INT); CREATE TABLE nba_players (id INT, name VARCHAR(100), team VARCHAR(50), position VARCHAR(50));","completion":"SELECT position, AVG(height_feet + height_inches \/ 12) as avg_height FROM nba_players_height JOIN nba_players ON nba_players_height.player_id = nba_players.id GROUP BY position;"}
{"prompt":"List the top 5 countries with the most gold medals won in the Summer Olympics. with given SQL schema CREATE TABLE summer_olympics (country_id INT, country_name VARCHAR(255), medal VARCHAR(10));","completion":"SELECT country_name, COUNT(*) AS total_golds FROM summer_olympics WHERE medal = 'Gold' GROUP BY country_name ORDER BY total_golds DESC LIMIT 5;"}
{"prompt":"List the names and organizations of all volunteers who have provided support in Syria and Yemen, sorted by organization. with given SQL schema CREATE TABLE support_provision (id INT, name VARCHAR(255), organization VARCHAR(255), country VARCHAR(255)); INSERT INTO support_provision (id, name, organization, country) VALUES ('1', 'Ahmad', 'Doctors Without Borders', 'Syria'), ('2', 'Bana', 'UNHCR', 'Yemen'), ('3', 'Cemal', 'World Food Programme', 'Syria'), ('4', 'Dalia', 'Red Cross', 'Yemen'), ('5', 'Elias', 'Doctors Without Borders', 'Yemen'), ('6', 'Farah', 'UNHCR', 'Syria');","completion":"SELECT name, organization FROM support_provision WHERE country IN ('Syria', 'Yemen') ORDER BY organization ASC;"}
{"prompt":"What was the total number of community development projects and total funds spent on them by each organization in 2021? with given SQL schema CREATE TABLE community_development (project_id INT, organization_id INT, sector VARCHAR(20), budget DECIMAL(10,2), start_date DATE); INSERT INTO community_development (project_id, organization_id, sector, budget, start_date) VALUES (1101, 1001, 'Education', 60000.00, '2021-01-01'), (1102, 1001, 'Healthcare', 85000.00, '2021-02-15'), (1103, 1002, 'Infrastructure', 110000.00, '2021-03-30'), (1104, 1003, 'Agriculture', 90000.00, '2021-04-12');","completion":"SELECT organization_id, COUNT(*) as total_projects, SUM(budget) as total_funds_spent FROM community_development WHERE EXTRACT(YEAR FROM start_date) = 2021 GROUP BY organization_id;"}
{"prompt":"Which organizations have provided legal assistance to refugees in the Middle East and North Africa? with given SQL schema CREATE TABLE legal_assistance (id INT, organization_name VARCHAR(50), region VARCHAR(20), provided_legal_assistance BOOLEAN); INSERT INTO legal_assistance (id, organization_name, region, provided_legal_assistance) VALUES (1, 'Amnesty International', 'Middle East', TRUE), (2, 'International Rescue Committee', 'North Africa', TRUE), (3, 'Save the Children', 'Asia', FALSE), (4, 'Oxfam', 'Africa', FALSE);","completion":"SELECT DISTINCT organization_name FROM legal_assistance WHERE region IN ('Middle East', 'North Africa') AND provided_legal_assistance = TRUE;"}
{"prompt":"How many AI ethics research papers were published in the last 6 months? with given SQL schema CREATE TABLE papers(id INT, title TEXT, publication_date DATE); INSERT INTO papers(id, title, publication_date) VALUES (1, 'Ethical AI: A Review', '2022-01-01'); INSERT INTO papers(id, title, publication_date) VALUES (2, 'Bias in AI Systems', '2022-02-15'); INSERT INTO papers(id, title, publication_date) VALUES (3, 'AI for Social Good', '2021-07-01');","completion":"SELECT COUNT(*) FROM papers WHERE publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What is the minimum fare for ferries in the 'coastal' schema, excluding fares greater than $5? with given SQL schema CREATE SCHEMA coastal; CREATE TABLE coastal.ferries (id INT, fare DECIMAL); INSERT INTO coastal.ferries (id, fare) VALUES (1, 4.50), (2, 3.75), (3, 5.00);","completion":"SELECT MIN(fare) FROM coastal.ferries WHERE fare < 5;"}
{"prompt":"What is the average rating of factories in a given country, based on worker satisfaction surveys? with given SQL schema CREATE TABLE FactoryRatings (id INT, country VARCHAR(50), rating DECIMAL(2,1));","completion":"SELECT country, AVG(rating) as avg_rating FROM FactoryRatings GROUP BY country;"}
{"prompt":"Which workers in the 'fair_labor' table earn more than the worker 'Alice'? with given SQL schema CREATE TABLE fair_labor (id INT, worker VARCHAR(20), hourly_wage DECIMAL(4,2)); INSERT INTO fair_labor (id, worker, hourly_wage) VALUES (1, 'John', 15.00), (2, 'Jane', 14.50), (3, 'Alice', 17.00);","completion":"SELECT * FROM fair_labor WHERE hourly_wage > (SELECT hourly_wage FROM fair_labor WHERE worker = 'Alice');"}
{"prompt":"Select all fabrics with a sustainability score greater than 0.8 with given SQL schema CREATE TABLE sustainable_fabrics (fabric_id INT PRIMARY KEY, fabric_name VARCHAR(100), country_of_origin VARCHAR(50), sustainability_score FLOAT); INSERT INTO sustainable_fabrics (fabric_id, fabric_name, country_of_origin, sustainability_score) VALUES (1, 'Organic Cotton', 'India', 0.9), (2, 'Recycled Polyester', 'China', 0.7), (3, 'Hemp', 'France', 0.85);","completion":"SELECT * FROM sustainable_fabrics WHERE sustainability_score > 0.8;"}
{"prompt":"What is the percentage of plus size clothing in the fashion trend data? with given SQL schema CREATE TABLE fashion_trends (trend_id INT, clothing_size VARCHAR(10), popularity INT); INSERT INTO fashion_trends (trend_id, clothing_size, popularity) VALUES (1, 'Small', 2000), (2, 'Medium', 3000), (3, 'Large', 2500), (4, 'XL', 1800), (5, 'XXL', 1200);","completion":"SELECT (SUM(CASE WHEN clothing_size LIKE '%Plus%' THEN popularity ELSE 0 END) \/ SUM(popularity)) * 100 AS percentage FROM fashion_trends;"}
{"prompt":"List all clients who have a socially responsible loan and a credit card? with given SQL schema CREATE TABLE socially_responsible_loans (client_id INT, loan_type VARCHAR(20)); INSERT INTO socially_responsible_loans (client_id, loan_type) VALUES (1, 'personal'), (2, 'auto'), (3, 'mortgage'); CREATE TABLE credit_cards (client_id INT, card_type VARCHAR(20)); INSERT INTO credit_cards (client_id, card_type) VALUES (1, 'gold'), (2, 'platinum'), (4, 'black');","completion":"SELECT DISTINCT srl.client_id FROM socially_responsible_loans srl JOIN credit_cards cc ON srl.client_id = cc.client_id;"}
{"prompt":"Which food safety records were updated in the last 7 days for products in the 'Seafood' category? with given SQL schema CREATE TABLE FoodSafetyRecords (record_id INT, product_id INT, updated_at TIMESTAMP); CREATE TABLE Products (product_id INT, product_name VARCHAR(100), category VARCHAR(50)); INSERT INTO FoodSafetyRecords (record_id, product_id, updated_at) VALUES (1, 1, '2022-01-01 12:00:00'), (2, 2, '2022-01-15 14:00:00'), (3, 3, '2022-02-01 09:00:00'); INSERT INTO Products (product_id, product_name, category) VALUES (1, 'Salmon', 'Seafood'), (2, 'Broccoli', 'Vegetables'), (3, 'Bread', 'Bakery');","completion":"SELECT * FROM FoodSafetyRecords INNER JOIN Products ON FoodSafetyRecords.product_id = Products.product_id WHERE Products.category = 'Seafood' AND FoodSafetyRecords.updated_at >= NOW() - INTERVAL '7 days';"}
{"prompt":"What are the bioprocess engineering companies that received the most funding? with given SQL schema CREATE TABLE biotech_funding (company_id INT, industry TEXT, amount INT); INSERT INTO biotech_funding (company_id, industry, amount) VALUES (1, 'Genetic Research', 5000000); INSERT INTO biotech_funding (company_id, industry, amount) VALUES (2, 'Bioprocess Engineering', 7000000); CREATE TABLE biotech_companies (company_id INT PRIMARY KEY, name TEXT, location TEXT, industry TEXT); INSERT INTO biotech_companies (company_id, name, location, industry) VALUES (1, 'Company C', 'Seattle', 'Bioprocess Engineering'); INSERT INTO biotech_companies (company_id, name, location, industry) VALUES (2, 'Company D', 'London', 'Genetic Research');","completion":"SELECT b.name, b.industry, f.amount FROM biotech_companies b INNER JOIN biotech_funding f ON b.company_id = f.company_id WHERE b.industry = 'Bioprocess Engineering' ORDER BY f.amount DESC;"}
{"prompt":"What is the total number of criminal cases heard by the Supreme Court in the fiscal year 2021? with given SQL schema CREATE TABLE court_cases(case_id INT, case_date DATE, case_type VARCHAR(255), agency VARCHAR(255), fiscal_year INT); INSERT INTO court_cases(case_id, case_date, case_type, agency, fiscal_year) VALUES (1, '2021-01-01', 'criminal', 'Supreme Court', 2021);","completion":"SELECT COUNT(*) FROM court_cases WHERE agency = 'Supreme Court' AND case_type = 'criminal' AND fiscal_year = 2021;"}
{"prompt":"What is the cultural competency score for each hospital in the northeast region? with given SQL schema CREATE TABLE Hospitals (HospitalID INT, Name VARCHAR(255), Region VARCHAR(25), CulturalCompetencyScore INT); INSERT INTO Hospitals (HospitalID, Name, Region, CulturalCompetencyScore) VALUES (1, 'Hospital A', 'Northeast', 85), (2, 'Hospital B', 'Northeast', 90), (3, 'Hospital C', 'South', 75), (4, 'Hospital D', 'Midwest', 80);","completion":"SELECT Region, AVG(CulturalCompetencyScore) as AverageScore FROM Hospitals WHERE Region = 'Northeast' GROUP BY Region;"}
{"prompt":"What is the difference in the number of eco-friendly hotels between the top 2 countries? with given SQL schema CREATE TABLE eco_hotel_count (country TEXT, num_hotels INT); INSERT INTO eco_hotel_count (country, num_hotels) VALUES ('France', 100), ('Italy', 120), ('Germany', 150), ('Spain', 110), ('UK', 160);","completion":"SELECT (MAX(num_hotels) OVER (PARTITION BY num_hotels <= 2) - MIN(num_hotels) OVER (PARTITION BY num_hotels <= 2)) AS hotel_difference FROM eco_hotel_count WHERE country IN ('France', 'Italy');"}
{"prompt":"What is the average temperature change in the Arctic region by month for the year 2020? with given SQL schema CREATE TABLE WeatherData (location varchar(50), date DATE, temperature float);","completion":"SELECT MONTH(date) AS month, AVG(temperature) AS avg_temp FROM WeatherData WHERE location LIKE 'Arctic%' AND YEAR(date) = 2020 GROUP BY month;"}
{"prompt":"What is the maximum number of whales seen in a single sighting? with given SQL schema CREATE TABLE WhaleSightings (id INT, sighting_id INT, number_of_whales INT); INSERT INTO WhaleSightings (id, sighting_id, number_of_whales) VALUES (1, 1001, 3), (2, 1002, 5), (3, 1003, 4);","completion":"SELECT sighting_id, MAX(number_of_whales) FROM WhaleSightings;"}
{"prompt":"Find the number of unique mental health conditions that have been treated in each region, excluding conditions that have been treated in only one region. with given SQL schema CREATE TABLE treatments (id INT, condition_id INT, region VARCHAR(50)); INSERT INTO treatments (id, condition_id, region) VALUES (1, 1, 'Asia'), (2, 1, 'Europe'), (3, 2, 'Asia'), (4, 2, 'Europe'), (5, 3, 'Asia'), (6, 3, 'Europe'), (7, 4, 'Asia'), (8, 4, 'Europe'), (9, 5, 'Asia'), (10, 5, 'Europe'), (11, 6, 'Asia'), (12, 6, 'Europe'), (13, 7, 'Asia'), (14, 7, 'Europe'), (15, 8, 'Asia'), (16, 8, 'Europe'), (17, 9, 'Asia'), (18, 9, 'Europe'), (19, 10, 'Asia'), (20, 10, 'Europe');","completion":"SELECT region, COUNT(DISTINCT condition_id) FROM treatments GROUP BY region HAVING COUNT(DISTINCT condition_id) > 1;"}
{"prompt":"What is the average age of psychologists in the mental_health_professionals table? with given SQL schema CREATE TABLE mental_health_professionals (professional_id INT, name VARCHAR(50), age INT, profession VARCHAR(50)); INSERT INTO mental_health_professionals (professional_id, name, age, profession) VALUES (1, 'John Doe', 45, 'Psychologist'); INSERT INTO mental_health_professionals (professional_id, name, age, profession) VALUES (2, 'Jane Smith', 38, 'Psychologist');","completion":"SELECT AVG(age) FROM mental_health_professionals WHERE profession = 'Psychologist';"}
{"prompt":"What is the average arrival age of visitors from 'Canada' and 'Mexico'? with given SQL schema CREATE TABLE Visitors (VisitorID INT, Age INT, Country VARCHAR(50)); INSERT INTO Visitors (VisitorID, Age, Country) VALUES (1, 35, 'Canada'), (2, 45, 'Mexico');","completion":"SELECT AVG(Age) FROM Visitors WHERE Country IN ('Canada', 'Mexico');"}
{"prompt":"What is the average age of volunteers who have completed more than 5 training sessions in the volunteers table? with given SQL schema CREATE TABLE volunteers (id INT, name VARCHAR(50), age INT, sessions_completed INT);","completion":"SELECT AVG(age) FROM volunteers WHERE sessions_completed > 5;"}
{"prompt":"What are the total sales for the 'Dessert' category for the current year? with given SQL schema CREATE TABLE menus (menu_id INT, name VARCHAR(100), category VARCHAR(50), price DECIMAL(5,2), quantity INT); INSERT INTO menus (menu_id, name, category, price, quantity) VALUES (1, 'Chocolate Mousse', 'Dessert', 6.99, 250), (2, 'Tiramisu', 'Dessert', 7.99, 200);","completion":"SELECT category, SUM(quantity * price) as total_sales FROM menus WHERE YEAR(order_date) = YEAR(CURRENT_DATE()) AND category = 'Dessert' GROUP BY category;"}
{"prompt":"What is the total number of military equipment sold to each country and the total cost for each equipment type? with given SQL schema CREATE TABLE EquipmentSales (equipment_id INT, country VARCHAR(50), equipment_type VARCHAR(50), quantity INT, sale_price DECIMAL(10, 2), sale_date DATE); INSERT INTO EquipmentSales (equipment_id, country, equipment_type, quantity, sale_price, sale_date) VALUES (1, 'USA', 'Tank', 15, 1000000.00, '2021-04-15'); INSERT INTO EquipmentSales (equipment_id, country, equipment_type, quantity, sale_price, sale_date) VALUES (2, 'Canada', 'Fighter Jet', 10, 80000000.00, '2021-04-20');","completion":"SELECT country, equipment_type, COUNT(*) as total_sales, SUM(quantity) as total_quantity, SUM(sale_price) as total_cost FROM EquipmentSales GROUP BY country, equipment_type;"}
{"prompt":"Who were the top 3 suppliers of military equipment to North America in Q3 2022? with given SQL schema CREATE TABLE military_sales (id INT, supplier VARCHAR(50), region VARCHAR(20), quarter VARCHAR(10), year INT, quantity INT); INSERT INTO military_sales (id, supplier, region, quarter, year, quantity) VALUES (1, 'Supplier X', 'North America', 'Q3', 2022, 500);","completion":"SELECT supplier, SUM(quantity) as total_quantity FROM military_sales WHERE region = 'North America' AND quarter = 'Q3' AND year = 2022 GROUP BY supplier ORDER BY total_quantity DESC LIMIT 3;"}
{"prompt":"Update the 'mine_revenue' table by increasing the revenue of 'Grasberg' mine in Indonesia by 10% for the year 2019. with given SQL schema CREATE TABLE mine_revenue (id INT, mine_name VARCHAR(50), country VARCHAR(50), revenue FLOAT, year INT, PRIMARY KEY (id)); INSERT INTO mine_revenue (id, mine_name, country, revenue, year) VALUES (1, 'Grasberg', 'Indonesia', 12000000000, 2019), (2, 'Cerrejon', 'Colombia', 13500000000, 2019);","completion":"UPDATE mine_revenue SET revenue = revenue * 1.1 WHERE mine_name = 'Grasberg' AND country = 'Indonesia' AND year = 2019;"}
{"prompt":"What is the average labor productivity of the Emerald Echo mine for each year? with given SQL schema CREATE TABLE labor_productivity (year INT, mine_name TEXT, workers INT, productivity FLOAT); INSERT INTO labor_productivity (year, mine_name, workers, productivity) VALUES (2015, 'Aggromine A', 50, 32.4), (2016, 'Borax Bravo', 80, 45.6), (2017, 'Carbon Cat', 100, 136.7), (2017, 'Carbon Cat', 110, 142.3), (2018, 'Diamond Delta', 120, 150.5), (2019, 'Emerald Echo', 130, 165.2), (2019, 'Emerald Echo', 140, 170.8);","completion":"SELECT year, mine_name, AVG(productivity) as avg_productivity FROM labor_productivity WHERE mine_name = 'Emerald Echo' GROUP BY year;"}
{"prompt":"Delete records from the 'resource_depletion' table where the 'resource_type' is 'Coal' with given SQL schema CREATE TABLE resource_depletion (id INT, resource_type VARCHAR(20), quantity INT, depletion_date DATE); INSERT INTO resource_depletion (id, resource_type, quantity, depletion_date) VALUES (1, 'Coal', 1000, '2020-01-01'), (2, 'Iron Ore', 500, '2019-12-31'), (3, 'Coal', 1500, '2018-12-31');","completion":"DELETE FROM resource_depletion WHERE resource_type = 'Coal';"}
{"prompt":"Update the 'reserve_tons' of the record in the 'resources' table with ID 789 to 1500 tons for a copper mine in 'Chile' in 2020 with given SQL schema CREATE TABLE resources (id INT, mine_type VARCHAR(50), country VARCHAR(50), year INT, reserve_tons INT); INSERT INTO resources (id, mine_type, country, year, reserve_tons) VALUES (789, 'copper', 'Chile', 2020, 1000);","completion":"UPDATE resources SET reserve_tons = 1500 WHERE id = 789;"}
{"prompt":"List the broadband subscribers with compliance issues and the corresponding compliance issue description. with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, name VARCHAR(50), has_compliance_issue INT); CREATE TABLE compliance_issues (issue_id INT, description VARCHAR(100)); INSERT INTO broadband_subscribers (subscriber_id, name, has_compliance_issue) VALUES (1, 'Jane Doe', 1); INSERT INTO compliance_issues (issue_id, description) VALUES (1, 'Non-payment of annual fee');","completion":"SELECT subscribers.name, compliance_issues.description FROM broadband_subscribers AS subscribers JOIN compliance_issues ON subscribers.has_compliance_issue = compliance_issues.issue_id;"}
{"prompt":"What is the average monthly data usage for mobile subscribers in each region, and the total number of network devices installed in each region? with given SQL schema CREATE TABLE mobile_subscribers (id INT, region VARCHAR(20), data_usage INT, usage_date DATE); CREATE TABLE network_devices (id INT, region VARCHAR(20), install_date DATE);","completion":"SELECT m.region, AVG(m.data_usage) AS avg_data_usage, COUNT(n.id) AS num_devices FROM mobile_subscribers m INNER JOIN network_devices n ON m.region = n.region GROUP BY m.region;"}
{"prompt":"What is the average monthly data usage for mobile subscribers in the city of Dallas? with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, city VARCHAR(255), data_usage_gb DECIMAL(5,2)); INSERT INTO mobile_subscribers (subscriber_id, city, data_usage_gb) VALUES (1, 'Dallas', 12.3), (2, 'Dallas', 10.5), (3, 'Austin', 11.7);","completion":"SELECT AVG(data_usage_gb) FROM mobile_subscribers WHERE city = 'Dallas';"}
{"prompt":"What is the maximum data usage for broadband subscribers in a specific region? with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, region VARCHAR(50), data_usage INT);","completion":"SELECT region, MAX(data_usage) FROM broadband_subscribers GROUP BY region;"}
{"prompt":"How many donors are there in the 'donors' table with a donation amount greater than $500? with given SQL schema CREATE TABLE donors (id INT, name TEXT, age INT, donation FLOAT); INSERT INTO donors (id, name, age, donation) VALUES (1, 'John Doe', 35, 500.00); INSERT INTO donors (id, name, age, donation) VALUES (2, 'Jane Smith', 45, 750.00); INSERT INTO donors (id, name, age, donation) VALUES (3, 'Bob Johnson', 25, 600.00);","completion":"SELECT COUNT(*) FROM donors WHERE donation > 500.00;"}
{"prompt":"List all players who have not played any games yet with given SQL schema CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), GameType VARCHAR(50)); INSERT INTO Players (PlayerID, PlayerName, GameType) VALUES (1, 'John Doe', NULL); INSERT INTO Players (PlayerID, PlayerName, GameType) VALUES (2, 'Jane Smith', 'RPG');","completion":"SELECT PlayerName FROM Players WHERE GameType IS NULL;"}
{"prompt":"What is the total revenue for each game in the \"Gaming\" category? with given SQL schema CREATE TABLE Games (GameID int, GameName varchar(50), Category varchar(50), Revenue decimal(10,2));","completion":"SELECT Category, SUM(Revenue) OVER(PARTITION BY Category) as TotalRevenue FROM Games;"}
{"prompt":"What is the average age of players who play games on mobile devices in the USA? with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20), Mobile BOOLEAN); INSERT INTO Players (PlayerID, Age, Gender, Country, Mobile) VALUES (1, 25, 'Male', 'USA', TRUE), (2, 30, 'Female', 'Canada', FALSE), (3, 35, 'Female', 'Mexico', TRUE);","completion":"SELECT AVG(Age) FROM Players WHERE Country = 'USA' AND Mobile = TRUE;"}
{"prompt":"What is the total number of players who have adopted VR technology, grouped by their countries? with given SQL schema CREATE TABLE players (id INT, name VARCHAR(20), country VARCHAR(20), has_vr_tech BOOLEAN); INSERT INTO players (id, name, country, has_vr_tech) VALUES (1, 'Ibrahim', 'Egypt', true), (2, 'Fatima', 'Saudi Arabia', false), (3, 'Pablo', 'Mexico', true), (4, 'Maria', 'Brazil', true), (5, 'Xiuying', 'China', false);","completion":"SELECT players.country, COUNT(*) AS num_players FROM players WHERE players.has_vr_tech = true GROUP BY players.country;"}
{"prompt":"Calculate the total irrigated area (in hectares) for each crop variety with given SQL schema CREATE TABLE crop (id INT, name VARCHAR(50), irrigated_area FLOAT); INSERT INTO crop (id, name, irrigated_area) VALUES (1, 'Corn', 250.5), (2, 'Soybean', 300.2), (3, 'Cotton', 180.9);","completion":"SELECT name, SUM(irrigated_area) as total_irrigated_area FROM crop GROUP BY name;"}
{"prompt":"What is the maximum Yttrium production in 2018? with given SQL schema CREATE TABLE yttrium_production (country VARCHAR(50), year INT, quantity INT); INSERT INTO yttrium_production (country, year, quantity) VALUES ('Russia', 2018, 2500), ('China', 2018, 2200), ('United States', 2018, 1800), ('Australia', 2018, 1500), ('Canada', 2018, 1200);","completion":"SELECT MAX(quantity) FROM yttrium_production WHERE year = 2018;"}
{"prompt":"What is the minimum co-ownership percentage for properties with more than one co-owner in the co_ownership_agreements table? with given SQL schema CREATE TABLE co_ownership_agreements (agreement_id INT, property_id INT, co_owner_id INT, co_ownership_percentage FLOAT); INSERT INTO co_ownership_agreements (agreement_id, property_id, co_owner_id, co_ownership_percentage) VALUES (1, 101, 1, 50.0), (2, 101, 2, 50.0), (3, 102, 1, 75.0), (4, 102, 2, 25.0);","completion":"SELECT MIN(co_ownership_percentage) FROM co_ownership_agreements WHERE property_id IN (SELECT property_id FROM co_ownership_agreements GROUP BY property_id HAVING COUNT(DISTINCT co_owner_id) > 1);"}
{"prompt":"What is the minimum energy efficiency rating for commercial buildings in the city of Chicago? with given SQL schema CREATE TABLE commercial_buildings (id INT, building_id VARCHAR(255), city VARCHAR(255), energy_efficiency_rating INT);","completion":"SELECT MIN(energy_efficiency_rating) FROM commercial_buildings WHERE city = 'Chicago';"}
{"prompt":"Update the revenue date for a restaurant with given SQL schema CREATE TABLE revenue (restaurant_id INT, revenue_date DATE, total_revenue DECIMAL(10,2));","completion":"UPDATE revenue SET revenue_date = '2022-04-15' WHERE restaurant_id = 678;"}
{"prompt":"Find the total sales of vendors located in the Midwest region. with given SQL schema CREATE TABLE vendors (vendor_id INT, vendor_name TEXT, region TEXT); INSERT INTO vendors (vendor_id, vendor_name, region) VALUES (1, 'Green Vendors', 'Midwest'); CREATE TABLE sales (sale_id INT, sale_date DATE, vendor_id INT, amount DECIMAL(5,2)); INSERT INTO sales (sale_id, sale_date, vendor_id, amount) VALUES (1, '2022-01-01', 1, 12000);","completion":"SELECT SUM(amount) FROM sales JOIN vendors ON sales.vendor_id = vendors.vendor_id WHERE vendors.region = 'Midwest';"}
{"prompt":"Which retailers in Asia do not carry any vegan products? with given SQL schema CREATE TABLE retailers (id INT, name TEXT, country TEXT); INSERT INTO retailers (id, name, country) VALUES (1, 'Retailer A', 'Asia'), (2, 'Retailer B', 'Asia'), (3, 'Retailer C', 'North America'), (4, 'Retailer D', 'Asia'); CREATE TABLE products (id INT, name TEXT, is_vegan BOOLEAN); INSERT INTO products (id, name, is_vegan) VALUES (1, 'Product X', true), (2, 'Product Y', false), (3, 'Product Z', true), (4, 'Product W', false); CREATE TABLE retailer_products (retailer_id INT, product TEXT, quantity INT); INSERT INTO retailer_products (retailer_id, product, quantity) VALUES (1, 'Product X', 100), (1, 'Product Z', 50), (2, 'Product Y', 150), (3, 'Product W', 80), (4, 'Product X', 120), (4, 'Product Z', 70);","completion":"SELECT retailers.name FROM retailers LEFT JOIN retailer_products ON retailers.id = retailer_products.retailer_id LEFT JOIN products ON retailer_products.product = products.name WHERE products.is_vegan IS NULL AND retailers.country = 'Asia';"}
{"prompt":"Add a new team with the following details to the 'teams' table: 'Team New York', 'Eastern Conference', 'NBA' with given SQL schema CREATE TABLE teams (team_id INT PRIMARY KEY, team_name VARCHAR(50), conference VARCHAR(50), league VARCHAR(50));","completion":"INSERT INTO teams (team_name, conference, league) VALUES ('Team New York', 'Eastern Conference', 'NBA');"}
{"prompt":"What is the minimum number of days taken to resolve a security incident for each country? with given SQL schema CREATE TABLE country_incident_resolution (country VARCHAR(255), resolution_days INT); INSERT INTO country_incident_resolution (country, resolution_days) VALUES ('Brazil', 25), ('Russia', 30), ('India', 40), ('China', 50), ('South Africa', 10);","completion":"SELECT country, MIN(resolution_days) as min_resolution_days FROM country_incident_resolution GROUP BY country;"}
{"prompt":"Identify the garment types that were sold in both the 'GarmentSales' table and the 'GarmentProduction' table. with given SQL schema CREATE TABLE GarmentProduction (garment_type VARCHAR(50)); INSERT INTO GarmentProduction (garment_type) VALUES ('T-Shirt'), ('Jeans'), ('Hoodie'); CREATE TABLE GarmentSales (garment_type VARCHAR(50)); INSERT INTO GarmentSales (garment_type) VALUES ('T-Shirt'), ('Jackets');","completion":"SELECT garment_type FROM GarmentProduction WHERE garment_type IN (SELECT garment_type FROM GarmentSales);"}
{"prompt":"What was the total quantity of garments produced in each country by garment type in 2021? with given SQL schema CREATE TABLE garment_production_2021 AS SELECT * FROM garment_production WHERE production_date BETWEEN '2021-01-01' AND '2021-12-31'; ALTER TABLE garment_production_2021 ADD COLUMN country_region VARCHAR(50); UPDATE garment_production_2021 SET country_region = CASE WHEN country = 'Brazil' THEN 'South America' WHEN country = 'India' THEN 'Asia' WHEN country = 'USA' THEN 'North America' WHEN country = 'Italy' THEN 'Europe' ELSE country_region END;","completion":"SELECT country_region, garment_type, SUM(quantity) FROM garment_production_2021 GROUP BY country_region, garment_type;"}
{"prompt":"Delete all records of unions with less than 3000 workers in New York. with given SQL schema CREATE TABLE unions (id INT, state VARCHAR(2), workers INT, issue VARCHAR(14)); INSERT INTO unions (id, state, workers, issue) VALUES (1, 'NY', 4000, 'workplace_safety'), (2, 'NY', 2000, 'labor_rights');","completion":"DELETE FROM unions WHERE state = 'NY' AND workers < 3000;"}
{"prompt":"List the collective number of workplace safety incidents for unions headquartered in North America. with given SQL schema CREATE TABLE UnionSafety (UnionName VARCHAR(50), HeadquarterCountry VARCHAR(50), Incidents INT); INSERT INTO UnionSafety (UnionName, HeadquarterCountry, Incidents) VALUES ('UnionK', 'USA', 120), ('UnionL', 'Canada', 80), ('UnionM', 'Mexico', 90);","completion":"SELECT SUM(Incidents) FROM UnionSafety WHERE HeadquarterCountry IN ('USA', 'Canada', 'Mexico')"}
{"prompt":"Which countries have the least number of electric vehicle charging stations in the 'charging_stations' table? with given SQL schema CREATE TABLE charging_stations (id INT PRIMARY KEY, country VARCHAR(50), num_stations INT);","completion":"SELECT country, COUNT(*) as num_stations FROM charging_stations GROUP BY country ORDER BY num_stations ASC LIMIT 5;"}
{"prompt":"What is the maximum speed of vessels with a safety record below average in the Pacific Ocean? with given SQL schema CREATE TABLE vessels (id INT, name TEXT, type TEXT, speed FLOAT, safety_score FLOAT);CREATE TABLE regions (id INT, name TEXT); INSERT INTO vessels (id, name, type, speed, safety_score) VALUES (1, 'VesselC', 'Tanker', 12.3, 7.5); INSERT INTO regions (id, name) VALUES (1, 'Pacific');","completion":"SELECT MAX(v.speed) FROM vessels v JOIN regions r ON v.speed < (SELECT AVG(speed) FROM vessels WHERE regions.name = 'Pacific') AND v.region_id = r.id AND r.name = 'Pacific';"}
{"prompt":"Compare the landfill capacity of 'Ontario' and 'Quebec' with given SQL schema CREATE TABLE landfill_capacity (id INT, region VARCHAR(20), capacity INT); INSERT INTO landfill_capacity (id, region, capacity) VALUES (1, 'Ontario', 400000), (2, 'Quebec', 500000);","completion":"SELECT region, capacity FROM landfill_capacity WHERE region IN ('Ontario', 'Quebec');"}
{"prompt":"What is the average recycling rate in percentage for the year 2019 for countries in Europe with a population greater than 10 million? with given SQL schema CREATE TABLE recycling_rates(country VARCHAR(20), year INT, population INT, recycling_rate FLOAT); INSERT INTO recycling_rates(country, year, population, recycling_rate) VALUES ('Germany', 2019, 83, 68.5), ('France', 2019, 67, 58.7), ('United Kingdom', 2019, 66, 45.2), ('Italy', 2019, 60, 54.3), ('Spain', 2019, 47, 42.1), ('Poland', 2019, 38, 34.5), ('Romania', 2019, 19, 21.6), ('Netherlands', 2019, 17, 72.8), ('Belgium', 2019, 11, 66.4), ('Greece', 2019, 11, 30.5);","completion":"SELECT AVG(recycling_rate) FROM recycling_rates WHERE year = 2019 AND population > 10000000 GROUP BY year HAVING COUNT(country) > 3;"}
{"prompt":"What is the landfill capacity growth rate for Landfill A from 2018 to 2020? with given SQL schema CREATE TABLE landfill_capacity (id INT, name VARCHAR(50), year INT, capacity INT); INSERT INTO landfill_capacity (id, name, year, capacity) VALUES (1, 'Landfill A', 2018, 5000000), (2, 'Landfill A', 2019, 5200000), (3, 'Landfill A', 2020, 5500000), (4, 'Landfill B', 2018, 4000000), (5, 'Landfill B', 2019, 4200000), (6, 'Landfill B', 2020, 4500000);","completion":"SELECT ((capacity - (SELECT capacity FROM landfill_capacity l2 WHERE l2.name = 'Landfill A' AND l2.year = 2018)) \/ (SELECT capacity FROM landfill_capacity l3 WHERE l3.name = 'Landfill A' AND l3.year = 2018)) * 100 FROM landfill_capacity WHERE name = 'Landfill A' AND year = 2020;"}
{"prompt":"What is the recycling rate for each material type in 2021? with given SQL schema CREATE TABLE recycling_rates (material VARCHAR(255), recycling_rate DECIMAL(5,4), year INT); INSERT INTO recycling_rates (material, recycling_rate, year) VALUES ('Plastic', 0.35, 2021), ('Glass', 0.65, 2021), ('Paper', 0.75, 2021);","completion":"SELECT material, recycling_rate FROM recycling_rates WHERE year = 2021;"}
{"prompt":"List the unique 'Workout' types offered at each studio, excluding 'Boxing' workouts. with given SQL schema CREATE TABLE Studios (studio VARCHAR(50)); INSERT INTO Studios (studio) VALUES ('Boston'), ('Seattle'), ('New York'); CREATE TABLE Workouts (studio VARCHAR(50), workout VARCHAR(50)); INSERT INTO Workouts (studio, workout) VALUES ('Boston', 'Yoga'), ('Boston', 'Pilates'), ('Seattle', 'Cycling'), ('Seattle', 'Yoga'), ('New York', 'Cycling'), ('New York', 'Boxing');","completion":"SELECT DISTINCT studio, workout FROM Workouts WHERE workout != 'Boxing';"}
{"prompt":"What is the minimum water pH by region and season? with given SQL schema CREATE TABLE Region ( id INT PRIMARY KEY, name VARCHAR(50) ); CREATE TABLE WaterQuality ( region_id INT, date DATE, pH DECIMAL(3,2), FOREIGN KEY (region_id) REFERENCES Region(id) );","completion":"SELECT Region.name, DATE_FORMAT(WaterQuality.date, '%Y-%m') AS month, MIN(WaterQuality.pH) FROM Region INNER JOIN WaterQuality ON Region.id = WaterQuality.region_id GROUP BY Region.name, MONTH(WaterQuality.date), YEAR(WaterQuality.date);"}
{"prompt":"What are the unique types of events funded by the \"Government\" funding source? with given SQL schema CREATE TABLE Events (event_id INT, event_type VARCHAR(20), funding_source VARCHAR(20)); INSERT INTO Events (event_id, event_type, funding_source) VALUES (1, 'Concert', 'Government'), (2, 'Theater', 'Private'), (3, 'Exhibition', 'Corporate');","completion":"SELECT DISTINCT event_type FROM Events WHERE funding_source = 'Government';"}
{"prompt":"How many construction workers were employed in each state for non-green building projects in 2020? with given SQL schema CREATE TABLE employment_non_green_data (state VARCHAR(255), employees INT, year INT);   INSERT INTO employment_non_green_data (state, employees, year) VALUES ('California', 40000, 2020), ('Texas', 35000, 2020), ('New York', 45000, 2020);","completion":"SELECT state, employees FROM employment_non_green_data WHERE year = 2020;"}
{"prompt":"List all suppliers and the number of strains they provide, including those with no strains. with given SQL schema CREATE TABLE Suppliers (id INT, name TEXT); INSERT INTO Suppliers (id, name) VALUES (1, 'Supplier A'), (2, 'Supplier B'), (3, 'Supplier C'); CREATE TABLE Supplies (supplier_id INT, strain_id INT); INSERT INTO Supplies (supplier_id, strain_id) VALUES (1, 1), (1, 2), (2, 3), (2, 4), (3, 5);","completion":"SELECT Suppliers.name, COALESCE(COUNT(Supplies.supplier_id), 0) as strain_count FROM Suppliers LEFT JOIN Supplies ON Suppliers.id = Supplies.supplier_id GROUP BY Suppliers.name;"}
{"prompt":"What are the total sales for each product category in the state of Oregon, ordered from highest to lowest total sales? with given SQL schema CREATE TABLE Categories (CategoryID int, CategoryName varchar(255), CategoryDescription varchar(255)); INSERT INTO Categories (CategoryID, CategoryName, CategoryDescription) VALUES (1, 'Flower', 'Cannabis flower products'); INSERT INTO Categories (CategoryID, CategoryName, CategoryDescription) VALUES (2, 'Concentrates', 'Cannabis concentrate products'); CREATE TABLE Sales2 (SaleID2 int, CategoryID int, SalesAmount decimal(10,2)); INSERT INTO Sales2 (SaleID2, CategoryID, SalesAmount) VALUES (1, 1, 6000); INSERT INTO Sales2 (SaleID2, CategoryID, SalesAmount) VALUES (2, 2, 4000);","completion":"SELECT Categories.CategoryName, SUM(Sales2.SalesAmount) AS TotalSales FROM Categories INNER JOIN Sales2 ON Categories.CategoryID = Sales2.CategoryID WHERE Categories.State = 'Oregon' GROUP BY Categories.CategoryName ORDER BY TotalSales DESC;"}
{"prompt":"How many cases were handled by each attorney in the technology industry? with given SQL schema CREATE TABLE attorneys (attorney_id INT, cases_handled INT); INSERT INTO attorneys (attorney_id, cases_handled) VALUES (1, 20), (2, 15), (3, 30); CREATE TABLE clients (client_id INT, attorney_id INT, industry VARCHAR(255)); INSERT INTO clients (client_id, attorney_id, industry) VALUES (1, 1, 'technology'), (2, 1, 'technology'), (3, 2, 'finance'), (4, 3, 'technology'), (5, 3, 'technology');","completion":"SELECT attorneys.attorney_id, SUM(clients.cases_handled) FROM attorneys INNER JOIN clients ON attorneys.attorney_id = clients.attorney_id WHERE clients.industry = 'technology' GROUP BY attorneys.attorney_id;"}
{"prompt":"Identify the climate mitigation initiatives in Europe that received the highest and lowest funding from public sources. with given SQL schema CREATE TABLE climate_mitigation_europe (initiative VARCHAR(50), funding DECIMAL(10,2), funding_source VARCHAR(50)); INSERT INTO climate_mitigation_europe (initiative, funding, funding_source) VALUES ('Carbon Capture and Storage', 5000000, 'Public'), ('Green Building Design', 1000000, 'Public'), ('Smart Grid Development', 2000000, 'Public');","completion":"SELECT initiative, MAX(funding) AS max_funding, MIN(funding) AS min_funding FROM climate_mitigation_europe WHERE funding_source = 'Public' AND region = 'Europe' GROUP BY initiative;"}
{"prompt":"What is the total number of projects in the 'climate_mitigation' table? with given SQL schema CREATE TABLE climate_mitigation (project_id INT, project_name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE);","completion":"SELECT COUNT(*) FROM climate_mitigation;"}
{"prompt":"How many infectious disease outbreaks were reported in the state of New York in the year 2021? with given SQL schema CREATE TABLE public.outbreaks (id SERIAL PRIMARY KEY, state TEXT, year INTEGER, disease TEXT); INSERT INTO public.outbreaks (state, year, disease) VALUES ('New York', 2021, 'COVID-19'), ('California', 2021, 'Monkeypox'), ('Florida', 2021, 'Dengue');","completion":"SELECT COUNT(*) FROM public.outbreaks WHERE state = 'New York' AND year = 2021;"}
{"prompt":"What is the total number of hospital beds in private hospitals located in New York? with given SQL schema CREATE TABLE hospitals (name VARCHAR(255), city VARCHAR(255), num_beds INT, type VARCHAR(255)); INSERT INTO hospitals (name, city, num_beds, type) VALUES ('General Hospital', 'New York', 500, 'Public'); INSERT INTO hospitals (name, city, num_beds, type) VALUES ('Mount Sinai Hospital', 'New York', 1200, 'Private');","completion":"SELECT SUM(num_beds) FROM hospitals WHERE city = 'New York' AND type = 'Private';"}
{"prompt":"Which state started their policies the earliest? with given SQL schema CREATE TABLE policies (id INT, state TEXT, policy_name TEXT, start_date DATE, end_date DATE, description TEXT); INSERT INTO policies (id, state, policy_name, start_date, end_date, description) VALUES (1, 'NY', 'Mask mandate', '2020-04-15', '2021-06-01', 'Masks required in public'); INSERT INTO policies (id, state, policy_name, start_date, end_date, description) VALUES (2, 'CA', 'Social distancing', '2020-03-20', '2021-05-31', 'Maintain 6 feet distance');","completion":"SELECT state, MIN(start_date) as earliest_start_date FROM policies GROUP BY state ORDER BY earliest_start_date;"}
{"prompt":"Which industries have the least number of companies founded in a given year? with given SQL schema CREATE TABLE Company (id INT, name VARCHAR(50), industry VARCHAR(50), founding_year INT); INSERT INTO Company (id, name, industry, founding_year) VALUES (1, 'LegalTech', 'Legal', 2013); INSERT INTO Company (id, name, industry, founding_year) VALUES (2, 'MobiHealth', 'Healthcare', 2014); INSERT INTO Company (id, name, industry, founding_year) VALUES (3, 'NewsToday', 'News', 2015); INSERT INTO Company (id, name, industry, founding_year) VALUES (4, 'PetCare', 'Pets', 2013);","completion":"SELECT industry, founding_year, COUNT(*) as company_count FROM Company GROUP BY industry, founding_year ORDER BY company_count ASC;"}
{"prompt":"What is the maximum number of funding rounds for companies founded by women in the healthtech sector? with given SQL schema CREATE TABLE company (id INT, name TEXT, industry TEXT, founding_date DATE, founder_gender TEXT); CREATE TABLE investment_rounds (id INT, company_id INT, funding_round INT, funding_amount INT);","completion":"SELECT MAX(investment_rounds.funding_round) FROM company JOIN investment_rounds ON company.id = investment_rounds.company_id WHERE company.founder_gender = 'Female' AND company.industry = 'Healthtech';"}
{"prompt":"Delete smart contracts associated with digital asset 'CryptoPet' from the 'SmartContracts' table with given SQL schema CREATE TABLE SmartContracts (hash VARCHAR(128), name VARCHAR(64), digital_asset VARCHAR(64), creator VARCHAR(128), timestamp TIMESTAMP); CREATE TABLE DigitalAssets (name VARCHAR(64), symbol VARCHAR(8), total_supply DECIMAL(20, 8), platform VARCHAR(64), project_url VARCHAR(128));","completion":"DELETE FROM SmartContracts WHERE digital_asset = 'CryptoPet';"}
{"prompt":"Find the difference in the number of trees between the tree species with the highest and lowest carbon sequestration rates in the private_lands schema. with given SQL schema CREATE TABLE private_lands.carbon_sequestration (species VARCHAR(255), sequestration_rate DECIMAL(5,2));","completion":"SELECT species_high.species AS high_species, species_low.species AS low_species, species_high.sequestration_rate - species_low.sequestration_rate AS difference FROM (SELECT species, MAX(sequestration_rate) AS sequestration_rate FROM private_lands.carbon_sequestration GROUP BY species) AS species_high FULL OUTER JOIN (SELECT species, MIN(sequestration_rate) AS sequestration_rate FROM private_lands.carbon_sequestration GROUP BY species) AS species_low ON species_high.sequestration_rate = species_low.sequestration_rate;"}
{"prompt":"Find all products that are not cruelty-free with given SQL schema Products (product_id, name, rating, cruelty_free)","completion":"SELECT * FROM Products WHERE cruelty_free = 'no'"}
{"prompt":"Which brands have certifications related to cruelty-free, vegan, or organic products? with given SQL schema CREATE TABLE brands (brand_name VARCHAR(50), is_cruelty_free BOOLEAN, is_vegan BOOLEAN, is_organic BOOLEAN); INSERT INTO brands (brand_name, is_cruelty_free, is_vegan, is_organic) VALUES ('Lush', TRUE, TRUE, FALSE), ('The Body Shop', TRUE, FALSE, FALSE), ('Est\u00e9e Lauder', FALSE, FALSE, FALSE), ('Urban Decay', TRUE, TRUE, FALSE), ('Maybelline', FALSE, FALSE, FALSE), ('Kat Von D', TRUE, TRUE, FALSE), ('Tarte', TRUE, TRUE, TRUE);","completion":"SELECT brand_name, 'Cruelty-free' as certification FROM brands WHERE is_cruelty_free = TRUE UNION SELECT brand_name, 'Vegan' as certification FROM brands WHERE is_vegan = TRUE UNION SELECT brand_name, 'Organic' as certification FROM brands WHERE is_organic = TRUE;"}
{"prompt":"Show the number of organic skincare products sold per month, displayed as pivoted data. with given SQL schema CREATE TABLE product_labels_v4 (brand VARCHAR(20), product_name VARCHAR(20), product_subcategory VARCHAR(20), product_label VARCHAR(20), sale_date DATE, sale_count INT); INSERT INTO product_labels_v4 VALUES ('Skincare BrandC', 'Cleanser', 'Skincare', 'Organic', '2021-01-01', 20), ('Skincare BrandC', 'Toner', 'Skincare', 'Organic', '2021-01-15', 30), ('Skincare BrandD', 'Serum', 'Skincare', 'Organic', '2021-04-01', 40), ('Skincare BrandD', 'Moisturizer', 'Skincare', 'Organic', '2021-07-01', 50);","completion":"SELECT EXTRACT(MONTH FROM sale_date) AS month, brand, SUM(CASE WHEN product_subcategory = 'Cleanser' THEN sale_count ELSE 0 END) AS Cleanser, SUM(CASE WHEN product_subcategory = 'Toner' THEN sale_count ELSE 0 END) AS Toner, SUM(CASE WHEN product_subcategory = 'Serum' THEN sale_count ELSE 0 END) AS Serum, SUM(CASE WHEN product_subcategory = 'Moisturizer' THEN sale_count ELSE 0 END) AS Moisturizer FROM product_labels_v4 WHERE product_subcategory IN ('Cleanser', 'Toner', 'Serum', 'Moisturizer') AND product_label = 'Organic' GROUP BY EXTRACT(MONTH FROM sale_date), brand;"}
{"prompt":"What are the top 3 beauty brands with the most sustainable packaging in the natural segment? with given SQL schema CREATE TABLE packaging_sustainability (product_id INT, brand_id INT, sustainability_score INT, is_natural BOOLEAN); CREATE TABLE brands (brand_id INT, brand_name VARCHAR(255)); INSERT INTO packaging_sustainability (product_id, brand_id, sustainability_score, is_natural) VALUES (1, 1, 90, true), (2, 2, 80, false), (3, 3, 85, true); INSERT INTO brands (brand_id, brand_name) VALUES (1, 'Green Beauty'), (2, 'Luxury Brands'), (3, 'Natural Beauty');","completion":"SELECT brand_name, AVG(sustainability_score) AS avg_sustainability_score FROM packaging_sustainability INNER JOIN brands ON packaging_sustainability.brand_id = brands.brand_id WHERE is_natural = true GROUP BY brand_name ORDER BY avg_sustainability_score DESC LIMIT 3;"}
{"prompt":"What is the average response time for fire calls in 2021 and 2022? with given SQL schema CREATE TABLE fire_calls (call_id INT, call_date DATE, response_time INT); INSERT INTO fire_calls (call_id, call_date, response_time) VALUES (1, '2021-01-01', 15), (2, '2022-02-03', 12);","completion":"SELECT AVG(response_time) FROM fire_calls WHERE call_date BETWEEN '2021-01-01' AND '2022-12-31';"}
{"prompt":"What is the total number of crimes reported in each city? with given SQL schema CREATE TABLE CrimeStatistics (id INT, city VARCHAR(255), crime_type VARCHAR(50), reported_date DATE); CREATE VIEW CityCrimeCount AS SELECT city, COUNT(*) as total FROM CrimeStatistics GROUP BY city;","completion":"SELECT city, SUM(total) FROM CityCrimeCount GROUP BY city;"}
{"prompt":"How many times has the 'Las Meninas' painting been displayed in the last 2 years? with given SQL schema CREATE TABLE artworks (id INT, name TEXT, museum_id INT, display_date DATE); INSERT INTO artworks (id, name, museum_id, display_date) VALUES (1, 'Las Meninas', 1, '2020-01-01'), (2, 'Mona Lisa', 1, '2020-02-01'), (3, 'Guernica', 2, '2022-03-15'), (4, 'Las Meninas', 1, '2022-04-01'), (5, 'The Persistence of Memory', 3, '2022-05-01');","completion":"SELECT name, COUNT(*) AS display_count FROM artworks WHERE name = 'Las Meninas' AND display_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) GROUP BY name;"}
{"prompt":"What is the total number of veteran and non-veteran job applicants for each job category? with given SQL schema CREATE TABLE JobApplicants (ApplicantID int, JobCategory varchar(50), JobLocation varchar(50), ApplicantType varchar(50)); INSERT INTO JobApplicants (ApplicantID, JobCategory, JobLocation, ApplicantType) VALUES (1, 'Software Engineer', 'California', 'Veteran'), (2, 'Project Manager', 'California', 'Non-Veteran'), (3, 'Data Analyst', 'California', 'Veteran'), (4, 'Software Engineer', 'California', 'Non-Veteran'), (5, 'Project Manager', 'California', 'Veteran');","completion":"SELECT JobCategory, COUNT(*) FILTER (WHERE ApplicantType = 'Veteran') as VeteranApplicants, COUNT(*) FILTER (WHERE ApplicantType = 'Non-Veteran') as NonVeteranApplicants FROM JobApplicants GROUP BY JobCategory;"}
{"prompt":"How many customers have opened an account in the past month? with given SQL schema CREATE TABLE accounts (account_id INT, customer_id INT, account_type TEXT, open_date DATE); INSERT INTO accounts VALUES (1, 1, 'Checking', '2022-02-03'); INSERT INTO accounts VALUES (2, 2, 'Savings', '2022-02-12'); INSERT INTO accounts VALUES (3, 4, 'Checking', '2022-01-20');","completion":"SELECT COUNT(*) as new_customers FROM accounts WHERE open_date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"Update fraud alerts for transactions over $500 with given SQL schema CREATE TABLE transactions (id INT PRIMARY KEY, customer_id INT, amount DECIMAL(10,2), transaction_date DATE); CREATE TABLE fraud_alerts (id INT PRIMARY KEY, transaction_id INT, alert_reason VARCHAR(50)); INSERT INTO transactions (id, customer_id, amount, transaction_date) VALUES (1, 1, 500.00, '2022-01-01'); INSERT INTO transactions (id, customer_id, amount, transaction_date) VALUES (2, 2, 750.00, '2022-01-02');","completion":"UPDATE transactions t SET t.amount = t.amount * 0.95 WHERE t.amount > 500; INSERT INTO fraud_alerts (id, transaction_id, alert_reason) SELECT t.id, t.id, 'High amount' FROM transactions t WHERE t.amount > 500;"}
{"prompt":"What is the maximum credit limit for customers in Florida? with given SQL schema CREATE TABLE customer (customer_id INT, name VARCHAR(255), state VARCHAR(255), credit_limit DECIMAL(10,2)); INSERT INTO customer (customer_id, name, state, credit_limit) VALUES (1, 'John Doe', 'Florida', 12000.00), (2, 'Jane Smith', 'Florida', 18000.00);","completion":"SELECT MAX(credit_limit) FROM customer WHERE state = 'Florida';"}
{"prompt":"Count the number of rural healthcare facilities in Mexico and Brazil that have a pharmacy on-site. with given SQL schema CREATE TABLE healthcare_facilities (facility_id INT, country VARCHAR(20), has_pharmacy BOOLEAN); INSERT INTO healthcare_facilities (facility_id, country, has_pharmacy) VALUES (1, 'Mexico', TRUE), (2, 'Brazil', FALSE);","completion":"SELECT COUNT(*) FROM healthcare_facilities WHERE country IN ('Mexico', 'Brazil') AND has_pharmacy = TRUE;"}
{"prompt":"Find the names and states of rural hospitals that have more than 50 beds. with given SQL schema CREATE TABLE rural_hospitals (name TEXT, state TEXT, num_beds INTEGER); INSERT INTO rural_hospitals (name, state, num_beds) VALUES ('Hospital A', 'CA', 50), ('Hospital B', 'CA', 75), ('Hospital C', 'TX', 40), ('Hospital D', 'NY', 60);","completion":"SELECT name, state FROM rural_hospitals WHERE num_beds > 50;"}
{"prompt":"Show all intelligence operations in the 'Africa' schema. with given SQL schema CREATE SCHEMA Africa; CREATE TABLE IntelligenceOperations (id INT, name VARCHAR(255), location VARCHAR(255), date DATE); INSERT INTO IntelligenceOperations (id, name, location, date) VALUES (1, 'Operation Flintlock', 'Niger', '2023-02-01'); INSERT INTO IntelligenceOperations (id, name, location, date) VALUES (2, 'Operation Juniper Shield', 'Somalia', '2022-10-15');","completion":"SELECT * FROM Africa.IntelligenceOperations;"}
{"prompt":"Find the top 3 countries with the highest average donation amount in 2022? with given SQL schema CREATE TABLE Donations (id INT, user_id INT, country VARCHAR(50), amount DECIMAL(10, 2), donation_date DATE); INSERT INTO Donations (id, user_id, country, amount, donation_date) VALUES (1, 1001, 'USA', 50.00, '2021-01-05'); INSERT INTO Donations (id, user_id, country, amount, donation_date) VALUES (2, 1002, 'Canada', 75.00, '2021-01-10'); INSERT INTO Donations (id, user_id, country, amount, donation_date) VALUES (3, 1003, 'Mexico', 100.00, '2022-03-15');","completion":"SELECT country, AVG(amount) as avg_donation FROM Donations WHERE donation_date >= '2022-01-01' AND donation_date < '2023-01-01' GROUP BY country ORDER BY avg_donation DESC LIMIT 3;"}
{"prompt":"How many students in the \"Lifelong Learning\" program have submitted an assignment in the past week? with given SQL schema CREATE TABLE lifelong_learning_students (id INT, name VARCHAR(50), program VARCHAR(50), last_assignment DATE);","completion":"SELECT COUNT(*) FROM lifelong_learning_students WHERE last_assignment >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"}
{"prompt":"Show all students with 'mental_health_concerns' in the 'students' table with given SQL schema CREATE TABLE students (student_id INT, name VARCHAR(50), mental_health_concerns VARCHAR(20));","completion":"SELECT * FROM students WHERE mental_health_concerns IS NOT NULL;"}
{"prompt":"What is the number of professional development workshops attended by teachers in each district, grouped by subject area? with given SQL schema CREATE TABLE districts (district_id INT, district_name TEXT); INSERT INTO districts (district_id, district_name) VALUES (1, 'Urban'), (2, 'Suburban'), (3, 'Rural'); CREATE TABLE teachers (teacher_id INT, teacher_name TEXT, district_id INT); INSERT INTO teachers (teacher_id, teacher_name, district_id) VALUES (1, 'Ms. Doe', 1), (2, 'Mr. Smith', 2), (3, 'Ms. Johnson', 3), (4, 'Mr. Williams', 1); CREATE TABLE professional_development (program_id INT, program_name TEXT, program_subject TEXT, teacher_id INT); INSERT INTO professional_development (program_id, program_name, program_subject, teacher_id) VALUES (1, 'Python for Educators', 'Computer Science', 1), (2, 'Data Science for Teachers', 'Data Science', 2), (3, 'Inclusive Teaching', 'Diversity & Inclusion', 3), (4, 'Open Pedagogy', 'Pedagogy', 4), (5, 'Diversity and Inclusion', 'Diversity & Inclusion', 1), (6, 'Curriculum Design', 'Curriculum', 2), (7, 'Culturally Responsive Teaching', 'Diversity & Inclusion', 3), (8, 'Project Based Learning', 'Pedagogy', 4);","completion":"SELECT d.district_name, p.program_subject, COUNT(pd.program_id) as num_programs FROM districts d JOIN teachers t ON d.district_id = t.district_id JOIN professional_development pd ON t.teacher_id = pd.teacher_id JOIN (SELECT program_subject FROM professional_development GROUP BY program_subject) p ON pd.program_subject = p.program_subject GROUP BY d.district_name, p.program_subject;"}
{"prompt":"Insert new records for a 'grid' table: China, 1000, AC with given SQL schema CREATE TABLE grid ( country VARCHAR(20), capacity INT, transmission_type VARCHAR(20) );","completion":"INSERT INTO grid (country, capacity, transmission_type) VALUES ('China', 1000, 'AC');"}
{"prompt":"List all energy efficiency projects in California and their total budgets. with given SQL schema CREATE TABLE energy_efficiency_projects (project_name VARCHAR(50), state VARCHAR(20), budget DECIMAL(10,2)); INSERT INTO energy_efficiency_projects (project_name, state, budget) VALUES ('Project A', 'California', 50000.00), ('Project B', 'California', 75000.00), ('Project C', 'New York', 60000.00);","completion":"SELECT eep.project_name, SUM(eep.budget) FROM energy_efficiency_projects eep WHERE eep.state = 'California' GROUP BY eep.project_name;"}
{"prompt":"Update the 'efficiency_improvement' value to 0.15 in the 'energy_efficiency' table where the 'sector' is 'Industry' with given SQL schema CREATE TABLE energy_efficiency (id INT PRIMARY KEY, sector VARCHAR(255), efficiency_improvement FLOAT, country VARCHAR(255));","completion":"UPDATE energy_efficiency SET efficiency_improvement = 0.15 WHERE sector = 'Industry';"}
{"prompt":"What is the total capacity of energy storage technologies in Texas as of 2023-01-01? with given SQL schema CREATE TABLE energy_storage (id INT, location VARCHAR(50), technology VARCHAR(50), capacity FLOAT, efficiency FLOAT); INSERT INTO energy_storage (id, location, technology, capacity, efficiency) VALUES (1, 'California', 'Batteries', 500.0, 0.9), (2, 'California', 'Pumped Hydro', 1500.0, 0.8), (3, 'Texas', 'Batteries', 700.0, 0.95), (4, 'Texas', 'Compressed Air', 1200.0, 0.88);","completion":"SELECT SUM(capacity) FROM energy_storage WHERE location = 'Texas' AND start_date <= '2023-01-01';"}
{"prompt":"Who had the most assists for the Celtics in the 2018-2019 season? with given SQL schema CREATE TABLE teams (team_name VARCHAR(255), season_start_year INT, season_end_year INT); INSERT INTO teams (team_name, season_start_year, season_end_year) VALUES ('Celtics', 2018, 2019); CREATE TABLE players (player_name VARCHAR(255), team_name VARCHAR(255), assists INT);","completion":"SELECT player_name, MAX(assists) FROM players WHERE team_name = 'Celtics' AND season_start_year = 2018 AND season_end_year = 2019 GROUP BY player_name;"}
{"prompt":"How many disaster response projects were carried out in Asia in the year 2020? with given SQL schema CREATE TABLE projects (id INT, name TEXT, location TEXT, start_date DATE, end_date DATE); INSERT INTO projects (id, name, location, start_date, end_date) VALUES (1, 'Disaster Relief Project', 'Asia', '2020-01-01', '2020-12-31'), (2, 'Community Development Project', 'Africa', '2019-01-01', '2020-12-31'), (3, 'Healthcare Project', 'Europe', '2018-01-01', '2018-12-31');","completion":"SELECT COUNT(*) FROM projects WHERE location = 'Asia' AND YEAR(start_date) = 2020 AND YEAR(end_date) = 2020;"}
{"prompt":"List all technology for social good initiatives in Asia, ordered by their year of establishment. with given SQL schema CREATE TABLE social_good (initiative VARCHAR(50), year INT); INSERT INTO social_good (initiative, year) VALUES ('Eco-friendly app', 2018), ('Online education platform', 2020), ('Accessible software', 2015);","completion":"SELECT initiative FROM social_good WHERE year IN (SELECT year FROM social_good WHERE region = 'Asia') ORDER BY year;"}
{"prompt":"What is the total number of ethical AI initiatives in Asia and Europe? with given SQL schema CREATE TABLE ethical_ai_initiatives (initiative_id INT, region VARCHAR(20), funds DECIMAL(10,2)); INSERT INTO ethical_ai_initiatives (initiative_id, region, funds) VALUES (1, 'Asia', 50000.00), (2, 'Europe', 100000.00), (3, 'Asia', 75000.00), (4, 'Europe', 25000.00);","completion":"SELECT SUM(funds) FROM ethical_ai_initiatives WHERE region IN ('Asia', 'Europe');"}
{"prompt":"Update the 'FairTrade' status of all manufacturers in the 'Asia' region to 'Yes'. with given SQL schema CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50), Region VARCHAR(50), FairTrade VARCHAR(5)); INSERT INTO Manufacturers (ManufacturerID, ManufacturerName, Region, FairTrade) VALUES (1, 'EcoFriendlyFabrics', 'Europe', 'No'), (2, 'GreenYarns', 'Asia', 'No'), (3, 'SustainableTextiles', 'Africa', 'Yes'), (4, 'EcoWeaves', 'Europe', 'Yes');","completion":"UPDATE Manufacturers SET FairTrade = 'Yes' WHERE Region = 'Asia';"}
{"prompt":"Which countries have the highest number of fair trade certified factories? with given SQL schema CREATE TABLE FairTradeFactories (id INT, country VARCHAR);","completion":"SELECT country, COUNT(*) as factory_count FROM FairTradeFactories GROUP BY country ORDER BY factory_count DESC LIMIT 5;"}
{"prompt":"Count the number of transactions for socially responsible lending initiatives in the United States over the past month. with given SQL schema CREATE TABLE srl_transactions (id INT, initiative_type VARCHAR(255), transaction_date DATE);","completion":"SELECT COUNT(*) FROM srl_transactions WHERE initiative_type = 'socially responsible lending' AND transaction_date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"Update the bank name to 'GreenLend' for record with id 1 in the 'loans' table. with given SQL schema CREATE TABLE loans (id INT, bank VARCHAR(20), amount DECIMAL(10,2), is_socially_responsible BOOLEAN); INSERT INTO loans (id, bank, amount, is_socially_responsible) VALUES (1, 'BlueBank', 1000.00, true), (2, 'GreenLend', 1500.00, false), (3, 'BlueBank', 2000.00, true);","completion":"UPDATE loans SET bank = 'GreenLend' WHERE id = 1;"}
{"prompt":"What is the average program impact score for each program type, sorted by the average impact score in descending order? with given SQL schema CREATE TABLE Programs (ProgramType TEXT, ImpactScore DECIMAL(3,2)); CREATE TABLE ImpactData (ProgramID TEXT, ProgramType TEXT, ImpactScore DECIMAL(3,2));","completion":"SELECT ProgramType, AVG(ImpactScore) as AvgImpactScore  FROM ImpactData ID JOIN Programs P ON ID.ProgramType = P.ProgramType GROUP BY ProgramType ORDER BY AvgImpactScore DESC;"}
{"prompt":"Who is the lead researcher for the biotech startup that received the most funding in the last 3 years? with given SQL schema CREATE TABLE company (id INT PRIMARY KEY, name VARCHAR(255), industry VARCHAR(255), funding FLOAT, startup_date DATE); CREATE TABLE research (id INT PRIMARY KEY, company_id INT, title VARCHAR(255), lead_researcher VARCHAR(255), start_date DATE); INSERT INTO company (id, name, industry, funding, startup_date) VALUES (1, 'BioGen', 'Biotechnology', 70000000, '2015-01-01'), (2, 'BioSense', 'Biosensor Technology', 20000000, '2018-01-01'), (3, 'BioStart', 'Biotech Startup', 80000000, '2020-01-01'); INSERT INTO research (id, company_id, title, lead_researcher, start_date) VALUES (1, 3, 'Genetic Research', 'Charlie', '2021-01-01');","completion":"SELECT lead_researcher FROM research r JOIN company c ON r.company_id = c.id WHERE c.startup_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) AND c.funding = (SELECT MAX(funding) FROM company c WHERE c.startup_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR));"}
{"prompt":"What is the minimum investment in renewable energy projects in 'Country I' for each project type? with given SQL schema CREATE TABLE RenewableEnergyInvestments (ProjectID INT, ProjectType VARCHAR(255), Country VARCHAR(255), Investment FLOAT); INSERT INTO RenewableEnergyInvestments (ProjectID, ProjectType, Country, Investment) VALUES (1, 'Wind', 'Country I', 500000.0);","completion":"SELECT ProjectType, MIN(Investment) FROM RenewableEnergyInvestments WHERE Country = 'Country I' GROUP BY ProjectType;"}
{"prompt":"How many patients have been treated for mental health conditions by health equity metric score quartile? with given SQL schema CREATE TABLE patients (patient_id INT, mental_health_condition VARCHAR(10), health_equity_metric_score INT); INSERT INTO patients (patient_id, mental_health_condition, health_equity_metric_score) VALUES (1, 'Anxiety', 75), (2, 'Depression', 80), (3, 'Bipolar', 60), (4, 'PTSD', 90), (5, 'Anxiety', 70);","completion":"SELECT AVG(health_equity_metric_score), NTILE(4) OVER (ORDER BY health_equity_metric_score) AS quartile FROM patients WHERE mental_health_condition = 'Anxiety' GROUP BY quartile;"}
{"prompt":"What is the mental health score difference between urban, suburban, and rural areas? with given SQL schema CREATE TABLE Areas (AreaID INT, Area VARCHAR(50)); CREATE TABLE MentalHealthScores (MH_ID INT, AreaID INT, MentalHealthScore INT); INSERT INTO Areas (AreaID, Area) VALUES (1, 'Urban'), (2, 'Suburban'), (3, 'Rural'); INSERT INTO MentalHealthScores (MH_ID, AreaID, MentalHealthScore) VALUES (1, 1, 85), (2, 1, 90), (3, 2, 75), (4, 2, 70), (5, 3, 80), (6, 3, 85), (7, 1, 65), (8, 1, 70), (9, 2, 80), (10, 2, 85);","completion":"SELECT a.Area, AVG(mhs.MentalHealthScore) as Avg_Score FROM MentalHealthScores mhs JOIN Areas a ON mhs.AreaID = a.AreaID GROUP BY a.Area;"}
{"prompt":"What is the maximum duration of a virtual tour in 'Mexico' hotels? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, hotel_id INT, date DATE, duration INT); INSERT INTO virtual_tours (tour_id, hotel_id, date, duration) VALUES (9, 9, '2022-03-02', 20), (10, 9, '2022-03-05', 25), (11, 10, '2022-03-03', 30); CREATE TABLE hotels (hotel_id INT, country VARCHAR(50)); INSERT INTO hotels (hotel_id, country) VALUES (9, 'Mexico'), (10, 'Brazil');","completion":"SELECT MAX(duration) FROM virtual_tours JOIN hotels ON virtual_tours.hotel_id = hotels.hotel_id WHERE hotels.country = 'Mexico';"}
{"prompt":"Which hotels in the 'luxury' segment have the highest guest satisfaction ratings? with given SQL schema CREATE TABLE hotels (hotel_id INT, segment VARCHAR(20), guest_rating FLOAT);","completion":"SELECT hotel_id, segment, AVG(guest_rating) as avg_rating FROM hotels WHERE segment = 'luxury' GROUP BY hotel_id ORDER BY avg_rating DESC;"}
{"prompt":"Update the CO2 emission value of the 'Canada' country to 580 in the 'emissions' table for the year 2010. with given SQL schema CREATE TABLE emissions (country VARCHAR(255), year INT, co2_emission FLOAT); INSERT INTO emissions (country, year, co2_emission) VALUES ('Canada', 2010, 550.0), ('US', 2010, 5200.0), ('Russia', 2010, 1900.0);","completion":"UPDATE emissions SET co2_emission = 580 WHERE country = 'Canada' AND year = 2010;"}
{"prompt":"What is the number of species recorded in the 'biodiversity' table with a population greater than 15000? with given SQL schema CREATE TABLE biodiversity (id INT, species VARCHAR(255), population INT); INSERT INTO biodiversity (id, species, population) VALUES (1, 'Polar Bear', 5000), (2, 'Arctic Fox', 10000), (3, 'Caribou', 20000);","completion":"SELECT COUNT(DISTINCT species) FROM biodiversity WHERE population > 15000;"}
{"prompt":"Which language families are at risk, with fewer than 10,000 speakers, and the total number of languages in each family? with given SQL schema CREATE TABLE Languages (id INT, name VARCHAR(255), language_family VARCHAR(255), num_speakers INT, UNIQUE(id));","completion":"SELECT Languages.language_family, COUNT(Languages.id) as num_languages FROM Languages WHERE Languages.num_speakers < 10000 GROUP BY Languages.language_family HAVING num_languages > 2;"}
{"prompt":"Who are the therapists in Texas that have treated more than 5 patients with anxiety disorder? with given SQL schema CREATE TABLE patients (patient_id INT, patient_name TEXT, condition TEXT, therapist_id INT); CREATE TABLE therapists (therapist_id INT, therapist_name TEXT, state TEXT); INSERT INTO patients (patient_id, patient_name, condition, therapist_id) VALUES (1, 'Oliver Brown', 'Anxiety Disorder', 1); INSERT INTO patients (patient_id, patient_name, condition, therapist_id) VALUES (2, 'Grace Johnson', 'Anxiety Disorder', 1); INSERT INTO patients (patient_id, patient_name, condition, therapist_id) VALUES (3, 'Mia Lee', 'Depression', 1); INSERT INTO therapists (therapist_id, therapist_name, state) VALUES (1, 'Dr. Emily Davis', 'Texas'); INSERT INTO therapists (therapist_id, therapist_name, state) VALUES (2, 'Dr. Richard Garcia', 'Texas');","completion":"SELECT therapists.therapist_name FROM therapists JOIN (SELECT therapist_id FROM patients GROUP BY therapist_id HAVING COUNT(*) > 5) AS patient_counts ON therapists.therapist_id = patient_counts.therapist_id WHERE therapists.state = 'Texas' AND therapists.therapist_name IN (SELECT therapists.therapist_name FROM therapists JOIN patients ON therapists.therapist_id = patients.therapist_id WHERE patients.condition = 'Anxiety Disorder');"}
{"prompt":"Insert a new record in the 'projects' table with id 7, name 'Green Transportation Initiative', description 'New green transportation project', start_date '2022-04-01', and end_date '2025-03-31' with given SQL schema CREATE TABLE projects (id INT, name VARCHAR(50), description TEXT, start_date DATE, end_date DATE);","completion":"INSERT INTO projects (id, name, description, start_date, end_date) VALUES (7, 'Green Transportation Initiative', 'New green transportation project', '2022-04-01', '2025-03-31');"}
{"prompt":"Show the 3 most expensive projects in 'Railway Construction'. with given SQL schema CREATE TABLE project_info (id INT, name VARCHAR(50), category VARCHAR(50), cost INT); INSERT INTO project_info (id, name, category, cost) VALUES (1, 'Test1', 'Railway Construction', 7000000);","completion":"SELECT * FROM (SELECT * FROM project_info WHERE category = 'Railway Construction' ORDER BY cost DESC) subquery LIMIT 3;"}
{"prompt":"Insert new records into the 'defendants' table with defendant_id 3001, 3002, first_name 'Aria', 'Asim', last_name 'Gupta' with given SQL schema CREATE TABLE defendants (defendant_id INT, first_name VARCHAR(20), last_name VARCHAR(20));","completion":"INSERT INTO defendants (defendant_id, first_name, last_name) VALUES (3001, 'Aria', 'Gupta'), (3002, 'Asim', 'Gupta');"}
{"prompt":"What is the total number of court cases heard in the county of Los Angeles for the year 2020? with given SQL schema CREATE TABLE court_cases (id INT, county VARCHAR(255), year INT, number_of_cases INT); INSERT INTO court_cases (id, county, year, number_of_cases) VALUES (1, 'Los Angeles', 2020, 5000), (2, 'Los Angeles', 2019, 4000), (3, 'Orange County', 2020, 3000);","completion":"SELECT SUM(number_of_cases) FROM court_cases WHERE county = 'Los Angeles' AND year = 2020;"}
{"prompt":"Delete marine debris records from the marine_debris table that were recorded before 2010. with given SQL schema CREATE TABLE marine_debris (id INT, debris_type VARCHAR(255), debris_date DATE); INSERT INTO marine_debris (id, debris_type, debris_date) VALUES (1, 'Fishing Net', '2005-01-01'), (2, 'Plastic Bottle', '2015-01-01');","completion":"DELETE FROM marine_debris WHERE debris_date < '2010-01-01';"}
{"prompt":"What is the frequency of news content for each country in the media_content table? with given SQL schema CREATE TABLE media_content (id INT, country VARCHAR(50), genre VARCHAR(50), frequency INT); INSERT INTO media_content (id, country, genre, frequency) VALUES (1, 'USA', 'News - Print', 50), (2, 'Canada', 'News - Online', 100), (3, 'Mexico', 'News - TV', 150);","completion":"SELECT country, genre, SUM(frequency) FROM media_content WHERE genre LIKE 'News%' GROUP BY country, genre;"}
{"prompt":"How many 'Seasonal Vegetable' dishes were sold each day? with given SQL schema CREATE TABLE Daily_Sales(Date DATE, Menu_Item VARCHAR(30), Quantity INT); INSERT INTO Daily_Sales(Date, Menu_Item, Quantity) VALUES('2022-01-01', 'Seasonal Vegetables', 10), ('2022-01-02', 'Seasonal Vegetables', 15);","completion":"SELECT Date, Menu_Item, SUM(Quantity) as Total_Quantity FROM Daily_Sales WHERE Menu_Item = 'Seasonal Vegetables' GROUP BY Date, Menu_Item;"}
{"prompt":"List all defense projects with their contract values with given SQL schema CREATE TABLE Projects (ProjectID INT, ProjectName VARCHAR(100), ContractID INT); INSERT INTO Projects (ProjectID, ProjectName, ContractID) VALUES (1, 'Tank Production', 1), (2, 'Missile Production', 2); CREATE TABLE Contracts (ContractID INT, ContractValue DECIMAL(10,2)); INSERT INTO Contracts (ContractID, ContractValue) VALUES (1, 500000), (2, 750000);","completion":"SELECT Projects.ProjectName, Contracts.ContractValue FROM Projects INNER JOIN Contracts ON Projects.ContractID = Contracts.ContractID;"}
{"prompt":"What is the total amount donated by each donor, ordered from highest to lowest? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50), TotalDonation DECIMAL(10,2)); INSERT INTO Donors VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 3500.00), (3, 'Mike Johnson', 2000.00);","completion":"SELECT DonorName, TotalDonation FROM Donors ORDER BY TotalDonation DESC;"}
{"prompt":"Determine the average KDA ratio by champion in LoL with given SQL schema CREATE TABLE lolgames (game_id INT, champion VARCHAR(50), kills INT, deaths INT, assists INT); INSERT INTO lolgames (game_id, champion, kills, deaths, assists) VALUES (1, 'Ashe', 10, 4, 6);","completion":"SELECT champion, (SUM(kills) + SUM(assists)) \/ NULLIF(SUM(deaths), 0) as avg_kda_ratio FROM lolgames GROUP BY champion"}
{"prompt":"Retrieve the average game duration for each game in the 'GameSessions' table with given SQL schema CREATE TABLE GameSessions (GameID INT, SessionDuration TIME);","completion":"SELECT GameID, AVG(SessionDuration) as AverageSessionDuration FROM GameSessions GROUP BY GameID;"}
{"prompt":"Calculate the average temperature and humidity for farms in the 'Asia' region. with given SQL schema CREATE TABLE weather_data (id INT, farm_id INT, date DATE, temperature FLOAT, humidity FLOAT); INSERT INTO weather_data (id, farm_id, date, temperature, humidity) VALUES (1, 1, '2018-01-01', 20.0, 60.0); INSERT INTO weather_data (id, farm_id, date, temperature, humidity) VALUES (2, 2, '2018-01-02', 18.0, 70.0); INSERT INTO weather_data (id, farm_id, date, temperature, humidity) VALUES (3, 3, '2018-01-03', 22.0, 55.0);","completion":"SELECT w.farm_id, AVG(temperature) AS avg_temp, AVG(humidity) AS avg_humidity FROM weather_data w JOIN farm_info f ON w.farm_id = f.farm_id WHERE f.location LIKE 'Asia%' GROUP BY w.farm_id;"}
{"prompt":"List the top 5 countries with the highest average temperature in July. with given SQL schema CREATE TABLE WeatherData (country VARCHAR(255), date DATE, temperature INT); INSERT INTO WeatherData (country, date, temperature) VALUES ('France', '2022-07-01', 25), ('France', '2022-07-02', 26), ('Germany', '2022-07-01', 23), ('Germany', '2022-07-02', 24), ('Spain', '2022-07-01', 28), ('Spain', '2022-07-02', 29), ('Italy', '2022-07-01', 27), ('Italy', '2022-07-02', 26), ('Sweden', '2022-07-01', 20), ('Sweden', '2022-07-02', 21);","completion":"SELECT country, AVG(temperature) as Avg_Temperature FROM WeatherData WHERE date BETWEEN '2022-07-01' AND '2022-07-31' GROUP BY country ORDER BY Avg_Temperature DESC LIMIT 5;"}
{"prompt":"What is the average temperature recorded in the 'sensors' table for the 'Spring' season? with given SQL schema CREATE TABLE sensors (id INT, location VARCHAR(255), temperature FLOAT, reading_date DATE); INSERT INTO sensors (id, location, temperature, reading_date) VALUES (1, 'Field1', 22, '2021-03-01'); INSERT INTO sensors (id, location, temperature, reading_date) VALUES (2, 'Field2', 25, '2021-03-15');","completion":"SELECT AVG(temperature) FROM sensors WHERE reading_date BETWEEN (SELECT MIN(reading_date) FROM sensors WHERE EXTRACT(MONTH FROM reading_date) IN (3,4,5)) AND (SELECT MAX(reading_date) FROM sensors WHERE EXTRACT(MONTH FROM reading_date) IN (3,4,5))"}
{"prompt":"What is the minimum rainfall recorded in Field13 and Field14 in the year 2021? with given SQL schema CREATE TABLE Field13 (date DATE, rain_mm FLOAT); INSERT INTO Field13 VALUES ('2021-01-01', 10), ('2021-01-02', 5); CREATE TABLE Field14 (date DATE, rain_mm FLOAT); INSERT INTO Field14 VALUES ('2021-01-01', 8), ('2021-01-02', 3);","completion":"SELECT LEAST(f13.rain_mm, f14.rain_mm) as min_rainfall FROM Field13 f13 INNER JOIN Field14 f14 ON f13.date = f14.date WHERE EXTRACT(YEAR FROM f13.date) = 2021;"}
{"prompt":"List all the unique services offered by the department of transportation in the city of XYZ? with given SQL schema CREATE TABLE department_services (service_id INT, department TEXT, city TEXT, service TEXT); INSERT INTO department_services (service_id, department, city, service) VALUES (1, 'Transportation', 'XYZ', 'Bus'), (2, 'Transportation', 'XYZ', 'Train'), (3, 'Utilities', 'XYZ', 'Water'), (4, 'Utilities', 'ABC', 'Electricity');","completion":"SELECT DISTINCT service FROM department_services WHERE department = 'Transportation' AND city = 'XYZ';"}
{"prompt":"What was the average response time for citizen feedback records in 2022, and how many records were responded to within 48 hours? with given SQL schema CREATE TABLE FeedbackResponse (Year INT, ResponseTime FLOAT, RespondedWithin48Hours INT); INSERT INTO FeedbackResponse (Year, ResponseTime, RespondedWithin48Hours) VALUES (2022, 3.2, 1), (2022, 4.7, 1), (2022, 2.8, 0), (2022, 1.9, 1);","completion":"SELECT AVG(ResponseTime), SUM(RespondedWithin48Hours) FROM FeedbackResponse WHERE Year = 2022;"}
{"prompt":"Count the number of rare earth elements extracted by companies from Oceania in 2022? with given SQL schema CREATE TABLE rare_earth_elements_2 (element TEXT); INSERT INTO rare_earth_elements_2 VALUES ('Terbium'), ('Holmium'), ('Erbium'); CREATE TABLE extraction_data_2 (year INT, company_name TEXT, element TEXT, quantity INT); INSERT INTO extraction_data_2 (year, company_name, element, quantity) VALUES (2022, 'EFG Mining', 'Terbium', 1200), (2022, 'HIJ Mining', 'Holmium', 900), (2022, 'KLM Mining', 'Erbium', 1800), (2022, 'NOP Mining', 'Terbium', 1500); CREATE TABLE mining_locations_2 (company_name TEXT, region TEXT); INSERT INTO mining_locations_2 (company_name, region) VALUES ('EFG Mining', 'Oceania'), ('HIJ Mining', 'Antarctica'), ('KLM Mining', 'Oceania'), ('NOP Mining', 'Oceania');","completion":"SELECT COUNT(DISTINCT element) as total_elements FROM extraction_data_2 WHERE year = 2022 AND company_name IN (SELECT company_name FROM mining_locations_2 WHERE region = 'Oceania');"}
{"prompt":"List all erbium production quantities for each year in Brazil. with given SQL schema CREATE TABLE erbium_production (country VARCHAR(20), quantity INT, year INT); INSERT INTO erbium_production (country, quantity, year) VALUES ('Brazil', 1200, 2018), ('Brazil', 1300, 2019), ('Brazil', 1400, 2020);","completion":"SELECT country, year, quantity FROM erbium_production WHERE country = 'Brazil';"}
{"prompt":"Which countries have rare earth element reserves greater than 2000? with given SQL schema CREATE TABLE country_reserves (country VARCHAR(50), reserves INT); INSERT INTO country_reserves (country, reserves) VALUES ('China', 44000), ('USA', 1300), ('Australia', 3800), ('India', 674), ('Brazil', 220);","completion":"SELECT country FROM country_reserves WHERE reserves > 2000;"}
{"prompt":"List the total number of products for each supplier. with given SQL schema CREATE TABLE product (product_id INT, name VARCHAR(255), quantity INT, supplier_id INT); INSERT INTO product (product_id, name, quantity, supplier_id) VALUES (1, 'Organic Cotton T-Shirt', 30, 1), (2, 'Polyester Hoodie', 20, 2), (3, 'Bamboo Socks', 50, 1);","completion":"SELECT supplier_id, COUNT(*) FROM product GROUP BY supplier_id;"}
{"prompt":"What is the distribution of space debris by mass in the space_debris_by_mass table? with given SQL schema CREATE TABLE space_debris_by_mass (id INT, mass_range VARCHAR(20), mass FLOAT); INSERT INTO space_debris_by_mass (id, mass_range, mass) VALUES (1, '< 100 kg', 50), (2, '100-500 kg', 300), (3, '500-1000 kg', 500), (4, '> 1000 kg', 3500);","completion":"SELECT mass_range, SUM(mass) FROM space_debris_by_mass GROUP BY mass_range;"}
{"prompt":"What is the total number of satellites launched by China? with given SQL schema CREATE TABLE satellites_by_country (id INT, name VARCHAR(50), type VARCHAR(50), launch_date DATE, orbit VARCHAR(50), country VARCHAR(50), number_of_satellites INT);","completion":"SELECT SUM(number_of_satellites) FROM satellites_by_country WHERE country = 'China';"}
{"prompt":"Which companies have launched satellites into geostationary orbit? with given SQL schema CREATE TABLE geostationary_orbit (id INT, company VARCHAR(255), satellite_name VARCHAR(255)); INSERT INTO geostationary_orbit (id, company, satellite_name) VALUES (1, 'Boeing', 'Intelsat 901'), (2, 'Lockheed Martin', 'DirecTV 1'), (3, 'Space Systems\/Loral', 'EchoStar 19'), (4, 'Airbus Defence and Space', 'Eutelsat 172B');","completion":"SELECT DISTINCT company FROM geostationary_orbit WHERE orbit = 'geostationary';"}
{"prompt":"What is the total duration of all space missions with given SQL schema CREATE TABLE SpaceMissions (id INT, mission_name VARCHAR(30), duration INT); INSERT INTO SpaceMissions (id, mission_name, duration) VALUES (1, 'Mars Exploration', 400); INSERT INTO SpaceMissions (id, mission_name, duration) VALUES (2, 'Asteroid Survey', 250); INSERT INTO SpaceMissions (id, mission_name, duration) VALUES (3, 'Space Station Maintenance', 300);","completion":"SELECT SUM(duration) FROM SpaceMissions;"}
{"prompt":"How many fans are from each state? with given SQL schema CREATE TABLE fans (fan_id INT, state VARCHAR(255)); INSERT INTO fans (fan_id, state) VALUES (1, 'Texas'), (2, 'California'), (3, 'Texas'), (4, 'New York'), (5, 'California'), (6, 'California'), (7, 'Texas'), (8, 'Texas'), (9, 'New York'), (10, 'New York');","completion":"SELECT state, COUNT(*) as fan_count FROM fans GROUP BY state;"}
{"prompt":"Show the number of unique athletes who have participated in each sport. with given SQL schema CREATE TABLE Sports (sport_id INT, sport_name VARCHAR(50)); CREATE TABLE Athlete_Events (athlete_id INT, sport_id INT, event_id INT, year INT, participation_type VARCHAR(50));","completion":"SELECT sport_name, COUNT(DISTINCT athlete_id) as unique_athletes FROM Athlete_Events GROUP BY sport_name;"}
{"prompt":"List all users who have accessed both systems S007 and S008. with given SQL schema CREATE TABLE user_access (id INT, user_id VARCHAR(10), system_accessed VARCHAR(5)); INSERT INTO user_access (id, user_id, system_accessed) VALUES (1, 'u101', 'S007'), (2, 'u102', 'S008'), (3, 'u101', 'S008'), (4, 'u103', 'S007'), (5, 'u103', 'S008');","completion":"SELECT user_id FROM user_access WHERE system_accessed = 'S007' INTERSECT SELECT user_id FROM user_access WHERE system_accessed = 'S008';"}
{"prompt":"What is the number of multimodal trips in Tokyo involving public transportation and bikes? with given SQL schema CREATE TABLE multimodal_trips (trip_id INT, leg_start_time TIMESTAMP, leg_end_time TIMESTAMP, leg_distance FLOAT, mode VARCHAR(50), city VARCHAR(50));","completion":"SELECT COUNT(*) as num_trips FROM multimodal_trips WHERE city = 'Tokyo' AND (mode = 'public transportation' OR mode = 'bike');"}
{"prompt":"What is the total sales revenue for each category of garments in the South America region in Q1 2022? with given SQL schema CREATE TABLE sales_category (sale_id INT, garment_category VARCHAR(50), sale_date DATE, total_sales DECIMAL(10, 2), region VARCHAR(50));","completion":"SELECT garment_category, SUM(total_sales) FROM sales_category WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31' AND region = 'South America' GROUP BY garment_category;"}
{"prompt":"What is the percentage of unions with collective bargaining agreements in the Midwest region? with given SQL schema CREATE TABLE collective_bargaining (bargaining_id INT, union_name VARCHAR(50), contract_start_date DATE, contract_end_date DATE, region VARCHAR(50));CREATE VIEW union_region AS SELECT DISTINCT union_name, region FROM collective_bargaining;","completion":"SELECT COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM union_region) as percentage FROM union_region ur WHERE ur.region = 'Midwest' AND EXISTS (SELECT 1 FROM collective_bargaining cb WHERE cb.union_name = ur.union_name);"}
{"prompt":"What is the minimum safety rating of SUVs in the United Kingdom? with given SQL schema CREATE TABLE SafetyTesting (Id INT, VehicleType VARCHAR(50), Country VARCHAR(50), Rating INT); INSERT INTO SafetyTesting (Id, VehicleType, Country, Rating) VALUES (1, 'SUV', 'United Kingdom', 4), (2, 'Sedan', 'United Kingdom', 5);","completion":"SELECT MIN(Rating) FROM SafetyTesting WHERE VehicleType = 'SUV' AND Country = 'United Kingdom';"}
{"prompt":"Which autonomous vehicles have driven more than 1000 miles in a single test? with given SQL schema CREATE TABLE Autonomous_Testing (id INT PRIMARY KEY, vehicle_id INT, test_type VARCHAR(50), date DATE, miles_driven INT); CREATE TABLE Vehicles (id INT PRIMARY KEY, make VARCHAR(50), model VARCHAR(50), year INT, type VARCHAR(50));","completion":"SELECT v.make, v.model, at.miles_driven FROM Vehicles v INNER JOIN Autonomous_Testing at ON v.id = at.vehicle_id WHERE at.miles_driven > 1000;"}
{"prompt":"How many water treatment plants in the 'Urban' region have a total water treatment capacity of over 50,000 cubic meters? with given SQL schema CREATE TABLE WaterTreatmentPlants (id INT, plant_name VARCHAR(50), region VARCHAR(50), total_capacity INT); INSERT INTO WaterTreatmentPlants (id, plant_name, region, total_capacity) VALUES (1, 'Plant A', 'Urban', 60000), (2, 'Plant B', 'Rural', 35000), (3, 'Plant C', 'Urban', 45000);","completion":"SELECT COUNT(*) FROM WaterTreatmentPlants WHERE region = 'Urban' AND total_capacity > 50000;"}
{"prompt":"What is the average heart rate of users aged 25-30, during their spin class sessions? with given SQL schema CREATE TABLE users (id INT, age INT, gender VARCHAR(10)); INSERT INTO users (id, age, gender) VALUES (1, 27, 'Female'), (2, 31, 'Male'); CREATE TABLE spin_classes (id INT, user_id INT, heart_rate INT); INSERT INTO spin_classes (id, user_id, heart_rate) VALUES (1, 1, 150), (2, 1, 160), (3, 2, 145), (4, 2, 135);","completion":"SELECT AVG(heart_rate) FROM spin_classes INNER JOIN users ON spin_classes.user_id = users.id WHERE users.age BETWEEN 25 AND 30;"}
{"prompt":"Which 'Strength' workouts were done by members aged 30 or older? with given SQL schema CREATE TABLE Workouts (WorkoutID INT, WorkoutName VARCHAR(20), Category VARCHAR(10)); INSERT INTO Workouts (WorkoutID, WorkoutName, Category) VALUES (1, 'Treadmill', 'Cardio'), (2, 'Yoga', 'Strength'), (3, 'Cycling', 'Cardio'), (4, 'Push-ups', 'Strength'), (5, 'Squats', 'Strength'); CREATE TABLE Members (MemberID INT, Age INT, MembershipType VARCHAR(10)); INSERT INTO Members (MemberID, Age, MembershipType) VALUES (1, 35, 'Premium'), (2, 28, 'Basic'), (3, 45, 'Premium'), (4, 22, 'Basic'), (5, 55, 'Premium');","completion":"SELECT Workouts.WorkoutName FROM Workouts INNER JOIN Members ON TRUE WHERE Workouts.Category = 'Strength' AND Members.Age >= 30;"}
{"prompt":"List the top 5 models with the highest explainability scores and their development team names. with given SQL schema CREATE TABLE ModelExplainabilityScores (ModelID INT, ExplainabilityScore INT, TeamID INT); CREATE TABLE TeamNames (TeamID INT, TeamName VARCHAR(50));","completion":"SELECT ModelExplainabilityScores.ModelID, MAX(ModelExplainabilityScores.ExplainabilityScore) AS MaxExplainabilityScore, TeamNames.TeamName FROM ModelExplainabilityScores INNER JOIN TeamNames ON ModelExplainabilityScores.TeamID = TeamNames.TeamID GROUP BY ModelExplainabilityScores.TeamID ORDER BY MaxExplainabilityScore DESC, TeamNames.TeamName DESC LIMIT 5;"}
{"prompt":"What are the AI safety principles and their corresponding descriptions? with given SQL schema CREATE TABLE ai_safety_principles (principle_id INTEGER, principle_name TEXT, principle_description TEXT);","completion":"SELECT principle_name, principle_description FROM ai_safety_principles;"}
{"prompt":"What is the total number of AI models developed in North America with an explainability score below 70? with given SQL schema CREATE TABLE na_models (model_name TEXT, region TEXT, explainability_score INTEGER); INSERT INTO na_models (model_name, region, explainability_score) VALUES ('Model1', 'North America', 75), ('Model2', 'North America', 65), ('Model3', 'North America', 80);","completion":"SELECT SUM(incident_count) FROM na_models WHERE region = 'North America' AND explainability_score < 70;"}
{"prompt":"What is the average annual income for farmers in the 'rural_development' database? with given SQL schema CREATE TABLE farmers (id INT, name TEXT, annual_income FLOAT, location TEXT); INSERT INTO farmers (id, name, annual_income, location) VALUES (1, 'John Doe', 35000, 'Rural Area A'); INSERT INTO farmers (id, name, annual_income, location) VALUES (2, 'Jane Smith', 40000, 'Rural Area B');","completion":"SELECT AVG(annual_income) FROM farmers;"}
{"prompt":"What is the average age of engines still in service for each engine type? with given SQL schema CREATE TABLE Engine (id INT, aircraft_id INT, engine_type VARCHAR(255), hours_since_last_service INT, manufacture_year INT); INSERT INTO Engine (id, aircraft_id, engine_type, hours_since_last_service, manufacture_year) VALUES (1, 1, 'GE90-115B', 500, 2000); INSERT INTO Engine (id, aircraft_id, engine_type, hours_since_last_service, manufacture_year) VALUES (2, 2, 'CFM56-5B', 1000, 1995); INSERT INTO Engine (id, aircraft_id, engine_type, hours_since_last_service, manufacture_year) VALUES (3, 1, 'GE90-115B', 700, 2002);","completion":"SELECT engine_type, AVG(YEAR(CURRENT_DATE) - manufacture_year) as avg_age FROM Engine GROUP BY engine_type;"}
{"prompt":"What is the total number of satellites deployed by SpaceComm in the Middle East? with given SQL schema CREATE TABLE SatelliteDeployment (satellite_id INT, company VARCHAR(255), region VARCHAR(255));","completion":"SELECT COUNT(*) FROM SatelliteDeployment WHERE company = 'SpaceComm' AND region = 'Middle East';"}
{"prompt":"Calculate the average weight of adult seals in the 'Antarctic Ocean' sanctuary. with given SQL schema CREATE TABLE seals (seal_id INT, seal_name VARCHAR(50), age INT, weight FLOAT, sanctuary VARCHAR(50)); INSERT INTO seals (seal_id, seal_name, age, weight, sanctuary) VALUES (1, 'Seal_1', 12, 200, 'Antarctic Ocean'); INSERT INTO seals (seal_id, seal_name, age, weight, sanctuary) VALUES (2, 'Seal_2', 8, 180, 'Antarctic Ocean');","completion":"SELECT AVG(weight) FROM seals WHERE sanctuary = 'Antarctic Ocean' AND age >= 18;"}
{"prompt":"How many animals of each species are currently in rehabilitation centers? with given SQL schema CREATE TABLE RehabilitationCenters (id INT, animal_id INT, species VARCHAR(255), condition VARCHAR(255)); INSERT INTO RehabilitationCenters (id, animal_id, species, condition) VALUES (1, 1, 'Lion', 'Critical'), (2, 2, 'Elephant', 'Stable'), (3, 3, 'Tiger', 'Critical');","completion":"SELECT species, COUNT(*) FROM RehabilitationCenters WHERE condition = 'Stable' GROUP BY species;"}
{"prompt":"What is the average water temperature for each species in the 'fish_tanks' table? with given SQL schema CREATE TABLE fish_tanks (tank_id INT, species VARCHAR(255), water_temperature DECIMAL(5,2)); INSERT INTO fish_tanks (tank_id, species, water_temperature) VALUES (1, 'Tilapia', 26.5), (2, 'Salmon', 12.0), (3, 'Tilapia', 27.3), (4, 'Catfish', 24.6), (5, 'Salmon', 12.5);","completion":"SELECT species, AVG(water_temperature) as avg_temp FROM fish_tanks GROUP BY species;"}
{"prompt":"What is the minimum water temperature in saltwater aquaculture facilities in the Mediterranean region? with given SQL schema CREATE TABLE saltwater_aquaculture (id INT, name TEXT, location TEXT, water_temperature FLOAT); INSERT INTO saltwater_aquaculture (id, name, location, water_temperature) VALUES (1, 'Facility A', 'Mediterranean', 21.5), (2, 'Facility B', 'Mediterranean', 22.2), (3, 'Facility C', 'Indian Ocean', 28.0);","completion":"SELECT MIN(water_temperature) FROM saltwater_aquaculture WHERE location = 'Mediterranean';"}
{"prompt":"What is the total revenue generated from the 'Art Classes'? with given SQL schema CREATE TABLE sales (id INT, class_id INT, amount DECIMAL(10, 2)); CREATE TABLE classes (id INT, name VARCHAR(255)); INSERT INTO sales (id, class_id, amount) VALUES (1, 1, 100); INSERT INTO sales (id, class_id, amount) VALUES (2, 1, 200); INSERT INTO classes (id, name) VALUES (1, 'Art Classes');","completion":"SELECT SUM(amount) FROM sales s JOIN classes c ON s.class_id = c.id WHERE c.name = 'Art Classes';"}
{"prompt":"List the names and release dates of all movies that were released in the same month as a Marvel movie. with given SQL schema CREATE TABLE movies (id INT, movie_name VARCHAR(50), genre VARCHAR(20), release_date DATE);","completion":"SELECT m1.movie_name, m1.release_date FROM movies m1 INNER JOIN movies m2 ON MONTH(m1.release_date) = MONTH(m2.release_date) AND YEAR(m1.release_date) = YEAR(m2.release_date) WHERE m2.genre = 'Marvel';"}
{"prompt":"What is the total amount of chemical waste produced by each plant in January 2020? with given SQL schema CREATE TABLE Plant (id INT, name VARCHAR(255)); INSERT INTO Plant (id, name) VALUES (1, 'Plant A'), (2, 'Plant B'); CREATE TABLE Waste (plant_id INT, date DATE, amount INT); INSERT INTO Waste (plant_id, date, amount) VALUES (1, '2020-01-01', 100), (1, '2020-01-02', 120), (2, '2020-01-01', 150), (2, '2020-01-02', 140);","completion":"SELECT p.name, SUM(w.amount) as total_waste FROM Waste w JOIN Plant p ON w.plant_id = p.id WHERE w.date BETWEEN '2020-01-01' AND '2020-01-31' GROUP BY p.name;"}
{"prompt":"Which climate finance initiatives were inserted into the 'climate_finance' table in 2019? with given SQL schema CREATE TABLE climate_finance (initiative_name TEXT, year INTEGER, amount FLOAT); INSERT INTO climate_finance (initiative_name, year, amount) VALUES ('Green Grants', 2019, 50000.0), ('Climate Innovation Fund', 2020, 100000.0), ('Renewable Energy Loans', 2018, 75000.0);","completion":"SELECT initiative_name FROM climate_finance WHERE year = 2019;"}
{"prompt":"What is the most common type of medical equipment across hospitals? with given SQL schema CREATE TABLE medical_equipment (id INT, hospital_name TEXT, location TEXT, equipment TEXT, quantity INT, last_updated_date DATE); INSERT INTO medical_equipment (id, hospital_name, location, equipment, quantity, last_updated_date) VALUES (1, 'NY Presbyterian', 'NYC', 'Ventilators', 80, '2021-03-31'); INSERT INTO medical_equipment (id, hospital_name, location, equipment, quantity, last_updated_date) VALUES (2, 'Stanford Hospital', 'Palo Alto', 'Ventilators', 90, '2021-03-31');","completion":"SELECT equipment, MAX(quantity) as max_quantity FROM medical_equipment GROUP BY equipment ORDER BY max_quantity DESC LIMIT 1;"}
{"prompt":"What is the minimum and maximum funding amount for companies founded by people from underrepresented communities? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founding_date DATE, founder_community TEXT); INSERT INTO companies (id, name, founding_date, founder_community) VALUES (1, 'CleanTech', '2011-02-14', 'Underrepresented'); INSERT INTO companies (id, name, founding_date, founder_community) VALUES (2, 'CodeUp', '2016-08-07', 'Not Underrepresented'); CREATE TABLE funds (company_id INT, funding_amount INT); INSERT INTO funds (company_id, funding_amount) VALUES (1, 300000); INSERT INTO funds (company_id, funding_amount) VALUES (2, 800000);","completion":"SELECT MIN(funds.funding_amount), MAX(funds.funding_amount) FROM companies JOIN funds ON companies.id = funds.company_id WHERE companies.founder_community = 'Underrepresented';"}
{"prompt":"What are the names of startups that have been acquired and have a female founder? with given SQL schema CREATE TABLE acquisition (id INT, startup_name TEXT, acquired_by TEXT, female_founder BOOLEAN); INSERT INTO acquisition (id, startup_name, acquired_by, female_founder) VALUES (1, 'Acme Inc.', 'Google', true), (2, 'Beta Corp.', 'Microsoft', false), (3, 'Charlie Ltd.', 'Facebook', true);","completion":"SELECT startup_name FROM acquisition WHERE female_founder = true;"}
{"prompt":"How would you insert a new record for a 'Green Thumbs' community garden in the 'Bronx', with an initial water usage of 100 cubic meters? with given SQL schema CREATE TABLE community_gardens (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), water_usage DECIMAL(10,2));","completion":"INSERT INTO community_gardens (id, name, location, water_usage) VALUES (2, 'Green Thumbs', 'Bronx, NY, USA', 100.00);"}
{"prompt":"What is the average area (in hectares) of agroecological projects in 'Asia'? with given SQL schema CREATE TABLE agroecological_projects (id INT, name TEXT, location TEXT, area_ha FLOAT); INSERT INTO agroecological_projects (id, name, location, area_ha) VALUES (1, 'Project A', 'Asia', 1.5), (2, 'Project B', 'Asia', 2.2), (3, 'Project C', 'Africa', 3);","completion":"SELECT AVG(area_ha) FROM agroecological_projects WHERE location = 'Asia';"}
{"prompt":"What is the yield of the top 5 crops in 2021? with given SQL schema CREATE TABLE CropYield (id INT, crop TEXT, year INT, yield REAL);","completion":"SELECT crop, yield FROM (SELECT crop, yield, ROW_NUMBER() OVER (PARTITION BY crop ORDER BY yield DESC) as rn FROM CropYield WHERE year = 2021) sub WHERE rn <= 5;"}
{"prompt":"Which regions have the most successful food justice initiatives? with given SQL schema CREATE TABLE initiatives (region VARCHAR(255), success_score INT); INSERT INTO initiatives (region, success_score) VALUES ('Region4', 82), ('Region5', 91), ('Region6', 78); CREATE VIEW food_justice_initiatives AS SELECT * FROM initiatives WHERE success_score > 75;","completion":"SELECT region FROM food_justice_initiatives"}
{"prompt":"How many 'DigitalAccessibilityEvents' were held in the 'Fall' semester in the 'DigitalAccessibilityEvents' table? with given SQL schema CREATE TABLE DigitalAccessibilityEvents (event_id INT, event_name VARCHAR(255), event_date DATE); INSERT INTO DigitalAccessibilityEvents (event_id, event_name, event_date) VALUES (1001, 'WebAccessibilityWorkshop', '2022-09-15'), (1002, 'AccessibleDocumentTraining', '2022-12-01'), (1003, 'ScreenReaderBasics', '2022-10-10');","completion":"SELECT COUNT(*) FROM DigitalAccessibilityEvents WHERE MONTH(event_date) BETWEEN 9 AND 12;"}
{"prompt":"How many students with physical disabilities have not received any accommodations in the last year? with given SQL schema CREATE TABLE Accommodations (id INT, student VARCHAR(255), date DATE); CREATE TABLE Students (id INT, name VARCHAR(255), age INT, disability VARCHAR(255));","completion":"SELECT COUNT(*) FROM Students LEFT JOIN Accommodations ON Students.id = Accommodations.student WHERE disability = 'physical disability' AND date IS NULL;"}
{"prompt":"What is the total number of disability accommodations requested and approved by month? with given SQL schema CREATE TABLE Accommodation_Requests (Request_ID INT, Request_Date DATE, Accommodation_Type VARCHAR(50), Request_Status VARCHAR(10));","completion":"SELECT DATE_PART('month', Request_Date) as Month, COUNT(*) as Total_Requests FROM Accommodation_Requests WHERE Request_Status = 'Approved' GROUP BY Month ORDER BY Month;"}
{"prompt":"Find the number of marine species and total population in the Indian Ocean. with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(50), region VARCHAR(50), population INT); INSERT INTO marine_species (id, name, region, population) VALUES (1, 'Whale Shark', 'Indian Ocean', 10000); CREATE TABLE regions (id INT, name VARCHAR(50));","completion":"SELECT regions.name, COUNT(marine_species.name), SUM(marine_species.population) FROM marine_species INNER JOIN regions ON marine_species.region = regions.name WHERE regions.name = 'Indian Ocean';"}
{"prompt":"Which decentralized applications had a cumulative transaction volume greater than $10 million in the first half of 2021 in the XYZ blockchain? with given SQL schema CREATE TABLE XYZ_transaction (transaction_hash VARCHAR(255), block_number INT, transaction_index INT, from_address VARCHAR(255), to_address VARCHAR(255), value DECIMAL(18,2), timestamp TIMESTAMP, miner VARCHAR(255)); CREATE TABLE XYZ_contract (contract_address VARCHAR(255), contract_name VARCHAR(255), creator_address VARCHAR(255), creation_timestamp TIMESTAMP);","completion":"SELECT contract_name, SUM(value) AS cumulative_volume FROM XYZ_transaction t JOIN XYZ_contract c ON t.to_address = c.contract_address WHERE timestamp BETWEEN '2021-01-01 00:00:00' AND '2021-06-30 23:59:59' GROUP BY contract_name HAVING SUM(value) > 10000000;"}
{"prompt":"Display the total timber volume and revenue generated from timber sales for each company in the last 3 years, grouped by company, and sorted by the total timber volume in descending order. with given SQL schema CREATE TABLE company (company_id INT, company_name TEXT, PRIMARY KEY (company_id)); CREATE TABLE sale (sale_id INT, company_id INT, year INT, revenue INT, timber_volume INT, PRIMARY KEY (sale_id), FOREIGN KEY (company_id) REFERENCES company(company_id));","completion":"SELECT c.company_name, SUM(s.revenue) AS total_revenue, SUM(s.timber_volume) AS total_timber_volume FROM company c INNER JOIN sale s ON c.company_id = s.company_id WHERE s.year BETWEEN (SELECT MAX(year) - 2 FROM sale) AND (SELECT MAX(year) FROM sale) GROUP BY c.company_name ORDER BY total_timber_volume DESC;"}
{"prompt":"Get the cruelty-free certification status for a list of products. with given SQL schema CREATE TABLE Product (ProductID INT, ProductName VARCHAR(50)); INSERT INTO Product (ProductID, ProductName) VALUES (101, 'Lipstick'), (102, 'Eyeshadow'), (103, 'Blush'), (104, 'Foundation'), (105, 'Mascara'); CREATE TABLE CrueltyFreeCertification (ProductID INT, CertificationDate DATE, Certified BOOLEAN); INSERT INTO CrueltyFreeCertification (ProductID, CertificationDate, Certified) VALUES (101, '2021-08-01', TRUE), (102, '2021-07-15', FALSE), (104, '2021-06-30', TRUE), (105, '2021-05-10', TRUE);","completion":"SELECT p.ProductID, p.ProductName, cfc.Certified FROM Product p LEFT JOIN CrueltyFreeCertification cfc ON p.ProductID = cfc.ProductID;"}
{"prompt":"What is the quarterly sales trend of natural cosmetics in France and Germany? with given SQL schema CREATE TABLE sales (product_id INT, sale_date DATE, region VARCHAR(50), sales INT); INSERT INTO sales (product_id, sale_date, region, sales) VALUES (1, '2021-01-01', 'France', 500), (2, '2021-01-01', 'Germany', 800);","completion":"SELECT region, EXTRACT(QUARTER FROM sale_date) AS quarter, SUM(sales) AS quarterly_sales FROM sales WHERE product_category = 'Natural' AND region IN ('France', 'Germany') GROUP BY region, quarter ORDER BY quarter;"}
{"prompt":"What is the total revenue of Korean skincare products in Q2 2022? with given SQL schema CREATE TABLE Cosmetics_Sales (SaleID int, ProductName varchar(100), SaleDate date, QuantitySold int, Price decimal(5,2), Country varchar(50)); INSERT INTO Cosmetics_Sales (SaleID, ProductName, SaleDate, QuantitySold, Price, Country) VALUES (3, 'Korean BB Cream', '2022-04-15', 150, 19.99, 'South Korea'); INSERT INTO Cosmetics_Sales (SaleID, ProductName, SaleDate, QuantitySold, Price, Country) VALUES (4, 'Korean Face Mask', '2022-05-20', 200, 12.99, 'South Korea');","completion":"SELECT SUM(QuantitySold * Price) FROM Cosmetics_Sales WHERE Country = 'South Korea' AND SaleDate >= '2022-04-01' AND SaleDate <= '2022-06-30';"}
{"prompt":"How many artists are from each country? with given SQL schema CREATE TABLE artists (id INT, name VARCHAR(50), country VARCHAR(20)); INSERT INTO artists (id, name, country) VALUES (1, 'Artist 1', 'USA'), (2, 'Artist 2', 'Canada'), (3, 'Artist 3', 'Mexico'), (4, 'Artist 4', 'USA'), (5, 'Artist 5', 'Canada');","completion":"SELECT country, COUNT(*) FROM artists GROUP BY country;"}
{"prompt":"Which artists have performed at Jazzville during 2020? with given SQL schema CREATE TABLE Artists (ArtistID int, ArtistName varchar(100)); INSERT INTO Artists (ArtistID, ArtistName) VALUES (1, 'John Coltrane'), (2, 'Miles Davis'); CREATE TABLE Venues (VenueID int, VenueName varchar(100)); INSERT INTO Venues (VenueID, VenueName) VALUES (1, 'Jazzville'); CREATE TABLE Performances (PerformanceID int, ArtistID int, VenueID int, PerformanceDate date); INSERT INTO Performances (PerformanceID, ArtistID, VenueID, PerformanceDate) VALUES (1, 1, 1, '2020-01-01'), (2, 2, 1, '2019-12-31');","completion":"SELECT Artists.ArtistName FROM Artists INNER JOIN Performances ON Artists.ArtistID = Performances.ArtistID INNER JOIN Venues ON Performances.VenueID = Venues.VenueID WHERE Venues.VenueName = 'Jazzville' AND YEAR(PerformanceDate) = 2020;"}
{"prompt":"What is the maximum budget spent on peacekeeping operations by each department? with given SQL schema CREATE TABLE DepartmentPeacekeeping (id INT, department VARCHAR(50), budget INT);","completion":"SELECT department, MAX(budget) FROM DepartmentPeacekeeping GROUP BY department;"}
{"prompt":"Add a new circular economy record with ID 4, name 'Circular Economy D', type 'Recycling' with given SQL schema CREATE SCHEMA manufacturing;CREATE TABLE circular_economy (id INT PRIMARY KEY, name TEXT, type TEXT);INSERT INTO circular_economy (id, name, type) VALUES (1, 'Circular Economy A', 'Reuse'); INSERT INTO circular_economy (id, name, type) VALUES (2, 'Circular Economy B', 'Reduce'); INSERT INTO circular_economy (id, name, type) VALUES (3, 'Circular Economy C', 'Repurpose');","completion":"INSERT INTO circular_economy (id, name, type) VALUES (4, 'Circular Economy D', 'Recycling');"}
{"prompt":"What is the number of days where waste production was over 500? with given SQL schema CREATE TABLE waste (factory VARCHAR(50), date DATE, waste_amount INT); INSERT INTO waste (factory, date, waste_amount) VALUES ('factory1', '2021-01-01', 500), ('factory1', '2021-01-02', 600);","completion":"SELECT COUNT(*) FROM waste WHERE waste_amount > 500;"}
{"prompt":"What is the most common diagnosis in 'RuralHealthFacility3'? with given SQL schema CREATE TABLE RuralHealthFacility3 (id INT, name TEXT, diagnosis TEXT); INSERT INTO RuralHealthFacility3 (id, name, diagnosis) VALUES (1, 'Alice Johnson', 'Diabetes'), (2, 'Bob Brown', 'Asthma'), (3, 'Charlie Green', 'Diabetes');","completion":"SELECT diagnosis, COUNT(*) AS count FROM RuralHealthFacility3 GROUP BY diagnosis ORDER BY count DESC LIMIT 1;"}
{"prompt":"Update the investment amount to 25000 for the 'clean_water_access' investment with id 2. with given SQL schema CREATE TABLE water_investments (id INT, investment_type VARCHAR(20), investment_amount FLOAT); INSERT INTO water_investments (id, investment_type, investment_amount) VALUES (1, 'clean_water_access', 30000), (2, 'clean_water_access', 20000), (3, 'clean_water_access', 28000);","completion":"UPDATE water_investments SET investment_amount = 25000 WHERE id = 2 AND investment_type = 'clean_water_access';"}
{"prompt":"Delete volunteers who haven't donated in the last 6 months. with given SQL schema CREATE TABLE volunteers (id INT, name VARCHAR(255), last_donation_date DATE); INSERT INTO volunteers (id, name, last_donation_date) VALUES (1, 'Alice', '2021-01-01'), (2, 'Bob', '2021-06-01'), (3, 'Charlie', NULL);","completion":"DELETE FROM volunteers WHERE last_donation_date IS NULL OR last_donation_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What is the least common type of open pedagogy resource used by students in the \"Brookside\" school district? with given SQL schema CREATE TABLE resources (resource_id INT, district VARCHAR(20), type VARCHAR(20)); INSERT INTO resources (resource_id, district, type) VALUES (1, 'Brookside', 'Video'), (2, 'Brookside', 'Article'), (3, 'Brookside', 'Video'), (4, 'Lakeside', 'Podcast'), (5, 'Brookside', 'Podcast');","completion":"SELECT type, COUNT(*) FROM resources WHERE district = 'Brookside' GROUP BY type ORDER BY COUNT(*) ASC LIMIT 1;"}
{"prompt":"What is the total number of professional development programs completed by teachers in the 'Education' database? with given SQL schema CREATE TABLE teacher_development (teacher_id INT, program_completed INT); INSERT INTO teacher_development (teacher_id, program_completed) VALUES (101, 3), (102, 1), (103, 2), (104, 0), (105, 1);","completion":"SELECT SUM(program_completed) FROM teacher_development;"}
{"prompt":"List all carbon pricing policies in the 'carbon_pricing' schema? with given SQL schema CREATE SCHEMA carbon_pricing;CREATE TABLE carbon_policies (policy_name VARCHAR(50), policy_type VARCHAR(50));INSERT INTO carbon_pricing.carbon_policies (policy_name, policy_type) VALUES ('ETS', 'Cap-and-Trade'), ('CarbonTax', 'Tax');","completion":"SELECT policy_name, policy_type FROM carbon_pricing.carbon_policies;"}
{"prompt":"What is the total installed capacity of wind energy generators in the 'renewables' schema, grouped by manufacturer and ordered by capacity in descending order, with a minimum capacity of 50 MW? with given SQL schema CREATE SCHEMA renewables; CREATE TABLE wind_energy (id INT, manufacturer VARCHAR(50), capacity FLOAT); INSERT INTO wind_energy (id, manufacturer, capacity) VALUES (1, 'Vestas', 75.5), (2, 'Siemens Gamesa', 80.2), (3, 'GE Renewable Energy', 65.8), (4, 'Goldwind', 52.1), (5, 'Enercon', 70.6);","completion":"SELECT manufacturer, SUM(capacity) as total_capacity FROM renewables.wind_energy GROUP BY manufacturer HAVING total_capacity >= 50 ORDER BY total_capacity DESC;"}
{"prompt":"How many wells are in the 'Well_Status' table with a status of 'Active'? with given SQL schema CREATE TABLE Well_Status (Well_ID VARCHAR(10), Status VARCHAR(10)); INSERT INTO Well_Status (Well_ID, Status) VALUES ('W001', 'Active'), ('W002', 'Inactive');","completion":"SELECT COUNT(*) FROM Well_Status WHERE Status = 'Active';"}
{"prompt":"List all unique fields from the 'geology' and 'infrastructure' tables. with given SQL schema CREATE TABLE geology (well_id INT, rock_type VARCHAR(50)); CREATE TABLE infrastructure (well_id INT, platform_type VARCHAR(50));","completion":"SELECT field FROM (SELECT 'geology' as table_name, column_name as field FROM information_schema.columns WHERE table_name = 'geology' UNION ALL SELECT 'infrastructure' as table_name, column_name as field FROM information_schema.columns WHERE table_name = 'infrastructure') as subquery;"}
{"prompt":"What is the average age of children in the refugee_support program who have been relocated to France? with given SQL schema CREATE TABLE refugee_support (child_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), country VARCHAR(50)); INSERT INTO refugee_support (child_id, name, age, gender, country) VALUES (1, 'John Doe', 12, 'Male', 'Syria'), (2, 'Jane Doe', 15, 'Female', 'Afghanistan');","completion":"SELECT AVG(age) FROM refugee_support WHERE country = 'France';"}
{"prompt":"How many digital divide initiatives were completed in the last 3 years in Asia? with given SQL schema CREATE TABLE Digital_Divide_Initiatives_Year (Year INT, Initiatives INT);","completion":"SELECT SUM(Initiatives) FROM Digital_Divide_Initiatives_Year WHERE Year BETWEEN 2019 AND 2021;"}
{"prompt":"What is the minimum fare for a route in the 'north' region with wheelchair accessibility? with given SQL schema CREATE TABLE Routes (id INT, region VARCHAR(10), wheelchair_accessible BOOLEAN, fare DECIMAL(5,2)); INSERT INTO Routes (id, region, wheelchair_accessible, fare) VALUES (1, 'north', true, 10.00), (2, 'north', true, 15.00), (3, 'south', true, 7.00);","completion":"SELECT MIN(Routes.fare) FROM Routes WHERE Routes.region = 'north' AND Routes.wheelchair_accessible = true;"}
{"prompt":"What was the total revenue for each vehicle type in January 2021? with given SQL schema CREATE TABLE vehicle_maintenance (id INT, vehicle_type VARCHAR(20), maintenance_date DATE, cost FLOAT); INSERT INTO vehicle_maintenance (id, vehicle_type, maintenance_date, cost) VALUES (1, 'Bus', '2021-01-05', 500), (2, 'Tram', '2021-01-07', 800), (3, 'Train', '2021-01-09', 1200);","completion":"SELECT vehicle_type, SUM(cost) as total_revenue FROM vehicle_maintenance WHERE maintenance_date BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY vehicle_type;"}
{"prompt":"Which sustainable material has the highest average order quantity? with given SQL schema CREATE TABLE materials (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO materials (id, name, type) VALUES (1, 'cotton', 'sustainable'), (2, 'polyester', 'unsustainable');   CREATE TABLE order_items (id INT, material_id INT, order_quantity INT); INSERT INTO order_items (id, material_id, order_quantity) VALUES (1, 1, 100), (2, 2, 150);","completion":"SELECT AVG(order_quantity) FROM order_items INNER JOIN materials ON order_items.material_id = materials.id WHERE materials.type = 'sustainable' GROUP BY materials.name ORDER BY AVG(order_quantity) DESC LIMIT 1;"}
{"prompt":"Create a new table 'sustainability_metrics' to store the percentage of eco-friendly materials and water usage for each country with given SQL schema CREATE TABLE materials (material_id INT PRIMARY KEY, eco_friendly BOOLEAN, country VARCHAR(100), water_usage INT);","completion":"CREATE TABLE sustainability_metrics (country VARCHAR(100) PRIMARY KEY, eco_friendly_percentage DECIMAL(5, 2), water_usage_avg INT);"}
{"prompt":"What was the average financial wellbeing score for customers of InclusiveFinance in Q3 2021? with given SQL schema CREATE TABLE InclusiveFinance (id INT, customer_id INT, score INT, score_date DATE); INSERT INTO InclusiveFinance (id, customer_id, score, score_date) VALUES (1, 3001, 80, '2021-07-01');","completion":"SELECT AVG(score) FROM InclusiveFinance WHERE QUARTER(score_date) = 3 AND YEAR(score_date) = 2021;"}
{"prompt":"How many volunteers signed up in each region in 2021? with given SQL schema CREATE TABLE volunteers (id INT, name TEXT, region TEXT, signup_date DATE); INSERT INTO volunteers (id, name, region, signup_date) VALUES (1, 'Alice', 'North', '2021-02-03'), (2, 'Bob', 'South', '2021-05-05'), (3, 'Charlie', 'East', '2020-12-12');","completion":"SELECT region, COUNT(*) FROM volunteers WHERE YEAR(signup_date) = 2021 GROUP BY region;"}
{"prompt":"What is the success rate of CRISPR gene editing for gene 'XYZ'? with given SQL schema CREATE TABLE crispr (experiment_id INT, gene_name VARCHAR(10), success_rate FLOAT); INSERT INTO crispr (experiment_id, gene_name, success_rate) VALUES (1, 'XYZ', 0.85), (2, 'XYZ', 0.92), (3, 'XYZ', 0.78);","completion":"SELECT AVG(success_rate) FROM crispr WHERE gene_name = 'XYZ'"}
{"prompt":"Insert a new student into the graduate_students table with given SQL schema CREATE TABLE graduate_students (id INT, name TEXT, department TEXT); INSERT INTO graduate_students (id, name, department) VALUES (1, 'Alice', 'CS'), (2, 'Bob', 'Physics');","completion":"INSERT INTO graduate_students (id, name, department) VALUES (3, 'Charlie', 'Math');"}
{"prompt":"How many mental health parity complaints were filed by race in the last 6 months? with given SQL schema CREATE TABLE mental_health_parity_complaints (complaint_id INT, complaint_date DATE, race VARCHAR(20)); INSERT INTO mental_health_parity_complaints (complaint_id, complaint_date, race) VALUES (1, '2021-07-01', 'Asian'), (2, '2021-03-15', 'Black'), (3, '2021-01-01', 'Hispanic');","completion":"SELECT race, COUNT(*) as num_complaints FROM mental_health_parity_complaints WHERE complaint_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY race;"}
{"prompt":"What is the average number of virtual tours taken per user in Europe? with given SQL schema CREATE TABLE user_activity(activity_id INT, user_id INT, site_name TEXT, region TEXT, num_tours INT);","completion":"SELECT region, AVG(num_tours) FROM (SELECT user_id, region, AVG(num_tours) AS num_tours FROM user_activity WHERE region = 'Europe' GROUP BY user_id, region) subquery GROUP BY region;"}
{"prompt":"What is the total number of sustainable tourism certifications issued in Brazil? with given SQL schema CREATE TABLE TourismCertifications (certification_id INT, certification_name TEXT, country TEXT, sustainability_focus TEXT); INSERT INTO TourismCertifications (certification_id, certification_name, country, sustainability_focus) VALUES (1, 'Brazil Eco-Travel', 'Brazil', 'Sustainable Tourism'); INSERT INTO TourismCertifications (certification_id, certification_name, country, sustainability_focus) VALUES (2, 'Green Tourism Brazil', 'Brazil', 'Sustainable Tourism');","completion":"SELECT COUNT(*) FROM TourismCertifications WHERE country = 'Brazil' AND sustainability_focus = 'Sustainable Tourism';"}
{"prompt":"What is the average rating of hotels that have a spa and a gym? with given SQL schema CREATE TABLE hotel_ratings (id INT, hotel_id INT, rating INT); INSERT INTO hotel_ratings (id, hotel_id, rating) VALUES (1, 101, 4); INSERT INTO hotel_amenities (id, hotel_id, amenity) VALUES (1, 101, 'Spa'), (2, 101, 'Gym');","completion":"SELECT AVG(hr.rating) as avg_rating FROM hotel_ratings hr INNER JOIN hotel_amenities ha ON hr.hotel_id = ha.hotel_id WHERE ha.amenity IN ('Spa', 'Gym') GROUP BY hr.hotel_id;"}
{"prompt":"What is the number of language preservation programs in African countries? with given SQL schema CREATE TABLE LanguagePreservationPrograms (country VARCHAR(50), programs INT); INSERT INTO LanguagePreservationPrograms (country, programs) VALUES ('Nigeria', 20), ('Kenya', 30), ('Egypt', 25), ('SouthAfrica', 35), ('Ethiopia', 22);","completion":"SELECT COUNT(programs) FROM LanguagePreservationPrograms WHERE country IN ('Nigeria', 'Kenya', 'Egypt', 'SouthAfrica', 'Ethiopia') AND region = 'Africa';"}
{"prompt":"What are the names and maintenance frequencies (in years) for each dam in the 'dams' and 'dam_maintenance_frequencies' tables? with given SQL schema CREATE TABLE dams (id INT, name VARCHAR(255), location VARCHAR(255)); CREATE TABLE dam_maintenance_frequencies (dam_id INT, frequency INT);","completion":"SELECT d.name, dmf.frequency as maintenance_frequency FROM dams d INNER JOIN dam_maintenance_frequencies dmf ON d.id = dmf.dam_id;"}
{"prompt":"What is the average construction cost for bridges in California? with given SQL schema CREATE TABLE Bridge (id INT, name TEXT, location TEXT, cost FLOAT, build_date DATE); INSERT INTO Bridge (id, name, location, cost, build_date) VALUES (1, 'Golden Gate Bridge', 'San Francisco, CA', 1500000000, '1937-05-27');","completion":"SELECT AVG(cost) FROM Bridge WHERE location LIKE '%CA%' AND type = 'Bridge';"}
{"prompt":"What is the minimum 'resilience_score' of bridges in the 'South America' region that were built before 1990? with given SQL schema CREATE TABLE bridges (id INT, name TEXT, region TEXT, resilience_score FLOAT, year_built INT); INSERT INTO bridges (id, name, region, resilience_score, year_built) VALUES (1, 'Golden Gate Bridge', 'West Coast', 85.2, 1937), (2, 'Brooklyn Bridge', 'East Coast', 76.3, 1883), (3, 'Bay Bridge', 'West Coast', 90.1, 1936), (4, 'Chenab Bridge', 'South Asia', 89.6, 2010), (5, 'Maputo Bay Bridge', 'Africa', 72.8, 1982), (6, 'Sydney Harbour Bridge', 'Oceania', 87.3, 1932), (7, 'Millau Viaduct', 'Europe', 95.1, 2004), (8, 'Gran Puente Centenario', 'South America', 83.5, 1976);","completion":"SELECT MIN(resilience_score) FROM bridges WHERE region = 'South America' AND year_built < 1990;"}
{"prompt":"What is the total number of bridges and tunnels in the Southeast and their respective average maintenance costs? with given SQL schema CREATE TABLE BridgeTunnel (id INT, type VARCHAR(10), region VARCHAR(20), cost FLOAT); INSERT INTO BridgeTunnel (id, type, region, cost) VALUES (1, 'Bridge', 'Southeast', 20000.0), (2, 'Tunnel', 'Southeast', 50000.0), (3, 'Bridge', 'Southeast', 30000.0);","completion":"SELECT type, COUNT(*), AVG(cost) as avg_cost FROM BridgeTunnel WHERE region = 'Southeast' GROUP BY type;"}
{"prompt":"Show the number of cases by justice category and resolution status for 2021 with given SQL schema CREATE TABLE CasesByJusticeCategory (Year INT, Category TEXT, Resolution TEXT, Cases INT); INSERT INTO CasesByJusticeCategory (Year, Category, Resolution, Cases) VALUES (2021, 'Civil', 'Resolved', 100), (2021, 'Civil', 'Unresolved', 50), (2021, 'Criminal', 'Resolved', 200), (2021, 'Criminal', 'Unresolved', 100);","completion":"SELECT Category, Resolution, SUM(Cases) FROM CasesByJusticeCategory WHERE Year = 2021 GROUP BY Category, Resolution;"}
{"prompt":"What is the maximum number of court cases resolved through restorative justice in Australia? with given SQL schema CREATE TABLE cases (case_id INT, case_type VARCHAR(20), resolution_date DATE, country VARCHAR(20)); INSERT INTO cases (case_id, case_type, resolution_date, country) VALUES (1, 'Restorative Justice', '2021-01-01', 'Australia'); INSERT INTO cases (case_id, case_type, resolution_date, country) VALUES (2, 'Traditional', '2020-01-01', 'Australia');","completion":"SELECT case_type, MAX(case_id) FROM cases WHERE country = 'Australia' AND case_type = 'Restorative Justice';"}
{"prompt":"Delete the 'OceanFloorMapping' table record for the 'Mariana Trench' with given SQL schema CREATE TABLE OceanFloorMapping (id INT, location VARCHAR(50), depth INT); INSERT INTO OceanFloorMapping (id, location, depth) VALUES (1, 'Mariana Trench', 10000), (2, 'Sunda Trench', 8000), (3, 'Philippine Trench', 6500), (4, 'Kermadec Trench', 10000), (5, 'Tonga Trench', 10820);","completion":"DELETE FROM OceanFloorMapping WHERE location = 'Mariana Trench';"}
{"prompt":"How many times has the most popular burger been sold? with given SQL schema CREATE TABLE menu (menu_id INT, menu_name TEXT, menu_type TEXT, price DECIMAL, daily_sales INT); CREATE TABLE burger_sales (burger_id INT, burger_name TEXT, total_sales INT);","completion":"SELECT MAX(total_sales) FROM burger_sales;"}
{"prompt":"What is the total cost of vegetarian meals served in the month of September 2021? with given SQL schema CREATE TABLE Menu (menu_id INT, menu_name VARCHAR(20), is_vegetarian BOOLEAN); INSERT INTO Menu (menu_id, menu_name, is_vegetarian) VALUES (1, 'Breakfast', TRUE), (2, 'Lunch', FALSE), (3, 'Dinner', FALSE); CREATE TABLE Menu_Orders (order_id INT, menu_id INT, order_date DATE); INSERT INTO Menu_Orders (order_id, menu_id, order_date) VALUES (1, 1, '2021-09-01'), (2, 2, '2021-09-02'), (3, 1, '2021-09-03'), (4, 3, '2021-09-04'); CREATE TABLE Inventory (inventory_id INT, menu_id INT, inventory_cost FLOAT); INSERT INTO Inventory (inventory_id, menu_id, inventory_cost) VALUES (1, 1, 5.0), (2, 2, 3.5), (3, 1, 8.0), (4, 3, 7.0);","completion":"SELECT SUM(Inventory.inventory_cost) FROM Inventory INNER JOIN Menu ON Inventory.menu_id = Menu.menu_id INNER JOIN Menu_Orders ON Inventory.menu_id = Menu_Orders.menu_id WHERE Menu.is_vegetarian = TRUE AND MONTH(Menu_Orders.order_date) = 9 AND YEAR(Menu_Orders.order_date) = 2021;"}
{"prompt":"Which mining sites have experienced a significant increase in water usage over the past year? with given SQL schema CREATE TABLE mining_sites (id INT, name VARCHAR(255), water_usage INT); INSERT INTO mining_sites (id, name, water_usage) VALUES (1, 'Site A', 1000), (2, 'Site B', 1200), (3, 'Site C', 800); CREATE TABLE water_usage_history (site_id INT, date DATE, water_used INT); INSERT INTO water_usage_history (site_id, date, water_used) VALUES (1, '2021-01-01', 50), (1, '2021-02-01', 60), (2, '2021-01-01', 40), (2, '2021-02-01', 70), (3, '2021-01-01', 80), (3, '2021-02-01', 90);","completion":"SELECT ms.name, (ms.water_usage - SUM(wuh.water_used)) AS water_usage_diff FROM mining_sites ms JOIN water_usage_history wuh ON ms.id = wuh.site_id WHERE wuh.date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY ms.name HAVING water_usage_diff < 0;"}
{"prompt":"How many customer complaints were received for mobile and broadband services in each state? with given SQL schema CREATE TABLE complaints (complaint_id INT, service VARCHAR(10), state VARCHAR(25)); INSERT INTO complaints (complaint_id, service, state) VALUES (1, 'Mobile', 'California'), (2, 'Broadband', 'Texas');","completion":"SELECT service, state, COUNT(*) FROM complaints GROUP BY service, state;"}
{"prompt":"What is the number of concerts with more than 10,000 attendees and featuring artists from underrepresented communities? with given SQL schema CREATE TABLE Concerts (concert_id INT, concert_name TEXT, attendees INT, artist_id INT); INSERT INTO Concerts (concert_id, concert_name, attendees, artist_id) VALUES (1, 'Lollapalooza', 30000, 1), (2, 'Bonnaroo', 25000, 2), (3, 'Firefly', 15000, 3); CREATE TABLE Artists (artist_id INT, artist_name TEXT, underrepresented_community BOOLEAN); INSERT INTO Artists (artist_id, artist_name, underrepresented_community) VALUES (1, 'Billie Eilish', TRUE), (2, 'Taylor Swift', FALSE), (3, 'Bad Bunny', TRUE);","completion":"SELECT COUNT(c.concert_id) FROM Concerts c JOIN Artists a ON c.artist_id = a.artist_id WHERE c.attendees > 10000 AND a.underrepresented_community = TRUE;"}
{"prompt":"What is the total revenue for concerts held in Canada? with given SQL schema CREATE TABLE concerts (id INT PRIMARY KEY, artist_id INT, venue INT, date DATE, revenue DECIMAL(10,2)); INSERT INTO concerts (id, artist_id, venue, date, revenue) VALUES (1, 101, 201, '2022-06-01', 50000.00), (2, 102, 202, '2022-07-01', 75000.00), (3, 103, 203, '2022-08-01', 60000.00); CREATE TABLE venues (id INT PRIMARY KEY, venue_name VARCHAR(255), city VARCHAR(255), country VARCHAR(255), capacity INT); INSERT INTO venues (id, venue_name, city, country, capacity) VALUES (201, 'The Forum', 'Los Angeles', 'USA', 18000), (202, 'Scotiabank Arena', 'Toronto', 'Canada', 19000), (203, 'O2 Arena', 'London', 'UK', 20000);","completion":"SELECT SUM(revenue) FROM concerts c INNER JOIN venues v ON c.venue = v.id WHERE v.country = 'Canada';"}
{"prompt":"What is the minimum donation amount for each month? with given SQL schema CREATE TABLE donations (id INT, date DATE, amount FLOAT); INSERT INTO donations (id, date, amount) VALUES (1, '2022-01-01', 100.00), (2, '2022-02-01', 200.00), (3, '2022-01-15', 50.00);","completion":"SELECT EXTRACT(MONTH FROM date), MIN(amount) FROM donations GROUP BY EXTRACT(MONTH FROM date);"}
{"prompt":"Delete all the transactions for the 'VIP' type that occurred before 2020-01-01 from the 'transactions' table. with given SQL schema CREATE TABLE transactions (transaction_id INT, player_id INT, transaction_type VARCHAR(10), transaction_date DATE, amount DECIMAL(5,2)); INSERT INTO transactions VALUES (1, 100, 'VIP', '2019-12-31', 100); INSERT INTO transactions VALUES (2, 101, 'VIP', '2020-02-01', 200); INSERT INTO transactions VALUES (3, 102, 'VIP', '2019-12-30', 150);","completion":"DELETE FROM transactions WHERE transaction_type = 'VIP' AND transaction_date < '2020-01-01';"}
{"prompt":"How many distinct mining locations supplied Dysprosium to the European market in 2018? with given SQL schema CREATE TABLE supply (element VARCHAR(10), year INT, location VARCHAR(10), quantity INT); INSERT INTO supply (element, year, location, quantity) VALUES ('Dysprosium', 2018, 'Mine A', 250), ('Dysprosium', 2018, 'Mine B', 300), ('Dysprosium', 2018, 'Mine C', 350);","completion":"SELECT COUNT(DISTINCT location) FROM supply WHERE element = 'Dysprosium' AND year = 2018;"}
{"prompt":"Display the names and average co-owner percentages for all properties in the 'property_coownership' table where the co-owner percentage is greater than 60. with given SQL schema CREATE TABLE property_coownership (property_id INT, owner VARCHAR(255), percentage INT); INSERT INTO property_coownership (property_id, owner, percentage) VALUES (1, 'Mohammed', 70), (1, 'Fatima', 30), (2, 'Jamal', 65), (2, 'Aisha', 35), (3, 'Ali', 75), (3, 'Khadija', 25);","completion":"SELECT owner, AVG(percentage) FROM property_coownership WHERE percentage > 60 GROUP BY owner;"}
{"prompt":"How many properties have more than 3 co-owners in the co-ownership program? with given SQL schema CREATE TABLE extended_co_ownership (property_id INT, co_owner_count INT); INSERT INTO extended_co_ownership (property_id, co_owner_count) VALUES (1001, 2), (1002, 3), (1003, 1), (1004, 5), (1005, 4), (1006, 2);","completion":"SELECT COUNT(*) FROM extended_co_ownership WHERE co_owner_count > 3;"}
{"prompt":"How many products were sold by women-owned businesses in Africa in Q3 2021? with given SQL schema CREATE TABLE ProductSales (product_id INT, sale_date DATE, women_owned_business BOOLEAN);","completion":"SELECT COUNT(*) FROM ProductSales WHERE sale_date BETWEEN '2021-07-01' AND '2021-09-30' AND women_owned_business = TRUE AND country = 'Africa';"}
{"prompt":"List the names and total sales of vendors in the circular supply chain with sales over $10,000. with given SQL schema CREATE TABLE vendors (vendor_id INT, vendor_name TEXT); INSERT INTO vendors (vendor_id, vendor_name) VALUES (1, 'Green Vendors'); CREATE TABLE sales (sale_id INT, sale_date DATE, vendor_id INT, amount DECIMAL(5,2)); INSERT INTO sales (sale_id, sale_date, vendor_id, amount) VALUES (1, '2022-01-01', 1, 12000);","completion":"SELECT vendors.vendor_name, SUM(sales.amount) FROM vendors JOIN sales ON vendors.vendor_id = sales.vendor_id GROUP BY vendors.vendor_name HAVING SUM(sales.amount) > 10000;"}
{"prompt":"Show total research funding for each astrophysics project. with given SQL schema CREATE TABLE astrophysics_projects (project_id INT, name VARCHAR(50), research_funding DECIMAL(10,2));","completion":"SELECT name, SUM(research_funding) FROM astrophysics_projects GROUP BY name;"}
{"prompt":"What is the success rate of missions launched by SpaceCorp? with given SQL schema CREATE TABLE space_missions (mission_id INT, mission_name VARCHAR(50), launch_date DATE, return_date DATE, mission_company VARCHAR(50));","completion":"SELECT 100.0 * SUM(CASE WHEN return_date IS NOT NULL THEN 1 ELSE 0 END) \/ COUNT(*) AS success_rate FROM space_missions WHERE mission_company = 'SpaceCorp';"}
{"prompt":"What is the maximum distance traveled by an electric vehicle in a single trip, grouped by vehicle model? with given SQL schema CREATE TABLE Trips (trip_id INT, vehicle_id INT, distance FLOAT); CREATE TABLE ElectricVehicleModels (vehicle_id INT, vehicle_model TEXT);","completion":"SELECT evm.vehicle_model, MAX(trips.distance) AS max_distance_traveled FROM Trips trips INNER JOIN ElectricVehicleModels evm ON trips.vehicle_id = evm.vehicle_id GROUP BY 1;"}
{"prompt":"What is the maximum trip distance for public transportation in Sydney? with given SQL schema CREATE TABLE public_transportation (trip_id INT, trip_distance FLOAT, city VARCHAR(50)); INSERT INTO public_transportation (trip_id, trip_distance, city) VALUES (1, 23.5, 'Sydney'), (2, 34.7, 'Sydney'), (3, 12.8, 'Sydney');","completion":"SELECT MAX(trip_distance) FROM public_transportation WHERE city = 'Sydney';"}
{"prompt":"What is the total CO2 savings of public transportation in New York in a year? with given SQL schema CREATE TABLE public_transportation (transport_id INT, ride_id INT, start_time TIMESTAMP, end_time TIMESTAMP, co2_savings INT);","completion":"SELECT SUM(co2_savings) FROM public_transportation WHERE YEAR(start_time) = 2022 AND city = 'New York';"}
{"prompt":"What is the total quantity of unsold garments for each manufacturer based in 'Italy' or 'Spain'? with given SQL schema CREATE TABLE manufacturers (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE garments (id INT PRIMARY KEY, manufacturer_id INT, quantity_manufactured INT, quantity_sold INT);","completion":"SELECT m.name, SUM(g.quantity_manufactured - g.quantity_sold) as total_unsold_quantity FROM manufacturers m JOIN garments g ON m.id = g.manufacturer_id WHERE m.country IN ('Italy', 'Spain') GROUP BY m.name;"}
{"prompt":"How many policies are there for each Underwriting team in NY? with given SQL schema CREATE TABLE Policies (PolicyID INT, Team VARCHAR(20), State VARCHAR(20)); INSERT INTO Policies VALUES (1, 'Team A', 'New York'), (2, 'Team B', 'California'), (3, 'Team A', 'Texas'), (4, 'Team C', 'New York');","completion":"SELECT Team, COUNT(*) FROM Policies WHERE State = 'New York' GROUP BY Team;"}
{"prompt":"What is the total number of policies issued per agent in the 'Eastern' region? with given SQL schema CREATE TABLE Agents (AgentID INT, AgentRegion VARCHAR(10)); INSERT INTO Agents (AgentID, AgentRegion) VALUES (1, 'Eastern'), (2, 'Western'), (3, 'Eastern'); CREATE TABLE Policies (PolicyID INT, AgentID INT); INSERT INTO Policies (PolicyID, AgentID) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 1);","completion":"SELECT Agents.AgentRegion, COUNT(Policies.PolicyID) AS TotalPolicies FROM Agents INNER JOIN Policies ON Agents.AgentID = Policies.AgentID WHERE Agents.AgentRegion = 'Eastern' GROUP BY Agents.AgentID;"}
{"prompt":"What are the total number of labor rights violations in the 'manufacturing' sector and the 'technology' sector? with given SQL schema CREATE TABLE labor_rights (id INT, sector VARCHAR(20), num_violations INT); INSERT INTO labor_rights (id, sector, num_violations) VALUES (1, 'manufacturing', 5), (2, 'technology', 10), (3, 'manufacturing', 8);","completion":"SELECT sector, SUM(num_violations) as total_violations FROM labor_rights WHERE sector IN ('manufacturing', 'technology') GROUP BY sector;"}
{"prompt":"List the names and registration countries of all vessels. with given SQL schema CREATE TABLE Vessels (ID VARCHAR(10), Name VARCHAR(20), Type VARCHAR(20), Registered_Country VARCHAR(20)); INSERT INTO Vessels (ID, Name, Type, Registered_Country) VALUES ('1', 'Vessel A', 'Cargo', 'USA'), ('2', 'Vessel B', 'Tanker', 'Canada'), ('3', 'Vessel C', 'Bulk Carrier', 'Mexico'), ('4', 'Vessel D', 'Container', 'Brazil');","completion":"SELECT Vessels.Name, Vessels.Registered_Country FROM Vessels;"}
{"prompt":"What is the average length of stay in minutes for returning visitors from the Asia-Pacific region? with given SQL schema CREATE TABLE Visitors (VisitorID INT, Region VARCHAR(255), IsReturning BOOLEAN, LengthOfStay INT); INSERT INTO Visitors (VisitorID, Region, IsReturning, LengthOfStay) VALUES (1, 'Asia-Pacific', true, 120); INSERT INTO Visitors (VisitorID, Region, IsReturning, LengthOfStay) VALUES (2, 'Europe', false, 90); INSERT INTO Visitors (VisitorID, Region, IsReturning, LengthOfStay) VALUES (3, 'Asia-Pacific', true, 150);","completion":"SELECT AVG(V.LengthOfStay) as AverageLengthOfStay FROM Visitors V WHERE V.Region = 'Asia-Pacific' AND V.IsReturning = true;"}
{"prompt":"Add a new workout by 'John Doe' at 'Greenwich' gym with given SQL schema CREATE TABLE gyms (gym_id INT, name TEXT, city TEXT); INSERT INTO gyms (gym_id, name, city) VALUES (1, 'Park City', 'New York'), (2, 'Central Park', 'New York'), (3, 'Greenwich', 'London'); CREATE TABLE members (member_id INT, name TEXT, age INT, gender TEXT); INSERT INTO members (member_id, name, age, gender) VALUES (1, 'John Doe', 30, 'Male'), (2, 'Jane Doe', 28, 'Female'); CREATE TABLE workouts (workout_id INT, member_id INT, gym_id INT, workout_date DATE, calories INT);","completion":"INSERT INTO workouts (workout_id, member_id, gym_id, workout_date, calories) VALUES (4, 1, 3, '2022-01-04', 600);"}
{"prompt":"How many members have a membership type of 'Premium'? with given SQL schema CREATE TABLE Members (MemberID INT, Age INT, Gender VARCHAR(10), MembershipType VARCHAR(20)); INSERT INTO Members (MemberID, Age, Gender, MembershipType) VALUES (1, 35, 'Female', 'Premium'), (2, 45, 'Male', 'Basic'), (3, 30, 'Female', 'Premium');","completion":"SELECT COUNT(*) FROM Members WHERE MembershipType = 'Premium';"}
{"prompt":"What is the average heart rate for users from the United States, partitioned by gender? with given SQL schema CREATE TABLE user_data (id INT, user_name TEXT, country TEXT, gender TEXT, heart_rate INT); INSERT INTO user_data (id, user_name, country, gender, heart_rate) VALUES (1, 'John Doe', 'USA', 'Male', 75), (2, 'Jane Smith', 'USA', 'Female', 80);","completion":"SELECT country, gender, AVG(heart_rate) as avg_heart_rate FROM user_data WHERE country = 'USA' GROUP BY country, gender;"}
{"prompt":"Identify the organizations that have not conducted any algorithmic fairness evaluations. with given SQL schema CREATE TABLE organizations (id INT, name TEXT); INSERT INTO organizations (id, name) VALUES (1, 'Org1'), (2, 'Org2'), (3, 'Org3'); CREATE TABLE evaluations (id INT, organization_id INT, name TEXT); INSERT INTO evaluations (id, organization_id, name) VALUES (1, 1, 'FairnessEval1'), (2, 1, 'FairnessEval2'), (3, 2, 'FairnessEval3');","completion":"SELECT organizations.name FROM organizations LEFT JOIN evaluations ON organizations.id = evaluations.organization_id WHERE evaluations.id IS NULL;"}
{"prompt":"List the creative AI applications with their safety scores and total citations from the 'AI_Fairness' schema, sorted by citations in descending order. with given SQL schema CREATE SCHEMA AI_Fairness;CREATE TABLE Creative_AI (app_id INT, safety_score FLOAT, citations INT); INSERT INTO AI_Fairness.Creative_AI (app_id, safety_score, citations) VALUES (1, 0.8, 10), (2, 0.9, 20), (3, 0.7, 15);","completion":"SELECT app_id, safety_score, SUM(citations) AS total_citations FROM AI_Fairness.Creative_AI GROUP BY app_id ORDER BY total_citations DESC;"}
{"prompt":"What is the maximum training time for models used in AI safety applications? with given SQL schema CREATE TABLE training_data (model_id INT, model_name VARCHAR(50), application VARCHAR(50), training_time FLOAT);","completion":"SELECT MAX(training_time) FROM training_data WHERE application = 'AI safety';"}
{"prompt":"Who are the top 3 contributors to explainable AI research by total word count? with given SQL schema CREATE TABLE if not exists explainable_ai_research (author VARCHAR(255), word_count INT); INSERT INTO explainable_ai_research (author, word_count) VALUES ('Alice', 5000), ('Bob', 3000), ('Carol', 7000), ('Dave', 4000), ('Eve', 6000);","completion":"SELECT author, word_count, RANK() OVER (ORDER BY word_count DESC) as rank FROM explainable_ai_research WHERE rank <= 3;"}
{"prompt":"What is the average farm size in meters for small-scale farmers in the 'rural_development' schema? with given SQL schema CREATE TABLE small_scale_farmers (id INT, name TEXT, location TEXT, farm_size_meters INT); INSERT INTO small_scale_farmers (id, name, location, farm_size_meters) VALUES (1, 'John Doe', 'Village A', 2000), (2, 'Jane Smith', 'Village B', 1500);","completion":"SELECT AVG(farm_size_meters) FROM small_scale_farmers WHERE farm_size_meters < 3000;"}
{"prompt":"Which community development initiatives in Sub-Saharan Africa have the highest economic diversification efforts, and what is the average economic diversification score for these initiatives? with given SQL schema CREATE TABLE Initiatives_SSA (InitiativeID INT, Country VARCHAR(20), Type VARCHAR(20), Score FLOAT); INSERT INTO Initiatives_SSA (InitiativeID, Country, Type, Score) VALUES (1, 'Kenya', 'Education', 0.8), (2, 'Tanzania', 'Healthcare', 0.7), (3, 'Nigeria', 'Agriculture', 0.6), (4, 'South Africa', 'Energy', 0.9), (5, 'Ghana', 'Housing', 0.5), (6, 'Uganda', 'Transportation', 0.7);","completion":"SELECT AVG(Score) as Avg_Score FROM (SELECT Score FROM Initiatives_SSA WHERE Country IN ('Kenya', 'Tanzania', 'Nigeria', 'South Africa', 'Ghana', 'Uganda') AND Type = 'Economic Diversification' ORDER BY Score DESC LIMIT 3) as Subquery;"}
{"prompt":"Insert a new record into the flight_safety table with the following data: flight_number = 'FL456', safety_rating = 'good', last_inspection_date = '2019-12-15' with given SQL schema CREATE TABLE flight_safety (flight_number VARCHAR(50) PRIMARY KEY, safety_rating VARCHAR(20), last_inspection_date DATE);","completion":"INSERT INTO flight_safety (flight_number, safety_rating, last_inspection_date) VALUES ('FL456', 'good', '2019-12-15');"}
{"prompt":"Show the top 2 countries with the highest population, including joined data from the 'countries' table. with given SQL schema CREATE TABLE countries (country VARCHAR(50), population INT); INSERT INTO countries (country, population) VALUES ('China', 1439323776), ('India', 1380004385), ('USA', 331002651), ('Indonesia', 273523615), ('Pakistan', 220892340);","completion":"SELECT country, population FROM countries ORDER BY population DESC LIMIT 2;"}
{"prompt":"What is the average altitude reached by SpaceX's Falcon 9 rocket? with given SQL schema CREATE TABLE Max_Altitude (rocket VARCHAR(50), altitude INT); INSERT INTO Max_Altitude (rocket, altitude) VALUES ('Falcon Heavy', 20000000), ('Falcon 9', 15000000);","completion":"SELECT altitude FROM Max_Altitude WHERE rocket = 'Falcon 9';"}
{"prompt":"What is the maximum cost of a space exploration mission led by the ESA? with given SQL schema CREATE TABLE SpaceExploration (id INT, agency VARCHAR(255), country VARCHAR(255), cost FLOAT, flights INT, year INT); INSERT INTO SpaceExploration VALUES (1, 'NASA', 'USA', 22000000000, 500, 2010), (2, 'ESA', 'Europe', 18000000000, 300, 2015), (3, 'Roscosmos', 'Russia', 15000000000, 400, 2012), (4, 'ISRO', 'India', 7000000000, 100, 2005), (5, 'ESA', 'Europe', 20000000000, 200, 2020);","completion":"SELECT MAX(cost) FROM SpaceExploration WHERE agency = 'ESA';"}
{"prompt":"What is the total number of aircraft manufactured by company 'AeroCorp'? with given SQL schema CREATE TABLE Aircraft (id INT, name VARCHAR(50), manufacturer VARCHAR(50)); INSERT INTO Aircraft (id, name, manufacturer) VALUES (1, 'F-16', 'AeroCorp'), (2, 'F-35', 'AeroCorp'), (3, 'A-10', 'OtherCorp');","completion":"SELECT COUNT(*) FROM Aircraft WHERE manufacturer = 'AeroCorp';"}
{"prompt":"What is the number of aquaculture farms in each country in Europe and their total production? with given SQL schema CREATE TABLE Europe_Aquaculture_Farms (id INT, country VARCHAR(255), production INT); INSERT INTO Europe_Aquaculture_Farms (id, country, production) VALUES (1, 'Norway', 500000), (2, 'United Kingdom', 400000), (3, 'France', 300000), (4, 'Spain', 600000);","completion":"SELECT country, COUNT(*), SUM(production) FROM Europe_Aquaculture_Farms GROUP BY country;"}
{"prompt":"List the names and case numbers of cases in 'cases' table that have no billing records in 'billing' table with given SQL schema CREATE TABLE cases (case_id INT, case_number VARCHAR(50), client_name VARCHAR(50), attorney_id INT); CREATE TABLE billing (billing_id INT, attorney_id INT, client_id INT, hours_billed INT, billing_rate DECIMAL(5,2));","completion":"SELECT cases.case_number, cases.client_name FROM cases LEFT JOIN billing ON cases.client_id = billing.client_id WHERE billing.client_id IS NULL;"}
{"prompt":"Count the number of chemicals in 'chemical_inventory' table with given SQL schema CREATE TABLE chemical_inventory (id INT, chemical_name VARCHAR(50), safety_stock INT);","completion":"SELECT COUNT(chemical_name) FROM chemical_inventory;"}
{"prompt":"Find the top 2 chemical plants with the highest safety violation cost in Japan. with given SQL schema CREATE TABLE chemical_plants (plant_id INT, plant_name VARCHAR(50), country VARCHAR(50), safety_violation_cost DECIMAL(10,2)); INSERT INTO chemical_plants (plant_id, plant_name, country, safety_violation_cost) VALUES (1, 'Plant A', 'Japan', 5000), (2, 'Plant B', 'Japan', 8000), (3, 'Plant C', 'USA', 3000);","completion":"SELECT * FROM (SELECT plant_id, plant_name, safety_violation_cost, ROW_NUMBER() OVER (ORDER BY safety_violation_cost DESC) as rn FROM chemical_plants WHERE country = 'Japan') tmp WHERE rn <= 2;"}
{"prompt":"Delete clinical trial records for a specific drug and region where the outcome is 'failed' and the trial was conducted before 2010-01-01. with given SQL schema CREATE TABLE clinical_trial (trial_id INT, drug_name TEXT, trial_region TEXT, trial_outcome TEXT, trial_date DATE); INSERT INTO clinical_trial (trial_id, drug_name, trial_region, trial_outcome, trial_date) VALUES (1, 'DrugA', 'Europe', 'failed', '2009-12-31'), (2, 'DrugA', 'US', 'successful', '2011-05-01'), (3, 'DrugB', 'Europe', 'successful', '2015-08-12');","completion":"DELETE FROM clinical_trial WHERE drug_name = 'DrugA' AND trial_region = 'Europe' AND trial_outcome = 'failed' AND trial_date < '2010-01-01';"}
{"prompt":"What was the market share of DrugZ in Q3 2021? with given SQL schema CREATE TABLE sales_data (drug_name VARCHAR(100), sales_quantity INT, quarter INT, year INT); INSERT INTO sales_data (drug_name, sales_quantity, quarter, year) VALUES ('DrugX', 1200, 2, 2021), ('DrugY', 800, 2, 2021), ('DrugZ', 1300, 3, 2021), ('DrugW', 950, 3, 2021);","completion":"SELECT (SUM(sales_quantity) FILTER (WHERE drug_name = 'DrugZ') OVER (PARTITION BY year)) * 100.0 \/ NULLIF(SUM(sales_quantity) OVER (PARTITION BY year), 0) AS market_share FROM sales_data WHERE year = 2021 AND quarter = 3;"}
{"prompt":"How many infectious disease cases were reported in Africa? with given SQL schema CREATE TABLE infectious_disease (id INT, disease VARCHAR(50), cases INT, year INT, location VARCHAR(50)); INSERT INTO infectious_disease (id, disease, cases, year, location) VALUES (1, 'Malaria', 500, 2020, 'Africa'); INSERT INTO infectious_disease (id, disease, cases, year, location) VALUES (2, 'Tuberculosis', 300, 2020, 'Asia');","completion":"SELECT SUM(cases) FROM infectious_disease WHERE location = 'Africa';"}
{"prompt":"Number of infectious disease cases in each district of Delhi, ordered by the highest number of cases. with given SQL schema CREATE TABLE infectious_disease_delhi (district VARCHAR(20), cases INT); INSERT INTO infectious_disease_delhi (district, cases) VALUES ('East Delhi', 100), ('South Delhi', 150), ('New Delhi', 200), ('West Delhi', 50);","completion":"SELECT district, cases, RANK() OVER (ORDER BY cases DESC) AS rank FROM infectious_disease_delhi;"}
{"prompt":"What are the total number of patients and providers for each clinic location? with given SQL schema CREATE TABLE clinics (clinic_id INT, clinic_name VARCHAR(50), city VARCHAR(50));   CREATE TABLE patients (patient_id INT, clinic_id INT, patient_name VARCHAR(50));   CREATE TABLE providers (provider_id INT, clinic_id INT, provider_name VARCHAR(50));","completion":"SELECT clinics.clinic_name, COUNT(DISTINCT patients.patient_id) AS patient_count, COUNT(DISTINCT providers.provider_id) AS provider_count   FROM clinics   LEFT JOIN patients ON clinics.clinic_id = patients.clinic_id   LEFT JOIN providers ON clinics.clinic_id = providers.clinic_id   GROUP BY clinics.clinic_name;"}
{"prompt":"Find the average funding amount per startup in the \"west_coast\" region with given SQL schema CREATE TABLE companies (id INT, name TEXT, region TEXT, funding FLOAT); INSERT INTO companies (id, name, region, funding) VALUES (1, 'Startup A', 'west_coast', 5000000), (2, 'Startup B', 'east_coast', 3000000), (3, 'Startup C', 'west_coast', 7000000);","completion":"SELECT AVG(funding) FROM companies WHERE region = 'west_coast';"}
{"prompt":"List the number of BIPOC-led startups in the green technology sector with Series B funding or higher with given SQL schema CREATE TABLE founders (id INT, company_id INT, ethnicity VARCHAR(255)); CREATE TABLE companies (id INT, industry VARCHAR(255), funding_round VARCHAR(255)); INSERT INTO founders SELECT 1, 1, 'BIPOC'; INSERT INTO founders SELECT 2, 2, 'White'; INSERT INTO founders SELECT 3, 3, 'BIPOC'; INSERT INTO companies (id, industry, funding_round) SELECT 2, 'Finance', 'Series A'; INSERT INTO companies (id, industry, funding_round) SELECT 3, 'Green Technology', 'Series B'; INSERT INTO companies (id, industry, funding_round) SELECT 4, 'Retail', 'Series C';","completion":"SELECT COUNT(DISTINCT companies.id) FROM founders JOIN companies ON founders.company_id = companies.id WHERE companies.industry = 'Green Technology' AND founders.ethnicity = 'BIPOC' AND companies.funding_round >= 'Series B';"}
{"prompt":"What is the number of female founders each year? with given SQL schema CREATE TABLE founders (founder_id INT, company_id INT, gender VARCHAR(255)); CREATE TABLE companies (company_id INT, founding_year INT); INSERT INTO founders (founder_id, company_id, gender) VALUES (1, 1, 'Female'), (2, 2, 'Male'), (3, 3, 'Female'), (4, 4, 'Non-binary'); INSERT INTO companies (company_id, founding_year) VALUES (1, 2018), (2, 2017), (3, 2019), (4, 2018);","completion":"SELECT founding_year, COUNT(f.founder_id) as num_female_founders FROM founders f JOIN companies c ON f.company_id = c.company_id WHERE f.gender = 'Female' GROUP BY founding_year;"}
{"prompt":"How many startups were founded in 2018 by people with disabilities? with given SQL schema CREATE TABLE startups (id INT, name TEXT, founding_year INT, founder_ability TEXT);","completion":"SELECT COUNT(*) FROM startups WHERE founding_year = 2018 AND founder_ability IS NOT NULL AND founder_ability <> 'No disability';"}
{"prompt":"Show conservation efforts for endangered marine species. with given SQL schema CREATE TABLE marine_species (id INT, conservation_status VARCHAR(255)); INSERT INTO marine_species (id, conservation_status) VALUES (1, 'Endangered'), (2, 'Least Concern'); CREATE TABLE conservation_efforts (id INT, species_id INT, description VARCHAR(255)); INSERT INTO conservation_efforts (id, species_id, description) VALUES (1, 1, 'Habitat protection'), (2, 2, 'Research and monitoring');","completion":"SELECT marine_species.conservation_status, conservation_efforts.description FROM marine_species INNER JOIN conservation_efforts ON marine_species.id = conservation_efforts.species_id WHERE marine_species.conservation_status = 'Endangered';"}
{"prompt":"How many wildlife species are present in 'Caribbean Forests'? with given SQL schema CREATE TABLE CaribbeanForests (region VARCHAR(20), species_count INT); INSERT INTO CaribbeanForests (region, species_count) VALUES ('Caribbean Forests', 901);","completion":"SELECT species_count FROM CaribbeanForests WHERE region = 'Caribbean Forests';"}
{"prompt":"List the temperate rainforests with an area greater than 2000 square kilometers and timber volume above average with given SQL schema CREATE TABLE rainforests_area_volume (id INT, type VARCHAR(20), area FLOAT, volume FLOAT); INSERT INTO rainforests_area_volume (id, type, area, volume) VALUES (1, 'Temperate', 2500, 2500000);","completion":"SELECT type FROM rainforests_area_volume WHERE area > 2000 AND volume > (SELECT AVG(volume) FROM rainforests_area_volume WHERE type = 'Temperate');"}
{"prompt":"Insert new records into the 'veteran_employment' table for 'company_name' 'TechCo' with 'job_title' 'Software Engineer', 'employment_status' 'full-time' and 'start_date' '2022-05-01' with given SQL schema CREATE TABLE veteran_employment (company_name VARCHAR(255), job_title VARCHAR(255), employment_status VARCHAR(255), start_date DATE);","completion":"INSERT INTO veteran_employment (company_name, job_title, employment_status, start_date) VALUES ('TechCo', 'Software Engineer', 'full-time', '2022-05-01');"}
{"prompt":"What is the total number of manufacturing plants in Mexico that have received workforce development grants? with given SQL schema CREATE TABLE plants (id INT, name VARCHAR(50), country VARCHAR(50), workforce_development INT);","completion":"SELECT COUNT(*) FROM plants WHERE country = 'Mexico' AND workforce_development = 1;"}
{"prompt":"What is the most common age range for patients diagnosed with heart disease in rural Australia, and how many nurses serve those patients? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, diagnosis VARCHAR(255), location VARCHAR(255)); INSERT INTO patients (patient_id, age, diagnosis, location) VALUES (4, 58, 'heart disease', 'rural Australia'); INSERT INTO patients (patient_id, age, diagnosis, location) VALUES (5, 62, 'heart disease', 'rural Australia'); CREATE TABLE nurses (nurse_id INT, specialty VARCHAR(255), location VARCHAR(255)); INSERT INTO nurses (nurse_id, specialty, location) VALUES (40, 'cardiac nurse', 'rural Australia'); INSERT INTO nurses (nurse_id, specialty, location) VALUES (41, 'cardiac nurse', 'rural Australia');","completion":"SELECT FLOOR(AVG(age)) AS common_age_range, COUNT(nurses.nurse_id) AS nurses_count FROM patients INNER JOIN nurses ON patients.location = nurses.location WHERE patients.diagnosis = 'heart disease' AND patients.location LIKE 'rural% Australia' GROUP BY patients.location;"}
{"prompt":"What is the average ESG rating for companies in the financial sector? with given SQL schema CREATE TABLE companies (id INT, name VARCHAR(255), sector VARCHAR(255), ESG_rating FLOAT); INSERT INTO companies (id, name, sector, ESG_rating) VALUES (1, 'JPMorgan Chase', 'Financial', 7.2), (2, 'Visa', 'Financial', 7.8), (3, 'Starbucks', 'Consumer Discretionary', 6.9);","completion":"SELECT AVG(ESG_rating) FROM companies WHERE sector = 'Financial';"}
{"prompt":"What is the code name and launch date of the most recent military satellite in the 'satellite_data' table? with given SQL schema CREATE TABLE satellite_data (id INT PRIMARY KEY, sat_name VARCHAR(100), launch_date DATE, country VARCHAR(50), purpose VARCHAR(50)); INSERT INTO satellite_data (id, sat_name, launch_date, country, purpose) VALUES (1, 'KH-11', '2021-04-01', 'USA', 'Reconnaissance'), (2, 'Yaogan-34', '2020-10-10', 'China', 'Remote Sensing');","completion":"SELECT sat_name, launch_date FROM satellite_data ORDER BY launch_date DESC LIMIT 1;"}
{"prompt":"Identify the number of unique artists who have released music in the Pop and Hip Hop genres. with given SQL schema CREATE TABLE ArtistGenre2 (ArtistID INT, Genre VARCHAR(20)); INSERT INTO ArtistGenre2 (ArtistID, Genre) VALUES (1, 'Pop'), (2, 'Rock'), (3, 'Jazz'), (4, 'Pop'), (4, 'Hip Hop'), (5, 'Pop'), (6, 'Hip Hop');","completion":"SELECT COUNT(DISTINCT ArtistID) FROM (SELECT ArtistID FROM ArtistGenre2 WHERE Genre = 'Pop' INTERSECT SELECT ArtistID FROM ArtistGenre2 WHERE Genre = 'Hip Hop') T;"}
{"prompt":"Identify teachers who require professional development in 'Computer Science', ordered by their hire date. with given SQL schema CREATE TABLE teachers (teacher_id INT, name VARCHAR(255), hire_date DATE, subject VARCHAR(255)); INSERT INTO teachers (teacher_id, name, hire_date, subject) VALUES (1, 'John Doe', '2010-01-01', 'Mathematics'), (2, 'Jane Smith', '2015-01-01', 'Computer Science'), (3, 'Mike Johnson', '2005-01-01', 'English');","completion":"SELECT teacher_id, name, hire_date FROM teachers WHERE subject = 'Computer Science' ORDER BY hire_date;"}
{"prompt":"How many employees from each region have completed the 'Diversity and Inclusion' course in the 'training' table? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(255), country VARCHAR(255), region VARCHAR(255)); CREATE TABLE training (id INT, employee_id INT, course VARCHAR(255)); INSERT INTO employees (id, name, country, region) VALUES (1, 'John Doe', 'USA', 'North America'); INSERT INTO employees (id, name, country, region) VALUES (2, 'Jane Smith', 'Canada', 'North America'); INSERT INTO employees (id, name, country, region) VALUES (3, 'Alice Johnson', 'USA', 'North America'); INSERT INTO employees (id, name, country, region) VALUES (4, 'Kai Rogers', 'UK', 'Europe'); INSERT INTO training (id, employee_id, course) VALUES (1, 1, 'SQL'); INSERT INTO training (id, employee_id, course) VALUES (2, 1, 'Python'); INSERT INTO training (id, employee_id, course) VALUES (3, 3, 'SQL'); INSERT INTO training (id, employee_id, course) VALUES (4, 4, 'Diversity and Inclusion');","completion":"SELECT e.region, COUNT(t.id) FROM employees e JOIN training t ON e.id = t.employee_id WHERE t.course = 'Diversity and Inclusion' GROUP BY e.region;"}
{"prompt":"Update the 'HR' department's training program end date to '2023-06-30' with given SQL schema CREATE TABLE trainings (id SERIAL PRIMARY KEY, department VARCHAR(50), title VARCHAR(100), description TEXT, start_date DATE, end_date DATE); INSERT INTO trainings (department, title, description, start_date, end_date) VALUES ('HR', 'Diversity & Inclusion', 'Promoting inclusivity in the workplace', '2023-01-01', '2023-05-31');","completion":"UPDATE trainings SET end_date = '2023-06-30' WHERE department = 'HR';"}
{"prompt":"What is the number of job applicants by source for each department in the past year, including sources with no applicants? with given SQL schema CREATE TABLE JobApplications (ApplicationDate DATE, Department VARCHAR(20), Source VARCHAR(20)); INSERT INTO JobApplications (ApplicationDate, Department, Source) VALUES ('2022-01-01', 'HR', 'LinkedIn'), ('2022-02-01', 'HR', 'Indeed'), ('2022-03-01', 'IT', 'LinkedIn'), ('2022-01-01', 'Finance', 'Glassdoor');","completion":"SELECT Department, Source, COUNT(*) as Num_Applicants FROM JobApplications WHERE ApplicationDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY Department, Source ORDER BY Department, Num_Applicants ASC;"}
{"prompt":"Insert records for a new team, 'Seattle Kraken' with given SQL schema CREATE TABLE players (player_id INT, name VARCHAR(100), position VARCHAR(50), team_id INT); CREATE TABLE teams (team_id INT, name VARCHAR(100), city VARCHAR(100)); INSERT INTO players (player_id, name, position, team_id) VALUES (1, 'John Doe', 'Forward', 1), (2, 'Jane Smith', 'Goalie', 2); INSERT INTO teams (team_id, name, city) VALUES (1, 'Boston Bruins', 'Boston'), (2, 'New York Rangers', 'New York');","completion":"INSERT INTO teams (team_id, name, city) VALUES (3, 'Seattle Kraken', 'Seattle');"}
{"prompt":"What is the average number of strikeouts per game for each baseball team? with given SQL schema CREATE TABLE baseball_teams (team_name TEXT, strikeouts INT); INSERT INTO baseball_teams (team_name, strikeouts) VALUES ('Yankees', 1200), ('Red Sox', 1100), ('Dodgers', 1300);","completion":"SELECT team_name, AVG(strikeouts) FROM baseball_teams GROUP BY team_name;"}
{"prompt":"What is the maximum number of assists made by a player in the HockeyMatches and HockeyPlayerAssists tables, for players who have played more than 50 games? with given SQL schema CREATE TABLE HockeyMatches (MatchID INT, HomeTeam VARCHAR(50), AwayTeam VARCHAR(50)); CREATE TABLE HockeyPlayerAssists (PlayerID INT, MatchID INT, Assists INT);","completion":"SELECT MAX(Assists) FROM HockeyPlayerAssists INNER JOIN (SELECT PlayerID, COUNT(*) as GamesPlayed FROM HockeyPlayerAssists GROUP BY PlayerID HAVING COUNT(*) > 50) as Subquery ON HockeyPlayerAssists.PlayerID = Subquery.PlayerID;"}
{"prompt":"What is the maximum number of goals scored by any player in the ice hockey team 'Montreal Canadiens' in a single match? with given SQL schema CREATE TABLE goals (player_name TEXT, team TEXT, goals_scored INTEGER); INSERT INTO goals (player_name, team, goals_scored) VALUES ('Alice Johnson', 'Montreal Canadiens', 3); INSERT INTO goals (player_name, team, goals_scored) VALUES ('Bob Brown', 'Montreal Canadiens', 5);","completion":"SELECT MAX(goals_scored) FROM goals WHERE team = 'Montreal Canadiens';"}
{"prompt":"Delete all records in the \"digital_divide_stats\" table where the \"country\" is 'United States' with given SQL schema CREATE TABLE digital_divide_stats (id INT PRIMARY KEY, country VARCHAR(255), year INT, internet_users INT, total_population INT);","completion":"WITH deleted_data AS (DELETE FROM digital_divide_stats WHERE country = 'United States' RETURNING *) SELECT * FROM deleted_data;"}
{"prompt":"What is the number of wheelchair accessible vehicles per fleet? with given SQL schema CREATE TABLE Fleets (FleetID INT, FleetName VARCHAR(50), VehicleType VARCHAR(50), Capacity INT); INSERT INTO Fleets (FleetID, FleetName, VehicleType, Capacity) VALUES (1, 'FleetA', 'Bus', 50), (2, 'FleetB', 'Train', 100), (3, 'FleetC', 'Wheelchair Bus', 20), (4, 'FleetD', 'Bike Rack Train', 80);","completion":"SELECT FleetName, SUM(CASE WHEN VehicleType LIKE '%Wheelchair%' THEN Capacity ELSE 0 END) AS WheelchairAccessibleVehicles FROM Fleets GROUP BY FleetName;"}
{"prompt":"How many ethical fashion brands are headquartered in each continent? with given SQL schema CREATE TABLE fashion_brands (id INT, continent VARCHAR(50), ethical_practices BOOLEAN); INSERT INTO fashion_brands (id, continent, ethical_practices) VALUES (1, 'Africa', true), (2, 'Asia', false), (3, 'Europe', true);","completion":"SELECT continent, COUNT(*) FROM fashion_brands WHERE ethical_practices = true GROUP BY continent;"}
{"prompt":"What is the total carbon footprint of recycled paper packaging? with given SQL schema CREATE TABLE materials (id INT, name VARCHAR(255), type VARCHAR(255), carbon_footprint DECIMAL(10, 2), PRIMARY KEY(id)); INSERT INTO materials (id, name, type, carbon_footprint) VALUES (15, 'Recycled Paper', 'Packaging', 2.50); CREATE TABLE products (id INT, name VARCHAR(255), category VARCHAR(255), material_id INT, PRIMARY KEY(id), FOREIGN KEY (material_id) REFERENCES materials(id)); INSERT INTO products (id, name, category, material_id) VALUES (16, 'Recycled Paper Box', 'Packaging', 15);","completion":"SELECT SUM(carbon_footprint) FROM materials INNER JOIN products ON materials.id = products.material_id WHERE products.name = 'Recycled Paper Box';"}
{"prompt":"Which financial wellbeing programs in Africa were launched before 2015 and had a budget greater than $500,000? with given SQL schema CREATE TABLE FinancialWellbeing (id INT, program_name VARCHAR(50), location VARCHAR(50), launch_date DATE, budget DECIMAL(10,2));","completion":"SELECT program_name, budget FROM FinancialWellbeing WHERE location LIKE '%Africa%' AND launch_date < '2015-01-01' AND budget > 500000;"}
{"prompt":"What is the total number of hours volunteered by each volunteer in the last month? with given SQL schema CREATE TABLE volunteer_hours (hour_id INT, volunteer_id INT, hours_volunteered DECIMAL(10,2), volunteer_date DATE);","completion":"SELECT volunteer_id, SUM(hours_volunteered) FROM volunteer_hours WHERE volunteer_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY volunteer_id;"}
{"prompt":"Identify the suppliers with the highest and lowest sustainability ratings in the supplier_ratings table. with given SQL schema CREATE TABLE supplier_ratings (supplier_id INT, sustainability_rating INT); INSERT INTO supplier_ratings (supplier_id, sustainability_rating) VALUES (100, 95), (101, 60), (102, 90);","completion":"SELECT supplier_id, sustainability_rating FROM (SELECT supplier_id, sustainability_rating, RANK() OVER (ORDER BY sustainability_rating DESC) AS rank, RANK() OVER (ORDER BY sustainability_rating ASC) AS reverse_rank FROM supplier_ratings) WHERE rank = 1 OR reverse_rank = 1;"}
{"prompt":"What are the top 3 cuisine types with the lowest calorie content? with given SQL schema CREATE TABLE cuisine (id INT, type VARCHAR(50), calories INT); INSERT INTO cuisine (id, type, calories) VALUES (1, 'Italian', 500), (2, 'Mexican', 600), (3, 'Japanese', 400), (4, 'Chinese', 450), (5, 'Indian', 550), (6, 'Thai', 480);","completion":"SELECT type, calories, RANK() OVER (ORDER BY calories ASC) as rank FROM cuisine WHERE rank <= 3;"}
{"prompt":"What is the total number of meals in the meals table with a calorie count above 500? with given SQL schema CREATE TABLE meals (meal_id INT, meal_name VARCHAR(50), calories INT); INSERT INTO meals (meal_id, meal_name, calories) VALUES (1, 'Quinoa Salad', 350), (2, 'Lentil Soup', 280), (3, 'Chickpea Curry', 420), (4, 'Tofu Stir Fry', 380), (5, 'Grilled Chicken Salad', 450), (6, 'Beef Tacos', 520), (7, 'Vegetable Stir Fry', 360), (8, 'Chicken Caesar Salad', 390), (9, 'Prawn Curry', 410), (10, 'Vegetable Curry', 370), (11, 'Fish and Chips', 600), (12, 'Chocolate Cake', 500);","completion":"SELECT COUNT(*) FROM meals WHERE calories > 500;"}
{"prompt":"What is the total revenue generated from domestic shipments in the Northeast region for the year 2021? with given SQL schema CREATE TABLE shipments (id INT, region VARCHAR(20), revenue FLOAT); INSERT INTO shipments (id, region, revenue) VALUES (1, 'Northeast', 5000), (2, 'Southeast', 7000), (3, 'Northeast', 8000); CREATE TABLE regions (id INT, name VARCHAR(20)); INSERT INTO regions (id, name) VALUES (1, 'Northeast'), (2, 'Southeast');","completion":"SELECT SUM(s.revenue) FROM shipments s JOIN regions r ON s.region = r.name WHERE r.name = 'Northeast' AND YEAR(s.id) = 2021 AND s.region LIKE 'Northeast%';"}
{"prompt":"Which are the top 5 heaviest items in the inventory? with given SQL schema CREATE TABLE Inventory(id INT, item_name VARCHAR(50), weight INT); INSERT INTO Inventory(id, item_name, weight) VALUES (1, 'Box A', 200), (2, 'Box B', 150), (3, 'Box C', 300);","completion":"SELECT item_name, weight, ROW_NUMBER() OVER (ORDER BY weight DESC) as rank FROM Inventory WHERE rank <= 5;"}
{"prompt":"What is the total funding received by startups in the 'Genetic Research' sector? with given SQL schema CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.startups (id INT, name VARCHAR(50), sector VARCHAR(50), total_funding DECIMAL(10,2)); INSERT INTO biotech.startups (id, name, sector, total_funding) VALUES (1, 'StartupA', 'Genetic Research', 5000000.00), (2, 'StartupB', 'Biosensor Technology', 3000000.00);","completion":"SELECT SUM(total_funding) FROM biotech.startups WHERE sector = 'Genetic Research';"}
{"prompt":"What is the total budget allocated to agencies in the 'Transportation' sector for the fiscal year 2021? with given SQL schema CREATE TABLE Agency (id INT, Name VARCHAR(50), Budget INT, Sector VARCHAR(50)); INSERT INTO Agency (id, Name, Budget, Sector) VALUES (1, 'DOT', 7000000, 'Transportation'); INSERT INTO Agency (id, Name, Budget, Sector) VALUES (2, 'FRA', 4000000, 'Transportation');","completion":"SELECT SUM(Budget) FROM Agency WHERE Sector = 'Transportation' AND FiscalYear = 2021;"}
{"prompt":"Identify underrepresented communities with no healthcare providers in LA and MS. with given SQL schema CREATE TABLE healthcare_providers (provider_id INT, name TEXT, state TEXT); INSERT INTO healthcare_providers (provider_id, name, state) VALUES (1, 'Dr. Keisha Brown', 'LA'); CREATE TABLE underrepresented_communities (community TEXT, state TEXT);","completion":"SELECT u.community, u.state FROM underrepresented_communities u LEFT JOIN healthcare_providers h ON u.state = h.state WHERE h.provider_id IS NULL AND u.state IN ('LA', 'MS');"}
{"prompt":"What is the total number of mental health parity violations by month and year? with given SQL schema CREATE TABLE mental_health_parity_reports (report_id INT, violation_date DATE); INSERT INTO mental_health_parity_reports (report_id, violation_date) VALUES (1, '2022-01-01'), (2, '2022-02-15'), (3, '2022-03-05'), (4, '2022-04-20'), (5, '2021-06-12'), (6, '2021-07-28');","completion":"SELECT EXTRACT(MONTH FROM violation_date) AS month, EXTRACT(YEAR FROM violation_date) AS year, COUNT(*) FROM mental_health_parity_reports GROUP BY month, year;"}
{"prompt":"Find the top 3 countries with the most virtual tourism sessions in Q3 2023, excluding the 'Europe' region. with given SQL schema CREATE TABLE virtual_tourism (id INT, country VARCHAR(50), num_sessions INT, session_date DATE, region VARCHAR(50)); INSERT INTO virtual_tourism (id, country, num_sessions, session_date, region) VALUES (1, 'USA', 2500, '2023-01-01', 'North America'), (2, 'Canada', 1800, '2023-01-02', 'North America');","completion":"SELECT country, SUM(num_sessions) as total_sessions FROM virtual_tourism WHERE session_date BETWEEN '2023-07-01' AND '2023-09-30' AND region != 'Europe' GROUP BY country ORDER BY total_sessions DESC LIMIT 3;"}
{"prompt":"How many patients have participated in group therapy? with given SQL schema CREATE TABLE treatments (treatment_id INT, type VARCHAR(20), participants INT); INSERT INTO treatments (treatment_id, type, participants) VALUES (1, 'Group Therapy', 12); INSERT INTO treatments (treatment_id, type, participants) VALUES (2, 'Individual Therapy', 5); INSERT INTO treatments (treatment_id, type, participants) VALUES (3, 'Family Therapy', 3);","completion":"SELECT SUM(participants) FROM treatments WHERE type = 'Group Therapy';"}
{"prompt":"What is the total number of mental health campaigns launched in each country? with given SQL schema CREATE TABLE campaigns (campaign_id INT, country VARCHAR(50), launch_date DATE); INSERT INTO campaigns (campaign_id, country, launch_date) VALUES (1, 'United States', '2022-01-01'), (2, 'Canada', '2022-02-01'), (3, 'Mexico', '2022-03-01');","completion":"SELECT country, COUNT(*) as campaign_count FROM campaigns GROUP BY country;"}
{"prompt":"Add a new column 'material_origin' to the 'infrastructure_materials' table with a default value of 'Domestic' with given SQL schema CREATE TABLE infrastructure_materials (material_id INT, material_name TEXT, material_durability TEXT, material_cost TEXT);","completion":"ALTER TABLE infrastructure_materials ADD material_origin TEXT DEFAULT 'Domestic';"}
{"prompt":"Get the average resilience score for each project type in the Resilience_Scores view with given SQL schema CREATE VIEW Resilience_Scores AS SELECT project_id, project_name, project_type, resilience_score FROM Infrastructure_Data WHERE year >= 2010; CREATE TABLE Project_Types (project_type VARCHAR(255), type_description VARCHAR(255));","completion":"SELECT project_type, AVG(resilience_score) FROM Resilience_Scores JOIN Project_Types ON Resilience_Scores.project_type = Project_Types.project_type GROUP BY project_type;"}
{"prompt":"Update the \"population\" column for 'Canada' in the \"countries\" table with given SQL schema CREATE TABLE countries (id INT PRIMARY KEY, name TEXT, continent TEXT, area FLOAT, population INT); INSERT INTO countries (id, name, continent, area, population) VALUES (1, 'Canada', 'North America', 9984670.0, 38005238);","completion":"UPDATE countries SET population = 38050000 WHERE name = 'Canada';"}
{"prompt":"What is the average age of tourists visiting Kyoto from the United States? with given SQL schema CREATE TABLE if not exists destinations (destination_id INT, name TEXT, country TEXT); INSERT INTO destinations (destination_id, name, country) VALUES (1, 'Kyoto', 'Japan'); CREATE TABLE if not exists visitors (visitor_id INT, age INT, destination_id INT, nationality TEXT); INSERT INTO visitors (visitor_id, age, destination_id, nationality) VALUES (1, 25, 1, 'USA'), (2, 30, 1, 'USA'), (3, 45, 1, 'Canada');","completion":"SELECT AVG(visitors.age) FROM visitors JOIN destinations ON visitors.destination_id = destinations.destination_id WHERE visitors.nationality = 'USA' AND destinations.name = 'Kyoto';"}
{"prompt":"What is the total number of visitors to Canada in 2020 who engaged in sustainable tourism activities? with given SQL schema CREATE TABLE visitors (id INT, year INT, country TEXT, engaged_in_sustainable_tourism BOOLEAN); INSERT INTO visitors (id, year, country, engaged_in_sustainable_tourism) VALUES (1, 2020, 'Canada', true), (2, 2019, 'Canada', false);","completion":"SELECT SUM(engaged_in_sustainable_tourism) FROM visitors WHERE year = 2020 AND country = 'Canada';"}
{"prompt":"What was the average CO2 emission per international tourist by continent in 2022? with given SQL schema CREATE TABLE international_tourists (id INT, continent VARCHAR(50), country VARCHAR(50), visitors INT, co2_emission INT, visit_date DATE); INSERT INTO international_tourists (id, continent, country, visitors, co2_emission, visit_date) VALUES (1, 'Europe', 'France', 3000, 1500, '2022-01-01');","completion":"SELECT AVG(co2_emission) as avg_co2, continent FROM international_tourists WHERE visit_date = '2022-01-01' GROUP BY continent;"}
{"prompt":"List the total number of cases for each Ethnicity in the DiversityInJustice table. with given SQL schema CREATE TABLE DiversityInJustice (JusticeID INT, Ethnicity VARCHAR(30)); CREATE TABLE JusticeCases (CaseID INT, JusticeID INT, Date DATE); INSERT INTO DiversityInJustice (JusticeID, Ethnicity) VALUES (1, 'African American'), (2, 'Hispanic'), (3, 'Asian'), (4, 'Caucasian'); INSERT INTO JusticeCases (CaseID, JusticeID, Date) VALUES (1, 1, '2021-09-01'), (2, 1, '2021-07-20'), (3, 2, '2021-08-12'), (4, 3, '2021-08-15'), (5, 3, '2021-09-01'), (6, 4, '2021-09-10');","completion":"SELECT Ethnicity, COUNT(*) as TotalCases FROM JusticeCases JOIN DiversityInJustice ON JusticeCases.JusticeID = DiversityInJustice.JusticeID GROUP BY Ethnicity;"}
{"prompt":"What is the average age of volunteers who have participated in restorative justice programs? with given SQL schema CREATE TABLE restorative_justice_programs (program_id INT, volunteer_age INT); INSERT INTO restorative_justice_programs (program_id, volunteer_age) VALUES (1, 25), (2, 30), (3, 22);","completion":"SELECT AVG(volunteer_age) FROM restorative_justice_programs;"}
{"prompt":"What is the total number of legal aid hours provided, by type of service, location, and ethnicity? with given SQL schema CREATE TABLE legal_aid_hours_ethnicity (hour_id INT, hour_type VARCHAR(255), location VARCHAR(255), ethnicity VARCHAR(255), hours DECIMAL(10,2)); INSERT INTO legal_aid_hours_ethnicity (hour_id, hour_type, location, ethnicity, hours) VALUES (1, 'Consultation', 'California', 'Hispanic', 5.5), (2, 'Representation', 'New York', 'African American', 8.0);","completion":"SELECT hour_type, location, ethnicity, SUM(hours) as total_hours FROM legal_aid_hours_ethnicity GROUP BY hour_type, location, ethnicity;"}
{"prompt":"Find the total number of vessels in the South China sea by category with given SQL schema CREATE TABLE scs_vessels (vessel_id INT, vessel_name VARCHAR(255), category VARCHAR(255), longitude DECIMAL(9,6), latitude DECIMAL(9,6)); CREATE VIEW scs_vessels_view AS SELECT * FROM scs_vessels WHERE longitude BETWEEN 100 AND 125 AND latitude BETWEEN 1 AND 22;","completion":"SELECT category, COUNT(*) FROM scs_vessels_view GROUP BY category;"}
{"prompt":"What is the average number of marine species found in the Mediterranean Sea? with given SQL schema CREATE TABLE mediterranean_sea (id INT, location TEXT, species_count INT); INSERT INTO mediterranean_sea (id, location, species_count) VALUES (1, 'Crete', 500);","completion":"SELECT AVG(species_count) FROM mediterranean_sea WHERE location = 'Crete';"}
{"prompt":"What is the total revenue for vegetarian and non-vegetarian items? with given SQL schema CREATE TABLE MenuItems (MenuItemID INT, MenuItemName VARCHAR(255), Category VARCHAR(255), Price DECIMAL(5,2), SupplierID INT); INSERT INTO MenuItems (MenuItemID, MenuItemName, Category, Price, SupplierID) VALUES (5, 'Falafel Wrap', 'Vegetarian', 7.99, 4); INSERT INTO MenuItems (MenuItemID, MenuItemName, Category, Price, SupplierID) VALUES (6, 'Pork Tacos', 'Meat', 11.49, 5);","completion":"SELECT CASE WHEN Category = 'Vegetarian' THEN 'Vegetarian' ELSE 'Non-Vegetarian' END AS Category, SUM(Price) as Revenue FROM MenuItems GROUP BY Category"}
{"prompt":"Create a view named 'risk_assessment_summary' with columns 'region', 'total_risk_score', 'average_risk_score with given SQL schema CREATE VIEW risk_assessment_summary AS SELECT region, SUM(risk_score) AS total_risk_score, AVG(risk_score) AS average_risk_score FROM risk_assessment GROUP BY region;","completion":"CREATE VIEW risk_assessment_summary AS SELECT region, SUM(risk_score) AS total_risk_score, AVG(risk_score) AS average_risk_score FROM risk_assessment GROUP BY region;"}
{"prompt":"Insert a new defense project \"Project Z\" with status \"Not Started\" and planned start date 2023-02-15. with given SQL schema CREATE TABLE defense_projects (id INT PRIMARY KEY AUTO_INCREMENT, project_name VARCHAR(255), status VARCHAR(255), planned_start_date DATE);","completion":"INSERT INTO defense_projects (project_name, status, planned_start_date) VALUES ('Project Z', 'Not Started', '2023-02-15');"}
{"prompt":"What are the total amounts of copper and silver extracted by each company operating in North America? with given SQL schema CREATE TABLE company (id INT, name VARCHAR(255), country VARCHAR(255));CREATE TABLE copper_extraction (company_id INT, amount INT);CREATE TABLE silver_extraction (company_id INT, amount INT);","completion":"SELECT c.name, SUM(ce.amount) as total_copper, SUM(se.amount) as total_silver FROM company c LEFT JOIN copper_extraction ce ON c.id = ce.company_id LEFT JOIN silver_extraction se ON c.id = se.company_id WHERE c.country LIKE '%North America%' GROUP BY c.name;"}
{"prompt":"Show the total CO2 emissions for each state, grouped by state. with given SQL schema CREATE TABLE coal_mines (id INT, name VARCHAR(50), location VARCHAR(50), size INT, co2_emissions INT, state VARCHAR(20)); INSERT INTO coal_mines VALUES (1, 'Coal Mine 1', 'West Virginia', 450, 25000, 'West Virginia'); INSERT INTO coal_mines VALUES (2, 'Coal Mine 2', 'Wyoming', 600, 30000, 'Wyoming'); INSERT INTO coal_mines VALUES (3, 'Coal Mine 3', 'Kentucky', 200, 15000, 'Kentucky');","completion":"SELECT state, SUM(co2_emissions) FROM coal_mines GROUP BY state;"}
{"prompt":"What is the total number of employees working in mining operations in the European region? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), OperationID INT, Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, Name, OperationID, Department) VALUES (1, 'John Doe', 1, 'Mining'); INSERT INTO Employees (EmployeeID, Name, OperationID, Department) VALUES (2, 'Jane Smith', 2, 'Mining');","completion":"SELECT COUNT(DISTINCT Employees.EmployeeID) FROM Employees INNER JOIN MiningOperations ON Employees.OperationID = MiningOperations.OperationID WHERE Employees.Department = 'Mining' AND MiningOperations.Country IN (SELECT Country FROM Countries WHERE Region = 'Europe');"}
{"prompt":"What is the total amount donated on Giving Tuesday by donors in the Health industry? with given SQL schema CREATE TABLE donations(id INT, donor_name TEXT, donation_amount FLOAT, donation_date DATE, industry TEXT); INSERT INTO donations(id, donor_name, donation_amount, donation_date, industry) VALUES (1, 'James Lee', 50, '2022-11-29', 'Technology'), (2, 'Grace Kim', 100, '2022-12-01', 'Finance'), (3, 'Anthony Nguyen', 25, '2022-11-29', 'Health');","completion":"SELECT SUM(donation_amount) FROM donations WHERE donation_date = '2022-11-29' AND industry = 'Health';"}
{"prompt":"What was the average donation amount in each city in H2 2021? with given SQL schema CREATE TABLE Donations (DonationID int, City varchar(50), AmountDonated numeric(10,2), DonationDate date); INSERT INTO Donations (DonationID, City, AmountDonated, DonationDate) VALUES (1, 'Los Angeles', 100.00, '2021-07-01'), (2, 'Houston', 150.00, '2021-12-31');","completion":"SELECT City, AVG(AmountDonated) as AvgDonation FROM Donations WHERE DonationDate BETWEEN '2021-07-01' AND '2021-12-31' GROUP BY City;"}
{"prompt":"Find the average depth of all underwater volcanoes in the Atlantic Ocean. with given SQL schema CREATE TABLE underwater_volcanoes (id INT, name VARCHAR(50), depth FLOAT, ocean VARCHAR(20)); INSERT INTO underwater_volcanoes (id, name, depth, ocean) VALUES (1, 'Lost City', 800, 'Atlantic'); INSERT INTO underwater_volcanoes (id, name, depth, ocean) VALUES (2, 'Eyjafjallajokull', 1650, 'Atlantic');","completion":"SELECT AVG(depth) FROM underwater_volcanoes WHERE ocean = 'Atlantic';"}
{"prompt":"Identify the number of whale sightings per month for the Pacific Ocean. with given SQL schema CREATE TABLE WHALE_SIGHTINGS (SIGHTING_DATE DATE, LOCATION VARCHAR(20)); INSERT INTO WHALE_SIGHTINGS (SIGHTING_DATE, LOCATION) VALUES ('2022-01-01', 'Pacific Ocean'), ('2022-01-02', 'Pacific Ocean'), ('2022-02-01', 'Pacific Ocean'), ('2022-03-01', 'Pacific Ocean'), ('2022-03-02', 'Pacific Ocean');","completion":"SELECT TO_CHAR(SIGHTING_DATE, 'YYYY-MM'), COUNT(*) FROM WHALE_SIGHTINGS WHERE LOCATION = 'Pacific Ocean' GROUP BY TO_CHAR(SIGHTING_DATE, 'YYYY-MM') ORDER BY TO_CHAR(SIGHTING_DATE, 'YYYY-MM');"}
{"prompt":"Insert a new record in the table \"maritime_safety\" with values 1, 'Arctic', 3, '2022-03-03' with given SQL schema CREATE TABLE maritime_safety (id INT, region VARCHAR(50), incidents INT, date DATE);","completion":"INSERT INTO maritime_safety (id, region, incidents, date) VALUES (1, 'Arctic', 3, '2022-03-03');"}
{"prompt":"What is the maximum number of marine species observed in a single deep-sea expedition? with given SQL schema CREATE TABLE deep_sea_expeditions (expedition_id INTEGER, location TEXT, species_count INTEGER);","completion":"SELECT MAX(species_count) FROM deep_sea_expeditions;"}
{"prompt":"What is the minimum game score for players who have played the \"QuantumDefenders\" game more than 5 times? with given SQL schema CREATE TABLE QuantumDefenders (PlayerID INT, GameScore INT, PlayCount INT); INSERT INTO QuantumDefenders (PlayerID, GameScore, PlayCount) VALUES (1, 8500, 7), (2, 9000, 6), (3, 7000, 8), (4, 9500, 3), (5, 8000, 9);","completion":"SELECT MIN(GameScore) FROM QuantumDefenders WHERE PlayCount > 5;"}
{"prompt":"Show the change in average soil pH levels for each farm from 2018 to 2019. with given SQL schema CREATE TABLE soil_samples (id INT, sample_id INT, farm_id INT, sample_date DATE, ph VARCHAR(20), n VARCHAR(20), p VARCHAR(20), k VARCHAR(20)); INSERT INTO soil_samples (id, sample_id, farm_id, sample_date, ph, n, p, k) VALUES (1, 1, 1, '2018-04-01', '6.0', 'High', 'Medium', 'Low'); INSERT INTO soil_samples (id, sample_id, farm_id, sample_date, ph, n, p, k) VALUES (2, 2, 1, '2019-04-02', '6.5', 'Medium', 'Medium', 'Medium'); INSERT INTO soil_samples (id, sample_id, farm_id, sample_date, ph, n, p, k) VALUES (3, 3, 2, '2018-05-01', '5.5', 'Low', 'High', 'Low');","completion":"SELECT farm_id, AVG(CAST(ph AS FLOAT)) - LAG(AVG(CAST(ph AS FLOAT)), 1, 0) OVER (PARTITION BY farm_id ORDER BY YEAR(sample_date)) AS ph_change FROM soil_samples GROUP BY farm_id, YEAR(sample_date) HAVING YEAR(sample_date) IN (2018, 2019);"}
{"prompt":"Delete records of neodymium magnet production from the table 'production' where the year is 2020 with given SQL schema CREATE TABLE production (id INT, element VARCHAR(10), year INT, quantity INT); INSERT INTO production (id, element, year, quantity) VALUES (1, 'neodymium', 2018, 500), (2, 'neodymium', 2019, 600), (3, 'neodymium', 2020, 700), (4, 'neodymium', 2021, 800);","completion":"DELETE FROM production WHERE element = 'neodymium' AND year = 2020;"}
{"prompt":"Delete the production record for 'India' in 2020. with given SQL schema CREATE TABLE production (country VARCHAR(255), year INT, amount INT); INSERT INTO production (country, year, amount) VALUES ('China', 2019, 120000), ('China', 2020, 140000), ('USA', 2020, 38000), ('Australia', 2020, 20000), ('India', 2020, 5000);","completion":"DELETE FROM production WHERE country = 'India' AND year = 2020;"}
{"prompt":"Delete the row with the lowest quantity of Gadolinium produced in 2020. with given SQL schema CREATE TABLE gadolinium_production (id INT, name VARCHAR(255), element VARCHAR(10), country VARCHAR(100), production_date DATE, quantity FLOAT); INSERT INTO gadolinium_production (id, name, element, country, production_date, quantity) VALUES (1, 'Company A', 'Gd', 'China', '2020-01-01', 15.0), (2, 'Company B', 'Gd', 'Australia', '2020-01-15', 20.0), (3, 'Company C', 'Gd', 'Malaysia', '2020-02-01', 25.0), (4, 'Company D', 'Gd', 'China', '2020-02-15', 30.0), (5, 'Company E', 'Gd', 'Australia', '2020-03-01', 35.0);","completion":"DELETE FROM gadolinium_production WHERE (name, element, production_date, quantity) IN (SELECT name, element, production_date, MIN(quantity) FROM gadolinium_production WHERE element = 'Gd' AND YEAR(production_date) = 2020 GROUP BY name, element, production_date);"}
{"prompt":"Identify the percentage of properties in each borough of New York that have inclusive housing policies. with given SQL schema CREATE TABLE new_york_properties (property_id INT, borough VARCHAR(20), inclusive_housing BOOLEAN); INSERT INTO new_york_properties (property_id, borough, inclusive_housing) VALUES (1, 'Manhattan', TRUE), (2, 'Brooklyn', FALSE), (3, 'Queens', TRUE), (4, 'Bronx', TRUE), (5, 'Staten Island', FALSE);","completion":"SELECT borough, 100.0 * COUNT(*) FILTER (WHERE inclusive_housing = TRUE) \/ COUNT(*) AS pct_inclusive FROM new_york_properties GROUP BY borough ORDER BY pct_inclusive DESC;"}
{"prompt":"What is the average listing price for green-certified properties in the 'sustainable_homes' table? with given SQL schema CREATE TABLE sustainable_homes (listing_id INT, listing_price DECIMAL, green_certified BOOLEAN);","completion":"SELECT AVG(listing_price) FROM sustainable_homes WHERE green_certified = TRUE;"}
{"prompt":"What is the maximum and minimum number of inclusive housing policies for each city in the database? with given SQL schema CREATE TABLE cities (id INT, name VARCHAR(255), policies INT); INSERT INTO cities (id, name, policies) VALUES (1, 'Toronto', 10), (2, 'Toronto', 12), (3, 'Montreal', 8), (4, 'Montreal', 9);","completion":"SELECT name, MAX(policies) AS max_policies, MIN(policies) AS min_policies FROM cities GROUP BY name;"}
{"prompt":"Calculate the percentage of renewable energy projects in each state of the United States with given SQL schema CREATE TABLE projects (project_id INT, project_name VARCHAR(255), project_type VARCHAR(255), state VARCHAR(255), installed_capacity FLOAT);","completion":"SELECT state, (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM projects WHERE state IN (SELECT state FROM (SELECT DISTINCT state FROM projects WHERE state = 'United States') as temp))) as percentage FROM projects WHERE project_type IN ('Solar', 'Wind', 'Geothermal', 'Hydroelectric') GROUP BY state;"}
{"prompt":"How many space missions were successfully launched by each country? with given SQL schema CREATE TABLE space_missions (id INT, mission_name VARCHAR(255), country VARCHAR(255), launch_status VARCHAR(10)); INSERT INTO space_missions (id, mission_name, country, launch_status) VALUES (1, 'Apollo 11', 'USA', 'Success'), (2, 'Mars Orbiter Mission', 'India', 'Success'), (3, 'Chandrayaan-1', 'India', 'Success'), (4, 'Grail', 'USA', 'Success'), (5, 'Mars Express', 'Europe', 'Success'), (6, 'Venus Express', 'Europe', 'Failure'), (7, 'Hayabusa', 'Japan', 'Success'), (8, 'Akatsuki', 'Japan', 'Failure');","completion":"SELECT country, COUNT(*) as successful_launches FROM space_missions WHERE launch_status = 'Success' GROUP BY country;"}
{"prompt":"What is the total number of satellites launched by the USA and Russia? with given SQL schema CREATE TABLE satellites (id INT, country VARCHAR(255), name VARCHAR(255), launch_date DATE);","completion":"SELECT SUM(satellites.id) FROM satellites WHERE satellites.country IN ('USA', 'Russia');"}
{"prompt":"Calculate the minimum distance from the sun of objects in the Oort Cloud with given SQL schema CREATE TABLE objects (id INT, name VARCHAR(50), distance DECIMAL(10,2), category VARCHAR(50));","completion":"SELECT MIN(distance) FROM objects WHERE category = 'Oort Cloud';"}
{"prompt":"Find the spacecraft with the longest duration in space, along with its manufacturing date and country. with given SQL schema CREATE TABLE Spacecraft (ID INT, Name VARCHAR(50), ManufacturingDate DATE, Country VARCHAR(50), DurationInSpace INT); INSERT INTO Spacecraft VALUES (1, 'Spacecraft A', '2010-01-01', 'USA', 2500), (2, 'Spacecraft B', '2012-05-15', 'China', 3000), (3, 'Spacecraft C', '2005-09-27', 'Russia', 1800);","completion":"SELECT Name, ManufacturingDate, Country, DurationInSpace  FROM (SELECT Name, ManufacturingDate, Country, DurationInSpace, ROW_NUMBER() OVER (ORDER BY DurationInSpace DESC) as rn FROM Spacecraft) sub WHERE rn = 1;"}
{"prompt":"How many games were played in each city? with given SQL schema CREATE TABLE cities (city_id INT, city VARCHAR(50));CREATE TABLE teams (team_id INT, team_name VARCHAR(50), city VARCHAR(50));CREATE TABLE games (game_id INT, team_id INT, city VARCHAR(50)); INSERT INTO cities (city_id, city) VALUES (1, 'Atlanta'), (2, 'Boston'); INSERT INTO teams (team_id, team_name, city) VALUES (1, 'Atlanta Hawks', 'Atlanta'), (2, 'Boston Celtics', 'Boston'); INSERT INTO games (game_id, team_id, city) VALUES (1, 1, 'Atlanta'), (2, 1, 'Atlanta'), (3, 2, 'Boston'), (4, 2, 'Boston'), (5, 1, 'Atlanta');","completion":"SELECT c.city, COUNT(g.game_id) FROM cities c JOIN games g ON c.city = g.city GROUP BY c.city;"}
{"prompt":"What is the percentage of fans who identify as male, female, or other for each team's fan base? with given SQL schema CREATE TABLE fan_demographics (fan_id INT, team_id INT, gender VARCHAR(10)); CREATE TABLE teams (team_id INT, team_name VARCHAR(255), sport_id INT); INSERT INTO fan_demographics VALUES (1, 101, 'Male'), (2, 101, 'Female'), (3, 102, 'Male'), (4, 102, 'Other'), (5, 103, 'Female'), (6, 103, 'Male'); INSERT INTO teams VALUES (101, 'TeamA', 1), (102, 'TeamB', 2), (103, 'TeamC', 1);","completion":"SELECT t.team_name, f.gender, AVG(100.0 * COUNT(f.fan_id) OVER (PARTITION BY t.team_id) \/ COUNT(f.fan_id) OVER (PARTITION BY NULL)) as percent_of_fans FROM fan_demographics f JOIN teams t ON f.team_id = t.team_id GROUP BY t.team_name, f.gender;"}
