{"prompt":"What is the total number of tickets sold for all football games? with given SQL schema CREATE TABLE tickets (ticket_id INT, game_id INT, region VARCHAR(50), quantity INT); INSERT INTO tickets (ticket_id, game_id, region, quantity) VALUES (1, 1, 'Midwest', 500); INSERT INTO tickets (ticket_id, game_id, region, quantity) VALUES (2, 2, 'Northeast', 700); CREATE TABLE games (game_id INT, sport VARCHAR(50)); INSERT INTO games (game_id, sport) VALUES (1, 'Football'); INSERT INTO games (game_id, sport) VALUES (2, 'Basketball');","completion":"SELECT SUM(quantity) FROM tickets INNER JOIN games ON tickets.game_id = games.game_id WHERE sport = 'Football';"}
{"prompt":"What is the total revenue for the soccer team from ticket sales in London and Paris? with given SQL schema CREATE TABLE tickets (ticket_id INT, game_id INT, quantity INT, price DECIMAL(5,2)); INSERT INTO tickets VALUES (1, 1, 50, 25.99); INSERT INTO tickets VALUES (2, 2, 30, 19.99); CREATE TABLE games (game_id INT, team VARCHAR(20), location VARCHAR(20), price DECIMAL(5,2)); INSERT INTO games VALUES (1, 'Arsenal', 'London', 50.00); INSERT INTO games VALUES (2, 'PSG', 'Paris', 40.00);","completion":"SELECT SUM(tickets.quantity * games.price) FROM tickets INNER JOIN games ON tickets.game_id = games.game_id WHERE games.location IN ('London', 'Paris');"}
{"prompt":"Identify the number of security incidents that occurred in 'Europe' in the last month. with given SQL schema CREATE TABLE incidents (incident_id INT PRIMARY KEY, incident_date DATE, incident_location VARCHAR(50)); INSERT INTO incidents (incident_id, incident_date, incident_location) VALUES (1, '2022-01-01', 'HQ'), (2, '2022-02-15', 'Branch01'), (3, '2022-03-30', 'Asia'), (4, '2022-04-15', 'Europe'), (5, '2022-04-20', 'Europe');","completion":"SELECT COUNT(*) FROM incidents WHERE incident_location = 'Europe' AND incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"Identify the top 5 threat intelligence sources with the highest number of reported incidents in the last year, according to our Incident Tracking database. with given SQL schema CREATE TABLE IncidentTracking (id INT, source VARCHAR(50), incident_count INT, timestamp DATETIME); INSERT INTO IncidentTracking (id, source, incident_count, timestamp) VALUES (1, 'TechFirmA', 200, '2021-01-01 10:00:00'), (2, 'TechFirmB', 150, '2021-01-01 10:00:00');","completion":"SELECT source, SUM(incident_count) as total_incidents FROM IncidentTracking WHERE timestamp >= DATE_SUB(NOW(), INTERVAL 1 YEAR) GROUP BY source ORDER BY total_incidents DESC LIMIT 5;"}
{"prompt":"What are the collective bargaining agreements expiring soon for unions with more than 3000 members in the technology sector? with given SQL schema CREATE TABLE CBAs (UnionName TEXT, ExpirationDate DATE, Sector TEXT); INSERT INTO CBAs (UnionName, ExpirationDate, Sector) VALUES ('UnionTechA', '2023-05-01', 'Technology'), ('UnionTechB', '2023-12-31', 'Technology'), ('UnionTechC', '2024-01-01', 'Technology');","completion":"SELECT UnionName, ExpirationDate FROM CBAs WHERE Sector = 'Technology' AND ExpirationDate <= DATE('2023-12-31') AND MemberCount > 3000;"}
{"prompt":"How many vessels arrived in Brazil in July 2022 with a speed between 15 and 20 knots? with given SQL schema CREATE TABLE vessel_performance (id INT, name TEXT, speed DECIMAL(5,2), arrived_date DATE, country TEXT); INSERT INTO vessel_performance (id, name, speed, arrived_date, country) VALUES (1, 'Vessel M', 16.7, '2022-07-05', 'Brazil'), (2, 'Vessel N', 18.1, '2022-07-12', 'Brazil'), (3, 'Vessel O', 14.3, '2022-07-25', 'Brazil');","completion":"SELECT COUNT(*) FROM vessel_performance WHERE arrived_date BETWEEN '2022-07-01' AND '2022-07-31' AND country = 'Brazil' AND speed BETWEEN 15 AND 20;"}
{"prompt":"What was the maximum cargo weight for vessels arriving at the Port of Rotterdam in March 2022? with given SQL schema CREATE TABLE ports (id INT, name TEXT, country TEXT); INSERT INTO ports (id, name, country) VALUES (1, 'Rotterdam', 'Netherlands'); CREATE TABLE vessels (id INT, name TEXT, type TEXT, cargo_weight INT, port_id INT); INSERT INTO vessels (id, name, type, cargo_weight, port_id) VALUES (1, 'CSCL Globe', 'Container', 15000, 1), (2, 'OOCL Hong Kong', 'Container', 19000, 1), (3, 'CMA CGM Marco Polo', 'Container', 16000, 1);","completion":"SELECT MAX(cargo_weight) FROM vessels WHERE port_id IN (SELECT id FROM ports WHERE name = 'Rotterdam') AND EXTRACT(MONTH FROM arrival_date) = 3;"}
{"prompt":"Find the top 3 regions with the highest water conservation efforts in 2021, excluding the 'urban' sector. with given SQL schema CREATE TABLE conservation_efforts (region VARCHAR(255), year INT, sector VARCHAR(255), efforts FLOAT); INSERT INTO conservation_efforts (region, year, sector, efforts) VALUES ('North', 2021, 'rural', 0.25), ('North', 2021, 'suburban', 0.22), ('South', 2021, 'rural', 0.28), ('South', 2021, 'suburban', 0.24), ('East', 2021, 'rural', 0.21), ('East', 2021, 'suburban', 0.26), ('West', 2021, 'rural', 0.27), ('West', 2021, 'suburban', 0.23), ('North', 2021, 'urban', 0.15), ('South', 2021, 'urban', 0.18), ('East', 2021, 'urban', 0.17), ('West', 2021, 'urban', 0.16);","completion":"SELECT region, SUM(efforts) AS total_efforts FROM conservation_efforts WHERE year = 2021 AND sector != 'urban' GROUP BY region ORDER BY total_efforts DESC LIMIT 3;"}
{"prompt":"List all water sources located in California, USA with given SQL schema CREATE TABLE water_sources (id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255));","completion":"SELECT * FROM water_sources WHERE location LIKE '%California, USA%';"}
{"prompt":"What is the average bias score for each attribute in the 'algorithmic_fairness' table, grouped by algorithm? with given SQL schema CREATE TABLE algorithmic_fairness (algorithm VARCHAR(255), attribute VARCHAR(255), bias_score FLOAT); INSERT INTO algorithmic_fairness (algorithm, attribute, bias_score) VALUES ('TensorFlow', 'Gender', 0.15), ('TensorFlow', 'Race', 0.12), ('PyTorch', 'Gender', 0.08), ('Scikit-learn', 'Race', 0.05), ('Scikit-learn', 'Age', 0.02);","completion":"SELECT algorithm, attribute, AVG(bias_score) as avg_bias FROM algorithmic_fairness GROUP BY algorithm, attribute;"}
{"prompt":"List the names and budgets of all community development initiatives in the 'community_development' table, sorted by budget in descending order. with given SQL schema CREATE TABLE community_development (id INT, initiative_name VARCHAR(255), budget INT);","completion":"SELECT initiative_name, budget FROM community_development ORDER BY budget DESC;"}
{"prompt":"What are the names and costs of agricultural innovation projects in the 'ruraldev' schema that cost more than 200000 and were implemented in Latin America? with given SQL schema CREATE TABLE ruraldev.innovation_projects (id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO ruraldev.innovation_projects (id, project_name, location, cost) VALUES (1, 'Precision Farming', 'North America', 150000), (2, 'Drip Irrigation', 'Latin America', 250000), (3, 'Vertical Farming', 'Europe', 300000), (4, 'Livestock Genetics', 'Latin America', 220000);","completion":"SELECT project_name, cost FROM ruraldev.innovation_projects WHERE location = 'Latin America' AND cost > 200000;"}
{"prompt":"Delete all records for missions with a mission_status of \"Aborted\" from the space_missions table with given SQL schema CREATE TABLE space_missions (id INT PRIMARY KEY, mission_name VARCHAR(100), launch_date DATE, mission_status VARCHAR(50));","completion":"DELETE FROM space_missions WHERE mission_status = 'Aborted';"}
{"prompt":"What are the manufacturing costs for each aircraft model? with given SQL schema CREATE TABLE AircraftModels (id INT, name VARCHAR(50), manufacturing_cost FLOAT);   CREATE TABLE ManufacturingData (id INT, model_id INT, cost_center VARCHAR(50), cost FLOAT);  CREATE VIEW CostPerModel AS SELECT model_id, SUM(cost) as total_cost FROM ManufacturingData GROUP BY model_id;","completion":"SELECT AircraftModels.name, ManufacturingData.cost  FROM AircraftModels  JOIN CostPerModel ON AircraftModels.id = CostPerModel.model_id  JOIN ManufacturingData ON AircraftModels.id = ManufacturingData.model_id  WHERE ManufacturingData.cost_center = 'manufacturing';"}
{"prompt":"Add a new 'conservation' record into the 'conservation_efforts' table with given SQL schema CREATE TABLE conservation_efforts (id INT, name VARCHAR(50), description TEXT, target_species VARCHAR(50), budget FLOAT);","completion":"INSERT INTO conservation_efforts (id, name, description, target_species, budget) VALUES (1, 'Tiger Protection', 'A project to protect the endangered Bengal Tiger population in India.', 'Bengal Tiger', 1000000.0);"}
{"prompt":"What was the total quantity of lobsters exported from Australia to Japan in 2022? with given SQL schema CREATE TABLE seafood_exports (id INT, export_date DATE, export_country TEXT, import_country TEXT, quantity INT); INSERT INTO seafood_exports (id, export_date, export_country, import_country, quantity) VALUES (1, '2022-01-01', 'Australia', 'Japan', 300); INSERT INTO seafood_exports (id, export_date, export_country, import_country, quantity) VALUES (2, '2022-02-15', 'Australia', 'Japan', 400);","completion":"SELECT SUM(quantity) FROM seafood_exports WHERE export_country = 'Australia' AND import_country = 'Japan' AND EXTRACT(YEAR FROM export_date) = 2022 AND species = 'Lobster';"}
{"prompt":"Delete records in the cannabis_producers table where the license_type is 'Infuser' with given SQL schema CREATE TABLE cannabis_producers (id INT PRIMARY KEY, name VARCHAR(255), state VARCHAR(2), license_type VARCHAR(255), license_number INT);","completion":"WITH cte1 AS (DELETE FROM cannabis_producers WHERE license_type = 'Infuser') SELECT * FROM cte1;"}
{"prompt":"Update the location of a healthcare provider with the name Dr. Johnson. with given SQL schema CREATE TABLE HealthcareProviders (Id INT, Name TEXT, Location TEXT, Specialty TEXT); INSERT INTO HealthcareProviders (Id, Name, Location, Specialty) VALUES (1, 'Dr. Smith', 'City X', 'Family Medicine'); INSERT INTO HealthcareProviders (Id, Name, Location, Specialty) VALUES (2, 'Dr. Johnson', 'City X', 'Cardiology');","completion":"UPDATE HealthcareProviders SET Location = 'City Y' WHERE Name = 'Dr. Johnson';"}
{"prompt":"List all the farms in the European region that have a yield per acre for wheat that is at least 15% higher than the average yield per acre for wheat in the entire database. with given SQL schema CREATE TABLE Farm (id INT, name TEXT, crop TEXT, yield_per_acre FLOAT, region TEXT); INSERT INTO Farm (id, name, crop, yield_per_acre, region) VALUES (1, 'Jansen Farm', 'Wheat', 180, 'European'), (2, 'Schmidt Farm', 'Rye', 160, 'European'), (3, 'Garcia Farm', 'Wheat', 210, 'European'); CREATE TABLE Average (crop TEXT, avg_yield FLOAT); INSERT INTO Average (crop, avg_yield) VALUES ('Wheat', 170);","completion":"SELECT * FROM Farm WHERE region = 'European' AND crop = 'Wheat' AND yield_per_acre >= (SELECT 1.15 * avg_yield FROM Average WHERE crop = 'Wheat');"}
{"prompt":"List all the unique 'Crop Varieties' for each 'Farm' in 'Asia' in 2022? with given SQL schema CREATE TABLE farms (id INT, name TEXT, location TEXT, last_inspection_date DATE); INSERT INTO farms (id, name, location, last_inspection_date) VALUES (1, 'Farm A', 'Asia', '2022-01-01'); INSERT INTO farms (id, name, location, last_inspection_date) VALUES (2, 'Farm B', 'Asia', '2022-01-02'); CREATE TABLE crops (id INT, name TEXT, variety TEXT, farm_id INT, last_harvest_date DATE); INSERT INTO crops (id, name, variety, farm_id, last_harvest_date) VALUES (1, 'Rice', 'Japonica', 1, '2022-03-01'); INSERT INTO crops (id, name, variety, farm_id, last_harvest_date) VALUES (2, 'Rice', 'Indica', 2, '2022-03-02');","completion":"SELECT DISTINCT c.variety, f.name as farm_name FROM crops c INNER JOIN farms f ON c.farm_id = f.id WHERE f.location = 'Asia' AND c.last_harvest_date BETWEEN '2022-01-01' AND '2022-12-31';"}
{"prompt":"Show the number of urban agriculture initiatives in each region and the average budget. with given SQL schema CREATE TABLE urban_agriculture_initiatives (initiative_name VARCHAR(255), region VARCHAR(255), budget FLOAT);","completion":"SELECT region, COUNT(initiative_name) as num_initiatives, AVG(budget) as avg_budget FROM urban_agriculture_initiatives GROUP BY region;"}
{"prompt":"What is the maximum total production, in metric tons, of any crop type in the 'urban_crops' table? with given SQL schema CREATE TABLE urban_crops (id INT, crop_name VARCHAR(50), yield_mt_ha INT, area_ha INT); INSERT INTO urban_crops (id, crop_name, yield_mt_ha, area_ha) VALUES (1, 'Rice', 5, 800), (2, 'Soybeans', 3.5, 900), (3, 'Corn', 4, 700);","completion":"SELECT MAX(production_mt) as max_production_mt FROM (SELECT crop_name, SUM(yield_mt_ha * area_ha * 0.01) as production_mt FROM urban_crops GROUP BY crop_name) as subquery;"}
{"prompt":"Which farmers have more than 10 years of experience in the agriculture database? with given SQL schema CREATE TABLE Farmers (id INT, name VARCHAR, location VARCHAR, years_of_experience INT); INSERT INTO Farmers (id, name, location, years_of_experience) VALUES (1, 'Jamila Brown', 'Nairobi', 12), (2, 'Eduardo Rodriguez', 'Mexico City', 20), (3, 'Tran Nguyen', 'Ho Chi Minh City', 10), (4, 'Elif Kaya', 'Ankara', 8), (5, 'Liam Johnson', 'Sydney', 15);","completion":"SELECT name FROM Farmers WHERE years_of_experience > 10;"}
{"prompt":"What is the maximum budget allocated for disability support programs in the 'East Coast' region? with given SQL schema CREATE TABLE DisabilitySupportPrograms (region VARCHAR(20), budget DECIMAL(5,2)); INSERT INTO DisabilitySupportPrograms (region, budget) VALUES ('East Coast', 150000.00), ('West Coast', 200000.00), ('Midwest', 120000.00), ('South', 180000.00);","completion":"SELECT MAX(budget) FROM DisabilitySupportPrograms WHERE region = 'East Coast';"}
{"prompt":"What is the total number of students and staff with accommodations in the \"disability_services\" schema, excluding the \"accessibility_parking\" type? with given SQL schema CREATE SCHEMA disability_services; CREATE TABLE staff (id INT, name VARCHAR(50), accommodation VARCHAR(50)); CREATE TABLE students (id INT, name VARCHAR(50), accommodation VARCHAR(50));","completion":"SELECT COUNT(*) FROM disability_services.staff WHERE accommodation != 'accessibility_parking' UNION SELECT COUNT(*) FROM disability_services.students WHERE accommodation != 'accessibility_parking';"}
{"prompt":"What are the climate change impacts on marine species in the Southern Ocean? with given SQL schema CREATE TABLE marine_species_southern_ocean (species_name VARCHAR(255), habitat VARCHAR(255)); INSERT INTO marine_species_southern_ocean (species_name, habitat) VALUES ('Ross Seal', 'Southern Ocean'), ('Crabeater Seal', 'Southern Ocean'); CREATE TABLE climate_change_impacts_southern_ocean (species_name VARCHAR(255), impacts TEXT); INSERT INTO climate_change_impacts_southern_ocean (species_name, impacts) VALUES ('Ross Seal', 'Sea ice reduction'), ('Crabeater Seal', 'Changes in prey distribution');","completion":"SELECT m.species_name, c.impacts FROM marine_species_southern_ocean m INNER JOIN climate_change_impacts_southern_ocean c ON m.species_name = c.species_name WHERE m.habitat = 'Southern Ocean';"}
{"prompt":"What is the minimum and maximum ocean acidification pH level for each marine region? with given SQL schema CREATE TABLE marine_region (id INT, region_name VARCHAR(50), min_ocean_ph FLOAT, max_ocean_ph FLOAT); INSERT INTO marine_region (id, region_name, min_ocean_ph, max_ocean_ph) VALUES (1, 'Atlantic Ocean', 7.5, 8.1), (2, 'Pacific Ocean', 7.6, 8.2);","completion":"SELECT region_name, MIN(min_ocean_ph) AS min_ocean_ph, MAX(max_ocean_ph) AS max_ocean_ph FROM marine_region GROUP BY region_name;"}
{"prompt":"What is the total price of all products? with given SQL schema CREATE TABLE products (id INT, company VARCHAR(255), price DECIMAL(5,2)); INSERT INTO products (id, company, price) VALUES (1, 'ABC', 50.99), (2, 'DEF', 35.49), (3, 'GHI', 65.99), (4, 'JKL', 25.99);","completion":"SELECT SUM(price) FROM products;"}
{"prompt":"Delete all community policing records with a community_policing_id greater than 5 from the 'community_policing' table with given SQL schema CREATE TABLE community_policing (community_policing_id INT, is_active BOOLEAN);","completion":"DELETE FROM community_policing WHERE community_policing_id > 5;"}
{"prompt":"Find the crime types with the highest and lowest clearance rates overall. with given SQL schema CREATE TABLE crimes (crime_id INT, type VARCHAR(255), clearance_rate FLOAT);","completion":"SELECT c.type, AVG(c.clearance_rate) FROM crimes c GROUP BY c.type ORDER BY AVG(c.clearance_rate) DESC, c.type LIMIT 1; SELECT c.type, AVG(c.clearance_rate) FROM crimes c GROUP BY c.type ORDER BY AVG(c.clearance_rate) ASC, c.type LIMIT 1;"}
{"prompt":"What is the average attendance for theater events in Africa, and how many countries on the continent have hosted such events? with given SQL schema CREATE TABLE events (id INT, name VARCHAR(50), year INT, location VARCHAR(50), type VARCHAR(20)); INSERT INTO events (id, name, year, location, type) VALUES (1, 'Event1', 2015, 'Paris', 'Art'), (2, 'Event2', 2016, 'London', 'Music'), (3, 'Event3', 2017, 'Beijing', 'Theater'), (4, 'Event4', 2018, 'Tokyo', 'Art'), (5, 'Event5', 2019, 'Nairobi', 'Theater');","completion":"SELECT AVG(attendance) as avg_attendance, COUNT(DISTINCT country) as country_count FROM (SELECT COUNT(*) as attendance, SUBSTRING_INDEX(location, ' ', 1) as country FROM events WHERE type = 'Theater' GROUP BY location) as subquery;"}
{"prompt":"What is the total number of artworks donated by individuals and corporations? with given SQL schema CREATE TABLE Donors (donor_id INT, donor_type VARCHAR(10), num_artworks INT); INSERT INTO Donors (donor_id, donor_type, num_artworks) VALUES (1, 'Individual', 30), (2, 'Corporation', 50);","completion":"SELECT SUM(num_artworks) FROM Donors WHERE donor_type IN ('Individual', 'Corporation');"}
{"prompt":"Summarize defense diplomacy events by type and year with given SQL schema CREATE TABLE defense_diplomacy (id INT, event_type VARCHAR(50), year INT); INSERT INTO defense_diplomacy (id, event_type, year) VALUES (1, 'Military Exercise', 2018), (2, 'Military Exercise', 2019), (3, 'Military Sale', 2018), (4, 'Defense Agreement', 2019);","completion":"SELECT year, event_type, COUNT(*) as num_events FROM defense_diplomacy GROUP BY year, event_type;"}
{"prompt":"Find the total assets of customers who have invested in stock 'ABC' with given SQL schema CREATE TABLE customers (id INT, name VARCHAR(50), asset_value FLOAT); INSERT INTO customers (id, name, asset_value) VALUES (1, 'John Doe', 50000.00), (2, 'Jane Smith', 75000.00); CREATE TABLE investments (customer_id INT, stock_symbol VARCHAR(10), quantity INT); INSERT INTO investments (customer_id, stock_symbol) VALUES (1, 'ABC'), (1, 'XYZ'), (2, 'ABC');","completion":"SELECT SUM(asset_value) FROM customers c JOIN investments i ON c.id = i.customer_id WHERE i.stock_symbol = 'ABC';"}
{"prompt":"What is the difference in total assets between customers who have invested in mutual funds and those who have not? with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), total_assets DECIMAL(10,2)); INSERT INTO customers (customer_id, name, age, gender, total_assets) VALUES (1, 'John Doe', 35, 'Male', 50000.00), (2, 'Jane Smith', 45, 'Female', 75000.00), (3, 'Bob Johnson', 50, 'Male', 60000.00); CREATE TABLE investments (customer_id INT, investment_type VARCHAR(20), value DECIMAL(10,2)); INSERT INTO investments (customer_id, investment_type, value) VALUES (1, 'Stocks', 30000.00), (1, 'Bonds', 20000.00), (2, 'Stocks', 50000.00), (2, 'Mutual Funds', 25000.00), (3, 'Stocks', 40000.00), (3, 'Bonds', 20000.00);","completion":"SELECT SUM(c.total_assets) - subquery.total_assets FROM customers c RIGHT JOIN (SELECT SUM(total_assets) as total_assets FROM customers c INNER JOIN investments i ON c.customer_id = i.customer_id WHERE i.investment_type = 'Mutual Funds') subquery ON 1=1;"}
{"prompt":"What is the total investment per client for each investment type? with given SQL schema CREATE TABLE clients (client_id INT, name TEXT, investment_type TEXT, investment FLOAT); INSERT INTO clients (client_id, name, investment_type, investment) VALUES (1, 'John Doe', 'Stocks', 3000.00), (1, 'John Doe', 'Bonds', 2000.00), (2, 'Jane Smith', 'Stocks', 5000.00);","completion":"SELECT client_id, name, investment_type, SUM(investment) OVER (PARTITION BY client_id, investment_type ORDER BY client_id) as total_investment FROM clients;"}
{"prompt":"When did the first fraud alert occur? with given SQL schema CREATE TABLE fraud_alerts (id INT, account_number VARCHAR(20), alert_type VARCHAR(20), alert_date DATE); INSERT INTO fraud_alerts (id, account_number, alert_type, alert_date) VALUES (1, '1234567890', 'Suspicious Activity', '2022-01-01'); INSERT INTO fraud_alerts (id, account_number, alert_type, alert_date) VALUES (2, '0987654321', 'Identity Theft', '2022-01-02');","completion":"SELECT MIN(alert_date) FROM fraud_alerts;"}
{"prompt":"List the number of hospitals in each state that have a rural healthcare facility. with given SQL schema CREATE TABLE hospitals (hospital_id INT, name VARCHAR(50), state VARCHAR(20), num_rural_facilities INT);","completion":"SELECT state, COUNT(*) FROM hospitals WHERE num_rural_facilities > 0 GROUP BY state;"}
{"prompt":"What is the difference in the number of mental health facilities between rural and urban areas? with given SQL schema CREATE TABLE mental_health_facilities (id INT, name VARCHAR(50), area VARCHAR(10)); INSERT INTO mental_health_facilities (id, name, area) VALUES (1, 'Facility A', 'Rural'), (2, 'Facility B', 'Urban'), (3, 'Facility C', 'Rural'), (4, 'Facility D', 'Urban');","completion":"SELECT SUM(CASE WHEN area = 'Rural' THEN 1 ELSE 0 END) - SUM(CASE WHEN area = 'Urban' THEN 1 ELSE 0 END) AS difference FROM mental_health_facilities;"}
{"prompt":"Which military technologies have been updated in the past year, and what were the previous specifications? with given SQL schema CREATE TABLE military_tech (id INT, tech VARCHAR(50), specs VARCHAR(50), update_date DATE); INSERT INTO military_tech (id, tech, specs, update_date) VALUES (1, 'Drones', 'Speed: 200 mph, Range: 500 miles', '2021-01-01'), (2, 'Drones', 'Speed: 250 mph, Range: 600 miles', '2022-01-01'), (3, 'Artificial Intelligence', 'Algorithmic processing capability: 90%, Memory: 1 TB', '2021-01-01'), (4, 'Artificial Intelligence', 'Algorithmic processing capability: 95%, Memory: 2 TB', '2022-01-01');","completion":"SELECT a.tech, a.specs as previous_specs, b.specs as updated_specs FROM military_tech a INNER JOIN military_tech b ON a.tech = b.tech WHERE a.update_date = (SELECT MAX(update_date) FROM military_tech c WHERE c.tech = a.tech AND c.update_date < b.update_date);"}
{"prompt":"Find the minimum production rate of wells in the 'Mediterranean Sea' and the 'Black Sea'. with given SQL schema CREATE TABLE wells (well_id INT, well_name VARCHAR(50), region VARCHAR(50), production_rate FLOAT); INSERT INTO wells (well_id, well_name, region, production_rate) VALUES (19, 'Well S', 'Mediterranean Sea', 3000), (20, 'Well T', 'Mediterranean Sea', 4000), (21, 'Well U', 'Black Sea', 5000), (22, 'Well V', 'Black Sea', 6000);","completion":"SELECT MIN(production_rate) FROM wells WHERE region IN ('Mediterranean Sea', 'Black Sea');"}
{"prompt":"What is the highest number of hat-tricks scored by a player in a single Bundesliga season? with given SQL schema CREATE TABLE german_teams (team_id INT, team_name VARCHAR(50)); INSERT INTO german_teams (team_id, team_name) VALUES (1, 'Bayern Munich'), (2, 'Borussia Dortmund'), (3, 'RB Leipzig'); CREATE TABLE german_matches (match_id INT, home_team_id INT, away_team_id INT, home_team_player_hat_tricks INT, away_team_player_hat_tricks INT); INSERT INTO german_matches (match_id, home_team_id, away_team_id, home_team_player_hat_tricks, away_team_player_hat_tricks) VALUES (1, 1, 2, 1, 0), (2, 2, 3, 0, 1), (3, 3, 1, 1, 0);","completion":"SELECT MAX(home_team_player_hat_tricks + away_team_player_hat_tricks) AS max_hat_tricks FROM german_matches;"}
{"prompt":"List the number of refugee families, children, and their total age for each location. with given SQL schema CREATE TABLE refugee_families (id INT, location_id INT, family_size INT); CREATE TABLE refugee_children (id INT, family_id INT, age INT); CREATE TABLE locations (id INT, name VARCHAR(255));","completion":"SELECT l.name as location_name, COUNT(DISTINCT rf.id) as family_count, SUM(rc.age) as total_children_age FROM refugee_families rf INNER JOIN refugee_children rc ON rf.id = rc.family_id INNER JOIN locations l ON rf.location_id = l.id GROUP BY l.id;"}
{"prompt":"What is the maximum number of bikes rented in 'park1' on weekends? with given SQL schema CREATE TABLE bike_rentals (location VARCHAR(20), day_of_week VARCHAR(10), bikes_rented INT); INSERT INTO bike_rentals (location, day_of_week, bikes_rented) VALUES ('park1', 'Saturday', 15), ('park1', 'Sunday', 20), ('park2', 'Friday', 10);","completion":"SELECT MAX(bikes_rented) FROM bike_rentals WHERE location = 'park1' AND day_of_week IN ('Saturday', 'Sunday');"}
{"prompt":"What is the standard deviation of ad spend for campaigns targeting 'Africa', in the current quarter? with given SQL schema CREATE TABLE campaigns (id INT, name TEXT, target_region TEXT, start_date DATETIME, end_date DATETIME, ad_spend DECIMAL(10,2));","completion":"SELECT STD(ad_spend) FROM campaigns WHERE target_region = 'Africa' AND start_date <= NOW() AND end_date >= DATE_SUB(DATE_FORMAT(NOW(), '%Y-%m-01'), INTERVAL 3 MONTH);"}
{"prompt":"Delete the record for a socially responsible loan. with given SQL schema CREATE TABLE loans (id INT, loan_type VARCHAR(255), balance DECIMAL(10,2)); INSERT INTO loans (id, loan_type, balance) VALUES (1, 'Conventional', 800.00), (2, 'Socially Responsible', 1000.00);","completion":"DELETE FROM loans WHERE loan_type = 'Socially Responsible';"}
{"prompt":"What is the name and total donation for the bottom 2 donors, ordered by total donation in ascending order? with given SQL schema CREATE TABLE donors (id INT, name VARCHAR(50), total_donation FLOAT); INSERT INTO donors (id, name, total_donation) VALUES (1, 'John Doe', 500.00), (2, 'Jane Smith', 350.00), (3, 'Mike Johnson', 200.00);","completion":"SELECT name, total_donation FROM (SELECT name, total_donation, ROW_NUMBER() OVER (ORDER BY total_donation ASC) as rank FROM donors) as subquery WHERE rank <= 2;"}
{"prompt":"Calculate the total calories for each cuisine with given SQL schema CREATE TABLE cuisine (cuisine_id INT, name VARCHAR(20)); INSERT INTO cuisine (cuisine_id, name) VALUES (1, 'italian'), (2, 'chinese'), (3, 'indian'); CREATE TABLE dishes (dish_id INT, name VARCHAR(50), cuisine_id INT, calories INT); INSERT INTO dishes (dish_id, name, cuisine_id, calories) VALUES (1, 'pizza margherita', 1, 500), (2, 'lasagna', 1, 600), (3, 'fried rice', 2, 700), (4, 'chicken curry', 3, 800), (5, 'vegetable biryani', 3, 900);","completion":"SELECT cuisine.name, SUM(dishes.calories) as total_calories FROM cuisine JOIN dishes ON cuisine.cuisine_id = dishes.cuisine_id GROUP BY cuisine.name;"}
{"prompt":"What is the average weight of return shipments from the 'TX' warehouse? with given SQL schema CREATE TABLE warehouse (id INT, name VARCHAR(20)); CREATE TABLE shipment (id INT, warehouse_id INT, weight FLOAT, is_return BOOLEAN); INSERT INTO warehouse VALUES (1, 'LA'), (2, 'NY'), (3, 'TX'); INSERT INTO shipment VALUES (1, 1, 50.3, FALSE), (2, 2, 60.2, TRUE), (3, 3, 45.1, TRUE), (4, 1, 70.4, TRUE);","completion":"SELECT AVG(shipment.weight) FROM shipment INNER JOIN warehouse ON shipment.warehouse_id = warehouse.id WHERE warehouse.name = 'TX' AND shipment.is_return = TRUE;"}
{"prompt":"What is the average funding per startup, partitioned by country and year? with given SQL schema CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.startups (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), year INT, funding DECIMAL(10, 2)); INSERT INTO biotech.startups (id, name, country, year, funding) VALUES (1, 'StartupA', 'USA', 2018, 5000000.00), (2, 'StartupB', 'Canada', 2020, 3000000.00), (3, 'StartupC', 'USA', 2019, 7000000.00), (4, 'StartupD', 'Germany', 2021, 4000000.00);","completion":"SELECT country, AVG(funding) AS avg_funding FROM biotech.startups WINDOW W AS (PARTITION BY country, year ORDER BY funding ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) GROUP BY country, W.year ORDER BY avg_funding DESC;"}
{"prompt":"Identify the number of open data initiatives in the European Union in 2020 with given SQL schema CREATE TABLE open_data (id INT PRIMARY KEY, country VARCHAR(20), year INT, num_initiatives INT); INSERT INTO open_data (id, country, year, num_initiatives) VALUES (1, 'France', 2020, 25); INSERT INTO open_data (id, country, year, num_initiatives) VALUES (2, 'Germany', 2020, 35);","completion":"SELECT SUM(num_initiatives) FROM open_data WHERE country IN ('France', 'Germany', 'Italy', 'Spain', 'Poland') AND year = 2020;"}
{"prompt":"What is the total number of green buildings and their total floor area, categorized by energy efficiency rating and city? with given SQL schema CREATE TABLE Cities (CityID int, CityName varchar(50)); CREATE TABLE EnergyEfficiencyRatings (RatingID int, RatingName varchar(50)); CREATE TABLE GreenBuildings (BuildingID int, CityID int, RatingID int, FloorArea int);","completion":"SELECT Cities.CityName, EnergyEfficiencyRatings.RatingName, COUNT(GreenBuildings.BuildingID) as TotalBuildings, SUM(GreenBuildings.FloorArea) as TotalFloorArea FROM Cities INNER JOIN GreenBuildings ON Cities.CityID = GreenBuildings.CityID INNER JOIN EnergyEfficiencyRatings ON GreenBuildings.RatingID = EnergyEfficiencyRatings.RatingID GROUP BY Cities.CityName, EnergyEfficiencyRatings.RatingName;"}
{"prompt":"How many hotels have a sustainability score above 80? with given SQL schema CREATE TABLE economic_impact (hotel_id INT, local_employment INT); INSERT INTO economic_impact (hotel_id, local_employment) VALUES (1, 25), (2, 30);","completion":"SELECT COUNT(*) FROM sustainable_tourism st WHERE st.sustainability_score > 80;"}
{"prompt":"Which districts in Barcelona have more than 5 local artisans? with given SQL schema CREATE TABLE local_artisans (artisan_id INT, name TEXT, district TEXT); INSERT INTO local_artisans (artisan_id, name, district) VALUES (1, 'Marta', 'Gothic Quarter'), (2, 'Pedro', 'El Raval'), (3, 'Ana', 'Gothic Quarter'), (4, 'Juan', 'El Raval'), (5, 'Lucia', 'Gothic Quarter'), (6, 'Pablo', 'El Born');","completion":"SELECT district, COUNT(*) FROM local_artisans GROUP BY district HAVING COUNT(*) > 5;"}
{"prompt":"What are the total number of hotels and unique countries in the hotel_data table? with given SQL schema CREATE TABLE hotel_data (hotel_id INT, hotel_name TEXT, country TEXT, stars INT); INSERT INTO hotel_data (hotel_id, hotel_name, country, stars) VALUES (1, 'Park Hotel', 'Switzerland', 5), (2, 'Four Seasons', 'Canada', 5), (3, 'The Plaza', 'USA', 4);","completion":"SELECT COUNT(DISTINCT hotel_id) as total_hotels, COUNT(DISTINCT country) as unique_countries FROM hotel_data;"}
{"prompt":"What is the average population of species in the Pacific region? with given SQL schema CREATE TABLE Species ( id INT, name VARCHAR(50), population INT, region VARCHAR(50), last_seen DATETIME ); INSERT INTO Species (id, name, population, region, last_seen) VALUES (5, 'Polar Bear', 4000, 'Arctic', '2020-02-01'), (6, 'Arctic Fox', 1500, 'Pacific', '2019-06-10');","completion":"SELECT region, AVG(population) as avg_population FROM Species WHERE region = 'Pacific' GROUP BY region;"}
{"prompt":"Who are the instructors that have taught traditional art courses in South America? with given SQL schema CREATE TABLE Instructors (id INT, name VARCHAR(30), region VARCHAR(20)); CREATE TABLE Courses (instructor_id INT, location VARCHAR(20), course_type VARCHAR(20));","completion":"SELECT I.name FROM Instructors I JOIN Courses C ON I.id = C.instructor_id WHERE I.region = 'South America' AND C.course_type = 'traditional art';"}
{"prompt":"How many patients had a reduction in symptoms after taking medication X in 2021? with given SQL schema CREATE TABLE patient_outcomes (patient_id INT, medication VARCHAR(20), year INT, symptom_reduction INT); INSERT INTO patient_outcomes VALUES (1, 'Medication X', 2021, 1), (2, 'Medication X', 2021, 0), (3, 'Medication X', 2021, 1);","completion":"SELECT COUNT(*) FROM patient_outcomes WHERE medication = 'Medication X' AND year = 2021 AND symptom_reduction = 1;"}
{"prompt":"How many tourists visited North America from each continent in 2019? with given SQL schema CREATE TABLE tourists (id INT, continent VARCHAR(50), country VARCHAR(50), visitors INT, year INT); INSERT INTO tourists (id, continent, country, visitors, year) VALUES (1, 'North America', 'Canada', 2000, 2019), (2, 'North America', 'USA', 3000, 2019), (3, 'South America', 'Brazil', 500, 2019), (4, 'Europe', 'France', 1000, 2019);","completion":"SELECT t1.continent, SUM(t2.visitors) FROM tourists t1 INNER JOIN tourists t2 ON t1.year = t2.year WHERE t1.continent != t2.continent AND t2.continent = 'North America' AND t1.year = 2019 GROUP BY t1.continent;"}
{"prompt":"Calculate the number of days since the last inspection for power plants, specifically those with more than 60 days since the last inspection. with given SQL schema CREATE TABLE PollutionSources ( SourceID INT, SourceName NVARCHAR(50), Type NVARCHAR(50), LastInspection DATETIME); INSERT INTO PollutionSources (SourceID, SourceName, Type, LastInspection) VALUES (1, 'Oil Rig Alpha', 'Oil Rig', '2021-05-12 14:00:00'); INSERT INTO PollutionSources (SourceID, SourceName, Type, LastInspection) VALUES (2, 'Coal Power Plant Beta', 'Power Plant', '2021-03-04 08:30:00');","completion":"SELECT SourceID, SourceName, DATEDIFF(day, LastInspection, GETDATE()) as DaysSinceInspection FROM PollutionSources WHERE Type = 'Power Plant' AND DaysSinceInspection > 60"}
{"prompt":"What are the names and locations of marine protected areas (MPAs) in the Arctic Ocean and their year of establishment? with given SQL schema CREATE TABLE ArcticMPA (mpa_name VARCHAR(50), location VARCHAR(50), year_established INT, PRIMARY KEY(mpa_name)); INSERT INTO ArcticMPA (mpa_name, location, year_established) VALUES ('Arctic MPA 1', 'Arctic Ocean', 2010), ('Arctic MPA 2', 'Arctic Ocean', 2015);","completion":"SELECT ArcticMPA.mpa_name, ArcticMPA.location, ArcticMPA.year_established FROM ArcticMPA WHERE ArcticMPA.region = 'Arctic Ocean';"}
{"prompt":"List the dishes that have never been sold with given SQL schema CREATE TABLE dishes (dish_id INT, dish_name VARCHAR(255), price DECIMAL(5,2)); INSERT INTO dishes (dish_id, dish_name, price) VALUES (1, 'Margherita Pizza', 12.99), (2, 'Chicken Alfredo', 15.99), (3, 'Caesar Salad', 9.99); CREATE TABLE sales (sale_id INT, sale_date DATE, dish_id INT, quantity INT); INSERT INTO sales (sale_id, sale_date, dish_id, quantity) VALUES (1, '2022-01-01', 1, 2), (2, '2022-01-01', 2, 1), (3, '2022-01-02', 3, 3);","completion":"SELECT d.dish_name FROM dishes d LEFT JOIN sales s ON d.dish_id = s.dish_id WHERE s.dish_id IS NULL;"}
{"prompt":"Delete military equipment sales records with a value less than 1000000 from the year 2019. with given SQL schema CREATE TABLE Military_Equipment_Sales(id INT, country VARCHAR(255), year INT, value FLOAT); INSERT INTO Military_Equipment_Sales(id, country, year, value) VALUES (1, 'India', 2020, 50000000), (2, 'India', 2019, 4500000), (3, 'US', 2020, 80000000), (4, 'India', 2018, 40000000), (5, 'US', 2019, 75000000), (6, 'China', 2020, 60000000), (7, 'China', 2019, 55000000), (8, 'US', 2018, 70000000);","completion":"DELETE FROM Military_Equipment_Sales WHERE year = 2019 AND value < 1000000;"}
{"prompt":"What is the total value of military equipment sales to all countries? with given SQL schema CREATE TABLE military_sales (id INT, country VARCHAR, value FLOAT); INSERT INTO military_sales (id, country, value) VALUES (1, 'Canada', 5000000), (2, 'Mexico', 3000000), (3, 'Canada', 7000000);","completion":"SELECT SUM(value) FROM military_sales;"}
{"prompt":"What is the total amount of resources depleted for each mining site? with given SQL schema CREATE TABLE MiningSites (SiteID INT, SiteName VARCHAR(50), Location VARCHAR(50), EnvironmentalImpactScore INT, ResourcesDepleted FLOAT);","completion":"SELECT SiteName, SUM(ResourcesDepleted) FROM MiningSites GROUP BY SiteName;"}
{"prompt":"Delete a broadband plan from the broadband_plans table with given SQL schema CREATE TABLE broadband_plans (plan_id INT, plan_name VARCHAR(50), download_speed INT, upload_speed INT, price DECIMAL(5,2), contract_length INT, created_at TIMESTAMP);","completion":"DELETE FROM broadband_plans WHERE plan_id = 3001;"}
{"prompt":"Find the average donation amount per month, per donor, in descending order of the average donation amount? with given SQL schema CREATE TABLE Donations (DonationID int, DonorID int, DonationAmount decimal(10, 2), DonationDate date); INSERT INTO Donations (DonationID, DonorID, DonationAmount, DonationDate) VALUES (1, 1, 500.00, '2022-01-01'), (2, 1, 800.00, '2022-02-01'), (3, 2, 300.00, '2022-01-01'), (4, 3, 700.00, '2022-01-01');","completion":"SELECT DonorID, AVG(DonationAmount) OVER (PARTITION BY EXTRACT(MONTH FROM DonationDate), EXTRACT(YEAR FROM DonationDate) ORDER BY EXTRACT(MONTH FROM DonationDate), EXTRACT(YEAR FROM DonationDate)) AS AvgDonationPerMonth FROM Donations GROUP BY DonorID ORDER BY AvgDonationPerMonth DESC;"}
{"prompt":"What is the average score of players from the USA? with given SQL schema CREATE TABLE Players (PlayerID int, PlayerName varchar(50), Score int, Country varchar(50)); INSERT INTO Players (PlayerID, PlayerName, Score, Country) VALUES (1, 'John Doe', 90, 'USA'), (2, 'Jane Smith', 80, 'Canada');","completion":"SELECT AVG(Score) FROM Players WHERE Country = 'USA';"}
{"prompt":"What is the average score of players who joined after 2020-01-01, grouped by game_id? with given SQL schema CREATE TABLE games (game_id INT, name VARCHAR(100), release_date DATE); INSERT INTO games (game_id, name, release_date) VALUES (1, 'Game1', '2019-06-01'), (2, 'Game2', '2020-03-15'), (3, 'Game3', '2018-12-20'); CREATE TABLE player_scores (player_id INT, game_id INT, score INT, join_date DATE); INSERT INTO player_scores (player_id, game_id, score, join_date) VALUES (1, 1, 85, '2019-07-01'), (2, 1, 90, '2020-02-01'), (3, 2, 75, '2020-03-16'), (4, 2, 80, '2021-01-05'), (5, 3, 95, '2018-12-22'), (6, 3, 88, '2019-01-01');","completion":"SELECT s.game_id, AVG(s.score) AS avg_score FROM player_scores s JOIN games g ON s.game_id = g.game_id WHERE s.join_date > '2020-01-01' GROUP BY s.game_id;"}
{"prompt":"What is the most popular game by age group? with given SQL schema CREATE TABLE player (player_id INT, player_name VARCHAR(50), age INT, game_title VARCHAR(50)); INSERT INTO player (player_id, player_name, age, game_title) VALUES (1, 'John Doe', 25, 'League of Legends'); INSERT INTO player (player_id, player_name, age, game_title) VALUES (2, 'Jane Smith', 30, 'Mario Kart'); INSERT INTO player (player_id, player_name, age, game_title) VALUES (3, 'Bob Johnson', 35, 'League of Legends');","completion":"SELECT age, game_title, COUNT(*) as play_count FROM player GROUP BY age, game_title ORDER BY play_count DESC;"}
{"prompt":"Show the number of public schools in each state and the percentage of schools with a student population over 500 with given SQL schema CREATE TABLE schools (school_id INT PRIMARY KEY, school_name TEXT, school_type TEXT, state_id INT, num_students INT);CREATE TABLE states (state_id INT PRIMARY KEY, state_name TEXT);","completion":"SELECT s.state_name, COUNT(s.school_name), AVG(CASE WHEN s.num_students > 500 THEN 1 ELSE 0 END) * 100 as percentage FROM schools s INNER JOIN states st ON s.state_id = st.state_id GROUP BY s.state_name;"}
{"prompt":"How many units of lanthanum were extracted in India in 2018? with given SQL schema CREATE TABLE india_lanthanum (id INT, year INT, units INT); INSERT INTO india_lanthanum (id, year, units) VALUES (1, 2016, 1000), (2, 2017, 1200), (3, 2018, 1400);","completion":"SELECT COUNT(*) FROM india_lanthanum WHERE year = 2018;"}
{"prompt":"Calculate the total CO2 emissions (in metric tons) per capita for each country in the population_data and carbon_emissions tables. with given SQL schema CREATE TABLE population_data (country VARCHAR(50), year INT, population INT); CREATE TABLE carbon_emissions (country VARCHAR(50), year INT, co2_emissions FLOAT);","completion":"SELECT p.country, AVG(co2_emissions\/population*1000000) as co2_emissions_per_capita FROM population_data p JOIN carbon_emissions c ON p.country = c.country GROUP BY p.country;"}
{"prompt":"Find total carbon offsets achieved by projects in 'GreenProjects' table, with a budget over $100,000,000? with given SQL schema CREATE TABLE GreenProjects (project_id INT, name VARCHAR(100), budget INT, carbon_offsets_achieved INT);","completion":"SELECT SUM(carbon_offsets_achieved) FROM GreenProjects WHERE budget > 100000000;"}
{"prompt":"What is the average energy efficiency of hydro projects in Africa? with given SQL schema CREATE TABLE project (id INT, name TEXT, location TEXT, project_type TEXT, energy_efficiency FLOAT); INSERT INTO project (id, name, location, project_type, energy_efficiency) VALUES (1, 'Hydro Dam', 'Africa', 'Hydro', 0.55);","completion":"SELECT AVG(energy_efficiency) FROM project WHERE location = 'Africa' AND project_type = 'Hydro';"}
{"prompt":"Delete 'Pizzeria Yum' from the 'restaurants' table with given SQL schema CREATE TABLE restaurants (name TEXT, revenue FLOAT); INSERT INTO restaurants (name, revenue) VALUES ('Pizzeria Spumoni', 15000.0), ('Pizzeria Yum', 18000.0);","completion":"DELETE FROM restaurants WHERE name = 'Pizzeria Yum';"}
{"prompt":"What is the total revenue of restaurants serving Italian cuisine? with given SQL schema CREATE TABLE Restaurants (id INT, name VARCHAR(50), type VARCHAR(20)); CREATE TABLE Menu (id INT, restaurant_id INT, dish VARCHAR(50), category VARCHAR(20), price DECIMAL(5,2)); INSERT INTO Restaurants (id, name, type) VALUES (1, 'PastaPalace', 'Italian'); INSERT INTO Menu (id, restaurant_id, dish, category, price) VALUES (1, 1, 'Lasagna', 'Italian', 12.99);","completion":"SELECT SUM(price) FROM Menu JOIN Restaurants ON Menu.restaurant_id = Restaurants.id WHERE Restaurants.type = 'Italian';"}
{"prompt":"Calculate the total sales by product category with given SQL schema CREATE TABLE sales (sale_id INT, product_id INT, product_category VARCHAR(255), sales FLOAT); INSERT INTO sales (sale_id, product_id, product_category, sales) VALUES (1, 1, 'Electronics', 100), (2, 2, 'Clothing', 200), (3, 3, 'Electronics', 150);","completion":"SELECT product_category, SUM(sales) FROM sales GROUP BY product_category;"}
{"prompt":"How many fans are from each continent in the fan_demographics table? with given SQL schema CREATE TABLE fan_demographics (fan_id INT, fan_name VARCHAR(255), country VARCHAR(255), continent VARCHAR(255)); INSERT INTO fan_demographics (fan_id, fan_name, country, continent) VALUES (1, 'FanA', 'USA', 'North America'), (2, 'FanB', 'Canada', 'North America'), (3, 'FanC', 'Brazil', 'South America'), (4, 'FanD', 'India', 'Asia');","completion":"SELECT continent, COUNT(fan_id) as num_fans FROM fan_demographics GROUP BY continent;"}
{"prompt":"How many security incidents were recorded in the 'security_incidents' table for each severity level? with given SQL schema CREATE TABLE security_incidents (id INT PRIMARY KEY, incident_name TEXT, severity TEXT, date_reported DATE);","completion":"SELECT severity, COUNT(*) FROM security_incidents GROUP BY severity;"}
{"prompt":"What is the total number of security incidents and their average resolution time, broken down by month and year? with given SQL schema CREATE TABLE incidents (id INT, incident_date DATE, resolution_time INT); INSERT INTO incidents (id, incident_date, resolution_time) VALUES (1, '2021-04-01', 5); INSERT INTO incidents (id, incident_date, resolution_time) VALUES (2, '2021-07-15', 7); INSERT INTO incidents (id, incident_date, resolution_time) VALUES (3, '2021-10-02', 3);","completion":"SELECT YEAR(incident_date) as year, MONTH(incident_date) as month, COUNT(*) as num_incidents, AVG(resolution_time) as avg_resolution_time FROM incidents GROUP BY year, month;"}
{"prompt":"How many autonomous buses were operational in Mexico City as of January 1, 2022? with given SQL schema CREATE TABLE autonomous_buses( bus_id INT, operational_status VARCHAR(50), status_date DATE, city VARCHAR(50));","completion":"SELECT COUNT(*) FROM autonomous_buses WHERE operational_status = 'operational' AND status_date <= '2022-01-01' AND city = 'Mexico City';"}
{"prompt":"What is the minimum ride duration for ride-hailing services in Singapore? with given SQL schema CREATE TABLE ride_hailing (ride_id INT, ride_duration INT); INSERT INTO ride_hailing (ride_id, ride_duration) VALUES (1, 10), (2, 15), (3, 20), (4, 25);","completion":"SELECT MIN(ride_duration) as min_duration FROM ride_hailing;"}
{"prompt":"List the names of unions in the 'hospitality' sector that have more than 500 members and their respective collective bargaining agreements. with given SQL schema CREATE TABLE hospitality_unions (id INT, name TEXT, sector TEXT, collective_bargaining_agreement TEXT, member_count INT);","completion":"SELECT name, collective_bargaining_agreement FROM hospitality_unions WHERE sector = 'hospitality' AND member_count > 500;"}
{"prompt":"How many electric vehicles have been sold in California in the past year? with given SQL schema CREATE TABLE Sales (id INT, vehicle_id INT, quantity INT, date DATE); CREATE TABLE Vehicles (id INT, make VARCHAR(50), model VARCHAR(50), type VARCHAR(50)); INSERT INTO Sales (id, vehicle_id, quantity, date) VALUES (1, 1, 100, '2021-01-01'); INSERT INTO Vehicles (id, make, model, type) VALUES (1, 'Tesla', 'Model 3', 'Electric');","completion":"SELECT SUM(quantity) FROM Sales INNER JOIN Vehicles ON Sales.vehicle_id = Vehicles.id WHERE type = 'Electric' AND date >= DATEADD(year, -1, GETDATE());"}
{"prompt":"List all auto shows in the USA with electric vehicle participation. with given SQL schema CREATE TABLE AutoShows (Id INT, Name VARCHAR(50), Location VARCHAR(50), Date DATE); CREATE TABLE ElectricVehicles (Id INT, Name VARCHAR(50), AutoShowId INT); INSERT INTO AutoShows (Id, Name, Location, Date) VALUES (1, 'New York Auto Show', 'New York', '2022-04-15'), (2, 'Los Angeles Auto Show', 'California', '2022-11-19'); INSERT INTO ElectricVehicles (Id, Name, AutoShowId) VALUES (1, 'Tesla Model S', 1), (2, 'Nissan Leaf', 1), (3, 'Audi e-Tron', 2);","completion":"SELECT AutoShows.Name FROM AutoShows INNER JOIN ElectricVehicles ON AutoShows.Id = ElectricVehicles.AutoShowId WHERE Location = 'USA';"}
{"prompt":"What is the average safety rating for electric vehicles released in 2020? with given SQL schema CREATE TABLE Vehicles (Id INT, Name VARCHAR(100), Type VARCHAR(50), SafetyRating FLOAT, ReleaseYear INT); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, ReleaseYear) VALUES (1, 'Model S', 'Electric', 5.2, 2020); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, ReleaseYear) VALUES (2, 'Leaf', 'Electric', 4.8, 2020);","completion":"SELECT AVG(SafetyRating) FROM Vehicles WHERE Type = 'Electric' AND ReleaseYear = 2020;"}
{"prompt":"Show the number of trips taken by vessels in a given time period with given SQL schema VESSEL(vessel_id, last_maintenance_date); TRIP(voyage_id, trip_date, vessel_id)","completion":"SELECT v.vessel_id, COUNT(t.voyage_id) AS num_of_trips FROM VESSEL v JOIN TRIP t ON v.vessel_id = t.vessel_id WHERE t.trip_date BETWEEN v.last_maintenance_date AND DATEADD(day, 30, v.last_maintenance_date) GROUP BY v.vessel_id;"}
{"prompt":"List the top 5 recycling centers by total waste recycled in the state of New York, sorted by recycling rate in descending order. with given SQL schema CREATE TABLE recycling_centers (id INT, center_name TEXT, state TEXT, total_waste_recycled INT, total_waste INT); INSERT INTO recycling_centers (id, center_name, state, total_waste_recycled, total_waste) VALUES (1, 'Recycling Center A', 'New York', 20000, 30000), (2, 'Recycling Center B', 'New York', 15000, 25000);","completion":"SELECT center_name, (total_waste_recycled \/ total_waste) * 100 AS recycling_rate FROM recycling_centers WHERE state = 'New York' GROUP BY center_name ORDER BY recycling_rate DESC LIMIT 5;"}
{"prompt":"What is the total CO2 emission from waste incineration per city since Jan 1st, 2021? with given SQL schema CREATE TABLE Cities (id INT, city_name VARCHAR(255)); INSERT INTO Cities (id, city_name) VALUES (1, 'CityA'), (2, 'CityB'); CREATE TABLE IncinerationData (city_id INT, co2_emission INT, date DATE); INSERT INTO IncinerationData (city_id, co2_emission, date) VALUES (1, 50, '2021-01-01'), (1, 60, '2021-01-02'), (2, 40, '2021-01-01'), (2, 45, '2021-01-02');","completion":"SELECT Cities.city_name, SUM(IncinerationData.co2_emission) FROM Cities INNER JOIN IncinerationData ON Cities.id = IncinerationData.city_id WHERE date >= '2021-01-01' AND waste_type = 'incineration';"}
{"prompt":"What is the total volume of water saved by water conservation initiatives in Rio de Janeiro, Brazil in 2019? with given SQL schema CREATE TABLE WaterConservationInitiatives_Rio (id INT, year INT, savings INT); INSERT INTO WaterConservationInitiatives_Rio (id, year, savings) VALUES (1, 2019, 1200000), (2, 2018, 1150000), (3, 2017, 1100000);","completion":"SELECT SUM(savings) FROM WaterConservationInitiatives_Rio WHERE year = 2019;"}
{"prompt":"What is the total revenue generated from male members in the Midwest who used the cycling classes in the past 3 months? with given SQL schema CREATE TABLE Members (MemberID INT, Gender VARCHAR(10), Region VARCHAR(20), MembershipDate DATE); INSERT INTO Members (MemberID, Gender, Region, MembershipDate) VALUES (5, 'Male', 'Midwest', '2021-02-01'); CREATE TABLE Classes (ClassID INT, ClassType VARCHAR(20), Duration INT, MemberID INT); INSERT INTO Classes (ClassID, ClassType, Duration, MemberID) VALUES (50, 'Cycling', 60, 5); CREATE TABLE Transactions (TransactionID INT, MemberID INT, Service VARCHAR(20), Amount DECIMAL(5,2)); INSERT INTO Transactions (TransactionID, MemberID, Service, Amount) VALUES (500, 5, 'Cycling', 100.00);","completion":"SELECT SUM(Transactions.Amount) FROM Members INNER JOIN Classes ON Members.MemberID = Classes.MemberID INNER JOIN Transactions ON Members.MemberID = Transactions.MemberID WHERE Members.Gender = 'Male' AND Members.Region = 'Midwest' AND Classes.ClassType = 'Cycling' AND Transactions.TransactionDate BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND CURRENT_DATE;"}
{"prompt":"How many creative applications were developed for each category in the 'creative_applications' table? with given SQL schema CREATE TABLE creative_applications (id INT, category VARCHAR(50), application_name VARCHAR(100));","completion":"SELECT category, COUNT(*) as num_applications FROM creative_applications GROUP BY category;"}
{"prompt":"How many community development initiatives were completed in 2021 in Peru? with given SQL schema CREATE TABLE community_development (id INT, completion_year INT, initiative_name VARCHAR(50), completion_date DATE); INSERT INTO community_development (id, completion_year, initiative_name, completion_date) VALUES (1, 2020, 'School Construction', '2020-03-17'), (2, 2021, 'Community Center', '2021-09-28');","completion":"SELECT COUNT(*) FROM community_development WHERE completion_year = 2021;"}
{"prompt":"Delete all records from the aircraft_manufacturing table where the manufacturing_year is less than or equal to 2010 with given SQL schema CREATE TABLE aircraft_manufacturing (id INT PRIMARY KEY, model VARCHAR(100), manufacturing_year INT);","completion":"DELETE FROM aircraft_manufacturing WHERE manufacturing_year <= 2010;"}
{"prompt":"How many animals are there in the 'endangered_species' table? with given SQL schema CREATE TABLE endangered_species (species_id INT, animal_name VARCHAR(50), population INT); INSERT INTO endangered_species (species_id, animal_name, population) VALUES (1, 'Giant Panda', 1800), (2, 'Black Rhino', 5000), (3, 'Mountain Gorilla', 1000);","completion":"SELECT SUM(population) FROM endangered_species;"}
{"prompt":"Find the number of events attended by each individual in 2021 with given SQL schema CREATE TABLE event_attendance (id INT, individual_id INT, event_year INT);INSERT INTO event_attendance (id, individual_id, event_year) VALUES (1, 1, 2021), (2, 2, 2021), (3, 1, 2021);","completion":"SELECT individual_id, COUNT(*) OVER (PARTITION BY individual_id) AS events_attended_by_each_individual FROM event_attendance WHERE event_year = 2021 ORDER BY individual_id;"}
{"prompt":"What is the number of repeat attendees for each event type in 2021? with given SQL schema CREATE TABLE Events (EventID INT, EventTypeID INT, EventDate DATE); CREATE TABLE EventAttendance (EventID INT, AudienceID INT); CREATE TABLE Audience (AudienceID INT, AudienceName VARCHAR(50)); INSERT INTO Events (EventID, EventTypeID, EventDate) VALUES (1, 1, '2021-01-01'), (2, 1, '2021-02-01'), (3, 2, '2021-03-01'); INSERT INTO EventAttendance (EventID, AudienceID) VALUES (1, 1), (1, 2), (2, 1), (2, 3), (3, 1), (3, 2); INSERT INTO Audience (AudienceID, AudienceName) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie');","completion":"SELECT et.EventTypeName, COUNT(DISTINCT ea.AudienceID) as NumRepeatAttendees FROM EventAttendance ea INNER JOIN Events e ON ea.EventID = e.EventID INNER JOIN EventTypes et ON e.EventTypeID = et.EventTypeID INNER JOIN (SELECT AudienceID, COUNT(EventID) as NumEvents FROM EventAttendance GROUP BY AudienceID HAVING COUNT(EventID) > 1) repeat_attendees ON ea.AudienceID = repeat_attendees.AudienceID GROUP BY et.EventTypeName;"}
{"prompt":"What is the total number of tickets sold for performances with a rating of 5? with given SQL schema CREATE TABLE performance (id INT PRIMARY KEY, name VARCHAR(255), date DATE, artist_id INT, rating INT); INSERT INTO performance (id, name, date, artist_id, rating) VALUES (1, 'Dance Recital', '2022-03-01', 1, 5);","completion":"SELECT SUM(t.quantity) as total_tickets_sold FROM performance p INNER JOIN ticket t ON p.id = t.performance_id WHERE p.rating = 5;"}
{"prompt":"How many workers are employed in each state in sustainable building projects? with given SQL schema CREATE TABLE Workers (WorkerID INT, ProjectID INT, State CHAR(2), IsSustainable BOOLEAN);","completion":"SELECT State, COUNT(*) FROM Workers WHERE IsSustainable=TRUE GROUP BY State;"}
{"prompt":"What is the maximum billing amount for cases handled by attorneys from New York who have won more than 80% of their cases? with given SQL schema CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), state VARCHAR(2), win_rate DECIMAL(5, 2)); INSERT INTO attorneys (attorney_id, name, state, win_rate) VALUES (1, 'Alex Rodriguez', 'NY', 0.9), (2, 'Jennifer Lee', 'CA', 0.6), (3, 'Michael Chen', 'NY', 0.85); CREATE TABLE cases (case_id INT, attorney_id INT, billing_amount DECIMAL(10, 2), case_outcome VARCHAR(10)); INSERT INTO cases (case_id, attorney_id, billing_amount, case_outcome) VALUES (1, 1, 5000.00, 'Won'), (2, 1, 6000.00, 'Won'), (3, 2, 9000.00, 'Lost'), (4, 3, 8000.00, 'Won');","completion":"SELECT MAX(billing_amount) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.state = 'NY' AND attorneys.win_rate > 0.8 AND cases.case_outcome = 'Won';"}
{"prompt":"List the top 3 contributing countries to climate change based on emissions data, excluding the US with given SQL schema CREATE TABLE emissions (id INT PRIMARY KEY, country VARCHAR(50), emissions INT);          INSERT INTO emissions (id, country, emissions) VALUES (1, 'China', 10000), (2, 'US', 8000), (3, 'India', 6000), (4, 'Russia', 5000);","completion":"SELECT country, emissions FROM emissions WHERE country NOT IN ('US') ORDER BY emissions DESC LIMIT 3;"}
{"prompt":"What is the total number of hospitals that offer mental health services in each state? with given SQL schema CREATE TABLE Hospitals (HospitalID INT, Name TEXT, City TEXT, State TEXT, MentalHealth BOOLEAN); INSERT INTO Hospitals (HospitalID, Name, City, State, MentalHealth) VALUES (1, 'Jackson Memorial Hospital', 'Miami', 'Florida', TRUE);","completion":"SELECT State, COUNT(*) FROM Hospitals WHERE MentalHealth = TRUE GROUP BY State;"}
{"prompt":"What is the average investment amount per round for companies founded by Latinx? with given SQL schema CREATE TABLE investments (company_id INT, round_type TEXT, raised_amount INT); INSERT INTO investments (company_id, round_type, raised_amount) VALUES (1, 'Series A', 5000000); INSERT INTO investments (company_id, round_type, raised_amount) VALUES (2, 'Seed', 1000000); CREATE TABLE diversity (company_id INT, latinx_founder BOOLEAN); INSERT INTO diversity (company_id, latinx_founder) VALUES (1, true); INSERT INTO diversity (company_id, latinx_founder) VALUES (2, false);","completion":"SELECT AVG(raised_amount) as avg_investment_per_round FROM investments JOIN diversity ON investments.company_id = diversity.company_id WHERE diversity.latinx_founder = true;"}
{"prompt":"Find the number of students who received accommodations in the \"Online Learning\" category with given SQL schema CREATE TABLE accommodations (student_id INT, accommodation_category VARCHAR(20)); INSERT INTO accommodations (student_id, accommodation_category) VALUES (1, 'Online Learning'), (2, 'Exam'), (3, 'Note Taking');","completion":"SELECT COUNT(*) FROM accommodations WHERE accommodation_category = 'Online Learning';"}
{"prompt":"Delete all records from the CoralReefs table that represent reefs with a health status of \"Degraded\". with given SQL schema CREATE TABLE CoralReefs (Name VARCHAR(255), Location VARCHAR(255), Health_Status VARCHAR(255)); INSERT INTO CoralReefs (Name, Location, Health_Status) VALUES ('Great Barrier Reef', 'Australia', 'Degraded'), ('Palau Reef', 'Palau', 'Healthy'), ('Belize Barrier Reef', 'Belize', 'Vulnerable');","completion":"DELETE FROM CoralReefs WHERE Health_Status = 'Degraded';"}
{"prompt":"What is the minimum number of daily transactions for smart contracts associated with digital assets issued by companies in Africa? with given SQL schema CREATE TABLE Smart_Contracts (Contract_ID INT, Asset_ID INT, Daily_Transactions INT); INSERT INTO Smart_Contracts (Contract_ID, Asset_ID, Daily_Transactions) VALUES (1, 1, 500), (2, 2, 700), (3, 1, 600), (4, 3, 800), (5, 4, 900); CREATE TABLE Digital_Assets (Asset_ID INT, Asset_Name VARCHAR(255), Issuer_Country VARCHAR(50)); INSERT INTO Digital_Assets (Asset_ID, Asset_Name, Issuer_Country) VALUES (1, 'Asset1', 'Egypt'), (2, 'Asset2', 'Nigeria'), (3, 'Asset3', 'South Africa'), (4, 'Asset4', 'Kenya');","completion":"SELECT MIN(Daily_Transactions) AS Min_Transactions FROM Smart_Contracts JOIN Digital_Assets ON Smart_Contracts.Asset_ID = Digital_Assets.Asset_ID WHERE Issuer_Country IN ('Egypt', 'Nigeria', 'South Africa', 'Kenya');"}
{"prompt":"What is the regulatory framework status in 'germany'? with given SQL schema CREATE TABLE regulation (id INT, country VARCHAR(20), status VARCHAR(20)); INSERT INTO regulation (id, country, status) VALUES (1, 'germany', 'under_review');","completion":"SELECT status FROM regulation WHERE country = 'germany';"}
{"prompt":"What is the total market cap of digital assets that have been involved in at least 1000 transactions? with given SQL schema CREATE TABLE digital_assets (asset_id INT, name VARCHAR(255), market_cap DECIMAL(18,2)); INSERT INTO digital_assets (asset_id, name, market_cap) VALUES (1, 'Bitcoin', 1000000000000.00), (2, 'Ethereum', 300000000000.00), (3, 'Litecoin', 10000000000.00), (4, 'Monero', 5000000000.00), (5, 'Ripple', 20000000000.00); CREATE TABLE transactions (transaction_id INT, asset_id INT); INSERT INTO transactions (transaction_id, asset_id) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 2), (6, 2), (7, 3), (8, 3), (9, 3), (10, 3), (11, 4), (12, 4), (13, 5), (14, 5), (15, 5);","completion":"SELECT SUM(market_cap) AS total_market_cap FROM digital_assets WHERE asset_id IN (SELECT asset_id FROM transactions GROUP BY asset_id HAVING COUNT(*) >= 1000);"}
{"prompt":"What is the average number of disaster preparedness trainings held per year in the state of California? with given SQL schema CREATE TABLE DisasterPreparedness (id INT, state VARCHAR(20), year INT, training_count INT);","completion":"SELECT AVG(training_count\/1.0) FROM DisasterPreparedness WHERE state = 'California' GROUP BY year;"}
{"prompt":"How many art pieces does each artist have in the museum? with given SQL schema CREATE TABLE MuseumArtists (id INT, artist_name VARCHAR(255), museum_name VARCHAR(255), quantity INT); INSERT INTO MuseumArtists (id, artist_name, museum_name, quantity) VALUES (1, 'Artist A', 'Museum A', 10), (2, 'Artist B', 'Museum B', 15), (3, 'Artist C', 'Museum C', 5), (4, 'Artist D', 'Museum A', 20);","completion":"SELECT artist_name, museum_name, SUM(quantity) FROM MuseumArtists GROUP BY artist_name, museum_name;"}
{"prompt":"What is the average attendance for 'Jazz' concerts? with given SQL schema CREATE TABLE concerts(id INT, genre VARCHAR(255), avg_attendance FLOAT); INSERT INTO concerts (id, genre, avg_attendance) VALUES (1, 'Jazz', 200.0), (2, 'Classical', 300.0), (3, 'Rock', 500.0);","completion":"SELECT avg_attendance FROM concerts WHERE genre = 'Jazz';"}
{"prompt":"Add a new veteran named 'James Smith' to the veteran_employment table with a veteran_id of 888 with given SQL schema CREATE TABLE veteran_employment (veteran_id INT, name VARCHAR(50), job_start_date DATE);","completion":"INSERT INTO veteran_employment (veteran_id, name) VALUES (888, 'James Smith');"}
{"prompt":"Update the \"threat_level\" of the \"threat_intelligence\" table to \"medium\" where the \"threat_source\" is \"United Nations\" and the \"threat_date\" is before '2022-01-01' with given SQL schema CREATE TABLE threat_intelligence (threat_id INT, threat_source VARCHAR(50), threat_level VARCHAR(50), threat_description VARCHAR(50), threat_date DATE);","completion":"UPDATE threat_intelligence SET threat_level = 'medium' WHERE threat_source = 'United Nations' AND threat_date < '2022-01-01';"}
{"prompt":"Show all employees who have more than 2 years of experience in 'sustainable_manufacturing' skill with given SQL schema CREATE TABLE employee_skills (employee_id INT, skill_name VARCHAR(50), experience_years INT); INSERT INTO employee_skills (employee_id, skill_name, experience_years) VALUES (1, 'sustainable_manufacturing', 3), (2, 'quality_control', 1), (3, 'sustainable_manufacturing', 5);","completion":"SELECT employee_id FROM employee_skills WHERE skill_name = 'sustainable_manufacturing' AND experience_years > 2;"}
{"prompt":"What were the total number of artifacts found in 2020, grouped by site? with given SQL schema CREATE TABLE excavation_sites (site_id INT, site_name TEXT, year INT, total_artifacts INT); INSERT INTO excavation_sites (site_id, site_name, year, total_artifacts) VALUES (1, 'Site A', 2018, 300), (2, 'Site B', 2019, 550), (3, 'Site C', 2020, 700), (4, 'Site D', 2021, 850);","completion":"SELECT site_name, SUM(total_artifacts) FROM excavation_sites WHERE year = 2020 GROUP BY site_name;"}
{"prompt":"What is the name of the hospital with the lowest patient capacity in the Northeast region? with given SQL schema CREATE TABLE hospitals (id INT, region VARCHAR(255), name VARCHAR(255), patient_capacity INT); INSERT INTO hospitals (id, region, name, patient_capacity) VALUES (1, 'Northeast', 'Hospital A', 100), (2, 'West', 'Hospital B', 150), (3, 'South', 'Hospital C', 120);","completion":"SELECT name FROM hospitals WHERE region = 'Northeast' ORDER BY patient_capacity ASC LIMIT 1;"}
{"prompt":"Insert a new open pedagogy resource 'Critical Thinking in Math Education'. with given SQL schema CREATE TABLE open_pedagogy_resources (resource_name VARCHAR(50), topic VARCHAR(50));","completion":"INSERT INTO open_pedagogy_resources (resource_name, topic) VALUES ('Critical Thinking in Math Education', 'Mathematics Education');"}
{"prompt":"List departments with more than one employee. with given SQL schema CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), ManagerID INT); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, ManagerID) VALUES (1, 'Jane', 'Smith', 'Marketing', 2), (2, 'Bruce', 'Johnson', 'IT', NULL), (3, 'Alice', 'Williams', 'Marketing', 1), (4, 'Charlie', 'Brown', 'HR', NULL), (5, 'Denise', 'Davis', 'Marketing', 1);","completion":"SELECT Department FROM Employees GROUP BY Department HAVING COUNT(DISTINCT EmployeeID) > 1;"}
{"prompt":"What is the total number of employees hired each year, with a running total? with given SQL schema CREATE TABLE Hiring (HireID INT, EmployeeName VARCHAR(50), HireYear INT, Department VARCHAR(50)); INSERT INTO Hiring (HireID, EmployeeName, HireYear, Department) VALUES (1, 'John Doe', 2020, 'IT'), (2, 'Jane Smith', 2019, 'HR'), (3, 'Alice Johnson', 2020, 'IT'), (4, 'Bob Brown', 2018, 'Finance'), (5, 'Charlie Green', 2019, 'Finance');","completion":"SELECT HireYear, Department, COUNT(*) OVER (PARTITION BY HireYear ORDER BY HireYear) AS Running_Total FROM Hiring;"}
{"prompt":"What is the percentage of energy efficiency improvement, per sector, compared to 2015 levels? with given SQL schema CREATE TABLE energy_efficiency (id INT, sector VARCHAR(50), year INT, efficiency FLOAT); INSERT INTO energy_efficiency (id, sector, year, efficiency) VALUES (1, 'Industry', 2015, 100.0), (2, 'Industry', 2020, 105.0), (3, 'Residential', 2015, 100.0), (4, 'Residential', 2020, 103.0);","completion":"SELECT sector, (SUM(efficiency) \/ (SELECT SUM(efficiency) FROM energy_efficiency WHERE year = 2015 AND sector = e.sector) * 100.0) - 100.0 AS improvement FROM energy_efficiency e WHERE year = 2020 GROUP BY sector;"}
{"prompt":"What is the total capacity (MW) of wind farms in Germany and France? with given SQL schema CREATE TABLE windfarm (id INT, country VARCHAR(50), name VARCHAR(50), capacity FLOAT); INSERT INTO windfarm (id, country, name, capacity) VALUES (1, 'Germany', 'Windfarm 1', 100.5), (2, 'Germany', 'Windfarm 2', 150.2), (3, 'France', 'Windfarm 3', 200.1), (4, 'France', 'Windfarm 4', 250.3);","completion":"SELECT SUM(capacity) FROM windfarm WHERE country IN ('Germany', 'France');"}
{"prompt":"Insert a new record for a basketball player 'Marta Santiago' from 'Spain' in the 'basketball_players' table with given SQL schema CREATE TABLE basketball_players (player_id INT, player_name VARCHAR(50), position VARCHAR(50), team VARCHAR(50), country VARCHAR(50));","completion":"INSERT INTO basketball_players (player_id, player_name, position, team, country) VALUES (1, 'Marta Santiago', 'Point Guard', 'Barcelona Basquet', 'Spain');"}
{"prompt":"What is the average number of items delivered per day for 'items_delivered' table for 'South America' in Q3 2021? with given SQL schema CREATE TABLE items_delivered (delivery_id INT, item_count INT, delivery_date DATE, country VARCHAR(50)); INSERT INTO items_delivered (delivery_id, item_count, delivery_date, country) VALUES (1, 15, '2021-07-01', 'South America'), (2, 20, '2021-07-02', 'South America');","completion":"SELECT AVG(item_count) FROM items_delivered WHERE EXTRACT(QUARTER FROM delivery_date) = 3 AND country = 'South America';"}
{"prompt":"Delete records from the \"accessibility_features\" table where the \"feature_type\" is \"Voice Command\" and the \"status\" is \"Discontinued\" with given SQL schema CREATE TABLE accessibility_features (id INT PRIMARY KEY, product_name VARCHAR(50), feature_type VARCHAR(50), status VARCHAR(20)); INSERT INTO accessibility_features (id, product_name, feature_type, status) VALUES (1, 'Smart Home Device', 'Voice Command', 'Discontinued'); INSERT INTO accessibility_features (id, product_name, feature_type, status) VALUES (2, 'AI Chatbot', 'Voice Command', 'Active');","completion":"DELETE FROM accessibility_features WHERE feature_type = 'Voice Command' AND status = 'Discontinued';"}
{"prompt":"Display the number of AI patents filed by year and company in the 'ai_patents' table with given SQL schema CREATE TABLE ai_patents (id INT PRIMARY KEY, company VARCHAR(50), year INT, patent VARCHAR(50));","completion":"SELECT year, company, COUNT(*) as num_patents FROM ai_patents GROUP BY year, company ORDER BY year;"}
{"prompt":"Update the start date of an ethical AI project in the EthicalAIPractices table. with given SQL schema CREATE TABLE EthicalAIPractices (Project VARCHAR(50), Description TEXT, StartDate DATE, EndDate DATE); INSERT INTO EthicalAIPractices (Project, Description, StartDate, EndDate) VALUES ('AI for Children', 'An AI project focused on improving the lives of children.', '2022-01-01', '2023-12-31');","completion":"UPDATE EthicalAIPractices SET StartDate = '2023-01-01' WHERE Project = 'AI for Children';"}
{"prompt":"What is the average number of digital divide projects per year in Asia? with given SQL schema CREATE TABLE digital_divide_projects (project_id INT, country VARCHAR(20), completion_year INT); INSERT INTO digital_divide_projects (project_id, country, completion_year) VALUES (1, 'India', 2018), (2, 'China', 2019), (3, 'Japan', 2020), (4, 'India', 2021), (5, 'China', 2017);","completion":"SELECT AVG(COUNT(*)) FROM digital_divide_projects GROUP BY completion_year;"}
{"prompt":"What is the total budget allocated for accessible technology projects in the education sector? with given SQL schema CREATE TABLE accessible_tech (id INT, sector VARCHAR(20), budget INT); INSERT INTO accessible_tech (id, sector, budget) VALUES (1, 'education', 200000), (2, 'healthcare', 100000), (3, 'finance', 150000);","completion":"SELECT SUM(budget) FROM accessible_tech WHERE sector = 'education';"}
{"prompt":"What is the total fare collected from bus routes that start with the letter 'B'? with given SQL schema CREATE TABLE bus_trips (trip_id INT, route_id INT, fare FLOAT); INSERT INTO bus_trips (trip_id, route_id, fare) VALUES (1, 101, 2.5), (2, 202, 3.0), (3, 303, 1.5), (4, 404, 2.0), (5, 505, 2.5), (6, 106, 3.0); CREATE TABLE bus_routes (route_id INT, route_name TEXT, starting_letter TEXT); INSERT INTO bus_routes (route_id, route_name, starting_letter) VALUES (101, 'Broadway', 'B'), (202, 'Park Ave', 'P'), (303, 'Lakeshore', 'L'), (404, 'Sunset Blvd', 'S'), (505, 'Beverly Hills', 'B');","completion":"SELECT SUM(bt.fare) FROM bus_trips bt JOIN bus_routes br ON bt.route_id = br.route_id WHERE br.starting_letter = 'B';"}
{"prompt":"Find the number of days since each brand last used sustainable material and show the result for each brand. with given SQL schema CREATE TABLE Brand_Sustainable_Material_Last_Usage(Brand_ID INT, Last_Usage_Date DATE); INSERT INTO Brand_Sustainable_Material_Last_Usage(Brand_ID, Last_Usage_Date) VALUES (1, '2022-01-01'), (2, '2022-01-03'), (3, NULL), (4, '2022-01-02');","completion":"SELECT Brand_ID, DATEDIFF(DAY, Last_Usage_Date, GETDATE()) as Days_Since_Last_Usage FROM Brand_Sustainable_Material_Last_Usage WHERE Last_Usage_Date IS NOT NULL;"}
{"prompt":"How many fair labor practice violations have been reported for each region in the ethical fashion industry? with given SQL schema CREATE TABLE labor_practices_violations (region VARCHAR(50), violations INT); INSERT INTO labor_practices_violations (region, violations) VALUES ('Africa', 250), ('Asia', 300), ('Latin America', 200);","completion":"SELECT region, violations FROM labor_practices_violations GROUP BY region;"}
{"prompt":"Identify the top consumer of ethical fashion by total spending in Africa. with given SQL schema CREATE TABLE african_consumers (id INT, name VARCHAR(100), country VARCHAR(50), spend DECIMAL(10,2)); INSERT INTO african_consumers (id, name, country, spend) VALUES (1, 'Eve', 'Nigeria', 700.00), (2, 'Fiona', 'South Africa', 800.00), (3, 'Grace', 'Egypt', 650.00);","completion":"SELECT name, country, SUM(spend) as total_spend FROM african_consumers GROUP BY country ORDER BY total_spend DESC LIMIT 1;"}
{"prompt":"Which countries have the most manufacturers with sustainable labor practices? with given SQL schema CREATE TABLE ManufacturerLabor (manufacturer_id INT, manufacturer_name VARCHAR(255), country VARCHAR(255), has_sustainable_labor BOOLEAN); INSERT INTO ManufacturerLabor (manufacturer_id, manufacturer_name, country, has_sustainable_labor) VALUES (1, 'EcoPure', 'USA', true), (2, 'GreenYarn', 'Canada', false), (3, 'SustainableTimber', 'Mexico', true), (4, 'EthicalMinerals', 'India', true), (5, 'FairTradeFabrics', 'Bangladesh', true), (6, 'EcoDyes', 'China', false), (7, 'EcoPaints', 'France', true), (8, 'GreenBuilding', 'Germany', true);","completion":"SELECT country, COUNT(*) as num_sustainable_manufacturers FROM ManufacturerLabor WHERE has_sustainable_labor = true GROUP BY country ORDER BY num_sustainable_manufacturers DESC;"}
{"prompt":"How many size 2XL garments were sold in the last month? with given SQL schema CREATE TABLE sales (item VARCHAR(20), size VARCHAR(5), date DATE); INSERT INTO sales (item, size, date) VALUES ('T-Shirt', '2XL', '2022-07-01'), ('Pants', '2XL', '2022-07-15');","completion":"SELECT COUNT(*) FROM sales WHERE size = '2XL' AND date >= '2022-07-01' AND date <= '2022-07-31';"}
{"prompt":"Calculate the sum of donations made by a specific donor 'Aisha' in 2021. with given SQL schema CREATE TABLE donations (donation_id INT, amount DECIMAL(10, 2), donor VARCHAR(255), donation_date DATE); INSERT INTO donations (donation_id, amount, donor, donation_date) VALUES (1, 100, 'Aisha', '2021-05-05'); INSERT INTO donations (donation_id, amount, donor, donation_date) VALUES (2, 200, 'Ali', '2021-12-31');","completion":"SELECT SUM(amount) FROM donations WHERE donor = 'Aisha' AND donation_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"What is the total number of financial transactions made by volunteers? with given SQL schema CREATE TABLE Volunteers (VolunteerID int, VolunteerName varchar(50), VolunteerNationality varchar(50), VolunteerSignUpDate date); CREATE TABLE FinancialTransactions (TransactionID int, TransactionAmount numeric(10,2), TransactionDate date, VolunteerID int); INSERT INTO Volunteers (VolunteerID, VolunteerName, VolunteerNationality, VolunteerSignUpDate) VALUES (1, 'Sophia Garcia', 'Mexican', '2021-05-10'), (2, 'Hamza Ahmed', 'Pakistani', '2021-03-22'), (3, 'Lea Kim', 'South Korean', '2021-07-18'); INSERT INTO FinancialTransactions (TransactionID, TransactionAmount, TransactionDate, VolunteerID) VALUES (1, 25, '2021-06-01', 1), (2, 30, '2021-04-01', 2), (3, 40, '2021-08-01', 3);","completion":"SELECT COUNT(*) as TotalTransactions FROM FinancialTransactions INNER JOIN Volunteers ON FinancialTransactions.VolunteerID = Volunteers.VolunteerID;"}
{"prompt":"Update the name of product with id 2 to 'Eco-friendly Product2' in 'OrganicProducts' view with given SQL schema CREATE VIEW OrganicProducts AS SELECT * FROM Products WHERE is_organic = TRUE; INSERT INTO Products (id, name, is_organic) VALUES (1, 'Product1', TRUE), (2, 'Product2', FALSE), (3, 'Product3', TRUE);","completion":"UPDATE OrganicProducts SET name = 'Eco-friendly Product2' WHERE id = 2;"}
{"prompt":"What is the total number of organic fruits in the inventory? with given SQL schema CREATE TABLE Inventory(item_id INT, item_name VARCHAR(50), is_organic BOOLEAN, category VARCHAR(50)); INSERT INTO Inventory VALUES(1,'Apples',TRUE,'Fruit'),(2,'Bananas',TRUE,'Fruit'),(3,'Carrots',FALSE,'Vegetable');","completion":"SELECT COUNT(*) FROM Inventory WHERE is_organic = TRUE AND category = 'Fruit';"}
{"prompt":"Get the carrier_name and count of shipments for each carrier from the shipment table grouped by carrier_name with given SQL schema CREATE TABLE shipment (shipment_id VARCHAR(10), status VARCHAR(20), warehouse_id VARCHAR(10), carrier_name VARCHAR(30), shipped_date DATE);","completion":"SELECT carrier_name, COUNT(*) as count FROM shipment GROUP BY carrier_name;"}
{"prompt":"How many unique item types have been shipped via each transportation mode? with given SQL schema CREATE TABLE shipments (id INT, order_id INT, item_type VARCHAR(50), transportation_mode VARCHAR(50), quantity INT); INSERT INTO shipments (id, order_id, item_type, transportation_mode, quantity) VALUES (1, 1001, 'Item1', 'Air', 50), (2, 1002, 'Item2', 'Road', 80), (3, 1003, 'Item1', 'Rail', 75), (4, 1004, 'Item3', 'Sea', 30);","completion":"SELECT transportation_mode, COUNT(DISTINCT item_type) as unique_item_types FROM shipments GROUP BY transportation_mode;"}
{"prompt":"What is the total number of late deliveries by each warehouse in the Americas region for the past month, excluding warehouses with less than 25 late deliveries? with given SQL schema CREATE TABLE Warehouses (WarehouseID int, WarehouseName varchar(255), Region varchar(255));CREATE TABLE Shipments (ShipmentID int, WarehouseID int, LateDelivery bit, ShippedDate datetime); INSERT INTO Warehouses (WarehouseID, WarehouseName, Region) VALUES (1, 'W1', 'Americas'); INSERT INTO Shipments (ShipmentID, WarehouseID, LateDelivery, ShippedDate) VALUES (1, 1, 1, '2022-01-01');","completion":"SELECT w.WarehouseName, COUNT(s.ShipmentID) as LateDeliveries FROM Warehouses w INNER JOIN Shipments s ON w.WarehouseID = s.WarehouseID WHERE w.Region = 'Americas' AND s.LateDelivery = 1 AND s.ShippedDate >= DATEADD(month, -1, GETDATE()) GROUP BY w.WarehouseName HAVING COUNT(s.ShipmentID) >= 25;"}
{"prompt":"List the number of public parks in New York state and their respective areas in square meters. with given SQL schema CREATE TABLE parks (name VARCHAR(255), state VARCHAR(255), area_sqm INT); INSERT INTO parks (name, state, area_sqm) VALUES ('Central Park', 'New York', 341160000), ('Prospect Park', 'New York', 58500000);","completion":"SELECT name, state, area_sqm FROM parks WHERE state = 'New York';"}
{"prompt":"What is the percentage of faculty members who identify as AAPI in the School of Business? with given SQL schema CREATE TABLE faculty_members (id INT, faculty_name VARCHAR(50), faculty_department VARCHAR(50), faculty_race VARCHAR(20)); INSERT INTO faculty_members (id, faculty_name, faculty_department, faculty_race) VALUES (1, 'Taylor Smith', 'Business Administration', 'AAPI'), (2, 'James Johnson', 'Marketing', 'White'), (3, 'Avery Brown', 'Finance', 'Black'), (4, 'Katie Davis', 'Management', 'White'), (5, 'Jamie Wilson', 'Accounting', 'Latinx'), (6, 'Leah Kim', 'Business Analytics', 'AAPI');","completion":"SELECT (COUNT(*) FILTER (WHERE faculty_race = 'AAPI')) * 100.0 \/ COUNT(*) FROM faculty_members WHERE faculty_department LIKE '%Business%';"}
{"prompt":"What is the average budget for green building projects in the green_buildings table? with given SQL schema CREATE TABLE IF NOT EXISTS green_buildings (  building_id INT,   building_name VARCHAR(255),   budget FLOAT,   PRIMARY KEY (building_id)); INSERT INTO green_buildings (building_id, building_name, budget) VALUES (1, 'Eco-Tower', 1000000), (2, 'Green Heights', 800000), (3, 'Sustainable Haven', 900000);","completion":"SELECT AVG(budget) FROM green_buildings;"}
{"prompt":"What is the total installed capacity of wind energy projects in Germany? with given SQL schema CREATE TABLE wind_projects (id INT, country VARCHAR(50), capacity FLOAT); INSERT INTO wind_projects (id, country, capacity) VALUES (1, 'Germany', 2.345), (2, 'France', 1.234);","completion":"SELECT SUM(capacity) FROM wind_projects WHERE country = 'Germany';"}
{"prompt":"What is the total investment (in USD) in energy efficient lighting projects, grouped by city and project type, where the total investment is greater than 1,000,000 USD? with given SQL schema CREATE TABLE energy_efficient_lighting (project_id INT, city VARCHAR(50), project_type VARCHAR(50), investment_cost INT);","completion":"SELECT city, project_type, SUM(investment_cost) FROM energy_efficient_lighting GROUP BY city, project_type HAVING SUM(investment_cost) > 1000000;"}
{"prompt":"What is the maximum number of mental health parity violations in the Southern states? with given SQL schema CREATE TABLE mental_health_parity_violations (violation_id INT, state VARCHAR(255), number INT); INSERT INTO mental_health_parity_violations (violation_id, state, number) VALUES (1, 'Alabama', 10), (2, 'Georgia', 15), (3, 'Florida', 20), (4, 'North Carolina', 12), (5, 'South Carolina', 18), (6, 'Mississippi', 14), (7, 'Louisiana', 16), (8, 'Arkansas', 11), (9, 'Tennessee', 13), (10, 'Kentucky', 17), (11, 'Virginia', 19);","completion":"SELECT MAX(number) as max_violations FROM mental_health_parity_violations WHERE state IN ('Alabama', 'Georgia', 'Florida', 'North Carolina', 'South Carolina', 'Mississippi', 'Louisiana', 'Arkansas', 'Tennessee', 'Virginia', 'Kentucky');"}
{"prompt":"List the number of cultural heritage sites in Tokyo and Seoul. with given SQL schema CREATE TABLE asian_sites (site_id INT, name VARCHAR(255), city VARCHAR(255), type VARCHAR(255)); INSERT INTO asian_sites (site_id, name, city, type) VALUES (1, 'Todai-ji Temple', 'Nara', 'historical'), (2, 'Gyeongbokgung Palace', 'Seoul', 'historical');","completion":"SELECT city, COUNT(*) FROM asian_sites WHERE city IN ('Tokyo', 'Seoul') AND type = 'historical' GROUP BY city;"}
{"prompt":"What are the top 5 countries with the most virtual tourism sessions in the first quarter of 2023? with given SQL schema CREATE TABLE virtual_tourism (id INT, country VARCHAR(50), num_sessions INT, session_date DATE); INSERT INTO virtual_tourism (id, country, num_sessions, session_date) VALUES (1, 'USA', 2500, '2023-01-01'), (2, 'Canada', 1800, '2023-01-02');","completion":"SELECT country, SUM(num_sessions) as total_sessions FROM virtual_tourism WHERE session_date BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY country ORDER BY total_sessions DESC LIMIT 5;"}
{"prompt":"What is the total number of virtual tour engagements for hotels in 'Barcelona' with a rating of at least 4.5? with given SQL schema CREATE TABLE TourEngagements (hotel_id INT, city TEXT, rating FLOAT, num_engagements INT); INSERT INTO TourEngagements (hotel_id, city, rating, num_engagements) VALUES (1, 'Barcelona', 4.8, 100), (2, 'Barcelona', 4.7, 120), (3, 'Barcelona', 3.5, 50);","completion":"SELECT SUM(num_engagements) FROM TourEngagements WHERE city = 'Barcelona' AND rating >= 4.5;"}
{"prompt":"Identify the number of artworks in the 'Expressionism' genre, grouped by the artist's country of origin and the artwork's medium. with given SQL schema CREATE TABLE Artwork (artwork_id INT, artwork_name VARCHAR(30), genre VARCHAR(20), artist_id INT, medium VARCHAR(20)); CREATE TABLE Artist (artist_id INT, artist_name VARCHAR(30), country_of_origin VARCHAR(30));","completion":"SELECT Artist.country_of_origin, Artwork.medium, COUNT(Artwork.artwork_id) FROM Artist INNER JOIN Artwork ON Artist.artist_id = Artwork.artist_id WHERE Artwork.genre = 'Expressionism' GROUP BY Artist.country_of_origin, Artwork.medium;"}
{"prompt":"How many UNESCO heritage sites are there in Oceania? with given SQL schema CREATE TABLE UNESCO_SITES (id INT PRIMARY KEY, name VARCHAR(255), region VARCHAR(255), type VARCHAR(255)); INSERT INTO UNESCO_SITES (id, name, region, type) VALUES (1, 'Great Barrier Reef', 'Oceania', 'Natural');","completion":"SELECT COUNT(*) FROM UNESCO_SITES WHERE region = 'Oceania';"}
{"prompt":"What is the average age of patients who improved after medication? with given SQL schema CREATE TABLE patients (id INT, age INT, improvement VARCHAR(10)); INSERT INTO patients (id, age, improvement) VALUES (1, 35, 'improved'), (2, 42, 'did not improve'), (3, 28, 'improved'), (4, 50, 'did not improve'), (5, 45, 'improved'), (6, 30, 'did not improve');","completion":"SELECT AVG(age) FROM patients WHERE improvement = 'improved';"}
{"prompt":"What is the average age of patients who received therapy in Canada? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender TEXT, country TEXT); INSERT INTO patients (patient_id, age, gender, country) VALUES (1, 30, 'Male', 'Canada'); INSERT INTO patients (patient_id, age, gender, country) VALUES (2, 45, 'Female', 'Canada'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type TEXT, treatment_date DATE); INSERT INTO treatments (treatment_id, patient_id, treatment_type, treatment_date) VALUES (1, 1, 'Therapy', '2020-01-01'); INSERT INTO treatments (treatment_id, patient_id, treatment_type, treatment_date) VALUES (2, 2, 'Therapy', '2020-02-15');","completion":"SELECT AVG(age) FROM patients JOIN treatments ON patients.patient_id = treatments.patient_id WHERE patients.country = 'Canada' AND treatments.treatment_type = 'Therapy';"}
{"prompt":"For the 'design_standards' table, add a new row with the following information: ID 4, name 'Bridge Design Standards for Earthquake Zones', version '2022', and description 'New standards for bridge design in earthquake zones'. with given SQL schema CREATE TABLE design_standards (id INT, name VARCHAR(50), version INT, description VARCHAR(100));","completion":"INSERT INTO design_standards (id, name, version, description) VALUES (4, 'Bridge Design Standards for Earthquake Zones', 2022, 'New standards for bridge design in earthquake zones');"}
{"prompt":"What is the maximum number of visitors per day at the Grand Canyon National Park? with given SQL schema CREATE TABLE gcnp_visitors (id INT, date DATE, visitors INT); INSERT INTO gcnp_visitors (id, date, visitors) VALUES (1, '2022-01-01', 10000), (2, '2022-01-02', 12000), (3, '2022-01-03', 15000);","completion":"SELECT MAX(visitors) FROM gcnp_visitors;"}
{"prompt":"What was the total revenue generated by sustainable tourism activities in New Zealand and Canada in 2022? with given SQL schema CREATE TABLE sustainable_tourism (country VARCHAR(50), year INT, revenue INT); INSERT INTO sustainable_tourism (country, year, revenue) VALUES ('New Zealand', 2022, 5000000), ('Canada', 2022, 7000000);","completion":"SELECT SUM(revenue) FROM sustainable_tourism WHERE country IN ('New Zealand', 'Canada') AND year = 2022;"}
{"prompt":"How many unique service types are provided in the 'defendant_services' table? with given SQL schema CREATE TABLE defendant_services (id INT, case_number INT, defendant_name VARCHAR(255), service_type VARCHAR(255)); INSERT INTO defendant_services (id, case_number, defendant_name, service_type) VALUES (1, 1234, 'Jane Doe', 'Education');","completion":"SELECT COUNT(DISTINCT service_type) FROM defendant_services;"}
{"prompt":"List the underwater species and their average depths in the Indian and Pacific Oceans. with given SQL schema CREATE TABLE underwater_species (species TEXT, depth INT, ocean TEXT); INSERT INTO underwater_species (species, depth, ocean) VALUES ('SpeciesA', 3000, 'Indian'), ('SpeciesB', 4000, 'Indian'), ('SpeciesC', 5000, 'Indian'), ('SpeciesD', 6000, 'Pacific'), ('SpeciesE', 7000, 'Pacific');","completion":"SELECT species, AVG(depth) FROM underwater_species WHERE ocean IN ('Indian', 'Pacific') GROUP BY species;"}
{"prompt":"Update the maximum depth for 'Research Site A' to 3500 meters. with given SQL schema CREATE TABLE marine_sites (site_id INT, site_name TEXT, max_depth FLOAT); INSERT INTO marine_sites (site_id, site_name, max_depth) VALUES (1, 'Research Site A', 3000.5), (2, 'Research Site B', 5500.2), (3, 'Research Site C', 2000.0);","completion":"UPDATE marine_sites SET max_depth = 3500 WHERE site_name = 'Research Site A';"}
{"prompt":"Which countries have the highest marine pollution levels in the Atlantic Ocean? with given SQL schema CREATE TABLE CountryPollution (id INT, country VARCHAR(255), pollution_level FLOAT); INSERT INTO CountryPollution (id, country, pollution_level) VALUES (1, 'United States', 6.2); INSERT INTO CountryPollution (id, country, pollution_level) VALUES (2, 'Brazil', 5.8);","completion":"SELECT country, pollution_level FROM CountryPollution WHERE location = 'Atlantic Ocean' AND pollution_level = (SELECT MAX(pollution_level) FROM CountryPollution WHERE location = 'Atlantic Ocean');"}
{"prompt":"Create a table for tracking food waste with given SQL schema CREATE TABLE food_waste (waste_type VARCHAR(255), quantity INT);","completion":"CREATE TABLE food_waste (waste_type VARCHAR(255), quantity INT);"}
{"prompt":"Find the customer order frequency for the top 10 customers in the last 30 days? with given SQL schema CREATE TABLE Customers (id INT, name VARCHAR(255), email VARCHAR(255)); INSERT INTO Customers (id, name, email) VALUES (1, 'John Smith', 'john.smith@gmail.com'), (2, 'Jane Doe', 'jane.doe@gmail.com'); CREATE TABLE Orders (id INT, customer_id INT, order_date DATE); INSERT INTO Orders (id, customer_id, order_date) VALUES (1, 1, '2022-02-01'), (2, 1, '2022-02-10'), (3, 2, '2022-02-20'), (4, 1, '2022-02-28');","completion":"SELECT C.name, COUNT(O.id) as order_frequency, RANK() OVER (ORDER BY COUNT(O.id) DESC) as rank FROM Customers C JOIN Orders O ON C.id = O.customer_id WHERE O.order_date >= DATEADD(day, -30, GETDATE()) GROUP BY C.id, C.name ORDER BY rank;"}
{"prompt":"What is the maximum contract value for Northrop Grumman's geopolitical risk assessments? with given SQL schema CREATE TABLE contract_values (id INT, contractor VARCHAR(255), service VARCHAR(255), value FLOAT); INSERT INTO contract_values (id, contractor, service, value) VALUES (1, 'Northrop Grumman', 'Geopolitical Risk Assessment', 5000000), (2, 'Northrop Grumman', 'Cybersecurity Services', 7000000), (3, 'Northrop Grumman', 'Military Satellite Operations', 8000000);","completion":"SELECT MAX(value) FROM contract_values WHERE contractor = 'Northrop Grumman' AND service = 'Geopolitical Risk Assessment';"}
{"prompt":"What is the average labor productivity in coal mining? with given SQL schema CREATE TABLE labor (employee_id INT, employee_name VARCHAR(50), department VARCHAR(20), hours_worked INT, productivity INT); INSERT INTO labor (employee_id, employee_name, department, hours_worked, productivity) VALUES (1, 'John Doe', 'coal', 160, 500), (2, 'Jane Doe', 'coal', 180, 600), (3, 'Mike Smith', 'gold', 165, 700), (4, 'Emma Johnson', 'copper', 170, 550);","completion":"SELECT AVG(l.productivity) AS avg_productivity FROM labor l WHERE l.department = 'coal';"}
{"prompt":"What is the average upload speed for broadband customers in a specific continent? with given SQL schema CREATE TABLE broadband_customers (customer_id INT, upload_speed FLOAT, continent VARCHAR(50)); INSERT INTO broadband_customers (customer_id, upload_speed, continent) VALUES (1, 80, 'Asia'), (2, 60, 'Europe'), (3, 90, 'Asia'); CREATE VIEW avg_upload_speed_view AS SELECT continent, AVG(upload_speed) as avg_upload_speed FROM broadband_customers GROUP BY continent;","completion":"SELECT continent, avg_upload_speed, avg_upload_speed\/AVG(avg_upload_speed) OVER (PARTITION BY continent) as avg_upload_speed_percentage FROM avg_upload_speed_view;"}
{"prompt":"What is the maximum data usage in the 'urban' region? with given SQL schema CREATE TABLE subscribers (id INT, name VARCHAR(50), data_usage FLOAT, region VARCHAR(20)); INSERT INTO subscribers (id, name, data_usage, region) VALUES (1, 'John Doe', 20.0, 'urban'), (2, 'Jane Doe', 18.0, 'urban');","completion":"SELECT MAX(data_usage) FROM subscribers WHERE region = 'urban';"}
{"prompt":"What is the number of mobile and broadband subscribers in each country? with given SQL schema CREATE TABLE subscribers (id INT, name VARCHAR(255), plan_id INT, country VARCHAR(255)); CREATE TABLE mobile_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2)); CREATE TABLE broadband_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2)); CREATE TABLE countries (id INT, name VARCHAR(255));","completion":"SELECT countries.name AS country, COUNT(*) FROM subscribers JOIN mobile_plans ON subscribers.plan_id = mobile_plans.id JOIN broadband_plans ON subscribers.plan_id = broadband_plans.id JOIN countries ON subscribers.country = countries.id GROUP BY countries.name;"}
{"prompt":"Which concert has the highest ticket sales? with given SQL schema CREATE TABLE Concerts (concert_id INT, city VARCHAR(50), sales INT); INSERT INTO Concerts (concert_id, city, sales) VALUES (1, 'Los Angeles', 5000), (2, 'New York', 7000), (3, 'Chicago', 6000);","completion":"SELECT city, MAX(sales) as max_sales FROM Concerts;"}
{"prompt":"What is the average donation amount per month, for each donor? with given SQL schema CREATE TABLE DonationAmounts (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount DECIMAL(10,2)); INSERT INTO DonationAmounts VALUES (1, 1, '2021-04-05', 1500.00), (2, 1, '2021-08-20', 1500.00), (3, 2, '2021-04-12', 1000.00), (4, 3, '2021-08-01', 2000.00);","completion":"SELECT DonorID, AVG(DonationAmount) OVER (PARTITION BY DonorID, EXTRACT(MONTH FROM DonationDate)) AS AvgDonationPerMonth FROM DonationAmounts WHERE EXTRACT(YEAR FROM DonationDate) = 2021 ORDER BY DonorID, DonationDate;"}
{"prompt":"What is the average number of donations per month for each donor? with given SQL schema CREATE TABLE donations (id INT, donor_id INT, donation_date DATE); INSERT INTO donations (id, donor_id, donation_date) VALUES (1, 1, '2021-01-01'); INSERT INTO donations (id, donor_id, donation_date) VALUES (2, 1, '2021-02-01');","completion":"SELECT donor_id, AVG(COUNT(donation_id)) as avg_donations_per_month FROM donations GROUP BY donor_id, DATE_FORMAT(donation_date, '%Y-%m') WITH ROLLUP;"}
{"prompt":"Which programs received donations in the 'ProgramDonations' table? with given SQL schema CREATE TABLE Programs (ProgramID int, ProgramName varchar(50)); CREATE TABLE Donations (DonationID int, Donation decimal(10,2)); CREATE TABLE ProgramDonations (ProgramID int, DonationID int, ProgramName varchar(50), Donation decimal(10,2)); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); INSERT INTO Donations (DonationID, Donation) VALUES (1, 1000.00), (2, 1500.00), (3, 750.00); INSERT INTO ProgramDonations (ProgramID, DonationID, ProgramName, Donation) VALUES (1, 1, 'Education', 1000.00), (2, 2, 'Health', 1500.00), (3, 3, 'Environment', 750.00);","completion":"SELECT DISTINCT ProgramName FROM ProgramDonations;"}
{"prompt":"What is the average donation frequency for each cause in the 'philanthropy.causes' table? with given SQL schema CREATE TABLE philanthropy.donation_amount_by_cause (donation_id INT, donor_id INT, cause_id INT, donation_date DATE, donation_amount DECIMAL);","completion":"SELECT c.cause_name, AVG(dam.donation_frequency) FROM philanthropy.causes c JOIN (SELECT cause_id, COUNT(*) AS donation_frequency FROM philanthropy.donation_amount_by_cause GROUP BY cause_id) dam ON c.cause_id = dam.cause_id GROUP BY c.cause_name;"}
{"prompt":"What is the maximum playtime in minutes for players who have achieved a rank of Platinum or higher in the game \"Cosmic Racers\"? with given SQL schema CREATE TABLE CosmicRacersPlayers (PlayerID INT, PlayerName VARCHAR(50), PlaytimeMinutes INT, Rank VARCHAR(10)); INSERT INTO CosmicRacersPlayers VALUES (1, 'DavidLee', 750, 'Platinum'), (2, 'MichelleHernandez', 600, 'Gold'), (3, 'KevinWang', 900, 'Platinum'), (4, 'GraceChoi', 850, 'Diamond');","completion":"SELECT MAX(PlaytimeMinutes) FROM CosmicRacersPlayers WHERE Rank IN ('Platinum', 'Diamond');"}
{"prompt":"Identify the total number of players who have played \"Fantasy\" games and are from \"Asia\". with given SQL schema  CREATE TABLE Game (id INT, name VARCHAR(255)); INSERT INTO Game (id, name) VALUES (1, 'Fantasy'); CREATE TABLE Player (id INT, country VARCHAR(255)); CREATE TABLE GamePlayer (PlayerId INT, GameId INT); INSERT INTO Player (id, country) VALUES (1, 'India'), (2, 'China'), (3, 'USA'); INSERT INTO GamePlayer (PlayerId, GameId) VALUES (1, 1), (2, 1), (3, 1);","completion":"SELECT COUNT(DISTINCT PlayerId) FROM GamePlayer GP JOIN Player P ON GP.PlayerId = P.id WHERE GP.GameId = (SELECT G.id FROM Game G WHERE G.name = 'Fantasy') AND P.country = 'Asia';"}
{"prompt":"List all virtual reality (VR) games with their respective designers and the number of years of experience the designers have in VR game development. with given SQL schema CREATE TABLE VR_Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20)); CREATE TABLE Designers (DesignerID INT, DesignerName VARCHAR(50), YearsOfExperience INT); CREATE TABLE VR_GameDesign (GameID INT, DesignerID INT);","completion":"SELECT VR_Games.GameName, Designers.DesignerName, Designers.YearsOfExperience FROM VR_Games INNER JOIN VR_GameDesign ON VR_Games.GameID = VR_GameDesign.GameID INNER JOIN Designers ON VR_GameDesign.DesignerID = Designers.DesignerID;"}
{"prompt":"List the top 3 countries with the most satellite image analysis performed in the last month. with given SQL schema CREATE TABLE satellite_image_analysis (id INT, country VARCHAR(255), analysis_date DATE); INSERT INTO satellite_image_analysis (id, country, analysis_date) VALUES (1, 'Brazil', '2022-01-03'), (2, 'Kenya', '2022-01-01'), (3, 'Brazil', '2022-01-02'), (4, 'Indonesia', '2022-01-04'), (5, 'Kenya', '2022-01-02'), (6, 'Brazil', '2022-01-01');","completion":"SELECT country, COUNT(*) as analysis_count FROM satellite_image_analysis WHERE analysis_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY country ORDER BY analysis_count DESC LIMIT 3;"}
{"prompt":"What is the average temperature in degree Celsius recorded by sensors in the 'Field1' during the month of July in 2021 and 2022? with given SQL schema CREATE TABLE Field1_Temperature (sensor_id INT, measurement_time TIMESTAMP, temperature DECIMAL(5,2)); INSERT INTO Field1_Temperature (sensor_id, measurement_time, temperature) VALUES (1, '2021-07-01 10:00:00', 23.5), (2, '2021-07-01 10:00:00', 24.3);","completion":"SELECT AVG(temperature) FROM (SELECT temperature FROM Field1_Temperature WHERE EXTRACT(MONTH FROM measurement_time) = 7 AND EXTRACT(YEAR FROM measurement_time) IN (2021, 2022) GROUP BY sensor_id, EXTRACT(DAY FROM measurement_time)) t"}
{"prompt":"What is the maximum temperature and humidity for each crop type in the past month? with given SQL schema CREATE TABLE crop_temperature (crop_type TEXT, temperature INTEGER, timestamp TIMESTAMP);CREATE TABLE crop_humidity (crop_type TEXT, humidity INTEGER, timestamp TIMESTAMP);","completion":"SELECT ct.crop_type, MAX(ct.temperature) as max_temp, MAX(ch.humidity) as max_humidity FROM crop_temperature ct JOIN crop_humidity ch ON ct.timestamp = ch.timestamp WHERE ct.timestamp BETWEEN DATEADD(month, -1, CURRENT_TIMESTAMP) AND CURRENT_TIMESTAMP GROUP BY ct.crop_type;"}
{"prompt":"How many public services were delivered in the North region in Q2 of 2019? with given SQL schema CREATE TABLE Deliveries (quarter INT, region VARCHAR(255), count INT); INSERT INTO Deliveries (quarter, region, count) VALUES (2, 'North', 1500), (2, 'North', 1600), (2, 'North', 1400), (2, 'South', 1700), (2, 'South', 1800);","completion":"SELECT SUM(count) FROM Deliveries WHERE quarter = 2 AND region = 'North';"}
{"prompt":"What is the minimum budget allocated for the 'Education' department in the year 2022? with given SQL schema CREATE TABLE Budget(year INT, department VARCHAR(20), amount INT); INSERT INTO Budget VALUES (2021, 'Healthcare', 7000000), (2021, 'Education', 5000000), (2022, 'Healthcare', 7800000), (2022, 'Education', 5300000), (2022, 'Education', 4800000);","completion":"SELECT MIN(amount) FROM Budget WHERE department = 'Education' AND year = 2022;"}
{"prompt":"Which element had the lowest production in 2019? with given SQL schema CREATE TABLE production (year INT, element VARCHAR(10), quantity INT); INSERT INTO production (year, element, quantity) VALUES (2015, 'Neodymium', 1200), (2016, 'Neodymium', 1400), (2017, 'Neodymium', 1500), (2018, 'Neodymium', 1700), (2019, 'Neodymium', 1800), (2020, 'Neodymium', 2000), (2021, 'Neodymium', 2200), (2015, 'Praseodymium', 1100), (2016, 'Praseodymium', 1300), (2017, 'Praseodymium', 1400), (2018, 'Praseodymium', 1600), (2019, 'Praseodymium', 1500), (2020, 'Praseodymium', 1900), (2021, 'Praseodymium', 2100);","completion":"SELECT element, MIN(quantity) FROM production WHERE year = 2019 GROUP BY element;"}
{"prompt":"List the co-owners and their shared property addresses in Portland, OR and Seattle, WA. with given SQL schema CREATE TABLE co_owners (id INT, name VARCHAR(30), property_id INT, city VARCHAR(20)); CREATE TABLE properties (id INT, address VARCHAR(50)); INSERT INTO co_owners (id, name, property_id, city) VALUES (1, 'Alex', 101, 'Portland'), (2, 'Bella', 101, 'Portland'), (3, 'Charlie', 102, 'Seattle'), (4, 'Denise', 103, 'Seattle'); INSERT INTO properties (id, address) VALUES (101, '1234 SE Stark St'), (102, '5678 NE 20th Ave'), (103, '9876 W Olympic Pl');","completion":"SELECT co_owners.name, properties.address FROM co_owners INNER JOIN properties ON co_owners.property_id = properties.id WHERE co_owners.city IN ('Portland', 'Seattle');"}
{"prompt":"How many carbon offset programs were initiated in Asia in 2020? with given SQL schema CREATE TABLE if not exists carbon_offset_programs (program_id integer, program_start_date date, program_location varchar(255)); INSERT INTO carbon_offset_programs (program_id, program_start_date, program_location) VALUES (1, '2020-01-01', 'China'), (2, '2020-06-01', 'India'), (3, '2020-12-31', 'Japan');","completion":"SELECT program_location, COUNT(*) as num_programs FROM carbon_offset_programs WHERE program_start_date BETWEEN '2020-01-01' AND '2020-12-31' AND program_location LIKE 'Asia%' GROUP BY program_location;"}
{"prompt":"What is the average energy efficiency rating for projects in Germany? with given SQL schema CREATE TABLE projects (project_id INT, name TEXT, location TEXT, rating FLOAT); INSERT INTO projects (project_id, name, location, rating) VALUES (1, 'Solar Farm', 'Germany', 1.8), (2, 'Wind Turbine', 'France', 2.2), (3, 'Geothermal Plant', 'Germany', 2.0);","completion":"SELECT AVG(rating) FROM projects WHERE location = 'Germany';"}
{"prompt":"Which renewable energy projects in the 'renewable_projects' table are located in the US or Canada? with given SQL schema CREATE TABLE renewable_projects (project_name VARCHAR(255), location VARCHAR(255));","completion":"SELECT project_name FROM renewable_projects WHERE location IN ('US', 'Canada');"}
{"prompt":"Which menu items were sold the least in the last month, ordered by quantity sold? with given SQL schema CREATE TABLE MenuSales (restaurant_id INT, menu_item_id INT, sale_date DATE, quantity_sold INT); INSERT INTO MenuSales (restaurant_id, menu_item_id, sale_date, quantity_sold) VALUES (1, 101, '2021-08-01', 5), (1, 102, '2021-08-01', 12), (1, 103, '2021-08-01', 3), (1, 101, '2021-08-02', 2), (1, 102, '2021-08-02', 8), (1, 103, '2021-08-02', 7);","completion":"SELECT menu_item_id, SUM(quantity_sold) as total_quantity_sold FROM menusales WHERE sale_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE GROUP BY menu_item_id ORDER BY total_quantity_sold ASC;"}
{"prompt":"What is the distribution of space debris by their sources and average years in orbit? with given SQL schema CREATE TABLE space_debris (id INT, name VARCHAR(255), type VARCHAR(255), source VARCHAR(255), launch_date DATE); INSERT INTO space_debris VALUES (4, 'Defunct Satellite', 'Satellite', 'Brazil', '2005-01-01'), (5, 'Rocket Body', 'Rocket', 'Indonesia', '2010-05-05');","completion":"SELECT source, COUNT(id) as count, AVG(DATEDIFF(CURDATE(), launch_date)) as avg_years_in_orbit FROM space_debris GROUP BY source;"}
{"prompt":"How many space missions were successfully completed before 2010? with given SQL schema CREATE TABLE SpaceMissions (id INT, mission_name VARCHAR(255), start_date DATE, end_date DATE, status VARCHAR(50)); INSERT INTO SpaceMissions (id, mission_name, start_date, end_date, status) VALUES (1, 'Apollo 11', '1969-07-16', '1969-07-24', 'Success'), (2, 'Apollo 13', '1970-04-11', '1970-04-17', 'Failure');","completion":"SELECT COUNT(*) FROM SpaceMissions WHERE status = 'Success' AND start_date < '2010-01-01';"}
{"prompt":"What is the total mass of all spacecraft manufactured by SpaceX? with given SQL schema CREATE TABLE Spacecraft (SpacecraftID INT, SpacecraftName VARCHAR(50), Manufacturer VARCHAR(50), Mass FLOAT); INSERT INTO Spacecraft (SpacecraftID, SpacecraftName, Manufacturer, Mass) VALUES (1, 'SpaceX Dragon', 'SpaceX', 10000), (2, 'Orion', 'Lockheed Martin', 20000), (3, 'Starliner', 'Boeing', 15000);","completion":"SELECT SUM(Mass) FROM Spacecraft WHERE Manufacturer = 'SpaceX';"}
{"prompt":"Count the number of fans from 'fan_demographics' table by gender. with given SQL schema CREATE TABLE fan_demographics (fan_id INT, gender VARCHAR(10), age INT, location VARCHAR(30));","completion":"SELECT gender, COUNT(*) FROM fan_demographics GROUP BY gender;"}
{"prompt":"What is the total number of security incidents in the last year that involved a user from a department that has more than 50 users? with given SQL schema CREATE TABLE security_incidents (incident_id INT, incident_date DATE, user_id INT);CREATE TABLE users (user_id INT, user_name VARCHAR(255), department VARCHAR(255), department_size INT);","completion":"SELECT COUNT(*) FROM security_incidents si JOIN users u ON si.user_id = u.user_id WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND u.department_size > 50;"}
{"prompt":"What was the daily average speed of autonomous taxis in New York for the last week? with given SQL schema CREATE TABLE taxi_speeds (id INT, taxi_id INT, taxi_type VARCHAR(20), speed FLOAT, date DATE, city VARCHAR(20)); INSERT INTO taxi_speeds (id, taxi_id, taxi_type, speed, date, city) VALUES (1, 101, 'Autonomous', 70.5, '2022-05-01', 'New York'); INSERT INTO taxi_speeds (id, taxi_id, taxi_type, speed, date, city) VALUES (2, 102, 'Autonomous', 72.1, '2022-05-01', 'New York'); INSERT INTO taxi_speeds (id, taxi_id, taxi_type, speed, date, city) VALUES (3, 103, 'Conventional', 68.7, '2022-05-01', 'New York');","completion":"SELECT DATE(date) as trip_date, AVG(speed) as avg_speed FROM taxi_speeds WHERE taxi_type = 'Autonomous' AND city = 'New York' AND date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND CURDATE() GROUP BY trip_date ORDER BY trip_date;"}
{"prompt":"What is the sum of claim amounts paid to policyholders in 'Utah' and 'Idaho'? with given SQL schema CREATE TABLE claims (policyholder_id INT, claim_amount DECIMAL(10,2), policyholder_state VARCHAR(20)); INSERT INTO claims (policyholder_id, claim_amount, policyholder_state) VALUES (1, 500.00, 'Utah'), (2, 300.00, 'Idaho'), (3, 700.00, 'Utah');","completion":"SELECT SUM(claim_amount) FROM claims WHERE policyholder_state IN ('Utah', 'Idaho');"}
{"prompt":"Who are the top 3 underwriters with the highest claim amount in the Midwest region? with given SQL schema CREATE TABLE Claims (ClaimID INT, UnderwriterID INT, Amount DECIMAL(10, 2)); CREATE TABLE Underwriters (UnderwriterID INT, Region VARCHAR(20)); INSERT INTO Claims (ClaimID, UnderwriterID, Amount) VALUES (1, 1, 500), (2, 2, 300), (3, 4, 1000), (4, 1, 700); INSERT INTO Underwriters (UnderwriterID, Region) VALUES (1, 'Midwest'), (2, 'Northeast'), (3, 'South'), (4, 'Midwest');","completion":"SELECT Underwriters.UnderwriterID, Underwriters.Region, SUM(Claims.Amount) AS TotalClaimAmount FROM Claims INNER JOIN Underwriters ON Claims.UnderwriterID = Underwriters.UnderwriterID WHERE Underwriters.Region = 'Midwest' GROUP BY Underwriters.UnderwriterID, Underwriters.Region ORDER BY TotalClaimAmount DESC LIMIT 3;"}
{"prompt":"What is the percentage of workplaces with no reported injuries in each region? with given SQL schema CREATE TABLE workplaces (id INT, workplace_name VARCHAR(255), region VARCHAR(255)); INSERT INTO workplaces (id, workplace_name, region) VALUES (1, 'Workplace A', 'Western'), (2, 'Workplace B', 'Western'), (3, 'Workplace C', 'Eastern'); CREATE TABLE injuries (id INT, workplace_id INT, injury_count INT); INSERT INTO injuries (id, workplace_id, injury_count) VALUES (1, 1, 0), (2, 1, 0), (3, 2, 1), (4, 3, 5);","completion":"SELECT w.region, 100.0 * AVG(CASE WHEN i.injury_count = 0 THEN 1 ELSE 0 END) as pct_no_injuries FROM workplaces w LEFT JOIN injuries i ON w.id = i.workplace_id GROUP BY w.region;"}
{"prompt":"Delete all vehicle safety testing records for vehicles released before 2010. with given SQL schema CREATE TABLE VehicleSafetyTesting (id INT, vehicle_name VARCHAR(50), release_year INT); INSERT INTO VehicleSafetyTesting (id, vehicle_name, release_year) VALUES (1, 'Car A', 2005); INSERT INTO VehicleSafetyTesting (id, vehicle_name, release_year) VALUES (2, 'Car B', 2012);","completion":"DELETE FROM VehicleSafetyTesting WHERE release_year < 2010;"}
{"prompt":"What is the average speed of vessels that arrived in the US East Coast ports in July 2021? with given SQL schema CREATE TABLE ports (id INT, name TEXT, country TEXT); INSERT INTO ports (id, name, country) VALUES (1, 'New York', 'USA'), (2, 'Savannah', 'USA'), (3, 'Norfolk', 'USA'); CREATE TABLE vessels (id INT, name TEXT, type TEXT, speed FLOAT, port_id INT); INSERT INTO vessels (id, name, type, speed, port_id) VALUES (1, 'MSC Georgia', 'Container', 22.5, 1), (2, 'Ever Given', 'Container', 20.0, 2), (3, 'Maersk Mc-Kinney Moller', 'Container', 23.0, 3);","completion":"SELECT AVG(speed) FROM vessels WHERE port_id IN (SELECT id FROM ports WHERE country = 'USA' AND name IN ('New York', 'Savannah', 'Norfolk')) AND EXTRACT(MONTH FROM arrival_date) = 7;"}
{"prompt":"What is the total fine amount for each vessel in the 'regulatory_compliance' table? with given SQL schema CREATE TABLE regulatory_compliance (vessel_id INT, fine_type VARCHAR(50), amount FLOAT, timestamp TIMESTAMP);","completion":"SELECT vessel_id, SUM(amount) FROM regulatory_compliance GROUP BY vessel_id;"}
{"prompt":"What are the recycling rates in Oceania for the year 2021, grouped by country? with given SQL schema CREATE TABLE RecyclingRatesOceania (country VARCHAR(50), year INT, recycling_rate DECIMAL(5,2)); INSERT INTO RecyclingRatesOceania (country, year, recycling_rate) VALUES ('Australia', 2021, 0.58), ('New Zealand', 2021, 0.52);","completion":"SELECT country, AVG(recycling_rate) FROM RecyclingRatesOceania WHERE year = 2021 GROUP BY country;"}
{"prompt":"Who are the top 3 contributors to AI safety research? with given SQL schema CREATE TABLE safety_research (researcher_name TEXT, contributions INTEGER); INSERT INTO safety_research (researcher_name, contributions) VALUES ('Researcher A', 15), ('Researcher B', 20), ('Researcher C', 25), ('Researcher D', 10);","completion":"SELECT researcher_name FROM safety_research ORDER BY contributions DESC LIMIT 3;"}
{"prompt":"Calculate the total cost of rural infrastructure projects in India that were completed in 2021 and 2022. with given SQL schema CREATE TABLE infrastructure_projects (id INT, name TEXT, country TEXT, completion_year INT, cost INT); INSERT INTO infrastructure_projects (id, name, country, completion_year, cost) VALUES (1, 'Road Construction', 'India', 2021, 1000000), (2, 'Bridge Building', 'India', 2022, 1500000);","completion":"SELECT SUM(cost) FROM infrastructure_projects WHERE country = 'India' AND completion_year BETWEEN 2021 AND 2022;"}
{"prompt":"List the names and total investments in rural infrastructure projects for Latinx communities in the United States. with given SQL schema CREATE TABLE rural_infrastructure_projects (id INT, community_type VARCHAR(30), country VARCHAR(20), investment DECIMAL(10, 2)); INSERT INTO rural_infrastructure_projects (id, community_type, country, investment) VALUES (1, 'Latinx', 'United States', 35000.00), (2, 'African American', 'United States', 40000.00);","completion":"SELECT country, SUM(investment) FROM rural_infrastructure_projects WHERE community_type = 'Latinx' GROUP BY country;"}
{"prompt":"Who are the top 5 agricultural innovation projects in Indonesia by budget allocated? with given SQL schema CREATE TABLE innovation_projects (id INT, project_id INT, country VARCHAR(50), project VARCHAR(50), budget DECIMAL(10,2), start_date DATE, end_date DATE); INSERT INTO innovation_projects (id, project_id, country, project, budget, start_date, end_date) VALUES (1, 7001, 'Indonesia', 'Precision Agriculture', 50000.00, '2021-01-01', '2023-12-31'), (2, 7002, 'Indonesia', 'Vertical Farming', 75000.00, '2022-06-01', '2024-05-31');","completion":"SELECT project_id, budget FROM innovation_projects WHERE country = 'Indonesia' GROUP BY project_id ORDER BY budget DESC LIMIT 5;"}
{"prompt":"Calculate the biomass of fish in the Salmon farm by weight and date with given SQL schema CREATE TABLE FishBiomass (fish_id INT, farm_id INT, weight DECIMAL(5,2), date DATE); INSERT INTO FishBiomass (fish_id, farm_id, weight, date) VALUES (201, 2, 0.6, '2022-01-01'), (202, 2, 0.7, '2022-01-02');","completion":"SELECT farm_id, SUM(weight) over (partition by farm_id order by date) biomass FROM FishBiomass WHERE farm_id = 2;"}
{"prompt":"What is the maximum donation amount in the \"dance_sponsors\" table? with given SQL schema CREATE TABLE dance_sponsors (sponsor_id INT, donation_amount FLOAT, donation_date DATE); INSERT INTO dance_sponsors (sponsor_id, donation_amount, donation_date) VALUES (1, 1000.00, '2021-01-01'), (2, 1200.00, '2021-02-01'), (3, 800.00, '2021-03-01');","completion":"SELECT MAX(donation_amount) FROM dance_sponsors;"}
{"prompt":"What was the average donation amount by new donors in Q2 2021? with given SQL schema CREATE TABLE Donors (DonorID int, DonationDate date, DonationAmount numeric);","completion":"SELECT AVG(DonationAmount) FROM (SELECT DonationAmount FROM Donors WHERE DonationDate BETWEEN '2021-04-01' AND '2021-06-30' AND DonorID NOT IN (SELECT DonorID FROM Donors WHERE DonationDate < '2021-04-01')) AS NewDonors;"}
{"prompt":"What is the total construction cost for sustainable building projects in Texas in Q2 2022? with given SQL schema CREATE TABLE Projects (project_id INT, state VARCHAR(255), is_sustainable BOOLEAN, cost FLOAT); INSERT INTO Projects (project_id, state, is_sustainable, cost) VALUES (1, 'Texas', true, 500000), (2, 'Texas', false, 700000);","completion":"SELECT SUM(cost) FROM Projects WHERE state = 'Texas' AND is_sustainable = true AND QUARTER(start_date) = 2 AND YEAR(start_date) = 2022 GROUP BY state;"}
{"prompt":"How many cases did attorney Rodriguez win in Texas in 2020? with given SQL schema CREATE TABLE cases (id INT, attorney VARCHAR(255), state VARCHAR(255), outcome VARCHAR(255), date DATE); INSERT INTO cases (id, attorney, state, outcome, date) VALUES (1, 'Rodriguez', 'Texas', 'won', '2020-01-01'), (2, 'Rodriguez', 'Texas', 'lost', '2020-02-01'), (3, 'Rodriguez', 'California', 'won', '2020-03-01');","completion":"SELECT COUNT(*) FROM cases WHERE attorney = 'Rodriguez' AND state = 'Texas' AND outcome = 'won' AND date BETWEEN '2020-01-01' AND '2020-12-31';"}
{"prompt":"Delete the records of waste production for the 'Antarctica' region in January 2022. with given SQL schema CREATE TABLE waste_production (region varchar(20), waste_amount int, date date);","completion":"DELETE FROM waste_production WHERE region = 'Antarctica' AND date = '2022-01-01';"}
{"prompt":"What are the average emission levels of factories in California? with given SQL schema CREATE TABLE factories (factory_id INT, name TEXT, location TEXT, emissions INT); INSERT INTO factories (factory_id, name, location, emissions) VALUES (1, 'Factory A', 'California', 100), (2, 'Factory B', 'Texas', 200), (3, 'Factory C', 'California', 150);","completion":"SELECT AVG(f.emissions) FROM factories f WHERE f.location = 'California';"}
{"prompt":"What safety protocols are unique to 'Plant A', 'Plant B', and 'Plant C'? with given SQL schema CREATE TABLE Plant_A_Safety_Protocols (Protocol VARCHAR(255)); INSERT INTO Plant_A_Safety_Protocols (Protocol) VALUES ('PPE'), ('Emergency Drills'), ('Chemical Spill Response'); CREATE TABLE Plant_B_Safety_Protocols (Protocol VARCHAR(255)); INSERT INTO Plant_B_Safety_Protocols (Protocol) VALUES ('PPE'), ('Fire Safety'), ('Hazard Communication'); CREATE TABLE Plant_C_Safety_Protocols (Protocol VARCHAR(255)); INSERT INTO Plant_C_Safety_Protocols (Protocol) VALUES ('Radiation Protection'), ('Biohazard Protection'), ('Chemical Spill Response');","completion":"(SELECT Protocol FROM Plant_A_Safety_Protocols EXCEPT SELECT Protocol FROM Plant_B_Safety_Protocols) UNION (SELECT Protocol FROM Plant_B_Safety_Protocols EXCEPT SELECT Protocol FROM Plant_C_Safety_Protocols) UNION (SELECT Protocol FROM Plant_C_Safety_Protocols EXCEPT SELECT Protocol FROM Plant_A_Safety_Protocols);"}
{"prompt":"What is the total amount of climate finance provided to projects in Africa between 2015 and 2020, grouped by the type of finance? with given SQL schema CREATE TABLE climate_finance (id INT, project_location VARCHAR(20), finance_type VARCHAR(20), amount INT, finance_year INT); INSERT INTO climate_finance (id, project_location, finance_type, amount, finance_year) VALUES (1, 'Africa', 'Government Grants', 500000, 2015), (2, 'Africa', 'Private Investments', 750000, 2015), (3, 'Africa', 'Government Grants', 600000, 2016), (4, 'Africa', 'Private Investments', 800000, 2016);","completion":"SELECT finance_type, SUM(amount) FROM climate_finance WHERE project_location = 'Africa' AND finance_year BETWEEN 2015 AND 2020 GROUP BY finance_type;"}
{"prompt":"Which cities have a higher average temperature in the \"Finance\" scheme than in the \"Mitigation\" scheme? with given SQL schema CREATE TABLE Mitigation (city VARCHAR(255), avg_temp FLOAT); INSERT INTO Mitigation VALUES ('CityA', 20.5), ('CityB', 22.3); CREATE TABLE Finance (city VARCHAR(255), avg_temp FLOAT); INSERT INTO Finance VALUES ('CityA', 23.0), ('CityX', 23.5);","completion":"SELECT Finance.city FROM Finance, Mitigation WHERE Finance.city = Mitigation.city AND Finance.avg_temp > Mitigation.avg_temp"}
{"prompt":"What is the average life expectancy in Africa? with given SQL schema CREATE TABLE Countries (CountryName TEXT, Continent TEXT, LifeExpectancy FLOAT); INSERT INTO Countries (CountryName, Continent, LifeExpectancy) VALUES ('Afghanistan', 'Asia', 65.0), ('Albania', 'Europe', 78.7), ('Algeria', 'Africa', 76.3);","completion":"SELECT AVG(LifeExpectancy) FROM Countries WHERE Continent = 'Africa';"}
{"prompt":"Insert data into 'student_disability' table with given SQL schema CREATE TABLE student_disability (id INT PRIMARY KEY, student_name VARCHAR(100), disability_type VARCHAR(50), accommodation_provided VARCHAR(50)); INSERT INTO student_disability (id, student_name, disability_type, accommodation_provided) VALUES (1, 'John Doe', 'Visual Impairment', 'Screen Reader'), (2, 'Jane Smith', 'Hearing Impairment', 'Sign Language Interpreter');","completion":"INSERT INTO student_disability (id, student_name, disability_type, accommodation_provided) VALUES (3, 'Jim Brown', 'Mobility Impairment', 'Wheelchair Access'), (4, 'Jake White', 'Learning Disability', 'Extra Time for Exams');"}
{"prompt":"Update the climate_change table to reflect a decrease in ocean temperatures for the Arctic Ocean with given SQL schema CREATE TABLE climate_change (id INT PRIMARY KEY, region VARCHAR(255), avg_temp_celsius DECIMAL(5,2), avg_temp_fahrenheit DECIMAL(5,2), year INT);","completion":"UPDATE climate_change SET avg_temp_celsius = avg_temp_celsius - 0.2, avg_temp_fahrenheit = avg_temp_fahrenheit - 0.36 WHERE region = 'Arctic Ocean';"}
{"prompt":"Show the transaction history for a specific user '0x456...'. with given SQL schema CREATE TABLE transactions (hash VARCHAR(64), value INT, timestamp TIMESTAMP, user_address VARCHAR(64));","completion":"SELECT hash, value, timestamp FROM transactions WHERE user_address = '0x456...';"}
{"prompt":"Which regulatory frameworks have been implemented in 'Country1'? with given SQL schema CREATE TABLE countries (id INT, name VARCHAR(255)); INSERT INTO countries (id, name) VALUES (1, 'Country1'); CREATE TABLE regulatory_frameworks (id INT, country_id INT, name VARCHAR(255)); INSERT INTO regulatory_frameworks (id, country_id, name) VALUES (1, 1, 'Framework1'); INSERT INTO regulatory_frameworks (id, country_id, name) VALUES (2, 1, 'Framework2'); INSERT INTO regulatory_frameworks (id, country_id, name) VALUES (3, 1, 'Framework3');","completion":"SELECT name FROM regulatory_frameworks WHERE country_id = (SELECT id FROM countries WHERE name = 'Country1');"}
{"prompt":"What is the total number of organic and non-organic products? with given SQL schema CREATE TABLE products_organic (id INT, product_name TEXT, organic BOOLEAN); INSERT INTO products_organic (id, product_name, organic) VALUES (1, 'Lotion', true), (2, 'Shampoo', false), (3, 'Soap', true);","completion":"SELECT organic, COUNT(*) FROM products_organic GROUP BY organic;"}
{"prompt":"What is the average price of vegan cosmetics in the US? with given SQL schema CREATE TABLE cosmetics (product_id INT, product_name VARCHAR(50), is_vegan BOOLEAN, price FLOAT, country VARCHAR(50));","completion":"SELECT AVG(price) FROM cosmetics WHERE is_vegan = TRUE AND country = 'USA';"}
{"prompt":"What is the percentage of lipsticks that are vegan and gluten-free? with given SQL schema CREATE TABLE lipsticks (lipstick_id INT, name VARCHAR(255), is_vegan BOOLEAN, is_gluten_free BOOLEAN);","completion":"SELECT (COUNT(*) FILTER (WHERE is_vegan = TRUE AND is_gluten_free = TRUE)) * 100.0 \/ COUNT(*) FROM lipsticks;"}
{"prompt":"What is the percentage of sustainable haircare products sold in France in Q3 2021? with given SQL schema CREATE TABLE haircare_sales (sale_id INT, product_id INT, sale_quantity INT, is_sustainable BOOLEAN, sale_date DATE, country VARCHAR(20)); INSERT INTO haircare_sales VALUES (1, 45, 6, true, '2021-07-29', 'France'); INSERT INTO haircare_sales VALUES (2, 46, 3, false, '2021-07-29', 'France');","completion":"SELECT ROUND((SUM(CASE WHEN is_sustainable = true THEN sale_quantity ELSE 0 END) \/ SUM(sale_quantity)) * 100, 2) FROM haircare_sales WHERE sale_date BETWEEN '2021-07-01' AND '2021-09-30' AND country = 'France';"}
{"prompt":"Which brands have the most highly-rated cruelty-free makeup products? with given SQL schema CREATE TABLE brands (brand_id INT, brand_name VARCHAR(255)); CREATE TABLE products (product_id INT, product_name VARCHAR(255), brand_id INT, rating INT, is_cruelty_free BOOLEAN);","completion":"SELECT b.brand_name, AVG(p.rating) as avg_rating FROM brands b INNER JOIN products p ON b.brand_id = p.brand_id WHERE p.is_cruelty_free = TRUE GROUP BY b.brand_name ORDER BY avg_rating DESC;"}
{"prompt":"What is the average crime rate per capita in each neighborhood? with given SQL schema CREATE TABLE neighborhoods (name VARCHAR(255), population INT, crime_count INT); INSERT INTO neighborhoods (name, population, crime_count) VALUES ('Central Park', 1000, 25), ('Harlem', 2500, 75), ('Brooklyn', 5000, 120);","completion":"SELECT name, AVG(crime_count\/population) OVER (PARTITION BY name) FROM neighborhoods;"}
{"prompt":"What was the response time for the top 5 most common crime types in each community district in the past month? with given SQL schema CREATE TABLE community_districts (cd_number INT, community_name VARCHAR(255)); INSERT INTO community_districts (cd_number, community_name) VALUES  (1, 'Manhattan 1'), (2, 'Manhattan 2'), (3, 'Manhattan 3'); CREATE TABLE crime_data (crime_date DATE, cd_number INT, crime_type VARCHAR(255), response_time INT);","completion":"SELECT cd.community_name, ct.crime_type, AVG(cd.response_time) as avg_response_time FROM community_districts cd JOIN crime_data cd ON cd.cd_number = cd.cd_number JOIN (SELECT crime_type, cd_number, COUNT(*) as count FROM crime_data WHERE crime_date >= CURDATE() - INTERVAL 1 MONTH GROUP BY crime_type, cd_number ORDER BY count DESC LIMIT 5) ct ON cd.cd_number = ct.cd_number WHERE cd.crime_date >= CURDATE() - INTERVAL 1 MONTH GROUP BY cd.community_name, ct.crime_type;"}
{"prompt":"Show the difference in military equipment maintenance costs between 'Type A' and 'Type B' aircraft in 2022 with given SQL schema CREATE TABLE equipment_maintenance (equipment_type VARCHAR(50), maintenance_date DATE, maintenance_cost DECIMAL(10,2));","completion":"SELECT (SUM(CASE WHEN equipment_type = 'Type A' THEN maintenance_cost ELSE 0 END) - SUM(CASE WHEN equipment_type = 'Type B' THEN maintenance_cost ELSE 0 END))\/10000 FROM equipment_maintenance WHERE EXTRACT(YEAR FROM maintenance_date) = 2022;"}
{"prompt":"List all defense diplomacy events involving 'China' and 'India' between 2005 and 2010. with given SQL schema CREATE TABLE defense_diplomacy (id INT, country1 VARCHAR(255), country2 VARCHAR(255), year INT, event VARCHAR(255)); INSERT INTO defense_diplomacy (id, country1, country2, year, event) VALUES (1, 'China', 'India', 2005, 'Military Exercise');","completion":"SELECT * FROM defense_diplomacy WHERE (country1 = 'China' AND country2 = 'India') OR (country1 = 'India' AND country2 = 'China') AND year BETWEEN 2005 AND 2010;"}
{"prompt":"What is the total cargo capacity for all vessels in the 'vessels' table registered in the 'Hong Kong' registry? with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), registry VARCHAR(50), capacity INT); INSERT INTO vessels (vessel_id, vessel_name, registry, capacity) VALUES (1, 'CSCL Globe', 'China', 197500), (2, 'OOCL Hong Kong', 'Hong Kong', 210000), (3, 'MSC Maya', 'Panama', 192240);","completion":"SELECT SUM(capacity) FROM vessels WHERE registry = 'Hong Kong';"}
{"prompt":"What are the names of all suppliers from 'Germany'? with given SQL schema CREATE TABLE suppliers (id INT, name VARCHAR(50), country VARCHAR(20)); INSERT INTO suppliers (id, name, country) VALUES (1, 'Supplier 1', 'Germany'), (2, 'Supplier 2', 'USA');","completion":"SELECT name FROM suppliers WHERE country = 'Germany';"}
{"prompt":"What are the names and capabilities of military technologies developed in 'North America'? with given SQL schema CREATE TABLE military_tech (id INT, tech_name TEXT, region TEXT, capabilities TEXT); INSERT INTO military_tech (id, tech_name, region, capabilities) VALUES (1, 'F-35 Lightning II', 'North America', 'Stealth, multi-role'), (2, 'THAAD', 'North America', 'Anti-ballistic missile defense'), (3, 'Sea Hunter', 'North America', 'Autonomous naval vessel');","completion":"SELECT tech_name, capabilities FROM military_tech WHERE region = 'North America';"}
{"prompt":"Delete all records for the Hip-Hop genre from the year 2019 with given SQL schema CREATE TABLE music_genres (genre VARCHAR(255), country VARCHAR(255), revenue FLOAT, event_date DATE); INSERT INTO music_genres (genre, country, revenue, event_date) VALUES ('Pop', 'USA', 10000.0, '2020-01-01'), ('Rock', 'USA', 8000.0, '2020-01-01'), ('Jazz', 'USA', 6000.0, '2020-01-01');","completion":"DELETE FROM music_genres WHERE genre = 'Hip-Hop' AND YEAR(event_date) = 2019;"}
{"prompt":"What is the average length of songs by artists from the United States? with given SQL schema CREATE TABLE artists (artist_id INT, artist_name TEXT, country TEXT); CREATE TABLE songs (song_id INT, song_length FLOAT, artist_id INT); INSERT INTO artists VALUES (1, 'Taylor Swift', 'United States'), (2, 'Adele', 'United Kingdom'); INSERT INTO songs VALUES (1, 205.3, 1), (2, 180.2, 2);","completion":"SELECT AVG(song_length) FROM songs INNER JOIN artists ON songs.artist_id = artists.artist_id WHERE artists.country = 'United States';"}
{"prompt":"How many donors have donated more than $100 in the 'Donations' table? with given SQL schema CREATE TABLE Donations (DonorID INT, DonationDate DATE, Amount DECIMAL(10, 2)); INSERT INTO Donations (DonorID, DonationDate, Amount) VALUES (1, '2022-02-01', 120.00), (2, '2022-01-15', 75.00), (3, '2022-03-05', 150.00);","completion":"SELECT COUNT(*) FROM Donations WHERE Amount > 100;"}
{"prompt":"What is the average donation amount for donors with the last name starting with 'S'? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorName TEXT, DonationAmount DECIMAL); INSERT INTO Donations (DonationID, DonorName, DonationAmount) VALUES (1, 'Sarah Lee', 50.00), (2, 'Peter Smith', 100.00);","completion":"SELECT AVG(DonationAmount) FROM Donations WHERE DonorName LIKE 'S%';"}
{"prompt":"What was the average donation amount for new donors to health programs in Q2 2022? with given SQL schema CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(50), total_donation_amount DECIMAL(10,2), last_donation_date DATE, first_donation_date DATE); CREATE TABLE Donations (donation_id INT, donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE, program_id INT);","completion":"SELECT AVG(donation_amount) FROM Donations d JOIN Donors don ON d.donor_id = don.donor_id WHERE program_id IN (SELECT program_id FROM Programs WHERE category = 'health') AND donor_id IN (SELECT donor_id FROM Donors WHERE YEAR(first_donation_date) = 2022 AND first_donation_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY donor_id HAVING COUNT(*) = 1);"}
{"prompt":"How many lifelong learning courses has a student with ID '2' completed, in chronological order? with given SQL schema CREATE TABLE lifelong_learning (student_id INT, course_id INT, completion_date DATE); INSERT INTO lifelong_learning VALUES (2, 1001, '2015-01-01'), (2, 1002, '2016-01-01');","completion":"SELECT student_id, course_id, COUNT(course_id) OVER (PARTITION BY student_id ORDER BY completion_date) as completed_courses FROM lifelong_learning WHERE student_id = 2;"}
{"prompt":"Select 'Name' from 'TopTeachers' view with given SQL schema CREATE TABLE Teachers (TeacherID INT, Name VARCHAR(100), Subject VARCHAR(50)); CREATE VIEW TopTeachers AS SELECT Name, Subject FROM Teachers WHERE Subject = 'Science';","completion":"SELECT Name FROM TopTeachers;"}
{"prompt":"What is the average mental health score of students for each district, ordered by the average score? with given SQL schema CREATE TABLE districts (district_id INT, district_name VARCHAR(50)); INSERT INTO districts VALUES (1, 'District A'), (2, 'District B'), (3, 'District C'); CREATE TABLE student_mental_health (student_id INT, district_id INT, mental_health_score INT); INSERT INTO student_mental_health VALUES (1, 1, 80), (2, 1, 90), (3, 2, 70), (4, 2, 60), (5, 3, 95), (6, 3, 85);","completion":"SELECT district_id, AVG(mental_health_score) as avg_score FROM student_mental_health GROUP BY district_id ORDER BY avg_score DESC;"}
{"prompt":"What is the total salary expense for the company? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), Salary FLOAT); INSERT INTO Employees (EmployeeID, Department, Salary) VALUES (1, 'Marketing', 75000.0), (2, 'Marketing', 80000.0), (3, 'IT', 85000.0);","completion":"SELECT SUM(Salary) FROM Employees;"}
{"prompt":"Add a new energy storage capacity record for Sao Paulo in 2027 with 9000 MWh with given SQL schema CREATE TABLE energy_storage (id INT, region VARCHAR(50), year INT, capacity FLOAT);","completion":"INSERT INTO energy_storage (id, region, year, capacity) VALUES (3, 'Sao Paulo', 2027, 9000);"}
{"prompt":"What is the total energy generated from renewable energy sources in Kenya, Nigeria, and South Africa for Q1 2021? with given SQL schema CREATE TABLE energy_generation (country VARCHAR(20), source_type VARCHAR(20), generation FLOAT, generation_date DATETIME); INSERT INTO energy_generation (country, source_type, generation, generation_date) VALUES ('Kenya', 'Solar', 1200.0, '2021-01-01'), ('Kenya', 'Wind', 1500.0, '2021-01-01'), ('Nigeria', 'Solar', 1800.0, '2021-01-01'), ('Nigeria', 'Wind', 2000.0, '2021-01-01'), ('South Africa', 'Solar', 2100.0, '2021-01-01'), ('South Africa', 'Wind', 2400.0, '2021-01-01');","completion":"SELECT country, SUM(generation) as total_generation FROM energy_generation WHERE country IN ('Kenya', 'Nigeria', 'South Africa') AND generation_date >= '2021-01-01' AND generation_date < '2021-04-01' AND source_type IN ('Solar', 'Wind') GROUP BY country;"}
{"prompt":"How many producing gas wells are there in the Permian Basin and Marcellus Shale? with given SQL schema CREATE TABLE wells (id INT, region VARCHAR(255), well_type VARCHAR(255), status VARCHAR(255)); INSERT INTO wells (id, region, well_type, status) VALUES (1, 'Permian Basin', 'Gas', 'Producing'), (2, 'Permian Basin', 'Oil', 'Producing'), (3, 'Marcellus Shale', 'Gas', 'Producing'), (4, 'Marcellus Shale', 'Oil', 'Shut-in');","completion":"SELECT SUM(CASE WHEN region IN ('Permian Basin', 'Marcellus Shale') AND well_type = 'Gas' AND status = 'Producing' THEN 1 ELSE 0 END) as producing_gas_wells FROM wells;"}
{"prompt":"Find the team with the highest winning percentage in the current MLB season. with given SQL schema CREATE TABLE teams (team_id INT, team_name VARCHAR(50), season_id INT); CREATE TABLE games (game_id INT, team_id INT, won INT, season_id INT);","completion":"SELECT team_id, AVG(won) * 100.0 \/ (SELECT COUNT(*) FROM games WHERE team_id = teams.team_id) AS win_percentage FROM games JOIN teams ON games.team_id = teams.team_id WHERE season_id = (SELECT MAX(season_id) FROM teams) GROUP BY team_id ORDER BY win_percentage DESC LIMIT 1;"}
{"prompt":"Who has the highest number of home runs in the 'baseball_stats' table? with given SQL schema CREATE TABLE baseball_stats (player_id INT, name VARCHAR(50), team VARCHAR(50), home_runs INT); INSERT INTO baseball_stats (player_id, name, team, home_runs) VALUES (1, 'Aaron Judge', 'New York Yankees', 52); INSERT INTO baseball_stats (player_id, name, team, home_runs) VALUES (2, 'Mike Trout', 'Los Angeles Angels', 45);","completion":"SELECT name, MAX(home_runs) FROM baseball_stats;"}
{"prompt":"What's the total funding amount for organizations located in 'India'? with given SQL schema CREATE TABLE Organization (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(20), country VARCHAR(20)); INSERT INTO Organization (id, name, type, country) VALUES (1, 'Akshaya Patra', 'Food Support', 'India'); INSERT INTO Organization (id, name, type, country) VALUES (2, 'Goonj', 'Relief', 'India'); CREATE TABLE Funding (id INT PRIMARY KEY, donor_id INT, organization_id INT, amount DECIMAL(10,2)); INSERT INTO Funding (id, donor_id, organization_id, amount) VALUES (1, 1, 1, 50000.00); INSERT INTO Funding (id, donor_id, organization_id, amount) VALUES (2, 2, 2, 100000.00);","completion":"SELECT SUM(Funding.amount) FROM Funding INNER JOIN Organization ON Funding.organization_id = Organization.id WHERE Organization.country = 'India';"}
{"prompt":"What is the maximum fare for trams in the 'urban' schema, excluding fares less than $2? with given SQL schema CREATE SCHEMA urban; CREATE TABLE urban.trams (id INT, fare DECIMAL); INSERT INTO urban.trams (id, fare) VALUES (1, 3.50), (2, 1.75), (3, 2.25);","completion":"SELECT MAX(fare) FROM urban.trams WHERE fare > 2;"}
{"prompt":"What is the total revenue for the 'Red Line' route? with given SQL schema CREATE TABLE routes (route_id varchar(255), route_name varchar(255), revenue decimal(10,2)); INSERT INTO routes (route_id, route_name, revenue) VALUES ('R1', 'Red Line', 500000.00);","completion":"SELECT revenue FROM routes WHERE route_name = 'Red Line';"}
{"prompt":"What is the average delivery time for orders shipped to Italy that contain eco-friendly materials? with given SQL schema CREATE TABLE orders (id INT, delivery_time INT, eco_friendly BOOLEAN, country VARCHAR(50)); INSERT INTO orders (id, delivery_time, eco_friendly, country) VALUES (1, 5, TRUE, 'Italy'), (2, 3, FALSE, 'Canada'), (3, 7, TRUE, 'Italy');","completion":"SELECT AVG(delivery_time) FROM orders WHERE eco_friendly = TRUE AND country = 'Italy';"}
{"prompt":"What is the total income and expenses for financial wellbeing programs in Australia? with given SQL schema CREATE TABLE FinancialWellbeingPrograms (id INT, program_name VARCHAR(50), country VARCHAR(50), income FLOAT, expenses FLOAT); INSERT INTO FinancialWellbeingPrograms (id, program_name, country, income, expenses) VALUES (1, 'Financial Literacy Program', 'Australia', 25000, 15000), (2, 'Debt Management Program', 'Australia', 30000, 20000), (3, 'Retirement Planning Program', 'Australia', 35000, 25000);","completion":"SELECT country, SUM(income) as total_income, SUM(expenses) as total_expenses FROM FinancialWellbeingPrograms WHERE country = 'Australia' GROUP BY country;"}
{"prompt":"What was the total donation amount by age group in 2021? with given SQL schema CREATE TABLE donors (donor_id INT, donor_age INT, donation_amount DECIMAL(10,2), donation_date DATE);","completion":"SELECT donor_age, SUM(donation_amount) as total_donation FROM donors WHERE YEAR(donation_date) = 2021 GROUP BY donor_age;"}
{"prompt":"What is the average weight of packages shipped to Africa in the last year? with given SQL schema CREATE TABLE packages (id INT, weight FLOAT, shipped_date DATE); INSERT INTO packages (id, weight, shipped_date) VALUES (1, 15.3, '2022-01-01'), (2, 22.1, '2022-01-15');","completion":"SELECT AVG(weight) FROM packages WHERE shipped_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND destination = 'Africa';"}
{"prompt":"What is the total weight of parcels shipped from 'FRA' to 'ICN' in March 2022? with given SQL schema CREATE TABLE parcels (id INT, shipment_id INT, weight FLOAT); INSERT INTO parcels (id, shipment_id, weight) VALUES (1, 1, 5.2), (2, 1, 4.8), (3, 2, 6.0), (4, 2, 5.5), (5, 3, 4.5); CREATE TABLE shipments (id INT, source_airport VARCHAR(5), destination_airport VARCHAR(5), shipped_date DATE); INSERT INTO shipments (id, source_airport, destination_airport, shipped_date) VALUES (1, 'FRA', 'ICN', '2022-03-02'), (2, 'FRA', 'ICN', '2022-03-05'), (3, 'ICN', 'FRA', '2022-03-10');","completion":"SELECT SUM(weight) FROM parcels JOIN shipments ON parcels.shipment_id = shipments.id WHERE source_airport = 'FRA' AND destination_airport = 'ICN' AND shipped_date BETWEEN '2022-03-01' AND '2022-03-31';"}
{"prompt":"Delete genetic research experiments conducted before 2010 with given SQL schema CREATE TABLE genetic_research_experiments (experiment_id INT, experiment_name VARCHAR(255), experiment_date DATE);","completion":"DELETE FROM genetic_research_experiments WHERE experiment_date < '2010-01-01';"}
{"prompt":"Which genetic research projects used biosensor technologies in Spain? with given SQL schema CREATE TABLE projects(name VARCHAR(50), location VARCHAR(20), biosensor_used BOOLEAN);INSERT INTO projects(name, location, biosensor_used) VALUES('ProjectX', 'Spain', true), ('ProjectY', 'Germany', false), ('ProjectZ', 'France', true);","completion":"SELECT name FROM projects WHERE location = 'Spain' AND biosensor_used = true;"}
{"prompt":"Update the budget of the government program in the state of Florida with the ID of 1 to $3M. with given SQL schema CREATE TABLE programs (id INT, name VARCHAR(255), budget FLOAT, state VARCHAR(255)); INSERT INTO programs (id, name, budget, state) VALUES (1, 'Program A', 2.5, 'Florida'), (2, 'Program B', 1.2, 'Florida'), (3, 'Program C', 1.8, 'California');","completion":"UPDATE programs SET budget = 3000000.0 WHERE id = 1 AND state = 'Florida';"}
{"prompt":"Which committees have less than 5 members, displayed in ascending order of the number of members? with given SQL schema CREATE TABLE committees (committee_name TEXT, members INT); INSERT INTO committees (committee_name, members) VALUES ('Committee1', 6), ('Committee2', 3), ('Committee3', 7), ('Committee4', 2), ('Committee5', 8);","completion":"SELECT committee_name FROM committees WHERE members < 5 ORDER BY members ASC;"}
{"prompt":"What is the maximum salary of a professor in the Physics department? with given SQL schema CREATE TABLE if NOT EXISTS faculty (id INT, name VARCHAR(50), department VARCHAR(20), rank VARCHAR(20), salary INT);","completion":"SELECT MAX(salary) FROM faculty WHERE department='Physics' AND rank='Professor';"}
{"prompt":"Find the ratio of community health workers to mental health professionals in each region. with given SQL schema CREATE TABLE HealthWorkers (Region VARCHAR(20), WorkerType VARCHAR(20), Count INT); INSERT INTO HealthWorkers (Region, WorkerType, Count) VALUES ('Northeast', 'MentalHealthProfessional', 900), ('Northeast', 'CommunityHealthWorker', 500), ('Southeast', 'MentalHealthProfessional', 600), ('Southeast', 'CommunityHealthWorker', 400), ('Midwest', 'MentalHealthProfessional', 850), ('Midwest', 'CommunityHealthWorker', 600), ('West', 'MentalHealthProfessional', 750), ('West', 'CommunityHealthWorker', 700);","completion":"SELECT Region, AVG(CommunityHealthWorkerCount \/ MentalHealthProfessionalCount) AS Ratio FROM (SELECT Region, SUM(CASE WHEN WorkerType = 'MentalHealthProfessional' THEN Count ELSE 0 END) AS MentalHealthProfessionalCount, SUM(CASE WHEN WorkerType = 'CommunityHealthWorker' THEN Count ELSE 0 END) AS CommunityHealthWorkerCount FROM HealthWorkers GROUP BY Region) AS HealthWorkerCounts GROUP BY Region;"}
{"prompt":"How many mental health parity cases were reported in the Southwest region in 2020? with given SQL schema CREATE TABLE MentalHealthParity (Id INT, Region VARCHAR(20), ReportDate DATE); INSERT INTO MentalHealthParity (Id, Region, ReportDate) VALUES (1, 'Southwest', '2020-01-01'), (2, 'Northeast', '2019-12-31'), (3, 'Southwest', '2020-06-15');","completion":"SELECT COUNT(*) as CountOfCases FROM MentalHealthParity WHERE Region = 'Southwest' AND YEAR(ReportDate) = 2020;"}
{"prompt":"What is the total number of bookings for eco-friendly accommodations in Barcelona? with given SQL schema CREATE TABLE accommodations (id INT, name TEXT, city TEXT, bookings INT, is_eco_friendly BOOLEAN); INSERT INTO accommodations (id, name, city, bookings, is_eco_friendly) VALUES (1, 'Eco Hotel Barcelona', 'Barcelona', 350, true), (2, 'Green Lodge Barcelona', 'Barcelona', 220, true), (3, 'Sustainable Suites Barcelona', 'Barcelona', 410, true);","completion":"SELECT SUM(bookings) FROM accommodations WHERE city = 'Barcelona' AND is_eco_friendly = true;"}
{"prompt":"What is the average number of AI-powered bookings per hotel in North America in Q2 2022? with given SQL schema CREATE TABLE ai_bookings (id INT, quarter TEXT, region TEXT, hotel_id INT, bookings INT); INSERT INTO ai_bookings (id, quarter, region, hotel_id, bookings) VALUES (1, 'Q2 2022', 'North America', 101, 50), (2, 'Q2 2022', 'North America', 102, 75), (3, 'Q2 2022', 'North America', 103, 60);","completion":"SELECT region, AVG(bookings\/NULLIF(hotel_id,0)) FROM ai_bookings WHERE quarter = 'Q2 2022' AND region = 'North America' GROUP BY region;"}
{"prompt":"Which species were studied by Agnes Sorensen? with given SQL schema CREATE TABLE species_research (id INT, species_id INT, year INT, location VARCHAR(50), observations INT); INSERT INTO species_research (id, species_id, year, location, observations) VALUES (1, 1, 2015, 'Arctic', 350), (2, 1, 2016, 'Antarctic', 400), (3, 2, 2016, 'Arctic', 500); CREATE TABLE researchers (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO researchers (id, name, country) VALUES (1, 'Sanna Simula', 'Finland'), (2, 'Kristian Olsen', 'Greenland'), (3, 'Agnes Sorensen', 'Greenland'); CREATE TABLE researcher_species (researcher_id INT, species_id INT); INSERT INTO researcher_species (researcher_id, species_id) VALUES (1, 1), (2, 1), (3, 2);","completion":"SELECT s.name FROM researcher_species rs JOIN researchers r ON r.id = rs.researcher_id JOIN species s ON s.id = rs.species_id WHERE r.name = 'Agnes Sorensen';"}
{"prompt":"How many projects are in the 'Green_Infrastructure' table located in 'Park'? with given SQL schema CREATE TABLE Green_Infrastructure (project_id INT, project_name VARCHAR(50), location VARCHAR(50)); INSERT INTO Green_Infrastructure (project_id, project_name, location) VALUES (1, 'Rain Garden Installation', 'Park'), (2, 'Tree Planting', 'Park'), (3, 'Bioswale Construction', 'Street'), (4, 'Permeable Pavement Installation', 'Parking Lot');","completion":"SELECT COUNT(*) FROM Green_Infrastructure WHERE location = 'Park';"}
{"prompt":"What is the average hotel price in each city in Europe? with given SQL schema CREATE TABLE Hotels_Europe (id INT, name VARCHAR(50), price DECIMAL(5,2), city VARCHAR(50)); INSERT INTO Hotels_Europe (id, name, price, city) VALUES (1, 'Grand Hotel', 200.00, 'Paris'), (2, 'Hotel Colosseo', 350.00, 'Rome'), (3, 'Park Royal', 120.00, 'London'), (4, 'Hotel Versailles', 420.00, 'Paris');","completion":"SELECT city, AVG(price) as avg_price FROM Hotels_Europe GROUP BY city;"}
{"prompt":"List the marine life research projects in the 'Marine Research Projects' table. with given SQL schema CREATE TABLE marine_research_projects (id INT, project_name VARCHAR(255), objective TEXT, start_date DATE, end_date DATE);","completion":"SELECT project_name FROM marine_research_projects;"}
{"prompt":"What is the minimum depth at which any coral species can be found in the Caribbean region? with given SQL schema CREATE TABLE coral_species (species_name VARCHAR(255), region VARCHAR(255), min_depth FLOAT); INSERT INTO coral_species (species_name, region, min_depth) VALUES ('Staghorn Coral', 'Caribbean', 1.0), ('Elkhorn Coral', 'Caribbean', 2.0);","completion":"SELECT MIN(min_depth) FROM coral_species WHERE region = 'Caribbean';"}
{"prompt":"What is the percentage of videos about disinformation detection, published by independent creators? with given SQL schema CREATE TABLE videos (id INT, title VARCHAR(255), views INT, publish_date DATE, topic VARCHAR(255), creator_type VARCHAR(255));","completion":"SELECT (COUNT(*) FILTER (WHERE topic = 'disinformation detection' AND creator_type = 'independent')) * 100.0 \/ COUNT(*) FROM videos;"}
{"prompt":"What is the percentage of female managers in the company? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), Position VARCHAR(20), Age INT, Gender VARCHAR(10)); INSERT INTO Employees (EmployeeID, Department, Position, Age, Gender) VALUES (1, 'Mining', 'Manager', 50, 'Female'), (2, 'Mining', 'Engineer', 40, 'Male'), (3, 'HR', 'Manager', 45, 'Female');","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM Employees)) AS PercentageFemaleManagers FROM Employees WHERE Gender = 'Female' AND Position = 'Manager';"}
{"prompt":"List all network towers in the city of Los Angeles that have a latitude value between -118.4 and -118.3. with given SQL schema CREATE TABLE network_towers (tower_id INT, city VARCHAR(20), latitude FLOAT); INSERT INTO network_towers (tower_id, city, latitude) VALUES (1, 'Los Angeles', -118.2), (2, 'Los Angeles', -118.5), (3, 'New York', -118.4);","completion":"SELECT tower_id, city, latitude FROM network_towers WHERE city = 'Los Angeles' AND latitude BETWEEN -118.4 AND -118.3;"}
{"prompt":"What is the average word count of articles published in \"The Wall Street Journal\" in the \"Business\" news category? with given SQL schema CREATE TABLE articles (id INT, title TEXT, content TEXT, publication_date DATE, newspaper TEXT, category TEXT); CREATE TABLE words (id INT, article_id INT, word TEXT);","completion":"SELECT AVG(word_count) FROM (SELECT a.id, COUNT(w.word) AS word_count FROM articles a INNER JOIN words w ON a.id = w.article_id WHERE a.newspaper = 'The Wall Street Journal' AND a.category = 'Business' GROUP BY a.id) t;"}
{"prompt":"What is the minimum marine conservation score for areas in the Mediterranean? with given SQL schema CREATE TABLE marine_protected_areas (area_name TEXT, region TEXT, conservation_score FLOAT); INSERT INTO marine_protected_areas (area_name, region, conservation_score) VALUES ('MPA 1', 'Mediterranean', 82.0), ('MPA 2', 'Mediterranean', 85.6), ('MPA 3', 'Mediterranean', 79.8);","completion":"SELECT MIN(conservation_score) FROM marine_protected_areas WHERE region = 'Mediterranean';"}
{"prompt":"What is the total number of deep-sea exploration projects in the Southern Ocean? with given SQL schema CREATE TABLE deep_sea_exploration (name VARCHAR, ocean VARCHAR); INSERT INTO deep_sea_exploration (name, ocean) VALUES ('Argentina', 'Southern Ocean');","completion":"SELECT COUNT(*) FROM deep_sea_exploration WHERE ocean = 'Southern Ocean';"}
{"prompt":"What is the total number of marine species in each region? with given SQL schema CREATE TABLE marine_species (name VARCHAR, region VARCHAR); INSERT INTO marine_species (name, region) VALUES ('Dolphin', 'Atlantic'), ('Shark', 'Pacific'), ('Clownfish', 'Indian');","completion":"SELECT region, COUNT(*) FROM marine_species GROUP BY region;"}
{"prompt":"Delete records in the 'esports_teams' table where the team is from the 'Asia' region with given SQL schema CREATE TABLE esports_teams (team_id INT, name VARCHAR(100), is_active BOOLEAN, region VARCHAR(50));","completion":"DELETE FROM esports_teams WHERE region = 'Asia';"}
{"prompt":"What is the minimum level of a player for CS:GO? with given SQL schema CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(20), Game VARCHAR(20), PlayerLevel INT); INSERT INTO Players (PlayerID, PlayerName, Game, PlayerLevel) VALUES (1, 'Player1', 'CS:GO', 23), (2, 'Player2', 'CS:GO', 30);","completion":"SELECT MIN(PlayerLevel) FROM Players WHERE Game = 'CS:GO';"}
{"prompt":"What is the total amount of fines issued by the police department of Houston in the year 2019? with given SQL schema CREATE TABLE fines (fine_id INT, fine_date DATE, fine_city TEXT, fine_amount FLOAT); INSERT INTO fines (fine_id, fine_date, fine_city, fine_amount) VALUES (1, '2019-01-01', 'Houston', 100), (2, '2019-06-15', 'Houston', 200), (3, '2020-12-31', 'Houston', 50);","completion":"SELECT SUM(fine_amount) FROM fines WHERE fine_city = 'Houston' AND YEAR(fine_date) = 2019;"}
{"prompt":"List all the distinct producers of Gadolinium from the 'production' table, ordered alphabetically. with given SQL schema CREATE TABLE production (element VARCHAR(10), year INT, month INT, producer VARCHAR(20), quantity INT);","completion":"SELECT DISTINCT producer FROM production WHERE element = 'Gadolinium' ORDER BY producer ASC;"}
{"prompt":"Which cities have affordable housing units with occupancy rates below 80%? with given SQL schema CREATE TABLE AffordableHousing (UnitID INT, City VARCHAR(50), OccupancyRate DECIMAL(4,2)); INSERT INTO AffordableHousing (UnitID, City, OccupancyRate) VALUES (1, 'San Francisco', 0.85), (2, 'New York', 0.92), (3, 'Los Angeles', 0.76);","completion":"SELECT City FROM AffordableHousing WHERE OccupancyRate < 0.80;"}
{"prompt":"Who are the owners of properties with a price above the average? with given SQL schema CREATE TABLE property (id INT, price FLOAT, owner_id INT); CREATE TABLE person (id INT, name VARCHAR(50));","completion":"SELECT person.name FROM person INNER JOIN property ON person.id = property.owner_id WHERE price > (SELECT AVG(price) FROM property);"}
{"prompt":"Compute the percentage of renewable energy consumption in Southeast Asia, for each country, in the last 5 years. with given SQL schema CREATE TABLE SEA_Renewable_Energy (country VARCHAR(255), year INT, consumption INT); INSERT INTO SEA_Renewable_Energy (country, year, consumption) VALUES ('Indonesia', 2018, 15), ('Malaysia', 2018, 20), ('Thailand', 2018, 25), ('Vietnam', 2018, 30), ('Indonesia', 2019, 17), ('Malaysia', 2019, 22), ('Thailand', 2019, 28), ('Vietnam', 2019, 33);","completion":"SELECT country, (SUM(consumption) FILTER (WHERE year BETWEEN 2018 AND 2022) OVER (PARTITION BY country)::DECIMAL \/ SUM(consumption) OVER (PARTITION BY country)) * 100 AS pct_renewable FROM SEA_Renewable_Energy;"}
{"prompt":"Which countries have the highest and lowest sales of ethical clothing brands? with given SQL schema CREATE TABLE ethical_brands (brand_id INT, brand_name TEXT, product_category TEXT); INSERT INTO ethical_brands (brand_id, brand_name, product_category) VALUES (1, 'BrandA', 'Clothing'), (2, 'BrandB', 'Electronics'), (3, 'BrandC', 'Clothing'); CREATE TABLE sales (sale_id INT, brand_id INT, product_quantity INT, country TEXT); INSERT INTO sales (sale_id, brand_id, product_quantity, country) VALUES (1, 1, 50, 'Germany'), (2, 2, 75, 'France'), (3, 3, 30, 'Germany'), (4, 1, 100, 'France');","completion":"SELECT country, SUM(product_quantity) AS total_sales FROM sales JOIN ethical_brands ON sales.brand_id = ethical_brands.brand_id WHERE ethical_brands.product_category = 'Clothing' GROUP BY country ORDER BY total_sales DESC, country;"}
{"prompt":"What is the maximum distance traveled by any astrophysics research? with given SQL schema CREATE TABLE astrophysics_research (research_id INT, location VARCHAR(50), distance FLOAT); INSERT INTO astrophysics_research (research_id, location, distance) VALUES (1, 'Mars', 50.3), (2, 'Venus', 10.2), (3, 'Mars', 40.1), (4, 'Jupiter', 70.5), (5, 'Mars', 60.0);","completion":"SELECT MAX(distance) FROM astrophysics_research;"}
{"prompt":"What is the minimum age of athletes in the \"Athletes\" table who are members of the LGBTQ+ community? with given SQL schema CREATE TABLE athletes (id INT, name VARCHAR(50), age INT, community VARCHAR(50));","completion":"SELECT MIN(age) FROM athletes WHERE community = 'LGBTQ+';"}
{"prompt":"What are the top 5 most common vulnerabilities based on their CVE IDs in the last month, ranked by severity? with given SQL schema CREATE TABLE Vulnerabilities (cve_id VARCHAR(20), severity INT, timestamp TIMESTAMP); INSERT INTO Vulnerabilities (cve_id, severity, timestamp) VALUES ('CVE-2022-1234', 7, '2022-01-01 10:00:00');","completion":"SELECT cve_id, COUNT(*) as vulnerability_count, RANK() OVER (ORDER BY vulnerability_count DESC) as vulnerability_rank FROM Vulnerabilities WHERE timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) AND CURRENT_TIMESTAMP GROUP BY cve_id ORDER BY vulnerability_count DESC, severity DESC LIMIT 5;"}
{"prompt":"What is the average time to remediate high severity vulnerabilities for each organization? with given SQL schema CREATE TABLE vulnerabilities (vuln_id INT, org_id INT, vuln_severity VARCHAR(50), vuln_report_date DATE, vuln_remediation_date DATE); INSERT INTO vulnerabilities (vuln_id, org_id, vuln_severity, vuln_report_date, vuln_remediation_date) VALUES (1, 1, 'high', '2022-01-01', '2022-01-05'), (2, 1, 'medium', '2022-01-02', '2022-01-07'), (3, 2, 'high', '2022-01-03', '2022-01-10');","completion":"SELECT org_id, AVG(DATEDIFF(day, vuln_report_date, vuln_remediation_date)) as avg_remediation_time FROM vulnerabilities WHERE vuln_severity = 'high' GROUP BY org_id;"}
{"prompt":"Which user accounts were created in the 'Europe' region in the last week? with given SQL schema CREATE TABLE user_accounts (id INT, username VARCHAR(255), region VARCHAR(255), account_created DATETIME); INSERT INTO user_accounts (id, username, region, account_created) VALUES (1, 'jdoe', 'Asia-Pacific', '2022-01-05'), (2, 'jsmith', 'Europe', '2022-01-06');","completion":"SELECT username FROM user_accounts WHERE region = 'Europe' AND account_created >= DATE_SUB(NOW(), INTERVAL 1 WEEK);"}
{"prompt":"How many autonomous vehicles were manufactured in 2021 or 2022 with an average speed greater than 40 mph? with given SQL schema CREATE TABLE Autonomous_Vehicles (id INT, make VARCHAR(50), model VARCHAR(50), year INT, total_miles FLOAT, average_speed FLOAT); INSERT INTO Autonomous_Vehicles (id, make, model, year, total_miles, average_speed) VALUES (1, 'Zoox', 'Alfred', 2022, 7000.0, 38.0), (2, 'Wayve', 'Ivy', 2021, 8000.0, 45.0);","completion":"SELECT COUNT(*) FROM Autonomous_Vehicles WHERE year IN (2021, 2022) AND average_speed > 40.0;"}
{"prompt":"What is the average occupancy rate of public transportation vehicles in Seoul? with given SQL schema CREATE TABLE public_transportation_occupancy (vehicle_id INT, occupancy_rate FLOAT, city VARCHAR(50));","completion":"SELECT AVG(occupancy_rate) FROM public_transportation_occupancy WHERE city = 'Seoul';"}
{"prompt":"What is the daily usage of bike-sharing systems in London? with given SQL schema CREATE TABLE london_bikes (id INT, ride_id VARCHAR(20), start_time TIMESTAMP, end_time TIMESTAMP, bike_id INT);","completion":"SELECT DATE(start_time) AS ride_date, COUNT(DISTINCT bike_id)  FROM london_bikes GROUP BY ride_date;"}
{"prompt":"Delete policies with no claims for policy type 'Renters' in the past 24 months. with given SQL schema CREATE TABLE Policy (PolicyID INT, PolicyType VARCHAR(50)); INSERT INTO Policy VALUES (1, 'Auto'), (2, 'Home'), (3, 'Life'), (4, 'Travel'), (5, 'Renters'); CREATE TABLE Claims (ClaimID INT, PolicyID INT, ClaimDate DATE); INSERT INTO Claims VALUES (1, 1, '2021-01-01'), (2, 1, '2021-02-01'), (3, 2, '2021-03-01'), (4, 3, '2020-01-01'), (5, 1, '2021-04-01'), (6, 2, '2020-01-01');","completion":"DELETE FROM Policy WHERE PolicyID NOT IN (SELECT PolicyID FROM Claims WHERE PolicyID = Policy.PolicyID AND ClaimDate > DATE_SUB(CURDATE(), INTERVAL 24 MONTH) AND PolicyType = 'Renters');"}
{"prompt":"What is the total number of employees in technology unions with a salary greater than $80,000? with given SQL schema CREATE TABLE technology_unions (id INT, employee_name TEXT, union_id INT, salary REAL); INSERT INTO technology_unions (id, employee_name, union_id, salary) VALUES (1, 'Alex Nguyen', 1001, 85000.00), (2, 'Bella Chen', 1002, 90000.00), (3, 'Charlie Patel', 1003, 95000.00);","completion":"SELECT COUNT(*) FROM technology_unions WHERE salary > 80000;"}
{"prompt":"Determine the current landfill capacity for the 'North America' region from the 'landfill_capacity' table with given SQL schema CREATE TABLE landfill_capacity (region VARCHAR(50), current_capacity INT);","completion":"SELECT current_capacity FROM landfill_capacity WHERE region = 'North America';"}
{"prompt":"What is the minimum landfill capacity in cubic meters for each country in the European Union? with given SQL schema CREATE TABLE LandfillCapacity (country VARCHAR(255), region VARCHAR(255), landfill_capacity FLOAT); INSERT INTO LandfillCapacity (country, region, landfill_capacity) VALUES ('Germany', 'European Union', 1500000), ('France', 'European Union', 1200000), ('Italy', 'European Union', 1800000);","completion":"SELECT country, MIN(landfill_capacity) FROM LandfillCapacity WHERE region = 'European Union' GROUP BY country;"}
{"prompt":"What is the waste generation in kg per capita for each city in the year 2020? with given SQL schema CREATE TABLE CityPopulation (city VARCHAR(50), year INT, population INT); INSERT INTO CityPopulation (city, year, population) VALUES ('CityA', 2018, 100000), ('CityA', 2019, 105000), ('CityA', 2020, 110000), ('CityB', 2018, 200000), ('CityB', 2019, 210000), ('CityB', 2020, 220000);","completion":"SELECT wg.city, (SUM(wg.amount) \/ cp.population) FROM WasteGeneration wg INNER JOIN CityPopulation cp ON wg.city = cp.city AND wg.year = cp.year WHERE wg.year = 2020 GROUP BY wg.city;"}
{"prompt":"How many customers were impacted by droughts in 2019 and 2020? with given SQL schema CREATE TABLE drought_impact (customer_id INT, year INT, impact_level TEXT); INSERT INTO drought_impact (customer_id, year, impact_level) VALUES (1, 2019, 'severe'), (1, 2020, 'moderate'), (2, 2019, 'none'), (3, 2020, 'severe'), (3, 2019, 'moderate');","completion":"SELECT COUNT(DISTINCT customer_id) as num_impacted_customers FROM drought_impact WHERE year IN (2019, 2020) AND impact_level <> 'none';"}
{"prompt":"Identify the unique water conservation initiatives for each region. with given SQL schema CREATE TABLE conservation_initiatives(initiative_id INT, initiative_name TEXT, region TEXT); INSERT INTO conservation_initiatives(initiative_id, initiative_name, region) VALUES (1, 'Rainwater harvesting', 'X'), (2, 'Greywater recycling', 'X'), (3, 'Smart irrigation', 'Y'), (4, 'Drip irrigation', 'Z'), (5, 'Permeable pavement', 'X');","completion":"SELECT DISTINCT region, initiative_name FROM conservation_initiatives;"}
{"prompt":"What is the minimum duration of workouts for members who joined in 2019, grouped by gender? with given SQL schema CREATE TABLE Workout (WorkoutID INT PRIMARY KEY, MemberID INT, Duration INT, Date DATE); CREATE TABLE Member (MemberID INT PRIMARY KEY, Age INT, Gender VARCHAR(10), MembershipStart DATE);","completion":"SELECT Member.Gender, MIN(Workout.Duration) FROM Workout INNER JOIN Member ON Workout.MemberID = Member.MemberID WHERE Member.MembershipStart BETWEEN '2019-01-01' AND '2019-12-31' GROUP BY Member.Gender;"}
{"prompt":"What is the number of male and female members who joined in each month? with given SQL schema CREATE TABLE Members (MemberID INT, JoinDate DATE, Gender VARCHAR(10)); INSERT INTO Members (MemberID, JoinDate, Gender) VALUES (1,'2022-01-01','Male'),(2,'2022-02-01','Female'),(3,'2022-03-01','Male');","completion":"SELECT MONTH(JoinDate), Gender, COUNT(*) FROM Members GROUP BY MONTH(JoinDate), Gender;"}
{"prompt":"What is the total revenue generated from each type of workout? with given SQL schema CREATE TABLE workout_fees (id INT, workout_type VARCHAR(50), fee DECIMAL(5,2)); INSERT INTO workout_fees (id, workout_type, fee) VALUES (1, 'Running', 10.00), (2, 'Cycling', 15.00);","completion":"SELECT workouts.workout_type, SUM(workout_fees.fee) AS total_revenue FROM workouts INNER JOIN workout_fees ON workouts.workout_type = workout_fees.workout_type GROUP BY workouts.workout_type;"}
{"prompt":"List the number of flights operated by each airline in the last month? with given SQL schema CREATE TABLE FlightOperations (id INT, flight_number VARCHAR(50), airline VARCHAR(50), operated_date DATE);","completion":"SELECT airline, COUNT(*) FROM FlightOperations WHERE operated_date >= DATEADD(month, -1, GETDATE()) GROUP BY airline;"}
{"prompt":"What is the total number of satellites deployed by each country? with given SQL schema CREATE SCHEMA if not exists aerospace;CREATE TABLE if not exists aerospace.satellites (id INT PRIMARY KEY, country VARCHAR(50), name VARCHAR(50), launch_date DATE); INSERT INTO aerospace.satellites (id, country, name, launch_date) VALUES (1, 'USA', 'Sat1', '2000-01-01'), (2, 'USA', 'Sat2', '2001-01-01'), (3, 'China', 'Sat3', '2002-01-01');","completion":"SELECT country, COUNT(*) as total_satellites FROM aerospace.satellites GROUP BY country;"}
{"prompt":"What is the total number of animals in each sanctuary, sorted by the number of animals in descending order? with given SQL schema CREATE TABLE animal_sanctuary (sanctuary_id INT, sanctuary_name VARCHAR(255), animal_type VARCHAR(255), animal_count INT); INSERT INTO animal_sanctuary (sanctuary_id, sanctuary_name, animal_type, animal_count) VALUES (1, 'Sanctuary A', 'Tiger', 25), (2, 'Sanctuary A', 'Elephant', 30), (3, 'Sanctuary B', 'Tiger', 35), (4, 'Sanctuary B', 'Elephant', 20), (5, 'Sanctuary C', 'Tiger', 15), (6, 'Sanctuary C', 'Elephant', 40);","completion":"SELECT sanctuary_name, animal_type, SUM(animal_count) AS total_animals FROM animal_sanctuary GROUP BY sanctuary_name, animal_type WITH ROLLUP ORDER BY total_animals DESC;"}
{"prompt":"How many tons of seafood were exported by the United States to China in 2020? with given SQL schema CREATE TABLE seafood_exports_v2 (id INT, export_date DATE, export_country VARCHAR(50), import_country VARCHAR(50), quantity INT, unit_type VARCHAR(10)); INSERT INTO seafood_exports_v2 (id, export_date, export_country, import_country, quantity, unit_type) VALUES (1, '2020-01-01', 'US', 'China', 700, 'ton'), (2, '2020-01-02', 'Canada', 'Mexico', 400, 'ton'), (3, '2021-01-01', 'US', 'China', 800, 'ton');","completion":"SELECT SUM(quantity) FROM seafood_exports_v2 WHERE export_country = 'US' AND import_country = 'China' AND EXTRACT(YEAR FROM export_date) = 2020;"}
{"prompt":"Insert a new record into the \"audience\" table for a visitor named \"Alex\" from the USA with given SQL schema CREATE TABLE audience (visitor_id INT PRIMARY KEY, name VARCHAR(100), country VARCHAR(50), visit_date DATE);","completion":"INSERT INTO audience (visitor_id, name, country, visit_date) VALUES ((SELECT MAX(visitor_id) FROM audience) + 1, 'Alex', 'USA', CURDATE());"}
{"prompt":"What is the average project timeline in weeks for construction in urban areas? with given SQL schema CREATE TABLE Projects (id INT, area_type VARCHAR(255), project_timeline_weeks FLOAT); INSERT INTO Projects (id, area_type, project_timeline_weeks) VALUES (1, 'urban', 12.5), (2, 'rural', 15.0), (3, 'urban', 13.0);","completion":"SELECT AVG(project_timeline_weeks) FROM Projects WHERE area_type = 'urban';"}
{"prompt":"Insert a new record into the 'cannabis_production' table for strain 'Gelato' with a yield of 500 grams with given SQL schema CREATE TABLE cannabis_production (id INT, strain VARCHAR(50), yield INT); INSERT INTO cannabis_production (id, strain, yield) VALUES (1, 'Blue Dream', 400);","completion":"INSERT INTO cannabis_production (strain, yield) VALUES ('Gelato', 500);"}
{"prompt":"Which chemical plants have exceeded the maximum allowed emission limit in the last year? with given SQL schema CREATE TABLE plants (plant_id INT, plant_name VARCHAR(50)); CREATE TABLE emissions (plant_id INT, emission_level INT, emission_date DATE); INSERT INTO plants (plant_id, plant_name) VALUES (1, 'Plant A'), (2, 'Plant B'); INSERT INTO emissions (plant_id, emission_level, emission_date) VALUES (1, 500, '2022-01-01'), (2, 450, '2022-01-01');","completion":"SELECT plants.plant_name FROM plants INNER JOIN emissions ON plants.plant_id = emissions.plant_id WHERE emissions.emission_level > (SELECT MAX(emission_limit) FROM allowed_emissions) AND emissions.emission_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);"}
{"prompt":"What is the percentage of the population with health insurance in the United States? with given SQL schema CREATE TABLE Health_Insurance (ID INT, Country VARCHAR(50), Percentage FLOAT); INSERT INTO Health_Insurance (ID, Country, Percentage) VALUES (1, 'United States', 91.2);","completion":"SELECT Percentage FROM Health_Insurance WHERE Country = 'United States';"}
{"prompt":"How many startups in the transportation sector were founded by people from underrepresented communities? with given SQL schema CREATE TABLE startups(id INT, name TEXT, industry TEXT, founder_community TEXT); INSERT INTO startups (id, name, industry, founder_community) VALUES (1, 'GreenRide', 'Transportation', 'Underrepresented');","completion":"SELECT COUNT(*) FROM startups WHERE industry = 'Transportation' AND founder_community = 'Underrepresented';"}
{"prompt":"List all smart contracts created by developers located in the European Union? with given SQL schema CREATE TABLE smart_contracts (id INT, name VARCHAR(255), developer_country VARCHAR(50)); INSERT INTO smart_contracts (id, name, developer_country) VALUES (1, 'Contract1', 'Germany'), (2, 'Contract2', 'France'), (3, 'Contract3', 'USA');","completion":"SELECT name FROM smart_contracts WHERE developer_country IN ('Germany', 'France', 'Italy', 'Spain', 'Poland');"}
{"prompt":"What are the top 5 digital assets with the highest trading volume in the European region? with given SQL schema CREATE TABLE digital_assets (asset_id INT, asset_name VARCHAR(50), region VARCHAR(50), trading_volume DECIMAL(18,2)); INSERT INTO digital_assets (asset_id, asset_name, region, trading_volume) VALUES (1, 'Bitcoin', 'Europe', 15000000);","completion":"SELECT d.asset_name, SUM(d.trading_volume) as total_volume  FROM digital_assets d WHERE d.region = 'Europe' GROUP BY d.asset_name ORDER BY total_volume DESC LIMIT 5;"}
{"prompt":"What is the total number of transactions for each digital asset in the 'decentralized_exchanges' table, and their corresponding trading volume? with given SQL schema CREATE TABLE decentralized_exchanges (exchange_name VARCHAR(255), digital_asset VARCHAR(255), transaction_count INT, trading_volume DECIMAL(10, 2));","completion":"SELECT d.digital_asset, SUM(d.transaction_count) as total_transactions, SUM(d.trading_volume) as total_volume FROM decentralized_exchanges d GROUP BY d.digital_asset;"}
{"prompt":"Insert new records for timber production in the \"Southeast\" region for the years 2018, 2019, and 2020, with the following volumes: 1200, 1500, and 1800. with given SQL schema CREATE TABLE timber_production (id INT PRIMARY KEY, region VARCHAR(50), year INT, volume INT);","completion":"INSERT INTO timber_production (region, year, volume) VALUES ('Southeast', 2018, 1200), ('Southeast', 2019, 1500), ('Southeast', 2020, 1800);"}
{"prompt":"List all the trees in the forest_management table that are older than 50 years? with given SQL schema CREATE TABLE forest_management (tree_id INT, species VARCHAR(50), age INT);","completion":"SELECT * FROM forest_management WHERE age > 50;"}
{"prompt":"Show consumer preference data for foundations, excluding products from the USA. with given SQL schema CREATE TABLE cosmetics (product_id INT, product_name VARCHAR(100), product_type VARCHAR(50), is_cruelty_free BOOLEAN, consumer_preference_score INT); INSERT INTO cosmetics (product_id, product_name, product_type, is_cruelty_free, consumer_preference_score) VALUES (1, 'Lipstick A', 'Lipstick', TRUE, 80), (2, 'Foundation B', 'Foundation', FALSE, 90), (3, 'Mascara C', 'Mascara', TRUE, 85), (4, 'Eyeshadow D', 'Eyeshadow', TRUE, 70), (5, 'Blush E', 'Blush', FALSE, 95); CREATE TABLE ingredient_sourcing (ingredient_id INT, ingredient_name VARCHAR(100), sourcing_country VARCHAR(50), is_organic BOOLEAN); INSERT INTO ingredient_sourcing (ingredient_id, ingredient_name, sourcing_country, is_organic) VALUES (1, 'Rosehip Oil', 'Chile', TRUE), (2, 'Shea Butter', 'Ghana', TRUE), (3, 'Jojoba Oil', 'India', TRUE), (4, 'Coconut Oil', 'Philippines', FALSE), (5, 'Aloe Vera', 'USA', TRUE);","completion":"SELECT * FROM cosmetics WHERE product_type = 'Foundation' AND product_id NOT IN (SELECT cosmetics.product_id FROM cosmetics INNER JOIN ingredient_sourcing ON cosmetics.product_id = ingredient_sourcing.ingredient_id WHERE ingredient_sourcing.sourcing_country = 'USA');"}
{"prompt":"Which ingredients are sourced from countries with high biodiversity? with given SQL schema CREATE TABLE ingredients (ingredient_id INT, name VARCHAR(255), sourcing_country VARCHAR(255)); INSERT INTO ingredients (ingredient_id, name, sourcing_country) VALUES (1, 'Argan Oil', 'Morocco'), (2, 'Shea Butter', 'Ghana'), (3, 'Jojoba Oil', 'Argentina'); CREATE TABLE country_biodiversity (country VARCHAR(255), biodiversity_index INT); INSERT INTO country_biodiversity (country, biodiversity_index) VALUES ('Morocco', 80), ('Ghana', 90), ('Argentina', 70);","completion":"SELECT i.name, i.sourcing_country FROM ingredients i JOIN country_biodiversity cb ON i.sourcing_country = cb.country WHERE cb.biodiversity_index > 70;"}
{"prompt":"What is the average threat intelligence metric score for the past month in the Pacific region? with given SQL schema CREATE TABLE threat_intelligence (threat_id INT, threat_score INT, threat_region VARCHAR(255), threat_date DATE); INSERT INTO threat_intelligence (threat_id, threat_score, threat_region, threat_date) VALUES (1, 7, 'Pacific', '2021-01-01'); INSERT INTO threat_intelligence (threat_id, threat_score, threat_region, threat_date) VALUES (2, 8, 'Atlantic', '2021-02-01');","completion":"SELECT AVG(threat_score) as avg_threat_score FROM threat_intelligence WHERE threat_region = 'Pacific' AND threat_date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"Which defense contractors have signed the most contracts in the last 12 months? with given SQL schema CREATE TABLE contract_timeline (contractor VARCHAR(255), contract_date DATE); INSERT INTO contract_timeline (contractor, contract_date) VALUES ('Contractor A', '2022-01-01'), ('Contractor B', '2022-02-15'), ('Contractor C', '2022-03-01'), ('Contractor A', '2022-04-01');","completion":"SELECT contractor, COUNT(*) FROM contract_timeline WHERE contract_date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY contractor;"}
{"prompt":"What is the total defense spending by countries in Oceania in 2018? with given SQL schema CREATE TABLE defense_spending (country VARCHAR(50), continent VARCHAR(50), year INT, amount FLOAT); INSERT INTO defense_spending (country, continent, year, amount) VALUES ('Australia', 'Oceania', 2018, 750.3), ('New Zealand', 'Oceania', 2018, 23.4), ('Papua New Guinea', 'Oceania', 2018, 6.7);","completion":"SELECT SUM(amount) FROM defense_spending WHERE continent = 'Oceania' AND year = 2018;"}
{"prompt":"What is the average daily transaction amount for each customer in the past quarter? with given SQL schema CREATE TABLE transactions (transaction_date DATE, customer_id INT, amount DECIMAL(10,2)); INSERT INTO transactions (transaction_date, customer_id, amount) VALUES ('2022-01-01', 1, 100), ('2022-01-05', 1, 200), ('2022-01-02', 2, 150), ('2022-01-03', 2, 50), ('2022-04-04', 3, 300), ('2022-04-05', 3, 250), ('2022-04-10', 1, 50), ('2022-04-15', 2, 350), ('2022-04-20', 4, 400);","completion":"SELECT customer_id, AVG(amount) AS avg_daily_amount FROM transactions WHERE transaction_date >= CURRENT_DATE - INTERVAL '3 months' GROUP BY customer_id, EXTRACT(DAY FROM transaction_date), EXTRACT(MONTH FROM transaction_date), EXTRACT(YEAR FROM transaction_date) ORDER BY customer_id;"}
{"prompt":"List the unique destinations for cargos in the cargo_handling table that are also present in the regulatory_compliance table, and display the count of such destinations. with given SQL schema CREATE TABLE cargo_handling(cargo_id INT, cargo_type VARCHAR(50), weight FLOAT, destination VARCHAR(50)); CREATE TABLE regulatory_compliance(cargo_id INT, cargo_type VARCHAR(50), destination VARCHAR(50));","completion":"SELECT destination, COUNT(DISTINCT destination) AS dest_count FROM cargo_handling CH JOIN regulatory_compliance RC ON CH.cargo_id = RC.cargo_id GROUP BY destination HAVING COUNT(DISTINCT destination) > 1;"}
{"prompt":"How many factories in the pharmaceutical industry are compliant with ethical manufacturing practices in South America? with given SQL schema CREATE TABLE factories (id INT, industry VARCHAR(50), region VARCHAR(50), ethical_manufacturing BOOLEAN);","completion":"SELECT COUNT(*) FROM factories WHERE industry = 'pharmaceutical' AND region = 'South America' AND ethical_manufacturing = TRUE;"}
{"prompt":"Show the total number of employees and their average salary for each factory in workforce development programs. with given SQL schema CREATE TABLE factories (factory_id INT, employees INT, total_salary INT); CREATE TABLE workforce_development (factory_id INT, program TEXT);","completion":"SELECT factories.factory_id, COUNT(factories.employees) AS total_employees, AVG(factories.total_salary) AS avg_salary FROM factories INNER JOIN workforce_development ON factories.factory_id = workforce_development.factory_id GROUP BY factories.factory_id;"}
{"prompt":"What is the total waste produced by the electronics industry in Africa? with given SQL schema CREATE TABLE waste (factory_id INT, industry VARCHAR(50), region VARCHAR(50), waste_generated INT);","completion":"SELECT SUM(waste_generated) FROM waste WHERE industry = 'electronics' AND region = 'Africa';"}
{"prompt":"Delete any excavation sites with less than 10 artifacts. with given SQL schema CREATE TABLE ExcavationSite (SiteID INT, SiteName TEXT, Country TEXT, NumArtifacts INT); INSERT INTO ExcavationSite (SiteID, SiteName, Country, NumArtifacts) VALUES (1, 'Pompeii', 'Italy', 52), (2, 'Tutankhamun', 'Egypt', 35), (3, 'Machu Picchu', 'Peru', 42), (4, 'Tikal', 'Guatemala', 80), (5, 'Angkor Wat', 'Cambodia', 5);","completion":"DELETE FROM ExcavationSite WHERE NumArtifacts < 10;"}
{"prompt":"Update the \"hospitals\" table to correct the address of \"Rural Hospital A\" from '123 Main St' to '456 Elm St' where the hospital ID is '123' with given SQL schema CREATE TABLE hospitals (id INT PRIMARY KEY, name VARCHAR(50), address VARCHAR(100)); INSERT INTO hospitals (id, name, address) VALUES ('123', 'Rural Hospital A', '123 Main St');","completion":"UPDATE hospitals SET address = '456 Elm St' WHERE id = '123';"}
{"prompt":"What is the total healthcare expenditure by rural county in 2022? with given SQL schema CREATE TABLE rural_counties (county_id INT, county_name VARCHAR(50), state VARCHAR(2), healthcare_expenditure DECIMAL(10,2)); INSERT INTO rural_counties (county_id, county_name, state, healthcare_expenditure) VALUES (1, 'Rural County A', 'TX', 100000), (2, 'Rural County B', 'TX', 150000), (3, 'Rural County C', 'CA', 120000), (4, 'Rural County D', 'CA', 180000);","completion":"SELECT county_name, SUM(healthcare_expenditure) as total_expenditure FROM rural_counties WHERE state IN ('TX', 'CA') AND YEAR(visit_date) = 2022 GROUP BY county_name;"}
{"prompt":"List all investments in the 'renewable_energy' sector and their risk scores, ordered by risk score. with given SQL schema CREATE TABLE investments (id INT, name TEXT, sector TEXT, risk_score FLOAT); INSERT INTO investments (id, name, sector, risk_score) VALUES (1, 'SolarFarm', 'renewable_energy', 2.1), (2, 'WindTurbine', 'renewable_energy', 1.9), (3, 'GeoThermal', 'renewable_energy', 2.5);","completion":"SELECT * FROM investments WHERE sector = 'renewable_energy' ORDER BY risk_score;"}
{"prompt":"What are the details of the military technologies that were developed in a specific year, say 2020, from the 'military_tech' table? with given SQL schema CREATE TABLE military_tech (id INT, tech_name VARCHAR(255), country VARCHAR(255), tech_date DATE);","completion":"SELECT * FROM military_tech WHERE YEAR(tech_date) = 2020;"}
{"prompt":"List the top 5 albums with the highest number of streams in the \"jazz\" genre, including the album name and the total number of streams. with given SQL schema CREATE TABLE AlbumStreaming(id INT, album VARCHAR(30), genre VARCHAR(10), streams INT);","completion":"SELECT album, SUM(streams) AS total_streams FROM AlbumStreaming WHERE genre = 'jazz' GROUP BY album ORDER BY total_streams DESC LIMIT 5;"}
{"prompt":"Find the top 5 donors by total donation amount in the last 30 days? with given SQL schema CREATE TABLE Donations (DonationID int, DonorID int, Program varchar(50), DonationAmount numeric(10,2), DonationDate date); INSERT INTO Donations (DonationID, DonorID, Program, DonationAmount, DonationDate) VALUES (1, 1, 'ProgramA', 500.00, '2022-01-01'), (2, 2, 'ProgramB', 350.00, '2022-02-01'), (3, 1, 'ProgramA', 750.00, '2022-03-01');","completion":"SELECT DonorID, SUM(DonationAmount) AS TotalDonated FROM Donations WHERE DonationDate >= CURRENT_DATE - INTERVAL '30 days' GROUP BY DonorID ORDER BY TotalDonated DESC LIMIT 5;"}
{"prompt":"What is the maximum donation amount received by each program? with given SQL schema CREATE TABLE programs (id INT, name VARCHAR(255)); INSERT INTO programs (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE donations (id INT, program_id INT, amount DECIMAL(10, 2)); INSERT INTO donations (id, program_id, amount) VALUES (1, 1, 500), (2, 1, 300), (3, 2, 800), (4, 3, 400);","completion":"SELECT program_id, MAX(amount) OVER (PARTITION BY program_id) AS max_donation_amount FROM donations;"}
{"prompt":"What is the total donation amount made in the 'Education' program? with given SQL schema CREATE TABLE Programs (ProgramID int, Name varchar(50), Budget money); CREATE TABLE Donations (DonationID int, DonorID int, Amount money, DonationDate date, ProgramID int); INSERT INTO Programs (ProgramID, Name, Budget) VALUES (1, 'Education', 10000), (2, 'Healthcare', 15000); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate, ProgramID) VALUES (5, 1, 1000, '2022-02-14', 1), (6, 1, 1500, '2022-03-01', 1), (7, 2, 2000, '2022-03-15', 2), (8, 2, 4000, '2022-04-20', 2);","completion":"SELECT SUM(D.Amount) as TotalDonation FROM Donations D WHERE D.ProgramID = (SELECT P.ProgramID FROM Programs P WHERE P.Name = 'Education');"}
{"prompt":"Create a view named 'TopTeachers' that selects 'Name' and 'Subject' from 'Teachers' table where 'Subject' is 'Science' with given SQL schema CREATE TABLE Teachers (TeacherID INT, Name VARCHAR(100), Subject VARCHAR(50));","completion":"CREATE VIEW TopTeachers AS SELECT Name, Subject FROM Teachers WHERE Subject = 'Science';"}
{"prompt":"Delete all employee records with a salary greater than 80000. with given SQL schema CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, Department, Salary) VALUES (1, 'IT', 70000.00), (2, 'Marketing', 55000.00), (3, 'Marketing', 58000.00), (4, 'HR', 60000.00), (5, 'HR', 62000.00), (6, 'Diversity & Inclusion', 75000.00);","completion":"DELETE FROM Employees WHERE Salary > 80000;"}
{"prompt":"List all the unique countries where we have active oil rigs with given SQL schema CREATE TABLE oil_rigs (rig_id INT, country VARCHAR(50), status VARCHAR(50)); INSERT INTO oil_rigs VALUES (1, 'USA', 'active'), (2, 'Canada', 'inactive'), (3, 'Mexico', 'active'), (4, 'Brazil', 'active'), (5, 'Norway', 'active');","completion":"SELECT DISTINCT country FROM oil_rigs WHERE status = 'active';"}
{"prompt":"List all soccer stadiums with a capacity greater than 70,000 and their respective capacities. with given SQL schema CREATE TABLE stadiums (stadium_name VARCHAR(100), capacity INT); INSERT INTO stadiums VALUES ('Camp Nou', 99354), ('Estadio Azteca', 87000), ('FNB Stadium', 94736), ('Wembley Stadium', 90000), ('Santiago Bernab\u00e9u', 81044);","completion":"SELECT stadium_name, capacity FROM stadiums WHERE capacity > 70000;"}
{"prompt":"Who had the most assists for the Heat in the 2017-2018 season? with given SQL schema CREATE TABLE teams (team_name VARCHAR(255), season_start_year INT, season_end_year INT); INSERT INTO teams (team_name, season_start_year, season_end_year) VALUES ('Heat', 2017, 2018); CREATE TABLE players (player_name VARCHAR(255), team_name VARCHAR(255), assists INT);","completion":"SELECT player_name, MAX(assists) FROM players WHERE team_name = 'Heat' AND season_start_year = 2017 AND season_end_year = 2018 GROUP BY player_name;"}
{"prompt":"What are the names and countries of social enterprises that have been granted funding for technology projects addressing the digital divide in the last 3 years? with given SQL schema CREATE TABLE social_enterprises (id INT, name VARCHAR(255), country VARCHAR(255), focus VARCHAR(255)); CREATE TABLE grants (id INT, social_enterprises_id INT, grant_amount FLOAT, grant_date DATE);","completion":"SELECT social_enterprises.name, social_enterprises.country FROM social_enterprises INNER JOIN grants ON social_enterprises.id = grants.social_enterprises_id WHERE grants.grant_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 YEAR) AND social_enterprises.focus = 'Digital Divide';"}
{"prompt":"Which cities have hosted conferences on ethical AI? with given SQL schema CREATE TABLE conferences (id INT PRIMARY KEY, name VARCHAR(255), city VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO conferences (id, name, city, start_date, end_date) VALUES (1, 'Ethical AI Summit', 'San Francisco', '2022-06-01', '2022-06-03'); INSERT INTO conferences (id, name, city, start_date, end_date) VALUES (2, 'Climate Change Tech Conference', 'Vancouver', '2022-07-01', '2022-07-02'); INSERT INTO conferences (id, name, city, start_date, end_date) VALUES (3, 'Accessibility in Tech Conference', 'Toronto', '2022-08-01', '2022-08-03'); INSERT INTO conferences (id, name, city, start_date, end_date) VALUES (4, 'Ethical AI Conference', 'New York', '2022-09-01', '2022-09-03'); INSERT INTO conferences (id, name, city, start_date, end_date) VALUES (5, 'AI for Social Good Summit', 'London', '2022-10-01', '2022-10-03'); CREATE TABLE ethical_ai_topics (id INT PRIMARY KEY, conference_id INT, title VARCHAR(255)); INSERT INTO ethical_ai_topics (id, conference_id, title) VALUES (1, 1, 'Ethical AI in Healthcare'); INSERT INTO ethical_ai_topics (id, conference_id, title) VALUES (2, 4, 'Ethical AI for Climate Change'); INSERT INTO ethical_ai_topics (id, conference_id, title) VALUES (3, 5, 'Ethical AI in Education');","completion":"SELECT DISTINCT city FROM conferences JOIN ethical_ai_topics ON conferences.id = ethical_ai_topics.conference_id;"}
{"prompt":"How many orders were placed by new and returning customers in each month of the year 2021?' with given SQL schema CREATE TABLE customer (id INT, first_order_date DATE, last_order_date DATE);","completion":"INSERT INTO customer (id, first_order_date, last_order_date) SELECT customer_id, MIN(order_date) AS first_order_date, MAX(order_date) AS last_order_date FROM orders GROUP BY customer_id; SELECT YEAR(order_date) AS year, MONTH(order_date) AS month, CASE WHEN DATEDIFF(last_order_date, first_order_date) > 30 THEN 'returning' ELSE 'new' END AS customer_type, COUNT(DISTINCT id) AS num_orders FROM orders JOIN customer ON orders.customer_id = customer.id WHERE YEAR(order_date) = 2021 GROUP BY year, month, customer_type;"}
{"prompt":"What is the percentage of factories in each continent that use renewable energy? with given SQL schema CREATE TABLE factories (factory_id INT, factory_name VARCHAR(255), continent VARCHAR(255), uses_renewable_energy BOOLEAN);","completion":"SELECT continent, 100.0 * AVG(CASE WHEN uses_renewable_energy THEN 1.0 ELSE 0.0 END) AS percentage FROM factories GROUP BY continent;"}
{"prompt":"Determine the top 3 most discussed topics related to environmental conservation in the social_media schema. with given SQL schema CREATE TABLE categories (id INT, name VARCHAR(50)); INSERT INTO categories (id, name) VALUES (1, 'climate change'), (2, 'renewable energy'), (3, 'carbon footprint'), (4, 'sustainable development'), (5, 'environmental conservation'), (6, 'green technology'); CREATE TABLE user_posts (user_id INT, post_id INT, category_id INT);","completion":"SELECT c.name AS topic, COUNT(up.post_id) AS posts_about_topic FROM user_posts up JOIN categories c ON up.category_id = c.id WHERE c.name LIKE '%environmental conservation%' GROUP BY up.category_id ORDER BY posts_about_topic DESC LIMIT 3;"}
{"prompt":"Calculate the average Shariah-compliant loan amount in the Middle East and Africa. with given SQL schema CREATE TABLE shariah_compliant_loans (id INT, region VARCHAR(20), amount DECIMAL(10,2)); INSERT INTO shariah_compliant_loans (id, region, amount) VALUES (1, 'Middle East', 8000.00), (2, 'Africa', 9000.00), (3, 'Europe', 7000.00);","completion":"SELECT AVG(amount) FROM shariah_compliant_loans WHERE region IN ('Middle East', 'Africa');"}
{"prompt":"Count the number of Shariah-compliant financial institutions in the Middle East and North Africa. with given SQL schema CREATE TABLE if not exists financial_institutions (id INT, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255), is_shariah_compliant BOOLEAN); INSERT INTO financial_institutions (id, name, type, country, is_shariah_compliant) VALUES (1, 'Institution A', 'Bank', 'UAE', true), (2, 'Institution B', 'Insurance', 'Egypt', false);","completion":"SELECT COUNT(*) FROM financial_institutions WHERE is_shariah_compliant = true AND (country = 'Middle East' OR country = 'North Africa');"}
{"prompt":"List all programs with a budget over $50,000 and their corresponding program managers. with given SQL schema CREATE TABLE programs (id INT, name TEXT, budget FLOAT, manager TEXT); INSERT INTO programs (id, name, budget, manager) VALUES (1, 'Education', 60000.00, 'Alice Johnson'), (2, 'Health', 40000.00, 'Bob Brown');","completion":"SELECT * FROM programs WHERE budget > 50000;"}
{"prompt":"What is the total donation amount by city for the last 6 months? with given SQL schema CREATE TABLE Donations (DonationID INT, DonationAmount NUMERIC, City TEXT, DonationDate DATE);","completion":"SELECT City, SUM(DonationAmount) FROM Donations WHERE DonationDate >= NOW() - INTERVAL '6 months' GROUP BY City;"}
{"prompt":"What is the maximum quantity of a single organic product delivered in the DELIVERY_RECORDS table? with given SQL schema CREATE TABLE DELIVERY_RECORDS (id INT, supplier_id INT, product_id INT, is_organic BOOLEAN, quantity INT); INSERT INTO DELIVERY_RECORDS (id, supplier_id, product_id, is_organic, quantity) VALUES (1, 1, 1, true, 50), (2, 2, 2, true, 30);","completion":"SELECT MAX(quantity) FROM DELIVERY_RECORDS WHERE is_organic = true;"}
{"prompt":"What is the total amount of funding received by each government department in 2021? with given SQL schema CREATE TABLE funding (id INT, department VARCHAR(50), year INT, amount FLOAT); INSERT INTO funding (id, department, year, amount) VALUES (1, 'Department A', 2021, 1000000), (2, 'Department B', 2021, 2000000), (3, 'Department A', 2022, 1500000);","completion":"SELECT department, SUM(amount) as total_funding FROM funding WHERE year = 2021 GROUP BY department;"}
{"prompt":"Update mental health diagnosis records with cultural competency training completion date. with given SQL schema CREATE TABLE patient_demographics (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), race VARCHAR(30), ethnicity VARCHAR(30)); INSERT INTO patient_demographics (id, name, age, gender, race, ethnicity) VALUES (1, 'John Doe', 45, 'Male', 'Caucasian', 'Non-Hispanic'); CREATE TABLE mental_health_diagnosis (patient_id INT, diagnosis_date DATE, diagnosis VARCHAR(50), prescriber_id INT, training_completion_date DATE); INSERT INTO mental_health_diagnosis (patient_id, diagnosis_date, diagnosis, prescriber_id, training_completion_date) VALUES (1, '2022-01-01', 'Depression', 101, NULL); CREATE TABLE cultural_competency_training (id INT, patient_id INT, training_date DATE); INSERT INTO cultural_competency_training (id, patient_id, training_date) VALUES (1001, 1, '2022-03-15');","completion":"UPDATE mental_health_diagnosis M SET training_completion_date = (SELECT training_date FROM cultural_competency_training C WHERE C.patient_id = M.patient_id LIMIT 1);"}
{"prompt":"Find the average revenue per sustainable hotel. with given SQL schema CREATE TABLE revenues(hotel_id INT, is_sustainable BOOLEAN, revenue FLOAT); INSERT INTO revenues(hotel_id, is_sustainable, revenue) VALUES (1, true, 12000.0), (2, false, 10000.0), (3, true, 15000.0);","completion":"SELECT AVG(revenue) FROM revenues WHERE is_sustainable = true;"}
{"prompt":"What is the total CO2 emissions in Canada per year? with given SQL schema CREATE TABLE CO2Emissions (country VARCHAR(255), year INT, emissions FLOAT); INSERT INTO CO2Emissions (country, year, emissions) VALUES ('Canada', 2015, 550.0), ('Canada', 2016, 570.0), ('Canada', 2017, 590.0), ('Canada', 2018, 610.0), ('Canada', 2019, 630.0);","completion":"SELECT year, SUM(emissions) FROM CO2Emissions WHERE country = 'Canada' GROUP BY year;"}
{"prompt":"What are the names and languages of all heritage sites? with given SQL schema CREATE TABLE heritage_sites (id INT, name VARCHAR(50), country VARCHAR(50), language VARCHAR(50)); INSERT INTO heritage_sites (id, name, country, language) VALUES (1, 'Mesa Verde', 'USA', 'Navajo'); INSERT INTO heritage_sites (id, name, country, language) VALUES (2, 'Galapagos Islands', 'Ecuador', 'Spanish');","completion":"SELECT name, language FROM heritage_sites;"}
{"prompt":"Add a record for a depression patient with given SQL schema CREATE TABLE patients (id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(50)); CREATE TABLE patient_demographics (id INT PRIMARY KEY, patient_id INT, race VARCHAR(50), ethnicity VARCHAR(50), zip_code VARCHAR(10));","completion":"INSERT INTO patients (id, name, age, gender) VALUES (1, 'Jane Doe', 35, 'Female'); INSERT INTO patient_demographics (id, patient_id, race, ethnicity, zip_code) VALUES (1, 1, 'White', 'Not Hispanic or Latino', '12345');"}
{"prompt":"How many unique patients were treated in Spain in 2020? with given SQL schema CREATE SCHEMA mental_health; USE mental_health; CREATE TABLE patients (patient_id INT, diagnosis VARCHAR(50), age INT, country VARCHAR(50)); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type VARCHAR(50), treatment_date DATE, country VARCHAR(50)); INSERT INTO treatments VALUES (5, 6, 'medication', '2020-02-02', 'Spain');","completion":"SELECT COUNT(DISTINCT patient_id) FROM treatments JOIN patients ON treatments.patient_id = patients.patient_id WHERE patients.country = 'Spain' AND treatment_date LIKE '2020%';"}
{"prompt":"List all dams located in the province of Quebec that have exceeded their maximum design capacity at any point in time. with given SQL schema CREATE TABLE dam (id INT, name TEXT, province TEXT, design_capacity FLOAT, max_exceeded INT); INSERT INTO dam (id, name, province, design_capacity, max_exceeded) VALUES (1, 'Dam A', 'Quebec', 5000000, 1); INSERT INTO dam (id, name, province, design_capacity, max_exceeded) VALUES (2, 'Dam B', 'Quebec', 6000000, 0);","completion":"SELECT name FROM dam WHERE province = 'Quebec' AND max_exceeded = 1;"}
{"prompt":"How many tourist attractions are there in Japan that have a wheelchair accessibility rating above 4? with given SQL schema CREATE TABLE attractions (id INT, name TEXT, country TEXT, wheelchair_accessibility FLOAT); INSERT INTO attractions (id, name, country, wheelchair_accessibility) VALUES (1, 'Mt. Fuji', 'Japan', 3.5), (2, 'Tokyo Disneyland', 'Japan', 4.7);","completion":"SELECT COUNT(*) FROM attractions WHERE country = 'Japan' AND wheelchair_accessibility > 4;"}
{"prompt":"How many alternative dispute resolution (ADR) programs have been implemented in each justice district from 2010 to 2020? with given SQL schema CREATE TABLE ADRPrograms (ID INT, ProgramID VARCHAR(20), District VARCHAR(20), YearEstablished INT, ProgramName VARCHAR(50)); INSERT INTO ADRPrograms (ID, ProgramID, District, YearEstablished, ProgramName) VALUES (1, 'ADR001', 'East River', 2012, 'ADR for Juveniles'), (2, 'ADR002', 'North Valley', 2016, 'Community Mediation'), (3, 'ADR003', 'South Peak', 2011, 'Victim-Offender Dialogue');","completion":"SELECT District, COUNT(*) FROM ADRPrograms WHERE YearEstablished >= 2010 AND YearEstablished <= 2020 GROUP BY District;"}
{"prompt":"Display the maximum legal speed for ships in the Bering Sea. with given SQL schema CREATE TABLE maritime_laws (id INT, law VARCHAR(50), region VARCHAR(50), speed_limit INT); INSERT INTO maritime_laws (id, law, region, speed_limit) VALUES (1, 'Shipping Speed Regulations', 'Bering Sea', 25);","completion":"SELECT speed_limit FROM maritime_laws WHERE region = 'Bering Sea';"}
{"prompt":"Find the maximum depth of any ocean floor mapping project with given SQL schema CREATE TABLE ocean_floor_mapping (project_name VARCHAR(255), max_depth DECIMAL(5,2)); INSERT INTO ocean_floor_mapping (project_name, max_depth) VALUES ('Project A', 8000.0), ('Project B', 7000.0), ('Project C', 9000.0);","completion":"SELECT MAX(max_depth) FROM ocean_floor_mapping;"}
{"prompt":"How many countries are non-compliant with maritime law in the Caribbean region? with given SQL schema CREATE TABLE maritime_law_compliance(country VARCHAR(255), region VARCHAR(255), compliant BOOLEAN);INSERT INTO maritime_law_compliance(country, region, compliant) VALUES ('Cuba', 'Caribbean', FALSE), ('Jamaica', 'Caribbean', FALSE), ('Haiti', 'Caribbean', TRUE);","completion":"SELECT COUNT(*) FROM maritime_law_compliance WHERE region = 'Caribbean' AND compliant = FALSE;"}
{"prompt":"How many pollution incidents have been recorded in the Atlantic Ocean since 2010? with given SQL schema CREATE TABLE Pollution_Incidents (incident_id INTEGER, location TEXT, year INTEGER); INSERT INTO Pollution_Incidents (incident_id, location, year) VALUES (1, 'Atlantic Ocean', 2012), (2, 'Atlantic Ocean', 2015);","completion":"SELECT COUNT(*) FROM Pollution_Incidents WHERE location = 'Atlantic Ocean' AND year >= 2010;"}
{"prompt":"How many words are spoken by female and male characters in a movie? with given SQL schema CREATE TABLE lines (id INT, movie_id INT, character_id INT, character_gender VARCHAR(10), lines INT);","completion":"SELECT character_gender, SUM(lines) as total_lines FROM lines WHERE movie_id = 1 GROUP BY character_gender;"}
{"prompt":"Which defense projects were not completed in 2021? with given SQL schema CREATE TABLE DefenseProjects (id INT PRIMARY KEY, project_name VARCHAR(50), start_date DATE, end_date DATE);","completion":"SELECT project_name FROM DefenseProjects WHERE end_date > '2021-12-31';"}
{"prompt":"Find the number of mines in each location with extraction rates above the overall average. with given SQL schema CREATE TABLE mining_sites (id INT, name VARCHAR(50), location VARCHAR(50), extraction_rate DECIMAL(5,2)); INSERT INTO mining_sites (id, name, location, extraction_rate) VALUES (1, 'Gold Mine', 'Colorado', 12.5), (2, 'Silver Mine', 'Nevada', 15.2), (3, 'Copper Mine', 'Arizona', 18.9), (4, 'Iron Mine', 'Minnesota', 21.1);","completion":"SELECT location, COUNT(*) as mine_count FROM mining_sites WHERE extraction_rate > (SELECT AVG(extraction_rate) FROM mining_sites) GROUP BY location;"}
{"prompt":"Update the total number of employees in the mining industry who identify as Native Hawaiian or Pacific Islander to 350 in California. with given SQL schema CREATE TABLE MiningEmployees (State VARCHAR(50), EmployeeEthnicity VARCHAR(50), EmployeeCount INT); INSERT INTO MiningEmployees(State, EmployeeEthnicity, EmployeeCount) VALUES ('Texas', 'Native American or Alaska Native', 200), ('Texas', 'Hispanic', 500), ('Texas', 'Black', 300), ('California', 'Native American or Alaska Native', 100), ('California', 'Hispanic', 700), ('California', 'Black', 600);","completion":"UPDATE MiningEmployees SET EmployeeCount = 350 WHERE State = 'California' AND EmployeeEthnicity = 'Native Hawaiian or Pacific Islander';"}
{"prompt":"What is the maximum and minimum number of employees in mining operations in each province of Canada? with given SQL schema CREATE TABLE mining_operations (id INT, province VARCHAR(255), num_employees INT); INSERT INTO mining_operations (id, province, num_employees) VALUES (1, 'Ontario', 500), (2, 'Ontario', 300), (3, 'Quebec', 400), (4, 'Quebec', 600), (5, 'British Columbia', 700), (6, 'British Columbia', 800);","completion":"SELECT province, MAX(num_employees) AS max_employees, MIN(num_employees) AS min_employees FROM mining_operations GROUP BY province;"}
{"prompt":"List the total number of subscribers for each technology type in the \"subscribers\" and \"infrastructure\" tables. with given SQL schema CREATE TABLE subscribers (id INT PRIMARY KEY, name VARCHAR(50), technology VARCHAR(20)); CREATE TABLE infrastructure (tech_type VARCHAR(20) PRIMARY KEY, num_towers INT); INSERT INTO subscribers (id, name, technology) VALUES (1, 'Alice', 'Mobile'), (2, 'Bob', 'Broadband'), (3, 'Charlie', 'Mobile'); INSERT INTO infrastructure (tech_type, num_towers) VALUES ('Mobile', 20), ('Broadband', 15);","completion":"SELECT i.tech_type, COUNT(s.id) AS num_subscribers FROM subscribers s RIGHT JOIN infrastructure i ON s.technology = i.tech_type GROUP BY i.tech_type;"}
{"prompt":"What is the average data usage for mobile subscribers in each region? with given SQL schema CREATE TABLE mobile_subscribers (subscriber_id INT, region VARCHAR(50), data_usage INT); INSERT INTO mobile_subscribers (subscriber_id, region, data_usage) VALUES (1, 'North', 100), (2, 'South', 150), (3, 'East', 200), (4, 'West', 250), (5, 'North', 50), (6, 'South', 75), (7, 'East', 125), (8, 'West', 175);","completion":"SELECT region, AVG(data_usage) AS avg_data_usage FROM mobile_subscribers GROUP BY region;"}
{"prompt":"What is the average monthly data usage for each mobile network operator? with given SQL schema CREATE TABLE mobile_operators (operator_id INT, operator_name VARCHAR(50)); CREATE TABLE mobile_plans (plan_id INT, plan_name VARCHAR(50), operator_id INT, data_limit INT); CREATE TABLE usage (usage_id INT, subscriber_id INT, plan_id INT, usage_amount INT, usage_date DATE);","completion":"SELECT o.operator_name, AVG(u.usage_amount) AS avg_monthly_data_usage FROM mobile_operators o INNER JOIN mobile_plans p ON o.operator_id = p.operator_id INNER JOIN usage u ON p.plan_id = u.plan_id WHERE u.usage_date >= DATEADD(month, -1, GETDATE()) GROUP BY o.operator_name;"}
{"prompt":"What is the monthly spending for a specific broadband customer? with given SQL schema CREATE TABLE broadband_customers (customer_id INT, monthly_spending FLOAT); INSERT INTO broadband_customers (customer_id, monthly_spending) VALUES (1, 60), (2, 70), (3, 80); CREATE TABLE customer_data (customer_id INT, customer_name VARCHAR(50)); INSERT INTO customer_data (customer_id, customer_name) VALUES (1, 'Rajesh Patel'), (2, 'Sophia Garcia'), (3, 'Ali Ahmed');","completion":"SELECT monthly_spending FROM broadband_customers WHERE customer_id = 2;"}
{"prompt":"What is the total number of streams for Afrobeats music in Nigeria in Q1 2022? with given SQL schema CREATE TABLE UserStreams (StreamID INT, UserID INT, SongID INT, StreamDate DATE); CREATE TABLE Songs (SongID INT, Genre VARCHAR(50), Title VARCHAR(100)); CREATE TABLE UserLocation (UserID INT, Country VARCHAR(100), State VARCHAR(100));","completion":"SELECT SUM(US.StreamCount) FROM UserStreams US INNER JOIN Songs S ON US.SongID = S.SongID INNER JOIN UserLocation UL ON US.UserID = UL.UserID WHERE S.Genre = 'Afrobeats' AND UL.Country = 'Nigeria' AND QUARTER(US.StreamDate) = 1 AND YEAR(US.StreamDate) = 2022;"}
{"prompt":"Insert new records for 3 additional volunteers for the 'Doctors Without Borders' organization. with given SQL schema CREATE TABLE organizations (id INT, name TEXT); INSERT INTO organizations (id, name) VALUES (1, 'Doctors Without Borders'); CREATE TABLE volunteers (id INT, organization_id INT, name TEXT);","completion":"INSERT INTO volunteers (id, organization_id, name) VALUES (5, 1, 'Mohammed Ali'), (6, 1, 'Sara Ahmed'), (7, 1, 'Pablo Rodriguez');"}
{"prompt":"Which ocean has the maximum number of underwater volcanoes? with given SQL schema CREATE TABLE oceans (name TEXT, underwater_volcanoes INT); INSERT INTO oceans (name, underwater_volcanoes) VALUES ('Atlantic', 123), ('Pacific', 456), ('Indian', 789);","completion":"SELECT name FROM oceans WHERE underwater_volcanoes = (SELECT MAX(underwater_volcanoes) FROM oceans);"}
{"prompt":"What is the total number of hours played in the \"Cryptic Explorers\" game by players who joined in 2022? with given SQL schema CREATE TABLE PlayerJoinDates (PlayerID INT, GameName VARCHAR(20), Playtime FLOAT, JoinDate DATE); INSERT INTO PlayerJoinDates (PlayerID, GameName, Playtime, JoinDate) VALUES (7001, 'Cryptic Explorers', 150.6, '2022-01-01'), (7002, 'Cryptic Explorers', 210.8, '2021-12-31'), (7003, 'Cryptic Explorers', 180.4, '2022-02-15');","completion":"SELECT SUM(Playtime) FROM PlayerJoinDates WHERE GameName = 'Cryptic Explorers' AND YEAR(JoinDate) = 2022;"}
{"prompt":"Show the average soil moisture level for each field in the past week with given SQL schema CREATE TABLE field (id INT, name VARCHAR(255), farm_id INT);CREATE TABLE soil_moisture (id INT, field_id INT, measurement DATE, level INT);","completion":"SELECT field_id, AVG(level) FROM soil_moisture WHERE measurement >= DATEADD(day, -7, GETDATE()) GROUP BY field_id;"}
{"prompt":"What is the minimum temperature recorded in 'Greenhouse7' for the month of September? with given SQL schema CREATE TABLE Greenhouse7 (date DATE, temperature FLOAT);","completion":"SELECT MIN(temperature) FROM Greenhouse7 WHERE EXTRACT(MONTH FROM date) = 9;"}
{"prompt":"Find the number of Lutetium transactions with prices over 70 dollars in European countries. with given SQL schema CREATE TABLE lutetium_transactions (country VARCHAR(20), element VARCHAR(20), price DECIMAL(5,2), transaction_date DATE); INSERT INTO lutetium_transactions (country, element, price, transaction_date) VALUES ('France', 'Lutetium', 80, '2020-01-01'), ('Germany', 'Lutetium', 65, '2020-02-01'), ('France', 'Lutetium', 75, '2020-03-01');","completion":"SELECT COUNT(*) FROM lutetium_transactions WHERE country IN ('France', 'Germany') AND element = 'Lutetium' AND price > 70;"}
{"prompt":"What is the average carbon footprint of products manufactured in each region? with given SQL schema CREATE TABLE regions (id INT, name TEXT); CREATE TABLE manufacturers (id INT, name TEXT, region_id INT, carbon_footprint INT); INSERT INTO regions (id, name) VALUES (1, 'Region 1'), (2, 'Region 2'), (3, 'Region 3'); INSERT INTO manufacturers (id, name, region_id, carbon_footprint) VALUES (1, 'Manufacturer 1', 1, 50), (2, 'Manufacturer 2', 2, 70), (3, 'Manufacturer 3', 3, 30), (4, 'Manufacturer 4', 1, 60), (5, 'Manufacturer 5', 2, 40);","completion":"SELECT regions.name, AVG(manufacturers.carbon_footprint) FROM regions INNER JOIN manufacturers ON regions.id = manufacturers.region_id GROUP BY regions.name;"}
{"prompt":"What is the minimum price of items in the 'Grocery' category sold by stores in 'New York'? with given SQL schema CREATE TABLE Stores (StoreID int, StoreName varchar(50), Address varchar(100), Country varchar(50), State varchar(50)); INSERT INTO Stores VALUES (1, 'Store1', '123 Main St, New York', 'USA', 'New York'); INSERT INTO Stores VALUES (2, 'Store2', '456 Oak St, California', 'USA', 'California'); INSERT INTO Stores VALUES (3, 'Store3', '789 Elm St, Texas', 'USA', 'Texas'); CREATE TABLE Products (ProductID int, ProductName varchar(50), StoreID int, Category varchar(50), Price int); INSERT INTO Products VALUES (1, 'Product1', 1, 'Grocery', 50); INSERT INTO Products VALUES (2, 'Product2', 1, 'Fashion', 100); INSERT INTO Products VALUES (3, 'Product3', 2, 'Grocery', 70); INSERT INTO Products VALUES (4, 'Product4', 2, 'Electronics', 150); INSERT INTO Products VALUES (5, 'Product5', 3, 'Grocery', 40); INSERT INTO Products VALUES (6, 'Product6', 3, 'Fashion', 80);","completion":"SELECT MIN(Products.Price) FROM Products INNER JOIN Stores ON Products.StoreID = Stores.StoreID WHERE Products.Category = 'Grocery' AND Stores.State = 'New York';"}
{"prompt":"What is the total quantity of products sold by small businesses? with given SQL schema CREATE TABLE sales (sale_id INT, business_size VARCHAR(20), quantity INT); INSERT INTO sales (sale_id, business_size, quantity) VALUES (1, 'small', 100), (2, 'medium', 200), (3, 'small', 150), (4, 'large', 300);","completion":"SELECT SUM(quantity) FROM sales WHERE business_size = 'small';"}
{"prompt":"How many countries have space agencies? with given SQL schema CREATE TABLE space_agencies (id INT, country TEXT); INSERT INTO space_agencies (id, country) VALUES (1, 'USA'), (2, 'China'), (3, 'Russia'), (4, 'India'), (5, 'Japan'), (6, 'Germany'), (7, 'Italy'), (8, 'France'), (9, 'Canada'), (10, 'UK'), (11, 'Brazil'), (12, 'South Korea'), (13, 'Australia'), (14, 'Spain'), (15, 'Israel');","completion":"SELECT COUNT(*) FROM space_agencies;"}
{"prompt":"What are the names and launch dates of all space missions launched by Russia? with given SQL schema CREATE TABLE missions (id INT, mission_name VARCHAR(50), launch_date DATE, country VARCHAR(50)); INSERT INTO missions (id, mission_name, launch_date, country) VALUES (2, 'Sputnik 1', '1957-10-04', 'Russia');","completion":"SELECT mission_name, launch_date FROM missions WHERE country = 'Russia';"}
{"prompt":"What is the total number of space missions conducted by each country in the SpaceMissions table? with given SQL schema CREATE TABLE SpaceMissions (id INT, mission VARCHAR(50), year INT, country VARCHAR(50)); INSERT INTO SpaceMissions (id, mission, year, country) VALUES (1, 'Apollo 11', 1969, 'USA'), (2, 'Apollo 13', 1970, 'USA'), (3, 'STS-1', 1981, 'USA'), (4, 'Shenzhou 5', 2003, 'China');","completion":"SELECT country, COUNT(*) AS num_missions FROM SpaceMissions GROUP BY country;"}
{"prompt":"How many space missions have been carried out by NASA? with given SQL schema CREATE TABLE Missions (agency VARCHAR(20), name VARCHAR(30)); INSERT INTO Missions (agency, name) VALUES ('NASA', 'Apollo 11'), ('NASA', 'Apollo 13');","completion":"SELECT COUNT(*) FROM Missions WHERE agency = 'NASA';"}
{"prompt":"Insert new fan records from the 'new_fans' staging table into the 'fans' table with given SQL schema CREATE TABLE new_fans (fan_id INT, age INT, gender VARCHAR(10), country VARCHAR(50)); CREATE TABLE fans (fan_id INT PRIMARY KEY, age INT, gender VARCHAR(10), country VARCHAR(50));","completion":"INSERT INTO fans (fan_id, age, gender, country) SELECT fan_id, age, gender, country FROM new_fans;"}
{"prompt":"Which teams have the highest and lowest total ticket sales, excluding complimentary tickets? with given SQL schema CREATE TABLE team_performance (team_id INT, home_game BOOLEAN, total_sales DECIMAL(10,2)); INSERT INTO team_performance (team_id, home_game, total_sales) VALUES (1, true, 5000.00), (1, false, 0.00), (2, true, 7000.00), (2, false, 3000.00), (3, true, 3000.00), (3, false, 1000.00);","completion":"SELECT team_id, SUM(total_sales) FROM team_performance WHERE home_game = true AND total_sales > 0 GROUP BY team_id ORDER BY SUM(total_sales) DESC, team_id;"}
{"prompt":"What is the total number of security incidents recorded in '2022'? with given SQL schema CREATE TABLE security_incidents (id INT, incident_date DATE); INSERT INTO security_incidents (id, incident_date) VALUES (1, '2022-01-01'), (2, '2022-02-01'), (3, '2021-12-31');","completion":"SELECT COUNT(*) FROM security_incidents WHERE incident_date BETWEEN '2022-01-01' AND '2022-12-31';"}
{"prompt":"How many policies of each type were sold in Q1 of 2022? with given SQL schema CREATE TABLE Policies (PolicyID int, PolicyType varchar(20), SaleDate date); INSERT INTO Policies (PolicyID, PolicyType, SaleDate) VALUES (1, 'Auto', '2022-01-05'), (2, 'Home', '2022-03-10'), (3, 'Auto', '2022-01-15');","completion":"SELECT PolicyType, COUNT(*) OVER (PARTITION BY PolicyType) as PolicyCount FROM Policies WHERE SaleDate >= '2022-01-01' AND SaleDate < '2022-04-01';"}
{"prompt":"What is the total number of labor rights violations for unions in the construction sector, ordered by the number of violations in descending order? with given SQL schema CREATE TABLE union_construction (union_id INT, union_name TEXT, sector TEXT, violations INT); INSERT INTO union_construction (union_id, union_name, sector, violations) VALUES (1, 'Union P', 'Construction', 30), (2, 'Union Q', 'Construction', 40), (3, 'Union R', 'Construction', 25);","completion":"SELECT sector, SUM(violations) as total_violations FROM union_construction WHERE sector = 'Construction' GROUP BY sector ORDER BY total_violations DESC;"}
{"prompt":"What is the adoption rate of electric vehicles in the United States by city? with given SQL schema CREATE TABLE City_Data (city VARCHAR(50), state VARCHAR(50), population INT, electric_vehicle_adoption_rate FLOAT); INSERT INTO City_Data (city, state, population, electric_vehicle_adoption_rate) VALUES ('Los Angeles', 'California', 4000000, 0.12); INSERT INTO City_Data (city, state, population, electric_vehicle_adoption_rate) VALUES ('New York', 'New York', 8500000, 0.10);","completion":"SELECT city, electric_vehicle_adoption_rate FROM City_Data ORDER BY electric_vehicle_adoption_rate DESC;"}
{"prompt":"What is the average waste generation rate per capita in the EMEA region? with given SQL schema CREATE TABLE WasteGeneration (id INT, country VARCHAR(50), region VARCHAR(50), generation_rate FLOAT); INSERT INTO WasteGeneration (id, country, region, generation_rate) VALUES (1, 'Germany', 'EMEA', 5.3), (2, 'France', 'EMEA', 4.4), (3, 'Spain', 'EMEA', 5.1);","completion":"SELECT AVG(generation_rate) FROM WasteGeneration WHERE region = 'EMEA';"}
{"prompt":"What was the landfill capacity in cubic meters for the 'East' region in 2020? with given SQL schema CREATE TABLE landfill_capacity (region VARCHAR(20), year INT, capacity INT); INSERT INTO landfill_capacity (region, year, capacity) VALUES ('East', 2019, 400000), ('East', 2020, 425000), ('East', 2021, 450000);","completion":"SELECT capacity FROM landfill_capacity WHERE region = 'East' AND year = 2020;"}
{"prompt":"What is the percentage change in water consumption in Lima, Peru between 2017 and 2018? with given SQL schema CREATE TABLE WaterConsumptionYearly_Lima (id INT, year INT, consumption FLOAT); INSERT INTO WaterConsumptionYearly_Lima (id, year, consumption) VALUES (1, 2017, 130.5), (2, 2018, 134.2), (3, 2019, 136.1);","completion":"SELECT ((consumption_2018 - consumption_2017) \/ consumption_2017) * 100.0 FROM (SELECT consumption AS consumption_2017 FROM WaterConsumptionYearly_Lima WHERE year = 2017) AS subquery_2017 CROSS JOIN (SELECT consumption AS consumption_2018 FROM WaterConsumptionYearly_Lima WHERE year = 2018) AS subquery_2018;"}
{"prompt":"Delete the wearable device record of user 'Grace Wilson' with given SQL schema CREATE TABLE wearable_device (user_id INT, name VARCHAR(50), device_model VARCHAR(50)); INSERT INTO wearable_device (user_id, name, device_model) VALUES (6, 'Grace Wilson', 'Apple Watch 7');","completion":"WITH deleted_device AS (DELETE FROM wearable_device WHERE name = 'Grace Wilson' RETURNING *) SELECT * FROM deleted_device;"}
{"prompt":"How many users joined the gym in Q1 2023? with given SQL schema CREATE TABLE memberships (id INT, user_id INT, join_date DATE); INSERT INTO memberships (id, user_id, join_date) VALUES (1, 5, '2023-01-15'), (2, 6, '2023-02-03'), (3, 7, '2023-03-20'), (4, 8, '2022-12-31');","completion":"SELECT COUNT(*) FROM memberships WHERE join_date BETWEEN '2023-01-01' AND '2023-03-31';"}
{"prompt":"List all members who joined in the first quarter of 2021 with given SQL schema CREATE TABLE members (member_id INT, join_date DATE);","completion":"SELECT member_id FROM members WHERE join_date BETWEEN '2021-01-01' AND '2021-03-31';"}
{"prompt":"List all unique member IDs who have a platinum membership and have not attended any class in the entire month of January 2021. with given SQL schema CREATE TABLE Members (MemberID int, MembershipType varchar(10)); INSERT INTO Members (MemberID, MembershipType) VALUES (1, 'Platinum'); CREATE TABLE Classes (ClassID int, MemberID int, ClassDate date); INSERT INTO Classes (ClassID, MemberID, ClassDate) VALUES (1, 1, '2021-02-01');","completion":"SELECT DISTINCT m.MemberID FROM Members m WHERE m.MembershipType = 'Platinum' AND m.MemberID NOT IN (SELECT MemberID FROM Classes WHERE MONTH(ClassDate) = 1 AND YEAR(ClassDate) = 2021);"}
{"prompt":"What is the total distance covered by users who wore shoes of brand 'XYZ'? with given SQL schema CREATE TABLE wearables (id INT, user_id INT, device_brand VARCHAR(10), distance FLOAT); INSERT INTO wearables (id, user_id, device_brand, distance) VALUES (1, 5, 'XYZ', 5.6); INSERT INTO wearables (id, user_id, device_brand, distance) VALUES (2, 6, 'ABC', 3.2);","completion":"SELECT SUM(distance) FROM wearables WHERE device_brand = 'XYZ';"}
{"prompt":"List the number of AI safety incidents for each organization, ordered by the number of incidents in descending order. with given SQL schema CREATE TABLE ai_safety (incident_id INT, incident_date DATE, organization_name TEXT, incident_description TEXT); INSERT INTO ai_safety (incident_id, incident_date, organization_name, incident_description) VALUES (1, '2021-01-01', 'TechCo', 'AI system caused harm to a user'); INSERT INTO ai_safety (incident_id, incident_date, organization_name, incident_description) VALUES (2, '2021-02-01', 'AI Lab', 'AI system made a biased decision');","completion":"SELECT organization_name, COUNT(*) as incidents_count FROM ai_safety GROUP BY organization_name ORDER BY incidents_count DESC;"}
{"prompt":"What is the average population of animals in the 'animal_habitat' table? with given SQL schema CREATE TABLE animal_habitat (habitat_id INT, animal_name VARCHAR(50), habitat_size INT); INSERT INTO animal_habitat (habitat_id, animal_name, habitat_size) VALUES (1, 'Tiger', 500), (2, 'Elephant', 1000), (3, 'Lion', 700);","completion":"SELECT AVG(habitat_size) FROM animal_habitat;"}
{"prompt":"What is the sum of fish deaths (deaths) for each species in the 'fish_health' table, having a sum greater than the average for all species? with given SQL schema CREATE TABLE fish_health (id INT, species VARCHAR(255), deaths INT); INSERT INTO fish_health (id, species, deaths) VALUES (1, 'Salmon', 50), (2, 'Salmon', 75), (3, 'Trout', 30), (4, 'Trout', 40), (5, 'Cod', 60), (6, 'Cod', 80);","completion":"SELECT species, SUM(deaths) FROM fish_health GROUP BY species HAVING SUM(deaths) > (SELECT AVG(deaths) FROM fish_health);"}
{"prompt":"What is the total number of fish for each location, grouped by location, from the 'fish_stock' and 'sustainable_seafood' tables? with given SQL schema CREATE TABLE fish_stock (location VARCHAR(255), num_fish INT); CREATE TABLE sustainable_seafood (location VARCHAR(255), num_fish INT); INSERT INTO fish_stock (location, num_fish) VALUES ('Location A', 500), ('Location B', 600); INSERT INTO sustainable_seafood (location, num_fish) VALUES ('Location A', 450), ('Location B', 650);","completion":"SELECT f.location, SUM(f.num_fish + s.num_fish) FROM fish_stock f FULL OUTER JOIN sustainable_seafood s ON f.location = s.location GROUP BY f.location;"}
{"prompt":"List all art exhibitions with their corresponding funding sources and amounts. with given SQL schema CREATE TABLE art_exhibitions (exhibition_id INT, exhibition_name VARCHAR(50)); CREATE TABLE funding_sources (source_id INT, source_name VARCHAR(50)); CREATE TABLE exhibition_funding (exhibition_id INT, source_id INT, amount DECIMAL(5,2)); INSERT INTO art_exhibitions (exhibition_id, exhibition_name) VALUES (1, 'Impressionist Art'), (2, 'Contemporary Sculpture'); INSERT INTO funding_sources (source_id, source_name) VALUES (1, 'National Endowment for the Arts'), (2, 'Private Donors'), (3, 'Corporate Sponsors'); INSERT INTO exhibition_funding (exhibition_id, source_id, amount) VALUES (1, 1, 5000), (1, 2, 10000), (1, 3, 20000), (2, 2, 7000), (2, 3, 15000);","completion":"SELECT e.exhibition_name, f.source_name, ef.amount FROM art_exhibitions e INNER JOIN exhibition_funding ef ON e.exhibition_id = ef.exhibition_id INNER JOIN funding_sources f ON ef.source_id = f.source_id;"}
{"prompt":"What's the distribution of Spotify premium users by age group? with given SQL schema CREATE TABLE SPOTIFY_USERS (id INT, age INT, premium BOOLEAN); INSERT INTO SPOTIFY_USERS (id, age, premium) VALUES (1, 18, true), (2, 23, false), (3, 31, true), (4, 45, true), (5, 50, false);","completion":"SELECT FLOOR(age\/10)*10 as age_group, COUNT(*) as num_users FROM SPOTIFY_USERS WHERE premium = true GROUP BY age_group;"}
{"prompt":"Which countries have the most number of action and comedy movies? with given SQL schema CREATE TABLE country_movies (id INT, country VARCHAR(50), genre VARCHAR(20), count INT);","completion":"SELECT country, genre, SUM(count) FROM country_movies WHERE genre IN ('Action', 'Comedy') GROUP BY country, genre ORDER BY SUM(count) DESC;"}
{"prompt":"How many compliance violations occurred in each quarter of 2021? with given SQL schema CREATE TABLE compliance_violations (id INT, dispensary_id INT, violation_date DATE, description TEXT); INSERT INTO compliance_violations (id, dispensary_id, violation_date, description) VALUES (1, 1, '2021-02-15', 'Inadequate labeling'), (2, 2, '2021-03-02', 'Improper storage'), (3, 3, '2021-06-28', 'Expired products'), (4, 4, '2021-07-14', 'Lack of inventory controls'), (5, 1, '2021-08-12', 'Inadequate labeling'), (6, 2, '2021-12-30', 'Improper storage');","completion":"SELECT EXTRACT(QUARTER FROM violation_date) AS quarter, COUNT(*) FROM compliance_violations WHERE violation_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY quarter;"}
{"prompt":"List the climate mitigation communication campaigns in Asia with a budget greater than $1,000,000. with given SQL schema CREATE TABLE climate_communication_campaigns (campaign_id INT, campaign_name VARCHAR(50), region VARCHAR(50), budget DECIMAL(10, 2), focus VARCHAR(20)); INSERT INTO climate_communication_campaigns (campaign_id, campaign_name, region, budget, focus) VALUES (1, 'Climate Action', 'Asia', 1200000.00, 'Mitigation'), (2, 'Green Future', 'Asia', 750000.00, 'Adaptation'), (3, 'Eco Life', 'Asia', 1500000.00, 'Mitigation');","completion":"SELECT campaign_name FROM climate_communication_campaigns WHERE region = 'Asia' AND budget > 1000000.00 AND focus = 'Mitigation';"}
{"prompt":"What is the maximum amount of international climate aid provided to indigenous communities in the Amazon? with given SQL schema CREATE TABLE ClimateAid (ID INT, Community VARCHAR(255), Amount DECIMAL(10,2)); INSERT INTO ClimateAid (ID, Community, Amount) VALUES (1, 'Ashaninka', 20000), (2, 'Yawanaw\u00e1', 25000), (3, 'Huni Kui', 18000), (4, 'Mats\u00e9s', 19000), (5, 'Kaxinaw\u00e1', 22000);","completion":"SELECT MAX(Amount) FROM ClimateAid WHERE Community IN ('Ashaninka', 'Yawanaw\u00e1', 'Huni Kui', 'Mats\u00e9s', 'Kaxinaw\u00e1');"}
{"prompt":"What is the total number of mental health clinics in each territory of Australia? with given SQL schema CREATE TABLE australia_territories (id INT, name VARCHAR(255)); CREATE TABLE mental_health_clinics (id INT, territory_id INT, name VARCHAR(255)); INSERT INTO australia_territories (id, name) VALUES (1, 'New South Wales'), (2, 'Victoria'), (3, 'Queensland'), (4, 'Western Australia'), (5, 'South Australia');","completion":"SELECT t.name, COUNT(mhc.id) FROM mental_health_clinics mhc JOIN australia_territories t ON mhc.territory_id = t.id GROUP BY t.name;"}
{"prompt":"What is the average number of employees for companies in the 'Technology' industry, categorized by founding year? with given SQL schema CREATE TABLE Company_Info (company_name VARCHAR(50), industry VARCHAR(20), employee_count INT); INSERT INTO Company_Info (company_name, industry, employee_count) VALUES ('Waystar Royco', 'Media', 5000); INSERT INTO Company_Info (company_name, industry, employee_count) VALUES ('Pied Piper', 'Technology', 50); INSERT INTO Company_Info (company_name, industry, employee_count) VALUES ('Austin Biotech', 'Biotechnology', 250); INSERT INTO Company_Info (company_name, industry, employee_count) VALUES ('Everest Technologies', 'Technology', 100);","completion":"SELECT founding_year, AVG(employee_count) FROM (SELECT company_name, CASE WHEN industry = 'Technology' THEN founding_year END as founding_year, employee_count FROM Company_Info) t GROUP BY founding_year;"}
{"prompt":"What is the total funding received by female founders? with given SQL schema CREATE TABLE founders (id INT, name VARCHAR(50), gender VARCHAR(10), company_id INT); CREATE TABLE funding (id INT, company_id INT, amount INT);","completion":"SELECT SUM(funding.amount) FROM funding JOIN founders ON funding.company_id = founders.company_id WHERE founders.gender = 'female';"}
{"prompt":"What is the distribution of farm sizes in Kenya in 2017? with given SQL schema CREATE TABLE kenyan_regions (region_name TEXT, region_code TEXT); INSERT INTO kenyan_regions (region_name, region_code) VALUES ('Central', 'CT'), ('Coast', 'CS'); CREATE TABLE farm_sizes (farm_id INTEGER, region TEXT, size INTEGER, year INTEGER); INSERT INTO farm_sizes (farm_id, region, size, year) VALUES (1, 'CT', 50, 2017), (2, 'CT', 100, 2017);","completion":"SELECT region, AVG(size), MIN(size), MAX(size), STDDEV(size) FROM farm_sizes JOIN kenyan_regions ON farm_sizes.region = kenyan_regions.region_code WHERE year = 2017 GROUP BY region;"}
{"prompt":"How many support programs were implemented in the Northeast region each year? with given SQL schema CREATE TABLE SupportPrograms (ProgramID INT, ProgramName VARCHAR(50), Region VARCHAR(50), ImplementationYear INT); INSERT INTO SupportPrograms (ProgramID, ProgramName, Region, ImplementationYear) VALUES (1, 'Assistive Technology', 'Northeast', 2018), (2, 'Sign Language Interpretation', 'Northeast', 2019), (3, 'Accessible Furniture', 'Northeast', 2020);","completion":"SELECT ImplementationYear, COUNT(ProgramID) FROM SupportPrograms WHERE Region = 'Northeast' GROUP BY ImplementationYear;"}
{"prompt":"Which ocean has the highest average temperature and salinity? with given SQL schema CREATE TABLE oceans (id INT, name VARCHAR(255), avg_temperature DECIMAL(5,2), avg_salinity DECIMAL(5,2)); INSERT INTO oceans (id, name, avg_temperature, avg_salinity) VALUES (1, 'Pacific', 20.0, 34.72); INSERT INTO oceans (id, name, avg_temperature, avg_salinity) VALUES (2, 'Atlantic', 18.0, 35.13); INSERT INTO oceans (id, name, avg_temperature, avg_salinity) VALUES (3, 'Indian', 22.0, 34.56);","completion":"SELECT name, MAX(avg_temperature) as max_temperature, MAX(avg_salinity) as max_salinity FROM oceans;"}
{"prompt":"What is the total weight of organic ingredients for a specific product category? with given SQL schema CREATE TABLE Categories (Category_ID INT PRIMARY KEY, Category_Name TEXT); CREATE TABLE Products (Product_ID INT PRIMARY KEY, Product_Name TEXT, Category_ID INT, Organic BOOLEAN, Weight FLOAT); INSERT INTO Categories (Category_ID, Category_Name) VALUES (1, 'Facial Care'), (2, 'Body Care'), (3, 'Hair Care'); INSERT INTO Products (Product_ID, Product_Name, Category_ID, Organic, Weight) VALUES (1, 'Cleansing Gel', 1, TRUE, 50.0), (2, 'Hydrating Cream', 1, TRUE, 30.0), (3, 'Refreshing Mist', 1, FALSE, 20.0), (4, 'Nourishing Body Lotion', 2, TRUE, 75.0), (5, 'Volumizing Shampoo', 3, FALSE, 50.0), (6, 'Strengthening Conditioner', 3, TRUE, 60.0);","completion":"SELECT c.Category_Name, SUM(p.Weight) FROM Products p JOIN Categories c ON p.Category_ID = c.Category_ID WHERE p.Organic = TRUE GROUP BY c.Category_ID;"}
{"prompt":"What are the community policing metrics and their corresponding ratings? with given SQL schema CREATE TABLE community_policing (metric_id INT, metric_name VARCHAR(255), rating INT); INSERT INTO community_policing (metric_id, metric_name, rating) VALUES (1, 'Community Engagement', 90), (2, 'Crime Prevention Programs', 80);","completion":"SELECT metric_name, rating FROM community_policing;"}
{"prompt":"What is the most attended cultural event in the past year? with given SQL schema CREATE TABLE CulturalEvents (id INT, city VARCHAR(50), date DATE, attendance INT); INSERT INTO CulturalEvents (id, city, date, attendance) VALUES (1, 'New York', '2022-01-01', 1000), (2, 'Los Angeles', '2022-01-02', 2000), (3, 'New York', '2022-01-03', 3000);","completion":"SELECT * FROM CulturalEvents WHERE date >= DATEADD(year, -1, GETDATE()) ORDER BY attendance DESC LIMIT 1;"}
{"prompt":"Insert a new record into the 'weapons' table with the following data: 'Javelin', 'USA', 'in-development' with given SQL schema CREATE TABLE weapons (id INT PRIMARY KEY, name VARCHAR(255), origin VARCHAR(255), status VARCHAR(255)); INSERT INTO weapons (id, name, origin) VALUES (1, 'AK-47', 'Russia'), (2, 'RPG-7', 'Russia');","completion":"INSERT INTO weapons (name, origin, status) VALUES ('Javelin', 'USA', 'in-development');"}
{"prompt":"Present the types of military equipment from Canada with given SQL schema CREATE TABLE military_equipment (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255));","completion":"SELECT type FROM military_equipment WHERE country = 'Canada';"}
{"prompt":"What is the name of each military innovation and the year it was developed by countries in the BRICS? with given SQL schema CREATE TABLE military_innovation (name VARCHAR(50), country VARCHAR(50), year INT); INSERT INTO military_innovation (name, country, year) VALUES ('Stealth Fighter', 'China', 2010), ('Cyber Warfare Unit', 'Russia', 2012), ('Stealth Frigate', 'India', 2014), ('Robot Soldier', 'Brazil', 2015), ('Smart Rifle', 'South Africa', 2016);","completion":"SELECT mi.name, mi.year FROM military_innovation mi INNER JOIN (SELECT DISTINCT country FROM military_innovation) mic ON mi.country = mic.country;"}
{"prompt":"What is the average transaction amount for clients with a net worth over $1,000,000 in Q4 2023? with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(50), net_worth DECIMAL(10,2), last_transaction_date DATE);CREATE TABLE transactions (transaction_id INT, client_id INT, transaction_date DATE, total_amount DECIMAL(10,2));","completion":"SELECT AVG(total_amount) FROM transactions t INNER JOIN clients c ON t.client_id = c.client_id WHERE c.net_worth > 1000000 AND t.transaction_date BETWEEN '2023-10-01' AND '2023-12-31'"}
{"prompt":"What is the minimum account balance for clients in the Northwest region? with given SQL schema CREATE TABLE clients (client_id INT, name VARCHAR(50), region VARCHAR(20), account_balance DECIMAL(10,2)); INSERT INTO clients (client_id, name, region, account_balance) VALUES (1, 'John Smith', 'Northwest', 30000.00), (2, 'Jane Doe', 'Northeast', 22000.00), (3, 'Mike Johnson', 'Northwest', 15000.00), (4, 'Sara Jones', 'Southeast', 12000.00), (5, 'William Brown', 'Northeast', 25000.00), (6, 'Emily Davis', 'Southeast', 40000.00), (7, 'Olivia Thompson', 'Northwest', 5000.00);","completion":"SELECT MIN(account_balance) FROM clients WHERE region = 'Northwest';"}
{"prompt":"Delete a port from the system with given SQL schema ports(port_id, port_name, country, region, location)","completion":"DELETE FROM ports WHERE port_id = 5002;"}
{"prompt":"Identify the number of vessels that visited 'Port of Mumbai' in June 2022 but did not carry any perishable cargo. with given SQL schema CREATE TABLE vessels (id INT, name TEXT); CREATE TABLE cargo (id INT, perishable BOOLEAN, vessel_id INT, port_id INT, loaded_date DATE); CREATE TABLE ports (id INT, name TEXT); INSERT INTO vessels (id, name) VALUES (1, 'Vessel C'), (2, 'Vessel D'); INSERT INTO ports (id, name) VALUES (4, 'Port of Mumbai'); INSERT INTO cargo (id, perishable, vessel_id, port_id, loaded_date) VALUES (1, true, 1, 4, '2022-06-20'), (2, false, 2, 4, '2022-06-25'), (3, false, 1, 4, '2022-06-01');","completion":"SELECT COUNT(DISTINCT vessels.id) FROM vessels LEFT JOIN cargo ON vessels.id = cargo.vessel_id LEFT JOIN ports ON cargo.port_id = ports.id WHERE ports.name = 'Port of Mumbai' AND cargo.loaded_date >= DATE('2022-06-01') AND cargo.loaded_date <= DATE('2022-06-30') AND cargo.perishable = false GROUP BY vessels.id HAVING COUNT(cargo.id) = 0;"}
{"prompt":"What is the average cargo handling time in hours for each port? with given SQL schema CREATE TABLE cargo_handling (id INT, port_id INT, time_in_hours DECIMAL(5,2)); INSERT INTO cargo_handling (id, port_id, time_in_hours) VALUES (1, 1, 20.5), (2, 1, 22.3), (3, 2, 18.7);","completion":"SELECT port_id, AVG(time_in_hours) FROM cargo_handling GROUP BY port_id;"}
{"prompt":"Identify materials with waste generation above the industry average with given SQL schema CREATE TABLE WasteData (manufacturer_id INT, material VARCHAR(50), waste_quantity INT); INSERT INTO WasteData (manufacturer_id, material, waste_quantity) VALUES (1, 'Material1', 120), (1, 'Material2', 150), (2, 'Material1', 80), (2, 'Material3', 100), (3, 'Material2', 50), (3, 'Material3', 130); CREATE TABLE IndustryAverages (material VARCHAR(50), avg_waste INT); INSERT INTO IndustryAverages (material, avg_waste) VALUES ('Material1', 100), ('Material2', 100), ('Material3', 110);","completion":"SELECT w.material, w.waste_quantity, i.avg_waste FROM WasteData w INNER JOIN IndustryAverages i ON w.material = i.material WHERE w.waste_quantity > i.avg_waste;"}
{"prompt":"What is the number of rural hospitals and clinics in each state, and the percentage of hospitals with a CT scan machine in each? with given SQL schema CREATE TABLE hospitals (id INT, name TEXT, location TEXT, num_beds INT, state TEXT, has_ct_scan BOOLEAN); INSERT INTO hospitals (id, name, location, num_beds, state, has_ct_scan) VALUES (1, 'Hospital A', 'Rural Texas', 50, 'Texas', true), (2, 'Hospital B', 'Rural California', 75, 'California', false); CREATE TABLE clinics (id INT, name TEXT, location TEXT, num_beds INT, state TEXT); INSERT INTO clinics (id, name, location, num_beds, state) VALUES (1, 'Clinic A', 'Rural Texas', 25, 'Texas'), (2, 'Clinic B', 'Rural California', 35, 'California');","completion":"SELECT s.state, COUNT(h.id) AS num_hospitals, COUNT(c.id) AS num_clinics, COUNT(h2.id) * 100.0 \/ (COUNT(h.id) + COUNT(c.id)) AS pct_hospitals_with_ct_scan FROM hospitals h INNER JOIN clinics c ON h.state = c.state INNER JOIN hospitals h2 ON h.state = h2.state AND h2.has_ct_scan = true GROUP BY s.state;"}
{"prompt":"How many green energy projects were funded in the last 3 months, grouped by country? with given SQL schema CREATE TABLE green_energy_funding (id INT, project_name VARCHAR(50), funding_date DATE, country VARCHAR(30)); INSERT INTO green_energy_funding (id, project_name, funding_date, country) VALUES (1, 'Wind Farm X', '2021-09-15', 'Germany'), (2, 'Solar Park Y', '2021-10-05', 'Spain'), (3, 'Geothermal Project Z', '2021-11-10', 'Italy');","completion":"SELECT country, COUNT(*) FROM green_energy_funding WHERE funding_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY country;"}
{"prompt":"Delete the EmployeeDemographics table with given SQL schema CREATE TABLE EmployeeDemographics (EmployeeID INT PRIMARY KEY, Age INT, Gender VARCHAR(10), Ethnicity VARCHAR(20));","completion":"DROP TABLE EmployeeDemographics;"}
{"prompt":"Delete all records from the fields table where the field name contains 'Field' and the region is the Gulf of Mexico. with given SQL schema CREATE TABLE fields (field_id INT, field_name TEXT, region TEXT); INSERT INTO fields (field_id, field_name, region) VALUES (1, 'Field A', 'Gulf of Mexico'), (2, 'Field B', 'Caspian Sea'), (3, 'Non-Field C', 'Gulf of Mexico');","completion":"DELETE FROM fields WHERE field_name LIKE '%Field%' AND region = 'Gulf of Mexico';"}
{"prompt":"Display the number of social media posts related to ethical AI by month and platform in the 'social_media_posts' table with given SQL schema CREATE TABLE social_media_posts (id INT PRIMARY KEY, post_date DATETIME, platform VARCHAR(50), post_text TEXT);","completion":"SELECT EXTRACT(MONTH FROM post_date) as month, platform, COUNT(*) as num_posts FROM social_media_posts WHERE post_text LIKE '%ethical AI%' GROUP BY month, platform ORDER BY month;"}
{"prompt":"Delete fare information for rider 'John Smith' with given SQL schema CREATE TABLE riders (rider_id INT, name VARCHAR(255)); INSERT INTO riders (rider_id, name) VALUES (1, 'John Smith'); CREATE TABLE fares (fare_id INT, rider_id INT, fare_amount DECIMAL(5,2));","completion":"DELETE FROM fares WHERE rider_id = (SELECT rider_id FROM riders WHERE name = 'John Smith');"}
{"prompt":"How many bus trips were there in the NYC boroughs in Q1 2022? with given SQL schema CREATE TABLE bus_trips(trip_date DATE, borough VARCHAR(20)); INSERT INTO bus_trips (trip_date, borough) VALUES ('2022-01-01', 'Manhattan'), ('2022-01-02', 'Brooklyn');","completion":"SELECT COUNT(*) FROM bus_trips WHERE trip_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY borough;"}
{"prompt":"What is the distribution of products by size in the ethical fashion market? with given SQL schema CREATE TABLE products (product_id INT, size VARCHAR(10));CREATE TABLE size_ranges (size VARCHAR(10), range VARCHAR(20));","completion":"SELECT sr.range, COUNT(p.product_id) FROM products p JOIN size_ranges sr ON p.size = sr.size GROUP BY sr.range;"}
{"prompt":"Find the post with the third highest number of likes in the 'sports' category. with given SQL schema CREATE TABLE posts (id INT, category VARCHAR(20), likes INT); INSERT INTO posts (id, category, likes) VALUES (1, 'music', 10), (2, 'music', 15), (3, 'sports', 20), (4, 'sports', 30), (5, 'sports', 40);","completion":"SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY category ORDER BY likes DESC) as rn FROM posts) t WHERE t.rn = 3 AND t.category = 'sports';"}
{"prompt":"What is the average number of comments for posts in the \"social_media_posts\" table? with given SQL schema CREATE TABLE social_media_posts (post_id INT, comments_count INT); INSERT INTO social_media_posts (post_id, comments_count) VALUES (1, 50), (2, 75), (3, 30), (4, 60), (5, 45);","completion":"SELECT AVG(comments_count) FROM social_media_posts;"}
{"prompt":"What is the average price of cotton textiles sourced from the United States? with given SQL schema CREATE TABLE textile_sourcing (textile_id INTEGER, material TEXT, country TEXT, price FLOAT); INSERT INTO textile_sourcing (textile_id, material, country, price) VALUES (1, 'cotton', 'United States', 5.5), (2, 'silk', 'China', 12.0), (3, 'polyester', 'India', 3.5);","completion":"SELECT AVG(price) FROM textile_sourcing WHERE material = 'cotton' AND country = 'United States';"}
{"prompt":"Who is the customer with the most purchases of 'Sustainable Clothing' in the last 6 months? with given SQL schema CREATE TABLE CustomerOrders (id INT, customer_id INT, product VARCHAR(20), order_date DATE); INSERT INTO CustomerOrders (id, customer_id, product, order_date) VALUES (1, 1, 'Sustainable T-Shirt', '2022-05-03'), (2, 2, 'Regular Denim', '2022-05-05'), (3, 1, 'Sustainable T-Shirt', '2022-04-30'), (4, 3, 'Sustainable T-Shirt', '2022-03-28'), (5, 1, 'Sustainable T-Shirt', '2022-02-15'), (6, 4, 'Sustainable T-Shirt', '2022-01-01'), (7, 5, 'Sustainable Jacket', '2022-05-10'), (8, 5, 'Sustainable Pants', '2022-04-25'), (9, 5, 'Sustainable Shoes', '2022-03-20');","completion":"SELECT customer_id, COUNT(*) as num_purchases FROM CustomerOrders WHERE product LIKE 'Sustainable%' AND order_date >= DATEADD(month, -6, CURRENT_DATE) GROUP BY customer_id ORDER BY num_purchases DESC;"}
{"prompt":"Calculate the total number of volunteer hours for the current year, grouped by month and program. with given SQL schema CREATE TABLE Programs (ProgramID int, Name varchar(50), Location varchar(50)); CREATE TABLE Volunteers (VolunteerID int, Name varchar(50), ProgramID int, VolunteerDate date, Hours decimal(10,2)); INSERT INTO Programs (ProgramID, Name, Location) VALUES (1, 'Reforestation', 'Indonesia'), (2, 'Animal Rescue', 'Australia'); INSERT INTO Volunteers (VolunteerID, Name, ProgramID, VolunteerDate, Hours) VALUES (1, 'Aaron', 1, '2021-12-31', 5.00), (2, 'Sophie', 2, '2022-01-01', 10.00), (3, 'Benjamin', 1, '2022-02-01', 15.00), (4, 'Emily', 1, '2022-03-01', 20.00);","completion":"SELECT P.Name, DATE_FORMAT(V.VolunteerDate, '%Y-%m') AS Month, SUM(V.Hours) AS TotalHours FROM Programs P JOIN Volunteers V ON P.ProgramID = V.ProgramID WHERE YEAR(V.VolunteerDate) = YEAR(CURDATE()) GROUP BY P.ProgramID, Month;"}
{"prompt":"Show the total calories of dishes served in 'HealthyHarvest' that have a price above the average. with given SQL schema CREATE TABLE Dishes (dish_name VARCHAR(50), calories INT, price INT); INSERT INTO Dishes (dish_name, calories, price) VALUES ('Chia Pudding', 250, 10), ('Veggie Wrap', 500, 15), ('Spinach Salad', 300, 12), ('Quinoa Salad', 400, 13);","completion":"SELECT SUM(Dishes.calories) FROM Dishes WHERE Dishes.dish_name LIKE 'HealthyHarvest%' AND Dishes.price > (SELECT AVG(price) FROM Dishes)"}
{"prompt":"List the top 3 busiest warehouses in terms of shipments in the USA. with given SQL schema CREATE TABLE Warehouses (WarehouseID INT, WarehouseName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Warehouses (WarehouseID, WarehouseName, Country) VALUES (1, 'NY Warehouse', 'USA'), (2, 'LA Warehouse', 'USA'); CREATE TABLE Shipments (ShipmentID INT, WarehouseID INT, Quantity INT);","completion":"SELECT WarehouseID, WarehouseName, SUM(Quantity) AS TotalQuantity FROM Warehouses W JOIN Shipments S ON W.WarehouseID = S.WarehouseID WHERE W.Country = 'USA' GROUP BY WarehouseID, WarehouseName ORDER BY TotalQuantity DESC LIMIT 3;"}
{"prompt":"Update the item name of the warehouse management record with ID 1 with given SQL schema CREATE TABLE warehouse_management (id INT, aisle VARCHAR(255), item_name VARCHAR(255)); INSERT INTO warehouse_management (id, aisle, item_name) VALUES (1, 'Aisle 3', 'Widget'), (2, 'Aisle 8', 'Thingamajig'), (3, 'Aisle 8', 'Gizmo');","completion":"UPDATE warehouse_management SET item_name = 'Super Widget' WHERE id = 1;"}
{"prompt":"What are the top 3 reverse logistics return points in Europe in H1 2022? with given SQL schema CREATE TABLE returns (return_id INT, return_point VARCHAR(255), return_half INT, return_year INT); INSERT INTO returns (return_id, return_point, return_half, return_year) VALUES (1, 'Paris', 1, 2022), (2, 'Berlin', 1, 2022), (3, 'London', 1, 2022), (4, 'Rome', 1, 2022), (5, 'Madrid', 1, 2022);","completion":"SELECT return_point, SUM(return_id) as total_returns FROM returns WHERE return_half = 1 AND return_year = 2022 GROUP BY return_point ORDER BY total_returns DESC LIMIT 3;"}
{"prompt":"What is the average funding received by startups in the biotechnology sector located in the USA? with given SQL schema CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.startups (id INT, name TEXT, location TEXT, funding DECIMAL(10,2), industry TEXT);INSERT INTO biotech.startups (id, name, location, funding, industry) VALUES (1, 'StartupA', 'USA', 1500000.00, 'Biotechnology'), (2, 'StartupB', 'Canada', 2000000.00, 'Artificial Intelligence');","completion":"SELECT AVG(funding) FROM biotech.startups WHERE industry = 'Biotechnology' AND location = 'USA';"}
{"prompt":"List the unique types of public services offered in 'public_services' table, excluding services of type 'type_c' and 'type_d'. with given SQL schema CREATE TABLE public_services (service_type VARCHAR(255));","completion":"SELECT DISTINCT service_type FROM public_services WHERE service_type NOT IN ('type_c', 'type_d');"}
{"prompt":"Show the research grants awarded to professors in the Computer Science department. with given SQL schema CREATE TABLE departments (id INT, name VARCHAR(50)); INSERT INTO departments (id, name) VALUES (1, 'Computer Science'), (2, 'Mathematics'); CREATE TABLE professors (id INT, name VARCHAR(50), department_id INT); INSERT INTO professors (id, name, department_id) VALUES (1, 'John Smith', 1), (2, 'Jane Doe', 2); CREATE TABLE grants (id INT, professor_id INT, year INT, amount FLOAT); INSERT INTO grants (id, professor_id, year, amount) VALUES (1, 1, 2021, 5000.0), (2, 2, 2020, 7000.0);","completion":"SELECT professors.name, grants.amount FROM professors INNER JOIN grants ON professors.id = grants.professor_id INNER JOIN departments ON professors.department_id = departments.id WHERE departments.name = 'Computer Science';"}
{"prompt":"How many community health workers are there in each region? with given SQL schema CREATE TABLE region_health_workers (region VARCHAR(10), worker_count INT); INSERT INTO region_health_workers (region, worker_count) VALUES ('Northeast', 50), ('Southeast', 75), ('Midwest', 100);","completion":"SELECT region, SUM(worker_count) FROM region_health_workers GROUP BY region;"}
{"prompt":"How many virtual tours were taken in Japan in the past year? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, location TEXT, views INT, date DATE); INSERT INTO virtual_tours (tour_id, location, views, date) VALUES (1, 'Mt. Fuji', 2000, '2021-10-01'), (2, 'Tokyo Tower', 1500, '2021-09-01');","completion":"SELECT COUNT(*) FROM virtual_tours WHERE location = 'Japan' AND date >= DATEADD(year, -1, GETDATE());"}
{"prompt":"How many virtual tours have been engaged with for hotels that have implemented AI-powered housekeeping solutions in Africa? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, region TEXT); CREATE TABLE ai_solutions (solution_id INT, hotel_id INT, implemented_date DATE, solution_type TEXT); CREATE TABLE virtual_tours (tour_id INT, hotel_id INT, engagement_score INT); INSERT INTO hotels (hotel_id, hotel_name, region) VALUES (1, 'Savannah Lodge', 'Africa'), (2, 'Mountain Safari Resort', 'Africa'); INSERT INTO ai_solutions (solution_id, hotel_id, implemented_date, solution_type) VALUES (1, 1, '2021-02-01', 'housekeeping'), (2, 1, '2021-03-01', 'front desk'), (1, 2, '2021-01-01', 'housekeeping'), (2, 2, '2021-02-01', 'housekeeping'); INSERT INTO virtual_tours (tour_id, hotel_id, engagement_score) VALUES (1, 1, 70), (2, 1, 75), (1, 2, 80), (2, 2, 85);","completion":"SELECT COUNT(DISTINCT vt.hotel_id) AS total_tours_engaged FROM virtual_tours vt INNER JOIN hotels h ON vt.hotel_id = h.hotel_id INNER JOIN ai_solutions ai ON h.hotel_id = ai.hotel_id WHERE h.region = 'Africa' AND ai.solution_type = 'housekeeping';"}
{"prompt":"Show all artworks and their prices from the 'Surrealism' period. with given SQL schema CREATE TABLE Artworks (id INT, artist_name VARCHAR(100), period VARCHAR(50), artwork_name VARCHAR(100), price FLOAT); INSERT INTO Artworks (id, artist_name, period, artwork_name, price) VALUES (1, 'Salvador Dal\u00ed', 'Surrealism', 'The Persistence of Memory', 500000.0); INSERT INTO Artworks (id, artist_name, period, artwork_name, price) VALUES (2, 'Ren\u00e9 Magritte', 'Surrealism', 'The Son of Man', 100000.0);","completion":"SELECT artwork_name, price FROM Artworks WHERE period = 'Surrealism';"}
{"prompt":"What is the average temperature recorded in the 'arctic_weather' table for each month in the year 2020, broken down by species ('species' column in the 'arctic_weather' table)? with given SQL schema CREATE TABLE arctic_weather (id INT, date DATE, temperature FLOAT, species VARCHAR(50));","completion":"SELECT MONTH(date) AS month, species, AVG(temperature) AS avg_temp FROM arctic_weather WHERE YEAR(date) = 2020 GROUP BY month, species;"}
{"prompt":"What's the average age of patients diagnosed with anxiety disorders? with given SQL schema CREATE TABLE patients (patient_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), condition VARCHAR(50)); INSERT INTO patients (patient_id, name, age, gender, condition) VALUES (1, 'John Doe', 30, 'Male', 'Anxiety Disorder'); INSERT INTO patients (patient_id, name, age, gender, condition) VALUES (3, 'Alice Johnson', 40, 'Female', 'Depression'); INSERT INTO patients (patient_id, name, age, gender, condition) VALUES (5, 'Bob Smith', 25, 'Male', 'Anxiety Disorder');","completion":"SELECT AVG(age) FROM patients WHERE condition = 'Anxiety Disorder';"}
{"prompt":"What is the difference in construction cost between the most expensive and least expensive road projects in Australia? with given SQL schema CREATE TABLE Road_Australia (Project VARCHAR(50), Country VARCHAR(50), Cost FLOAT); INSERT INTO Road_Australia (Project, Country, Cost) VALUES ('Sydney Road', 'Australia', 4000000), ('Melbourne Road', 'Australia', 3000000);","completion":"SELECT MAX(Cost) - MIN(Cost) as Cost_Difference FROM Road_Australia WHERE Country = 'Australia';"}
{"prompt":"What is the market spend on sustainable tourism initiatives in Japan between 2017 and 2019? with given SQL schema CREATE TABLE sustainable_tourism_initiatives(initiative_id INT, name TEXT, country TEXT, start_year INT, end_year INT, market_spend INT);INSERT INTO sustainable_tourism_initiatives (initiative_id, name, country, start_year, end_year, market_spend) VALUES (1, 'Eco-friendly hotels in Tokyo', 'Japan', 2017, 2019, 5000000), (2, 'Sustainable transport in Kyoto', 'Japan', 2018, 2019, 7000000), (3, 'Carbon offsetting in Osaka', 'Japan', 2017, 2018, 3000000);","completion":"SELECT SUM(market_spend) FROM sustainable_tourism_initiatives WHERE country = 'Japan' AND start_year BETWEEN 2017 AND 2019;"}
{"prompt":"What is the number of international visitors to Brazil in 2022 and their average expenditures? with given SQL schema CREATE TABLE Visitors_Brazil (id INT, year INT, country VARCHAR(50), expenditure FLOAT); INSERT INTO Visitors_Brazil (id, year, country, expenditure) VALUES (1, 2022, 'Brazil', 1200), (2, 2022, 'Brazil', 1300), (3, 2022, 'Brazil', 1400);","completion":"SELECT AVG(Visitors_Brazil.expenditure) FROM Visitors_Brazil WHERE Visitors_Brazil.country = 'Brazil' AND Visitors_Brazil.year = 2022;"}
{"prompt":"Which destinations have the least hotel awards? with given SQL schema CREATE TABLE Destinations (destination_id INT, destination_name TEXT, country TEXT, awards INT); INSERT INTO Destinations (destination_id, destination_name, country, awards) VALUES (1, 'City A', 'Germany', 3), (2, 'City B', 'Switzerland', 5), (3, 'City C', 'Norway', 2);","completion":"SELECT destination_name, country, awards, RANK() OVER (PARTITION BY country ORDER BY awards ASC) AS rank FROM Destinations;"}
{"prompt":"What is the number of legal aid organizations in each county? with given SQL schema CREATE TABLE legal_aid_organizations (org_id INT, org_name TEXT, county TEXT, cases_handled INT); INSERT INTO legal_aid_organizations VALUES (1, 'LegalAid1', 'San Francisco', 250), (2, 'LegalAid2', 'Dallas', 300), (3, 'LegalAid3', 'New York', 200), (4, 'LegalAid4', 'Los Angeles', 200), (5, 'LegalAid5', 'Miami-Dade', 150);","completion":"SELECT county, COUNT(*) FROM legal_aid_organizations GROUP BY county;"}
{"prompt":"Determine the total biomass of marine species in the 'Coral Reef' ecosystem. with given SQL schema CREATE SCHEMA MarineEcosystems(ecosystem_id INT, ecosystem_name TEXT);CREATE SCHEMA MarineSpecies(species_id INT, species_name TEXT, biomass INT);INSERT INTO MarineEcosystems(ecosystem_id, ecosystem_name) VALUES (1, 'Coral Reef'); INSERT INTO MarineSpecies(species_id, species_name, biomass) VALUES (1, 'Clownfish', 20), (2, 'Sea Turtle', 150), (3, 'Coral', 1000);","completion":"SELECT s.biomass FROM MarineSpecies s JOIN MarineEcosystems e ON s.species_id IN (1, 2, 3) AND e.ecosystem_name = 'Coral Reef';"}
{"prompt":"How many marine species are affected by pollution in the Arctic Ocean? with given SQL schema CREATE TABLE Arctic_Marine_Species (species_name TEXT, population INT, is_affected_by_pollution BOOLEAN); INSERT INTO Arctic_Marine_Species (species_name, population, is_affected_by_pollution) VALUES ('Polar Bear', 26500, true), ('Narwhal', 174000, true), ('Beluga Whale', 105000, false);","completion":"SELECT COUNT(*) FROM Arctic_Marine_Species WHERE is_affected_by_pollution = true;"}
{"prompt":"What is the average number of views for Korean and Japanese movies? with given SQL schema CREATE TABLE movies (id INT, title VARCHAR(255), release_year INT, views INT, country VARCHAR(50)); INSERT INTO movies (id, title, release_year, views, country) VALUES (1, 'Movie1', 2010, 15000, 'South Korea'), (2, 'Movie2', 2015, 20000, 'Japan'), (3, 'Movie3', 2020, 25000, 'South Korea'), (4, 'Movie4', 2005, 30000, 'Japan');","completion":"SELECT AVG(views) FROM movies WHERE country = 'South Korea' UNION SELECT AVG(views) FROM movies WHERE country = 'Japan';"}
{"prompt":"List the top 5 mines with the highest environmental impact in the past year? with given SQL schema CREATE TABLE mine_environmental_impact (mine_name VARCHAR(255), impact NUMERIC, measurement_date DATE); INSERT INTO mine_environmental_impact (mine_name, impact, measurement_date) VALUES ('Mine A', 1000, '2021-08-01'), ('Mine B', 2000, '2021-08-01'), ('Mine C', 1500, '2021-08-01'), ('Mine A', 1200, '2020-08-01'), ('Mine B', 1800, '2020-08-01');","completion":"SELECT mine_name, impact FROM (SELECT mine_name, impact, measurement_date, RANK() OVER (ORDER BY impact DESC) as rnk FROM mine_environmental_impact WHERE measurement_date >= DATEADD(year, -1, CURRENT_DATE)) t WHERE rnk <= 5;"}
{"prompt":"What was the average labor productivity in the mining industry in Australia, by year, for the last 5 years? with given SQL schema CREATE TABLE LaborProductivity (year INT, country TEXT, industry TEXT, productivity FLOAT); INSERT INTO LaborProductivity (year, country, industry, productivity) VALUES (2017, 'Australia', 'Mining', 125000), (2018, 'Australia', 'Mining', 130000), (2019, 'Australia', 'Mining', 135000), (2020, 'Australia', 'Mining', 140000), (2021, 'Australia', 'Mining', 145000);","completion":"SELECT context.year, AVG(context.productivity) as avg_productivity FROM LaborProductivity context WHERE context.country = 'Australia' AND context.industry = 'Mining' AND context.year BETWEEN 2017 AND 2021 GROUP BY context.year;"}
{"prompt":"List the names and roles of mining engineers whose names start with 'A' or 'B'. with given SQL schema CREATE TABLE mine_operators (id INT PRIMARY KEY, name VARCHAR(50), role VARCHAR(50), gender VARCHAR(10), years_of_experience INT); INSERT INTO mine_operators (id, name, role, gender, years_of_experience) VALUES (1, 'John Doe', 'Mining Engineer', 'Male', 7), (2, 'Aisha', 'Mining Engineer', 'Female', 3);","completion":"SELECT name, role FROM mine_operators WHERE name LIKE 'A%' OR name LIKE 'B%';"}
{"prompt":"How many articles were published in each month of the year? with given SQL schema CREATE TABLE articles (id INT, title VARCHAR(50), publish_date DATE); INSERT INTO articles (id, title, publish_date) VALUES (1, 'Article One', '2022-01-01'), (2, 'Article Two', '2022-02-01');","completion":"SELECT EXTRACT(MONTH FROM publish_date) AS month, COUNT(*) AS count FROM articles GROUP BY month ORDER BY month;"}
{"prompt":"List all organizations that received donations from 'Brazil' in '2023'. with given SQL schema CREATE TABLE donations (donation_id INT, donor_id INT, organization_id INT, donation_year INT, donation_amount FLOAT); INSERT INTO donations (donation_id, donor_id, organization_id, donation_year, donation_amount) VALUES (1, 1, 101, 2023, 200.00), (2, 2, 102, 2023, 300.00), (3, 3, 103, 2023, 100.00); CREATE TABLE organizations (organization_id INT, organization_name TEXT); INSERT INTO organizations (organization_id, organization_name) VALUES (101, 'Food Bank'), (102, 'Habitat for Humanity'), (103, 'Red Cross');","completion":"SELECT organization_name FROM organizations JOIN donations ON organizations.organization_id = donations.organization_id WHERE donation_year = 2023 AND EXISTS (SELECT 1 FROM donors WHERE donors.donor_country = 'Brazil' AND donors.donor_id = donations.donor_id);"}
{"prompt":"Add a new marine species 'Blue Whale' with weight 200000 in the 'North Atlantic Ocean' to the marine_species table with given SQL schema CREATE TABLE marine_species (name VARCHAR(255), weight FLOAT, location VARCHAR(255)); INSERT INTO marine_species (name, weight, location) VALUES ('Great White Shark', 2000.0, 'Pacific Ocean'), ('Giant Squid', 700.0, 'Atlantic Ocean');","completion":"INSERT INTO marine_species (name, weight, location) VALUES ('Blue Whale', 200000.0, 'North Atlantic Ocean');"}
{"prompt":"Insert records of new players who have not registered yet with given SQL schema CREATE TABLE players (id INT PRIMARY KEY, name VARCHAR(50), registration_date TIMESTAMP); INSERT INTO players VALUES (1001, 'John Doe', '2021-01-01 12:00:00'), (1002, 'Jane Doe', '2021-02-15 14:30:00'), (1003, 'Jim Smith', '2021-06-20 09:15:00'); CREATE TABLE new_players (id INT, name VARCHAR(50), registration_date TIMESTAMP);","completion":"INSERT INTO players SELECT * FROM new_players WHERE NOT EXISTS (SELECT 1 FROM players WHERE players.id = new_players.id);"}
{"prompt":"What is the average age of players who play \"Racing Simulator 2022\"? with given SQL schema CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Game VARCHAR(50), Age INT); INSERT INTO Players (PlayerID, PlayerName, Game, Age) VALUES (1, 'John Doe', 'Racing Simulator 2022', 25), (2, 'Jane Smith', 'Racing Simulator 2022', 30), (3, 'Alice Johnson', 'Shooter Game 2022', 22);","completion":"SELECT AVG(Age) FROM Players WHERE Game = 'Racing Simulator 2022';"}
{"prompt":"What is the average property price in the city of 'Oakland' from the 'property' table? with given SQL schema CREATE TABLE property (id INT, city VARCHAR(20), price INT); INSERT INTO property (id, city, price) VALUES (1, 'Oakland', 500000), (2, 'San_Francisco', 700000);","completion":"SELECT AVG(price) FROM property WHERE city = 'Oakland';"}
{"prompt":"What is the number of space missions launched by each country? with given SQL schema CREATE TABLE space_missions (country TEXT, year INT); INSERT INTO space_missions (country, year) VALUES ('USA', 2015), ('USA', 2015), ('USA', 2016), ('Russia', 2015), ('Russia', 2016), ('China', 2016), ('China', 2017), ('India', 2017);","completion":"SELECT country, COUNT(*) FROM space_missions GROUP BY country;"}
{"prompt":"How many security incidents were reported in the APAC region last year? with given SQL schema CREATE TABLE incidents (id INT, region TEXT, date_reported DATE); INSERT INTO incidents (id, region, date_reported) VALUES (1, 'APAC', '2021-05-03'); INSERT INTO incidents (id, region, date_reported) VALUES (2, 'Americas', '2021-06-17'); INSERT INTO incidents (id, region, date_reported) VALUES (3, 'APAC', '2021-07-24'); INSERT INTO incidents (id, region, date_reported) VALUES (4, 'Europe', '2021-08-30'); INSERT INTO incidents (id, region, date_reported) VALUES (5, 'APAC', '2021-09-13');","completion":"SELECT COUNT(*) as count FROM incidents WHERE region = 'APAC' AND date_reported >= '2021-01-01' AND date_reported < '2022-01-01';"}
{"prompt":"Which countries have the most open vulnerabilities in the last quarter? with given SQL schema CREATE TABLE vulnerabilities (id INT, country VARCHAR(50), open_date DATE, close_date DATE);","completion":"SELECT country, COUNT(*) as vulnerability_count FROM vulnerabilities WHERE close_date IS NULL AND open_date >= DATEADD(quarter, -1, GETDATE()) GROUP BY country;"}
{"prompt":"Add a new station to the stations table for the city of Oslo, Norway. with given SQL schema stations (id, name, city, country, latitude, longitude)","completion":"INSERT INTO stations (name, city, country) VALUES ('Oslo Central', 'Oslo', 'Norway');"}
{"prompt":"What is the average CO2 emission reduction for electric vehicles? with given SQL schema CREATE TABLE co2_emission (id INT, ev_model VARCHAR(50), co2_reduction FLOAT); INSERT INTO co2_emission (id, ev_model, co2_reduction) VALUES (1, 'Tesla Model 3', 45.0), (2, 'Nissan Leaf', 40.0), (3, 'Chevrolet Bolt', 42.0);","completion":"SELECT AVG(co2_reduction) FROM co2_emission;"}
{"prompt":"What is the total CO2 emissions by manufacturer in 2022? with given SQL schema CREATE TABLE co2_emissions_manufacturers (manufacturer VARCHAR(50), co2_emissions DECIMAL(10,2), date DATE);","completion":"SELECT manufacturer, SUM(co2_emissions) AS total_co2_emissions FROM co2_emissions_manufacturers WHERE date >= '2022-01-01' AND date < '2023-01-01' GROUP BY manufacturer;"}
{"prompt":"What is the total number of workplace safety violations issued to non-union workplaces in New York in Q3 2022? with given SQL schema CREATE TABLE violations (id INT, workplace_id INT, union_status VARCHAR, violation_date DATE); INSERT INTO violations (id, workplace_id, union_status, violation_date) VALUES (1, 2, 'non-union', '2022-07-15');","completion":"SELECT union_status, COUNT(*) as total_violations FROM violations WHERE state = 'New York' AND violation_date >= '2022-07-01' AND violation_date < '2022-10-01' AND union_status = 'non-union' GROUP BY union_status;"}
{"prompt":"What is the average budget for agricultural innovation projects in 'region_1' and 'region_2'? with given SQL schema CREATE TABLE agricultural_innovation (id INT, region VARCHAR(50), budget DECIMAL(10, 2)); INSERT INTO agricultural_innovation (id, region, budget) VALUES (1, 'region_1', 100000.00); INSERT INTO agricultural_innovation (id, region, budget) VALUES (2, 'region_2', 150000.00);","completion":"SELECT AVG(budget) FROM agricultural_innovation WHERE region IN ('region_1', 'region_2');"}
{"prompt":"Who are the astronauts that have flown on missions with a total cost greater than $150,000,000? with given SQL schema CREATE TABLE astronauts (astronaut_name VARCHAR(255), mission_name VARCHAR(255), total_cost DECIMAL(10,2)); INSERT INTO astronauts (astronaut_name, mission_name, total_cost) VALUES ('Astronaut1', 'Mission1', 120000000.00), ('Astronaut2', 'Mission2', 180000000.00), ('Astronaut3', 'Mission3', 100000000.00), ('Astronaut1', 'Mission4', 160000000.00), ('Astronaut4', 'Mission5', 200000000.00);","completion":"SELECT DISTINCT astronaut_name FROM astronauts WHERE total_cost > 150000000.00;"}
{"prompt":"Find the event with the highest attendance and the corresponding date. with given SQL schema CREATE TABLE Events (event_name VARCHAR(255), event_date DATE, attendee_count INT); INSERT INTO Events (event_name, event_date, attendee_count) VALUES ('Art Exhibition', '2022-03-15', 200), ('Dance Performance', '2021-12-20', 150), ('Music Concert', '2022-08-30', 250);","completion":"SELECT event_name, event_date, attendee_count FROM Events WHERE attendee_count = (SELECT MAX(attendee_count) FROM Events);"}
{"prompt":"What is the total amount of funding received by events in the \"Music\" category? with given SQL schema CREATE TABLE Events (EventID INT, Category VARCHAR(50), FundingReceived DECIMAL(10,2)); INSERT INTO Events (EventID, Category, FundingReceived) VALUES (1, 'Music', 10000), (2, 'Theater', 15000); CREATE TABLE Funding (FundingID INT, Amount DECIMAL(10,2), EventID INT); INSERT INTO Funding (FundingID, Amount, EventID) VALUES (1, 5000, 1), (2, 7500, 2);","completion":"SELECT SUM(Funding.Amount) AS TotalFundingReceived FROM Funding INNER JOIN Events ON Funding.EventID = Events.EventID WHERE Events.Category = 'Music';"}
{"prompt":"What is the average content rating for action movies? with given SQL schema CREATE TABLE Movies (title VARCHAR(255), genre VARCHAR(255), rating DECIMAL(3,2)); INSERT INTO Movies (title, genre, rating) VALUES ('MovieA', 'Action', 7.5), ('MovieB', 'Comedy', 8.0), ('MovieC', 'Action', 8.2), ('MovieD', 'Drama', 7.8), ('MovieE', 'Action', 8.5);","completion":"SELECT AVG(rating) FROM Movies WHERE genre = 'Action';"}
{"prompt":"What was the total weight of cannabis sold by each distributor in the second quarter of 2021? with given SQL schema CREATE TABLE sales (id INT, distributor VARCHAR(50), weight DECIMAL(10,2), month INT, year INT);","completion":"SELECT distributor, SUM(weight) FROM sales WHERE month BETWEEN 4 AND 6 AND year = 2021 GROUP BY distributor;"}
{"prompt":"List all renewable energy projects in Africa with their budgets? with given SQL schema CREATE TABLE projects (region TEXT, name TEXT, budget FLOAT); INSERT INTO projects (region, name, budget) VALUES ('Africa', 'Project A', 1000000);","completion":"SELECT name, budget FROM projects WHERE region = 'Africa' AND type = 'renewable';"}
{"prompt":"What is the total amount of international climate finance provided to Small Island Developing States (SIDS) for climate mitigation projects between 2018 and 2020? with given SQL schema CREATE TABLE climate_finance (region VARCHAR(50), year INT, sector VARCHAR(50), is_sids BOOLEAN, amount FLOAT); INSERT INTO climate_finance (region, year, sector, is_sids, amount) VALUES ('Caribbean', 2018, 'Mitigation', TRUE, 1200.5), ('Caribbean', 2019, 'Mitigation', TRUE, 1500.3), ('Caribbean', 2020, 'Mitigation', TRUE, 1800.2), ('Pacific', 2018, 'Mitigation', TRUE, 200.5), ('Pacific', 2019, 'Mitigation', TRUE, 250.3), ('Pacific', 2020, 'Mitigation', TRUE, 300.2);","completion":"SELECT SUM(amount) FROM climate_finance WHERE is_sids = TRUE AND sector = 'Mitigation' AND year BETWEEN 2018 AND 2020;"}
{"prompt":"Insert a new drug with a price 10% higher than the average price with given SQL schema CREATE TABLE drugs (drug_id INT, drug_name VARCHAR(50), price DECIMAL(10, 2)); INSERT INTO drugs (drug_id, drug_name, price) VALUES (1, 'DrugA', 50), (2, 'DrugB', 75), (3, 'DrugC', 100)","completion":"INSERT INTO drugs (drug_id, drug_name, price) VALUES ((SELECT MAX(drug_id) FROM drugs) + 1, 'DrugD', (SELECT AVG(price) * 1.1 FROM drugs))"}
{"prompt":"What was the average cost of clinical trials for antiviral drugs? with given SQL schema CREATE TABLE clinical_trials (drug_class TEXT, trial_cost INTEGER); INSERT INTO clinical_trials","completion":"SELECT AVG(trial_cost) FROM clinical_trials WHERE drug_class = 'antiviral';"}
{"prompt":"Identify the most common causes of death, by age group and gender. with given SQL schema CREATE TABLE deaths (id INT, age_group INT, gender VARCHAR, cause VARCHAR);","completion":"SELECT d.age_group, d.gender, d.cause, COUNT(d.id) AS num_deaths FROM deaths d GROUP BY d.age_group, d.gender, d.cause ORDER BY num_deaths DESC;"}
{"prompt":"Which policy has the lowest healthcare access score in California? with given SQL schema CREATE TABLE policy (name TEXT, state TEXT, score INT);","completion":"SELECT name FROM policy WHERE state = 'California' AND score = (SELECT MIN(score) FROM policy WHERE state = 'California');"}
{"prompt":"Determine the total production of 'cotton' and 'tobacco' by region and state. with given SQL schema CREATE TABLE crops (id INT PRIMARY KEY, state TEXT, region TEXT, crop TEXT, production INT); INSERT INTO crops (id, state, region, crop, production) VALUES (1, 'Texas', 'South', 'Cotton', 1000);","completion":"SELECT region, state, SUM(production) FROM crops WHERE crop IN ('cotton', 'tobacco') GROUP BY region, state;"}
{"prompt":"What is the total CO2 emission of conventional farming in France? with given SQL schema CREATE TABLE emissions (id INT, emission_type VARCHAR(255), quantity INT, unit VARCHAR(255), country VARCHAR(255)); INSERT INTO emissions (id, emission_type, quantity, unit, country) VALUES (1, 'CO2', 2000, 'tonnes', 'France');","completion":"SELECT SUM(quantity) FROM emissions WHERE emission_type = 'CO2' AND country = 'France' AND unit = 'tonnes';"}
{"prompt":"Delete the accommodation record for student 3 with given SQL schema CREATE TABLE student_accommodations (student_id INT, accommodation_year INT, accommodation_type VARCHAR(255)); INSERT INTO student_accommodations (student_id, accommodation_year, accommodation_type) VALUES (1, 2021, 'Hearing'), (2, 2021, 'Visual'), (3, 2020, 'Mobility');","completion":"DELETE FROM student_accommodations WHERE student_id = 3;"}
{"prompt":"What is the maximum and minimum response time for ambulances in each city in the state of California? with given SQL schema CREATE TABLE ambulance_response (id INT, city VARCHAR(255), response_time INT);","completion":"SELECT city, MIN(response_time) as min_response_time, MAX(response_time) as max_response_time FROM ambulance_response GROUP BY city;"}
{"prompt":"Which countries have the highest military expenditure in 2020? with given SQL schema CREATE TABLE MilitaryExpenditure (CountryName TEXT, Expenditure INT, Year INT); INSERT INTO MilitaryExpenditure (CountryName, Expenditure, Year) VALUES ('United States', 778000, 2020), ('China', 252000, 2020), ('India', 72930, 2020), ('Russia', 61700, 2020);","completion":"SELECT CountryName, Expenditure FROM MilitaryExpenditure WHERE Year = 2020 ORDER BY Expenditure DESC;"}
{"prompt":"What is the total number of containers and their total weight transported by each vessel type in the last quarter? with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_type VARCHAR(50)); CREATE TABLE containers (container_id INT, container_weight INT, vessel_id INT, shipped_date DATE); INSERT INTO vessels VALUES (1, 'Container Ship'); INSERT INTO vessels VALUES (2, 'Bulk Carrier'); INSERT INTO containers VALUES (1, 10, 1, '2022-03-01'); INSERT INTO containers VALUES (2, 15, 2, '2022-02-15'); INSERT INTO containers VALUES (3, 20, 1, '2022-01-10');","completion":"SELECT vessels.vessel_type, COUNT(containers.container_id) as num_containers, SUM(containers.container_weight) as total_weight FROM vessels INNER JOIN containers ON vessels.vessel_id = containers.vessel_id WHERE containers.shipped_date > DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY vessels.vessel_type;"}
{"prompt":"Which vessels were involved in accidents, and what were their average ages and capacities? with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(100), age INT, capacity INT); CREATE TABLE accidents (accident_id INT, vessel_id INT); INSERT INTO vessels VALUES (1, 'MV Ever Given', 5); INSERT INTO vessels VALUES (2, 'MV Maersk Mc-Kinney Moller', 12); INSERT INTO accidents VALUES (1, 1); INSERT INTO accidents VALUES (2, 2);","completion":"SELECT vessels.vessel_name, AVG(vessels.age) as avg_age, AVG(vessels.capacity) as avg_capacity FROM vessels INNER JOIN accidents ON vessels.vessel_id = accidents.vessel_id GROUP BY vessels.vessel_name;"}
{"prompt":"Who are the suppliers for the 'metal' department in factory 2? with given SQL schema CREATE TABLE factories (factory_id INT, department VARCHAR(20)); INSERT INTO factories (factory_id, department) VALUES (1, 'textile'), (2, 'metal'), (3, 'textile'); CREATE TABLE suppliers (supplier_id INT, factory_id INT, supplier_name VARCHAR(30)); INSERT INTO suppliers (supplier_id, factory_id, supplier_name) VALUES (1, 1, 'Supplier A'), (2, 2, 'Supplier B'), (3, 2, 'Supplier C'), (4, 3, 'Supplier D');","completion":"SELECT supplier_name FROM suppliers WHERE factory_id = 2 AND department = 'metal';"}
{"prompt":"List the top 3 streaming songs for the Hip-Hop genre in 2021. with given SQL schema CREATE TABLE songs (id INT PRIMARY KEY, title TEXT, year INT, genre TEXT, artist TEXT, streams INT); INSERT INTO songs (id, title, year, genre, artist, streams) VALUES (1, 'Rap God', 2013, 'Hip-Hop', 'Eminem', 100000000), (2, 'Hotline Bling', 2015, 'Hip-Hop', 'Drake', 200000000), (3, 'Sicko Mode', 2018, 'Hip-Hop', 'Travis Scott', 150000000), (4, 'WAP', 2021, 'Hip-Hop', 'Cardi B', 250000000), (5, 'Industry Baby', 2021, 'Hip-Hop', 'Lil Nas X', 300000000), (6, 'Goosebumps', 2016, 'Hip-Hop', 'Travis Scott', 120000000);","completion":"SELECT title, streams FROM songs WHERE genre = 'Hip-Hop' AND year = 2021 ORDER BY streams DESC LIMIT 3;"}
{"prompt":"Insert a new record for a donation of $750 on April 20, 2023, for the Arts program with given SQL schema CREATE TABLE donations (donation_id INT, donation_amount FLOAT, donation_date DATE, program_name VARCHAR(50));","completion":"INSERT INTO donations (donation_id, donation_amount, donation_date, program_name) VALUES (4, 750, '2023-04-20', 'Arts');"}
{"prompt":"How many students in each school have a mental health score below the average? with given SQL schema CREATE TABLE schools (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE students (id INT PRIMARY KEY, school_id INT, mental_health_score INT);","completion":"SELECT s.name, COUNT(st.id) FROM students st JOIN schools s ON st.school_id = s.id GROUP BY st.school_id HAVING AVG(st.mental_health_score) > st.mental_health_score;"}
{"prompt":"What is the maximum number of open pedagogy projects per student? with given SQL schema CREATE TABLE student_open_pedagogy (student_id INT, project_count INT);","completion":"SELECT student_id, MAX(project_count) as max_projects FROM student_open_pedagogy;"}
{"prompt":"What is the total energy consumption (in MWh) for each country in the year 2020? with given SQL schema CREATE TABLE energy_consumption (country VARCHAR(50), year INT, energy_consumption FLOAT); INSERT INTO energy_consumption (country, year, energy_consumption) VALUES ('USA', 2020, 3500.5), ('Canada', 2020, 1200.3), ('Mexico', 2020, 1800.2);","completion":"SELECT e.country, SUM(e.energy_consumption) FROM energy_consumption e WHERE e.year = 2020 GROUP BY e.country;"}
{"prompt":"Delete the record for well 'K11' in 'Indian Ocean'. with given SQL schema CREATE TABLE wells (well_id VARCHAR(10), well_location VARCHAR(20)); INSERT INTO wells (well_id, well_location) VALUES ('K11', 'Indian Ocean'); CREATE TABLE production (well_id VARCHAR(10), production_count INT); INSERT INTO production (well_id, production_count) VALUES ('K11', 15000);","completion":"DELETE FROM production WHERE well_id = 'K11';"}
{"prompt":"Show the number of victories for each team in the UEFA Champions League with given SQL schema CREATE TABLE teams (id INT PRIMARY KEY, name TEXT, league TEXT, wins INT, losses INT, draws INT); INSERT INTO teams (id, name, league, wins, losses, draws) VALUES (1, 'Real Madrid', 'La Liga', 5, 1, 1), (2, 'Bayern Munich', 'Bundesliga', 5, 1, 1), (3, 'Manchester City', 'English Premier League', 5, 1, 0), (4, 'Liverpool', 'English Premier League', 4, 2, 0), (5, 'Ajax', 'Eredivisie', 4, 1, 0), (6, 'Juventus', 'Serie A', 4, 1, 0);","completion":"SELECT name, wins FROM teams;"}
{"prompt":"What is the highest number of home runs hit by a player in a single MLB game? with given SQL schema CREATE TABLE single_game_homeruns (player VARCHAR(100), team VARCHAR(100), homeruns INT); INSERT INTO single_game_homeruns (player, team, homeruns) VALUES ('Bobby Lowe', 'Boston Beaneaters', 4), ('Lou Gehrig', 'New York Yankees', 4);","completion":"SELECT MAX(homeruns) FROM single_game_homeruns;"}
{"prompt":"How many buses in Beijing have been serviced in the last 60 days? with given SQL schema CREATE TABLE beijing_bus (bus_id INT, last_service DATE);","completion":"SELECT COUNT(*) FROM beijing_bus WHERE last_service >= CURDATE() - INTERVAL 60 DAY;"}
{"prompt":"What is the total quantity of materials used per country? with given SQL schema CREATE TABLE materials (id INT, name VARCHAR(50), quantity INT, country VARCHAR(50)); INSERT INTO materials (id, name, quantity, country) VALUES (1, 'organic cotton', 1000, 'India'), (2, 'recycled polyester', 1500, 'China'), (3, 'hemp', 500, 'Brazil');","completion":"SELECT country, SUM(quantity) FROM materials GROUP BY country;"}
{"prompt":"What is the total quantity of recycled polyester used by brands in 2020? with given SQL schema CREATE TABLE recycled_polyester (brand VARCHAR(50), quantity INT, year INT); INSERT INTO recycled_polyester (brand, quantity, year) VALUES ('BrandD', 15000, 2020), ('BrandE', 22000, 2020), ('BrandF', 11000, 2020);","completion":"SELECT SUM(quantity) FROM recycled_polyester WHERE year = 2020;"}
{"prompt":"Who are the top 5 customers in terms of total spending on ethical fashion? with given SQL schema CREATE TABLE Customers (CustomerID INT, Name VARCHAR(50), Spending FLOAT); INSERT INTO Customers (CustomerID, Name, Spending) VALUES (1, 'Alice Johnson', 1500), (2, 'Bob Smith', 1200), (3, 'Charlie Brown', 2000), (4, 'David Williams', 3000), (5, 'Eva Green', 1800), (6, 'Fiona Lee', 2200);","completion":"SELECT Name, SUM(Spending)  FROM Customers ORDER BY SUM(Spending) DESC FETCH FIRST 5 ROWS ONLY;"}
{"prompt":"What is the maximum loan amount for socially responsible loans in the Asia-Pacific region? with given SQL schema CREATE TABLE socially_responsible_loans (loan_id INT, region VARCHAR(20), loan_amount DECIMAL(10,2)); INSERT INTO socially_responsible_loans (loan_id, region, loan_amount) VALUES (101, 'Asia-Pacific', 50000), (102, 'Europe', 30000), (103, 'Asia-Pacific', 70000);","completion":"SELECT MAX(srl.loan_amount) FROM socially_responsible_loans srl WHERE srl.region = 'Asia-Pacific';"}
{"prompt":"Find the top 3 countries with the highest average donation amount in the past 6 months. with given SQL schema CREATE TABLE Donations (DonationID INT, DonorName TEXT, Country TEXT, AmountDonated DECIMAL, DonationDate DATE); INSERT INTO Donations (DonationID, DonorName, Country, AmountDonated, DonationDate) VALUES (1, 'Ravi Sharma', 'India', 1000, '2022-01-15'); INSERT INTO Donations (DonationID, DonorName, Country, AmountDonated, DonationDate) VALUES (2, 'Marie Jones', 'Canada', 2000, '2022-02-10');","completion":"SELECT Country, AVG(AmountDonated) as AvgDonation FROM Donations WHERE DonationDate >= DATEADD(month, -6, GETDATE()) GROUP BY Country ORDER BY AvgDonation DESC LIMIT 3;"}
{"prompt":"Obtain the top 3 countries with the highest number of organic produce suppliers in the organic_produce_suppliers table. with given SQL schema CREATE TABLE organic_produce_suppliers (supplier_id INT, supplier_name VARCHAR(255), country VARCHAR(255));","completion":"SELECT supplier_name, country, COUNT(*) as supplier_count FROM organic_produce_suppliers GROUP BY country ORDER BY supplier_count DESC LIMIT 3;"}
{"prompt":"Update the name of supplier with id 1 to 'New Supplier Name' with given SQL schema CREATE TABLE Suppliers (id INT, name TEXT); INSERT INTO Suppliers (id, name) VALUES (1, 'Supplier1'), (2, 'Supplier2'), (3, 'Supplier3');","completion":"UPDATE Suppliers SET name = 'New Supplier Name' WHERE id = 1;"}
{"prompt":"What are the names and descriptions of violations for food trucks in Los Angeles that serve vegan food? with given SQL schema CREATE TABLE FoodTruck (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); CREATE TABLE Violation (id INT PRIMARY KEY, food_truck_id INT, date DATE, description VARCHAR(255)); CREATE TABLE Menu (id INT PRIMARY KEY, food_truck_id INT, name VARCHAR(255), vegan BOOLEAN);","completion":"SELECT f.name, v.description FROM FoodTruck f INNER JOIN Violation v ON f.id = v.food_truck_id INNER JOIN Menu m ON f.id = m.food_truck_id WHERE m.vegan = TRUE AND f.location = 'Los Angeles';"}
{"prompt":"What is the average water usage for crops in Spain? with given SQL schema CREATE TABLE crops (id INT, name VARCHAR(50), country VARCHAR(50), water_usage INT); INSERT INTO crops (id, name, country, water_usage) VALUES (1, 'Wheat', 'Spain', 1000), (2, 'Barley', 'Spain', 800);","completion":"SELECT AVG(water_usage) FROM crops WHERE country = 'Spain';"}
{"prompt":"Which countries have the highest average delivery times for shipments? with given SQL schema CREATE TABLE Shipments (id INT, weight INT, delivery_date DATE, shipped_date DATE, country VARCHAR(50)); INSERT INTO Shipments (id, weight, delivery_date, shipped_date, country) VALUES (1, 100, '2022-01-05', '2022-01-03', 'USA'), (2, 150, '2022-01-07', '2022-01-06', 'Canada'), (3, 200, '2022-02-12', '2022-02-10', 'Mexico');","completion":"SELECT country, AVG(DATEDIFF(delivery_date, shipped_date)) AS avg_delivery_time FROM Shipments GROUP BY country ORDER BY avg_delivery_time DESC LIMIT 1;"}
{"prompt":"Largest renewable energy project per location with given SQL schema CREATE TABLE renewable_energy_projects (id INT, name VARCHAR(255), location VARCHAR(255), capacity FLOAT); INSERT INTO renewable_energy_projects (id, name, location, capacity) VALUES (1, 'SolarFarm1', 'CityA', 1000), (2, 'WindFarm1', 'CityB', 2000), (3, 'SolarFarm2', 'CityA', 1500);","completion":"SELECT name, location, capacity FROM (SELECT name, location, capacity, ROW_NUMBER() OVER (PARTITION BY location ORDER BY capacity DESC) as rn FROM renewable_energy_projects) AS subquery WHERE rn = 1;"}
{"prompt":"What is the total installed capacity of renewable energy projects in the US? with given SQL schema CREATE TABLE Renewable_Energy_Projects (id INT, country VARCHAR(20), installed_capacity FLOAT); INSERT INTO Renewable_Energy_Projects (id, country, installed_capacity) VALUES (1, 'US', 1200.5), (2, 'Canada', 1500.2), (3, 'Mexico', 900.1);","completion":"SELECT SUM(installed_capacity) FROM Renewable_Energy_Projects WHERE country = 'US';"}
{"prompt":"What is the market share of Hotel X in terms of revenue generated by hotels in New York City? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, revenue FLOAT); INSERT INTO hotels (hotel_id, hotel_name, city, revenue) VALUES (1, 'Hotel X', 'New York City', 1000000), (2, 'Hotel Y', 'New York City', 800000), (3, 'Hotel Z', 'New York City', 700000);","completion":"SELECT (hotels.revenue \/ (SELECT SUM(revenue) FROM hotels WHERE city = 'New York City') * 100) as market_share FROM hotels WHERE hotel_name = 'Hotel X';"}
{"prompt":"How many artworks were created by artists from France? with given SQL schema CREATE TABLE Artists(id INT, name VARCHAR(255), birthplace VARCHAR(255)); INSERT INTO Artists(id, name, birthplace) VALUES (1, 'Claude Monet', 'Paris, France'); INSERT INTO Artists(id, name, birthplace) VALUES (2, 'Henri Matisse', 'Le Cateau-Cambr\u00e9sis, France'); INSERT INTO Artists(id, name, birthplace) VALUES (3, 'Pablo Picasso', 'M\u00e1laga, Spain');","completion":"SELECT COUNT(*) FROM Artists WHERE Artists.birthplace LIKE '%France%';"}
{"prompt":"How many records are in the 'species' table? with given SQL schema CREATE TABLE species (id INT, name VARCHAR(255), population INT); INSERT INTO species (id, name, population) VALUES (1, 'polar_bear', 25000); INSERT INTO species (id, name, population) VALUES (2, 'arctic_fox', 30000);","completion":"SELECT COUNT(*) FROM species;"}
{"prompt":"Update population of 'Reindeer' in animals table by 30% with given SQL schema CREATE TABLE animals (id INT PRIMARY KEY, species VARCHAR(50), population INT, region VARCHAR(50)); INSERT INTO animals (id, species, population, region) VALUES (1, 'Reindeer', 5000, 'Arctic');","completion":"WITH cte AS (UPDATE animals SET population = population * 1.3 WHERE species = 'Reindeer') SELECT * FROM animals;"}
{"prompt":"What is the maximum number of years a traditional art form has been preserved in each country? with given SQL schema CREATE TABLE countries (id INT, name TEXT); INSERT INTO countries (id, name) VALUES (1, 'Nigeria'), (2, 'Brazil'); CREATE TABLE art_forms (id INT, country_id INT, name TEXT, year_preserved INT); INSERT INTO art_forms (id, country_id, name, year_preserved) VALUES (1, 1, 'Tie-dye', 500), (2, 1, 'Batik', 1000), (3, 2, 'Capoeira', 400);","completion":"SELECT c.name, MAX(af.year_preserved) FROM countries c JOIN art_forms af ON c.id = af.country_id GROUP BY c.id;"}
{"prompt":"What was the total construction cost for projects in 'Urban' area? with given SQL schema CREATE TABLE InfrastructureProjects (id INT, name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO InfrastructureProjects (id, name, location, cost) VALUES (1, 'Dam Reconstruction', 'Urban', 5000000); INSERT INTO InfrastructureProjects (id, name, location, cost) VALUES (2, 'Bridge Construction', 'Rural', 3000000);","completion":"SELECT SUM(cost) FROM InfrastructureProjects WHERE location = 'Urban';"}
{"prompt":"Calculate the average number of annual visitors to India from 2018 to 2023 who prioritize sustainable tourism. with given SQL schema CREATE TABLE india_tourism (year INT, visitors INT, sustainability_rating INT); INSERT INTO india_tourism (year, visitors, sustainability_rating) VALUES (2018, 5000000, 3), (2019, 5500000, 4), (2020, 4000000, 5), (2021, 4500000, 5), (2022, 6000000, 4), (2023, 6500000, 4);","completion":"SELECT AVG(visitors) FROM india_tourism WHERE sustainability_rating >= 4 AND year BETWEEN 2018 AND 2023;"}
{"prompt":"Provide the number of tourists visiting Canada, grouped by continent. with given SQL schema CREATE TABLE tourism_stats (visitor_country VARCHAR(255), continent VARCHAR(255)); INSERT INTO tourism_stats (visitor_country, continent) VALUES ('Canada', 'North America');","completion":"SELECT continent, COUNT(*) FROM tourism_stats GROUP BY continent;"}
{"prompt":"How many TV shows were produced in Japan between 2015 and 2020, grouped by genre, and what is the most popular genre? with given SQL schema CREATE TABLE tv_shows (id INT, title VARCHAR(100), rating FLOAT, production_country VARCHAR(50), release_year INT, genre VARCHAR(50)); INSERT INTO tv_shows (id, title, rating, production_country, release_year, genre) VALUES (1, 'TV Show1', 7.5, 'Japan', 2016, 'Comedy'), (2, 'TV Show2', 8.2, 'Japan', 2018, 'Drama'), (3, 'TV Show3', 6.9, 'Japan', 2019, 'Comedy');","completion":"SELECT genre, COUNT(*) as show_count FROM tv_shows WHERE production_country = 'Japan' AND release_year BETWEEN 2015 AND 2020 GROUP BY genre ORDER BY show_count DESC LIMIT 1;"}
{"prompt":"How many journalists were arrested in Middle East in the last 3 months? with given SQL schema CREATE TABLE journalist_arrests (id INT, journalist VARCHAR(255), location VARCHAR(255), date DATE); INSERT INTO journalist_arrests (id, journalist, location, date) VALUES (4, 'Journalist 3', 'Middle East', '2023-01-01'), (5, 'Journalist 4', 'Middle East', '2023-02-01'), (6, 'Journalist 5', 'Middle East', '2023-03-01');","completion":"SELECT COUNT(*) FROM journalist_arrests WHERE location = 'Middle East' AND date >= DATEADD(month, -3, GETDATE());"}
{"prompt":"What is the average watch time per user for each content category? with given SQL schema CREATE TABLE user_content_views (view_id INT, user_id INT, content_id INT, view_date DATE, watch_time INT); CREATE TABLE content (content_id INT, content_category VARCHAR(20));","completion":"SELECT content.content_category, AVG(user_content_views.watch_time) as avg_watch_time FROM user_content_views JOIN content ON user_content_views.content_id = content.content_id GROUP BY content.content_category;"}
{"prompt":"What is the inventory level for specific ingredients? with given SQL schema CREATE TABLE inventory (ingredient VARCHAR(255), quantity INT); INSERT INTO inventory (ingredient, quantity) VALUES ('Chicken', 500), ('Beef', 300), ('Potatoes', 800), ('Salt', 100), ('Pepper', 50);","completion":"SELECT ingredient, quantity FROM inventory WHERE ingredient IN ('Chicken', 'Beef', 'Potatoes');"}
{"prompt":"What is the total sales for each dish category by month? with given SQL schema CREATE TABLE Orders (OrderID INT, DishID INT, Quantity INT, OrderDate DATE); CREATE TABLE Dishes (DishID INT, DishName VARCHAR(50), Category VARCHAR(50), Price DECIMAL(5,2)); INSERT INTO Dishes (DishID, DishName, Category, Price) VALUES (1, 'Veggie Pizza', 'Pizza', 12.99), (2, 'Margherita Pizza', 'Pizza', 10.99), (3, 'Chicken Caesar Salad', 'Salad', 15.49), (4, 'Garden Salad', 'Salad', 11.99); INSERT INTO Orders (OrderID, DishID, Quantity, OrderDate) VALUES (1, 1, 2, '2022-01-01'), (2, 2, 1, '2022-01-02'), (3, 3, 3, '2022-01-03'), (4, 1, 1, '2022-01-04'), (5, 4, 2, '2022-02-05');","completion":"SELECT EXTRACT(MONTH FROM OrderDate) as Month, Category, SUM(Quantity * Price) as TotalSales FROM Orders JOIN Dishes ON Orders.DishID = Dishes.DishID GROUP BY Month, Category;"}
{"prompt":"Calculate the total CO2 emissions for each country. with given SQL schema CREATE TABLE EnvironmentalImpact (SiteID INT, Country VARCHAR(50), Pollutant VARCHAR(50), AmountDecimal FLOAT, Measurement VARCHAR(50), Date DATE); ALTER TABLE MineSites ADD CONSTRAINT FK_SiteID FOREIGN KEY (SiteID) REFERENCES EnvironmentalImpact(SiteID); CREATE VIEW CO2View AS SELECT Country, SUM(AmountDecimal) AS TotalCO2Emissions FROM EnvironmentalImpact WHERE Pollutant = 'CO2' GROUP BY Country;","completion":"SELECT CO2View.Country, CO2View.TotalCO2Emissions FROM CO2View ORDER BY TotalCO2Emissions DESC;"}
{"prompt":"Show the number of mining equipment units, by type, that were added to the 'equipment_inventory' table in 2022. with given SQL schema CREATE TABLE equipment_inventory_history (id INT, equipment_type VARCHAR(50), quantity INT, transaction_date DATE); INSERT INTO equipment_inventory_history (id, equipment_type, quantity, transaction_date) VALUES (1, 'Excavator', 5, '2022-01-01'), (2, 'Drill', 3, '2022-02-01'), (3, 'Haul Truck', 2, '2022-03-01');","completion":"SELECT equipment_type, SUM(quantity) as total_added FROM equipment_inventory_history WHERE transaction_date >= '2022-01-01' AND transaction_date < '2023-01-01' GROUP BY equipment_type;"}
{"prompt":"Insert new records of network infrastructure investments in the 'Africa' region. with given SQL schema CREATE TABLE investments(id INT, investment VARCHAR(25), date DATE, region VARCHAR(20));","completion":"INSERT INTO investments(id, investment, date, region) VALUES (4, 'New data center', '2023-01-01', 'Africa'), (5, 'Fiber optic expansion', '2023-02-01', 'Africa');"}
{"prompt":"List all mobile subscribers who have experienced a network outage in the past 7 days, along with the number and duration of each outage. with given SQL schema CREATE TABLE mobile_subscribers (id INT, latitude DECIMAL(9,6), longitude DECIMAL(9,6), monthly_data_usage DECIMAL(10,2));CREATE VIEW network_issues AS SELECT subscriber_id, date, issue_type, duration FROM network_outages;","completion":"SELECT ms.id, ms.latitude, ms.longitude, ms.monthly_data_usage, COUNT(ni.subscriber_id) as num_outages, SUM(ni.duration) as total_outage_duration FROM mobile_subscribers ms INNER JOIN network_issues ni ON ms.id = ni.subscriber_id WHERE ni.date >= DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY) GROUP BY ms.id;"}
{"prompt":"Update conservation status of 'Blue Whale' with given SQL schema CREATE TABLE species (id INT PRIMARY KEY, name VARCHAR(255), population INT, conservation_status VARCHAR(255), last_sighting DATE); INSERT INTO species (id, name, population, conservation_status, last_sighting) VALUES (1, 'Blue Whale', 10000, 'Endangered', '2020-01-01');","completion":"UPDATE species SET conservation_status = 'Critically Endangered' WHERE name = 'Blue Whale';"}
{"prompt":"Create a new table named 'game_stats' with columns 'session_id', 'game_mode', 'kills', 'deaths', 'assists', 'score' with given SQL schema CREATE SCHEMA if not exists gaming; CREATE TABLE gaming.game_sessions (id INT, player_id INT, start_time TIMESTAMP, end_time TIMESTAMP, duration INT);","completion":"CREATE TABLE gaming.game_stats (session_id INT, game_mode VARCHAR(50), kills INT, deaths INT, assists INT, score INT);"}
{"prompt":"What is the average session length for each game genre in the last month, sorted by average session length. with given SQL schema CREATE TABLE game_sessions(id INT, user_id INT, game_name VARCHAR(50), start_time DATETIME, end_time DATETIME); CREATE TABLE games(id INT, name VARCHAR(50), genre VARCHAR(50));","completion":"SELECT genres.genre, AVG(TIMESTAMPDIFF(SECOND, start_time, end_time)) as avg_session_length FROM game_sessions JOIN games ON game_sessions.game_name = games.name JOIN (SELECT DISTINCT game_name, genre FROM game_sessions JOIN games ON game_sessions.game_name = games.name) genres ON games.name = genres.game_name WHERE start_time >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY genres.genre ORDER BY avg_session_length DESC;"}
{"prompt":"What is the most popular genre of virtual reality games in Europe? with given SQL schema CREATE TABLE VRGames (GameID INT, GameName VARCHAR(100), Genre VARCHAR(50), Popularity INT, PlayerCountry VARCHAR(50)); INSERT INTO VRGames (GameID, GameName, Genre, Popularity, PlayerCountry) VALUES (1, 'VRGameA', 'Action', 10000, 'Germany'), (2, 'VRGameB', 'Simulation', 12000, 'France'), (3, 'VRGameC', 'Action', 15000, 'Germany');","completion":"SELECT Genre, SUM(Popularity) as TotalPopularity FROM VRGames WHERE PlayerCountry LIKE 'Europe%' GROUP BY Genre ORDER BY TotalPopularity DESC;"}
{"prompt":"Which esports event has the most participants? with given SQL schema CREATE TABLE EventParticipants (ParticipantID INT, EventID INT, ParticipantName VARCHAR(50)); INSERT INTO EventParticipants (ParticipantID, EventID) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 3);","completion":"SELECT EventID, COUNT(*) as ParticipantCount FROM EventParticipants GROUP BY EventID ORDER BY ParticipantCount DESC LIMIT 1;"}
{"prompt":"What is the total budget allocated for all departments in 'CityC'? with given SQL schema CREATE TABLE Budget (City VARCHAR(10), Department VARCHAR(20), Amount INT); INSERT INTO Budget (City, Department, Amount) VALUES ('CityC', 'Healthcare', 15000000), ('CityC', 'Education', 20000000), ('CityC', 'Transportation', 10000000);","completion":"SELECT SUM(Amount) FROM Budget WHERE City = 'CityC';"}
{"prompt":"What is the total healthcare budget for coastal districts? with given SQL schema CREATE TABLE districts (district_id INT, district_name VARCHAR(20), coast VARCHAR(10)); INSERT INTO districts (district_id, district_name, coast) VALUES (1, 'Seaside', 'Coast'), (2, 'Greenfield', 'Inland'), (3, 'Harborside', 'Coast'); CREATE TABLE budget_allocation (budget_id INT, district_id INT, sector VARCHAR(20), budget_amount INT); INSERT INTO budget_allocation (budget_id, district_id, sector, budget_amount) VALUES (1, 1, 'Education', 50000), (2, 1, 'Healthcare', 80000), (3, 2, 'Education', 60000), (4, 2, 'Healthcare', 70000), (5, 3, 'Education', 40000), (6, 3, 'Healthcare', 85000);","completion":"SELECT SUM(budget_amount) FROM budget_allocation WHERE sector = 'Healthcare' AND districts.coast = 'Coast';"}
{"prompt":"Delete the record of Erbium production in Q2 2020 from the Japanese mine. with given SQL schema CREATE TABLE production (id INT, mine_id INT, element TEXT, production FLOAT, datetime DATE); INSERT INTO production (id, mine_id, element, production, datetime) VALUES (1, 1, 'Erbium', 130.5, '2020-04-01'), (2, 2, 'Holmium', 170.2, '2020-04-15');","completion":"DELETE FROM production WHERE mine_id = 1 AND element = 'Erbium' AND QUARTER(datetime) = 2 AND YEAR(datetime) = 2020;"}
{"prompt":"What is the total production of Neodymium for each country in 2020? with given SQL schema CREATE TABLE production (country VARCHAR(20), element VARCHAR(10), year INT, quantity INT); INSERT INTO production (country, element, year, quantity) VALUES ('China', 'Neodymium', 2020, 120000), ('Australia', 'Neodymium', 2020, 8000);","completion":"SELECT country, SUM(quantity) as total_production FROM production WHERE element = 'Neodymium' AND year = 2020 GROUP BY country;"}
{"prompt":"Update the revenue of 'Chicken Shawarma' dish in the restaurant_menu table. with given SQL schema CREATE TABLE restaurant_menu (dish VARCHAR(255), category VARCHAR(255), price DECIMAL(10, 2)); INSERT INTO restaurant_menu (dish, category, price) VALUES ('Chicken Shawarma', 'Middle Eastern', 8.99);","completion":"UPDATE restaurant_menu SET price = 9.99 WHERE dish = 'Chicken Shawarma';"}
{"prompt":"What are the total sales for all restaurants located in 'Downtown'? with given SQL schema CREATE TABLE restaurants (id INT, name TEXT, location TEXT); INSERT INTO restaurants (id, name, location) VALUES (1, 'Restaurant A', 'Downtown'), (2, 'Restaurant B', 'Uptown');","completion":"SELECT SUM(sales) FROM sales JOIN restaurants ON sales.restaurant_id = restaurants.id WHERE restaurants.location = 'Downtown';"}
{"prompt":"Which stores in Tokyo have sold more than 30 units of eco-friendly cleaning products since their launch? with given SQL schema CREATE TABLE products(product_id VARCHAR(20), product_name VARCHAR(20), launched_date DATE); INSERT INTO products (product_id, product_name, launched_date) VALUES ('Eco-friendly Cleaner', '2022-01-01'); CREATE TABLE stores(store_id VARCHAR(20), store_location VARCHAR(20)); INSERT INTO stores (store_id, store_location) VALUES ('Tokyo Store 1', 'Tokyo'), ('Tokyo Store 2', 'Tokyo'); CREATE TABLE sales(store_id VARCHAR(20), product_id VARCHAR(20), sale_date DATE, quantity INTEGER); INSERT INTO sales (store_id, product_id, sale_date, quantity) VALUES ('Tokyo Store 1', 'Eco-friendly Cleaner', '2022-01-05', 20), ('Tokyo Store 2', 'Eco-friendly Cleaner', '2022-01-07', 40);","completion":"SELECT store_location, SUM(quantity) FROM sales JOIN stores ON sales.store_id = stores.store_id JOIN products ON sales.product_id = products.product_id WHERE products.product_name = 'Eco-friendly Cleaner' AND sale_date >= products.launched_date AND store_location = 'Tokyo' GROUP BY store_location HAVING SUM(quantity) > 30;"}
{"prompt":"What is the name of the spacecraft with the highest mass? with given SQL schema CREATE TABLE Spacecraft (id INT, name VARCHAR(30), mass FLOAT); INSERT INTO Spacecraft (id, name, mass) VALUES (1, 'Nebula', 20000.0); INSERT INTO Spacecraft (id, name, mass) VALUES (2, 'Pulsar', 18000.0);","completion":"SELECT name FROM Spacecraft WHERE mass = (SELECT MAX(mass) FROM Spacecraft);"}
{"prompt":"List all ticket sales records for the western_conference in the ticket_sales table. with given SQL schema CREATE TABLE ticket_sales (id INT, team VARCHAR(50), conference VARCHAR(50), tickets_sold INT, revenue FLOAT);","completion":"SELECT * FROM ticket_sales WHERE conference = 'western_conference';"}
{"prompt":"What is the total number of tickets sold in events with 'Basketball' as the sport in the 'events' table? with given SQL schema CREATE TABLE events (event_id INT, sport VARCHAR(10), athlete_count INT, attendees INT, ticket_price DECIMAL(5,2));","completion":"SELECT SUM(attendees * ticket_price) FROM events WHERE sport = 'Basketball';"}
{"prompt":"How many vulnerabilities were found in the last quarter for the 'cloud' asset type? with given SQL schema CREATE TABLE vulnerabilities (id INT, vuln_date DATE, asset_type VARCHAR(50)); INSERT INTO vulnerabilities (id, vuln_date, asset_type) VALUES (1, '2022-01-01', 'cloud'), (2, '2022-02-05', 'server'), (3, '2022-03-10', 'workstation');","completion":"SELECT COUNT(*) as vulnerability_count FROM vulnerabilities WHERE vuln_date >= DATEADD(quarter, -1, GETDATE()) AND asset_type = 'cloud';"}
{"prompt":"What is the average severity of vulnerabilities detected in the last month for the finance department? with given SQL schema CREATE TABLE vulnerabilities (id INT, department VARCHAR(255), severity INT, detection_date DATE); INSERT INTO vulnerabilities (id, department, severity, detection_date) VALUES (1, 'finance', 7, '2022-01-05'), (2, 'finance', 5, '2022-02-10'), (3, 'HR', 3, '2022-01-02');","completion":"SELECT AVG(severity) FROM vulnerabilities WHERE detection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND department = 'finance';"}
{"prompt":"What were the top 5 malware types by the number of incidents in the North America region in 2021? with given SQL schema CREATE TABLE malware_incidents (id INT, malware_type VARCHAR(255), incident_count INT, region VARCHAR(255), occurrence_date DATE); INSERT INTO malware_incidents (id, malware_type, incident_count, region, occurrence_date) VALUES (1, 'Ransomware', 150, 'North America', '2021-01-01');","completion":"SELECT malware_type, incident_count FROM malware_incidents WHERE region = 'North America' AND occurrence_date >= '2021-01-01' AND occurrence_date < '2022-01-01' GROUP BY malware_type ORDER BY incident_count DESC LIMIT 5;"}
{"prompt":"What is the total number of autonomous vehicles in Berlin, Germany and Madrid, Spain? with given SQL schema CREATE TABLE autonomous_vehicles (vehicle_id INT, city VARCHAR(20), country VARCHAR(20)); INSERT INTO autonomous_vehicles (vehicle_id, city, country) VALUES (1, 'Berlin', 'Germany'), (2, 'Berlin', 'Germany'), (3, 'Madrid', 'Spain'), (4, 'Madrid', 'Spain');","completion":"SELECT COUNT(*) FROM autonomous_vehicles WHERE city IN ('Berlin', 'Madrid') AND country IN ('Germany', 'Spain');"}
{"prompt":"Insert a new record in the claims table with claim_id 3, policy_id 2, claim_amount 2500, and claim_date '2022-02-12' with given SQL schema CREATE TABLE claims (claim_id INT, policy_id INT, claim_amount DECIMAL(10, 2), claim_date DATE);","completion":"INSERT INTO claims (claim_id, policy_id, claim_amount, claim_date) VALUES (3, 2, 2500, '2022-02-12');"}
{"prompt":"What is the minimum wage for workers in the 'food' sector, and how many workers are paid this amount? with given SQL schema CREATE TABLE if not exists wages (id INT PRIMARY KEY, sector VARCHAR(255), wage DECIMAL(10, 2)); INSERT INTO wages (id, sector, wage) VALUES (1, 'food', 12.00), (2, 'food', 12.00), (3, 'manufacturing', 15.00);","completion":"SELECT MIN(wage), COUNT(*) FROM wages WHERE sector = 'food' GROUP BY wage;"}
{"prompt":"What are the maximum and minimum ranges of electric vehicles grouped by make? with given SQL schema CREATE TABLE Electric_Vehicles (Id INT, Make VARCHAR(255), Model VARCHAR(255), Year INT, Range INT); INSERT INTO Electric_Vehicles (Id, Make, Model, Year, Range) VALUES (1, 'Tesla', 'Model 3', 2020, 263); INSERT INTO Electric_Vehicles (Id, Make, Model, Year, Range) VALUES (2, 'Chevrolet', 'Bolt', 2020, 259); INSERT INTO Electric_Vehicles (Id, Make, Model, Year, Range) VALUES (3, 'Nissan', 'Leaf', 2020, 150);","completion":"SELECT Make, MAX(Range) AS Max_Range, MIN(Range) AS Min_Range FROM Electric_Vehicles GROUP BY Make;"}
{"prompt":"What is the change in electric vehicle sales, compared to the previous month, per make? with given SQL schema CREATE TABLE MonthlyElectricVehicleSales (id INT, sale_date DATE, make VARCHAR(20), model VARCHAR(20), num_vehicles_sold INT); INSERT INTO MonthlyElectricVehicleSales (id, sale_date, make, model, num_vehicles_sold) VALUES (1, '2022-01-01', 'Tesla', 'Model S', 1200), (2, '2022-01-01', 'Tesla', 'Model 3', 1500), (3, '2022-02-01', 'Tesla', 'Model S', 1250), (4, '2022-02-01', 'Tesla', 'Model 3', 1600), (5, '2022-03-01', 'Tesla', 'Model S', 1300), (6, '2022-03-01', 'Tesla', 'Model 3', 1700), (7, '2022-01-01', 'Volvo', 'XC60', 200), (8, '2022-02-01', 'Volvo', 'XC60', 250), (9, '2022-03-01', 'Volvo', 'XC60', 300);","completion":"SELECT make, EXTRACT(MONTH FROM sale_date) AS month, (num_vehicles_sold - LAG(num_vehicles_sold) OVER (PARTITION BY make ORDER BY EXTRACT(MONTH FROM sale_date))) * 100.0 \/ LAG(num_vehicles_sold) OVER (PARTITION BY make ORDER BY EXTRACT(MONTH FROM sale_date)) AS pct_change  FROM MonthlyElectricVehicleSales;"}
{"prompt":"Find the number of users who have never used wearable technology. with given SQL schema CREATE TABLE Users (id INT, uses_wearable BOOLEAN); INSERT INTO Users (id, uses_wearable) VALUES (1, false), (2, true), (3, false), (4, true), (5, false);","completion":"SELECT COUNT(*) FROM Users WHERE uses_wearable = false;"}
{"prompt":"List the number of members who joined in each month, for the last year. with given SQL schema CREATE TABLE members (id INT, join_date DATE);","completion":"SELECT MONTH(join_date) as month, COUNT(*) as members_joined FROM members WHERE join_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY month;"}
{"prompt":"Find the AI safety incidents that occurred in Europe and were related to data privacy or unintended behavior. with given SQL schema CREATE TABLE eu_ai_safety_incidents (id INT, incident_name VARCHAR(255), country VARCHAR(255), incident_category VARCHAR(255)); INSERT INTO eu_ai_safety_incidents (id, incident_name, country, incident_category) VALUES (1, 'IncidentF', 'Germany', 'Data Privacy'), (2, 'IncidentG', 'France', 'Unintended Behavior'), (3, 'IncidentH', 'UK', 'Data Privacy');","completion":"SELECT * FROM eu_ai_safety_incidents WHERE country IN ('Germany', 'France', 'UK') AND incident_category IN ('Data Privacy', 'Unintended Behavior');"}
{"prompt":"What is the distribution of algorithm types used in explainable AI research? with given SQL schema CREATE TABLE explainable_ai (id INT, research_name VARCHAR(50), algorithm_type VARCHAR(50)); INSERT INTO explainable_ai (id, research_name, algorithm_type) VALUES (1, 'Interpretable Neural Networks', 'Neural Network'), (2, 'SHAP Values', 'Decision Tree'), (3, 'LIME', 'Logistic Regression');","completion":"SELECT algorithm_type, COUNT(*) FROM explainable_ai GROUP BY algorithm_type;"}
{"prompt":"What is the total cost of all agricultural innovation projects, ordered by the project cost in descending order? with given SQL schema CREATE TABLE agri_innovation_projects (id INT, project_name VARCHAR(255), location VARCHAR(255), sector VARCHAR(255), cost FLOAT); INSERT INTO agri_innovation_projects (id, project_name, location, sector, cost) VALUES (1, 'Precision Agriculture', 'Village X', 'Agriculture', 35000.00), (2, 'Drip Irrigation', 'Village Y', 'Agriculture', 28000.00), (3, 'Solar Powered Cold Storage', 'Village Z', 'Agriculture', 52000.00);","completion":"SELECT SUM(cost) as total_cost FROM agri_innovation_projects ORDER BY total_cost DESC;"}
{"prompt":"What is the maximum amount of dissolved oxygen (DO) in the ocean_health table for each month in 2021? with given SQL schema CREATE TABLE ocean_health (date DATE, do_value INT); INSERT INTO ocean_health (date, do_value) VALUES ('2021-01-01', 8), ('2021-01-02', 7), ('2021-02-01', 6), ('2021-02-02', 9);","completion":"SELECT EXTRACT(MONTH FROM date) as month, MAX(do_value) as max_do_value FROM ocean_health WHERE date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY EXTRACT(MONTH FROM date);"}
{"prompt":"What is the stocking density (fish per cubic meter) for each species in 2021? with given SQL schema CREATE TABLE fish_stock (species VARCHAR(255), year INT, stocking_density INT); INSERT INTO fish_stock (species, year, stocking_density) VALUES ('Salmon', 2021, 30), ('Tilapia', 2021, 50), ('Catfish', 2021, 40);","completion":"SELECT species, AVG(stocking_density) as avg_density FROM fish_stock WHERE year = 2021 GROUP BY species;"}
{"prompt":"What is the number of employees for contractors who implemented sustainable practices? with given SQL schema CREATE TABLE Contractors (ContractorID INT, ContractorName VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Country VARCHAR(50)); CREATE TABLE LaborStatistics (StatisticID INT, ContractorID INT, EmployeeCount INT, HourlyRate FLOAT, Date DATE); CREATE TABLE SustainablePractices (PracticeID INT, ContractorID INT, PracticeType VARCHAR(50), ImplementationDate DATE); INSERT INTO Contractors (ContractorID, ContractorName, City, State, Country) VALUES (4, 'MNO Construction', 'Miami', 'FL', 'USA'); INSERT INTO LaborStatistics (StatisticID, ContractorID, EmployeeCount, HourlyRate, Date) VALUES (1, 4, 60, 40, '2022-01-05'); INSERT INTO SustainablePractices (PracticeID, ContractorID, PracticeType, ImplementationDate) VALUES (1, 4, 'Rainwater Harvesting', '2022-02-01');","completion":"SELECT ContractorID FROM SustainablePractices; SELECT SUM(EmployeeCount) FROM LaborStatistics WHERE ContractorID IN (SELECT ContractorID FROM SustainablePractices);"}
{"prompt":"What is the average price of an eighth of an ounce of cannabis in each dispensary? with given SQL schema CREATE TABLE Prices (dispensary VARCHAR(255), price DECIMAL(10,2), product VARCHAR(255)); INSERT INTO Prices (dispensary, price, product) VALUES ('Dispensary A', 35, 'Eighth'), ('Dispensary A', 40, 'Quarter'), ('Dispensary B', 30, 'Eighth'), ('Dispensary B', 45, 'Quarter');","completion":"SELECT dispensary, AVG(price) FROM Prices WHERE product = 'Eighth' GROUP BY dispensary;"}
{"prompt":"Insert a new case with the following data: case_id 6, client_name 'Jim Brown', case_type 'traffic', case_outcome 'pending', case_date '2022-05-05' into the 'traffic' table with given SQL schema CREATE TABLE traffic (case_id INT, client_name VARCHAR(50), case_type VARCHAR(20), case_outcome VARCHAR(20), case_date DATE);","completion":"INSERT INTO traffic (case_id, client_name, case_type, case_outcome, case_date) VALUES (6, 'Jim Brown', 'traffic', 'pending', '2022-05-05');"}
{"prompt":"Calculate the average usage hours for machines that were maintained in the last 30 days. with given SQL schema CREATE TABLE machine_maintenance_new2 (id INT PRIMARY KEY, machine_name VARCHAR(50), last_maintenance_date DATE); CREATE TABLE machine_usage_new2 (id INT PRIMARY KEY, machine_name VARCHAR(50), usage_hours INT);","completion":"SELECT AVG(usage_hours) as avg_usage_hours FROM machine_usage_new2 m INNER JOIN machine_maintenance_new2 mm ON m.machine_name = mm.machine_name WHERE mm.last_maintenance_date > CURDATE() - INTERVAL 30 DAY;"}
{"prompt":"Identify drugs that were approved but not launched in the market. with given SQL schema CREATE TABLE drug_approval (drug_id INT, approval_date DATE); INSERT INTO drug_approval (drug_id, approval_date) VALUES (101, '2020-01-01'), (102, '2019-06-15'), (103, '2021-03-20'); CREATE TABLE drug_launch (drug_id INT, launch_date DATE); INSERT INTO drug_launch (drug_id, launch_date) VALUES (101, '2020-02-01'), (103, '2021-04-01');","completion":"SELECT da.drug_id FROM drug_approval da LEFT JOIN drug_launch dl ON da.drug_id = dl.drug_id WHERE dl.drug_id IS NULL;"}
{"prompt":"What was the total sales revenue for 'DrugB' in Q1 2021 in 'Europe'? with given SQL schema CREATE TABLE sales (drug_name TEXT, sale_date DATE, revenue FLOAT); INSERT INTO sales (drug_name, sale_date, revenue) VALUES ('DrugB', '2021-01-01', 12000), ('DrugB', '2021-01-02', 13000), ('DrugB', '2021-04-01', 14000), ('DrugB', '2021-04-02', 15000);","completion":"SELECT SUM(revenue) FROM sales WHERE drug_name = 'DrugB' AND sale_date BETWEEN '2021-01-01' AND '2021-01-31';"}
{"prompt":"Which wholesalers offer the deepest discounts on drugs in the Central region, and how many drugs do they discount? with given SQL schema CREATE TABLE wholesaler_discounts (id INT PRIMARY KEY, drug_id INT, wholesaler VARCHAR(255), discount_rate DECIMAL(4,2)); CREATE TABLE drugs (id INT PRIMARY KEY, region VARCHAR(255));","completion":"SELECT w.wholesaler, COUNT(w.id) as drugs_discounted, AVG(w.discount_rate) as average_discount_rate FROM wholesaler_discounts w INNER JOIN drugs d ON w.drug_id = d.id WHERE d.region = 'Central' GROUP BY w.wholesaler ORDER BY average_discount_rate DESC, drugs_discounted DESC;"}
{"prompt":"What is the hospital capacity utilization rate by hospital name, ordered within each state? with given SQL schema CREATE TABLE CapacityUtilization (StateName VARCHAR(50), HospitalName VARCHAR(50), Capacity INT, Utilization INT); INSERT INTO CapacityUtilization (StateName, HospitalName, Capacity, Utilization) VALUES ('Alabama', 'HospitalA', 250, 75), ('Alabama', 'HospitalB', 300, 80), ('Alaska', 'HospitalX', 50, 60), ('Arizona', 'HospitalY', 400, 90), ('Arizona', 'HospitalZ', 350, 85);","completion":"SELECT StateName, HospitalName, Utilization, PERCENT_RANK() OVER (PARTITION BY StateName ORDER BY Utilization DESC) AS PercentRank FROM CapacityUtilization"}
{"prompt":"What is the number of dental visits per year in each state? with given SQL schema CREATE TABLE dental_visits (id INT, state TEXT, visits INT); INSERT INTO dental_visits (id, state, visits) VALUES (1, 'California', 2); INSERT INTO dental_visits (id, state, visits) VALUES (2, 'New York', 3);","completion":"SELECT state, AVG(visits) FROM dental_visits GROUP BY state;"}
{"prompt":"What is the total number of mental health visits in rural areas in the US? with given SQL schema CREATE TABLE mental_health_visits (visit_id INT, location VARCHAR(20)); INSERT INTO mental_health_visits (visit_id, location) VALUES (1, 'Rural'); INSERT INTO mental_health_visits (visit_id, location) VALUES (2, 'Urban');","completion":"SELECT COUNT(*) FROM mental_health_visits WHERE location = 'Rural';"}
{"prompt":"List all companies founded by individuals from the ASEAN region with given SQL schema CREATE TABLE company_founding(id INT PRIMARY KEY, company_name VARCHAR(100), founder_country VARCHAR(50)); INSERT INTO company_founding VALUES (1, 'Acme Inc', 'Singapore'); INSERT INTO company_founding VALUES (2, 'Beta Corp', 'Indonesia'); INSERT INTO company_founding VALUES (3, 'Charlie LLC', 'Thailand'); INSERT INTO company_founding VALUES (4, 'Delta Inc', 'Malaysia'); INSERT INTO company_founding VALUES (5, 'Echo Inc', 'Philippines');","completion":"SELECT company_name FROM company_founding WHERE founder_country IN ('Singapore', 'Indonesia', 'Thailand', 'Malaysia', 'Philippines');"}
{"prompt":"What is the maximum funding raised in a single round by a startup with a female founder in the HealthTech sector? with given SQL schema CREATE TABLE funding_rounds (id INT, company_id INT, round_type TEXT, amount INT, date DATE); INSERT INTO funding_rounds (id, company_id, round_type, amount, date) VALUES (1, 1, 'Seed', 1000000, '2020-01-01'), (2, 2, 'Series A', 5000000, '2021-01-01'), (3, 3, 'Seed', 2000000, '2019-01-01');","completion":"SELECT MAX(funding_rounds.amount) FROM funding_rounds JOIN companies ON funding_rounds.company_id = companies.id WHERE companies.founder_gender = 'Female' AND companies.industry = 'HealthTech';"}
{"prompt":"Update the community_policing table and mark 'true' for the record where the community_policing_id is 3 with given SQL schema CREATE TABLE community_policing (community_policing_id INT, is_active BOOLEAN);","completion":"UPDATE community_policing SET is_active = true WHERE community_policing_id = 3;"}
{"prompt":"What is the minimum response time for emergency calls in each neighborhood? with given SQL schema CREATE TABLE neighborhoods (nid INT, neighborhood_name VARCHAR(255)); CREATE TABLE emergencies (eid INT, nid INT, response_time INT);","completion":"SELECT n.neighborhood_name, MIN(e.response_time) FROM neighborhoods n INNER JOIN emergencies e ON n.nid = e.nid GROUP BY n.neighborhood_name;"}
{"prompt":"What is the total number of emergency response calls in each city district? with given SQL schema CREATE TABLE districts (did INT, name VARCHAR(255)); CREATE TABLE calls (cid INT, did INT, time DATETIME); INSERT INTO districts VALUES (1, 'Downtown'), (2, 'Uptown'); INSERT INTO calls VALUES (1, 1, '2022-01-01 12:00:00'), (2, 2, '2022-01-01 13:00:00');","completion":"SELECT d.name, COUNT(c.cid) as num_calls FROM districts d JOIN calls c ON d.did = c.did GROUP BY d.did;"}
{"prompt":"What is the average age of painters in the database? with given SQL schema CREATE TABLE Artists (name VARCHAR(255), age INT, art VARCHAR(255)); INSERT INTO Artists (name, age, art) VALUES ('Picasso', 91, 'Painter'), ('Van Gogh', 37, 'Painter'), ('Dali', 84, 'Painter');","completion":"SELECT AVG(age) FROM Artists WHERE art = 'Painter';"}
{"prompt":"What is the total number of clients who have invested in the 'Global Fund'? with given SQL schema CREATE TABLE clients (client_id INT, name TEXT, region TEXT); INSERT INTO clients (client_id, name, region) VALUES (1, 'John Doe', 'US'), (2, 'Jane Smith', 'APAC'), (3, 'Mike Johnson', 'EU'), (4, 'Sophia Chen', 'APAC'); CREATE TABLE investments (client_id INT, fund_id INT, amount DECIMAL(10, 2)); INSERT INTO investments (client_id, fund_id, amount) VALUES (1, 1, 15000.00), (1, 2, 20000.00), (2, 1, 30000.00), (5, 1, 40000.00); CREATE TABLE funds (fund_id INT, fund_name TEXT, category TEXT); INSERT INTO funds (fund_id, fund_name, category) VALUES (1, 'Global Fund', 'Fixed Income'), (2, 'Regional Fund', 'Equity');","completion":"SELECT COUNT(DISTINCT c.client_id) FROM clients c JOIN investments i ON c.client_id = i.client_id JOIN funds f ON i.fund_id = f.fund_id WHERE f.fund_name = 'Global Fund';"}
{"prompt":"Which investment strategies have a total transaction value of more than 100000 for a private equity firm? with given SQL schema CREATE TABLE investment_strategies (strategy_id INT, name VARCHAR(255)); CREATE TABLE private_equity_transactions (transaction_id INT, strategy_id INT, amount DECIMAL(10,2), trans_date DATE);","completion":"SELECT investment_strategies.name FROM investment_strategies INNER JOIN private_equity_transactions ON investment_strategies.strategy_id = private_equity_transactions.strategy_id GROUP BY investment_strategies.name HAVING SUM(private_equity_transactions.amount) > 100000;"}
{"prompt":"Find the minimum ESG score for companies in the education sector. with given SQL schema CREATE TABLE companies (id INT, name VARCHAR(255), sector VARCHAR(255), ESG_score FLOAT); INSERT INTO companies (id, name, sector, ESG_score) VALUES (1, 'EverFi', 'Education', 75.0), (2, 'Coursera', 'Education', 78.5), (3, 'Khan Academy', 'Education', 82.0);","completion":"SELECT MIN(ESG_score) FROM companies WHERE sector = 'Education';"}
{"prompt":"How many unique 'regions' are represented in the 'Locations' table for 'RenewableEnergy'? with given SQL schema CREATE TABLE LocationsRE (id INT, country VARCHAR(255), region VARCHAR(255), sector VARCHAR(255));","completion":"SELECT COUNT(DISTINCT region) FROM LocationsRE WHERE sector = 'RenewableEnergy';"}
{"prompt":"List all military technologies and their regions from the 'Military_Tech' table. with given SQL schema CREATE TABLE Military_Tech (id INT, name VARCHAR(50), type VARCHAR(20), region VARCHAR(20)); INSERT INTO Military_Tech (id, name, type, region) VALUES (1, 'Stealth Fighter', 'Aircraft', 'North America');","completion":"SELECT * FROM Military_Tech;"}
{"prompt":"What was the total amount donated by repeat donors from Canada in Q1 2022? with given SQL schema CREATE TABLE Donors (DonorID int, DonorName varchar(50), Country varchar(50), FirstDonationDate date); INSERT INTO Donors VALUES (1, 'John Smith', 'Canada', '2021-01-01');","completion":"SELECT SUM(DonationAmount) FROM Donations D JOIN Donors DON ON D.DonorID = DON.DonorID WHERE DON.Country = 'Canada' AND D.DonationDate BETWEEN '2022-01-01' AND '2022-03-31' AND EXISTS (SELECT 1 FROM Donations D2 WHERE D2.DonorID = D.DonorID AND D2.DonationDate < '2022-01-01')"}
{"prompt":"What is the percentage of total humanitarian aid spent on education in each world region? with given SQL schema CREATE TABLE humanitarian_aid (id INT, region TEXT, category TEXT, amount FLOAT); INSERT INTO humanitarian_aid (id, region, category, amount) VALUES (1, 'Africa', 'Education', 500), (2, 'Asia', 'Health', 750), (3, 'Africa', 'Health', 250);","completion":"SELECT region, (SUM(case when category = 'Education' then amount else 0 end) \/ SUM(amount)) * 100 as education_percentage FROM humanitarian_aid GROUP BY region;"}
{"prompt":"What is the total number of refugee families supported by each NGO in the last 6 months? with given SQL schema CREATE TABLE NGOs (NGOID int, NGOName varchar(50)); INSERT INTO NGOs (NGOID, NGOName) VALUES (1, 'International Rescue Committee'), (2, 'Save the Children'); CREATE TABLE RefugeeSupport (SupportID int, NGOID int, FamilyID int, SupportDate date); INSERT INTO RefugeeSupport (SupportID, NGOID, FamilyID, SupportDate) VALUES (1, 1, 1, '2022-01-01'), (2, 1, 2, '2022-02-01'), (3, 2, 1, '2022-03-01');","completion":"SELECT NGOName, COUNT(DISTINCT FamilyID) as SupportedFamilies FROM NGOs INNER JOIN RefugeeSupport ON NGOs.NGOID = RefugeeSupport.NGOID WHERE SupportDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY NGOName;"}
{"prompt":"How many vehicles of type 'Trolleybus' are due for maintenance in the next 30 days? with given SQL schema CREATE TABLE vehicles (id INT, vehicle_type VARCHAR(255), model_year INT, last_maintenance_date DATE, next_maintenance_date DATE); INSERT INTO vehicles (id, vehicle_type, model_year, last_maintenance_date, next_maintenance_date) VALUES (2004, 'Trolleybus', 2020, '2022-04-20', '2022-07-20'), (2005, 'Tram', 2019, '2022-05-15', '2022-11-15');","completion":"SELECT vehicle_type, TIMESTAMPDIFF(DAY, CURDATE(), next_maintenance_date) as days_until_next_maintenance FROM vehicles WHERE vehicle_type = 'Trolleybus' HAVING days_until_next_maintenance <= 30;"}
{"prompt":"Which sustainable materials are used in the production of clothing in Africa? with given SQL schema CREATE TABLE clothing_materials (country TEXT, material TEXT); INSERT INTO clothing_materials (country, material) VALUES ('Africa', 'organic cotton'), ('Africa', 'recycled polyester'), ('Africa', 'hemp'), ('Africa', 'tencel');","completion":"SELECT DISTINCT material FROM clothing_materials WHERE country = 'Africa';"}
{"prompt":"Delete users who haven't posted in the last 6 months from the \"users\" table with given SQL schema CREATE TABLE users (id INT, username VARCHAR(255), last_post_date DATE);","completion":"DELETE FROM users WHERE last_post_date < DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"prompt":"Which countries are the top 3 sources of sustainable textiles? with given SQL schema CREATE TABLE Textile_Sources (Source_ID INT, Source_Country TEXT, Sustainable BOOLEAN, Quantity INT); INSERT INTO Textile_Sources (Source_ID, Source_Country, Sustainable, Quantity) VALUES (1, 'India', true, 1000), (2, 'Bangladesh', false, 800), (3, 'China', true, 1200), (4, 'Vietnam', false, 900), (5, 'Italy', true, 1100), (6, 'USA', false, 700);","completion":"SELECT Source_Country FROM Textile_Sources WHERE Sustainable = true ORDER BY Quantity DESC LIMIT 3;"}
{"prompt":"Which size-inclusive garments have the highest revenue? with given SQL schema CREATE TABLE garments (id INT, size TEXT, revenue DECIMAL); INSERT INTO garments (id, size, revenue) VALUES (1, 'XS', 200), (2, 'S', 300), (3, 'M', 500), (4, 'L', 700), (5, 'XL', 800), (6, 'XXL', 900); CREATE TABLE sizes (id INT, size TEXT, description TEXT); INSERT INTO sizes (id, size, description) VALUES (1, 'XS', 'Extra Small'), (2, 'S', 'Small'), (3, 'M', 'Medium'), (4, 'L', 'Large'), (5, 'XL', 'Extra Large'), (6, 'XXL', 'Extra Extra Large');","completion":"SELECT g.size, SUM(g.revenue) as total_revenue FROM garments g JOIN sizes s ON g.size = s.size GROUP BY g.size ORDER BY total_revenue DESC LIMIT 1;"}
{"prompt":"How many socially responsible lending loans have been issued by region? with given SQL schema CREATE TABLE socially_responsible_lending(id INT, loan_number INT, region VARCHAR(50)); INSERT INTO socially_responsible_lending VALUES (1, 1001, 'North'); INSERT INTO socially_responsible_lending VALUES (2, 1002, 'South'); INSERT INTO socially_responsible_lending VALUES (3, 1003, 'East'); INSERT INTO socially_responsible_lending VALUES (4, 1004, 'West');","completion":"SELECT region, COUNT(loan_number) FROM socially_responsible_lending GROUP BY region;"}
{"prompt":"What is the average financial wellbeing score of customers aged 35-50 for the year 2020? with given SQL schema CREATE TABLE customers (customer_id INT, age INT, wellbeing_score INT, registration_date DATE);","completion":"SELECT AVG(wellbeing_score) FROM customers WHERE age BETWEEN 35 AND 50 AND EXTRACT(YEAR FROM registration_date) = 2020;"}
{"prompt":"What is the total weight of seafood imported from Asia in the past month? with given SQL schema CREATE TABLE Customs (id INT, importId INT, item VARCHAR(50), weight FLOAT, region VARCHAR(50), importDate DATE);","completion":"SELECT SUM(weight) FROM Customs WHERE item LIKE '%seafood%' AND region = 'Asia' AND importDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"Delete all shipments from 'ABC' warehouse with given SQL schema CREATE TABLE warehouse (id INT PRIMARY KEY, name VARCHAR(255)); INSERT INTO warehouse (id, name) VALUES (1, 'ABC'), (2, 'DEF'); CREATE TABLE shipments (id INT PRIMARY KEY, warehouse_id INT, FOREIGN KEY (warehouse_id) REFERENCES warehouse(id)); INSERT INTO shipments (id, warehouse_id) VALUES (1, 1), (2, 2);","completion":"DELETE FROM shipments WHERE warehouse_id = (SELECT id FROM warehouse WHERE name = 'ABC');"}
{"prompt":"Which warehouse locations have less than 50 items in stock for a specific item? with given SQL schema CREATE TABLE warehouse_data (warehouse_id INT, item_name VARCHAR(100), quantity INT, warehouse_location VARCHAR(50)); INSERT INTO warehouse_data (warehouse_id, item_name, quantity, warehouse_location) VALUES (1, 'Widget', 30, 'California'), (2, 'Gizmo', 50, 'New York'), (3, 'Doodad', 75, 'California'), (4, 'Thingamajig', 120, 'Texas'), (5, 'Whatzit', 150, 'California'), (6, 'Widget', 40, 'New York');","completion":"SELECT warehouse_location FROM warehouse_data WHERE item_name = 'Widget' GROUP BY warehouse_location HAVING SUM(quantity) < 50;"}
{"prompt":"What is the average CO2 emission reduction of green building projects in California? with given SQL schema CREATE TABLE green_building_projects (id INT, project_name VARCHAR(50), city VARCHAR(50), state VARCHAR(50), country VARCHAR(50), co2_reduction FLOAT); INSERT INTO green_building_projects (id, project_name, city, state, country, co2_reduction) VALUES (1, 'California Green Building', 'Los Angeles', 'CA', 'USA', 15.4);","completion":"SELECT AVG(co2_reduction) FROM green_building_projects WHERE state = 'CA';"}
{"prompt":"How many community health workers are employed in each region? with given SQL schema CREATE TABLE RegionHealthWorkers (Region TEXT, HealthWorkerCount INT); INSERT INTO RegionHealthWorkers (Region, HealthWorkerCount) VALUES ('Northeast', 500), ('South', 700), ('Midwest', 600);","completion":"SELECT Region, HealthWorkerCount FROM RegionHealthWorkers;"}
{"prompt":"List the names and departments of all mental health parity officers in the mental_health schema. with given SQL schema CREATE TABLE mental_health_parity_officers (officer_id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO mental_health_parity_officers (officer_id, name, department) VALUES (1, 'Alice Johnson', 'Compliance'); INSERT INTO mental_health_parity_officers (officer_id, name, department) VALUES (2, 'Bob Brown', 'Legal');","completion":"SELECT name, department FROM mental_health.mental_health_parity_officers;"}
{"prompt":"What is the minimum rating of eco-friendly hotels in Spain? with given SQL schema CREATE TABLE eco_hotels (hotel_id INT, hotel_name TEXT, country TEXT, rating FLOAT); INSERT INTO eco_hotels (hotel_id, hotel_name, country, rating) VALUES (1, 'Green Hotel', 'Spain', 4.1), (2, 'Eco Lodge', 'Spain', 4.7);","completion":"SELECT MIN(rating) FROM eco_hotels WHERE country = 'Spain';"}
{"prompt":"What is the percentage of hotels in the 'EMEA' region that adopted AI technology in 2022? with given SQL schema CREATE TABLE ai_adoption (id INT, hotel_id INT, region TEXT, year INT, ai_adoption INT);","completion":"SELECT region, (SUM(ai_adoption) * 100.0 \/ COUNT(*)) as adoption_percentage FROM ai_adoption WHERE region = 'EMEA' AND year = 2022 GROUP BY region;"}
{"prompt":"Delete the record with id 3 from the \"animals\" table with given SQL schema CREATE TABLE animals (id INT PRIMARY KEY, name VARCHAR(100), species VARCHAR(100), population INT);","completion":"WITH del AS (DELETE FROM animals WHERE id = 3 RETURNING id) SELECT id FROM del;"}
{"prompt":"How many patients with anxiety have received medication in the last 3 months in the LGBTQ+ community? with given SQL schema CREATE TABLE patients (patient_id INT, age INT, gender VARCHAR(10), condition VARCHAR(255), ethnicity VARCHAR(255)); CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE, medication BOOLEAN);","completion":"SELECT COUNT(*) FROM patients JOIN therapy_sessions ON patients.patient_id = therapy_sessions.patient_id WHERE patients.condition = 'anxiety' AND patients.ethnicity = 'LGBTQ+' AND therapy_sessions.session_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND therapy_sessions.medication = TRUE;"}
{"prompt":"What is the minimum elevation of all bridges in the database? with given SQL schema CREATE TABLE Bridges (id INT, name VARCHAR(100), elevation FLOAT); INSERT INTO Bridges (id, name, elevation) VALUES (1, 'Golden Gate Bridge', 220), (2, 'Bay Bridge', 132), (3, 'Chesapeake Bay Bridge', 67);","completion":"SELECT MIN(elevation) FROM Bridges;"}
{"prompt":"What is the average time to process a case for each case type in the justice_database? with given SQL schema CREATE TABLE case_processing (id INT, case_id INT, case_type VARCHAR(255), processing_time INTEGER); INSERT INTO case_processing (id, case_id, case_type, processing_time) VALUES (1, 1, 'Felony', 60), (2, 2, 'Misdemeanor', 30);","completion":"SELECT case_type, AVG(processing_time) FROM case_processing GROUP BY case_type;"}
{"prompt":"Update menu item records for 'Chicken Sandwich' to increase the price by $0.75 with given SQL schema CREATE TABLE menu_items (menu_id INT PRIMARY KEY, item_name VARCHAR(255), price DECIMAL(5,2));","completion":"UPDATE menu_items SET price = price + 0.75 WHERE item_name = 'Chicken Sandwich';"}
{"prompt":"Insert new records into the Employee table with the following data: EmployeeID 3, FirstName 'Mike', LastName 'Smith', Department 'Environment'. with given SQL schema CREATE TABLE Employee (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50));","completion":"INSERT INTO Employee (EmployeeID, FirstName, LastName, Department) VALUES (3, 'Mike', 'Smith', 'Environment');"}
{"prompt":"What is the total number of accidents for each company, in the last 6 months? with given SQL schema CREATE TABLE company (id INT, name TEXT); CREATE TABLE accident (id INT, company_id INT, date DATE);","completion":"SELECT company.name, COUNT(accident.id) as total_accidents FROM company INNER JOIN accident ON company.id = accident.company_id WHERE accident.date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND CURRENT_DATE GROUP BY company.name;"}
{"prompt":"Delete all music genres with less than 10 artists. with given SQL schema CREATE TABLE music_genres(genre_id INT, name VARCHAR(50)); CREATE TABLE artist_activity(artist_id INT, genre_id INT, streams INT); CREATE TABLE artists(artist_id INT, name VARCHAR(50), genre_id INT);","completion":"DELETE FROM music_genres WHERE genre_id NOT IN (SELECT genre_id FROM artists GROUP BY genre_id HAVING COUNT(DISTINCT artist_id) >= 10);"}
{"prompt":"Update records in the 'Volunteers' table where the volunteer's skill level is 'Beginner' and change it to 'Intermediate' with given SQL schema CREATE TABLE Volunteers (id INT PRIMARY KEY, volunteer_name VARCHAR(255), skill_level VARCHAR(255), last_volunteered DATE);","completion":"UPDATE Volunteers SET skill_level = 'Intermediate' WHERE skill_level = 'Beginner';"}
{"prompt":"What is the average length of all underwater cables in the Indian Ocean, and how many cables are there? with given SQL schema CREATE TABLE UNDERWATER_CABLES (NAME TEXT, LENGTH NUMERIC, REGION TEXT); INSERT INTO UNDERWATER_CABLES (NAME, LENGTH, REGION) VALUES ('SAEx1', 12000, 'Indian Ocean'), ('EASSy', 10000, 'Indian Ocean'), ('SEA-ME-WE 3', 39000, 'Indian Ocean'), ('EIG', 13000, 'Indian Ocean'), ('TEA- IN', 15000, 'Indian Ocean');","completion":"SELECT AVG(LENGTH) AS AVG_LENGTH, COUNT(*) AS NUM_CABLES FROM UNDERWATER_CABLES WHERE REGION = 'Indian Ocean';"}
{"prompt":"Identify the top 5 property managers with the highest number of co-owned properties in Vancouver. with given SQL schema CREATE TABLE property_managers (id INT, name VARCHAR(30), num_properties INT); CREATE TABLE co_owned_properties (manager_id INT, property_id INT); INSERT INTO property_managers (id, name, num_properties) VALUES (1, 'Smith Property Management', 25), (2, 'Jones Management', 30), (3, 'Green Properties', 35), (4, 'Eco Management', 20), (5, 'Blue Sky Management', 40), (6, 'ABC Properties', 15); INSERT INTO co_owned_properties (manager_id, property_id) VALUES (1, 1), (1, 2), (2, 3), (2, 4), (2, 5), (3, 6), (3, 7), (3, 8), (4, 9), (4, 10), (5, 11), (5, 12), (5, 13), (5, 14);","completion":"SELECT pm.name, COUNT(cop.manager_id) as num_co_owned FROM property_managers pm INNER JOIN co_owned_properties cop ON pm.id = cop.manager_id GROUP BY pm.name ORDER BY num_co_owned DESC LIMIT 5;"}
{"prompt":"List all property owners in Los Angeles who have not adopted inclusive housing policies. with given SQL schema CREATE TABLE Owners (OwnerID int, PropertyID int, City varchar(20)); CREATE TABLE Properties (PropertyID int, City varchar(20), Inclusive varchar(5)); INSERT INTO Owners (OwnerID, PropertyID, City) VALUES (1, 1, 'Los Angeles'); INSERT INTO Properties (PropertyID, City, Inclusive) VALUES (1, 'Los Angeles', 'No'); INSERT INTO Owners (OwnerID, PropertyID, City) VALUES (2, 2, 'Los Angeles'); INSERT INTO Properties (PropertyID, City, Inclusive) VALUES (2, 'Los Angeles', 'Yes');","completion":"SELECT Owners.Name, Properties.City FROM Owners INNER JOIN Properties ON Owners.PropertyID = Properties.PropertyID WHERE Properties.City = 'Los Angeles' AND Properties.Inclusive = 'No';"}
{"prompt":"Show the number of menu items for each restaurant category with given SQL schema CREATE TABLE vendors (id INT, name VARCHAR(50), type VARCHAR(50)); CREATE TABLE menus (id INT, vendor_id INT, category VARCHAR(50)); CREATE TABLE menu_items (id INT, name VARCHAR(50), category VARCHAR(50), price DECIMAL(5,2)); INSERT INTO vendors (id, name, type) VALUES (1, 'Sushi Bar', 'Restaurant'), (2, 'Bakery', 'Restaurant'), (3, 'Grocery', 'Market'); INSERT INTO menus (id, vendor_id, category) VALUES (101, 1, 'Sushi'), (102, 1, 'Japanese'), (103, 2, 'Bread'), (104, 2, 'Pastries'), (105, 3, 'Organic'), (106, 3, 'Vegan'); INSERT INTO menu_items (id, name, category) VALUES (1001, 'California Roll', 'Sushi'), (1002, 'Tuna Roll', 'Sushi'), (1003, 'Tiramisu', 'Pastries'), (1004, 'Croissant', 'Bread'), (1005, 'Kale Salad', 'Organic'), (1006, 'Tofu Burger', 'Vegan');","completion":"SELECT menus.category, COUNT(menu_items.id) AS menu_items_count FROM menus JOIN menu_items ON menus.category = menu_items.category GROUP BY menus.category;"}
{"prompt":"What is the total number of successful space missions for each space agency? with given SQL schema CREATE SCHEMA space; USE space; CREATE TABLE agency (name VARCHAR(50), country VARCHAR(50), missions INT, successes INT); INSERT INTO agency (name, country, missions, successes) VALUES ('ESA', 'Europe', 120, 105), ('NASA', 'USA', 230, 210), ('ROSCOSMOS', 'Russia', 150, 130);","completion":"SELECT s.name, SUM(s.successes) FROM space.agency s GROUP BY s.name;"}
{"prompt":"List all policies, claim types, and claim amounts for policyholders living in 'California'? with given SQL schema CREATE TABLE Policyholders (PolicyholderID INT, State VARCHAR(20)); INSERT INTO Policyholders (PolicyholderID, State) VALUES (1, 'California'), (2, 'New York'), (3, 'Florida'); CREATE TABLE Claims (ClaimID INT, PolicyholderID INT, ClaimType VARCHAR(20), ClaimAmount INT); INSERT INTO Claims (ClaimID, PolicyholderID, ClaimType, ClaimAmount) VALUES (1, 1, 'Theft', 5000), (2, 1, 'Fire', 20000), (3, 2, 'Accident', 7000);","completion":"SELECT Policyholders.State, Claims.ClaimType, Claims.ClaimAmount FROM Policyholders INNER JOIN Claims ON Policyholders.PolicyholderID = Claims.PolicyholderID WHERE Policyholders.State = 'California';"}
{"prompt":"List the policy types and total claim amount for policyholders from Ontario with an auto or life insurance policy. with given SQL schema CREATE TABLE Policyholder (PolicyholderID INT, State VARCHAR(255), PolicyType VARCHAR(255), ClaimAmount DECIMAL(10,2)); INSERT INTO Policyholder VALUES (1, 'ON', 'Auto', 5000), (2, 'NY', 'Home', 7000), (3, 'NJ', 'Auto', 8000), (4, 'CA', 'Life', 6000), (5, 'ON', 'Life', 9000);","completion":"SELECT PolicyType, SUM(ClaimAmount) as TotalClaimAmount FROM Policyholder WHERE State = 'ON' AND PolicyType IN ('Auto', 'Life') GROUP BY PolicyType;"}
{"prompt":"Modify 'vehicle_specs' table to add 2 new records with given SQL schema CREATE TABLE vehicle_specs (id INT PRIMARY KEY, vehicle_type VARCHAR(255), engine_type VARCHAR(255));","completion":"INSERT INTO vehicle_specs (id, vehicle_type, engine_type) VALUES (3, 'Electric Sedan', 'Electric Motor'), (4, 'Hybrid SUV', 'Hybrid Engine');"}
{"prompt":"What is the average recycling rate and the number of circular economy initiatives for each location and material, for the second quarter of 2022? with given SQL schema CREATE TABLE RecyclingRates (Date date, Location text, Material text, Rate real);CREATE TABLE CircularEconomyInitiatives (Location text, Initiative text, StartDate date);","completion":"SELECT rr.Location, rr.Material, AVG(rr.Rate) as AvgRecyclingRate, COUNT(DISTINCT cei.Initiative) as NumberOfInitiatives FROM RecyclingRates rr LEFT JOIN CircularEconomyInitiatives cei ON rr.Location = cei.Location WHERE rr.Date >= '2022-04-01' AND rr.Date < '2022-07-01' GROUP BY rr.Location, rr.Material;"}
{"prompt":"What is the total water usage by state in the US? with given SQL schema CREATE TABLE states (state_name VARCHAR(50), state_abbr VARCHAR(5), population INT); INSERT INTO states (state_name, state_abbr, population) VALUES ('California', 'CA', 39512223), ('Texas', 'TX', 29528404), ('New York', 'NY', 19453561); CREATE TABLE water_usage (state_abbr VARCHAR(5), usage_gallons INT); INSERT INTO water_usage (state_abbr, usage_gallons) VALUES ('CA', 678345200), ('TX', 543210945), ('NY', 432109321);","completion":"SELECT s.state_name, SUM(w.usage_gallons) as total_usage FROM water_usage w JOIN states s ON w.state_abbr = s.state_abbr GROUP BY s.state_name;"}
{"prompt":"How many outdoor cycling workouts were conducted for VIP members in the past month? with given SQL schema CREATE TABLE workouts (workout_id INT, member_id INT, type VARCHAR(20), date DATE); INSERT INTO workouts VALUES (1,1,'Outdoor Cycling','2022-01-05'); INSERT INTO workouts VALUES (2,2,'Outdoor Cycling','2022-01-10'); CREATE TABLE members (member_id INT, tier VARCHAR(10)); INSERT INTO members VALUES (1,'VIP'); INSERT INTO members VALUES (2,'Standard');","completion":"SELECT COUNT(workouts.workout_id) FROM workouts INNER JOIN members ON workouts.member_id = members.member_id WHERE workouts.type = 'Outdoor Cycling' AND members.tier = 'VIP' AND workouts.date >= DATEADD(month, -1, GETDATE());"}
{"prompt":"What is the average age of male members who do weightlifting? with given SQL schema CREATE TABLE Members (MemberID INT, Age INT, Gender VARCHAR(10), WorkoutType VARCHAR(20)); INSERT INTO Members (MemberID, Age, Gender, WorkoutType) VALUES (1, 30, 'Male', 'Weightlifting'), (2, 25, 'Female', 'Yoga'), (3, 45, 'Male', 'Weightlifting'), (4, 35, 'Male', 'Running');","completion":"SELECT AVG(Age) FROM Members WHERE Gender = 'Male' AND WorkoutType = 'Weightlifting';"}
{"prompt":"Show all research projects focused on Mars exploration. with given SQL schema CREATE TABLE ResearchProjects (id INT, project_name VARCHAR(100), field VARCHAR(50), leader VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO ResearchProjects (id, project_name, field, leader, start_date, end_date) VALUES (1, 'Project1', 'Space Exploration', 'Jane Smith', '2021-01-01', '2022-12-31'), (2, 'Project2', 'Mars Exploration', 'Jim Brown', '2022-01-01', '2023-12-31');","completion":"SELECT * FROM ResearchProjects WHERE field = 'Mars Exploration';"}
{"prompt":"What is the total biomass of fish in farms with a water temperature above 25 degrees Celsius? with given SQL schema CREATE TABLE Farm (FarmID int, FarmName varchar(50), WaterTemperature numeric, Biomass numeric); INSERT INTO Farm (FarmID, FarmName, WaterTemperature, Biomass) VALUES (1, 'Farm A', 15, 50); INSERT INTO Farm (FarmID, FarmName, WaterTemperature, Biomass) VALUES (2, 'Farm B', 28, 70); INSERT INTO Farm (FarmID, FarmName, WaterTemperature, Biomass) VALUES (3, 'Farm C', 14, 60); INSERT INTO Farm (FarmID, FarmName, WaterTemperature, Biomass) VALUES (4, 'Farm D', 30, 80); INSERT INTO Farm (FarmID, FarmName, WaterTemperature, Biomass) VALUES (5, 'Farm E', 22, 90);","completion":"SELECT SUM(Biomass) FROM Farm WHERE WaterTemperature > 25;"}
{"prompt":"What is the total number of building permits issued for commercial buildings in the state of New York in 2021? with given SQL schema CREATE TABLE building_permits (permit_id INT, building_type VARCHAR(50), state VARCHAR(50), issue_date DATE); INSERT INTO building_permits (permit_id, building_type, state, issue_date) VALUES (1, 'Commercial', 'New York', '2021-01-01'); INSERT INTO building_permits (permit_id, building_type, state, issue_date) VALUES (2, 'Residential', 'New York', '2021-02-01');","completion":"SELECT COUNT(*) FROM building_permits WHERE building_type = 'Commercial' AND state = 'New York' AND issue_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"What is the most expensive sativa sold in California dispensaries in Q3 2022? with given SQL schema CREATE TABLE Prices (id INT, strain TEXT, state TEXT, sale_price DECIMAL(5,2)); INSERT INTO Prices (id, strain, state, sale_price) VALUES (1, 'Green Crack', 'CA', 15.99), (2, 'Jack Herer', 'CA', 14.50), (3, 'Durban Poison', 'CA', 17.99), (4, 'Super Lemon Haze', 'CA', 16.50);","completion":"SELECT strain, MAX(sale_price) as max_price FROM Prices WHERE state = 'CA' AND strain LIKE '%sativa%' AND quarter(order_date) = 3 AND year(order_date) = 2022 GROUP BY strain HAVING max_price = (SELECT MAX(sale_price) FROM Prices WHERE state = 'CA' AND strain LIKE '%sativa%' AND quarter(order_date) = 3 AND year(order_date) = 2022);"}
{"prompt":"List all chemical manufacturing facilities with their respective safety officer names and contact email addresses. with given SQL schema CREATE TABLE facilities (facility_id INT, facility_name TEXT, safety_officer_name TEXT, safety_officer_email TEXT); INSERT INTO facilities (facility_id, facility_name, safety_officer_name, safety_officer_email) VALUES (1, 'Facility A', 'John Doe', 'johndoe@facilitya.com'), (2, 'Facility B', 'Jane Smith', 'janesmith@facilityb.com'), (3, 'Facility C', 'Alice Johnson', 'alicejohnson@facilityc.com');","completion":"SELECT facility_name, safety_officer_name, safety_officer_email FROM facilities;"}
{"prompt":"List chemicals manufactured in 2021 and 2022. with given SQL schema CREATE TABLE Chemicals (Id INT, Name VARCHAR(50), Type VARCHAR(50), ManufacturingDate DATE); INSERT INTO Chemicals (Id, Name, Type, ManufacturingDate) VALUES (1, 'Acetone', 'Solvent', '2021-01-01'), (2, 'Ammonia', 'Gas', '2022-02-01');","completion":"SELECT * FROM Chemicals WHERE YEAR(ManufacturingDate) IN (2021, 2022);"}
{"prompt":"What chemicals were shipped to the United States via rail transport after January 1, 2022? with given SQL schema CREATE TABLE transport_routes (id INT PRIMARY KEY, chemical_id INT, origin VARCHAR(255), destination VARCHAR(255), transport_type VARCHAR(255)); CREATE TABLE chemicals (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), supplier_id INT, quantity INT);","completion":"SELECT c.name FROM transport_routes tr JOIN chemicals c ON tr.chemical_id = c.id WHERE tr.transport_type = 'Rail' AND tr.destination = 'United States' AND tr.date > '2022-01-01'"}
{"prompt":"Insert new records into the 'renewable_energy_investment' table for 'Solar' and 'Wind' with amounts 10000000 and 15000000, respectively, and year 2022 with given SQL schema CREATE TABLE renewable_energy_investment (energy_source VARCHAR(255), amount INT, year INT);","completion":"INSERT INTO renewable_energy_investment (energy_source, amount, year) VALUES ('Solar', 10000000, 2022), ('Wind', 15000000, 2022);"}
{"prompt":"What is the total number of healthcare providers who speak a language other than English? with given SQL schema CREATE TABLE healthcare_providers_language (id INT, name VARCHAR(50), language VARCHAR(50)); INSERT INTO healthcare_providers_language (id, name, language) VALUES (1, 'Dr. Chen', 'Spanish'), (2, 'Dr. Singh', 'Hindi'), (3, 'Dr. Park', 'Korean');","completion":"SELECT COUNT(*) FROM healthcare_providers_language WHERE language <> 'English';"}
{"prompt":"Delete the \"innovation_trends\" table with given SQL schema CREATE TABLE innovation_trends (id INT PRIMARY KEY, company_id INT, innovation_type VARCHAR(20), year INT); INSERT INTO innovation_trends (id, company_id, innovation_type, year) VALUES (1, 1001, 'AI', 2017), (2, 1002, 'ML', 2018), (3, 1003, 'AR', 2019), (4, 1001, 'VR', 2020);","completion":"DROP TABLE innovation_trends;"}
{"prompt":"What is the total funding amount for startups founded in the last 5 years? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founded DATE); INSERT INTO companies (id, name, founded) VALUES (1, 'Foobar Inc', '2017-01-01'), (2, 'Gizmos Inc', '2019-06-15'), (3, 'Widgets Inc', '2015-09-27'); CREATE TABLE funding (company_id INT, amount INT); INSERT INTO funding (company_id, amount) VALUES (1, 1000000), (1, 2000000), (2, 5000000), (3, 3000000);","completion":"SELECT SUM(funding.amount) as total_funding FROM funding JOIN companies ON funding.company_id = companies.id WHERE companies.founded >= DATEADD(year, -5, GETDATE());"}
{"prompt":"What is the total production of fruits and vegetables in Kenya? with given SQL schema CREATE TABLE production_data (farm_id INT, country VARCHAR(50), product VARCHAR(50), production INT); INSERT INTO production_data (farm_id, country, product, production) VALUES (1, 'Kenya', 'Apples', 200), (2, 'Kenya', 'Carrots', 300), (3, 'Tanzania', 'Bananas', 400);","completion":"SELECT SUM(production) FROM production_data WHERE country = 'Kenya' AND (product = 'Fruits' OR product = 'Vegetables');"}
{"prompt":"What is the average population size of marine turtles? with given SQL schema CREATE TABLE marine_species (name TEXT, category TEXT, population INT); INSERT INTO marine_species (name, category, population) VALUES ('Leatherback Turtle', 'Turtle', 5000), ('Green Sea Turtle', 'Turtle', 8000), ('Loggerhead Turtle', 'Turtle', 6000);","completion":"SELECT AVG(population) FROM marine_species WHERE category = 'Turtle';"}
{"prompt":"What is the total number of smart contracts on the Ethereum blockchain, and how many of them were deployed in the last month? with given SQL schema CREATE TABLE ethereum_smart_contracts (contract_id INT, deploy_date DATE); INSERT INTO ethereum_smart_contracts (contract_id, deploy_date) VALUES (1, '2022-01-01'), (2, '2022-02-01'), (3, '2022-03-01'), (4, '2022-04-01'), (5, '2022-05-01');","completion":"SELECT COUNT(*), SUM(CASE WHEN deploy_date >= DATEADD(MONTH, -1, GETDATE()) THEN 1 ELSE 0 END) FROM ethereum_smart_contracts;"}
{"prompt":"Find the total volume of timber sold in 2021 with given SQL schema CREATE TABLE forests (id INT, name VARCHAR(50), hectares DECIMAL(5,2), year_planted INT, PRIMARY KEY (id)); INSERT INTO forests (id, name, hectares, year_planted) VALUES (1, 'Forest A', 123.45, 1990), (2, 'Forest B', 654.32, 1985); CREATE TABLE timber_sales (id INT, forest_id INT, year INT, volume DECIMAL(10,2), PRIMARY KEY (id)); INSERT INTO timber_sales (id, forest_id, year, volume) VALUES (1, 1, 2021, 120.50), (2, 1, 2022, 150.75), (3, 2, 2021, 450.23), (4, 2, 2022, 520.89);","completion":"SELECT SUM(ts.volume) FROM timber_sales ts INNER JOIN forests f ON ts.forest_id = f.id WHERE ts.year = 2021;"}
{"prompt":"How many forests have high timber production and high biodiversity? with given SQL schema CREATE TABLE forests_data (id INT, timber_production FLOAT, biodiversity FLOAT);","completion":"SELECT COUNT(*) FROM forests_data WHERE timber_production > 50 AND biodiversity > 50;"}
{"prompt":"List all the forests that have 'Quercus' species in the 'wildlife' table. with given SQL schema CREATE TABLE wildlife (id INT, forest_id INT, species VARCHAR(50));","completion":"SELECT DISTINCT forest_id FROM wildlife WHERE species = 'Quercus';"}
{"prompt":"What is the total area of all protected wildlife habitats in the forestry database, in square kilometers? with given SQL schema CREATE TABLE wildlife_habitats (id INT, name VARCHAR(255), area_sq_km FLOAT);","completion":"SELECT SUM(area_sq_km) FROM wildlife_habitats WHERE protection_status = 'protected';"}
{"prompt":"Delete records from 'cosmetics_sales' table where sale_date is before 2021-01-01 with given SQL schema CREATE TABLE cosmetics_sales (product_id INT, product_name VARCHAR(255), units_sold INT, revenue DECIMAL(10,2), sale_date DATE); INSERT INTO cosmetics_sales (product_id, product_name, units_sold, revenue, sale_date) VALUES (1, 'Liquid Foundation', 20, 200.50, '2021-01-01'), (2, 'Organic Lip Balm', 30, 75.00, '2021-01-02'), (3, 'Natural Mascara', 15, 120.00, '2021-01-03');","completion":"DELETE FROM cosmetics_sales WHERE sale_date < '2021-01-01';"}
{"prompt":"Update the Rating for the 'Cleanser' product in the Products table to 4.6. with given SQL schema CREATE TABLE Products (Product VARCHAR(50), Label VARCHAR(50), Rating DECIMAL(3,2)); INSERT INTO Products (Product, Label, Rating) VALUES ('Cleanser', 'Vegan', 4.5), ('Moisturizer', 'Vegan', 4.7), ('Toner', 'Vegan', 4.2);","completion":"UPDATE Products SET Rating = 4.6 WHERE Product = 'Cleanser';"}
{"prompt":"Insert a new record into the 'EmergencyContacts' table with the following data: '911', 'Emergency Phone Number' with given SQL schema CREATE TABLE EmergencyContacts (ContactID INT PRIMARY KEY, ContactValue VARCHAR(50), ContactDescription VARCHAR(50));","completion":"INSERT INTO EmergencyContacts (ContactValue, ContactDescription) VALUES ('911', 'Emergency Phone Number');"}
{"prompt":"What is the average number of military personnel in each branch of the military over the past 5 years? with given SQL schema CREATE TABLE military_personnel (id INT, branch VARCHAR(255), year INT, personnel INT); INSERT INTO military_personnel (id, branch, year, personnel) VALUES (1, 'Army', 2017, 100000), (2, 'Army', 2018, 110000), (3, 'Army', 2019, 120000), (4, 'Navy', 2017, 60000), (5, 'Navy', 2018, 65000), (6, 'Navy', 2019, 70000), (7, 'Air Force', 2017, 50000), (8, 'Air Force', 2018, 55000), (9, 'Air Force', 2019, 60000);","completion":"SELECT branch, AVG(personnel) as avg_personnel FROM military_personnel GROUP BY branch;"}
{"prompt":"What is the total tonnage of non-hazardous cargo unloaded at 'Port of Rotterdam' by 'Vessel Z' in Q1 2022? with given SQL schema CREATE TABLE vessels (id INT, name TEXT); CREATE TABLE cargo (id INT, hazardous_material BOOLEAN, tonnage INT, vessel_id INT, unloaded_date DATE, port_id INT); INSERT INTO vessels (id, name) VALUES (1, 'Vessel Z'); INSERT INTO cargo (id, hazardous_material, tonnage, vessel_id, unloaded_date, port_id) VALUES (1, false, 60, 1, '2022-03-05', 1), (2, true, 100, 1, '2022-02-10', 1);","completion":"SELECT SUM(tonnage) FROM cargo INNER JOIN vessels ON cargo.vessel_id = vessels.id WHERE vessels.name = 'Vessel Z' AND cargo.unloaded_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND cargo.hazardous_material = false AND cargo.port_id = 1;"}
{"prompt":"List all unique skills in the 'employee_skills' table with given SQL schema CREATE TABLE employee_skills (employee_id INT, skill_name VARCHAR(50), experience_years INT); INSERT INTO employee_skills (employee_id, skill_name, experience_years) VALUES (1, 'sustainable_manufacturing', 3), (2, 'quality_control', 1), (3, 'sustainable_manufacturing', 5);","completion":"SELECT DISTINCT skill_name FROM employee_skills;"}
{"prompt":"Update excavation notes for site 123 with given SQL schema CREATE TABLE excavations (id INT PRIMARY KEY, site_id INT, date DATE, notes TEXT);","completion":"UPDATE excavations SET notes = 'Additional tools and resources found' WHERE site_id = 123 AND date = '2021-09-01';"}
{"prompt":"What is the number of female patients in the 'rural_clinic_3' table? with given SQL schema CREATE TABLE rural_clinic_3 (patient_id INT, age INT, gender VARCHAR(10)); INSERT INTO rural_clinic_3 (patient_id, age, gender) VALUES (1, 35, 'Male'), (2, 50, 'Female'), (3, 42, 'Male'), (4, 60, 'Male'), (5, 30, 'Female'), (6, 40, 'Female');","completion":"SELECT COUNT(*) FROM rural_clinic_3 WHERE gender = 'Female';"}
{"prompt":"What is the prevalence of diabetes in \"Alabama\" rural areas with given SQL schema CREATE TABLE diabetes_prevalence(id INT, location TEXT, population INT, diabetes_cases INT); INSERT INTO diabetes_prevalence(id, location, population, diabetes_cases) VALUES (1, 'Alabama Rural Area', 5000, 750), (2, 'Alabama Urban Area', 10000, 1500), (3, 'Georgia Rural Area', 6000, 900), (4, 'Georgia Urban Area', 12000, 1800);","completion":"SELECT diabetes_cases\/population FROM diabetes_prevalence WHERE location LIKE '%Alabama Rural Area%';"}
{"prompt":"What are the intelligence operations in the 'asia' and 'africa' regions? with given SQL schema CREATE TABLE intelligence_operations (id INT, operation TEXT, region TEXT); INSERT INTO intelligence_operations (id, operation, region) VALUES (1, 'Op1', 'americas'), (2, 'Op2', 'americas'), (3, 'Op3', 'asia'), (4, 'Op4', 'asia'), (5, 'Op5', 'africa'), (6, 'Op6', 'africa');","completion":"SELECT operation FROM intelligence_operations WHERE region IN ('asia', 'africa');"}
{"prompt":"Who are the top 2 artists with the most songs in the country genre? with given SQL schema CREATE TABLE artists (id INT, name TEXT); CREATE TABLE songs_artists (song_id INT, artist_id INT); CREATE TABLE songs (id INT, title TEXT, length FLOAT, genre TEXT); INSERT INTO artists (id, name) VALUES (1, 'Artist1'), (2, 'Artist2'), (3, 'Artist3'); INSERT INTO songs_artists (song_id, artist_id) VALUES (1, 1), (2, 2), (3, 1), (4, 3); INSERT INTO songs (id, title, length, genre) VALUES (1, 'Song1', 3.2, 'country'), (2, 'Song2', 4.1, 'rock'), (3, 'Song3', 3.8, 'pop'), (4, 'Song4', 2.1, 'country');","completion":"SELECT artists.name, COUNT(songs.id) AS song_count FROM artists JOIN songs_artists ON artists.id = songs_artists.artist_id JOIN songs ON songs_artists.song_id = songs.id WHERE songs.genre = 'country' GROUP BY artists.name ORDER BY song_count DESC LIMIT 2;"}
{"prompt":"Calculate the average time spent in training by department in the \"employee\" and \"training\" tables with given SQL schema CREATE TABLE employee (id INT, department_id INT); CREATE TABLE training (id INT, employee_id INT, time_spent_minutes INT);","completion":"SELECT e.department_id, AVG(t.time_spent_minutes) AS avg_time_spent_minutes FROM employee e JOIN training t ON e.id = t.employee_id GROUP BY e.department_id;"}
{"prompt":"What is the average salary for employees hired in Q2 2022? with given SQL schema CREATE TABLE Employees (EmployeeID INT, HireDate DATE, Salary INT); INSERT INTO Employees (EmployeeID, HireDate, Salary) VALUES (1, '2022-04-15', 70000); INSERT INTO Employees (EmployeeID, HireDate, Salary) VALUES (2, '2022-06-01', 75000);","completion":"SELECT AVG(Salary) FROM Employees WHERE HireDate BETWEEN '2022-04-01' AND '2022-06-30';"}
{"prompt":"List the top 3 energy efficient appliances in the US by energy star rating? with given SQL schema CREATE TABLE appliances (id INT, name VARCHAR(255), country VARCHAR(255), energy_star_rating INT); INSERT INTO appliances (id, name, country, energy_star_rating) VALUES (1, 'Fridge A', 'USA', 5), (2, 'TV B', 'USA', 4), (3, 'Laptop C', 'USA', 5), (4, 'Microwave D', 'USA', 3);","completion":"SELECT name, energy_star_rating FROM appliances WHERE country = 'USA' ORDER BY energy_star_rating DESC LIMIT 3;"}
{"prompt":"What was the total energy consumption in New York for the year 2020, segmented by renewable and non-renewable sources? with given SQL schema CREATE TABLE energy_consumption (state VARCHAR(20), year INT, energy_type VARCHAR(10), consumption FLOAT); INSERT INTO energy_consumption (state, year, energy_type, consumption) VALUES ('New York', 2020, 'Renewable', 12000), ('New York', 2020, 'Non-Renewable', 25000);","completion":"SELECT state, year, SUM(CASE WHEN energy_type = 'Renewable' THEN consumption ELSE 0 END) AS renewable_consumption, SUM(CASE WHEN energy_type = 'Non-Renewable' THEN consumption ELSE 0 END) AS non_renewable_consumption FROM energy_consumption WHERE state = 'New York' AND year = 2020 GROUP BY state, year;"}
{"prompt":"Show the number of wells drilled in each state with given SQL schema CREATE TABLE state_wells (state VARCHAR(2), num_wells INT); INSERT INTO state_wells (state, num_wells) VALUES ('TX', 1200), ('CA', 800), ('AK', 500), ('OK', 900);","completion":"SELECT state, num_wells FROM state_wells;"}
{"prompt":"What is the average number of goals scored per game by the home team in matches where the attendance was over 50,000? with given SQL schema CREATE TABLE games (home_team VARCHAR(50), away_team VARCHAR(50), attendance INTEGER, goals_home INTEGER, goals_away INTEGER); INSERT INTO games (home_team, away_team, attendance, goals_home, goals_away) VALUES ('Barcelona', 'Real Madrid', 65000, 3, 1), ('Manchester United', 'Liverpool', 75000, 2, 0);","completion":"SELECT AVG(goals_home) FROM games WHERE attendance > 50000;"}
{"prompt":"What is the maximum number of meals served daily in any refugee camp? with given SQL schema CREATE TABLE meals_served (id INT PRIMARY KEY, camp VARCHAR(50), month VARCHAR(20), day INT, number INT); INSERT INTO meals_served (id, camp, month, day, number) VALUES (1, 'Camp A', 'April', 1, 1500), (2, 'Camp B', 'April', 1, 1200), (3, 'Camp A', 'April', 2, 1600), (4, 'Camp B', 'April', 2, 1400), (5, 'Camp C', 'April', 3, 1800);","completion":"SELECT MAX(number) FROM meals_served;"}
{"prompt":"What is the average fare collected per trip for wheelchair accessible buses? with given SQL schema CREATE TABLE buses (id INT, type VARCHAR(20), fare FLOAT); CREATE TABLE trips (id INT, bus_id INT, wheelchair_accessible BOOLEAN);  INSERT INTO buses (id, type, fare) VALUES (1, 'Standard', 2.00), (2, 'Wheelchair Accessible', 2.50); INSERT INTO trips (id, bus_id, wheelchair_accessible) VALUES (1, 1, FALSE), (2, 2, TRUE);","completion":"SELECT AVG(buses.fare) FROM buses JOIN trips ON buses.id = trips.bus_id WHERE trips.wheelchair_accessible = TRUE;"}
{"prompt":"Delete the fabric with the highest production cost from the fabrics table. with given SQL schema CREATE TABLE fabrics (id INT, name VARCHAR(255), sustainability_rating FLOAT, production_cost FLOAT); INSERT INTO fabrics (id, name, sustainability_rating, production_cost) VALUES (1, 'Organic Cotton', 4.3, 3.2), (2, 'Recycled Polyester', 3.8, 2.9), (3, 'Hemp', 4.5, 2.5), (4, 'Pi\u00f1atex', 4.6, 3.5), (5, 'Bamboo', 4.7, 2.3), (6, 'Linen', 4.4, 2.7), (7, 'Modal', 4.2, 3.9), (8, 'Tencel', 4.8, 2.1);","completion":"DELETE FROM fabrics WHERE production_cost = (SELECT MAX(production_cost) FROM fabrics);"}
{"prompt":"What is the average bioprocess engineering project cost by continent and year, ordered by year? with given SQL schema CREATE SCHEMA if not exists bioprocess;CREATE TABLE if not exists bioprocess.projects (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(50), year INT, cost DECIMAL(10, 2)); INSERT INTO bioprocess.projects (id, name, continent, year, cost) VALUES (1, 'ProjectA', 'Asia', 2018, 500000.00), (2, 'ProjectB', 'North America', 2020, 800000.00), (3, 'ProjectC', 'Asia', 2019, 600000.00), (4, 'ProjectD', 'Europe', 2021, 700000.00);","completion":"SELECT continent, AVG(cost) AS avg_cost, year FROM bioprocess.projects WINDOW W AS (PARTITION BY year ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) GROUP BY continent, W.year ORDER BY year;"}
{"prompt":"Who are the top 3 countries with the most genetic research experiments? with given SQL schema CREATE SCHEMA if not exists biotech;USE biotech;CREATE TABLE if not exists experiments (id INT, country VARCHAR(255), type VARCHAR(255));INSERT INTO experiments (id, country, type) VALUES (1, 'Germany', 'Genetic'), (2, 'France', 'Genetic'), (3, 'USA', 'Bioprocess'), (4, 'Germany', 'Biosensor'), (5, 'UK', 'Genetic'), (6, 'France', 'Bioprocess');","completion":"SELECT country, COUNT(*) as num_experiments FROM experiments WHERE type = 'Genetic' GROUP BY country ORDER BY num_experiments DESC LIMIT 3;"}
{"prompt":"What is the average salary of employees in each federal agency? with given SQL schema CREATE TABLE agency (name VARCHAR(255), employees INT); CREATE TABLE employee (agency VARCHAR(255), salary DECIMAL(10,2)); INSERT INTO agency (name, employees) VALUES ('Department of Defense', 750000), ('Department of Veterans Affairs', 400000), ('Department of Health and Human Services', 650000), ('Department of Justice', 120000), ('Department of State', 80000); INSERT INTO employee (agency, salary) VALUES ('Department of Defense', 75000), ('Department of Defense', 80000), ('Department of Veterans Affairs', 50000), ('Department of Veterans Affairs', 55000), ('Department of Health and Human Services', 60000);","completion":"SELECT agency, AVG(salary) FROM employee GROUP BY agency;"}
{"prompt":"Find the total installed capacity of renewable energy projects in the country 'Germany' with given SQL schema CREATE TABLE renewable_projects ( id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), installed_capacity INT ); INSERT INTO renewable_projects (id, name, location, installed_capacity) VALUES (1, 'Solarpark Finow Tower', 'Germany', 45000); INSERT INTO renewable_projects (id, name, location, installed_capacity) VALUES (2, 'Waldpolenz Solar Park', 'Germany', 44500);","completion":"SELECT SUM(installed_capacity) FROM renewable_projects WHERE location = 'Germany';"}
{"prompt":"What is the average CO2 emission of buildings in the United Kingdom? with given SQL schema CREATE TABLE UKBuildings (id INT, city VARCHAR(20), co2_emission FLOAT); INSERT INTO UKBuildings (id, city, co2_emission) VALUES (1, 'London', 320.5), (2, 'Manchester', 380.6), (3, 'London', 340.1);","completion":"SELECT AVG(co2_emission) FROM UKBuildings WHERE city = 'London';"}
{"prompt":"What is the minimum health equity metric score achieved by healthcare providers working in rural areas? with given SQL schema CREATE TABLE healthcare_providers (id INT, name VARCHAR(100), location VARCHAR(50), health_equity_metric_score INT); INSERT INTO healthcare_providers (id, name, location, health_equity_metric_score) VALUES (1, 'Pat', 'Rural', 80), (2, 'Quinn', 'Urban', 85), (3, 'Riley', 'Rural', 75);","completion":"SELECT MIN(health_equity_metric_score) FROM healthcare_providers WHERE location = 'Rural';"}
{"prompt":"Which community health workers have not conducted any mental health parity assessments in Texas? with given SQL schema CREATE TABLE CommunityHealthWorkers (CHW_ID INT, Name VARCHAR(100), State VARCHAR(2)); INSERT INTO CommunityHealthWorkers (CHW_ID, Name, State) VALUES (1, 'John Doe', 'Texas'); INSERT INTO CommunityHealthWorkers (CHW_ID, Name, State) VALUES (2, 'Jane Smith', 'California'); CREATE TABLE MentalHealthParityAssessments (AssessmentID INT, CHW_ID INT, AssessmentDate DATE); INSERT INTO MentalHealthParityAssessments (AssessmentID, CHW_ID, AssessmentDate) VALUES (1, 1, '2021-01-01');","completion":"SELECT CHW_ID, Name FROM CommunityHealthWorkers cdw LEFT JOIN MentalHealthParityAssessments mhpa ON cdw.CHW_ID = mhpa.CHW_ID WHERE mhpa.CHW_ID IS NULL AND cdw.State = 'Texas';"}
{"prompt":"Find the names of all the indigenous communities in the 'Arctic_Communities' table that have a population size greater than the average population size in the 'Antarctic_Communities' table. with given SQL schema CREATE TABLE Arctic_Communities (name TEXT, population INTEGER); CREATE TABLE Antarctic_Communities (name TEXT, population INTEGER);","completion":"SELECT name FROM Arctic_Communities WHERE Arctic_Communities.population > (SELECT AVG(population) FROM Antarctic_Communities)"}
{"prompt":"Find the number of unique species observed at each monitoring station and the earliest observation date. with given SQL schema CREATE TABLE monitoring_stations (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50)); CREATE TABLE species_observations (id INT PRIMARY KEY, station_id INT, species_id INT, observation_date DATE); CREATE TABLE species (id INT PRIMARY KEY, name VARCHAR(50));","completion":"SELECT monitoring_stations.name, COUNT(DISTINCT species_observations.species_id) AS unique_species_count, MIN(species_observations.observation_date) AS earliest_observation_date FROM monitoring_stations INNER JOIN species_observations ON monitoring_stations.id = species_observations.station_id GROUP BY monitoring_stations.name;"}
{"prompt":"CREATE TABLE HeritageSites (Site VARCHAR(50), CountryName VARCHAR(50)); with given SQL schema INSERT INTO Countries (Name, Population) VALUES ('Australia', 25000000), ('Brazil', 210000000), ('China', 1400000000), ('India', 1350000000), ('Indonesia', 265000000), ('Russia', 1450000000), ('United States', 330000000);","completion":"FROM HeritageSites h JOIN Countries c ON h.CountryName = c.Name"}
{"prompt":"What traditional art forms have been preserved by communities in East Africa with a population of over 100,000? with given SQL schema CREATE TABLE Arts (id INT PRIMARY KEY, art_form VARCHAR(255), year_emerged INT, location VARCHAR(255), community_engagement INT); INSERT INTO Arts (id, art_form, year_emerged, location, community_engagement) VALUES (2, 'Tingatinga Painting', 1960, 'Tanzania', 400000);","completion":"SELECT a.art_form, a.year_emerged, a.location, c.community_name, c.region, c.engagement_level FROM Arts a INNER JOIN Communities c ON a.location = c.region WHERE c.speakers > 100000;"}
{"prompt":"How many depression patients are there in each age group? with given SQL schema CREATE TABLE age_groups (age_group_id INT, age_group_name VARCHAR(50), lower_limit INT, upper_limit INT); INSERT INTO age_groups (age_group_id, age_group_name, lower_limit, upper_limit) VALUES (1, '18-30', 18, 30);","completion":"SELECT age_groups.age_group_name, COUNT(patients.patient_id) FROM patients INNER JOIN age_groups ON patients.age BETWEEN age_groups.lower_limit AND age_groups.upper_limit WHERE patients.diagnosis = 'Depression' GROUP BY age_groups.age_group_name;"}
{"prompt":"Update the metric_value of the resilience metric with id 1 to 92 with given SQL schema CREATE TABLE resilience_metrics (id INT PRIMARY KEY, metric_name VARCHAR(255), metric_value INT, project_id INT); INSERT INTO resilience_metrics (id, metric_name, metric_value, project_id) VALUES (1, 'Earthquake Resistance', 90, 1); INSERT INTO resilience_metrics (id, metric_name, metric_value, project_id) VALUES (2, 'Wind Resistance', 95, 1);","completion":"UPDATE resilience_metrics SET metric_value = 92 WHERE id = 1;"}
{"prompt":"Insert a new record of a tourist visiting New Zealand from Singapore in 2024. with given SQL schema CREATE TABLE tourism_data (id INT, country VARCHAR(50), destination VARCHAR(50), arrival_date DATE, age INT);","completion":"INSERT INTO tourism_data (id, country, destination, arrival_date, age) VALUES (12, 'Singapore', 'New Zealand', '2024-02-18', 25);"}
{"prompt":"Update the species ID to 3 for the marine life sighting with ID 2 with given SQL schema CREATE TABLE marine_life_sightings (id INT PRIMARY KEY, species_id INT, location VARCHAR(255), date DATE); INSERT INTO marine_life_sightings (id, species_id, location, date) VALUES (1, 1, 'Pacific Ocean', '2022-02-01'), (2, 2, 'Atlantic Ocean', '2022-03-01');","completion":"WITH cte_sightings AS (UPDATE marine_life_sightings SET species_id = 3 WHERE id = 2 RETURNING id, species_id, location, date) SELECT * FROM cte_sightings;"}
{"prompt":"What are the names of the vessels that have complied with maritime law in the Pacific Ocean in the last 3 years? with given SQL schema CREATE TABLE vessels (vessel_name TEXT, compliance_status TEXT, ocean TEXT, year INT); INSERT INTO vessels (vessel_name, compliance_status, ocean, year) VALUES ('VesselA', 'compliant', 'Pacific', 2020), ('VesselB', 'non-compliant', 'Pacific', 2020), ('VesselC', 'compliant', 'Pacific', 2020), ('VesselA', 'compliant', 'Pacific', 2021), ('VesselB', 'non-compliant', 'Pacific', 2021), ('VesselC', 'compliant', 'Pacific', 2021);","completion":"SELECT DISTINCT vessel_name FROM vessels WHERE compliance_status = 'compliant' AND ocean = 'Pacific' AND year BETWEEN 2019 AND 2021;"}
{"prompt":"What is the maximum pollution level recorded in the Atlantic ocean? with given SQL schema CREATE TABLE pollution_monitoring_atlantic (location VARCHAR(255), pollution_level FLOAT); INSERT INTO pollution_monitoring_atlantic (location, pollution_level) VALUES ('Atlantic Ocean', 6.5), ('Gulf of Mexico', 7.2);","completion":"SELECT MAX(pollution_level) FROM pollution_monitoring_atlantic WHERE location = 'Atlantic Ocean';"}
{"prompt":"Show the number of articles and videos, by category, that have been created by studios located in Brazil and Japan. with given SQL schema CREATE TABLE media_content (id INT, title VARCHAR(255), category VARCHAR(255), studio_location VARCHAR(255)); INSERT INTO media_content (id, title, category, studio_location) VALUES (1, 'Article1', 'Politics', 'Brazil'), (2, 'Video1', 'Sports', 'Japan');","completion":"SELECT category, COUNT(*) as total FROM media_content WHERE studio_location IN ('Brazil', 'Japan') GROUP BY category;"}
{"prompt":"What is the number of movies produced by studios located in Africa and the percentage of those movies that are documentaries? with given SQL schema CREATE TABLE movie_africa (id INT, studio VARCHAR(255), movie_type VARCHAR(255)); INSERT INTO movie_africa (id, studio, movie_type) VALUES (1, 'Foluke Productions', 'Drama'); INSERT INTO movie_africa (id, studio, movie_type) VALUES (2, 'Foluke Productions', 'Documentary'); INSERT INTO movie_africa (id, studio, movie_type) VALUES (3, 'Kunle Afolayan Productions', 'Drama'); INSERT INTO movie_africa (id, studio, movie_type) VALUES (4, 'Kunle Afolayan Productions', 'Documentary'); INSERT INTO movie_africa (id, studio, movie_type) VALUES (5, 'RAK Studios', 'Drama');","completion":"SELECT COUNT(*) as count, ROUND(100.0 * SUM(CASE WHEN movie_type = 'Documentary' THEN 1 ELSE 0 END) \/ COUNT(*), 2) as doc_percentage FROM movie_africa WHERE studio IN (SELECT studio_name FROM movie_studios WHERE country IN (SELECT region FROM regions WHERE continent = 'Africa'));"}
{"prompt":"Who are the top 3 contract negotiators for defense projects in Europe? with given SQL schema CREATE TABLE contract_negotiators (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO contract_negotiators (id, name, region) VALUES (1, 'John Smith', 'Europe'), (2, 'Jane Doe', 'Americas'), (3, 'Mike Johnson', 'Asia Pacific'), (4, 'Sara Connor', 'Europe'), (5, 'Tom Williams', 'Middle East'), (6, 'Kate Brown', 'Europe');","completion":"SELECT name FROM contract_negotiators WHERE region = 'Europe' LIMIT 3;"}
{"prompt":"List the mines in the mining_sites table that have the lowest extraction rates, up to a maximum of 3 mines, excluding mines located in 'California'. with given SQL schema CREATE TABLE mining_sites (id INT, name VARCHAR(50), location VARCHAR(50), extraction_rate DECIMAL(5,2)); INSERT INTO mining_sites (id, name, location, extraction_rate) VALUES (1, 'Gold Mine', 'California', 12.5), (2, 'Silver Mine', 'Nevada', 15.2), (3, 'Copper Mine', 'Arizona', 18.9), (4, 'Iron Mine', 'Minnesota', 21.1);","completion":"SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY extraction_rate ASC) rn FROM mining_sites WHERE location != 'California') t WHERE rn <= 3;"}
{"prompt":"List the names and locations of mines that have not mined any type of metal. with given SQL schema CREATE TABLE mine (id INT, name VARCHAR(50), location VARCHAR(50));CREATE TABLE coal_mine (mine_id INT, amount INT);CREATE TABLE iron_mine (mine_id INT, amount INT);CREATE TABLE gold_mine (mine_id INT, amount INT);CREATE TABLE silver_mine (mine_id INT, amount INT);","completion":"SELECT m.name, m.location FROM mine m LEFT JOIN coal_mine c ON m.id = c.mine_id LEFT JOIN iron_mine i ON m.id = i.mine_id LEFT JOIN gold_mine g ON m.id = g.mine_id LEFT JOIN silver_mine s ON m.id = s.mine_id WHERE c.mine_id IS NULL AND i.mine_id IS NULL AND g.mine_id IS NULL AND s.mine_id IS NULL;"}
{"prompt":"Update the quantity of 'Dump Truck' to 12 in the equipment_rental table. with given SQL schema CREATE TABLE equipment_rental(id INT, equipment VARCHAR(50), quantity INT); INSERT INTO equipment_rental (id, equipment, quantity) VALUES (1, 'Bulldozer', 10), (2, 'Excavator', 15), (3, 'Dump Truck', 8);","completion":"UPDATE equipment_rental SET quantity = 12 WHERE equipment = 'Dump Truck';"}
{"prompt":"What is the total amount of network infrastructure investments for APAC countries? with given SQL schema CREATE TABLE network_investments (country VARCHAR(20), investment_amount FLOAT); INSERT INTO network_investments (country, investment_amount) VALUES ('China', 500000), ('Japan', 400000), ('India', 350000);","completion":"SELECT SUM(investment_amount) FROM network_investments WHERE country IN ('China', 'Japan', 'India', 'Australia', 'South Korea');"}
{"prompt":"What is the average age of journalists in the \"journalists\" table by gender? with given SQL schema CREATE TABLE journalists (id INT, name VARCHAR(50), age INT, gender VARCHAR(10));","completion":"SELECT gender, AVG(age) FROM journalists GROUP BY gender;"}
{"prompt":"Delete 'species' table with given SQL schema CREATE TABLE species (id INT PRIMARY KEY, name VARCHAR(255), population INT, conservation_status VARCHAR(255), last_sighting DATE); INSERT INTO species (id, name, population, conservation_status, last_sighting) VALUES (1, 'Blue Whale', 10000, 'Critically Endangered', '2020-01-01');","completion":"DROP TABLE species;"}
{"prompt":"How many research vessels are registered in the Mediterranean region? with given SQL schema CREATE TABLE research_vessels (name VARCHAR(255), region VARCHAR(255)); INSERT INTO research_vessels (name, region) VALUES ('Oceanus', 'Mediterranean'), ('Alvin', 'Atlantic'), ('Thunderbird', 'Pacific');","completion":"SELECT COUNT(*) FROM research_vessels WHERE region = 'Mediterranean';"}
{"prompt":"Update the names of players who use PlayStation VR to 'PSVR Users'. with given SQL schema CREATE TABLE Players (PlayerID INT, Name VARCHAR(20), VRPlatform VARCHAR(10)); INSERT INTO Players (PlayerID, Name, VRPlatform) VALUES (1, 'John', 'PlayStation VR');","completion":"UPDATE Players SET Name = 'PSVR Users' WHERE VRPlatform = 'PlayStation VR';"}
{"prompt":"What's the gender ratio of players who play esports games in Canada? with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Location VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Location) VALUES (1, 25, 'Male', 'Canada'); INSERT INTO Players (PlayerID, Age, Gender, Location) VALUES (2, 30, 'Female', 'Canada'); CREATE TABLE Games (GameID INT, GameName VARCHAR(20), Esports BOOLEAN); INSERT INTO Games (GameID, GameName, Esports) VALUES (1, 'Starship Battle', true);","completion":"SELECT (COUNT(CASE WHEN Gender = 'Male' THEN 1 END) * 1.0 \/ COUNT(*)) AS Male_ratio, (COUNT(CASE WHEN Gender = 'Female' THEN 1 END) * 1.0 \/ COUNT(*)) AS Female_ratio FROM Players INNER JOIN Games ON Players.Location = Games.GameName WHERE Games.Esports = true AND Players.Location = 'Canada';"}
{"prompt":"Update the temperature data for field ID 11111 where the temperature is over 30 degrees. with given SQL schema CREATE TABLE field_temperature (field_id INT, date DATE, temperature DECIMAL(5,2)); INSERT INTO field_temperature (field_id, date, temperature) VALUES (11111, '2022-03-01', 32.0), (11111, '2022-03-02', 29.0), (11111, '2022-03-03', 35.0);","completion":"UPDATE field_temperature SET temperature = 30.0 WHERE field_id = 11111 AND temperature > 30.0;"}
{"prompt":"How many citizen feedback records were created by each citizen in 2023? with given SQL schema CREATE TABLE feedback (id INT, citizen_id INT, created_at DATETIME); INSERT INTO feedback (id, citizen_id, created_at) VALUES (1, 1, '2023-01-01 12:34:56'), (2, 1, '2023-01-15 10:20:34'), (3, 2, '2023-02-20 16:45:01');","completion":"SELECT citizen_id, COUNT(*) as num_records FROM feedback WHERE created_at BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY citizen_id;"}
{"prompt":"What is the average response time for citizen feedback in rural areas? with given SQL schema CREATE TABLE Feedback (Location VARCHAR(255), ResponseTime INT); INSERT INTO Feedback (Location, ResponseTime) VALUES ('Rural', 120), ('Rural', 150), ('Urban', 90), ('Urban', 80), ('Rural', 130), ('Rural', 140);","completion":"SELECT AVG(ResponseTime) FROM Feedback WHERE Location = 'Rural';"}
{"prompt":"What is the total quantity of Europium produced in Oceania? with given SQL schema CREATE TABLE europium_production (year INT, region VARCHAR(20), quantity INT); INSERT INTO europium_production (year, region, quantity) VALUES (2015, 'Australia', 1000), (2016, 'Australia', 1200), (2015, 'New Zealand', 800), (2016, 'New Zealand', 900);","completion":"SELECT SUM(quantity) FROM europium_production WHERE region IN ('Australia', 'New Zealand');"}
{"prompt":"Update the description of a sustainable urbanism initiative in the sustainable_urbanism_initiatives table with given SQL schema CREATE TABLE public.sustainable_urbanism_initiatives (id SERIAL PRIMARY KEY, initiative_name VARCHAR(255), initiative_description TEXT, city_name VARCHAR(255), state_name VARCHAR(255)); INSERT INTO public.sustainable_urbanism_initiatives (initiative_name, initiative_description, city_name, state_name) VALUES ('Green City Program', 'Promotes green spaces and sustainable transportation options in urban areas', 'Portland', 'Oregon'), ('EcoDistricts Initiative', 'Encourages sustainable community development in city neighborhoods', 'Vancouver', 'British Columbia');","completion":"WITH updated_initiative AS (UPDATE public.sustainable_urbanism_initiatives SET initiative_description = 'Promotes green spaces, sustainable transportation, and energy-efficient buildings in urban areas' WHERE initiative_name = 'Green City Program' RETURNING *) INSERT INTO public.sustainable_urbanism_initiatives (initiative_name, initiative_description, city_name, state_name) SELECT initiative_name, initiative_description, city_name, state_name FROM updated_initiative;"}
{"prompt":"What is the minimum installed capacity (MW) of renewable energy projects? with given SQL schema CREATE TABLE renewable_projects_4 (id INT, name VARCHAR(255), location VARCHAR(255), capacity FLOAT, technology VARCHAR(255));","completion":"SELECT MIN(capacity) FROM renewable_projects_4 WHERE technology IN ('Solar', 'Wind', 'Hydro', 'Geothermal', 'Biomass');"}
{"prompt":"How many satellites were launched by each country in 2019? with given SQL schema CREATE TABLE satellites (satellite_id INT, satellite_name VARCHAR(100), country VARCHAR(50), launch_date DATE); INSERT INTO satellites (satellite_id, satellite_name, country, launch_date) VALUES (1, 'Sentinel-1A', 'France', '2012-04-03'); INSERT INTO satellites (satellite_id, satellite_name, country, launch_date) VALUES (2, 'Chandrayaan-1', 'India', '2008-10-22');","completion":"SELECT country, COUNT(*) as total_launched FROM satellites WHERE YEAR(launch_date) = 2019 GROUP BY country;"}
{"prompt":"What is the source distribution of space debris in orbit and how long has it been there on average? with given SQL schema CREATE TABLE space_debris (id INT, name VARCHAR(255), type VARCHAR(255), source VARCHAR(255), launch_date DATE); INSERT INTO space_debris VALUES (3, 'Defunct Probe', 'Probe', 'ESA', '2000-07-02');","completion":"SELECT source, COUNT(id) as count, AVG(DATEDIFF(CURDATE(), launch_date)) as avg_years_in_orbit FROM space_debris GROUP BY source;"}
{"prompt":"What is the total cost of space missions led by each country? with given SQL schema CREATE TABLE missions (mission_name VARCHAR(50), country VARCHAR(50), cost INT); INSERT INTO missions (mission_name, country, cost) VALUES ('Apollo', 'USA', 25000000000), ('Artemis', 'USA', 30000000000), ('Luna', 'Russia', 5000000000);","completion":"SELECT country, SUM(cost) as total_cost FROM missions GROUP BY country ORDER BY total_cost DESC;"}
{"prompt":"What is the average manufacturing cost of spacecrafts for each country? with given SQL schema CREATE TABLE SpacecraftManufacturing (id INT, country VARCHAR, cost FLOAT);","completion":"SELECT country, AVG(cost) AS avg_cost FROM SpacecraftManufacturing GROUP BY country;"}
{"prompt":"How many security incidents have been reported in each region per month? with given SQL schema CREATE TABLE security_incidents (id INT, timestamp TIMESTAMP, region VARCHAR(255), incident_type VARCHAR(255)); INSERT INTO security_incidents (id, timestamp, region, incident_type) VALUES (1, '2020-01-01 12:00:00', 'North America', 'Phishing'), (2, '2020-02-05 10:30:00', 'Europe', 'Malware');","completion":"SELECT region, DATE_FORMAT(timestamp, '%Y-%m') as month, COUNT(*) as num_incidents FROM security_incidents GROUP BY region, month;"}
{"prompt":"Update user information with the following details: [(1, 'jane.doe@example.com', 'Jane Doe', '2022-01-01 10:30:00'), (2, 'john.doe@example.com', 'John Doe', '2022-02-12 15:45:00')] in the \"users\" table with given SQL schema CREATE TABLE users (id INT PRIMARY KEY, email VARCHAR(50), name VARCHAR(50), last_login DATETIME);","completion":"UPDATE users SET email = CASE id WHEN 1 THEN 'jane.doe@example.com' WHEN 2 THEN 'john.doe@example.com' END, name = CASE id WHEN 1 THEN 'Jane Doe' WHEN 2 THEN 'John Doe' END, last_login = CASE id WHEN 1 THEN '2022-01-01 10:30:00' WHEN 2 THEN '2022-02-12 15:45:00' END WHERE id IN (1, 2);"}
{"prompt":"What are the most common types of policy violations in the last year, and how many incidents of each type occurred? with given SQL schema CREATE TABLE policy_violations (id INT, violation_type VARCHAR(20), timestamp TIMESTAMP);","completion":"SELECT violation_type, COUNT(*) FROM policy_violations WHERE timestamp >= NOW() - INTERVAL 1 YEAR GROUP BY violation_type ORDER BY COUNT(*) DESC;"}
{"prompt":"Update the sustainability_metrics table to reflect the correct CO2 emissions for garment production in the South American region. with given SQL schema CREATE TABLE sustainability_metrics (id INT, region VARCHAR(255), co2_emissions INT); INSERT INTO sustainability_metrics (id, region, co2_emissions) VALUES (1, 'South America', 120), (2, 'South America', 150), (3, 'South America', 180);","completion":"UPDATE sustainability_metrics SET co2_emissions = 130 WHERE region = 'South America';"}
{"prompt":"Show the total tonnage of each cargo type in the inventory with given SQL schema CREATE TABLE Cargo (CargoID INT, CargoType VARCHAR(50), Tonnage INT); INSERT INTO Cargo (CargoID, CargoType, Tonnage) VALUES (1, 'Coal', 1000), (2, 'IronOre', 2000), (3, 'Grain', 1500), (4, 'Coal', 500);","completion":"SELECT CargoType, SUM(Tonnage) FROM Cargo GROUP BY CargoType;"}
{"prompt":"What is the maximum daily water usage in the Tokyo region in the past year? with given SQL schema CREATE TABLE daily_usage (region VARCHAR(20), daily_usage FLOAT, timestamp TIMESTAMP); INSERT INTO daily_usage (region, daily_usage, timestamp) VALUES ('Tokyo', 1200000, '2022-01-01 10:00:00'), ('Tokyo', 1300000, '2022-02-01 10:00:00');","completion":"SELECT MAX(daily_usage) FROM daily_usage WHERE region = 'Tokyo' AND timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 YEAR) AND CURRENT_TIMESTAMP;"}
{"prompt":"What is the average safety score for each creative AI application, grouped by region? with given SQL schema CREATE TABLE CreativeAIs (id INT, name VARCHAR(50), safety_score INT, region VARCHAR(50)); INSERT INTO CreativeAIs (id, name, safety_score, region) VALUES (1, 'AI Painter', 85, 'North America'); INSERT INTO CreativeAIs (id, name, safety_score, region) VALUES (2, 'AI Music Composer', 90, 'Europe'); INSERT INTO CreativeAIs (id, name, safety_score, region) VALUES (3, 'AI Poet', 80, 'Asia');","completion":"SELECT region, AVG(safety_score) as avg_safety_score FROM CreativeAIs GROUP BY region;"}
{"prompt":"What is the average budget for agricultural innovation projects in the 'rural_development' database, grouped by project type? with given SQL schema CREATE TABLE agri_innovation_project (project_id INT, project_name VARCHAR(50), project_type VARCHAR(50), budget INT); INSERT INTO agri_innovation_project (project_id, project_name, project_type, budget) VALUES (1, 'Precision Agriculture', 'Technology', 500000);","completion":"SELECT project_type, AVG(budget) FROM agri_innovation_project GROUP BY project_type;"}
{"prompt":"Insert a new aircraft model 'B747-8' into the 'aircraft_models' table with corresponding details. with given SQL schema CREATE TABLE aircraft_models (model VARCHAR(50), manufacturer VARCHAR(50), first_flight YEAR, production_status VARCHAR(50));","completion":"INSERT INTO aircraft_models (model, manufacturer, first_flight, production_status) VALUES ('B747-8', 'Boeing', 2010, 'In Production');"}
{"prompt":"What was the total cost of aircraft manufactured by Boeing in 2020? with given SQL schema CREATE TABLE Aircraft (aircraft_id INT, manufacturer VARCHAR(50), model VARCHAR(50), year INT, cost FLOAT); INSERT INTO Aircraft (aircraft_id, manufacturer, model, year, cost) VALUES (1, 'Boeing', 'B737', 2020, 100000000.0), (2, 'Airbus', 'A320', 2019, 85000000.0), (3, 'Boeing', 'B787', 2021, 250000000.0);","completion":"SELECT SUM(cost) FROM Aircraft WHERE manufacturer = 'Boeing' AND year = 2020;"}
{"prompt":"Find the total number of attendees at events in Paris and Rome from 2018 to 2020, excluding repeating attendees. with given SQL schema CREATE TABLE EventAttendance (attendee_id INT, event_city VARCHAR(50), event_year INT, attended INT); INSERT INTO EventAttendance (attendee_id, event_city, event_year, attended) VALUES (1, 'Paris', 2018, 1), (2, 'Rome', 2019, 1), (3, 'Paris', 2018, 1), (4, 'Rome', 2020, 1), (5, 'Paris', 2019, 1), (6, 'Rome', 2018, 1), (7, 'Paris', 2020, 1);","completion":"SELECT event_city, COUNT(DISTINCT attendee_id) FROM EventAttendance WHERE event_city IN ('Paris', 'Rome') AND event_year BETWEEN 2018 AND 2020 GROUP BY event_city;"}
{"prompt":"What is the total funding received by performing arts events from government sources in the last 5 years? with given SQL schema CREATE TABLE funding_table (id INT, event_name TEXT, funding_source TEXT, amount_funded INT, event_date DATE); INSERT INTO funding_table (id, event_name, funding_source, amount_funded, event_date) VALUES (1, 'Theatre Performance', 'Government', 8000, '2018-01-01'), (2, 'Dance Recital', 'Government', 9000, '2017-01-01');","completion":"SELECT SUM(amount_funded) FROM funding_table WHERE funding_source = 'Government' AND event_date BETWEEN DATEADD(year, -5, GETDATE()) AND GETDATE() AND event_type = 'Performing Arts';"}
{"prompt":"Which 'Literary Arts' events in Boston had more than 50 attendees? with given SQL schema CREATE TABLE event_attendance (event_name VARCHAR(50), city VARCHAR(50), attendees INT); INSERT INTO event_attendance (event_name, city, attendees) VALUES ('Literary Arts', 'Boston', 60);","completion":"SELECT event_name, city FROM event_attendance WHERE event_name = 'Literary Arts' AND city = 'Boston' AND attendees > 50;"}
{"prompt":"How many TV shows were produced by each studio in 2021? with given SQL schema CREATE TABLE Studios (studio_id INT, studio_name VARCHAR(255), country VARCHAR(255)); INSERT INTO Studios (studio_id, studio_name, country) VALUES (1, 'Studio A', 'USA'), (2, 'Studio B', 'USA'), (3, 'Studio C', 'Canada'); CREATE TABLE TV_Shows (show_id INT, show_name VARCHAR(255), studio_id INT, year INT); INSERT INTO TV_Shows (show_id, show_name, studio_id, year) VALUES (1, 'Show X', 1, 2021), (2, 'Show Y', 1, 2022), (3, 'Show Z', 2, 2021), (4, 'Show W', 3, 2020);","completion":"SELECT s.studio_name, COUNT(*) as shows_in_2021 FROM Studios s JOIN TV_Shows t ON s.studio_id = t.studio_id WHERE t.year = 2021 GROUP BY s.studio_id, s.studio_name;"}
{"prompt":"Get the number of construction labor hours worked in the month of January 2022 with given SQL schema CREATE TABLE construction_labor (worker_id INT, hours_worked INT, work_date DATE);","completion":"SELECT SUM(hours_worked) FROM construction_labor WHERE EXTRACT(MONTH FROM work_date) = 1 AND EXTRACT(YEAR FROM work_date) = 2022;"}
{"prompt":"List the number of unique strains available in each dispensary in Washington in Q3 of 2022. with given SQL schema CREATE TABLE available_strains (id INT, strain_name VARCHAR(255), dispensary_name VARCHAR(255), state VARCHAR(255), availability_date DATE);","completion":"SELECT dispensary_name, COUNT(DISTINCT strain_name) FROM available_strains WHERE state = 'Washington' AND availability_date BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY dispensary_name;"}
{"prompt":"What is the minimum billing amount for cases in the region 'South'? with given SQL schema CREATE TABLE cases (case_id INT, region TEXT, billing_amount INT);","completion":"SELECT MIN(billing_amount) FROM cases WHERE region = 'South';"}
{"prompt":"List the total waste generated per month by chemical manufacturers in Brazil for the past 12 months. with given SQL schema CREATE TABLE waste (id INT, manufacturer_country VARCHAR(255), amount FLOAT, waste_type VARCHAR(255), date DATE);","completion":"SELECT manufacturer_country, DATE_FORMAT(date, '%Y-%m') as month, SUM(amount) as total_waste FROM waste WHERE manufacturer_country = 'Brazil' AND date > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY manufacturer_country, month;"}
{"prompt":"Update a record with infectious disease tracking data with given SQL schema CREATE TABLE infectious_disease_tracking_v2 (id INT, location VARCHAR(20), infection_rate INT);","completion":"UPDATE infectious_disease_tracking_v2 SET infection_rate = 14 WHERE id = 1;"}
{"prompt":"What is the maximum amount of funding received by a social enterprise founded by a person from the LGBTQ+ community? with given SQL schema CREATE TABLE Companies (id INT, name TEXT, industry TEXT, founders TEXT, funding FLOAT, lgbtq_founder BOOLEAN); INSERT INTO Companies (id, name, industry, founders, funding, lgbtq_founder) VALUES (1, 'CompassionateCare', 'Social Enterprise', 'LGBTQ+ Founder', 8000000.00, TRUE); INSERT INTO Companies (id, name, industry, founders, funding, lgbtq_founder) VALUES (2, 'NeighborhoodAid', 'Social Enterprise', 'Straight Founder', 12000000.00, FALSE);","completion":"SELECT MAX(funding) FROM Companies WHERE industry = 'Social Enterprise' AND lgbtq_founder = TRUE;"}
{"prompt":"List all startups that have not had an investment round yet and were founded after 2015? with given SQL schema CREATE TABLE company (id INT, name TEXT, founding_date DATE); CREATE TABLE investment_rounds (id INT, company_id INT, funding_amount INT); INSERT INTO company (id, name, founding_date) VALUES (1, 'Acme Inc', '2016-01-01'); INSERT INTO investment_rounds (id, company_id, funding_amount) VALUES (1, 1, 500000);","completion":"SELECT company.name FROM company LEFT JOIN investment_rounds ON company.id = investment_rounds.company_id WHERE investment_rounds.id IS NULL AND founding_date > '2015-12-31';"}
{"prompt":"What was the maximum number of training hours for farmers in each country in 2020? with given SQL schema CREATE TABLE training (id INT, country_id INT, farmer_id INT, hours INT, date DATE);","completion":"SELECT country_id, MAX(hours) FROM training WHERE YEAR(date) = 2020 GROUP BY country_id;"}
{"prompt":"What is the minimum number of disability accommodations provided in a month for 'Mental Health Support'? with given SQL schema CREATE TABLE Accommodations (ID INT, Category TEXT, Month INT, NumberProvided INT); INSERT INTO Accommodations (ID, Category, Month, NumberProvided) VALUES (1, 'Mental Health Support', 1, 5), (2, 'Mental Health Support', 2, 7), (3, 'Physical Assistance', 1, 20);","completion":"SELECT MIN(NumberProvided) FROM Accommodations WHERE Category = 'Mental Health Support';"}
{"prompt":"How many shark species are found in the Indian Ocean? with given SQL schema CREATE TABLE shark_species (name VARCHAR(255), ocean VARCHAR(255)); INSERT INTO shark_species (name, ocean) VALUES ('Whale Shark', 'Indian Ocean'), ('Tiger Shark', 'Atlantic Ocean');","completion":"SELECT COUNT(*) FROM shark_species WHERE ocean = 'Indian Ocean';"}
{"prompt":"How many smart contracts have been deployed by developer 'Hayden Adams'? with given SQL schema CREATE TABLE smart_contract_deployments (deployment_id INT PRIMARY KEY, developer_name TEXT, contract_name TEXT, deployment_date DATE); INSERT INTO smart_contract_deployments (deployment_id, developer_name, contract_name, deployment_date) VALUES (1, 'Hayden Adams', 'Uniswap', '2021-01-01');","completion":"SELECT COUNT(*) FROM smart_contract_deployments WHERE developer_name = 'Hayden Adams';"}
{"prompt":"What is the maximum height of a tree species in the boreal region? with given SQL schema CREATE TABLE tree_species (id INT, species TEXT, avg_height FLOAT, region TEXT);","completion":"SELECT MAX(avg_height) FROM tree_species WHERE region = 'boreal';"}
{"prompt":"What are the top 3 preferred cosmetic products by consumers from the USA? with given SQL schema CREATE TABLE cosmetics (id INT, product_name TEXT, consumer_preference FLOAT, country TEXT); INSERT INTO cosmetics (id, product_name, consumer_preference, country) VALUES (1, 'Lipstick', 4.2, 'USA'), (2, 'Foundation', 4.5, 'Canada'), (3, 'Mascara', 4.7, 'USA');","completion":"SELECT product_name, consumer_preference FROM cosmetics WHERE country = 'USA' ORDER BY consumer_preference DESC LIMIT 3;"}
{"prompt":"Which region sources the most natural ingredients for cosmetic products? with given SQL schema CREATE TABLE Ingredient_Sourcing (SupplierID INT, ProductID INT, Natural BOOLEAN, Region VARCHAR(50)); INSERT INTO Ingredient_Sourcing (SupplierID, ProductID, Natural, Region) VALUES (2001, 101, TRUE, 'Asia'), (2002, 102, FALSE, 'Asia'), (2003, 101, TRUE, 'Europe'), (2004, 103, FALSE, 'Europe'), (2005, 102, TRUE, 'Africa');","completion":"SELECT Region, SUM(Natural) as TotalNatural FROM Ingredient_Sourcing GROUP BY Region ORDER BY TotalNatural DESC;"}
{"prompt":"Count the number of vegan lipsticks sold in the US. with given SQL schema CREATE TABLE lipsticks(product_name TEXT, product_type TEXT, vegan BOOLEAN, sale_country TEXT); INSERT INTO lipsticks(product_name, product_type, vegan, sale_country) VALUES ('Matte Lipstick', 'lipsticks', true, 'US');","completion":"SELECT COUNT(*) FROM lipsticks WHERE product_type = 'lipsticks' AND vegan = true AND sale_country = 'US';"}
{"prompt":"What is the total quantity of lip and cheek products sold in France in the past quarter? with given SQL schema CREATE TABLE QuantitySales (product VARCHAR(255), country VARCHAR(255), date DATE, quantity INT);","completion":"SELECT SUM(quantity) FROM QuantitySales WHERE (product = 'Lipstick' OR product = 'Cheek Stain') AND country = 'France' AND date >= DATEADD(quarter, -1, GETDATE());"}
{"prompt":"What is the total number of crime incidents reported in each city in the state of Texas in the last month? with given SQL schema CREATE TABLE crime_incidents_tx (id INT, city VARCHAR(255), crime_type VARCHAR(255), reported_date DATE);","completion":"SELECT city, COUNT(*) as total_incidents FROM crime_incidents_tx WHERE reported_date BETWEEN '2021-11-01' AND '2021-11-30' GROUP BY city;"}
{"prompt":"What is the total transaction amount by transaction type? with given SQL schema CREATE TABLE Transactions (TransactionID INT, TransactionType VARCHAR(20), Amount DECIMAL(10, 2)); INSERT INTO Transactions (TransactionID, TransactionType, Amount) VALUES (1, 'Deposit', 5000.00), (2, 'Withdrawal', 2000.00), (3, 'Transfer', 3000.00);","completion":"SELECT TransactionType, SUM(Amount) AS TotalAmount FROM Transactions GROUP BY TransactionType;"}
{"prompt":"What is the total value of transactions for each customer in the last 30 days? with given SQL schema CREATE TABLE transactions (id INT, customer_id INT, value DECIMAL(10, 2), transaction_date DATE); INSERT INTO transactions (id, customer_id, value, transaction_date) VALUES (1, 1, 100, '2022-01-01'), (2, 1, 200, '2022-01-15'), (3, 2, 50, '2022-01-05'), (4, 2, 150, '2022-01-30'), (5, 3, 300, '2022-01-20');","completion":"SELECT c.id, SUM(t.value) FROM customers c INNER JOIN transactions t ON c.id = t.customer_id WHERE t.transaction_date >= CURDATE() - INTERVAL 30 DAY GROUP BY c.id;"}
{"prompt":"Count the number of artifacts found in each 'material' in the 'artifacts' table. with given SQL schema CREATE TABLE artifacts (id INT, site_id INT, artifact_type VARCHAR(50), material VARCHAR(50), date_found DATE); INSERT INTO artifacts (id, site_id, artifact_type, material, date_found) VALUES (1, 1, 'Pottery', 'Clay', '2020-01-01'), (2, 1, 'Coin', 'Metal', '2020-01-02'), (3, 2, 'Bead', 'Glass', '2020-01-03'), (4, 1, 'Pottery', 'Ceramic', '2020-01-04');","completion":"SELECT material, COUNT(*) FROM artifacts GROUP BY material;"}
{"prompt":"Calculate total resource allocation for each clinic with given SQL schema CREATE TABLE if not exists 'clinic_resources' (id INT, clinic_name TEXT, resource TEXT, allocation INT, PRIMARY KEY(id));","completion":"SELECT clinic_name, SUM(allocation) FROM 'clinic_resources' GROUP BY clinic_name;"}
{"prompt":"What is the average number of beds in rural hospitals in each province of Canada? with given SQL schema CREATE TABLE rural_canada_hospitals (name TEXT, province TEXT, num_beds INTEGER); INSERT INTO rural_canada_hospitals (name, province, num_beds) VALUES ('Hospital A', 'Ontario', 50), ('Hospital B', 'Quebec', 75), ('Hospital C', 'Alberta', 40), ('Hospital D', 'British Columbia', 60);","completion":"SELECT province, AVG(num_beds) FROM rural_canada_hospitals GROUP BY province;"}
{"prompt":"How many unique donors contributed to each program category in H2 2021? with given SQL schema CREATE TABLE DonorPrograms (donor_id INT, program_category VARCHAR(255), donation_date DATE); INSERT INTO DonorPrograms (donor_id, program_category, donation_date) VALUES (1, 'Education', '2021-07-02'), (2, 'Health', '2021-07-03'), (3, 'Environment', '2021-07-04'), (4, 'Education', '2021-08-05'), (5, 'Health', '2021-08-06'), (6, 'Arts', '2021-07-07'), (7, 'Arts', '2021-08-08');","completion":"SELECT program_category, COUNT(DISTINCT donor_id) as total_donors FROM DonorPrograms WHERE donation_date BETWEEN '2021-07-01' AND '2021-12-31' GROUP BY program_category;"}
{"prompt":"Who are the top 3 donors based on the total amount donated in the 'Donations' table? with given SQL schema CREATE TABLE Donations (DonorID INT, DonationDate DATE, Amount DECIMAL(10, 2)); INSERT INTO Donations (DonorID, DonationDate, Amount) VALUES (1, '2020-01-01', 50.00), (2, '2019-12-31', 100.00), (3, '2019-11-01', 200.00), (4, '2019-10-01', 150.00);","completion":"SELECT DonorID, SUM(Amount) as TotalDonated FROM Donations GROUP BY DonorID ORDER BY TotalDonated DESC LIMIT 3;"}
{"prompt":"How many employees who identify as Latinx were hired in each department in 2020? with given SQL schema CREATE TABLE Employees (EmployeeID INT, Race VARCHAR(20), HireYear INT, Department VARCHAR(20)); INSERT INTO Employees (EmployeeID, Race, HireYear, Department) VALUES (1, 'White', 2020, 'IT'), (2, 'Black', 2019, 'HR'), (3, 'Asian', 2018, 'IT'), (4, 'Latinx', 2020, 'IT'), (5, 'Latinx', 2020, 'HR');","completion":"SELECT Department, COUNT(*) FROM Employees WHERE HireYear = 2020 AND Race = 'Latinx' GROUP BY Department;"}
{"prompt":"List the job titles of employees who have a salary higher than the average salary in the IT department. with given SQL schema CREATE TABLE Employees (EmployeeID INT, JobTitle VARCHAR(50), Salary DECIMAL(10,2), Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, JobTitle, Salary, Department) VALUES (1, 'Software Engineer', 90000.00, 'IT'), (2, 'Data Analyst', 80000.00, 'IT'), (3, 'Software Engineer', 75000.00, 'IT');","completion":"SELECT JobTitle FROM Employees WHERE Salary > (SELECT AVG(Salary) FROM Employees WHERE Department = 'IT') AND Department = 'IT';"}
{"prompt":"List the top 3 donors from the 'asia_donors' table who have donated the highest amounts. with given SQL schema CREATE TABLE asia_donors (id INT, donor_name VARCHAR(50), donation_amount DECIMAL(10,2)); INSERT INTO asia_donors (id, donor_name, donation_amount) VALUES (1, 'DonorA', 25000), (2, 'DonorB', 18000), (3, 'DonorC', 12000), (4, 'DonorD', 22000), (5, 'DonorE', 15000);","completion":"SELECT donor_name, donation_amount FROM asia_donors ORDER BY donation_amount DESC LIMIT 3;"}
{"prompt":"How many ethical AI projects does each organization have in Canada? with given SQL schema CREATE TABLE ai_ethics (id INT, project VARCHAR(50), organization VARCHAR(50), country VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO ai_ethics (id, project, organization, country, start_date, end_date) VALUES (3, 'AI Ethics Compliance', 'AI Guardians', 'Canada', '2020-01-01', '2020-12-31');","completion":"SELECT organization, COUNT(*) as total_projects FROM ai_ethics WHERE country = 'Canada' GROUP BY organization;"}
{"prompt":"What is the maximum fare for 'Train' mode of transport in 'June'? with given SQL schema CREATE TABLE Fares(fare INT, journey_date DATE, mode_of_transport VARCHAR(20)); INSERT INTO Fares(fare, journey_date, mode_of_transport) VALUES (7, '2022-06-01', 'Train'), (8, '2022-06-02', 'Train'), (9, '2022-07-01', 'Train');","completion":"SELECT MAX(fare) FROM Fares WHERE mode_of_transport = 'Train' AND EXTRACT(MONTH FROM journey_date) = 6;"}
{"prompt":"Find the number of brands that adhere to fair labor practices in each country. with given SQL schema CREATE TABLE brands (brand_id INT, country VARCHAR(20), adheres_to_fair_labor_practices BOOLEAN);","completion":"SELECT country, COUNT(*) FROM brands WHERE adheres_to_fair_labor_practices = TRUE GROUP BY country;"}
{"prompt":"What is the total quantity of sustainable material used by each brand, ordered by the most used material? with given SQL schema CREATE TABLE Brands (BrandID INT, BrandName VARCHAR(50), Material VARCHAR(50), Quantity INT);INSERT INTO Brands (BrandID, BrandName, Material, Quantity) VALUES (1, 'BrandA', 'Organic Cotton', 3000), (2, 'BrandB', 'Recycled Polyester', 2500), (1, 'BrandA', 'Hemp', 1500), (3, 'BrandC', 'Organic Cotton', 2000), (2, 'BrandB', 'Tencel', 1800);","completion":"SELECT Material, SUM(Quantity) as TotalQuantity FROM Brands GROUP BY Material ORDER BY TotalQuantity DESC;"}
{"prompt":"What is the average textile waste generation (in metric tons) per sustainable fashion brand in the EU? with given SQL schema CREATE TABLE TextileWaste (Brand VARCHAR(255), Location VARCHAR(255), WasteQuantity FLOAT); INSERT INTO TextileWaste (Brand, Location, WasteQuantity) VALUES ('BrandA', 'EU', 12.5), ('BrandB', 'EU', 15.8), ('BrandC', 'EU', 10.4);","completion":"SELECT AVG(WasteQuantity) FROM TextileWaste WHERE Location = 'EU';"}
{"prompt":"How many unique donors are there in the state of Washington? with given SQL schema CREATE TABLE donors (id INT, state TEXT); INSERT INTO donors (id, state) VALUES (1, 'Washington'), (2, 'Washington'), (3, 'Oregon'), (4, 'Washington');","completion":"SELECT COUNT(DISTINCT id) FROM donors WHERE state = 'Washington';"}
{"prompt":"What is the average donation amount per month for the last two years? with given SQL schema CREATE TABLE Donations (DonationID INT, DonationAmount DECIMAL(10,2), DonationDate DATE);","completion":"SELECT DATEPART(month, DonationDate) AS Month, AVG(DonationAmount) FROM Donations WHERE YEAR(DonationDate) >= YEAR(DATEADD(year, -2, GETDATE())) GROUP BY DATEPART(month, DonationDate);"}
{"prompt":"Delete the cultural competency training record for the employee with id 1006 with given SQL schema CREATE TABLE employee_trainings (employee_id INT, training_type VARCHAR(255), completed_date DATE); INSERT INTO employee_trainings (employee_id, training_type, completed_date) VALUES (1001, 'Cultural Competency', '2022-01-15'), (1002, 'Cultural Competency', '2021-12-12'), (1003, 'Cultural Competency', '2022-02-20'), (1006, 'Cultural Competency', '2022-03-15');","completion":"DELETE FROM employee_trainings WHERE employee_id = 1006;"}
{"prompt":"List all virtual tours in Canada with a price over 20 CAD. with given SQL schema CREATE TABLE VirtualTours (id INT, name TEXT, country TEXT, price FLOAT); INSERT INTO VirtualTours (id, name, country, price) VALUES (1, 'Virtual Niagara Falls Tour', 'Canada', 25.0), (2, 'Canada Virtual Wildlife Tour', 'Canada', 18.5);","completion":"SELECT * FROM VirtualTours WHERE country = 'Canada' AND price > 20;"}
{"prompt":"What is the engagement rate for virtual tours in 'Rome'? with given SQL schema CREATE TABLE virtual_tours (tour_id INT, hotel_id INT, city TEXT, engagement INT); INSERT INTO virtual_tours (tour_id, hotel_id, city, engagement) VALUES (1, 3, 'Rome', 100), (2, 3, 'Rome', 150), (3, 4, 'Rome', 200);","completion":"SELECT AVG(engagement) FROM virtual_tours WHERE city = 'Rome';"}
{"prompt":"Insert records of new traditional art forms with given SQL schema CREATE TABLE art_forms (id INT, name VARCHAR(50), description VARCHAR(100), origin_country VARCHAR(50));","completion":"INSERT INTO art_forms (id, name, description, origin_country) VALUES (3, 'Taiga', 'Traditional Siberian embroidery', 'Russia'), (4, 'Tebedu', 'Sarawakian traditional weaving', 'Malaysia')"}
{"prompt":"Delete the 'therapists' table with given SQL schema DROP TABLE therapists;","completion":"DROP TABLE therapists;"}
{"prompt":"Find the minimum depth of the ocean floor in the Indian Ocean. with given SQL schema CREATE TABLE ocean_floor_depth (location TEXT, depth INTEGER); INSERT INTO ocean_floor_depth (location, depth) VALUES ('Indian Ocean', 8000); INSERT INTO ocean_floor_depth (location, depth) VALUES ('Pacific Ocean', 10000);","completion":"SELECT MIN(depth) FROM ocean_floor_depth WHERE location = 'Indian Ocean';"}
{"prompt":"How many hours of content are available for children in the Middle East? with given SQL schema CREATE TABLE content (content_id INT, content_type VARCHAR(20), audience_type VARCHAR(20), hours_available FLOAT); INSERT INTO content VALUES (1, 'cartoons', 'children', 15.5);","completion":"SELECT SUM(hours_available) FROM content WHERE audience_type = 'children' AND country IN ('Saudi Arabia', 'United Arab Emirates', 'Israel');"}
{"prompt":"What is the average number of social media followers of news anchors in a specific news channel, categorized by gender? with given SQL schema CREATE TABLE news_anchors (id INT, name VARCHAR(255), news_channel VARCHAR(255), followers INT, gender VARCHAR(255)); INSERT INTO news_anchors (id, name, news_channel, followers, gender) VALUES (1, 'Anchor1', 'Channel1', 50000, 'Female'), (2, 'Anchor2', 'Channel1', 60000, 'Male');","completion":"SELECT gender, AVG(followers) FROM news_anchors WHERE news_channel = 'Channel1' GROUP BY gender;"}
{"prompt":"Display the mining sites and their respective water consumption in the 'water_consumption' table. with given SQL schema CREATE TABLE water_consumption (site VARCHAR(50), water_consumption DECIMAL(10,2));","completion":"SELECT site, water_consumption FROM water_consumption;"}
{"prompt":"How many complaints were received for mobile and broadband services in the last month? with given SQL schema CREATE TABLE customer_complaints (complaint_id INT, complaint_type VARCHAR(50), complaint_date DATE); INSERT INTO customer_complaints (complaint_id, complaint_type, complaint_date) VALUES (1, 'Mobile', '2022-03-01'), (2, 'Broadband', '2022-03-15'), (3, 'Mobile', '2022-04-01');","completion":"SELECT COUNT(*) FROM customer_complaints WHERE complaint_date >= DATE_TRUNC('month', NOW()) - INTERVAL '1 month' AND complaint_type IN ('Mobile', 'Broadband');"}
{"prompt":"What is the peak usage time for each day of the week? with given SQL schema CREATE TABLE usage_timestamps (usage_time TIMESTAMP, data_usage FLOAT); INSERT INTO usage_timestamps (usage_time, data_usage) VALUES ('2022-01-01 09:00:00', 5000), ('2022-01-01 10:00:00', 6000), ('2022-01-02 11:00:00', 7000);","completion":"SELECT DATE_FORMAT(usage_time, '%W') AS day_of_week, HOUR(usage_time) AS hour_of_day, MAX(data_usage) AS peak_usage FROM usage_timestamps GROUP BY day_of_week, hour_of_day;"}
{"prompt":"Calculate the total number of volunteer hours contributed by volunteers from 'California' in 'Health' projects in 2021. with given SQL schema CREATE TABLE volunteers (volunteer_id INT, name VARCHAR(255), state VARCHAR(255));","completion":"SELECT SUM(vh.hours) as total_hours FROM volunteer_projects vp JOIN volunteer_hours vh ON vp.project_id = vh.project_id JOIN volunteers vol ON vh.volunteer_id = vol.volunteer_id WHERE vp.cause = 'Health' AND vol.state = 'California' AND vh.volunteer_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"prompt":"Update records in the 'Donors' table where the donation amount is greater than $1000 and change the last donation date to '2022-01-01' with given SQL schema CREATE TABLE Donors (id INT PRIMARY KEY, donor_name VARCHAR(255), last_donation DATE, donation_amount FLOAT);","completion":"UPDATE Donors SET last_donation = '2022-01-01' WHERE donation_amount > 1000;"}
{"prompt":"What is the average donation amount for the 'Health' program? with given SQL schema CREATE TABLE program (id INT, name VARCHAR(50)); INSERT INTO program (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE donation (id INT, amount DECIMAL(10,2), program_id INT);","completion":"SELECT AVG(d.amount) as avg_donation_amount FROM donation d WHERE d.program_id = 2;"}
{"prompt":"Find the number of unique organizations in each country in the Philanthropy Trends table? with given SQL schema CREATE TABLE PhilanthropyTrends (OrgID INT, Name TEXT, Country TEXT);","completion":"SELECT Country, COUNT(DISTINCT OrgID) as UniqueOrganizations FROM PhilanthropyTrends GROUP BY Country;"}
{"prompt":"What is the total number of games designed by non-binary game designers? with given SQL schema CREATE TABLE GameDesigners (DesignerID INT, DesignerName VARCHAR(50), Gender VARCHAR(10), NumberOfGames INT); INSERT INTO GameDesigners (DesignerID, DesignerName, Gender, NumberOfGames) VALUES (1, 'Alice', 'Female', 3), (2, 'Bob', 'Male', 2), (3, 'Charlie', 'Non-binary', 1);","completion":"SELECT SUM(NumberOfGames) FROM GameDesigners WHERE Gender = 'Non-binary';"}
{"prompt":"Identify the number of IoT devices in each country and the total number of devices. with given SQL schema CREATE TABLE device_country (device_id INT, country TEXT); INSERT INTO device_country (device_id, country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'Brazil'); CREATE TABLE device_info (device_id INT, device_type TEXT); INSERT INTO device_info (device_id, device_type) VALUES (1, 'Soil Sensor'), (2, 'Temperature Sensor'), (3, 'Humidity Sensor'), (4, 'Precision Sprayer');","completion":"SELECT country, COUNT(*) AS device_count FROM device_country GROUP BY country UNION SELECT 'Total' AS country, COUNT(*) FROM device_country;"}
{"prompt":"Show the total budget allocation for healthcare services in the top 5 states with the highest budget allocation with given SQL schema CREATE TABLE healthcare_services (service_id INT, state_id INT, budget FLOAT);CREATE TABLE states (state_id INT, state_name TEXT);","completion":"SELECT s.state_name, SUM(hs.budget)  FROM healthcare_services hs INNER JOIN states s ON hs.state_id = s.state_id GROUP BY s.state_name ORDER BY SUM(hs.budget) DESC LIMIT 5;"}
{"prompt":"What is the total budget allocated for all services in 'Arizona' and 'New Mexico'? with given SQL schema CREATE TABLE budget (state VARCHAR(20), service VARCHAR(20), amount INT); INSERT INTO budget (state, service, amount) VALUES ('Arizona', 'Education', 40000), ('Arizona', 'Healthcare', 60000), ('Arizona', 'Transportation', 30000), ('New Mexico', 'Education', 50000), ('New Mexico', 'Healthcare', 70000), ('New Mexico', 'Transportation', 20000);","completion":"SELECT SUM(amount) FROM budget WHERE state IN ('Arizona', 'New Mexico');"}
{"prompt":"How many Terbium mines are there in China, and what is their production capacity? with given SQL schema CREATE TABLE terbium_mines (mine VARCHAR(50), country VARCHAR(50), capacity INT);","completion":"SELECT COUNT(*), SUM(capacity) FROM terbium_mines WHERE country = 'China';"}
{"prompt":"What is the average production of Neodymium in South Africa in 2020? with given SQL schema CREATE TABLE Neodymium_Production (year INT, country TEXT, production FLOAT); INSERT INTO Neodymium_Production (year, country, production) VALUES (2015, 'China', 33000), (2015, 'Australia', 200), (2016, 'China', 35000), (2016, 'Australia', 250), (2017, 'China', 34000), (2017, 'Australia', 300), (2018, 'China', 36000), (2018, 'Australia', 320), (2019, 'China', 37000), (2019, 'Australia', 400), (2020, 'China', 38000), (2020, 'South Africa', 150);","completion":"SELECT AVG(production) FROM Neodymium_Production WHERE country = 'South Africa' AND year = 2020;"}
{"prompt":"What is the average property tax for 2-bedroom units in each neighborhood? with given SQL schema CREATE TABLE neighborhood (id INT, name VARCHAR(255)); INSERT INTO neighborhood (id, name) VALUES (1, 'Central Park'), (2, 'Downtown'); CREATE TABLE property (id INT, bedrooms INT, neighborhood_id INT, property_tax DECIMAL(5,2)); INSERT INTO property (id, bedrooms, neighborhood_id, property_tax) VALUES (1, 2, 1, 3000), (2, 2, 2, 4000);","completion":"SELECT n.name AS neighborhood, AVG(p.property_tax) AS avg_property_tax FROM property p JOIN neighborhood n ON p.neighborhood_id = n.id GROUP BY n.name;"}
{"prompt":"What is the total square footage of all properties in the city of Vancouver, BC that are affordable and wheelchair accessible? with given SQL schema CREATE TABLE vancouver_real_estate(id INT, city VARCHAR(50), size INT, affordable BOOLEAN, wheelchair_accessible BOOLEAN); INSERT INTO vancouver_real_estate VALUES (1, 'Vancouver', 1000, true, true);","completion":"SELECT SUM(size) FROM vancouver_real_estate WHERE city = 'Vancouver' AND affordable = true AND wheelchair_accessible = true;"}
{"prompt":"How many countries in the Middle East have implemented energy efficiency policies since 2010? with given SQL schema CREATE TABLE EnergyEfficiencyPolicies (id INT, country VARCHAR(20), policy_start_date DATE); INSERT INTO EnergyEfficiencyPolicies (id, country, policy_start_date) VALUES (1, 'UAE', '2012-01-01'), (2, 'Saudi Arabia', '2011-06-01'), (3, 'Egypt', '2015-03-15');","completion":"SELECT COUNT(DISTINCT country) FROM EnergyEfficiencyPolicies WHERE policy_start_date >= '2010-01-01' AND country IN ('UAE', 'Saudi Arabia', 'Iran', 'Iraq', 'Israel', 'Jordan', 'Kuwait', 'Lebanon', 'Oman', 'Palestine', 'Qatar', 'Syria', 'Yemen', 'Bahrain');"}
{"prompt":"Show the wind energy projects in Europe, sorted by the capacity in descending order. with given SQL schema CREATE TABLE Europe_Wind_Energy (project VARCHAR(255), capacity INT); INSERT INTO Europe_Wind_Energy (project, capacity) VALUES ('Windfarm A', 10000), ('Windfarm B', 12000), ('Windfarm C', 8000);","completion":"SELECT project, capacity FROM Europe_Wind_Energy ORDER BY capacity DESC;"}
{"prompt":"List the names and launch dates of all space missions that have been lost or failed, ordered by the launch date in ascending order. with given SQL schema CREATE TABLE space_missions_status(id INT, mission_name VARCHAR(255), launch_date DATE, status VARCHAR(255));","completion":"SELECT mission_name, launch_date FROM space_missions_status WHERE status IN ('lost', 'failed') ORDER BY launch_date ASC;"}
{"prompt":"Who was the first South Korean astronaut? with given SQL schema CREATE TABLE astronauts (id INT, name VARCHAR(255), country VARCHAR(255), first_flight DATE); INSERT INTO astronauts (id, name, country, first_flight) VALUES (1, 'Yi So-yeon', 'South Korea', '2008-04-08');","completion":"SELECT name FROM astronauts WHERE country = 'South Korea' AND id = (SELECT MIN(id) FROM astronauts WHERE country = 'South Korea');"}
{"prompt":"Which top 3 threat actors have been most active in the last week in the APAC region? with given SQL schema CREATE TABLE threat_actors (id INT, name VARCHAR(255), region VARCHAR(255), activity_count INT, last_seen TIMESTAMP); INSERT INTO threat_actors (id, name, region, activity_count, last_seen) VALUES (1, 'APT28', 'APAC', 15, '2022-03-10 12:00:00'), (2, 'APT33', 'NA', 12, '2022-03-12 08:00:00'), (3, 'MuddyWater', 'APAC', 18, '2022-03-14 10:00:00');","completion":"SELECT name, activity_count FROM threat_actors WHERE region = 'APAC' AND last_seen >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 WEEK) ORDER BY activity_count DESC LIMIT 3;"}
{"prompt":"Find the total number of policies for each policy state. with given SQL schema CREATE TABLE Policies (PolicyNumber INT, PolicyholderID INT, PolicyState VARCHAR(20)); INSERT INTO Policies (PolicyNumber, PolicyholderID, PolicyState) VALUES (1001, 3, 'California'), (1002, 4, 'California'), (1003, 5, 'Texas');","completion":"SELECT PolicyState, COUNT(*) FROM Policies GROUP BY PolicyState;"}
{"prompt":"Delete records from the \"union_members\" table where the \"state\" column is \"NY\" with given SQL schema CREATE TABLE union_members (id INT, name VARCHAR(50), state VARCHAR(2), city VARCHAR(20), occupation VARCHAR(20)); INSERT INTO union_members (id, name, state, city, occupation) VALUES (1, 'John Doe', 'NY', 'New York', 'Engineer'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (2, 'Jane Smith', 'CA', 'Los Angeles', 'Teacher');","completion":"DELETE FROM union_members WHERE state = 'NY';"}
{"prompt":"List the make and model of electric vehicles sold in Japan since 2019. with given SQL schema CREATE TABLE japan_ev_sales (year INT, make VARCHAR(50), model VARCHAR(50), sales INT); INSERT INTO japan_ev_sales (year, make, model, sales) VALUES (2019, 'Nissan', 'Leaf', 15000), (2020, 'Toyota', 'Prius Prime', 12000), (2021, 'Mitsubishi', 'Outlander PHEV', 10000), (2021, 'Honda', 'Clarity', 8000);","completion":"SELECT DISTINCT make, model FROM japan_ev_sales WHERE year >= 2019;"}
{"prompt":"What is the average speed of electric vehicles in the 'test_drives' table? with given SQL schema CREATE TABLE test_drives (id INT, vehicle_type VARCHAR(10), avg_speed FLOAT); INSERT INTO test_drives (id, vehicle_type, avg_speed) VALUES (1, 'EV', 55.0), (2, 'Hybrid', 50.0), (3, 'EV', 60.0);","completion":"SELECT AVG(avg_speed) FROM test_drives WHERE vehicle_type = 'EV';"}
{"prompt":"Add new records to the Vessel table for the following vessels: 'Solar Eagle' (Type: Solar, MaxCapacity: 200 tons), 'Wind Spirit' (Type: Wind, MaxCapacity: 300 tons) with given SQL schema CREATE TABLE Vessel (Id INT IDENTITY(1,1) PRIMARY KEY, Name VARCHAR(50), Type VARCHAR(50), MaxCapacity INT);","completion":"INSERT INTO Vessel (Name, Type, MaxCapacity) VALUES ('Solar Eagle', 'Solar', 200), ('Wind Spirit', 'Wind', 300);"}
{"prompt":"What is the minimum speed in knots for vessels that docked at the port of Hong Kong between the dates of June 15th and June 30th, 2021? with given SQL schema CREATE TABLE Vessels(Id INT, Name VARCHAR(255), AverageSpeed DECIMAL(5,2)); CREATE TABLE DockingHistory(Id INT, VesselId INT, Port VARCHAR(255), DockingDateTime DATETIME); INSERT INTO Vessels VALUES (1, 'VesselA', 15.5), (2, 'VesselB', 18.3), (3, 'VesselC', 20.2); INSERT INTO DockingHistory VALUES (1, 1, 'Hong Kong', '2021-06-16 12:00:00'), (2, 1, 'Hong Kong', '2021-06-25 15:00:00'), (3, 2, 'Hong Kong', '2021-06-20 09:00:00'), (4, 3, 'Hong Kong', '2021-06-22 18:00:00');","completion":"SELECT MIN(v.AverageSpeed) FROM Vessels v INNER JOIN DockingHistory dh ON v.Id = dh.VesselId WHERE dh.Port = 'Hong Kong' AND dh.DockingDateTime BETWEEN '2021-06-15' AND '2021-06-30';"}
{"prompt":"How many visitors from the USA have an annual pass for our museums? with given SQL schema CREATE TABLE Visitors (id INT, country VARCHAR(255), has_annual_pass BOOLEAN);","completion":"SELECT COUNT(*) FROM Visitors WHERE country = 'USA' AND has_annual_pass = TRUE;"}
{"prompt":"Delete records with year 2018 from table 'waste_generation' with given SQL schema CREATE TABLE waste_generation ( id INT PRIMARY KEY, region VARCHAR(50), year INT, metric DECIMAL(5,2)); INSERT INTO waste_generation (id, region, year, metric) VALUES (1, 'Mumbai', 2018, 5678.90), (2, 'Mumbai', 2019, 6001.12), (3, 'Tokyo', 2018, 3456.78), (4, 'Tokyo', 2019, 3501.09);","completion":"DELETE FROM waste_generation WHERE year = 2018;"}
{"prompt":"List all circular economy initiatives in the 'Manufacturing' sector. with given SQL schema CREATE TABLE Sectors (id INT, sector VARCHAR(255)); INSERT INTO Sectors (id, sector) VALUES (1, 'Energy'), (2, 'Manufacturing'), (3, 'Agriculture'); CREATE TABLE Initiatives (id INT, name VARCHAR(255), sector_id INT); INSERT INTO Initiatives (id, name, sector_id) VALUES (1, 'ProjectA', 1), (2, 'ProjectB', 2), (3, 'ProjectC', 2), (4, 'ProjectD', 3);","completion":"SELECT Initiatives.name FROM Initiatives JOIN Sectors ON Initiatives.sector_id = Sectors.id WHERE Sectors.sector = 'Manufacturing';"}
{"prompt":"List the top 3 cities with the highest number of workout sessions. with given SQL schema CREATE TABLE Workouts (WorkoutID INT, MemberID INT, City VARCHAR(50)); INSERT INTO Workouts (WorkoutID, MemberID, City) VALUES (1,1,'New York'),(2,2,'Los Angeles'),(3,3,'Chicago');","completion":"SELECT City, COUNT(*) FROM Workouts GROUP BY City ORDER BY COUNT(*) DESC LIMIT 3;"}
{"prompt":"What are the names of the community development initiatives in the 'community_development' table that have different initiation years than any agricultural innovation projects in the 'rural_innovations' table? with given SQL schema CREATE TABLE rural_innovations (id INT, project_name VARCHAR(50), initiation_year INT); INSERT INTO rural_innovations (id, project_name, initiation_year) VALUES (1, 'Precision Agriculture', 2010), (2, 'Smart Greenhouses', 2012); CREATE TABLE community_development (id INT, initiative_name VARCHAR(50), initiation_year INT); INSERT INTO community_development (id, initiative_name, initiation_year) VALUES (1, 'Youth Empowerment Program', 2008), (2, 'Renewable Energy Workshops', 2022);","completion":"SELECT initiative_name FROM community_development WHERE initiation_year NOT IN (SELECT initiation_year FROM rural_innovations);"}
{"prompt":"What is the total area of habitat preservation efforts in the 'Amazon Rainforest' region? with given SQL schema CREATE TABLE habitat_preservation (preservation_id INT, location VARCHAR(50), area FLOAT); INSERT INTO habitat_preservation (preservation_id, location, area) VALUES (1, 'Amazon Rainforest', 1500000); INSERT INTO habitat_preservation (preservation_id, location, area) VALUES (2, 'Arctic Tundra', 2500000);","completion":"SELECT SUM(area) FROM habitat_preservation WHERE location = 'Amazon Rainforest';"}
{"prompt":"What is the minimum dissolved oxygen level (in mg\/L) for each species in PondFarm2? with given SQL schema CREATE TABLE PondFarm2 (species VARCHAR(20), dissolved_oxygen FLOAT); INSERT INTO PondFarm2 (species, dissolved_oxygen) VALUES ('Shrimp', 4.5), ('Crab', 5.2), ('Lobster', 6.8);","completion":"SELECT species, MIN(dissolved_oxygen) FROM PondFarm2 GROUP BY species;"}
{"prompt":"What is the average permit value for sustainable building projects in New York, for the past 24 months? with given SQL schema CREATE TABLE ny_permits (id INT, permit_id VARCHAR(50), permit_value FLOAT, permit_date DATE, city VARCHAR(50), state VARCHAR(50), sustainable_building VARCHAR(50)); INSERT INTO ny_permits (id, permit_id, permit_value, permit_date, city, state, sustainable_building) VALUES (1, '123456', 1500000, '2021-04-20', 'New York', 'NY', 'Yes'), (2, '789101', 1200000, '2021-03-15', 'New York', 'NY', 'No'), (3, '111213', 900000, '2021-02-05', 'New York', 'NY', 'Yes');","completion":"SELECT AVG(permit_value) as avg_permit_value FROM ny_permits WHERE state = 'NY' AND permit_date >= DATEADD(MONTH, -24, CURRENT_DATE) AND sustainable_building = 'Yes' GROUP BY sustainable_building;"}
{"prompt":"What is the maximum billing amount for cases in California? with given SQL schema CREATE TABLE Cases (CaseID INT, State VARCHAR(20), BillingAmount DECIMAL(10, 2)); INSERT INTO Cases (CaseID, State, BillingAmount) VALUES (1, 'California', 5000.00), (2, 'Texas', 3500.00), (3, 'California', 4000.00), (4, 'New York', 6000.00);","completion":"SELECT MAX(BillingAmount) FROM Cases WHERE State = 'California';"}
{"prompt":"What was the total R&D expenditure for each division in Q1 2020? with given SQL schema CREATE TABLE r_d_expenditure (division VARCHAR(20), date DATE, amount NUMERIC(12, 2)); INSERT INTO r_d_expenditure (division, date, amount) VALUES ('Oncology', '2020-01-01', 1500000.00), ('Cardiology', '2020-01-01', 1200000.00), ('Neurology', '2020-01-01', 900000.00), ('Oncology', '2020-01-02', 1550000.00), ('Cardiology', '2020-01-02', 1230000.00), ('Neurology', '2020-01-02', 915000.00);","completion":"SELECT division, SUM(amount) AS total_expenditure FROM r_d_expenditure WHERE date BETWEEN '2020-01-01' AND '2020-03-31' GROUP BY division;"}
{"prompt":"How many HIV tests were performed in New York in the last 6 months? with given SQL schema CREATE TABLE hiv_tests (id INT, test_date DATE, location TEXT); INSERT INTO hiv_tests (id, test_date, location) VALUES (1, '2022-01-01', 'New York'); INSERT INTO hiv_tests (id, test_date, location) VALUES (2, '2022-02-15', 'New York');","completion":"SELECT COUNT(*) FROM hiv_tests WHERE location = 'New York' AND test_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"How many infectious disease outbreaks were reported in each region of the world in the year 2021? with given SQL schema CREATE TABLE public.outbreaks (id SERIAL PRIMARY KEY, region TEXT, year INTEGER, disease TEXT); INSERT INTO public.outbreaks (region, year, disease) VALUES ('Africa', 2021, 'Ebola'), ('Asia', 2021, 'COVID-19'), ('Europe', 2021, 'Monkeypox'), ('North America', 2021, 'Measles'), ('South America', 2021, 'Yellow Fever'), ('Australia', 2021, 'Dengue');","completion":"SELECT region, COUNT(*) FROM public.outbreaks WHERE year = 2021 GROUP BY region;"}
{"prompt":"Calculate the average diversity score for companies founded in each quarter, for the year 2017 with given SQL schema CREATE TABLE company_founding (id INT, company_name VARCHAR(50), year INT, quarter INT, diversity_score DECIMAL(3, 2));","completion":"SELECT quarter, AVG(diversity_score) AS avg_diversity_score FROM company_founding WHERE year = 2017 GROUP BY quarter;"}
{"prompt":"Update the exit type for \"Delta Inc\" to \"Merger\" in the \"exit_strategies\" table with given SQL schema CREATE TABLE exit_strategies (company_name VARCHAR(255), exit_year INT, exit_type VARCHAR(50), exit_region VARCHAR(50));","completion":"UPDATE exit_strategies SET exit_type = 'Merger' WHERE company_name = 'Delta Inc';"}
{"prompt":"What are the names of female founders who have received Series A funding or higher? with given SQL schema CREATE TABLE founder (id INT, name TEXT, gender TEXT, funding TEXT); INSERT INTO founder (id, name, gender, funding) VALUES (1, 'Alice', 'Female', 'Series A');","completion":"SELECT name FROM founder WHERE gender = 'Female' AND funding IN ('Series A', 'Series B', 'Series C', 'Series D', 'Series E');"}
{"prompt":"What is the average temperature for each crop type in the 'agriculture' database? with given SQL schema CREATE TABLE crop (id INT, type VARCHAR(255), temperature FLOAT); INSERT INTO crop (id, type, temperature) VALUES (1, 'corn', 20.5), (2, 'wheat', 15.3), (3, 'rice', 22.1);","completion":"SELECT type, AVG(temperature) as avg_temperature FROM crop GROUP BY type;"}
{"prompt":"Which urban agriculture initiatives in 'Montreal' have an area greater than 0.5 hectares? with given SQL schema CREATE TABLE urban_agriculture_initiatives (id INT, name TEXT, location TEXT, area_ha FLOAT); INSERT INTO urban_agriculture_initiatives (id, name, location, area_ha) VALUES (1, 'Initiative A', 'Montreal', 0.8), (2, 'Initiative B', 'Montreal', 0.4), (3, 'Initiative C', 'Toronto', 0.6);","completion":"SELECT name FROM urban_agriculture_initiatives WHERE location = 'Montreal' AND area_ha > 0.5;"}
{"prompt":"List all the marine species and their conservation status in the Atlantic Ocean. with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(50), region VARCHAR(50), conservation_status VARCHAR(50)); INSERT INTO marine_species (id, name, region, conservation_status) VALUES (1, 'Dolphin', 'Atlantic Ocean', 'Vulnerable'); CREATE TABLE conservation_status (id INT, name VARCHAR(50));","completion":"SELECT marine_species.name, marine_species.conservation_status FROM marine_species INNER JOIN conservation_status ON marine_species.conservation_status = conservation_status.name;"}
{"prompt":"What is the total volume of timber harvested by each region? with given SQL schema CREATE TABLE regions (region_id INT, region_name VARCHAR(255)); INSERT INTO regions (region_id, region_name) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West'); CREATE TABLE timber_harvest (region_id INT, year INT, volume INT); INSERT INTO timber_harvest (region_id, year, volume) VALUES (1, 2020, 1200), (1, 2021, 1500), (2, 2020, 800), (2, 2021, 1000), (3, 2020, 1700), (3, 2021, 1900), (4, 2020, 1100), (4, 2021, 1300);","completion":"SELECT region_name, SUM(volume) as total_volume FROM timber_harvest TH JOIN regions ON TH.region_id = regions.region_id GROUP BY region_name;"}
{"prompt":"Who are the top 3 customers by total spend on makeup products from Italy and Spain? with given SQL schema CREATE TABLE customers (customer_id INT, customer_name TEXT, country TEXT); INSERT INTO customers (customer_id, customer_name, country) VALUES (1, 'Alessandro Martini', 'IT'), (2, 'Laura Rossi', 'ES'), (3, 'Daniela Gonzalez', 'MX'), (4, 'Jose Hernandez', 'ES'), (5, 'Sophia Rodriguez', 'IT'); CREATE TABLE sales (sale_id INT, customer_id INT, product_id INT, sale_quantity INT, sale_country TEXT); INSERT INTO sales (sale_id, customer_id, product_id, sale_quantity, sale_country) VALUES (1, 1, 1, 100, 'IT'), (2, 2, 2, 150, 'ES'), (3, 3, 3, 200, 'MX'), (4, 4, 4, 250, 'ES'), (5, 5, 5, 300, 'IT'); CREATE TABLE products (product_id INT, product_name TEXT, category TEXT); INSERT INTO products (product_id, product_name, category) VALUES (1, 'Eyeshadow Palette', 'makeup'), (2, 'Liquid Lipstick', 'makeup'), (3, 'BB Cream', 'makeup'), (4, 'Volumizing Mascara', 'makeup'), (5, 'Nourishing Lip Balm', 'makeup');","completion":"SELECT c.customer_name, SUM(s.sale_quantity) as total_spent_on_makeup FROM sales s JOIN customers c ON s.customer_id = c.customer_id JOIN products p ON s.product_id = p.product_id WHERE c.country IN ('IT', 'ES') AND p.category = 'makeup' GROUP BY c.customer_name ORDER BY total_spent_on_makeup DESC LIMIT 3;"}
{"prompt":"List the police stations with their corresponding community policing metric scores? with given SQL schema CREATE TABLE PoliceStations (ID INT, Name VARCHAR(50)); CREATE TABLE CommunityPolicing (StationID INT, Score INT);","completion":"SELECT PS.Name, CP.Score FROM PoliceStations PS INNER JOIN CommunityPolicing CP ON PS.ID = CP.StationID;"}
{"prompt":"What is the maximum number of high-level threats reported by a single agency in a month? with given SQL schema CREATE TABLE Threat_Intelligence (Threat_ID INT, Threat_Type VARCHAR(50), Threat_Level VARCHAR(50), Reported_Date DATE, Reporting_Agency VARCHAR(50)); CREATE VIEW High_Level_Threats AS SELECT Threat_Type, Threat_Level, Reported_Date FROM Threat_Intelligence WHERE Threat_Level = 'High';","completion":"SELECT Reporting_Agency, MAX(Number_of_High_Level_Threats) as Max_High_Level_Threats_in_a_Month FROM (SELECT Reporting_Agency, TO_CHAR(Reported_Date, 'YYYY-MM') as Month, COUNT(*) as Number_of_High_Level_Threats FROM High_Level_Threats GROUP BY Reporting_Agency, Month) GROUP BY Reporting_Agency;"}
{"prompt":"What was the total peacekeeping operations budget for African countries in 2020? with given SQL schema CREATE TABLE peacekeeping_operations_africa (country VARCHAR(50), year INT, budget INT); INSERT INTO peacekeeping_operations_africa (country, year, budget) VALUES ('Nigeria', 2020, 1200000), ('South Africa', 2020, 1100000), ('Egypt', 2020, 1000000), ('Algeria', 2020, 900000), ('Morocco', 2020, 800000);","completion":"SELECT SUM(budget) total_budget FROM peacekeeping_operations_africa WHERE country IN ('Nigeria', 'South Africa', 'Egypt', 'Algeria', 'Morocco') AND year = 2020;"}
{"prompt":"Delete all records from the \"Artifacts\" table where the artifact type is \"Pottery\" and the artifact's age is greater than 1000 years old. with given SQL schema CREATE TABLE Artifacts (id INT, artifact_type VARCHAR(50), age INT); INSERT INTO Artifacts (id, artifact_type, age) VALUES (1, 'Pottery', 1200);","completion":"DELETE FROM Artifacts WHERE artifact_type = 'Pottery' AND age > 1000;"}
{"prompt":"Show the distribution of military technology by category in the 'military_inventory' table. with given SQL schema CREATE TABLE military_inventory (id INT, tech_name VARCHAR(50), tech_category VARCHAR(50), quantity INT); INSERT INTO military_inventory (id, tech_name, tech_category, quantity) VALUES (1, 'M1 Abrams', 'Tanks', 2500), (2, 'Tomahawk Missiles', 'Missiles', 3000);","completion":"SELECT tech_category, SUM(quantity) AS total_quantity FROM military_inventory GROUP BY tech_category;"}
{"prompt":"What is the total number of streams for songs released before 2010, grouped by platform? with given SQL schema CREATE TABLE songs (song_id INT, song_name VARCHAR(100), release_year INT, genre VARCHAR(50)); INSERT INTO songs (song_id, song_name, release_year, genre) VALUES (1, 'Shape of You', 2017, 'Pop'), (2, 'Thinking Out Loud', 2014, 'Pop'), (3, 'Bohemian Rhapsody', 1975, 'Rock'); CREATE TABLE streams (stream_id INT, song_id INT, platform VARCHAR(50), streams INT); INSERT INTO streams (stream_id, song_id, platform, streams) VALUES (1, 1, 'Spotify', 1000000), (2, 1, 'Apple Music', 750000), (3, 2, 'Spotify', 800000), (4, 2, 'Apple Music', 600000), (5, 3, 'Spotify', 50000), (6, 3, 'Apple Music', 40000);","completion":"SELECT st.platform, SUM(s.streams) as total_streams FROM songs s INNER JOIN streams st ON s.song_id = st.song_id WHERE s.release_year < 2010 GROUP BY st.platform;"}
{"prompt":"What is the average monthly donation amount per state? with given SQL schema CREATE TABLE Donations (id INT, donor_name TEXT, donation_amount FLOAT, donation_date DATE, state TEXT); INSERT INTO Donations (id, donor_name, donation_amount, donation_date, state) VALUES (1, 'James Smith', 500, '2022-02-01', 'CA');","completion":"SELECT AVG(donation_amount) as avg_donation, state FROM Donations GROUP BY state;"}
{"prompt":"What is the maximum donation amount for the 'Health' program? with given SQL schema CREATE TABLE Donations (donation_id INT, amount DECIMAL(10,2), program VARCHAR(255));","completion":"SELECT MAX(amount) FROM Donations WHERE program = 'Health';"}
{"prompt":"What is the minimum lifelong learning credit requirement for each grade level, grouped by school, from the \"schools_lifelong_learning_requirements\" table? with given SQL schema CREATE TABLE schools_lifelong_learning_requirements (school_id INT, grade_level INT, lifelong_learning_credit_requirement INT);","completion":"SELECT school_id, grade_level, MIN(lifelong_learning_credit_requirement) as min_credit_requirement FROM schools_lifelong_learning_requirements GROUP BY school_id, grade_level;"}
{"prompt":"Add a new ethnicity called 'Middle Eastern' to the Ethnicity table with given SQL schema CREATE TABLE Ethnicity (EthnicityID INT PRIMARY KEY, EthnicityName VARCHAR(50));","completion":"INSERT INTO Ethnicity (EthnicityID, EthnicityName) VALUES (6, 'Middle Eastern');"}
{"prompt":"Delete the record of employee with ID 2 with given SQL schema CREATE SCHEMA IF NOT EXISTS hr;CREATE TABLE IF NOT EXISTS employees (id INT, name VARCHAR(50), department VARCHAR(50), hire_date DATE);INSERT INTO employees (id, name, department, hire_date) VALUES (1, 'John Doe', 'IT', '2020-01-15');INSERT INTO employees (id, name, department, hire_date) VALUES (2, 'Jane Smith', 'HR', '2019-06-20');INSERT INTO employees (id, name, department, hire_date) VALUES (3, 'Jim Brown', 'Finance', '2020-04-01');","completion":"DELETE FROM hr.employees WHERE id = 2;"}
{"prompt":"What is the total number of employees hired in each quarter of 2021? with given SQL schema CREATE TABLE Employees (id INT, name VARCHAR(50), department VARCHAR(50), hire_date DATE); INSERT INTO Employees (id, name, department, hire_date) VALUES (1, 'John Doe', 'HR', '2021-01-15'); INSERT INTO Employees (id, name, department, hire_date) VALUES (2, 'Jane Smith', 'IT', '2021-03-20'); INSERT INTO Employees (id, name, department, hire_date) VALUES (3, 'Alice Johnson', 'Finance', '2021-06-10');","completion":"SELECT EXTRACT(QUARTER FROM hire_date) AS quarter, COUNT(*) AS total_hired  FROM Employees  WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31'  GROUP BY quarter;"}
{"prompt":"How many healthcare facilities were established in total, by organizations located in \"Africa\" with the org_category \"Community-based\"? with given SQL schema CREATE TABLE healthcare_facilities (id INT, org_location VARCHAR(20), org_category VARCHAR(20), establishment_year INT); INSERT INTO healthcare_facilities (id, org_location, org_category, establishment_year) VALUES (1, 'Africa', 'Community-based', 2010), (2, 'Asia', 'Governmental', 2015), (3, 'Africa', 'Community-based', 2012);","completion":"SELECT COUNT(*) FROM healthcare_facilities WHERE org_location = 'Africa' AND org_category = 'Community-based';"}
{"prompt":"What is the maximum donation amount made by 'CARE' to 'Health' projects in 'Africa'? with given SQL schema CREATE TABLE donations (id INT, donor VARCHAR(255), project VARCHAR(255), region VARCHAR(255), amount DECIMAL(10, 2), donation_date DATE); INSERT INTO donations (id, donor, project, region, amount, donation_date) VALUES (1, 'CARE', 'Health', 'Africa', 15000, '2022-02-28');","completion":"SELECT MAX(amount) FROM donations WHERE donor = 'CARE' AND project = 'Health' AND region = 'Africa';"}
{"prompt":"How many organizations are working on social good in the Middle East? with given SQL schema CREATE TABLE social_good_middle_east (organization_name VARCHAR(100), region VARCHAR(50)); INSERT INTO social_good_middle_east (organization_name, region) VALUES ('Tech4Peace', 'Middle East'), ('DigitalEquality', 'Middle East'), ('TechForChange', 'Middle East');","completion":"SELECT COUNT(organization_name) FROM social_good_middle_east WHERE region = 'Middle East';"}
{"prompt":"What was the total fare collected from the Green Line on March 8th, 2022? with given SQL schema CREATE TABLE routes (route_id INT, route_name VARCHAR(255)); INSERT INTO routes (route_id, route_name) VALUES (1, 'Red Line'), (2, 'Blue Line'), (3, 'Green Line'); CREATE TABLE fares (fare_id INT, route_id INT, fare_amount DECIMAL(5,2), fare_date DATE); INSERT INTO fares (fare_id, route_id, fare_amount, fare_date) VALUES (1, 1, 3.50, '2022-01-03'), (2, 2, 4.25, '2022-02-14'), (3, 3, 2.75, '2022-03-08');","completion":"SELECT SUM(fare_amount) FROM fares WHERE route_id = 3 AND fare_date = '2022-03-08';"}
{"prompt":"Identify items that use a linear production method and are made of polyester with given SQL schema CREATE TABLE methods (id INT, item_id INT, quantity INT, method VARCHAR(255)); INSERT INTO methods (id, item_id, quantity, method) VALUES (1, 1, 100, 'circular'), (2, 2, 75, 'linear'), (3, 1, 50, 'linear'); CREATE TABLE materials (id INT, item_id INT, material VARCHAR(255)); INSERT INTO materials (id, item_id, material) VALUES (1, 1, 'cotton'), (2, 2, 'polyester'), (3, 3, 'wool');","completion":"SELECT m.item_id FROM methods m JOIN materials mat ON m.item_id = mat.item_id WHERE m.method = 'linear' AND mat.material = 'polyester';"}
{"prompt":"How many new users registered in the last week from the US? with given SQL schema CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(255), registered_date DATETIME, country VARCHAR(255));","completion":"SELECT COUNT(*) FROM users WHERE registered_date >= DATEADD(week, -1, GETDATE()) AND country = 'US';"}
{"prompt":"Determine the number of financially capable customers in Q1 and Q2 of 2022. with given SQL schema CREATE TABLE financial_capability(customer_id INT, score DECIMAL(3, 1), measure_date DATE); INSERT INTO financial_capability VALUES (1, 75, '2022-01-15'), (2, 80, '2022-04-01'), (3, 70, '2022-03-05'), (4, 85, '2022-05-12'), (5, 72, '2022-02-01'), (6, 78, '2022-01-02');","completion":"SELECT TO_CHAR(measure_date, 'YYYY-Q') AS quarter, COUNT(*) FROM financial_capability WHERE measure_date >= '2022-01-01' AND measure_date < '2022-07-01' GROUP BY quarter;"}
{"prompt":"What is the average financial capability score for each occupation, pivoted by gender? with given SQL schema CREATE TABLE financial_capability_3 (occupation VARCHAR(255), gender VARCHAR(255), score INT); INSERT INTO financial_capability_3 (occupation, gender, score) VALUES ('Doctor', 'Male', 1400), ('Doctor', 'Female', 1450), ('Engineer', 'Male', 1300), ('Engineer', 'Female', 1320), ('Teacher', 'Male', 1200), ('Teacher', 'Female', 1210), ('Lawyer', 'Male', 1500), ('Lawyer', 'Female', 1510);","completion":"SELECT occupation, SUM(CASE WHEN gender = 'Male' THEN score ELSE 0 END)\/SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) AS male_avg, SUM(CASE WHEN gender = 'Female' THEN score ELSE 0 END)\/SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) AS female_avg FROM financial_capability_3 GROUP BY occupation;"}
{"prompt":"Find genetic researchers and their projects with given SQL schema CREATE TABLE researchers (id INT, name VARCHAR(50), domain VARCHAR(50)); INSERT INTO researchers (id, name, domain) VALUES (1, 'Alice', 'Genetics'); INSERT INTO researchers (id, name, domain) VALUES (2, 'Bob', 'Bioengineering'); CREATE TABLE projects (id INT, name VARCHAR(50), researcher_id INT); INSERT INTO projects (id, name, researcher_id) VALUES (1, 'Genome Mapping', 1); INSERT INTO projects (id, name, researcher_id) VALUES (2, 'Protein Folding', 1);","completion":"SELECT r.name, p.name as project_name FROM researchers r JOIN projects p ON r.id = p.researcher_id WHERE r.domain = 'Genetics';"}
{"prompt":"List the number of eco-friendly hotels in each country and their total revenue. with given SQL schema CREATE TABLE eco_hotels (hotel_id INT, name TEXT, country TEXT, revenue FLOAT); INSERT INTO eco_hotels VALUES (1, 'Green Hotel', 'France', 350000), (2, 'Eco Lodge', 'Spain', 400000), (3, 'Sustainable Resort', 'France', 550000);","completion":"SELECT country, COUNT(*), SUM(revenue) FROM eco_hotels GROUP BY country;"}
{"prompt":"Find the total number of artworks by female artists in the 'Renaissance' period. with given SQL schema CREATE TABLE Artworks(artist VARCHAR(20), period VARCHAR(20), art_id INT);  INSERT INTO Artworks VALUES ('Leonardo da Vinci', 'Renaissance', 1), ('Michelangelo', 'Renaissance', 2), ('Raphael', 'Renaissance', 3), ('Artemisia Gentileschi', 'Renaissance', 4), ('Sofonisba Anguissola', 'Renaissance', 5);","completion":"SELECT COUNT(*) FROM Artworks WHERE period = 'Renaissance' AND artist IN (SELECT artist FROM Artworks WHERE artist LIKE '%_%');"}
{"prompt":"List all heritage sites in the Asian region with their corresponding preservation status. with given SQL schema CREATE TABLE heritage_sites (id INT PRIMARY KEY, name VARCHAR(50), region VARCHAR(30), status VARCHAR(20)); INSERT INTO heritage_sites (id, name, region, status) VALUES (1, 'Angkor Wat', 'Asia', 'Preserved'), (2, 'Forbidden City', 'Asia', 'Preserved'), (3, 'Petra', 'Asia', 'At Risk');","completion":"SELECT name, status FROM heritage_sites WHERE region = 'Asia';"}
{"prompt":"What is the average year of establishment for heritage sites in each country? with given SQL schema CREATE TABLE heritage_sites (site_id INT, name VARCHAR(50), location VARCHAR(50), year INT, type VARCHAR(50));","completion":"SELECT location, AVG(year) AS avg_year FROM heritage_sites GROUP BY location;"}
{"prompt":"What is the name, length, and material for all railways in the province of Ontario with a length greater than 100 kilometers? with given SQL schema CREATE TABLE Railways (id INT, name VARCHAR(100), length FLOAT, material VARCHAR(50), province VARCHAR(50)); INSERT INTO Railways (id, name, length, material, province) VALUES (1, 'Canadian National Railway', 32000, 'Steel', 'Ontario');","completion":"SELECT name, length, material FROM Railways WHERE province = 'Ontario' AND length > 100;"}
{"prompt":"What is the average hotel price in Tokyo compared to Osaka? with given SQL schema CREATE TABLE hotel_prices (city VARCHAR(50), price DECIMAL(5,2)); INSERT INTO hotel_prices (city, price) VALUES ('Tokyo', 120), ('Tokyo', 150), ('Tokyo', 100), ('Osaka', 90), ('Osaka', 80), ('Osaka', 100);","completion":"SELECT AVG(price) as avg_price FROM hotel_prices WHERE city = 'Tokyo' OR city = 'Osaka' GROUP BY city;"}
{"prompt":"What is the percentage of legal technology patents granted to applicants in California since 2010? with given SQL schema CREATE TABLE legal_technology_patents (patent_id INT, grant_date DATE, state VARCHAR(20));","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM legal_technology_patents WHERE grant_date >= '2010-01-01')) AS percentage FROM legal_technology_patents WHERE state = 'California';"}
{"prompt":"How many podcast episodes were published in 2019 by creators from underrepresented communities? with given SQL schema CREATE TABLE podcasts (id INT, title VARCHAR(100), publication_year INT, creator_community VARCHAR(50)); INSERT INTO podcasts (id, title, publication_year, creator_community) VALUES (1, 'Podcast1', 2019, 'Underrepresented Community'), (2, 'Podcast2', 2018, 'Mainstream Community'), (3, 'Podcast3', 2019, 'Mainstream Community');","completion":"SELECT COUNT(*) FROM podcasts WHERE publication_year = 2019 AND creator_community = 'Underrepresented Community';"}
{"prompt":"List all the unique content diversity topics in the 'content' table. with given SQL schema CREATE TABLE content (id INT, topic VARCHAR(255));","completion":"SELECT DISTINCT topic FROM content;"}
{"prompt":"What is the average price of vegan menu items in the database? with given SQL schema CREATE TABLE menus (menu_id INT, menu_name TEXT, type TEXT, price DECIMAL); INSERT INTO menus (menu_id, menu_name, type, price) VALUES (1, 'Quinoa Salad', 'Vegetarian', 12.99), (2, 'Chicken Caesar Wrap', 'Gluten-free', 10.99), (3, 'Vegan Burger', 'Vegan', 14.99), (4, 'Falafel Wrap', 'Vegan', 9.99);","completion":"SELECT AVG(price) FROM menus WHERE type = 'Vegan';"}
{"prompt":"What is the total value of military equipment sales to Africa in Q3 2020, partitioned by week? with given SQL schema CREATE TABLE Military_Equipment_Sales (sale_id INT, sale_date DATE, equipment_type VARCHAR(255), country VARCHAR(255), sale_value FLOAT); INSERT INTO Military_Equipment_Sales (sale_id, sale_date, equipment_type, country, sale_value) VALUES (1, '2020-07-01', 'Aircraft', 'Nigeria', 5000000), (2, '2020-07-15', 'Armored Vehicles', 'Algeria', 2000000), (3, '2020-09-01', 'Naval Vessels', 'Egypt', 12000000);","completion":"SELECT sale_date, SUM(sale_value) AS total_sales FROM Military_Equipment_Sales WHERE country IN ('Nigeria', 'Algeria', 'Egypt') AND sale_date BETWEEN '2020-07-01' AND '2020-09-30' GROUP BY sale_date, WEEK(sale_date);"}
{"prompt":"What is the number of diamond mines with an extraction rate higher than 90% in the African continent? with given SQL schema CREATE TABLE diamond_mines (id INT, name TEXT, country TEXT, extraction_rate FLOAT); INSERT INTO diamond_mines (id, name, country, extraction_rate) VALUES (1, 'Diamond Mine 1', 'South Africa', 0.92); INSERT INTO diamond_mines (id, name, country, extraction_rate) VALUES (2, 'Diamond Mine 2', 'Botswana', 0.88);","completion":"SELECT COUNT(*) FROM diamond_mines WHERE extraction_rate > 0.9 AND country IN ('South Africa', 'Botswana', 'Angola', 'DRC', 'Namibia', 'Lesotho', 'Sierra Leone', 'Ghana', 'Liberia', 'Guinea', 'Ivory Coast');"}
{"prompt":"What is the total tonnage of copper mined in African mines? with given SQL schema CREATE TABLE mine (id INT, region VARCHAR(20), mineral VARCHAR(20), tons INT); INSERT INTO mine (id, region, mineral, tons) VALUES (1, 'Asia-Pacific', 'gold', 2000), (2, 'Asia-Pacific', 'silver', 3000), (3, 'Americas', 'gold', 5000), (4, 'Americas', 'copper', 8000), (5, 'Africa', 'gold', 1000), (6, 'Africa', 'copper', 6000);","completion":"SELECT SUM(tons) FROM mine WHERE mineral = 'copper' AND region = 'Africa';"}
{"prompt":"What is the monthly data usage for the top 3 subscribers in 'Africa', ordered by usage in descending order? with given SQL schema CREATE TABLE subscribers (subscriber_id INT, data_usage FLOAT, region VARCHAR(10)); INSERT INTO subscribers (subscriber_id, data_usage, region) VALUES (4, 35, 'Africa'), (5, 58, 'Africa'), (6, 45, 'Africa'), (7, 21, 'Africa'), (8, 90, 'Africa');","completion":"SELECT subscriber_id, data_usage FROM (SELECT subscriber_id, data_usage, ROW_NUMBER() OVER (PARTITION BY region ORDER BY data_usage DESC) as rn FROM subscribers WHERE region = 'Africa') subquery WHERE rn <= 3 ORDER BY data_usage DESC;"}
{"prompt":"What is the monthly data usage for the top 5 subscribers in the 'west' region, ordered by usage in descending order? with given SQL schema CREATE TABLE subscribers (subscriber_id INT, data_usage FLOAT, region VARCHAR(10)); INSERT INTO subscribers (subscriber_id, data_usage, region) VALUES (4, 35, 'west'), (5, 28, 'west'), (6, 45, 'west');","completion":"SELECT subscriber_id, data_usage FROM (SELECT subscriber_id, data_usage, ROW_NUMBER() OVER (PARTITION BY region ORDER BY data_usage DESC) as rn FROM subscribers WHERE region = 'west') subquery WHERE rn <= 5 ORDER BY data_usage DESC;"}
{"prompt":"Determine the ticket sales revenue for each artist's first concert in their career. with given SQL schema CREATE TABLE ticket_sales (sale_id INT, artist_name VARCHAR(100), concert_location VARCHAR(100), num_tickets INT, ticket_price INT, sale_date DATE); INSERT INTO ticket_sales (sale_id, artist_name, concert_location, num_tickets, ticket_price, sale_date) VALUES (1, 'Taylor Swift', 'Nashville, USA', 5000, 50, '2006-06-01'); INSERT INTO ticket_sales (sale_id, artist_name, concert_location, num_tickets, ticket_price, sale_date) VALUES (2, 'BTS', 'Seoul, South Korea', 10000, 30, '2013-06-01');","completion":"SELECT artist_name, num_tickets * ticket_price as first_concert_revenue FROM ticket_sales WHERE sale_id = (SELECT MIN(sale_id) FROM ticket_sales WHERE artist_name = ticket_sales.artist_name);"}
{"prompt":"Update the max_depth of the Arctic Ocean's Molloy Deep in the ocean_floors table to -5650. with given SQL schema CREATE TABLE ocean_floors (ocean VARCHAR(255), deepest_point VARCHAR(255), max_depth INT); INSERT INTO ocean_floors (ocean, deepest_point, max_depth) VALUES ('Atlantic', 'Puerto Rico Trench', -8673), ('Arctic', 'Molloy Deep', -5607);","completion":"UPDATE ocean_floors SET max_depth = -5650 WHERE ocean = 'Arctic' AND deepest_point = 'Molloy Deep';"}
{"prompt":"Which organizations have received donations from donors in India? with given SQL schema CREATE TABLE Donors (Id INT PRIMARY KEY, Name VARCHAR(100), Age INT, DonationAmount DECIMAL(10, 2)); INSERT INTO Donors (Id, Name, Age, DonationAmount) VALUES (2, 'Akshay Kumar', 40, 600.00); CREATE TABLE Donations (Id INT PRIMARY KEY, DonorId INT, OrganizationId INT, Amount DECIMAL(10, 2)); INSERT INTO Donations (Id, DonorId, OrganizationId, Amount) VALUES (1, 2, 5, 300.00); INSERT INTO Donations (Id, DonorId, OrganizationId, Amount) VALUES (2, 3, 6, 500.00); CREATE TABLE Organizations (Id INT PRIMARY KEY, Name VARCHAR(100), Sector VARCHAR(50)); INSERT INTO Organizations (Id, Name, Sector) VALUES (5, 'Asha for Education', 'Education'); INSERT INTO Organizations (Id, Name, Sector) VALUES (6, 'CRY - Child Rights and You', 'Human Rights'); CREATE TABLE Countries (Id INT PRIMARY KEY, Name VARCHAR(100), Continent VARCHAR(50)); INSERT INTO Countries (Id, Name, Continent) VALUES (2, 'India', 'Asia'); INSERT INTO Countries (Id, Name, Continent) VALUES (3, 'Mali', 'Africa');","completion":"SELECT Organizations.Name FROM Organizations JOIN Donations ON Organizations.Id=Donations.OrganizationId JOIN Donors ON Donations.DonorId=Donors.Id JOIN Countries ON Donors.Name=Countries.Name WHERE Countries.Continent = 'Asia';"}
{"prompt":"How many players from 'Europe' have played 'Space Explorers' for more than 4 hours? with given SQL schema CREATE TABLE Player_Details (Player_ID INT, Player_Name VARCHAR(50), Country VARCHAR(50), Playtime INT, Game_Name VARCHAR(50)); INSERT INTO Player_Details (Player_ID, Player_Name, Country, Playtime, Game_Name) VALUES (1, 'John Doe', 'France', 240, 'Space Explorers'), (2, 'Jane Smith', 'Germany', 540, 'Space Explorers'), (3, 'Mike Johnson', 'UK', 480, 'Space Explorers'), (4, 'Sara Connor', 'Spain', 300, 'Space Explorers'), (5, 'David Brown', 'Italy', 420, 'Space Explorers');","completion":"SELECT COUNT(Player_ID) FROM Player_Details WHERE Game_Name = 'Space Explorers' AND Country = 'Europe' AND Playtime > 4 * 60;"}
{"prompt":"Count the number of games released in 2020 with given SQL schema CREATE TABLE Games (GameID INT, ReleaseYear INT); INSERT INTO Games (GameID, ReleaseYear) VALUES (1, 2019); INSERT INTO Games (GameID, ReleaseYear) VALUES (2, 2020);","completion":"SELECT COUNT(*) FROM Games WHERE ReleaseYear = 2020;"}
{"prompt":"Identify the top 5 most common combinations of game genres played by female players. with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), GameGenre VARCHAR(10));CREATE TABLE MultiplayerGames (GameID INT, PlayerID INT);","completion":"SELECT g.GameGenre, COUNT(*) as Count FROM Players p INNER JOIN MultiplayerGames mg ON p.PlayerID = mg.PlayerID WHERE p.Gender = 'Female' GROUP BY g.GameGenre ORDER BY Count DESC LIMIT 5;"}
{"prompt":"What was the minimum production volume of Europium in 2016? with given SQL schema CREATE TABLE europium_production (year INT, production_volume INT); INSERT INTO europium_production VALUES (2015, 15), (2016, 18), (2017, 20), (2018, 22), (2019, 25);","completion":"SELECT MIN(production_volume) FROM europium_production WHERE year = 2016;"}
{"prompt":"What is the average number of rental units in each income-restricted development? with given SQL schema CREATE TABLE IncomeRestrictedDevelopments (DevelopmentID INT, DevelopmentName VARCHAR(255)); CREATE TABLE RentalUnits (UnitID INT, DevelopmentID INT, UnitType VARCHAR(255));","completion":"SELECT D.DevelopmentName, AVG(COUNT(RU.UnitID)) as AvgRentalUnitsPerDevelopment FROM IncomeRestrictedDevelopments D JOIN RentalUnits RU ON D.DevelopmentID = RU.DevelopmentID GROUP BY D.DevelopmentName;"}
{"prompt":"Add a new category 'Plant-based' in the menu_categories table with given SQL schema CREATE TABLE menu_categories (category_id INT, category_name TEXT);","completion":"INSERT INTO menu_categories (category_name) VALUES ('Plant-based');"}
{"prompt":"What is the sum of the weights (in kg) of all spacecraft ever built by Blue Origin? with given SQL schema CREATE TABLE spacecraft_manufacturers(id INT, name VARCHAR(255)); CREATE TABLE spacecraft(id INT, name VARCHAR(255), manufacturer_id INT, weight_kg FLOAT); INSERT INTO spacecraft_manufacturers(id, name) VALUES (1, 'Blue Origin'); INSERT INTO spacecraft(id, name, manufacturer_id, weight_kg) VALUES (1, 'New Glenn', 1), (2, 'New Shepard', 1);","completion":"SELECT SUM(spacecraft.weight_kg) FROM spacecraft WHERE spacecraft.manufacturer_id = (SELECT id FROM spacecraft_manufacturers WHERE name = 'Blue Origin');"}
{"prompt":"What is the average age of fans who prefer basketball and football in the 'fan_demographics' table? with given SQL schema CREATE TABLE fan_demographics (fan_name VARCHAR(50), favorite_sport VARCHAR(20), age INT, city VARCHAR(30)); INSERT INTO fan_demographics (fan_name, favorite_sport, age, city) VALUES ('Alice', 'Basketball', 25, 'Chicago'), ('Bob', 'Soccer', 35, 'Los Angeles'), ('Charlie', 'Basketball', 30, 'Miami');","completion":"SELECT favorite_sport, AVG(age) FROM fan_demographics WHERE favorite_sport IN ('Basketball', 'Football') GROUP BY favorite_sport;"}
{"prompt":"What is the minimum severity of vulnerabilities detected in the last month for the HR department? with given SQL schema CREATE TABLE vulnerabilities (id INT, department VARCHAR(255), severity INT, detection_date DATE); INSERT INTO vulnerabilities (id, department, severity, detection_date) VALUES (1, 'finance', 7, '2022-01-05'), (2, 'finance', 5, '2022-02-10'), (3, 'HR', 3, '2022-01-02');","completion":"SELECT MIN(severity) FROM vulnerabilities WHERE detection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND department = 'HR';"}
{"prompt":"Which vulnerabilities in the healthcare sector have been exploited in the last year with a severity score greater than 7? with given SQL schema CREATE TABLE Vulnerabilities (vuln_id INT, vuln_severity INT, vuln_date DATE, vuln_target_sector VARCHAR(50), vuln_exploited INT);","completion":"SELECT vuln_id FROM Vulnerabilities WHERE vuln_target_sector = 'healthcare' AND vuln_severity > 7 AND vuln_exploited = 1 AND vuln_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE;"}
{"prompt":"Show public transportation usage in cities with populations over 5 million with given SQL schema CREATE TABLE cities (city_id INT, city_name VARCHAR(50), population INT);CREATE TABLE pt_usage (usage_id INT, city INT, passengers INT);INSERT INTO cities (city_id, city_name, population) VALUES (1, 'Tokyo', 9000000), (2, 'New York', 8000000), (3, 'Los Angeles', 6000000);INSERT INTO pt_usage (usage_id, city, passengers) VALUES (1, 1, 1000), (2, 2, 2000), (3, 3, 1500), (4, 1, 1200), (5, 2, 1800);","completion":"SELECT c.city_name, pu.passengers FROM cities c JOIN pt_usage pu ON c.city_id = pu.city WHERE c.population > 5000000;"}
{"prompt":"Show the number of electric vehicle charging stations in the top 10 most populous cities in the US. with given SQL schema CREATE TABLE cities (city_name TEXT, population INT);CREATE TABLE charging_stations (station_id INT, station_name TEXT, city_name TEXT, num_charging_points INT);","completion":"SELECT c.city_name, COUNT(cs.station_id) AS num_charging_stations FROM cities c JOIN charging_stations cs ON c.city_name = cs.city_name GROUP BY c.city_name ORDER BY population DESC LIMIT 10;"}
{"prompt":"What was the maximum number of units sold for any product in Germany in 2020? with given SQL schema CREATE TABLE product_sales (product_name VARCHAR(30), country VARCHAR(20), year INT, units_sold INT); INSERT INTO product_sales (product_name, country, year, units_sold) VALUES ('t-shirt', 'Germany', 2020, 1500), ('jeans', 'Germany', 2020, 2000), ('hoodie', 'Germany', 2020, 2500);","completion":"SELECT MAX(units_sold) FROM product_sales WHERE country = 'Germany' AND year = 2020;"}
{"prompt":"List all autonomous driving research programs in the US and the number of safety tests conducted. with given SQL schema CREATE TABLE SafetyTests (Id INT, TestType VARCHAR(50), VehicleId INT, TestDate DATE, Program VARCHAR(100)); CREATE TABLE AutonomousVehicles (Id INT, Name VARCHAR(100), Program VARCHAR(100)); INSERT INTO SafetyTests (Id, TestType, VehicleId, TestDate, Program) VALUES (4, 'Obstacle Detection', 2, '2021-03-23', 'AutonomousDrivingUS'), (5, 'Pedestrian Detection', 2, '2021-03-24', 'AutonomousDrivingUS'); INSERT INTO AutonomousVehicles (Id, Name, Program) VALUES (2, 'AutonomousCar', 'AutonomousDrivingUS');","completion":"SELECT AutonomousVehicles.Program, COUNT(SafetyTests.Id) FROM AutonomousVehicles INNER JOIN SafetyTests ON AutonomousVehicles.Id = SafetyTests.VehicleId WHERE Program LIKE '%US%' GROUP BY AutonomousVehicles.Program;"}
{"prompt":"What is the minimum safety rating of electric vehicles released in 2021? with given SQL schema CREATE TABLE Electric_Vehicles (id INT, name VARCHAR(255), safety_rating DECIMAL(3,2), release_year INT); INSERT INTO Electric_Vehicles (id, name, safety_rating, release_year) VALUES (1, 'e-Tron', 5.5, 2021); INSERT INTO Electric_Vehicles (id, name, safety_rating, release_year) VALUES (2, 'Bolt', 5.1, 2021);","completion":"SELECT MIN(safety_rating) FROM Electric_Vehicles WHERE release_year = 2021 AND name IN ('e-Tron', 'Bolt');"}
{"prompt":"How many safety incidents were recorded for vessels in the past month, grouped by the severity of the incident? with given SQL schema CREATE TABLE Safety_Records(Vessel_ID INT, Incident_Date DATE, Incident_Severity VARCHAR(50)); INSERT INTO Safety_Records VALUES (1, '2022-03-12', 'Minor'), (2, '2022-03-15', 'Major'), (3, '2022-03-20', 'Minor'), (1, '2022-03-25', 'Serious');","completion":"SELECT Incident_Severity, COUNT(*) FROM Safety_Records WHERE Incident_Date >= DATEADD(MONTH, -1, GETDATE()) GROUP BY Incident_Severity;"}
{"prompt":"How many vessels arrived in Algiers in the past 60 days? with given SQL schema CREATE TABLE VesselArrivals (ID INT, VesselName VARCHAR(50), ArrivalPort VARCHAR(50), ArrivalDate DATE); INSERT INTO VesselArrivals (ID, VesselName, ArrivalPort, ArrivalDate) VALUES (1, 'Test Vessel 1', 'Algiers', '2022-01-01'), (2, 'Test Vessel 2', 'Algiers', '2022-01-02'), (3, 'Test Vessel 3', 'Algiers', '2022-01-03'), (4, 'Test Vessel 4', 'Algiers', '2022-02-04'), (5, 'Test Vessel 5', 'Algiers', '2022-02-05');","completion":"SELECT COUNT(*) FROM VesselArrivals WHERE ArrivalPort = 'Algiers' AND ArrivalDate >= DATEADD(day, -60, GETDATE());"}
{"prompt":"Determine the number of circular economy initiatives in the Americas that are more than 5 years old. with given SQL schema CREATE TABLE CircularEconomyAmericas (id INT, country VARCHAR(50), region VARCHAR(50), initiative_age INT); INSERT INTO CircularEconomyAmericas (id, country, region, initiative_age) VALUES (1, 'USA', 'Americas', 7), (2, 'Canada', 'Americas', 3), (3, 'Brazil', 'Americas', 6);","completion":"SELECT COUNT(*) FROM CircularEconomyAmericas WHERE initiative_age > 5 AND region = 'Americas';"}
{"prompt":"What is the total water consumption by each industrial sector in 2021, if the consumption data is not available? with given SQL schema CREATE TABLE industrial_sectors (id INT, sector VARCHAR(255)); INSERT INTO industrial_sectors (id, sector) VALUES (1, 'Manufacturing'), (2, 'Mining'), (3, 'Construction'); CREATE TABLE water_consumption (year INT, sector_id INT, consumption INT); INSERT INTO water_consumption (year, sector_id, consumption) VALUES (2020, 1, 10000), (2020, 2, 15000), (2020, 3, 12000);","completion":"SELECT i.sector, 0 as total_consumption FROM industrial_sectors i LEFT JOIN water_consumption w ON i.id = w.sector_id AND w.year = 2021 GROUP BY i.sector;"}
{"prompt":"What is the total water usage by all agricultural customers in the Sacramento region? with given SQL schema CREATE TABLE agricultural_customers (customer_id INT, region VARCHAR(20), water_usage FLOAT); INSERT INTO agricultural_customers (customer_id, region, water_usage) VALUES (1, 'Sacramento', 5000), (2, 'San_Diego', 4000), (3, 'Sacramento', 7000); CREATE TABLE regions (region VARCHAR(20), PRIMARY KEY (region)); INSERT INTO regions (region) VALUES ('Sacramento'), ('San_Diego');","completion":"SELECT SUM(water_usage) FROM agricultural_customers WHERE region = ('Sacramento');"}
{"prompt":"Calculate the percentage of workout sessions that were Yoga for each member. with given SQL schema CREATE TABLE member_workout_duration (member_id INT, activity VARCHAR(50), duration INT); INSERT INTO member_workout_duration (member_id, activity, duration) VALUES (1, 'Running', 60); INSERT INTO member_workout_duration (member_id, activity, duration) VALUES (1, 'Cycling', 45); INSERT INTO member_workout_duration (member_id, activity, duration) VALUES (2, 'Yoga', 90); INSERT INTO member_workout_duration (member_id, activity, duration) VALUES (2, 'Running', 30);","completion":"SELECT member_id, (SUM(CASE WHEN activity = 'Yoga' THEN duration ELSE 0 END) \/ SUM(duration)) * 100 as yoga_percentage FROM member_workout_duration GROUP BY member_id;"}
{"prompt":"List the top 2 AI algorithms with the highest explainability scores, by algorithm subtype, ordered by scores in descending order for the European region. with given SQL schema CREATE TABLE ai_algorithms (algorithm_id INT, algorithm_name VARCHAR(50), algorithm_subtype VARCHAR(50), region VARCHAR(50), explainability_score FLOAT); INSERT INTO ai_algorithms (algorithm_id, algorithm_name, algorithm_subtype, region, explainability_score) VALUES (1, 'AlgoA', 'Tree-based', 'Europe', 0.85), (2, 'AlgoB', 'Computer Vision', 'Europe', 0.92), (3, 'AlgoC', 'Tree-based', 'Europe', 0.78), (4, 'AlgoD', 'Transformer', 'Europe', 0.90), (5, 'AlgoE', 'Tree-based', 'Europe', 0.80);","completion":"SELECT algorithm_subtype, region, * FROM (SELECT algorithm_subtype, region, algorithm_id, algorithm_name, explainability_score, RANK() OVER (PARTITION BY algorithm_subtype ORDER BY explainability_score DESC) AS rank FROM ai_algorithms WHERE region = 'Europe') ranked WHERE rank <= 2 ORDER BY algorithm_subtype, region, explainability_score DESC;"}
{"prompt":"What is the average amount of grants given to young farmers in Nigeria? with given SQL schema CREATE TABLE agricultural_innovation_projects (id INT, country VARCHAR(20), grant_amount DECIMAL(10, 2), age_group VARCHAR(10)); INSERT INTO agricultural_innovation_projects (id, country, grant_amount, age_group) VALUES (1, 'Nigeria', 3000.00, 'Young'), (2, 'Nigeria', 4000.00, 'Experienced');","completion":"SELECT AVG(grant_amount) FROM agricultural_innovation_projects WHERE country = 'Nigeria' AND age_group = 'Young';"}
{"prompt":"What is the average amount of loans issued per community development initiative in Africa? with given SQL schema CREATE TABLE CommunityDevelopment (ProjectID INT, ProjectName VARCHAR(50), Location VARCHAR(50), AmountOfLoans FLOAT); INSERT INTO CommunityDevelopment (ProjectID, ProjectName, Location, AmountOfLoans) VALUES (1, 'Clean Water Project', 'Nigeria', 50000.00), (2, 'Renewable Energy Initiative', 'Kenya', 75000.00);","completion":"SELECT AVG(AmountOfLoans) FROM (SELECT AmountOfLoans FROM CommunityDevelopment WHERE Location IN ('Nigeria', 'Kenya') ORDER BY AmountOfLoans) WHERE ROW_NUMBER() OVER (ORDER BY AmountOfLoans) % 2 = 1;"}
{"prompt":"Which astronauts have spent the most time in space? with given SQL schema CREATE TABLE Astronaut(id INT, name VARCHAR(50), total_time_in_space INT); INSERT INTO Astronaut(id, name, total_time_in_space) VALUES (1, 'Peggy Whitson', 665), (2, 'Scott Kelly', 520), (3, 'Gennady Padalka', 879), (4, 'Mike Fincke', 382);","completion":"SELECT name, total_time_in_space FROM Astronaut ORDER BY total_time_in_space DESC LIMIT 2;"}
{"prompt":"What is the total number of animals in each location? with given SQL schema CREATE TABLE animal_population (id INT, species VARCHAR(50), population INT, location VARCHAR(50));INSERT INTO animal_population (id, species, population, location) VALUES (1, 'Tiger', 250, 'Asia'), (2, 'Elephant', 500, 'Africa'), (3, 'Giraffe', 300, 'Africa');CREATE TABLE habitat_preservation (id INT, animal_id INT, location VARCHAR(50), acres FLOAT);INSERT INTO habitat_preservation (id, animal_id, location, acres) VALUES (1, 1, 'Asia', 10000), (2, 2, 'Africa', 15000), (3, 3, 'Africa', 5000);","completion":"SELECT h.location, SUM(ap.population) FROM animal_population ap JOIN habitat_preservation h ON ap.location = h.location GROUP BY h.location;"}
{"prompt":"List all shrimp farms in Africa with water temperatures between 20 and 25 degrees Celsius. with given SQL schema CREATE TABLE Shrimp_Farms (id INT, region VARCHAR(255), temperature DECIMAL(5,2)); INSERT INTO Shrimp_Farms (id, region, temperature) VALUES (1, 'Africa', 22.5), (2, 'Africa', 19.8), (3, 'Europe', 26.1), (4, 'Africa', 24.2);","completion":"SELECT Shrimp_Farms.id FROM Shrimp_Farms WHERE Shrimp_Farms.region = 'Africa' AND Shrimp_Farms.temperature BETWEEN 20 AND 25;"}
{"prompt":"Calculate the average number of construction labor hours worked per day for the month of February 2022 with given SQL schema CREATE TABLE construction_labor (worker_id INT, hours_worked INT, work_date DATE);","completion":"SELECT AVG(hours_worked \/ 8) FROM construction_labor WHERE EXTRACT(MONTH FROM work_date) = 2"}
{"prompt":"What is the total number of sustainable building projects in Texas in Q2 2022? with given SQL schema CREATE TABLE Projects (project_id INT, state VARCHAR(255), is_sustainable BOOLEAN, start_date DATE); INSERT INTO Projects (project_id, state, is_sustainable, start_date) VALUES (1, 'Texas', true, '2022-04-01'), (2, 'Texas', true, '2022-05-01');","completion":"SELECT COUNT(project_id) FROM Projects WHERE state = 'Texas' AND is_sustainable = true AND QUARTER(start_date) = 2 AND YEAR(start_date) = 2022 GROUP BY state;"}
{"prompt":"What are the total sales and average product price for each product category in Michigan for the year 2021? with given SQL schema CREATE TABLE products (id INT, name TEXT, category TEXT); INSERT INTO products (id, name, category) VALUES (1, 'Product X', 'Category A'); INSERT INTO products (id, name, category) VALUES (2, 'Product Y', 'Category B'); CREATE TABLE sales (product_id INT, year INT, sales INT, price INT); INSERT INTO sales (product_id, year, sales, price) VALUES (1, 2021, 100, 50); INSERT INTO sales (product_id, year, sales, price) VALUES (2, 2021, 150, 75);","completion":"SELECT p.category, SUM(s.sales) as total_sales, AVG(s.price) as average_price FROM products p INNER JOIN sales s ON p.id = s.product_id WHERE p.name = 'Michigan' AND s.year = 2021 GROUP BY p.category;"}
{"prompt":"What is the total billing amount for each attorney, broken down by outcome? with given SQL schema CREATE TABLE Attorneys (AttorneyID int, Name varchar(50)); INSERT INTO Attorneys VALUES (1, 'Smith'), (2, 'Johnson'); CREATE TABLE Billing (BillingID int, CaseID int, Amount decimal(10,2)); INSERT INTO Billing VALUES (1, 1, 5000.00), (2, 1, 7000.00), (3, 2, 3000.00), (4, 3, 4000.00); CREATE TABLE Cases (CaseID int, AttorneyID int, Outcome varchar(10)); INSERT INTO Cases VALUES (1, 1, 'Won'), (2, 1, 'Lost'), (3, 2, 'Won');","completion":"SELECT A.Name, C.Outcome, SUM(B.Amount) as TotalBilling FROM Attorneys A INNER JOIN Billing B ON A.AttorneyID = B.CaseID INNER JOIN Cases C ON B.CaseID = C.CaseID GROUP BY A.Name, C.Outcome;"}
{"prompt":"What is the total CO2 emission per vehicle per day? with given SQL schema create table VehicleEmission (Vehicle varchar(255), CO2 int, Timestamp datetime); insert into VehicleEmission values ('Vehicle1', 50, '2022-01-01 00:00:00'), ('Vehicle2', 70, '2022-01-01 00:00:00'), ('Vehicle1', 60, '2022-01-02 00:00:00');","completion":"select Vehicle, DATE(Timestamp) as Date, SUM(CO2) as TotalCO2 from VehicleEmission group by Vehicle, Date;"}
{"prompt":"Find the number of climate communication campaigns launched in the Pacific Islands every year since 2015, and order them by year. with given SQL schema CREATE TABLE climate_communication (campaign VARCHAR(50), year INT, region VARCHAR(50)); INSERT INTO climate_communication (campaign, year, region) VALUES ('Ocean Conservation', 2016, 'Pacific Islands'), ('Climate Awareness', 2017, 'Pacific Islands');","completion":"SELECT year, COUNT(*) as campaigns_per_year FROM climate_communication WHERE region = 'Pacific Islands' AND year >= 2015 GROUP BY year ORDER BY year;"}
{"prompt":"What is the average CO2 emission for the top 3 highest emitting countries since 2015? with given SQL schema CREATE TABLE emissions (country VARCHAR(50), year INT, co2_emission INT); INSERT INTO emissions (country, year, co2_emission) VALUES ('USA', 2015, 5373978000); INSERT INTO emissions (country, year, co2_emission) VALUES ('China', 2015, 10498600000); INSERT INTO emissions (country, year, co2_emission) VALUES ('India', 2015, 2633830000); INSERT INTO emissions (country, year, co2_emission) VALUES ('USA', 2016, 5518004000); INSERT INTO emissions (country, year, co2_emission) VALUES ('China', 2016, 10813000000); INSERT INTO emissions (country, year, co2_emission) VALUES ('India', 2016, 2799280000);","completion":"SELECT AVG(co2_emission) as avg_emission FROM (SELECT country, year, co2_emission, ROW_NUMBER() OVER (ORDER BY co2_emission DESC) as rn FROM emissions WHERE year >= 2015) t WHERE rn <= 3 GROUP BY country;"}
{"prompt":"What is the mortality rate for heart disease in Mexico? with given SQL schema CREATE TABLE Mortality (ID INT, Country VARCHAR(100), CauseOfDeath VARCHAR(50), MortalityRate FLOAT); INSERT INTO Mortality (ID, Country, CauseOfDeath, MortalityRate) VALUES (1, 'Mexico', 'Heart Disease', 150);","completion":"SELECT MortalityRate FROM Mortality WHERE Country = 'Mexico' AND CauseOfDeath = 'Heart Disease';"}
{"prompt":"What is the total number of hospital beds in each country in the Asia continent? with given SQL schema CREATE TABLE Countries (Country VARCHAR(50), Continent VARCHAR(50), Hospital_Beds INT); INSERT INTO Countries (Country, Continent, Hospital_Beds) VALUES ('India', 'Asia', 500000), ('China', 'Asia', 700000), ('Japan', 'Asia', 300000);","completion":"SELECT Country, SUM(Hospital_Beds) FROM Countries WHERE Continent = 'Asia' GROUP BY Country WITH ROLLUP;"}
{"prompt":"List the number of diversity metrics reported for each gender in 'California'? with given SQL schema CREATE TABLE diversity_metrics (id INT PRIMARY KEY, company_id INT, gender TEXT, minority TEXT, year INT, location TEXT); CREATE VIEW diversity_metrics_summary AS SELECT gender, location, COUNT(*) as count FROM diversity_metrics GROUP BY gender, location;","completion":"SELECT s.gender, s.location, s.count FROM diversity_metrics_summary s JOIN company_founding c ON c.location = s.location WHERE s.location = 'California';"}
{"prompt":"What is the average funding amount for companies founded by women in the Consumer Electronics industry? with given SQL schema CREATE TABLE Companies (id INT, name VARCHAR(50), industry VARCHAR(50), country VARCHAR(50), founding_year INT, founder_gender VARCHAR(10)); INSERT INTO Companies (id, name, industry, country, founding_year, founder_gender) VALUES (1, 'EarGear', 'Consumer Electronics', 'Canada', 2017, 'Female'); INSERT INTO Companies (id, name, industry, country, founding_year, founder_gender) VALUES (2, 'SmartEyewear', 'Consumer Electronics', 'UK', 2018, 'Male');","completion":"SELECT AVG(funding_amount) as avg_funding FROM (SELECT funding_amount FROM Funding WHERE company_name IN (SELECT name FROM Companies WHERE industry = 'Consumer Electronics' AND founder_gender = 'Female')) as subquery;"}
{"prompt":"How many regulatory violations have been committed by Coinbase and Huobi combined? with given SQL schema CREATE TABLE regulatory_violations (platform VARCHAR(255), violation_count INT); INSERT INTO regulatory_violations (platform, violation_count) VALUES ('Coinbase', 10); INSERT INTO regulatory_violations (platform, violation_count) VALUES ('Huobi', 15);","completion":"SELECT SUM(violation_count) FROM regulatory_violations WHERE platform IN ('Coinbase', 'Huobi');"}
{"prompt":"Identify the top 3 tree species in terms of carbon sequestration in tropical dry forests with given SQL schema CREATE TABLE forests_carbon_seq (id INT, type VARCHAR(20), species VARCHAR(20), carbon FLOAT); INSERT INTO forests_carbon_seq (id, type, species, carbon) VALUES (1, 'Tropical Dry', 'Oak', 150000), (2, 'Tropical Dry', 'Pine', 180000);","completion":"SELECT species, SUM(carbon) AS total_carbon FROM forests_carbon_seq WHERE type = 'Tropical Dry' GROUP BY species ORDER BY total_carbon DESC LIMIT 3;"}
{"prompt":"What is the average timber volume per record, partitioned by year? with given SQL schema CREATE TABLE forests (id INT, region VARCHAR(255), volume FLOAT, year INT); INSERT INTO forests (id, region, volume, year) VALUES (1, 'North', 1200, 2019), (2, 'South', 1500, 2019), (3, 'East', 1800, 2019), (4, 'West', 1000, 2019), (5, 'North', 1300, 2020), (6, 'South', 1600, 2020), (7, 'East', 1900, 2020), (8, 'West', 1100, 2020);","completion":"SELECT year, AVG(volume) as avg_volume FROM forests GROUP BY year;"}
{"prompt":"List all natural nail polishes sold in Germany with a price below 10 euros. with given SQL schema CREATE TABLE nail_polishes(product_name TEXT, price DECIMAL(5,2), natural BOOLEAN, sale_country TEXT); INSERT INTO nail_polishes(product_name, price, natural, sale_country) VALUES ('Nude Polish', 8.99, true, 'Germany');","completion":"SELECT product_name FROM nail_polishes WHERE price < 10 AND natural = true AND sale_country = 'Germany';"}
{"prompt":"Which cosmetic brands have the highest average customer rating? with given SQL schema CREATE TABLE brand (id INT, name VARCHAR(255), avg_rating FLOAT); CREATE TABLE rating (brand_id INT, rating FLOAT); INSERT INTO brand (id, name, avg_rating) VALUES (1, 'Lush', 4.2), (2, 'The Body Shop', 4.1), (3, 'Sephora', 4.3); INSERT INTO rating (brand_id, rating) VALUES (1, 4.5), (1, 4.0), (2, 4.1), (2, 4.2), (3, 4.4), (3, 4.3);","completion":"SELECT b.name, AVG(r.rating) as avg_rating FROM brand b JOIN rating r ON b.id = r.brand_id GROUP BY b.name ORDER BY avg_rating DESC;"}
{"prompt":"How many crime incidents were reported in each borough of New York City in the year 2020? with given SQL schema CREATE TABLE crime_incidents (id INT, incident_type VARCHAR(255), borough VARCHAR(255), report_date DATE); INSERT INTO crime_incidents (id, incident_type, borough, report_date) VALUES (1, 'Theft', 'Manhattan', '2020-01-01'), (2, 'Assault', 'Brooklyn', '2020-01-02');","completion":"SELECT borough, YEAR(report_date) AS year, COUNT(*) AS incident_count FROM crime_incidents GROUP BY borough, year;"}
{"prompt":"What is the number of days each community policing program was active? with given SQL schema CREATE TABLE community_policing (id INT PRIMARY KEY, program_name VARCHAR(50), start_date DATE, end_date DATE);","completion":"SELECT program_name, DATEDIFF(end_date, start_date) as days_active FROM community_policing;"}
{"prompt":"What is the total value of defense contracts signed by company 'XYZ Inc.'? with given SQL schema CREATE TABLE defense_contracts (value NUMERIC, company VARCHAR(255)); INSERT INTO defense_contracts (value, company) VALUES (1000000, 'ABC Inc.'), (2000000, 'XYZ Inc.');","completion":"SELECT SUM(value) FROM defense_contracts WHERE company = 'XYZ Inc.';"}
{"prompt":"What is the average number of military innovation projects by type (e.g., AI, cybersecurity, drones) in each region, ordered from highest to lowest? with given SQL schema CREATE TABLE military_innovation_3 (id INT, region VARCHAR(255), project_type VARCHAR(255)); INSERT INTO military_innovation_3 (id, region, project_type) VALUES (1, 'North America', 'AI'), (2, 'Europe', 'Cybersecurity'), (3, 'Asia', 'Drones'), (4, 'North America', 'Cybersecurity'), (5, 'Europe', 'AI'), (6, 'Asia', 'Quantum Computing'), (7, 'North America', 'Drones'), (8, 'Europe', 'Quantum Computing'), (9, 'Asia', 'AI'), (10, 'North America', 'Quantum Computing');","completion":"SELECT region, AVG(project_type) AS avg_projects FROM military_innovation_3 GROUP BY region ORDER BY avg_projects DESC;"}
{"prompt":"What are the names and types of all tankers in the 'tankers' table that have a capacity greater than 100000 tons? with given SQL schema CREATE TABLE tankers (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50), capacity INT);","completion":"SELECT name, type FROM tankers WHERE capacity > 100000;"}
{"prompt":"List manufacturers and their ethical manufacturing certifications with given SQL schema CREATE TABLE Manufacturers (manufacturer_id INT, manufacturer_name VARCHAR(50), region VARCHAR(50)); INSERT INTO Manufacturers (manufacturer_id, manufacturer_name, region) VALUES (1, 'ManufacturerA', 'North America'), (2, 'ManufacturerB', 'Europe'), (3, 'ManufacturerC', 'Asia-Pacific'); CREATE TABLE EthicalCertifications (certification_id INT, certification_name VARCHAR(50), manufacturer_id INT); INSERT INTO EthicalCertifications (certification_id, certification_name, manufacturer_id) VALUES (1, 'FairTrade', 1), (2, 'BCorp', 2), (3, 'EthicalTrade', 3);","completion":"SELECT m.manufacturer_name, c.certification_name FROM Manufacturers m INNER JOIN EthicalCertifications c ON m.manufacturer_id = c.manufacturer_id;"}
{"prompt":"What is the name and production date of the machines in the 'circular_economy' category that have a production date after 2015? with given SQL schema CREATE TABLE machines (id INT, name VARCHAR(255), category VARCHAR(255), production_date DATE); INSERT INTO machines (id, name, category, production_date) VALUES (1, 'ABC Machine', 'circular_economy', '2016-01-01'), (2, 'XYZ Machine', 'circular_economy', '2014-01-01'), (3, 'DEF Machine', 'circular_economy', '2017-01-01');","completion":"SELECT name, production_date FROM machines WHERE category = 'circular_economy' AND production_date > '2015-01-01';"}
{"prompt":"List the top 3 countries with the highest average artifact weight, along with the year and total weight of artifacts? with given SQL schema CREATE TABLE ExcavationSites (SiteID INT, SiteName VARCHAR(50), Country VARCHAR(50), Year INT, ArtifactWeight FLOAT); INSERT INTO ExcavationSites (SiteID, SiteName, Country, Year, ArtifactWeight) VALUES (1, 'Site A', 'USA', 2020, 23.5), (2, 'Site B', 'Mexico', 2020, 14.2), (3, 'Site C', 'USA', 2019, 34.8), (4, 'Site D', 'Canada', 2019, 45.6), (5, 'Site E', 'Canada', 2019, 56.7);","completion":"SELECT Country, Year, SUM(ArtifactWeight) AS TotalWeight, AVG(ArtifactWeight) OVER (PARTITION BY Country) AS AvgWeight FROM ExcavationSites WHERE Year IN (2019, 2020) GROUP BY Country, Year ORDER BY AvgWeight DESC, TotalWeight DESC, Year DESC LIMIT 3;"}
{"prompt":"Show artifacts excavated before a certain date and still under analysis with given SQL schema CREATE TABLE ExcavationSites (SiteID INT, SiteName TEXT, Country TEXT, StartDate DATE, EndDate DATE);CREATE TABLE Artifacts (ArtifactID INT, SiteID INT, ArtifactName TEXT, AnalysisDate DATE);","completion":"SELECT a.ArtifactName FROM Artifacts a JOIN ExcavationSites es ON a.SiteID = es.SiteID WHERE es.StartDate < '2010-01-01' AND a.AnalysisDate IS NULL;"}
{"prompt":"What is the sum of ESG scores for 'Green Horizons' in H2 2021? with given SQL schema CREATE TABLE company_scores (id INT, company VARCHAR(255), esg_score FLOAT, year INT, quarter INT); INSERT INTO company_scores (id, company, esg_score, year, quarter) VALUES (19, 'Green Horizons', 72, 2021, 3); INSERT INTO company_scores (id, company, esg_score, year, quarter) VALUES (20, 'Green Horizons', 75, 2021, 4);","completion":"SELECT SUM(esg_score) FROM company_scores WHERE company = 'Green Horizons' AND year = 2021 AND quarter BETWEEN 3 AND 4;"}
{"prompt":"What is the total number of military bases located in the US and their corresponding defense budget? with given SQL schema CREATE TABLE MilitaryBases (id INT, base_name TEXT, location TEXT, budget FLOAT); INSERT INTO MilitaryBases (id, base_name, location, budget) VALUES (1, 'Fort Bragg', 'USA', 5000000); CREATE TABLE DefenseBudget (id INT, country TEXT, amount FLOAT); INSERT INTO DefenseBudget (id, country, amount) VALUES (1, 'USA', 7400000000);","completion":"SELECT SUM(MilitaryBases.budget) as total_budget, MilitaryBases.location FROM MilitaryBases INNER JOIN DefenseBudget ON MilitaryBases.location = DefenseBudget.country WHERE DefenseBudget.country = 'USA';"}
{"prompt":"What was the average budget for programs in the Education category? with given SQL schema CREATE TABLE Programs (ProgramID INT, Category TEXT, Budget DECIMAL(10,2)); INSERT INTO Programs (ProgramID, Category, Budget) VALUES (1, 'Education', 5000.00), (2, 'Healthcare', 7000.00);","completion":"SELECT AVG(Budget) as 'Average Budget' FROM Programs WHERE Category = 'Education';"}
{"prompt":"What is the total production of oil from the 'North Sea' region in 2020? with given SQL schema CREATE TABLE wells (well_id INT, field VARCHAR(50), region VARCHAR(50), production_oil FLOAT, production_gas FLOAT); INSERT INTO wells (well_id, field, region, production_oil, production_gas) VALUES (1, 'Alvheim', 'North Sea', 15000.0, 5000.0), (2, 'Ekofisk', 'North Sea', 20000.0, 10000.0);","completion":"SELECT SUM(production_oil) FROM wells WHERE region = 'North Sea' AND YEAR(wells.production_date) = 2020;"}
{"prompt":"Update the 'tenure' of the coach of the 'Patriots' team to 25 years. with given SQL schema CREATE TABLE coaches (id INT PRIMARY KEY, name VARCHAR(50), team VARCHAR(30), tenure INT); INSERT INTO coaches (id, name, team, tenure) VALUES (1, 'Bill Belichick', 'Patriots', 20);","completion":"UPDATE coaches SET tenure = 25 WHERE team = 'Patriots';"}
{"prompt":"What is the average budget allocated for ethical AI initiatives across all organizations? with given SQL schema CREATE TABLE organization (org_id INT, org_name TEXT, budget FLOAT); INSERT INTO organization (org_id, org_name, budget) VALUES (1, 'OrgA', 50000), (2, 'OrgB', 75000), (3, 'OrgC', 100000);","completion":"SELECT AVG(budget) FROM organization WHERE initiative = 'ethical AI';"}
{"prompt":"What is the total fare and trip count for each route based on payment type for the bus routes? with given SQL schema CREATE TABLE fares (fare_id INT, route_id INT, fare_amount DECIMAL(5,2), payment_type VARCHAR(255)); INSERT INTO fares (fare_id, route_id, fare_amount, payment_type) VALUES (1, 1, 2.50, 'Credit Card'), (2, 1, 3.00, 'Cash'), (3, 2, 1.75, 'Credit Card');","completion":"SELECT route_id, payment_type, SUM(fare_amount) AS total_fare, COUNT(*) AS trip_count FROM fares WHERE route_id IN (1, 2) GROUP BY route_id, payment_type;"}
{"prompt":"What is the total fare collected for each bus route during off-peak hours? with given SQL schema CREATE TABLE bus_routes (route_id INT, route_name TEXT, starting_point TEXT, ending_point TEXT, off_peak_hour BOOLEAN); CREATE TABLE bus_fares (fare_id INT, route_id INT, fare_amount DECIMAL, fare_date DATE, fare_time TIME);","completion":"SELECT br.route_name, SUM(bf.fare_amount) as total_off_peak_fare FROM bus_routes br INNER JOIN bus_fares bf ON br.route_id = bf.route_id WHERE br.off_peak_hour = TRUE GROUP BY br.route_name;"}
{"prompt":"Update the record of sustainable materials certification for the manufacturer with ID 6. with given SQL schema CREATE TABLE manufacturer_sustainable_materials (manufacturer_id INT, certification DATE); INSERT INTO manufacturer_sustainable_materials (manufacturer_id, certification) VALUES (1, '2020-01-01'), (2, '2019-05-15'), (3, '2018-09-30'), (4, NULL), (5, '2017-01-01'), (6, NULL);","completion":"UPDATE manufacturer_sustainable_materials SET certification = '2022-06-25' WHERE manufacturer_id = 6;"}
{"prompt":"Find the top 3 countries with the highest ad spend in Q3 2021. with given SQL schema CREATE TABLE if not exists ads (ad_id INT, country VARCHAR(50), spend FLOAT, quarter INT, year INT); INSERT INTO ads (ad_id, country, spend, quarter, year) VALUES (1, 'United States', 500.00, 3, 2021), (2, 'Canada', 300.00, 3, 2021), (3, 'Mexico', 400.00, 3, 2021);","completion":"SELECT country, SUM(spend) AS total_spend FROM ads GROUP BY country ORDER BY total_spend DESC LIMIT 3;"}
{"prompt":"Update the privacy setting of users who reside in California to 'high' with given SQL schema CREATE TABLE users (id INT, state VARCHAR(20), privacy_setting VARCHAR(20)); INSERT INTO users (id, state, privacy_setting) VALUES (1, 'California', 'medium'), (2, 'New York', 'high'), (3, 'Texas', 'low');","completion":"UPDATE users SET privacy_setting = 'high' WHERE state = 'California';"}
{"prompt":"Find customers who have purchased items from both sustainable and non-sustainable categories. with given SQL schema CREATE TABLE Customers (CustomerID INT, PurchaseHistory VARCHAR(255)); INSERT INTO Customers (CustomerID, PurchaseHistory) VALUES (1, 'Organic Cotton T-Shirt, Conventional Cotton Pants'), (2, 'Recycled Polyester Leggings, Viscose Dress'), (3, 'Tencel Skirt'), (4, 'Bamboo Blouse'), (5, 'Recycled Nylon Jacket');","completion":"SELECT CustomerID FROM Customers WHERE PurchaseHistory LIKE '%Organic Cotton%' AND PurchaseHistory LIKE '%Conventional Cotton%' OR PurchaseHistory LIKE '%Recycled Polyester%' AND PurchaseHistory LIKE '%Viscose%';"}
{"prompt":"Show the total number of volunteers and total hours volunteered, grouped by program with given SQL schema CREATE TABLE volunteers (id INT, program_id INT, name VARCHAR(50), hours_volunteered DECIMAL(10,2));","completion":"SELECT p.name, COUNT(v.id) as num_volunteers, SUM(v.hours_volunteered) as total_hours_volunteered FROM programs p JOIN volunteers v ON p.id = v.program_id GROUP BY p.name;"}
{"prompt":"What is the total amount donated to 'Environment' programs in 'Germany' in the first half of 2022? with given SQL schema CREATE TABLE donations (donation_id INT, donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE, program_name TEXT); INSERT INTO donations (donation_id, donor_id, donation_amount, donation_date, program_name) VALUES (1, 5, 100, '2022-01-01', 'Environment');","completion":"SELECT SUM(donation_amount) FROM donations WHERE program_name = 'Environment' AND country = 'Germany' AND donation_date BETWEEN '2022-01-01' AND '2022-06-30';"}
{"prompt":"Insert new nutrition data for the menu item \"Veggie Burger\" with given SQL schema CREATE TABLE nutrition_data (menu_item VARCHAR(255), calories INT, protein INT, fat INT);","completion":"INSERT INTO nutrition_data (menu_item, calories, protein, fat) VALUES ('Veggie Burger', 400, 20, 15);"}
{"prompt":"What is the total budget allocated to healthcare in Australia for the current fiscal year and what is the percentage of the total budget that is allocated to healthcare? with given SQL schema CREATE TABLE countries (id INT, name VARCHAR(255)); INSERT INTO countries (id, name) VALUES (1, 'Australia'); CREATE TABLE budget_categories (id INT, name VARCHAR(255), budget INT); INSERT INTO budget_categories (id, name, budget) VALUES (1, 'Healthcare', 100000), (2, 'Education', 80000), (3, 'Defense', 70000);","completion":"SELECT budget_categories.name, SUM(budget_categories.budget) AS total_budget, (SUM(budget_categories.budget) \/ (SELECT SUM(budget) FROM budget_categories WHERE name = 'Australia')) * 100 AS pct_of_total_budget FROM budget_categories WHERE budget_categories.name = 'Healthcare';"}
{"prompt":"What are the green building certifications in France? with given SQL schema CREATE TABLE GreenBuildings (id INT, name VARCHAR(50), city VARCHAR(50), state VARCHAR(50), country VARCHAR(50), certification VARCHAR(50)); INSERT INTO GreenBuildings (id, name, city, state, country, certification) VALUES (3, 'GreenHaus', 'Berlin', 'Berlin', 'Germany', 'DGNB Gold');","completion":"SELECT g.certification FROM GreenBuildings g WHERE g.country = 'France';"}
{"prompt":"What is the total number of green buildings in the 'green_buildings' schema, and the total CO2 emission reduction (in metric tons) achieved by carbon offset initiatives in the 'carbon_offset' schema? with given SQL schema CREATE TABLE green_buildings.green_buildings_data (green_building BOOLEAN); CREATE TABLE carbon_offset.offset_initiatives (co2_reduction_tons INT);","completion":"SELECT (SELECT COUNT(*) FROM green_buildings.green_buildings_data WHERE green_building = TRUE) AS green_buildings_count, (SELECT SUM(co2_reduction_tons) FROM carbon_offset.offset_initiatives) AS co2_reduction_tons_total;"}
{"prompt":"Add a new training to the table with given SQL schema CREATE TABLE cultural_competency_training (id INT PRIMARY KEY, organization_name VARCHAR(50), training_title TEXT, training_date DATE);","completion":"INSERT INTO cultural_competency_training (id, organization_name, training_title, training_date) VALUES (1, 'University Hospital', 'Cultural Competency Training', '2023-01-01');"}
{"prompt":"How many local businesses benefited from sustainable tourism initiatives in 2021? with given SQL schema CREATE TABLE sustainable_tourism (business_id INT, year INT, benefited BOOLEAN); INSERT INTO sustainable_tourism (business_id, year, benefited) VALUES (1, 2021, TRUE), (2, 2021, TRUE), (3, 2021, FALSE);","completion":"SELECT COUNT(*) FROM sustainable_tourism WHERE year = 2021 AND benefited = TRUE;"}
{"prompt":"Insert a new record into the \"attractions\" table with id 202, name \"Aboriginal Cultural Centre\", city \"Sydney\", country \"Australia\", and type \"Cultural\" with given SQL schema CREATE TABLE attractions (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), type VARCHAR(50));","completion":"INSERT INTO attractions VALUES (202, 'Aboriginal Cultural Centre', 'Sydney', 'Australia', 'Cultural');"}
{"prompt":"Which countries had the highest virtual tourism revenue in Q2 2022? with given SQL schema CREATE TABLE tourism_revenue (country VARCHAR(50), revenue FLOAT, quarter INT, year INT); INSERT INTO tourism_revenue (country, revenue, quarter, year) VALUES ('USA', 1200000, 2, 2022), ('Canada', 800000, 2, 2022), ('Mexico', 500000, 2, 2022);","completion":"SELECT country, SUM(revenue) as total_revenue FROM tourism_revenue WHERE quarter = 2 AND year = 2022 GROUP BY country ORDER BY total_revenue DESC;"}
{"prompt":"Find the total number of glacier retreats in Norway from 2015 to 2020. with given SQL schema CREATE TABLE GlacierRetreats (location TEXT, year INTEGER, retreats INTEGER);","completion":"SELECT SUM(retreats) FROM GlacierRetreats WHERE location = 'Norway' AND year BETWEEN 2015 AND 2020;"}
{"prompt":"Which countries have the highest number of eco-friendly accommodations in Asia? with given SQL schema CREATE TABLE asia_accommodations (country VARCHAR(50), type VARCHAR(50)); INSERT INTO asia_accommodations VALUES ('Japan', 'Eco-friendly'), ('Thailand', 'Eco-friendly'), ('Indonesia', 'Eco-friendly'), ('Malaysia', 'Eco-friendly'), ('Vietnam', 'Eco-friendly');","completion":"SELECT country, COUNT(*) as count FROM asia_accommodations WHERE type = 'Eco-friendly' GROUP BY country ORDER BY count DESC;"}
{"prompt":"What is the average time taken for family court cases in New York to reach a verdict in the last 2 years? with given SQL schema CREATE TABLE FamilyCourtCases (CaseID INT, CaseType TEXT, StartDate DATE, VerdictDate DATE, State TEXT); INSERT INTO FamilyCourtCases (CaseID, CaseType, StartDate, VerdictDate, State) VALUES (1, 'Family Court', '2020-01-01', '2020-06-01', 'New York');","completion":"SELECT AVG(DATEDIFF(VerdictDate, StartDate)) as AvgTime FROM FamilyCourtCases WHERE State = 'New York' AND YEAR(StartDate) BETWEEN YEAR(CURRENT_DATE) - 2 AND YEAR(CURRENT_DATE);"}
{"prompt":"What is the maximum pollution level recorded in Southeast Asian countries in the 'Pollution' schema? with given SQL schema CREATE SCHEMA Pollution;CREATE TABLE PollutionData (id INT, country TEXT, region TEXT, pollution_level REAL); INSERT INTO PollutionData (id, country, region, pollution_level) VALUES (1, 'Indonesia', 'Southeast Asia', 9.0), (2, 'Malaysia', 'Southeast Asia', 7.5), (3, 'Philippines', 'Southeast Asia', 8.2), (4, 'Thailand', 'Southeast Asia', 6.9), (5, 'Singapore', 'Southeast Asia', 5.4), (6, 'Vietnam', 'Southeast Asia', 7.8);","completion":"SELECT MAX(pollution_level) FROM Pollution.PollutionData WHERE region = 'Southeast Asia';"}
{"prompt":"What is the total production volume of copper in Chile for the year 2020? with given SQL schema CREATE TABLE production (id INT, mine_id INT, year INT, product TEXT, production_volume INT); INSERT INTO production (id, mine_id, year, product, production_volume) VALUES (1, 1, 2020, 'Copper', 25000);","completion":"SELECT SUM(production_volume) FROM production WHERE year = 2020 AND product = 'Copper' AND mine_id IN (SELECT id FROM mines WHERE location = 'Chile');"}
{"prompt":"Identify the top 2 countries with the highest concert revenue, excluding the United States. with given SQL schema CREATE TABLE Concerts (id INT, country VARCHAR(50), revenue FLOAT);","completion":"SELECT country, SUM(revenue) FROM Concerts WHERE country NOT IN ('United States') GROUP BY country ORDER BY SUM(revenue) DESC LIMIT 2;"}
{"prompt":"Calculate the total donation amount for environmental causes in Q1 2022. with given SQL schema CREATE TABLE donations (id INT PRIMARY KEY, cause VARCHAR(20), donation_amount INT, donation_date DATE); INSERT INTO donations (id, cause, donation_amount, donation_date) VALUES (1, 'environment', 100, '2022-01-01');","completion":"SELECT SUM(donation_amount) FROM donations WHERE cause = 'environment' AND donation_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"prompt":"Find the total number of underwater volcanoes in the Atlantic region with a depth greater than 3500 meters. with given SQL schema CREATE TABLE underwater_volcanoes (id INT, name VARCHAR(255), region VARCHAR(50), depth INT); INSERT INTO underwater_volcanoes (id, name, region, depth) VALUES (1, 'Atlantic Volcano 1', 'Atlantic', 3500), (2, 'Atlantic Volcano 2', 'Atlantic', 3000);","completion":"SELECT COUNT(*) FROM underwater_volcanoes WHERE region = 'Atlantic' AND depth > 3500;"}
{"prompt":"What are the names and categories of donors who have contributed more than $1,000,000 in total? with given SQL schema CREATE TABLE Donors (DonorID INT, Name TEXT, Category TEXT, TotalContributions DECIMAL(18,2)); INSERT INTO Donors (DonorID, Name, Category, TotalContributions) VALUES (1, 'DonorA', 'Effective Altruism', 1200000), (2, 'DonorB', 'Impact Investing', 800000), (3, 'DonorC', 'Effective Altruism', 1500000), (4, 'DonorD', 'Impact Investing', 900000), (5, 'DonorE', 'Effective Altruism', 700000);","completion":"SELECT Name, Category FROM Donors WHERE TotalContributions > 1000000;"}
{"prompt":"What is the average playtime for all players who have played 'Cybernetic Shift'? with given SQL schema CREATE TABLE Player_Details (Player_ID INT, Player_Name VARCHAR(50), Country VARCHAR(50), Playtime INT, Game_Name VARCHAR(50)); INSERT INTO Player_Details (Player_ID, Player_Name, Country, Playtime, Game_Name) VALUES (1, 'Alex Rodriguez', 'Brazil', 210, 'Cybernetic Shift'), (2, 'Pia Johnson', 'South Africa', 360, 'Cybernetic Shift'), (3, 'Leila Ahmed', 'Egypt', 420, 'Cybernetic Shift'), (4, 'Hiroshi Tanaka', 'Japan', 180, 'Cybernetic Shift'), (5, 'Kim Nguyen', 'Vietnam', 300, 'Cybernetic Shift');","completion":"SELECT AVG(Playtime) FROM Player_Details WHERE Game_Name = 'Cybernetic Shift';"}
{"prompt":"What is the average playtime, in hours, for players from Egypt, for games in the 'Strategy' genre? with given SQL schema CREATE TABLE games (game_id INT, game_genre VARCHAR(255), player_id INT, playtime_mins INT); CREATE TABLE players (player_id INT, player_country VARCHAR(255));","completion":"SELECT AVG(playtime_mins \/ 60) FROM games JOIN players ON games.player_id = players.player_id WHERE players.player_country = 'Egypt' AND game_genre = 'Strategy';"}
{"prompt":"How many buildings are there in each neighborhood? with given SQL schema CREATE TABLE neighborhoods (neighborhood VARCHAR(50), building_id INT); INSERT INTO neighborhoods (neighborhood, building_id) VALUES ('NeighborhoodA', 1), ('NeighborhoodB', 2), ('NeighborhoodA', 3), ('NeighborhoodC', 4), ('NeighborhoodB', 5);","completion":"SELECT neighborhood, COUNT(DISTINCT building_id) FROM neighborhoods GROUP BY neighborhood;"}
{"prompt":"What is the average size of units in co-living buildings? with given SQL schema CREATE TABLE co_living_buildings (building_id INT, unit_size FLOAT); INSERT INTO co_living_buildings (building_id, unit_size) VALUES (1, 500.5), (2, 450.3), (3, 600.7);","completion":"SELECT AVG(unit_size) FROM co_living_buildings;"}
{"prompt":"Update the food_safety table to set the score to 90 for inspection_date '2022-08-05' with given SQL schema CREATE TABLE food_safety (id INT PRIMARY KEY, restaurant_id INT, inspection_date DATE, score INT);","completion":"UPDATE food_safety SET score = 90 WHERE inspection_date = '2022-08-05';"}
{"prompt":"What is the average carbon footprint of products made in each country? with given SQL schema CREATE TABLE products (product_id INT, country VARCHAR(50), carbon_footprint DECIMAL(10, 2)); CREATE VIEW country_products AS SELECT country, carbon_footprint FROM products GROUP BY country;","completion":"SELECT country, AVG(carbon_footprint) FROM country_products GROUP BY country;"}
{"prompt":"What is the total quantity of products sold by each brand, pivoted by month? with given SQL schema CREATE TABLE products (product_id INT, brand VARCHAR(255), quantity INT, sale_date DATE); INSERT INTO products (product_id, brand, quantity, sale_date) VALUES (1, 'BrandA', 10, '2021-01-01'); CREATE TABLE brands (brand_id INT, brand VARCHAR(255)); INSERT INTO brands (brand_id, brand) VALUES (1, 'BrandA'), (2, 'BrandB');","completion":"SELECT brand, SUM(quantity) AS total_quantity, EXTRACT(MONTH FROM sale_date) AS month FROM products p JOIN brands b ON p.brand = b.brand GROUP BY brand, month ORDER BY brand, month;"}
{"prompt":"Which countries have launched the most satellites in the SpaceRadar table? with given SQL schema CREATE TABLE SpaceRadar (id INT, country VARCHAR(50), year INT, satellites INT); INSERT INTO SpaceRadar (id, country, year, satellites) VALUES (1, 'USA', 2000, 10), (2, 'China', 2005, 8), (3, 'Russia', 1995, 12);","completion":"SELECT country, SUM(satellites) AS total_satellites FROM SpaceRadar GROUP BY country ORDER BY total_satellites DESC;"}
{"prompt":"What is the maximum duration of space missions led by astronauts from the USA? with given SQL schema CREATE TABLE space_missions(id INT, mission_name VARCHAR(50), leader_name VARCHAR(50), leader_country VARCHAR(50), duration INT); INSERT INTO space_missions VALUES(1, 'Apollo 11', 'Neil Armstrong', 'USA', 195.), (2, 'Gemini 12', 'James Lovell', 'USA', 94.);","completion":"SELECT MAX(duration) FROM space_missions WHERE leader_country = 'USA';"}
{"prompt":"What is the total number of threat indicators in the 'threat_intelligence' table for each threat category? with given SQL schema CREATE TABLE threat_intelligence (id INT PRIMARY KEY, threat_category TEXT, indicator TEXT);","completion":"SELECT threat_category, COUNT(*) FROM threat_intelligence GROUP BY threat_category;"}
{"prompt":"Which policies have been violated by the most users in the past year from the 'policy_violations' and 'policy_library' tables? with given SQL schema CREATE TABLE policy_violations (id INT, policy_id INT, user_id INT, violation_date DATE); CREATE TABLE policy_library (id INT, policy_name VARCHAR(255), description VARCHAR(255));","completion":"SELECT policy_name, COUNT(DISTINCT user_id) as total_users FROM policy_violations JOIN policy_library ON policy_violations.policy_id = policy_library.id WHERE violation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY policy_id ORDER BY total_users DESC;"}
{"prompt":"Find the total number of electric vehicle charging stations with given SQL schema CREATE TABLE Stations (StationID INT, StationType VARCHAR(50), Electric BOOLEAN); INSERT INTO Stations (StationID, StationType, Electric) VALUES (1, 'Gas Station', false), (2, 'Charging Station', true), (3, 'Parking Garage', false), (4, 'Charging Station', true), (5, 'Convenience Store', false), (6, 'Charging Station', true);","completion":"SELECT COUNT(*) as TotalChargingStations FROM Stations WHERE Electric = true;"}
{"prompt":"List the top 3 states with the highest average claim amount for auto policies, ordered by the average claim amount in descending order. with given SQL schema CREATE TABLE Claims (ClaimID INT, PolicyType VARCHAR(255), PolicyholderID INT, ClaimAmount DECIMAL(10,2), State VARCHAR(255)); INSERT INTO Claims VALUES (1, 'Auto', 1, 5000, 'NY'), (2, 'Home', 2, 7000, 'CA'), (3, 'Auto', 3, 8000, 'ON'), (4, 'Life', 4, 6000, 'CA'), (5, 'Auto', 5, 9000, 'CA');","completion":"SELECT State, AVG(ClaimAmount) as AvgClaimAmount FROM Claims WHERE PolicyType = 'Auto' GROUP BY State ORDER BY AvgClaimAmount DESC LIMIT 3;"}
{"prompt":"Show policy types that have not resulted in any claims yet. with given SQL schema CREATE TABLE Policy (PolicyID INT, PolicyType VARCHAR(20)); CREATE TABLE Claims (ClaimID INT, PolicyID INT); INSERT INTO Policy VALUES (1, 'Auto'), (2, 'Home'), (3, 'Life'); INSERT INTO Claims VALUES (1, 1), (2, 1), (3, 2);","completion":"SELECT DISTINCT PolicyType FROM Policy P WHERE NOT EXISTS (SELECT 1 FROM Claims C WHERE P.PolicyID = C.PolicyID);"}
{"prompt":"How many unions are present in each country? with given SQL schema CREATE TABLE UnionMembers (id INT, union_name VARCHAR(50), country VARCHAR(50), member_count INT); INSERT INTO UnionMembers (id, union_name, country, member_count) VALUES (1, 'United Steelworkers', 'USA', 200000), (2, 'UNITE HERE', 'USA', 300000), (3, 'TUC', 'UK', 6000000), (4, 'CUPE', 'Canada', 650000), (5, 'USW', 'Canada', 120000);","completion":"SELECT country, COUNT(DISTINCT union_name) as num_unions FROM UnionMembers GROUP BY country;"}
{"prompt":"Show the collective bargaining agreements that expire in 2024 for unions in the 'west_region'? with given SQL schema CREATE TABLE cb_agreements (union_name TEXT, expiration_year INTEGER, region TEXT); INSERT INTO cb_agreements (union_name, expiration_year, region) VALUES ('Union A', 2023, 'east_region'), ('Union D', 2024, 'west_region'), ('Union E', 2025, 'west_region');","completion":"SELECT union_name FROM cb_agreements WHERE region = 'west_region' AND expiration_year = 2024;"}
{"prompt":"What is the average salary of female workers in the manufacturing industry? with given SQL schema CREATE TABLE manufacturing (id INT, gender TEXT, salary FLOAT); INSERT INTO manufacturing (id, gender, salary) VALUES (1, 'Male', 50000), (2, 'Female', 45000);","completion":"SELECT AVG(salary) FROM manufacturing WHERE gender = 'Female';"}
{"prompt":"What is the average weekly wage for each job category in the 'labor_stats' table? with given SQL schema CREATE TABLE labor_stats (id INT, job_category VARCHAR(255), weekly_wage FLOAT); INSERT INTO labor_stats (id, job_category, weekly_wage) VALUES (1, 'Engineering', 1500.50), (2, 'Management', 2000.75), (3, 'Service', 800.00);","completion":"SELECT job_category, AVG(weekly_wage) as avg_wage FROM labor_stats GROUP BY job_category;"}
{"prompt":"How many landfills are there in Texas and what is their total capacity in cubic yards? with given SQL schema CREATE TABLE landfills (location VARCHAR(255), name VARCHAR(255), capacity_cubic_yards INT); INSERT INTO landfills (location, name, capacity_cubic_yards) VALUES ('Texas', 'Landfill A', 1000000), ('Texas', 'Landfill B', 1500000);","completion":"SELECT COUNT(*) as num_landfills, SUM(capacity_cubic_yards) as total_capacity FROM landfills WHERE location = 'Texas';"}
{"prompt":"What is the total waste generation in 2012 for all sectors? with given SQL schema CREATE TABLE waste_generation (id INT, sector VARCHAR(20), year INT, amount INT); INSERT INTO waste_generation (id, sector, year, amount) VALUES (1, 'residential', 2010, 4000), (2, 'residential', 2011, 4500), (3, 'residential', 2012, 4700), (4, 'commercial', 2010, 6000), (5, 'commercial', 2011, 6500), (6, 'commercial', 2012, 7000), (7, 'industrial', 2010, 8000), (8, 'industrial', 2011, 8500), (9, 'industrial', 2012, 9000);","completion":"SELECT SUM(amount) FROM waste_generation WHERE year = 2012;"}
{"prompt":"What is the trend of sentiment scores for creative AI applications over time? with given SQL schema CREATE TABLE creative_ai (id INT, timestamp TIMESTAMP, sentiment FLOAT);","completion":"SELECT timestamp, AVG(sentiment) OVER (ORDER BY timestamp RANGE BETWEEN INTERVAL '1 day' PRECEDING AND CURRENT ROW) FROM creative_ai;"}
{"prompt":"How many satellites have been deployed by each space company? with given SQL schema CREATE SCHEMA aerospace; USE aerospace; CREATE TABLE space_company (name VARCHAR(255), satellites_deployed INT); INSERT INTO space_company (name, satellites_deployed) VALUES ('SpaceX', 2423), ('Rocket Lab', 135), ('Blue Origin', 20), ('Virgin Orbit', 4);","completion":"SELECT name, satellites_deployed FROM aerospace.space_company;"}
{"prompt":"What are the total number of aircraft manufactured by each company? with given SQL schema CREATE TABLE aircraft (id INT PRIMARY KEY, manufacturer VARCHAR(50), model VARCHAR(50)); INSERT INTO aircraft (id, manufacturer, model) VALUES (1, 'Boeing', '737'), (2, 'Airbus', 'A320'), (3, 'Boeing', '787'), (4, 'Airbus', 'A350');","completion":"SELECT manufacturer, COUNT(*) FROM aircraft GROUP BY manufacturer;"}
{"prompt":"What is the average attendee_age for music_concert events in Toronto? with given SQL schema CREATE TABLE music_concert_attendance (id INT, attendee_age INT, concert_location VARCHAR(50)); INSERT INTO music_concert_attendance (id, attendee_age, concert_location) VALUES (1, 30, 'Toronto'), (2, 35, 'Toronto'), (3, 40, 'Montreal'), (4, 45, 'Montreal'), (5, 32, 'Vancouver'), (6, 42, 'Vancouver');","completion":"SELECT AVG(attendee_age) FROM music_concert_attendance WHERE concert_location = 'Toronto';"}
{"prompt":"Calculate the total amount of climate mitigation investments for each country in Asia in 2019 and 2020. with given SQL schema CREATE TABLE climate_mitigation (country VARCHAR(50), investment INT, year INT, region VARCHAR(50)); INSERT INTO climate_mitigation (country, investment, year, region) VALUES ('India', 1000000, 2019, 'Asia'), ('China', 1500000, 2019, 'Asia'), ('India', 1200000, 2020, 'Asia'), ('China', 1800000, 2020, 'Asia');","completion":"SELECT country, SUM(investment) as total_investment FROM climate_mitigation WHERE year IN (2019, 2020) AND region = 'Asia' GROUP BY country;"}
{"prompt":"What's the total investment in climate communication in Africa and Oceania from 2010 to 2020? with given SQL schema CREATE TABLE communication_investments (region TEXT, year INT, amount FLOAT); INSERT INTO communication_investments (region, year, amount) VALUES ('Africa', 2010, 100000); INSERT INTO communication_investments (region, year, amount) VALUES ('Oceania', 2010, 50000);","completion":"SELECT SUM(amount) FROM communication_investments WHERE region IN ('Africa', 'Oceania') AND year BETWEEN 2010 AND 2020;"}
{"prompt":"List the top 3 companies by R&D expenditures in the oncology department that have the highest sales growth between 2017 and 2018, excluding companies from North America. with given SQL schema CREATE TABLE companies (id INT, name VARCHAR(255), department VARCHAR(255), expenditures FLOAT, sales FLOAT, company_location VARCHAR(255)); INSERT INTO companies (id, name, department, expenditures, sales, company_location) VALUES (1, 'Global Pharma', 'Oncology', 15000000, 50000000, 'Europe'), (2, 'BioTech Asia', 'Oncology', 12000000, 40000000, 'Asia'), (3, 'Pharma Oceania', 'Cardiology', 9000000, 30000000, 'Oceania'), (4, 'American Health', 'Oncology', 10000000, 60000000, 'North America'), (5, 'South American Bio', 'Oncology', 11000000, 45000000, 'South America');","completion":"SELECT a.name, a.expenditures, a.sales, ((a.sales \/ b.sales - 1) * 100) AS sales_growth FROM companies a INNER JOIN companies b ON a.name = b.name AND a.department = b.department AND a.company_location = b.company_location WHERE a.department = 'Oncology' AND a.company_location NOT IN ('North America') AND b.department = 'Oncology' AND b.company_location NOT IN ('North America') GROUP BY a.name, a.expenditures, a.sales ORDER BY a.expenditures DESC, sales_growth DESC LIMIT 3;"}
{"prompt":"What is the maximum R&D expenditure for a specific drug company in a certain year? with given SQL schema CREATE TABLE companies (id INT, name VARCHAR(255)); CREATE TABLE rd_expenditures (id INT, company_id INT, year INT, amount DECIMAL(10, 2));","completion":"SELECT MAX(rd_expenditures.amount) FROM rd_expenditures JOIN companies ON rd_expenditures.company_id = companies.id WHERE companies.name = 'PharmaCorp' AND rd_expenditures.year = 2019;"}
{"prompt":"Insert a new record into the covid_cases table with a case number of 6006 from the country of India. with given SQL schema CREATE TABLE covid_cases (id INT, country VARCHAR(255), case_number INT);","completion":"INSERT INTO covid_cases (id, country, case_number) VALUES (6, 'India', 6006);"}
{"prompt":"What is the total number of immunization records in Nigeria over the past month? with given SQL schema CREATE TABLE immunization_records (id INT, patient_id INT, vaccine_type TEXT, record_date TIMESTAMP); INSERT INTO immunization_records (id, patient_id, vaccine_type, record_date) VALUES (1, 1, 'Measles', '2022-06-10 14:30:00'), (2, 2, 'Polio', '2022-05-15 09:00:00');","completion":"SELECT COUNT(*) FROM immunization_records WHERE record_date >= DATEADD(month, -1, CURRENT_TIMESTAMP) AND country = 'Nigeria';"}
{"prompt":"How many students with hearing impairments received accommodations in the past year? with given SQL schema CREATE TABLE student (id INT, disability VARCHAR(255)); INSERT INTO student (id, disability) VALUES (1, 'Visual Impairment'), (2, 'Hearing Impairment'), (3, 'Mobility Impairment'); CREATE TABLE accommodation (id INT, student_id INT, type VARCHAR(255), date DATE); INSERT INTO accommodation (id, student_id, type, date) VALUES (1, 1, 'Sign Language Interpreter', '2022-01-01'), (2, 2, 'Assistive Listening Devices', '2022-02-15'), (3, 3, 'Wheelchair Access', '2022-03-03');","completion":"SELECT COUNT(a.id) as hearing_impairment_accommodations FROM accommodation a JOIN student s ON a.student_id = s.id WHERE a.date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND s.disability = 'Hearing Impairment';"}
{"prompt":"Delete all marine species in the 'marine_species' table that belong to the 'Mollusca' phylum. with given SQL schema CREATE TABLE marine_species (id INT, name VARCHAR(255), phylum VARCHAR(255)); INSERT INTO marine_species (id, name, phylum) VALUES (1, 'Pacific salmon', 'Chordata'), (2, 'Blue whale', 'Chordata'), (3, 'Sea anemone', 'Cnidaria');","completion":"DELETE FROM marine_species WHERE phylum = 'Mollusca';"}
{"prompt":"What is the total number of marine protected areas in the Caribbean region? with given SQL schema CREATE TABLE ProtectedAreas(id INT, name VARCHAR(50), region VARCHAR(30)); INSERT INTO ProtectedAreas(id, name, region) VALUES (1, 'Bonaire National Marine Park', 'Caribbean'), (2, 'Bahamas Exuma Cays Land and Sea Park', 'Caribbean'), (3, 'Galapagos Marine Reserve', 'South America');","completion":"SELECT COUNT(*) FROM ProtectedAreas WHERE region = 'Caribbean';"}
{"prompt":"What is the total number of tokens held by the 'AAVE' smart contract? with given SQL schema CREATE TABLE smart_contracts (id INT, name VARCHAR(255)); INSERT INTO smart_contracts (id, name) VALUES (7, 'AAVE'); CREATE TABLE token_balances (smart_contract_id INT, token_balance INT); INSERT INTO token_balances (smart_contract_id, token_balance) VALUES (7, 2000000);","completion":"SELECT token_balance FROM token_balances WHERE smart_contract_id = (SELECT id FROM smart_contracts WHERE name = 'AAVE');"}
{"prompt":"Count the number of halal makeup products sold in the USA with given SQL schema CREATE TABLE sales (id INT, product_id INT, quantity INT, country VARCHAR(50)); CREATE TABLE products (id INT, name VARCHAR(50), category VARCHAR(50), halal BOOLEAN);","completion":"SELECT COUNT(*) FROM sales JOIN products ON sales.product_id = products.id WHERE products.category = 'makeup' AND products.halal = TRUE AND sales.country = 'USA';"}
{"prompt":"What percentage of hair care products are free from sulfates and parabens in the EU? with given SQL schema CREATE TABLE hair_care_products (product_id INT, name VARCHAR(255), is_sulfate_free BOOLEAN, is_paraben_free BOOLEAN, region VARCHAR(255));","completion":"SELECT (COUNT(product_id) * 100.0 \/ (SELECT COUNT(*) FROM hair_care_products WHERE region = 'EU')) AS percentage FROM hair_care_products WHERE is_sulfate_free = TRUE AND is_paraben_free = TRUE AND region = 'EU';"}
{"prompt":"What is the average attendance for cultural events by day of the week? with given SQL schema CREATE TABLE cultural_events (id INT, city VARCHAR(50), event VARCHAR(50), day_of_week VARCHAR(50), attendance INT); INSERT INTO cultural_events (id, city, event, day_of_week, attendance) VALUES (1, 'New York', 'Art Exhibit', 'Monday', 2500), (2, 'Los Angeles', 'Theater Performance', 'Tuesday', 1800), (3, 'Chicago', 'Music Concert', 'Wednesday', 2200);","completion":"SELECT day_of_week, AVG(attendance) as avg_attendance FROM cultural_events GROUP BY day_of_week;"}
{"prompt":"How many defense contracts were signed in each quarter of 2020? with given SQL schema CREATE TABLE defense_contracts (contract_id INT, contract_date DATE); INSERT INTO defense_contracts VALUES (1, '2020-03-15'), (2, '2020-06-01'), (3, '2020-09-15');","completion":"SELECT TO_CHAR(contract_date, 'YYYY-Q') AS quarter, COUNT(*) FROM defense_contracts WHERE contract_date >= DATE '2020-01-01' AND contract_date < DATE '2021-01-01' GROUP BY quarter;"}
{"prompt":"Which defense contractors have signed contracts worth over 5 million in the last 6 months? with given SQL schema CREATE TABLE contract_timeline (contract_value NUMERIC, contractor VARCHAR(255), contract_date DATE); INSERT INTO contract_timeline (contract_value, contractor, contract_date) VALUES (6000000, 'Contractor C', '2022-01-01'), (4000000, 'Contractor D', '2022-02-15');","completion":"SELECT contractor FROM contract_timeline WHERE contract_value > 5000000 AND contract_date > DATEADD(month, -6, CURRENT_DATE);"}
{"prompt":"What is the total transaction value per weekday for the first half of 2022? with given SQL schema CREATE TABLE transactions (transaction_id INT, transaction_date DATE, transaction_category VARCHAR(255), transaction_value DECIMAL(10,2)); INSERT INTO transactions (transaction_id, transaction_date, transaction_category, transaction_value) VALUES (1, '2022-01-02', 'Food', 75.00), (2, '2022-01-05', 'Electronics', 350.00), (3, '2022-01-10', 'Clothing', 200.00);","completion":"SELECT DATE_FORMAT(transaction_date, '%W') as day_of_week, SUM(transaction_value) as total_value FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY day_of_week;"}
{"prompt":"Which vessels have not handled any cargo with a weight above a certain threshold? with given SQL schema CREATE TABLE vessels ( id INT, name VARCHAR(255), port_id INT); CREATE TABLE cargo ( id INT, vessel_id INT, weight INT); INSERT INTO vessels (id, name, port_id) VALUES (1, 'Vessel A', 1), (2, 'Vessel B', 1), (3, 'Vessel C', 2); INSERT INTO cargo (id, vessel_id, weight) VALUES (1, 1, 5000), (2, 1, 7000), (3, 2, 3000), (4, 3, 4000);","completion":"SELECT vessels.name FROM vessels LEFT JOIN cargo ON vessels.id = cargo.vessel_id WHERE cargo.weight IS NULL OR cargo.weight <= 5000;"}
{"prompt":"Insert new records for a 'sustainable_manufacturing' program into the 'energy_efficiency' table, along with the corresponding energy savings. with given SQL schema CREATE TABLE energy_efficiency (program VARCHAR(50), energy_savings FLOAT);","completion":"INSERT INTO energy_efficiency (program, energy_savings) VALUES ('sustainable_manufacturing', 12.5), ('energy_audits', 7.8), ('smart_meters', 10.2);"}
{"prompt":"What is the average number of primary care physicians per hospital in rural areas of Texas? with given SQL schema CREATE TABLE hospital (hospital_id INT, hospital_name TEXT, location TEXT); INSERT INTO hospital (hospital_id, hospital_name, location) VALUES (1, 'Rural Hospital A', 'Texas'); CREATE TABLE medical_staff (staff_id INT, staff_name TEXT, hospital_id INT, position TEXT); INSERT INTO medical_staff (staff_id, staff_name, hospital_id, position) VALUES (1, 'Dr. Jane Smith', 1, 'Primary Care');","completion":"SELECT AVG(staff_count) FROM (SELECT hospital_id, COUNT(*) as staff_count FROM medical_staff WHERE position = 'Primary Care' GROUP BY hospital_id) as subquery JOIN hospital ON subquery.hospital_id = hospital.hospital_id WHERE hospital.location = 'Texas';"}
{"prompt":"How many investments were made in the healthcare sector in Q4 2022? with given SQL schema CREATE TABLE investments (id INT, company_id INT, investment_date DATE); CREATE TABLE companies (id INT, name VARCHAR(255), sector VARCHAR(255)); INSERT INTO companies (id, name, sector) VALUES (1, 'Pfizer', 'Healthcare'), (2, 'Microsoft', 'Technology'); INSERT INTO investments (id, company_id, investment_date) VALUES (1, 1, '2022-10-01'), (2, 1, '2022-11-15'), (3, 2, '2022-12-20');","completion":"SELECT COUNT(*) FROM investments i JOIN companies c ON i.company_id = c.id WHERE c.sector = 'Healthcare' AND YEAR(i.investment_date) = 2022 AND QUARTER(i.investment_date) = 4;"}
{"prompt":"What is the number of military personnel in each branch of the US military? with given SQL schema CREATE TABLE MilitaryPersonnel (id INT, name VARCHAR(255), branch VARCHAR(255), personnel_count INT); INSERT INTO MilitaryPersonnel (id, name, branch, personnel_count) VALUES (1, 'John Doe', 'Army', 500000), (2, 'Jane Smith', 'Navy', 450000), (3, 'Bob Johnson', 'Air Force', 375000);","completion":"SELECT branch, personnel_count FROM MilitaryPersonnel WHERE branch IN ('Army', 'Navy', 'Air Force') GROUP BY branch;"}
{"prompt":"Delete all songs from the jazz genre released before 1960. with given SQL schema CREATE TABLE songs (song_id INT, song_name VARCHAR(100), genre VARCHAR(50), release_year INT); INSERT INTO songs (song_id, song_name, genre, release_year) VALUES (1, 'So What', 'jazz', 1959), (2, 'Take Five', 'jazz', 1959), (3, 'Misty', 'jazz', 1954), (4, 'All of Me', 'jazz', 1931), (5, 'What a Wonderful World', 'jazz', 1967);","completion":"DELETE FROM songs WHERE genre = 'jazz' AND release_year < 1960;"}
{"prompt":"Find the average donation amount for the 'Education for All' campaign in 2021. with given SQL schema CREATE TABLE donations (id INT, donor_name TEXT, campaign TEXT, amount INT, donation_date DATE); INSERT INTO donations (id, donor_name, campaign, amount, donation_date) VALUES (1, 'John Doe', 'Education for All', 50, '2021-01-01'); INSERT INTO donations (id, donor_name, campaign, amount, donation_date) VALUES (2, 'Jane Smith', 'Education for All', 100, '2021-05-15');","completion":"SELECT AVG(amount) FROM donations WHERE campaign = 'Education for All' AND YEAR(donation_date) = 2021;"}
{"prompt":"How many donations were made by Indian volunteers? with given SQL schema CREATE TABLE Volunteers (id INT, name TEXT, country TEXT); INSERT INTO Volunteers (id, name, country) VALUES (1, 'Ravi', 'India'), (2, 'Neha', 'Nepal'); CREATE TABLE Donations (id INT, volunteer_id INT, amount FLOAT); INSERT INTO Donations (id, volunteer_id, amount) VALUES (3, 1, 200.0), (4, 2, 75.0);","completion":"SELECT COUNT(*) FROM Donations INNER JOIN Volunteers ON Donations.volunteer_id = Volunteers.id WHERE Volunteers.country = 'India';"}
{"prompt":"What is the change in mental health score between consecutive school years? with given SQL schema CREATE TABLE mental_health_changes (student_id INT, year INT, score INT); INSERT INTO mental_health_changes (student_id, year, score) VALUES (1, 2018, 80), (1, 2019, 85), (2, 2018, 70), (2, 2019, 75), (3, 2018, 80), (3, 2019, 85);","completion":"SELECT year, score, LAG(score, 1) OVER (PARTITION BY student_id ORDER BY year) AS previous_score, score - LAG(score, 1) OVER (PARTITION BY student_id ORDER BY year) AS score_change FROM mental_health_changes;"}
{"prompt":"Insert a new 'tanker' record for 'Theta Shipping' from 'Norway' to 'Canada' with a 'capacity' of 100000 with given SQL schema CREATE TABLE tanker (id INT PRIMARY KEY, name TEXT, operator TEXT, source TEXT, destination TEXT, capacity INT);","completion":"INSERT INTO tanker (name, operator, source, destination, capacity) VALUES ('Norwegian Titan', 'Theta Shipping', 'Norway', 'Canada', 100000);"}
{"prompt":"Insert a new record into the 'oil_market' table with the following details: market_id = 105, market_name = 'Asian Market', crude_oil_price_usd = 85.99 with given SQL schema CREATE TABLE oil_market (market_id INT PRIMARY KEY, market_name VARCHAR(255), crude_oil_price_usd DECIMAL(10, 2));","completion":"INSERT INTO oil_market (market_id, market_name, crude_oil_price_usd) VALUES (105, 'Asian Market', 85.99);"}
{"prompt":"Insert new well record for Brazil with 4000m depth. with given SQL schema CREATE TABLE wells (id INT, location VARCHAR(20), depth FLOAT);","completion":"INSERT INTO wells (id, location, depth) VALUES (1, 'Brazil', 4000);"}
{"prompt":"What is the name and age of the oldest donor by gender? with given SQL schema CREATE TABLE donors (id INT, name TEXT, age INT, gender TEXT, contribution FLOAT, location TEXT); INSERT INTO donors (id, name, age, gender, contribution, location) VALUES (1, 'Alice Johnson', 45, 'Female', 500.00, 'San Francisco'); INSERT INTO donors (id, name, age, gender, contribution, location) VALUES (2, 'Bob Brown', 50, 'Male', 1000.00, 'Chicago');","completion":"SELECT gender, MAX(age) as max_age, MIN(name) as oldest_donor FROM donors GROUP BY gender;"}
{"prompt":"For the technology_accessibility table, return the device_type and user_count for the rows with the 50th, 75th, and 90th percentile user_count values, in ascending order. with given SQL schema CREATE TABLE technology_accessibility (device_type VARCHAR(255), user_count INT);","completion":"SELECT device_type, user_count FROM (SELECT device_type, user_count, NTILE(4) OVER (ORDER BY user_count) as percentile FROM technology_accessibility) tmp WHERE percentile IN (2, 3, 4) ORDER BY user_count ASC;"}
{"prompt":"What are the total fares collected from each vehicle type, sorted in descending order? with given SQL schema CREATE TABLE Fares (id INT, vehicle_type VARCHAR(10), fare DECIMAL(5,2)); INSERT INTO Fares (id, vehicle_type, fare) VALUES (1, 'Bus', 2.50), (2, 'Tram', 3.00), (3, 'Train', 5.00);","completion":"SELECT vehicle_type, SUM(fare) FROM Fares GROUP BY vehicle_type ORDER BY SUM(fare) DESC;"}
{"prompt":"What is the average number of subway delays in 'uptown' per month? with given SQL schema CREATE TABLE subway_delays (station VARCHAR(20), delay_time INT, delay_date DATE); INSERT INTO subway_delays (station, delay_time, delay_date) VALUES ('uptown', 10, '2022-01-01'), ('downtown', 5, '2022-01-02'), ('uptown', 15, '2022-01-03');","completion":"SELECT AVG(delay_time) FROM subway_delays WHERE station = 'uptown' GROUP BY EXTRACT(MONTH FROM delay_date);"}
{"prompt":"What is the average production cost of recycled polyester garments per factory? with given SQL schema CREATE TABLE garments (garment_id INT, garment_name TEXT, production_cost FLOAT, factory_id INT); INSERT INTO garments (garment_id, garment_name, production_cost, factory_id) VALUES (1, 'Organic Cotton Tee', 15.50, 1), (2, 'Cotton Tote Bag', 8.25, 1), (3, 'Recycled Polyester Hoodie', 28.99, 2), (4, 'Organic Cotton Dress', 22.00, 1), (5, 'Hemp Trousers', 35.00, 3), (6, 'Bamboo Shirt', 27.50, 3), (7, 'Recycled Polyester Jacket', 45.00, 2), (8, 'Hemp Blouse', 28.00, 3), (9, 'Hemp Skirt', 32.00, 3), (10, 'Recycled Polyester Shirt', 24.00, 4);","completion":"SELECT AVG(g.production_cost) FROM garments g GROUP BY g.factory_id HAVING COUNT(*) FILTER (WHERE g.garment_name LIKE '%Recycled Polyester%') > 0;"}
{"prompt":"What are the user privacy settings related to data sharing? with given SQL schema CREATE TABLE privacy_settings (id INT PRIMARY KEY, user_id INT, data_sharing BOOLEAN, sharing_preferences TEXT); INSERT INTO privacy_settings (id, user_id, data_sharing, sharing_preferences) VALUES (1, 1, FALSE, '{\"location\": false, \"purchase_history\": true}'); INSERT INTO privacy_settings (id, user_id, data_sharing, sharing_preferences) VALUES (2, 2, TRUE, '{\"location\": true, \"purchase_history\": false}');","completion":"SELECT u.name, ps.data_sharing, JSON_EXTRACT(ps.sharing_preferences, '$.location') as location_sharing FROM users u INNER JOIN privacy_settings ps ON u.id = ps.user_id WHERE JSON_EXTRACT(ps.sharing_preferences, '$.location') = 'true';"}
{"prompt":"What is the maximum number of followers for users who posted content related to \"sustainable living\" in the last month? with given SQL schema CREATE TABLE users (id INT, followers INT); CREATE TABLE posts (id INT, user_id INT, content VARCHAR(255), post_date DATE); INSERT INTO users (id, followers) VALUES (1, 7000), (2, 9000); INSERT INTO posts (id, user_id, content, post_date) VALUES (1, 1, 'Sustainable living is important', '2022-03-15'), (2, 2, 'Love sustainable living', '2022-03-20');","completion":"SELECT MAX(users.followers) FROM users JOIN posts ON users.id = posts.user_id WHERE posts.content ILIKE '%sustainable living%' AND posts.post_date >= NOW() - INTERVAL '1 month';"}
{"prompt":"What is the total revenue generated from sponsored posts in the beauty category? with given SQL schema CREATE TABLE sponsored_posts (id INT, category VARCHAR(50), revenue FLOAT);  INSERT INTO sponsored_posts (id, category, revenue) VALUES (1, 'gaming', 100.50), (2, 'sports', 150.25), (3, 'gaming', 200.75), (4, 'beauty', 50.00);","completion":"SELECT SUM(revenue) FROM sponsored_posts WHERE category = 'beauty';"}
{"prompt":"Delete all nutrition data for product 'P001' in the nutrition_facts table. with given SQL schema CREATE TABLE nutrition_facts (product_id VARCHAR(255), calories INT, protein INT, fat INT);","completion":"DELETE FROM nutrition_facts WHERE product_id = 'P001';"}
{"prompt":"Identify the top 3 suppliers with the highest number of organic vegetable shipments with given SQL schema CREATE TABLE suppliers (supplier_id INT, name VARCHAR(50), certified_organic BOOLEAN); INSERT INTO suppliers (supplier_id, name, certified_organic) VALUES (1, 'Green Earth Farms', true), (2, 'Sunny Harvest', false), (3, 'Organic Roots', true); CREATE TABLE shipments (shipment_id INT, supplier_id INT, product VARCHAR(50), organic BOOLEAN); INSERT INTO shipments (shipment_id, supplier_id, product, organic) VALUES (1, 1, 'carrots', true), (2, 1, 'broccoli', true), (3, 2, 'apples', false), (4, 3, 'spinach', true), (5, 3, 'kale', true);","completion":"SELECT supplier_id, COUNT(*) as shipment_count FROM shipments WHERE organic = true GROUP BY supplier_id ORDER BY shipment_count DESC LIMIT 3;"}
{"prompt":"What is the total quantity of all items shipped from warehouse 'NYC'? with given SQL schema CREATE TABLE shipments (shipment_id INT, item_code VARCHAR(5), warehouse_id VARCHAR(5), quantity INT); CREATE TABLE warehouses (warehouse_id VARCHAR(5), city VARCHAR(5), state VARCHAR(3)); INSERT INTO shipments VALUES (1, 'AAA', 'LAX', 200), (2, 'BBB', 'NYC', 300), (3, 'AAA', 'LAX', 100), (4, 'CCC', 'NYC', 50); INSERT INTO warehouses VALUES ('LAX', 'Los', ' Angeles'), ('NYC', 'New', ' York'), ('JFK', 'New', ' York');","completion":"SELECT SUM(quantity) FROM shipments JOIN warehouses ON shipments.warehouse_id = warehouses.warehouse_id WHERE warehouses.city = 'NYC';"}
{"prompt":"Calculate the total budget for biosensor technology development projects in H2 2021. with given SQL schema CREATE TABLE biosensor_tech(id INT, project_name TEXT, budget DECIMAL(10,2), quarter INT, year INT);","completion":"SELECT SUM(budget) FROM biosensor_tech WHERE quarter IN (3, 4) AND year = 2021;"}
{"prompt":"Show the 'name' and 'investment_amount' of all investors who have invested more than 50000 in the 'biosensors' table with given SQL schema CREATE TABLE investors (id INT PRIMARY KEY, name TEXT); CREATE TABLE biosensors (id INT PRIMARY KEY, investor_id INT, investment_amount INT);","completion":"SELECT i.name, b.investment_amount FROM investors i JOIN biosensors b ON i.id = b.investor_id WHERE b.investment_amount > 50000;"}
{"prompt":"Update the name of StartupA to NewStartupA. with given SQL schema CREATE TABLE startups (id INT, name VARCHAR(50), location VARCHAR(50), funding FLOAT); INSERT INTO startups VALUES (1, 'StartupA', 'California', 15000000); INSERT INTO startups VALUES (2, 'StartupB', 'New York', 20000000); INSERT INTO startups VALUES (3, 'StartupC', 'California', 25000000);","completion":"UPDATE startups SET name = 'NewStartupA' WHERE name = 'StartupA';"}
{"prompt":"What is the total funding for Genetic Research at 'Genome Inc.'? with given SQL schema CREATE TABLE genome_inc (id INT, project TEXT, funding FLOAT); INSERT INTO genome_inc (id, project, funding) VALUES (1, 'Genetic Research', 12000000.0); INSERT INTO genome_inc (id, project, funding) VALUES (2, 'Bioprocess Engineering', 8000000.0);","completion":"SELECT SUM(funding) FROM genome_inc WHERE project = 'Genetic Research';"}
{"prompt":"What is the total size of all green buildings in India with GRIHA certification? with given SQL schema CREATE TABLE green_buildings (id INT, city VARCHAR(255), country VARCHAR(255), certification VARCHAR(255), size INT); INSERT INTO green_buildings (id, city, country, certification, size) VALUES (2, 'Mumbai', 'India', 'GRIHA', 12000);","completion":"SELECT SUM(size) as total_size FROM green_buildings WHERE country = 'India' AND certification = 'GRIHA';"}
{"prompt":"Who are the top 5 green building contractors in the state of California based on their total number of certified green building projects? with given SQL schema CREATE TABLE contractors (contractor_id INT, contractor_name VARCHAR(100), state VARCHAR(100)); CREATE TABLE green_buildings (building_id INT, contractor_id INT, building_name VARCHAR(100), certification VARCHAR(50)); INSERT INTO contractors (contractor_id, contractor_name, state) VALUES (1, 'GreenBuild Inc', 'CA'); INSERT INTO green_buildings (building_id, contractor_id, building_name, certification) VALUES (1, 1, 'GreenHouse', 'LEED Platinum'), (2, 1, 'GreenPlace', 'LEED Gold');","completion":"SELECT contractor_name, COUNT(*) AS total_certified_projects FROM green_buildings INNER JOIN contractors ON green_buildings.contractor_id = contractors.contractor_id WHERE contractors.state = 'CA' GROUP BY contractor_name ORDER BY total_certified_projects DESC LIMIT 5;"}
{"prompt":"What are the top 3 countries with the highest number of heritage sites? with given SQL schema CREATE TABLE Countries (id INT, name TEXT); INSERT INTO Countries (id, name) VALUES (1, 'Italy'); CREATE TABLE CountryHeritages (id INT, country_id INT, heritage_site TEXT); INSERT INTO CountryHeritages (id, country_id, heritage_site) VALUES (1, 1, 'Colosseum');","completion":"SELECT C.name, COUNT(*) FROM Countries C INNER JOIN CountryHeritages CH ON C.id = CH.country_id GROUP BY C.name ORDER BY COUNT(*) DESC LIMIT 3;"}
{"prompt":"What is the average number of languages spoken per country in Southeast Asia? with given SQL schema CREATE TABLE continents (id INT, name TEXT); INSERT INTO continents (id, name) VALUES (1, 'Asia'), (2, 'Africa'); CREATE TABLE countries (id INT, continent_id INT, name TEXT); INSERT INTO countries (id, continent_id, name) VALUES (1, 1, 'Indonesia'), (2, 1, 'Philippines'), (3, 2, 'Nigeria'); CREATE TABLE languages (id INT, country_id INT, name TEXT); INSERT INTO languages (id, country_id, name) VALUES (1, 1, 'Indonesian'), (2, 1, 'Javanese'), (3, 2, 'Filipino'), (4, 2, 'Cebuano'), (5, 3, 'Hausa');","completion":"SELECT c.continent_id, AVG(COUNT(*)) FROM countries c JOIN languages l ON c.id = l.country_id WHERE c.continent_id = 1 GROUP BY c.continent_id;"}
{"prompt":"How many patients have been diagnosed with anxiety in Germany? with given SQL schema CREATE TABLE diagnoses (id INT, patient_id INT, condition VARCHAR(255)); CREATE TABLE patients (id INT, age INT, country VARCHAR(255)); INSERT INTO diagnoses (id, patient_id, condition) VALUES (1, 1, 'Depression'), (2, 2, 'Anxiety'), (3, 3, 'Bipolar'), (4, 4, 'Anxiety'); INSERT INTO patients (id, age, country) VALUES (1, 35, 'Germany'), (2, 42, 'Canada'), (3, 28, 'Mexico'), (4, 31, 'Germany');","completion":"SELECT COUNT(*) FROM diagnoses JOIN patients ON diagnoses.patient_id = patients.id WHERE diagnoses.condition = 'Anxiety' AND patients.country = 'Germany';"}
{"prompt":"What are the average maintenance costs for airports in Germany? with given SQL schema CREATE TABLE Airport (id INT, name VARCHAR(50), maintenance_cost FLOAT, country VARCHAR(50)); INSERT INTO Airport (id, name, maintenance_cost, country) VALUES (1, 'Frankfurt Airport', 5000000, 'Germany');","completion":"SELECT AVG(maintenance_cost) FROM Airport WHERE country = 'Germany' AND type = 'Airport';"}
{"prompt":"Identify the number of pollution incidents in each country's coastal waters. with given SQL schema CREATE SCHEMA MarinePollution(pollution_id INT, country_name TEXT, incident_date DATE);INSERT INTO MarinePollution(pollution_id, country_name, incident_date) VALUES (1, 'Canada', '2021-06-01'), (2, 'Mexico', '2021-07-15'), (3, 'USA', '2021-08-05'), (4, 'Canada', '2021-09-20');","completion":"SELECT country_name, COUNT(*) FROM MarinePollution GROUP BY country_name;"}
{"prompt":"How many TV shows were produced in Spain in 2017? with given SQL schema CREATE TABLE tv_shows (id INT, title TEXT, country TEXT, year INT); INSERT INTO tv_shows (id, title, country, year) VALUES (1, 'ShowA', 'Spain', 2017), (2, 'ShowB', 'Spain', 2018), (3, 'ShowC', 'USA', 2019);","completion":"SELECT COUNT(*) FROM tv_shows WHERE country = 'Spain' AND year = 2017;"}
{"prompt":"What's the earliest publication date of articles in the 'Tech' category? with given SQL schema CREATE TABLE articles_tech (id INT, title TEXT, category TEXT, pub_date DATE); INSERT INTO articles_tech (id, title, category, pub_date) VALUES (1, 'Article1', 'Tech', '2022-01-01'), (2, 'Article2', 'Tech', '2022-01-10');","completion":"SELECT MIN(pub_date) FROM articles_tech WHERE category = 'Tech';"}
{"prompt":"Find the number of menu items prepared with allergen-free options and the percentage of total items. with given SQL schema CREATE TABLE menus (menu_item_name VARCHAR(255), daily_sales INT, has_allergen_free BOOLEAN);","completion":"SELECT COUNT(*) as num_allergen_free, (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM menus)) as allergen_free_percentage FROM menus WHERE has_allergen_free = TRUE;"}
{"prompt":"How many 'Veggie Burgers' were sold in each region? with given SQL schema CREATE TABLE Regional_Sales(Region VARCHAR(20), Menu_Item VARCHAR(30), Quantity INT); INSERT INTO Regional_Sales(Region, Menu_Item, Quantity) VALUES('Northeast', 'Veggie Burger', 50), ('Midwest', 'Veggie Burger', 75), ('South', 'Veggie Burger', 100);","completion":"SELECT Region, SUM(Quantity) as Total_Quantity FROM Regional_Sales WHERE Menu_Item = 'Veggie Burger' GROUP BY Region;"}
{"prompt":"What is the revenue generated from the sale of organic dishes in the last month? with given SQL schema CREATE TABLE inventory (item_id INT, quantity INT, unit_price DECIMAL(5,2), is_organic BOOLEAN); INSERT INTO inventory (item_id, quantity, unit_price, is_organic) VALUES (1, 10, 12.99, true), (2, 20, 7.50, false), (3, 30, 9.99, true), (4, 40, 15.49, false), (5, 50, 8.99, true); CREATE TABLE orders (order_id INT, item_id INT, order_date DATE); INSERT INTO orders (order_id, item_id, order_date) VALUES (1, 1, '2022-01-01'), (2, 3, '2022-01-02'), (3, 2, '2022-01-03'), (4, 4, '2022-01-04'), (5, 5, '2022-01-05'); CREATE TABLE menu_items (item_id INT, name TEXT, is_organic BOOLEAN); INSERT INTO menu_items (item_id, name, is_organic) VALUES (1, 'Quinoa Salad', true), (2, 'Beef Burger', false), (3, 'Chickpea Curry', true), (4, 'Cheesecake', false), (5, 'Veggie Pizza', true);","completion":"SELECT SUM(i.unit_price * o.quantity) as revenue FROM inventory i JOIN orders o ON i.item_id = o.item_id JOIN menu_items m ON i.item_id = m.item_id WHERE m.is_organic = true AND o.order_date BETWEEN '2022-02-01' AND '2022-02-28';"}
{"prompt":"What is the maximum number of naval vessels sold by ArmaTech in Europe? with given SQL schema CREATE TABLE IF NOT EXISTS naval_sales (vessel_id int, quantity_sold int, company varchar(30), region varchar(30)); INSERT INTO naval_sales (vessel_id, quantity_sold, company, region) VALUES (1, 10, 'ArmaTech', 'Europe'), (2, 12, 'ArmaTech', 'Europe'), (3, 8, 'ArmaTech', 'Europe');","completion":"SELECT MAX(quantity_sold) FROM naval_sales WHERE company = 'ArmaTech' AND region = 'Europe';"}
{"prompt":"How many unique genres did artists from Africa perform at music festivals in 2022? with given SQL schema CREATE TABLE Artists (region VARCHAR(50), festival_performance INT); INSERT INTO Artists (region, festival_performance) VALUES ('Africa', 1); INSERT INTO Artists (region, festival_performance) VALUES ('Africa', 2);","completion":"SELECT COUNT(DISTINCT genre) FROM Festivals WHERE region = 'Africa' AND festival_performance = 1;"}
{"prompt":"Delete audience demographics records from 'Russia' where age is less than 18. with given SQL schema CREATE TABLE audience_demographics (id INT, age INT, country TEXT);","completion":"DELETE FROM audience_demographics WHERE age < 18 AND country = 'Russia';"}
{"prompt":"Delete players who have not played any VR games and are under 25 years old. with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), HasPlayedVR BOOLEAN); INSERT INTO Players (PlayerID, Age, Gender, HasPlayedVR) VALUES (1, 25, 'Male', TRUE), (2, 30, 'Female', FALSE), (3, 22, 'Male', TRUE), (4, 19, 'Non-binary', FALSE);","completion":"DELETE FROM Players WHERE HasPlayedVR = FALSE AND Age < 25;"}
{"prompt":"What is the average prize pool of RPG games in North America? with given SQL schema CREATE TABLE PrizePools (EventID INT, Game VARCHAR(10), PrizePool DECIMAL(10, 2), Region VARCHAR(10)); INSERT INTO PrizePools (EventID, Game, PrizePool, Region) VALUES (1, 'WoW', 100000, 'North America');","completion":"SELECT AVG(PrizePool) FROM PrizePools WHERE Game = 'WoW' AND Region = 'North America';"}
{"prompt":"Count the number of sensors with given SQL schema CREATE TABLE sensor (id INT); INSERT INTO sensor (id) VALUES (1), (2), (3), (4), (5);","completion":"SELECT COUNT(*) FROM sensor;"}
{"prompt":"Remove the irrigation record with ID I031 with given SQL schema CREATE TABLE irrigation_data (irrigation_id INT, farm_id INT, irrigation_percentage INT);","completion":"DELETE FROM irrigation_data WHERE irrigation_id = 31;"}
{"prompt":"Calculate the percentage of total Europium production for each country. with given SQL schema CREATE TABLE europium_production (country VARCHAR(50), quantity INT);","completion":"SELECT country, quantity * 100.0 \/ SUM(quantity) OVER (PARTITION BY NULL) AS percentage FROM europium_production;"}
{"prompt":"What is the maximum revenue generated from selling Yttrium in India in the past 3 years? with given SQL schema CREATE TABLE Yttrium_Sales (id INT PRIMARY KEY, year INT, country VARCHAR(20), quantity INT, price PER_KG); INSERT INTO Yttrium_Sales (id, year, country, quantity, price) VALUES (1, 2019, 'India', 120, 40), (2, 2020, 'India', 130, 45), (3, 2021, 'India', 140, 50), (4, 2019, 'China', 150, 35), (5, 2020, 'China', 160, 40), (6, 2021, 'China', 170, 45);","completion":"SELECT MAX(quantity * price) FROM Yttrium_Sales WHERE country = 'India' GROUP BY year ORDER BY year DESC LIMIT 3;"}
{"prompt":"Update the price of 'Tofu Stir Fry' to 12.99 in 'Green Garden' restaurant if the current price is less than 12.99. with given SQL schema CREATE TABLE menu (menu_id INT, item_name VARCHAR(50), price DECIMAL(5,2), category VARCHAR(20), restaurant_id INT); INSERT INTO menu (menu_id, item_name, price, category, restaurant_id) VALUES (6, 'Tofu Stir Fry', 11.99, 'Vegan', 5), (7, 'Chickpea Curry', 13.99, 'Vegan', 5);","completion":"UPDATE menu SET price = 12.99 WHERE item_name = 'Tofu Stir Fry' AND restaurant_id = 5 AND price < 12.99;"}
{"prompt":"What is the minimum revenue for restaurants serving Ethiopian food? with given SQL schema CREATE TABLE Restaurants (id INT, name TEXT, type TEXT, revenue FLOAT); INSERT INTO Restaurants (id, name, type, revenue) VALUES (1, 'Restaurant A', 'Italian', 5000.00), (2, 'Restaurant B', 'Ethiopian', 6000.00), (3, 'Restaurant C', 'Ethiopian', 5500.00), (4, 'Restaurant D', 'Ethiopian', 5000.00);","completion":"SELECT MIN(revenue) FROM Restaurants WHERE type = 'Ethiopian';"}
{"prompt":"What is the total revenue generated from ethical labor practices in South America? with given SQL schema CREATE TABLE Revenue (RID INT, Practice VARCHAR(20), Revenue FLOAT, Country VARCHAR(20)); INSERT INTO Revenue VALUES (1, 'Ethical Labor', 5000, 'South America'); INSERT INTO Revenue VALUES (2, 'Ethical Labor', 7000, 'South America');","completion":"SELECT SUM(Revenue) FROM Revenue WHERE Practice = 'Ethical Labor' AND Country = 'South America';"}
{"prompt":"What is the name of the spacecraft with the highest mass in GTO (Geostationary Transfer Orbit)? with given SQL schema CREATE TABLE space_craft (id INT, name VARCHAR(50), type VARCHAR(50), mass FLOAT, orbit VARCHAR(50)); INSERT INTO space_craft (id, name, type, mass, orbit) VALUES (1, 'Tianhe-1', 'Space Station Module', 22000, 'GTO'); INSERT INTO space_craft (id, name, type, mass, orbit) VALUES (2, 'Spaceway-1', 'Communications Satellite', 6000, 'GTO');","completion":"SELECT name FROM space_craft WHERE orbit = 'GTO' ORDER BY mass DESC LIMIT 1;"}
{"prompt":"What is the total mass of all space debris in orbit? with given SQL schema CREATE TABLE Space_Debris (ID INT, Object_Type VARCHAR(50), Mass FLOAT); INSERT INTO Space_Debris (ID, Object_Type, Mass) VALUES (1, 'Defunct Satellite', 1500.0), (2, 'Rocket Body', 2000.0), (3, 'Fuel Tank', 500.0), (4, 'Nuts and Bolts', 100.0), (5, 'Spent Rocket Stage', 3000.0);","completion":"SELECT SUM(Mass) FROM Space_Debris;"}
{"prompt":"What are the total ticket sales for each team's home games, excluding any complimentary tickets? with given SQL schema CREATE TABLE team_performance (team_id INT, home_game BOOLEAN, total_sales DECIMAL(10,2)); INSERT INTO team_performance (team_id, home_game, total_sales) VALUES (1, true, 5000.00), (1, false, 0.00), (2, true, 7000.00), (2, false, 3000.00);","completion":"SELECT team_id, SUM(total_sales) FROM team_performance WHERE home_game = true AND total_sales > 0 GROUP BY team_id;"}
{"prompt":"Find the number of sales for each salesperson, and the total revenue for each salesperson, ordered by the number of sales in descending order. with given SQL schema CREATE TABLE sales (sale_id INT, salesperson_id INT, revenue DECIMAL(10,2)); INSERT INTO sales VALUES (1, 1, 100.00), (2, 1, 200.00), (3, 2, 300.00), (4, 2, 400.00), (5, 3, 50.00), (6, 3, 100.00);","completion":"SELECT salesperson_id, COUNT(*) as num_sales, SUM(revenue) as total_revenue FROM sales GROUP BY salesperson_id ORDER BY num_sales DESC;"}
{"prompt":"Identify the top 3 countries with the highest average sustainability rating among suppliers. with given SQL schema CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), sustainability_rating DECIMAL(3,2)); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (1, 'Green Fabrics', 'Bangladesh', 4.50); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (2, 'Eco Yarns', 'Indonesia', 4.75); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (3, 'Sustainable Weaves', 'India', 4.25); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (4, 'Eco Fibres', 'Nepal', 4.85); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (5, 'Organic Textiles', 'Pakistan', 4.10);","completion":"SELECT country, AVG(sustainability_rating) as avg_sustainability_rating, RANK() OVER (ORDER BY AVG(sustainability_rating) DESC) as ranking FROM suppliers GROUP BY country HAVING COUNT(*) FILTER (WHERE sustainability_rating > 0) >= 3 ORDER BY avg_sustainability_rating DESC, country;"}
{"prompt":"Which policyholders in the Midwest have had claims worth more than $1000? with given SQL schema CREATE TABLE Policyholder (PolicyholderID INT, Name VARCHAR(50), Region VARCHAR(20)); CREATE TABLE Policy (PolicyID INT, PolicyholderID INT, PolicyType VARCHAR(20)); CREATE TABLE Claim (ClaimID INT, PolicyID INT, ClaimAmount INT); INSERT INTO Policyholder (PolicyholderID, Name, Region) VALUES (1, 'John Doe', 'Midwest'), (2, 'Jane Smith', 'Northeast'); INSERT INTO Policy (PolicyID, PolicyholderID, PolicyType) VALUES (1, 1, 'Auto'), (2, 1, 'Home'), (3, 2, 'Life'); INSERT INTO Claim (ClaimID, PolicyID, ClaimAmount) VALUES (1, 1, 500), (2, 2, 2000), (3, 3, 50000);","completion":"SELECT PolicyholderID, Name FROM (SELECT PolicyholderID, Name, PolicyType, ClaimAmount, ROW_NUMBER() OVER (PARTITION BY PolicyholderID ORDER BY ClaimAmount DESC) AS RankClaimAmount FROM Policyholder JOIN Policy ON Policyholder.PolicyholderID = Policy.PolicyholderID JOIN Claim ON Policy.PolicyID = Claim.PolicyID WHERE Region = 'Midwest') AS Subquery WHERE RankClaimAmount = 1 AND ClaimAmount > 1000;"}
{"prompt":"What is the average number of employees in unionized workplaces in the USA? with given SQL schema CREATE TABLE workplaces (id INT, country VARCHAR(50), num_employees INT, is_unionized BOOLEAN); INSERT INTO workplaces (id, country, num_employees, is_unionized) VALUES (1, 'Canada', 200, true), (2, 'USA', 300, true), (3, 'Mexico', 150, false);","completion":"SELECT AVG(num_employees) FROM workplaces WHERE country = 'USA' AND is_unionized = true;"}
{"prompt":"What is the average number of workers per industry? with given SQL schema CREATE TABLE if not exists industry (industry_id INT, industry_name TEXT, total_workers INT); INSERT INTO industry (industry_id, industry_name, total_workers) VALUES (1, 'manufacturing', 5000), (2, 'technology', 7000), (3, 'healthcare', 6000), (4, 'finance', 4000), (5, 'retail', 3000);","completion":"SELECT AVG(total_workers) FROM industry;"}
{"prompt":"Compute the average speed for 'VesselL' during its journeys with given SQL schema CREATE TABLE vessel_speed (vessel_name TEXT, journey_id INTEGER, speed INTEGER); INSERT INTO vessel_speed (vessel_name, journey_id, speed) VALUES ('VesselL', 4001, 25); INSERT INTO vessel_speed (vessel_name, journey_id, speed) VALUES ('VesselL', 4002, 28);","completion":"SELECT AVG(speed) FROM vessel_speed WHERE vessel_name = 'VesselL';"}
{"prompt":"List all visitors who have visited more than one exhibition with given SQL schema CREATE TABLE Visitor (id INT, name TEXT); CREATE TABLE Visitor_Exhibition (visitor_id INT, exhibition_id INT); INSERT INTO Visitor (id, name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie'); INSERT INTO Visitor_Exhibition (visitor_id, exhibition_id) VALUES (1, 1), (1, 2), (2, 1), (3, 1), (3, 2);","completion":"SELECT Visitor.name FROM Visitor JOIN Visitor_Exhibition ON Visitor.id = Visitor_Exhibition.visitor_id GROUP BY Visitor.name HAVING COUNT(DISTINCT Visitor_Exhibition.exhibition_id) > 1;"}
{"prompt":"Delete records of recycling rates for the year 2018 with given SQL schema CREATE TABLE recycling_rates (country VARCHAR(50), year INT, recycling_rate FLOAT); INSERT INTO recycling_rates (country, year, recycling_rate) VALUES ('India', 2018, 0.25), ('India', 2019, 0.30);","completion":"DELETE FROM recycling_rates WHERE year = 2018;"}
{"prompt":"What is the total volume of water saved by water conservation initiatives in San Diego in 2019? with given SQL schema CREATE TABLE WaterConservationInitiatives (id INT, city VARCHAR, year INT, savings INT); INSERT INTO WaterConservationInitiatives (id, city, year, savings) VALUES (1, 'San Diego', 2019, 1200000), (2, 'San Diego', 2018, 1150000), (3, 'San Francisco', 2019, 1300000);","completion":"SELECT SUM(savings) FROM WaterConservationInitiatives WHERE city = 'San Diego' AND year = 2019;"}
{"prompt":"Delete the workout row with the id of 2. with given SQL schema CREATE TABLE Workouts (id INT, user_id INT, workout_name TEXT, calories INT); INSERT INTO Workouts (id, user_id, workout_name, calories) VALUES (1, 1, 'Running', 300); INSERT INTO Workouts (id, user_id, workout_name, calories) VALUES (2, 1, 'Cycling', 400); INSERT INTO Workouts (id, user_id, workout_name, calories) VALUES (3, 2, 'Yoga', 200);","completion":"DELETE FROM Workouts WHERE id = 2;"}
{"prompt":"How many algorithmic fairness incidents were reported in Asia in the last quarter? with given SQL schema CREATE TABLE fairness_incidents (incident_id INT, incident_date DATE, region TEXT); INSERT INTO fairness_incidents (incident_id, incident_date, region) VALUES (1, '2022-04-15', 'Asia'), (2, '2022-05-11', 'Asia'), (3, '2022-06-01', 'Asia');","completion":"SELECT COUNT(*) FROM fairness_incidents WHERE region = 'Asia' AND incident_date >= '2022-04-01' AND incident_date < '2022-07-01';"}
{"prompt":"What is the average number of explainable AI models developed per month in Singapore in 2021? with given SQL schema CREATE TABLE explainable_ai (model_id INT, model_name TEXT, launch_date DATE, country TEXT); INSERT INTO explainable_ai (model_id, model_name, launch_date, country) VALUES (1, 'XAI_Healthcare', '2021-02-14', 'Singapore'), (2, 'TransparentML', '2021-06-22', 'Singapore'), (3, 'ClearAI', '2021-09-03', 'Singapore');","completion":"SELECT AVG(num_models) as avg_models_per_month FROM (SELECT COUNT(*) as num_models, EXTRACT(MONTH FROM launch_date) as month FROM explainable_ai WHERE country = 'Singapore' AND launch_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY month) as subquery;"}
{"prompt":"Count the number of accidents for each spacecraft. with given SQL schema CREATE TABLE Accidents (accident_id INT, spacecraft VARCHAR(50), accident_date DATE);","completion":"SELECT spacecraft, COUNT(*) FROM Accidents GROUP BY spacecraft;"}
{"prompt":"How many successful satellite deployments has SpaceX achieved in the last 5 years? with given SQL schema CREATE TABLE Satellite_Deployments (id INT, name VARCHAR(50), manufacturer VARCHAR(50), deployment_date DATE, success BOOLEAN); INSERT INTO Satellite_Deployments (id, name, manufacturer, deployment_date, success) VALUES (1, 'Starlink 1', 'SpaceX', '2018-05-23', true), (2, 'Starlink 2', 'SpaceX', '2019-11-11', true), (3, 'Starship', 'SpaceX', '2023-03-14', false);","completion":"SELECT COUNT(*) FROM Satellite_Deployments WHERE manufacturer = 'SpaceX' AND success = true AND YEAR(deployment_date) >= 2017;"}
{"prompt":"Count the number of community education programs for each country with given SQL schema CREATE TABLE community_education (id INT, country VARCHAR(50), program VARCHAR(50)); INSERT INTO community_education (id, country, program) VALUES (1, 'Brazil', 'Rainforest Awareness'), (2, 'Kenya', 'Wildlife Conservation'), (3, 'Canada', 'Polar Bear Protection'), (4, 'Brazil', 'Amazon Conservation');","completion":"SELECT country, COUNT(program) FROM community_education GROUP BY country;"}
{"prompt":"Create a view that lists fish species and their average biomass with given SQL schema CREATE TABLE fish_stock (fish_id INT PRIMARY KEY, species VARCHAR(50), location VARCHAR(50), biomass FLOAT); INSERT INTO fish_stock (fish_id, species, location, biomass) VALUES (1, 'Tuna', 'Pacific', 250.5), (2, 'Salmon', 'Atlantic', 180.3), (3, 'Cod', 'Baltic', 120.0);","completion":"CREATE VIEW fish_biomass AS SELECT species, AVG(biomass) as avg_biomass FROM fish_stock GROUP BY species;"}
{"prompt":"Calculate the average age of attendees who attended 'Dance' events. with given SQL schema CREATE TABLE attendee_demographics (attendee_id INT, attendee_name VARCHAR(50), attendee_age INT); INSERT INTO attendee_demographics (attendee_id, attendee_name, attendee_age) VALUES (1, 'Jane Smith', 25), (2, 'Michael Johnson', 17), (3, 'Sophia Rodriguez', 16), (4, 'David Kim', 22); CREATE TABLE event_attendance (attendee_id INT, event_name VARCHAR(50)); INSERT INTO event_attendance (attendee_id, event_name) VALUES (1, 'Art Exhibit'), (2, 'Art Workshop'), (3, 'Art Exhibit'), (4, 'Dance Performance'), (5, 'Dance Festival');","completion":"SELECT AVG(ad.attendee_age) FROM attendee_demographics ad JOIN event_attendance ea ON ad.attendee_id = ea.attendee_id WHERE ea.event_name LIKE '%Dance%';"}
{"prompt":"Delete a record from the \"genres\" table where the genre is from Russia with given SQL schema CREATE TABLE genres (id INT PRIMARY KEY, name VARCHAR(100), country VARCHAR(50));","completion":"DELETE FROM genres WHERE country = 'Russia';"}
{"prompt":"What is the total funding received by dance programs in California since 2017? with given SQL schema CREATE TABLE Funding (id INT, program VARCHAR(50), location VARCHAR(50), date DATE, amount DECIMAL(10,2)); INSERT INTO Funding (id, program, location, date, amount) VALUES (1, 'Dance', 'California', '2017-01-01', 5000);","completion":"SELECT SUM(amount) FROM Funding WHERE program = 'Dance' AND location = 'California' AND date >= '2017-01-01';"}
{"prompt":"What's the average production budget for action movies released between 2010 and 2020, and their respective release years? with given SQL schema CREATE TABLE movies (id INT, title VARCHAR(100), genre VARCHAR(20), release_year INT, production_budget INT); INSERT INTO movies (id, title, genre, release_year, production_budget) VALUES (1, 'MovieA', 'Action', 2015, 150000000); INSERT INTO movies (id, title, genre, release_year, production_budget) VALUES (2, 'MovieB', 'Action', 2018, 200000000);","completion":"SELECT release_year, AVG(production_budget) FROM movies WHERE genre = 'Action' AND release_year BETWEEN 2010 AND 2020 GROUP BY release_year;"}
{"prompt":"Rank projects by the number of labor hours in descending order in the Northeast. with given SQL schema CREATE TABLE project (project_id INT, region VARCHAR(20), labor_hours INT); INSERT INTO project VALUES (1, 'Northeast', 500); INSERT INTO project VALUES (2, 'Northeast', 700);","completion":"SELECT project_id, region, labor_hours, RANK() OVER (ORDER BY labor_hours DESC) as labor_rank FROM project WHERE region = 'Northeast';"}
{"prompt":"What is the average quantity of Sulfuric Acid disposed in July? with given SQL schema CREATE TABLE Waste_Disposal (id INT, chemical_name VARCHAR(255), disposal_date DATE, quantity INT); INSERT INTO Waste_Disposal (id, chemical_name, disposal_date, quantity) VALUES (1, 'Sulfuric Acid', '2022-07-15', 300);","completion":"SELECT AVG(quantity) FROM Waste_Disposal WHERE chemical_name = 'Sulfuric Acid' AND disposal_date BETWEEN '2022-07-01' AND '2022-07-31';"}
{"prompt":"What is the maximum safety score for chemical products manufactured in the Asian region? with given SQL schema CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName TEXT, Region TEXT); INSERT INTO Manufacturers (ManufacturerID, ManufacturerName, Region) VALUES (1, 'ABC Chemicals', 'Asia'), (2, 'XYZ Chemicals', 'North America'), (3, ' DEF Chemicals', 'Asia'); CREATE TABLE ChemicalProducts (ProductID INT, Chemical TEXT, ManufacturerID INT, SafetyScore DECIMAL(3,2)); INSERT INTO ChemicalProducts (ProductID, Chemical, ManufacturerID, SafetyScore) VALUES (1, 'Acetone', 1, 3.2), (2, 'Ethanol', 1, 4.5), (3, 'Methanol', 2, 5.0), (4, 'Propanol', 3, 4.8), (5, 'Butanol', 3, 5.0);","completion":"SELECT MAX(CP.SafetyScore) AS MaxScore FROM ChemicalProducts CP INNER JOIN Manufacturers M ON CP.ManufacturerID = M.ManufacturerID WHERE M.Region = 'Asia';"}
{"prompt":"What is the total number of climate finance projects in Asia? with given SQL schema CREATE TABLE climate_finance (id INT, project_name TEXT, location TEXT, sector TEXT); INSERT INTO climate_finance (id, project_name, location, sector) VALUES (1, 'Solar Farm', 'Asia', 'Renewable Energy'); INSERT INTO climate_finance (id, project_name, location, sector) VALUES (2, 'Wind Turbines', 'Europe', 'Renewable Energy');","completion":"SELECT COUNT(*) FROM climate_finance WHERE location = 'Asia';"}
{"prompt":"What is the total revenue for drugs approved between 2017 and 2019? with given SQL schema CREATE TABLE drug_sales_3 (drug_name TEXT, revenue FLOAT, year INT); INSERT INTO drug_sales_3 (drug_name, revenue, year) VALUES ('DrugG', 20000000, 2019), ('DrugG', 19000000, 2018), ('DrugH', 15000000, 2017), ('DrugH', 16000000, 2018);","completion":"SELECT drug_name, SUM(revenue) FROM drug_sales_3 WHERE year BETWEEN 2017 AND 2019 GROUP BY drug_name;"}
{"prompt":"How many community health centers are there in urban areas? with given SQL schema CREATE TABLE community_health_centers (id INT, name TEXT, location TEXT); INSERT INTO community_health_centers (id, name, location) VALUES (1, 'Center A', 'urban'), (2, 'Center B', 'rural');","completion":"SELECT COUNT(*) FROM community_health_centers WHERE location = 'urban';"}
{"prompt":"What is the average date of hire for employees in the 'GreenTech' industry? with given SQL schema CREATE TABLE Company (id INT, name TEXT, industry TEXT, location TEXT); INSERT INTO Company (id, name, industry, location) VALUES (1, 'EcoInnovations', 'GreenTech', 'Nigeria'), (2, 'BioSolutions', 'Biotech', 'Brazil'), (3, 'TechBoost', 'Tech', 'India'); CREATE TABLE Employee (id INT, company_id INT, name TEXT, role TEXT, gender TEXT, ethnicity TEXT, date_hired DATE); INSERT INTO Employee (id, company_id, name, role, gender, ethnicity, date_hired) VALUES (1, 1, 'Amina', 'Software Engineer', 'Female', 'Black', '2021-01-10'), (2, 1, 'Bruno', 'Data Scientist', 'Male', 'Latino', '2020-06-01'), (3, 2, 'Chen', 'Hardware Engineer', 'Non-binary', 'Asian', '2019-12-20'), (4, 3, 'Dana', 'Product Manager', 'Female', 'White', '2022-03-01');","completion":"SELECT AVG(Employee.date_hired) FROM Employee INNER JOIN Company ON Company.id = Employee.company_id WHERE Company.industry = 'GreenTech';"}
{"prompt":"Which countries have the most urban agriculture initiatives in the 'urban_agriculture' table? with given SQL schema CREATE TABLE urban_agriculture (id INT, country VARCHAR(255), initiatives INT); INSERT INTO urban_agriculture (id, country, initiatives) VALUES (1, 'Brazil', 500), (2, 'India', 750), (3, 'China', 800), (4, 'South Africa', 300);","completion":"SELECT country, initiatives FROM urban_agriculture ORDER BY initiatives DESC;"}
{"prompt":"What is the minimum budget spent on disability support programs for each type of accommodation? with given SQL schema CREATE TABLE AccommodationTypes (id INT, type TEXT, budget DECIMAL(10,2)); INSERT INTO AccommodationTypes (id, type, budget) VALUES (1, 'Ramp', 10000.00), (2, 'Elevator', 20000.00), (3, 'Handrail', 5000.00);","completion":"SELECT type, MIN(budget) FROM AccommodationTypes GROUP BY type;"}
{"prompt":"Find the number of conservation programs in the Pacific Ocean. with given SQL schema CREATE TABLE conservation_efforts (id INT PRIMARY KEY, species VARCHAR(255), country VARCHAR(255), program VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO conservation_efforts (id, species, country, program, start_date, end_date) VALUES (1, 'tuna', 'USA', 'Pacific_conservation', '2020-01-01', '2023-12-31');","completion":"SELECT COUNT(program) FROM conservation_efforts WHERE country = 'Pacific Ocean';"}
{"prompt":"Find the top 2 sustainable ingredients with the highest average rating, along with the total number of products that contain each ingredient. with given SQL schema CREATE TABLE ingredients (ingredient_id INT, ingredient_name VARCHAR(50), sustainability_rating INT, product_id INT); INSERT INTO ingredients (ingredient_id, ingredient_name, sustainability_rating, product_id) VALUES (1, 'Argan Oil', 5, 1001), (2, 'Shea Butter', 5, 1002), (3, 'Jojoba Oil', 4, 1003), (4, 'Coconut Oil', 5, 1004), (5, 'Aloe Vera', 4, 1005);","completion":"SELECT ingredient_name, AVG(sustainability_rating) as avg_rating, COUNT(product_id) as total_products FROM ingredients GROUP BY ingredient_name ORDER BY avg_rating DESC, total_products DESC LIMIT 2;"}
{"prompt":"What is the average carbon footprint of cosmetic products up to a given product_id? with given SQL schema CREATE TABLE sustainability_metrics (product_id INT, carbon_footprint FLOAT); INSERT INTO sustainability_metrics (product_id, carbon_footprint) VALUES (1, 5.0), (2, 7.5), (3, 3.0), (4, 6.0), (5, 4.5), (6, 8.0);","completion":"SELECT product_id, carbon_footprint, AVG(carbon_footprint) OVER (ORDER BY product_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as running_avg_cf FROM sustainability_metrics;"}
{"prompt":"List the total number of calls for each call type in the 'search_and_rescue' table. with given SQL schema CREATE TABLE search_and_rescue (id INT, call_type VARCHAR(20), call_date TIMESTAMP); INSERT INTO search_and_rescue VALUES (1, 'search', '2022-01-01 17:00:00'), (2, 'rescue', '2022-01-02 18:00:00');","completion":"SELECT call_type, COUNT(*) FROM search_and_rescue GROUP BY call_type;"}
{"prompt":"What are the different types of emergency calls and their average response times? with given SQL schema CREATE TABLE emergency_calls (call_id INT, call_date DATE, call_type VARCHAR(255), response_time INT); INSERT INTO emergency_calls (call_id, call_date, call_type, response_time) VALUES (1, '2021-01-01', 'Medical', 10), (2, '2021-02-03', 'Fire', 15);","completion":"SELECT call_type, AVG(response_time) FROM emergency_calls GROUP BY call_type;"}
{"prompt":"What is the total number of community policing initiatives in the country? with given SQL schema CREATE TABLE community_policing (id INT, country VARCHAR(20), initiative VARCHAR(50)); INSERT INTO community_policing (id, country, initiative) VALUES (1, 'USA', 'Neighborhood Watch'), (2, 'Canada', 'Coffee with a Cop'), (3, 'USA', 'Citizens Police Academy');","completion":"SELECT COUNT(*) FROM community_policing WHERE country = 'USA';"}
{"prompt":"What is the total number of emergency incidents in the city of Oakland? with given SQL schema CREATE TABLE emergency_incidents (id INT, city VARCHAR(20), type VARCHAR(20), date DATE); INSERT INTO emergency_incidents (id, city, type, date) VALUES (1, 'Oakland', 'Fire', '2021-01-01'); INSERT INTO emergency_incidents (id, city, type, date) VALUES (2, 'Oakland', 'Medical', '2021-01-02');","completion":"SELECT COUNT(*) FROM emergency_incidents WHERE city = 'Oakland';"}
{"prompt":"What is the maximum value of investments in the US stock market? with given SQL schema CREATE TABLE Investments (CustomerID INT, Market VARCHAR(20), Value DECIMAL(10,2)); INSERT INTO Investments (CustomerID, Market, Value) VALUES (1, 'US', 5000); INSERT INTO Investments (CustomerID, Market, Value) VALUES (2, 'US', 7000);","completion":"SELECT MAX(Value) FROM Investments WHERE Market = 'US'"}
{"prompt":"What is the minimum and maximum age of customers from Japan? with given SQL schema CREATE TABLE customers (id INT, name TEXT, age INT, country TEXT, assets FLOAT); INSERT INTO customers (id, name, age, country, assets) VALUES (1, 'John Doe', 45, 'USA', 250000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (2, 'Jane Smith', 34, 'Canada', 320000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (3, 'Alice Johnson', 29, 'UK', 450000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (4, 'Bob Brown', 51, 'UK', 150000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (5, 'Charlie Davis', 48, 'USA', 800000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (6, 'David Kim', 38, 'Singapore', 520000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (7, 'Hiroshi Tanaka', 35, 'Japan', 300000.00); INSERT INTO customers (id, name, age, country, assets) VALUES (8, 'Kim Lee', 42, 'Japan', 600000.00);","completion":"SELECT MIN(age), MAX(age) FROM customers WHERE country = 'Japan';"}
{"prompt":"List all the employees in the 'Quality Control' department with given SQL schema CREATE TABLE Employee (EmployeeID INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Position VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10, 2)); INSERT INTO Employee (EmployeeID, FirstName, LastName, Position, Department, Salary) VALUES (1, 'John', 'Doe', 'Quality Engineer', 'Quality Control', 50000.00), (2, 'Jane', 'Doe', 'Quality Technician', 'Quality Control', 40000.00);","completion":"SELECT * FROM Employee WHERE Department = 'Quality Control';"}
{"prompt":"What is the average age of patients who visited a hospital in rural areas of Louisiana in 2021? with given SQL schema CREATE TABLE hospital_visits (visit_id INT, patient_id INT, visit_date DATE, location VARCHAR(20)); INSERT INTO hospital_visits (visit_id, patient_id, visit_date, location) VALUES (1, 45, '2021-01-01', 'Rural Louisiana');","completion":"SELECT AVG(age) FROM (SELECT patient_id, age FROM patients JOIN hospital_visits ON patients.patient_id = hospital_visits.patient_id WHERE hospital_visits.location = 'Rural Louisiana' AND EXTRACT(YEAR FROM hospital_visits.visit_date) = 2021) AS subquery;"}
{"prompt":"Calculate the moving average of cybersecurity incidents for the last 3 quarters, per region. with given SQL schema CREATE TABLE incident_data (region_id INT, incident_quarter INT, incident_count INT); INSERT INTO incident_data (region_id, incident_quarter, incident_count) VALUES (1, 1, 50), (1, 2, 75), (1, 3, 60), (1, 4, 80), (2, 1, 30), (2, 2, 40), (2, 3, 60), (2, 4, 70);","completion":"SELECT region_id, incident_quarter, AVG(incident_count) OVER (PARTITION BY region_id ORDER BY incident_quarter ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as moving_avg FROM incident_data;"}
{"prompt":"List all national security advisors in the advisors table who have a security clearance level of \"Top Secret\". with given SQL schema CREATE TABLE advisors (name TEXT, agency TEXT, clearance TEXT); INSERT INTO advisors (name, agency, clearance) VALUES ('John Smith', 'CIA', 'Top Secret'), ('Jane Doe', 'FBI', 'Secret'), ('Jim Brown', 'NSA', 'Top Secret');","completion":"SELECT name FROM advisors WHERE clearance = 'Top Secret';"}
{"prompt":"What are the names of military aircrafts manufactured in the USA after 2000? with given SQL schema CREATE TABLE MilitaryAircrafts (ID INT, Name TEXT, ManufacturingDate DATE, Country TEXT); INSERT INTO MilitaryAircrafts (ID, Name, ManufacturingDate, Country) VALUES (1, 'F-35 Lightning II', '2006-01-01', 'USA'), (2, 'F-22 Raptor', '2005-01-01', 'USA');","completion":"SELECT Name FROM MilitaryAircrafts WHERE ManufacturingDate >= '2000-01-01' AND Country = 'USA';"}
{"prompt":"What is the total budget spent on each program category in H1 2022? with given SQL schema CREATE TABLE Programs (ProgramID int, ProgramName varchar(50), ProgramCategory varchar(50), Budget decimal(10,2), Spent decimal(10,2));","completion":"SELECT ProgramCategory, SUM(Spent) as TotalSpent FROM Programs WHERE YEAR(ProgramStartDate) = 2022 AND QUARTER(ProgramStartDate) <= 2 GROUP BY ProgramCategory;"}
{"prompt":"What is the number of teachers who have completed professional development courses in the past year, broken down by their teaching subject? with given SQL schema CREATE TABLE teachers (teacher_id INT, subject VARCHAR(255), professional_development_course_completion_date DATE); INSERT INTO teachers (teacher_id, subject, professional_development_course_completion_date) VALUES (1, 'Mathematics', '2022-01-01'), (2, 'Science', '2021-12-15'), (3, 'English', '2022-03-05');","completion":"SELECT subject, COUNT(*) as number_of_teachers FROM teachers WHERE professional_development_course_completion_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY subject;"}
{"prompt":"How many employees have been hired in the HR department in the last 6 months? with given SQL schema CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), HireDate DATE); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, HireDate) VALUES (1, 'John', 'Doe', 'HR', '2021-06-15'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, HireDate) VALUES (2, 'Jane', 'Smith', 'IT', '2021-01-05'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, HireDate) VALUES (3, 'Mike', 'Johnson', 'HR', '2020-12-10'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, HireDate) VALUES (4, 'Alice', 'Williams', 'HR', '2022-02-20');","completion":"SELECT COUNT(*) FROM Employees WHERE Department = 'HR' AND HireDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What is the average energy efficiency rating for residential buildings in India? with given SQL schema CREATE TABLE energy_efficiency (id INT PRIMARY KEY, building_type VARCHAR(50), efficiency_rating FLOAT, country VARCHAR(50)); INSERT INTO energy_efficiency (id, building_type, efficiency_rating, country) VALUES (1, 'Residential', 70.0, 'India'), (2, 'Commercial', 75.0, 'India');","completion":"SELECT AVG(efficiency_rating) FROM energy_efficiency WHERE building_type = 'Residential' AND country = 'India';"}
{"prompt":"What is the average age of female athletes in the 'basketball_players' table? with given SQL schema CREATE TABLE basketball_players (id INT, name VARCHAR(50), position VARCHAR(50), age INT, team VARCHAR(50)); INSERT INTO basketball_players (id, name, position, age, team) VALUES (1, 'Alice Johnson', 'Guard', 25, 'Lakers'); INSERT INTO basketball_players (id, name, position, age, team) VALUES (2, 'Bella Smith', 'Forward', 28, 'Celtics');","completion":"SELECT AVG(age) FROM basketball_players WHERE gender = 'female';"}
{"prompt":"Delete the shelter with ID '2' from the 'shelters' table with given SQL schema CREATE TABLE shelters (shelter_id INT, shelter_name VARCHAR(30), region_id INT); INSERT INTO shelters (shelter_id, shelter_name, region_id) VALUES (1, 'Emergency Shelter 1', 3), (2, 'Temporary Home', 3), (3, 'Relief House', 1), (4, 'New Shelter Name', 4);","completion":"DELETE FROM shelters WHERE shelter_id = 2;"}
{"prompt":"What is the total amount donated to each disaster type in the last 3 months? with given SQL schema CREATE TABLE donations (id INT PRIMARY KEY, donor_name VARCHAR(50), disaster_type VARCHAR(50), donation_date DATE, donation_amount DECIMAL(10,2)); INSERT INTO donations (id, donor_name, disaster_type, donation_date, donation_amount) VALUES (1, 'John Doe', 'Earthquake', '2022-01-01', 100.00), (2, 'Jane Smith', 'Flood', '2022-02-01', 200.00), (3, 'Mike Johnson', 'Tornado', '2021-12-31', 50.00);","completion":"SELECT disaster_type, SUM(donation_amount) as total_donations FROM donations WHERE donation_date >= DATE_SUB(NOW(), INTERVAL 3 MONTH) GROUP BY disaster_type;"}
{"prompt":"What is the average fare for each train route? with given SQL schema CREATE TABLE train_routes (route_id INT, route_name TEXT, starting_point TEXT, ending_point TEXT); CREATE TABLE train_fares (fare_id INT, route_id INT, fare_amount DECIMAL);","completion":"SELECT tr.route_name, AVG(tf.fare_amount) as avg_fare FROM train_routes tr INNER JOIN train_fares tf ON tr.route_id = tf.route_id GROUP BY tr.route_name;"}
{"prompt":"How many posts were shared on Twitter in June 2021 by users in the 'brand' category? with given SQL schema CREATE TABLE posts (post_id INT, user_id INT, platform VARCHAR(255), post_date DATE); INSERT INTO posts (post_id, user_id, platform, post_date) VALUES (1, 1, 'Twitter', '2021-06-01'), (2, 2, 'Instagram', '2021-06-03'), (3, 3, 'Twitter', '2021-06-05');","completion":"SELECT COUNT(*) FROM posts WHERE platform = 'Twitter' AND MONTH(post_date) = 6 AND YEAR(post_date) = 2021 AND user_id IN (SELECT user_id FROM users WHERE category = 'brand');"}
{"prompt":"What is the average number of likes received by posts in the last month, for users who have posted more than once in that timeframe? with given SQL schema CREATE TABLE posts (id INT, user_id INT, timestamp DATETIME, likes INT); INSERT INTO posts (id, user_id, timestamp, likes) VALUES (1, 1, '2022-01-01 10:00:00', 10), (2, 1, '2022-01-02 11:00:00', 5), (3, 2, '2022-01-03 12:00:00', 15);","completion":"SELECT AVG(posts.likes) as avg_likes FROM posts WHERE posts.user_id IN (SELECT user_id FROM posts GROUP BY user_id HAVING COUNT(*) > 1) AND posts.timestamp >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"}
{"prompt":"What is the most common hashtag used in posts made by users from Brazil? with given SQL schema CREATE TABLE posts (id INT, user_id INT, content TEXT, hashtags TEXT, post_date DATE); INSERT INTO posts (id, user_id, content, hashtags, post_date) VALUES (1, 1, 'Hello World', '#datascience', '2022-06-01'), (2, 1, 'I love data', '#ai', '2022-06-02'), (3, 2, 'Ol\u00e1 Mundo', '#brasil', '2022-06-03'); CREATE TABLE users (id INT, name VARCHAR(100), country VARCHAR(50)); INSERT INTO users (id, name, country) VALUES (1, 'Jo\u00e3o Silva', 'Brazil'), (2, 'Maria Souza', 'Brazil');","completion":"SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(hashtags, ' ', n.n), ' ', -1) hashtag, COUNT(*) count FROM posts JOIN users ON posts.user_id = users.id CROSS JOIN (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) n WHERE users.country = 'Brazil' GROUP BY hashtag ORDER BY count DESC LIMIT 1;"}
{"prompt":"How many financial capability training sessions were conducted in Germany in Q1 of 2022? with given SQL schema CREATE TABLE financial_capability_training (id INT, quarter INT, year INT, country VARCHAR(255), sessions INT);  INSERT INTO financial_capability_training (id, quarter, year, country, sessions) VALUES (1, 1, 2022, 'Germany', 25), (2, 1, 2022, 'Germany', 30);","completion":"SELECT COUNT(*) FROM financial_capability_training WHERE quarter = 1 AND year = 2022 AND country = 'Germany';"}
{"prompt":"Update the calorie count of the dish 'P\u00e3o de Queijo' in Brazil to 350. with given SQL schema CREATE TABLE dishes (id INT, name TEXT, cuisine TEXT, calorie_count INT, country TEXT); INSERT INTO dishes (id, name, cuisine, calorie_count, country) VALUES (1, 'P\u00e3o de Queijo', 'Brazilian', 300, 'Brazil'); INSERT INTO dishes (id, name, cuisine, calorie_count, country) VALUES (2, 'Feijoada', 'Brazilian', 800, 'Brazil');","completion":"UPDATE dishes SET calorie_count = 350 WHERE name = 'P\u00e3o de Queijo' AND country = 'Brazil';"}
{"prompt":"Calculate the average expression level of the top 5 genes in the cardiovascular system. with given SQL schema CREATE SCHEMA if not exists genetic;CREATE TABLE if not exists genetic.gene_expression (id INT, gene_id INT, gene_name TEXT, tissue TEXT, expression DECIMAL(5,2));INSERT INTO genetic.gene_expression (id, gene_id, gene_name, tissue, expression) VALUES (1, 1, 'Gene1', 'Cardiovascular', 9.87), (2, 2, 'Gene2', 'Nervous', 7.34), (3, 3, 'Gene3', 'Cardiovascular', 10.12), (4, 4, 'GeneX', 'Nervous', 6.55), (5, 5, 'GeneX', 'Cardiovascular', 8.21);","completion":"SELECT AVG(expression) FROM (SELECT expression FROM genetic.gene_expression WHERE tissue = 'Cardiovascular' ORDER BY expression DESC LIMIT 5);"}
{"prompt":"What is the average energy output for wind projects? with given SQL schema CREATE TABLE renewable_energy (id INT, project_id INT, energy_type VARCHAR(50), energy_output FLOAT); INSERT INTO renewable_energy (id, project_id, energy_type, energy_output) VALUES (2, 2, 'Wind', 1500000);","completion":"SELECT energy_type, AVG(energy_output) as avg_energy_output FROM renewable_energy WHERE energy_type = 'Wind' GROUP BY energy_type;"}
{"prompt":"Calculate the percentage of health equity metrics met by each community health worker in the West region for 2020 and 2021. with given SQL schema CREATE TABLE health_equity_metrics_worker (id INT, worker_id INT, region VARCHAR(50), year INT, metric1 BOOLEAN, metric2 BOOLEAN, metric3 BOOLEAN); INSERT INTO health_equity_metrics_worker (id, worker_id, region, year, metric1, metric2, metric3) VALUES (1, 1, 'West', 2020, true, true, false), (2, 2, 'West', 2020, true, false, true), (3, 3, 'West', 2020, false, true, true), (4, 1, 'West', 2021, true, true, true), (5, 2, 'West', 2021, true, true, false), (6, 3, 'West', 2021, true, false, true);","completion":"SELECT worker_id, (SUM(CASE WHEN metric1 THEN 1 ELSE 0 END) + SUM(CASE WHEN metric2 THEN 1 ELSE 0 END) + SUM(CASE WHEN metric3 THEN 1 ELSE 0 END)) * 100.0 \/ 3 as percentage_met FROM health_equity_metrics_worker WHERE region = 'West' AND year IN (2020, 2021) GROUP BY worker_id;"}
{"prompt":"What is the average virtual tour rating for Southeast Asia in Q2 2022? with given SQL schema CREATE TABLE virtual_tours (country VARCHAR(255), quarter VARCHAR(10), rating FLOAT); INSERT INTO virtual_tours (country, quarter, rating) VALUES ('Indonesia', 'Q2', 4.5), ('Malaysia', 'Q2', 4.6), ('Thailand', 'Q2', 4.7);","completion":"SELECT AVG(rating) FROM virtual_tours WHERE country IN ('Indonesia', 'Malaysia', 'Thailand') AND quarter = 'Q2';"}
{"prompt":"What is the maximum revenue generated by a single sustainable tour in Japan? with given SQL schema CREATE TABLE sustainable_tours (id INT, country VARCHAR(20), revenue FLOAT); INSERT INTO sustainable_tours (id, country, revenue) VALUES (1, 'Japan', 2000.0), (2, 'Japan', 2500.0), (3, 'Japan', 3000.0);","completion":"SELECT MAX(revenue) FROM sustainable_tours WHERE country = 'Japan';"}
{"prompt":"Find the number of modern art exhibitions held in France and Spain. with given SQL schema CREATE TABLE Exhibitions (id INT, title VARCHAR(50), location VARCHAR(50), movement VARCHAR(20));","completion":"SELECT COUNT(*) FROM Exhibitions WHERE (location = 'France' OR location = 'Spain') AND movement = 'Modern Art';"}
{"prompt":"Delete the language preservation record for 'Vanuatu', 'Bislama', 'Vulnerable'. with given SQL schema CREATE TABLE LanguagePreservation (id INT, country VARCHAR(50), language VARCHAR(50), status VARCHAR(50)); INSERT INTO LanguagePreservation (id, country, language, status) VALUES (1, 'Vanuatu', 'Bislama', 'Vulnerable'), (2, 'Papua New Guinea', 'Tok Pisin', 'Endangered');","completion":"DELETE FROM LanguagePreservation WHERE id = 1;"}
{"prompt":"What is the percentage of endangered languages in each continent, and the name of the most widely spoken endangered language in each continent? with given SQL schema CREATE TABLE Endangered_Languages_Continent (Language_Name VARCHAR(50), Continent VARCHAR(50), Number_Speakers INT); INSERT INTO Endangered_Languages_Continent (Language_Name, Continent, Number_Speakers) VALUES ('Quechua', 'South America', 8000000), ('Mapudungun', 'South America', 200000);","completion":"SELECT Continent, AVG(Number_Speakers) AS Avg_Speakers, MIN(Language_Name) AS Most_Spoken FROM Endangered_Languages_Continent WHERE Continent IN ('South America') GROUP BY Continent;"}
{"prompt":"How many defendants were represented by public defenders in New York City in 2020? with given SQL schema CREATE TABLE court_cases (case_id INT, defendant_id INT, defender_type VARCHAR(10), court_date DATE); INSERT INTO court_cases (case_id, defendant_id, defender_type, court_date) VALUES (1, 1001, 'Public Defender', '2020-02-01'), (2, 1002, 'Private Attorney', '2019-03-15');","completion":"SELECT COUNT(*) FROM court_cases WHERE defender_type = 'Public Defender' AND YEAR(court_date) = 2020 AND city(court_date) = 'New York';"}
{"prompt":"What is the number of legal aid clinics in each province or territory in Canada, and how many clients do they serve on average? with given SQL schema CREATE TABLE canada_legal_aid(id INT, province_territory VARCHAR(255), clients_served INT);","completion":"SELECT province_territory, AVG(clients_served) AS average_clients_served FROM canada_legal_aid GROUP BY province_territory;"}
{"prompt":"Delete records with sales amount over $50,000 in the MilitaryEquipmentSales table with given SQL schema CREATE TABLE MilitaryEquipmentSales (id INT, equipment_name VARCHAR(50), sale_amount INT, sale_date DATE); INSERT INTO MilitaryEquipmentSales (id, equipment_name, sale_amount, sale_date) VALUES (1, 'Fighter Jet', 45000, '2021-01-01'), (2, 'Tank', 75000, '2021-02-01');","completion":"DELETE FROM MilitaryEquipmentSales WHERE sale_amount > 50000;"}
{"prompt":"What is the total production of iron mines in Russia? with given SQL schema CREATE TABLE mine (id INT, name TEXT, location TEXT, mineral TEXT, production INT); INSERT INTO mine (id, name, location, mineral, production) VALUES (1, 'Mikhailovsky GOK', 'Russia', 'Iron', 12000), (2, 'Lebedinsky GOK', 'Russia', 'Iron', 15000);","completion":"SELECT SUM(production) FROM mine WHERE mineral = 'Iron' AND location = 'Russia';"}
{"prompt":"Which mining operations have a higher than average monthly CO2 emission? with given SQL schema CREATE TABLE co2_emissions (mine_id INT, emission_date DATE, co2_amount INT); INSERT INTO co2_emissions (mine_id, emission_date, co2_amount) VALUES (1, '2021-01-01', 30000), (1, '2021-02-01', 32000), (1, '2021-03-01', 35000), (2, '2021-01-01', 28000), (2, '2021-02-01', 30000), (2, '2021-03-01', 33000), (3, '2021-01-01', 25000), (3, '2021-02-01', 27000), (3, '2021-03-01', 29000); CREATE TABLE mine_info (mine_id INT, mine_name TEXT); INSERT INTO mine_info (mine_id, mine_name) VALUES (1, 'Golden Mine'), (2, 'Silver Mine'), (3, 'Bronze Mine');","completion":"SELECT mine_name, AVG(co2_amount) AS avg_monthly_emission FROM co2_emissions JOIN mine_info ON co2_emissions.mine_id = mine_info.mine_id GROUP BY mine_id HAVING AVG(co2_amount) > (SELECT AVG(co2_amount) FROM co2_emissions);"}
{"prompt":"Find the number of unique authors who have contributed to each news source in the western region. with given SQL schema CREATE SCHEMA news;CREATE TABLE NewsSource (name varchar(255), author varchar(255));CREATE TABLE Region (name varchar(255), location varchar(10));INSERT INTO NewsSource (name, author) VALUES ('NewsSource1', 'Author1'), ('NewsSource1', 'Author2'), ('NewsSource2', 'Author3'), ('NewsSource2', 'Author4'), ('NewsSource3', 'Author5');INSERT INTO Region (name, location) VALUES ('NewsSource1', 'western'), ('NewsSource2', 'western'), ('NewsSource3', 'eastern');","completion":"SELECT NewsSource.name, COUNT(DISTINCT NewsSource.author) AS unique_authors FROM news.NewsSource INNER JOIN news.Region ON NewsSource.name = Region.name WHERE Region.location = 'western' GROUP BY NewsSource.name"}
{"prompt":"How many deep-sea expeditions have been conducted in the Pacific Ocean? with given SQL schema CREATE TABLE deep_sea_expeditions (expedition_id INT, location VARCHAR(255), year INT);","completion":"SELECT COUNT(*) FROM deep_sea_expeditions WHERE location = 'Pacific Ocean';"}
{"prompt":"List all marine species found in the Arctic Ocean. with given SQL schema CREATE TABLE marine_species (species_name TEXT, ocean_location TEXT); INSERT INTO marine_species (species_name, ocean_location) VALUES ('Narwhal', 'Arctic Ocean'), ('Polar Bear', 'Arctic Ocean'), ('Beluga Whale', 'Arctic Ocean');","completion":"SELECT species_name FROM marine_species WHERE ocean_location = 'Arctic Ocean';"}
{"prompt":"Retrieve the number of marine species by type in the 'marine_species' table. with given SQL schema CREATE TABLE marine_species (species_id INT, name VARCHAR(255), type VARCHAR(255), conservation_status VARCHAR(255));","completion":"SELECT type, COUNT(*) FROM marine_species GROUP BY type;"}
{"prompt":"List the top 3 most humid cities in the past week? with given SQL schema CREATE TABLE Weather (location VARCHAR(50), temperature INT, humidity INT, timestamp TIMESTAMP);","completion":"SELECT location, AVG(humidity) as avg_humidity FROM Weather WHERE timestamp > NOW() - INTERVAL '1 week' GROUP BY location ORDER BY avg_humidity DESC LIMIT 3;"}
{"prompt":"What is the total precipitation in 'Field E' for the month of January 2022? with given SQL schema CREATE TABLE sensors (sensor_id INT, location VARCHAR(50)); INSERT INTO sensors (sensor_id, location) VALUES (005, 'Field E'); CREATE TABLE precipitation (sensor_id INT, precipitation FLOAT, timestamp TIMESTAMP); INSERT INTO precipitation (sensor_id, precipitation, timestamp) VALUES (005, 12.3, '2022-01-01 10:00:00'); INSERT INTO precipitation (sensor_id, precipitation, timestamp) VALUES (005, 15.6, '2022-01-02 11:00:00');","completion":"SELECT SUM(precipitation) FROM precipitation WHERE sensor_id = 005 AND timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';"}
{"prompt":"What is the difference in property size between the largest and smallest properties in Sydney? with given SQL schema CREATE TABLE properties (id INT, size FLOAT, city VARCHAR(20)); INSERT INTO properties (id, size, city) VALUES (1, 1500, 'Sydney'), (2, 2000, 'Sydney'), (3, 1000, 'Sydney');","completion":"SELECT MAX(size) - MIN(size) FROM properties WHERE city = 'Sydney';"}
{"prompt":"Determine the number of clean energy policies implemented in each country in the clean_energy_policies table. with given SQL schema CREATE TABLE clean_energy_policies (country VARCHAR(50), policy VARCHAR(50), year INT, policy_status VARCHAR(50));","completion":"SELECT country, COUNT(*) as num_policies FROM clean_energy_policies WHERE policy_status = 'Implemented' GROUP BY country;"}
{"prompt":"Identify the top 3 product categories with the highest sales revenue in the European market. with given SQL schema CREATE TABLE products (product_id INT, product_category VARCHAR(50), sales_price DECIMAL(5,2)); INSERT INTO products (product_id, product_category, sales_price) VALUES (1, 'T-Shirts', 20.99), (2, 'Pants', 25.49), (3, 'Jackets', 35.99); CREATE TABLE sales (sale_id INT, product_id INT, sale_region VARCHAR(50), sale_amount INT); INSERT INTO sales (sale_id, product_id, sale_region, sale_amount) VALUES (1, 1, 'UK', 100), (2, 2, 'France', 75), (3, 3, 'Germany', 50);","completion":"SELECT product_category, SUM(sale_amount * sales_price) AS total_revenue FROM products p JOIN sales s ON p.product_id = s.product_id WHERE sale_region IN ('UK', 'France', 'Germany') GROUP BY product_category ORDER BY total_revenue DESC LIMIT 3;"}
{"prompt":"Create a table named 'planets' with given SQL schema CREATE TABLE planets (id INT PRIMARY KEY, name VARCHAR(50), distance_to_sun FLOAT);","completion":"CREATE TABLE planets (id INT PRIMARY KEY, name VARCHAR(50), distance_to_sun FLOAT);"}
{"prompt":"What is the total cost of spacecraft manufactured by Cosmic Corp. and Starlight Inc. in 2023? with given SQL schema CREATE TABLE SpacecraftManuf (company VARCHAR(20), year INT, cost INT); INSERT INTO SpacecraftManuf (company, year, cost) VALUES ('Cosmic Corp.', 2023, 40000000); INSERT INTO SpacecraftManuf (company, year, cost) VALUES ('Starlight Inc.', 2023, 50000000);","completion":"SELECT SUM(cost) FROM SpacecraftManuf WHERE company IN ('Cosmic Corp.', 'Starlight Inc.') AND year = 2023;"}
{"prompt":"Insert new ticket sales records from the 'new_ticket_sales' staging table into the 'ticket_sales' table with given SQL schema CREATE TABLE new_ticket_sales (sale_id INT, ticket_price DECIMAL(5,2), sale_date DATE, team_id INT); CREATE TABLE ticket_sales (sale_id INT PRIMARY KEY, ticket_price DECIMAL(5,2), sale_date DATE, team_id INT);","completion":"INSERT INTO ticket_sales (sale_id, ticket_price, sale_date, team_id) SELECT sale_id, ticket_price, sale_date, team_id FROM new_ticket_sales;"}
{"prompt":"What is the minimum number of security incidents reported in a single day in the past year? with given SQL schema CREATE TABLE security_incidents (id INT, sector VARCHAR(255), date DATE);","completion":"SELECT MIN(number_of_incidents_per_day) FROM (SELECT DATE(date) as date, COUNT(*) as number_of_incidents_per_day FROM security_incidents WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY date) as subquery;"}
{"prompt":"What is the total number of shared bikes in New York? with given SQL schema CREATE TABLE if not exists bike_share (id INT, city VARCHAR(20), bike_type VARCHAR(20), quantity INT);INSERT INTO bike_share (id, city, bike_type, quantity) VALUES (1, 'New York', 'electric_bike', 400), (2, 'New York', 'classic_bike', 500), (3, 'Los Angeles', 'electric_bike', 350), (4, 'Los Angeles', 'classic_bike', 450);","completion":"SELECT SUM(quantity) FROM bike_share WHERE city = 'New York';"}
{"prompt":"What was the total number of multimodal trips taken in New York City in January 2022? with given SQL schema CREATE TABLE Multimodal_Trips (city VARCHAR(20), month INT, year INT, num_trips INT); INSERT INTO Multimodal_Trips (city, month, year, num_trips) VALUES ('New York City', 1, 2022, 120000), ('New York City', 2, 2022, 140000), ('Los Angeles', 1, 2022, 90000), ('Los Angeles', 2, 2022, 110000);","completion":"SELECT SUM(num_trips) FROM Multimodal_Trips WHERE city = 'New York City' AND month = 1 AND year = 2022;"}
{"prompt":"Determine the number of new garments introduced each month in 2021. with given SQL schema CREATE TABLE garment_inventory (inventory_id INT, garment_id INT, garment_name VARCHAR(255), inventory_date DATE);","completion":"SELECT EXTRACT(MONTH FROM inventory_date) as month, COUNT(DISTINCT garment_id) FROM garment_inventory WHERE inventory_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY month;"}
{"prompt":"Update the policy type to 'Renters' for policy ID 1 with given SQL schema CREATE TABLE policy (policy_id INT, policy_type VARCHAR(20), effective_date DATE); INSERT INTO policy VALUES (1, 'Personal Auto', '2018-01-01');","completion":"UPDATE policy SET policy_type = 'Renters' WHERE policy_id = 1;"}
{"prompt":"What is the average age of policyholders who live in 'CA' and have a home insurance policy? with given SQL schema CREATE TABLE policyholders (id INT, age INT, state VARCHAR(2), policy_type VARCHAR(10)); INSERT INTO policyholders (id, age, state, policy_type) VALUES (1, 35, 'NY', 'car'), (2, 45, 'CA', 'home'), (3, 28, 'NY', 'car'), (4, 55, 'CA', 'home');","completion":"SELECT AVG(age) FROM policyholders WHERE state = 'CA' AND policy_type = 'home';"}
{"prompt":"What is the total number of workplaces by industry with safety inspections in California in 2022? with given SQL schema CREATE TABLE workplaces (id INT, industry VARCHAR, state VARCHAR, num_inspections INT, inspection_date DATE); INSERT INTO workplaces (id, industry, state, num_inspections, inspection_date) VALUES (1, 'Manufacturing', 'California', 3, '2022-01-01');","completion":"SELECT industry, SUM(num_inspections) as total_inspections FROM workplaces WHERE state = 'California' AND inspection_date >= '2022-01-01' GROUP BY industry;"}
{"prompt":"Count the number of autonomous vehicle accidents in 2022 with given SQL schema CREATE TABLE autonomous_vehicles (vehicle_id INT, accident_year INT, accident_type VARCHAR(20)); INSERT INTO autonomous_vehicles VALUES (1, 2021, 'Minor'), (2, 2022, 'Major'), (3, 2022, 'Minor'), (4, 2021, 'Major'), (5, 2022, 'Major');","completion":"SELECT COUNT(*) FROM autonomous_vehicles WHERE accident_year = 2022 AND accident_type IS NOT NULL;"}
{"prompt":"What is the average horsepower of electric vehicles in the 'Luxury' category sold between 2018 and 2020? with given SQL schema CREATE TABLE EVSales (id INT, name VARCHAR(50), horsepower INT, category VARCHAR(50), sale_year INT); INSERT INTO EVSales (id, name, horsepower, category, sale_year) VALUES (1, 'Tesla Model S', 503, 'Luxury', 2018), (2, 'Audi e-Tron', 408, 'Luxury', 2019), (3, 'Porsche Taycan', 562, 'Luxury', 2020);","completion":"SELECT AVG(horsepower) FROM EVSales WHERE category = 'Luxury' AND sale_year BETWEEN 2018 AND 2020;"}
{"prompt":"What are the top 3 ports where vessels have had the most safety incidents in the past year? with given SQL schema CREATE TABLE Safety_Records(Vessel_ID INT, Incident_Date DATE, Incident_Port VARCHAR(50)); INSERT INTO Safety_Records VALUES (1, '2022-03-12', 'Port of Oakland'), (2, '2022-03-15', 'Port of Los Angeles'), (3, '2022-03-20', 'Port of Oakland'), (1, '2022-03-25', 'Port of Miami');","completion":"SELECT Incident_Port, COUNT(*) as Num_Incidents FROM Safety_Records WHERE Incident_Date >= DATEADD(YEAR, -1, GETDATE()) GROUP BY Incident_Port ORDER BY Num_Incidents DESC LIMIT 3;"}
{"prompt":"What was the total revenue generated from adult ticket sales for the Modern Art exhibition? with given SQL schema CREATE TABLE exhibitions (name VARCHAR(50), tickets_sold INT, price DECIMAL(5,2)); INSERT INTO exhibitions (name, tickets_sold, price) VALUES ('Modern Art', 300, 20.00), ('Classic Art', 250, 15.00);","completion":"SELECT SUM(price * tickets_sold) FROM exhibitions WHERE name = 'Modern Art' AND tickets_sold = (SELECT SUM(tickets_sold) FROM tickets WHERE age_group = 'Adult');"}
{"prompt":"Calculate the average recycling rate with given SQL schema CREATE TABLE recycling_rates (id INT PRIMARY KEY, location VARCHAR(50), rate FLOAT);","completion":"SELECT AVG(rate) FROM recycling_rates;"}
{"prompt":"Insert new records into the 'recycling_rates' table for 'Berlin', 'Germany' with given SQL schema CREATE TABLE recycling_rates (id INT, city VARCHAR(255), state VARCHAR(255), country VARCHAR(255), rate DECIMAL(5,2));","completion":"INSERT INTO recycling_rates (city, state, country, rate) VALUES ('Berlin', NULL, 'Germany', 0.65);"}
{"prompt":"Determine the maximum water usage in a single day from 'DailyWaterUsage' table with given SQL schema CREATE TABLE DailyWaterUsage (day DATE, usage INT);","completion":"SELECT MAX(usage) FROM DailyWaterUsage;"}
{"prompt":"List all the drought-impacted counties in Texas in 2018. with given SQL schema CREATE TABLE drought_impact(county VARCHAR(20), state VARCHAR(20), year INT, impacted BOOLEAN); INSERT INTO drought_impact(county, state, year, impacted) VALUES ('Harris', 'Texas', 2015, true), ('Harris', 'Texas', 2016, true), ('Harris', 'Texas', 2017, true), ('Harris', 'Texas', 2018, true), ('Bexar', 'Texas', 2015, false), ('Bexar', 'Texas', 2016, false), ('Bexar', 'Texas', 2017, false), ('Bexar', 'Texas', 2018, false);","completion":"SELECT county FROM drought_impact WHERE state = 'Texas' AND year = 2018 AND impacted = true;"}
{"prompt":"Insert a new record into the models table for a new AI model, \"ModelF\", a Generative model developed in France with a safety score of 89.00 and explainability score of 84.00. with given SQL schema CREATE TABLE models (model_id INT, model_name VARCHAR(50), model_type VARCHAR(50), country VARCHAR(50), safety_score DECIMAL(5,2), explainability_score DECIMAL(5,2));","completion":"INSERT INTO models (model_name, model_type, country, safety_score, explainability_score) VALUES ('ModelF', 'Generative', 'France', 89.00, 84.00);"}
{"prompt":"Which creative AI applications were developed in the US and Europe? with given SQL schema CREATE TABLE Creative_AI (id INT, name TEXT, country TEXT); INSERT INTO Creative_AI (id, name, country) VALUES (1, 'DeepArt', 'Germany'), (2, 'DeepDream', 'USA'), (3, 'Artbreeder', 'Switzerland');","completion":"SELECT name FROM Creative_AI WHERE country IN ('USA', 'Germany', 'Switzerland');"}
{"prompt":"What is the percentage of agricultural innovations that received funding in the last year? with given SQL schema CREATE TABLE AgriculturalInnovations (innovation VARCHAR(50), funding_year INT, funding_amount FLOAT);","completion":"SELECT 100.0 * COUNT(*) \/ NULLIF(SUM(COUNT(*)), 0) FROM AgriculturalInnovations WHERE funding_year = YEAR(CURRENT_DATE) - 1;"}
{"prompt":"Find the total biomass of fish for each salmon farm in the Baltic Sea. with given SQL schema CREATE TABLE farm (id INT, name VARCHAR(50), location VARCHAR(50)); CREATE TABLE farm_stock (farm_id INT, species VARCHAR(50), quantity INT, biomass FLOAT); INSERT INTO farm VALUES (1, 'Baltic Sea Salmon Farm 1', 'Baltic Sea'), (2, 'Baltic Sea Salmon Farm 2', 'Baltic Sea'), (3, 'North Sea Salmon Farm 1', 'North Sea'); INSERT INTO farm_stock VALUES (1, 'Atlantic Salmon', 2500, 10000), (1, 'Coho Salmon', 1500, 6000), (2, 'Atlantic Salmon', 3500, 14000), (2, 'Pacific Salmon', 600, 2400);","completion":"SELECT f.name, SUM(fs.biomass) as total_biomass FROM farm f INNER JOIN farm_stock fs ON f.id = fs.farm_id WHERE f.location = 'Baltic Sea' GROUP BY f.id;"}
{"prompt":"How many times has each farm experienced a disease outbreak? with given SQL schema CREATE TABLE Farm (FarmID INT, FarmName VARCHAR(50), FishSpecies VARCHAR(50)); INSERT INTO Farm (FarmID, FarmName, FishSpecies) VALUES (1, 'Farm A', 'Salmon'); INSERT INTO Farm (FarmID, FarmName, FishSpecies) VALUES (2, 'Farm B', 'Tilapia'); CREATE TABLE Disease (DiseaseID INT, DiseaseName VARCHAR(50), DiseaseImpact FLOAT, FarmID INT); INSERT INTO Disease (DiseaseID, DiseaseName, DiseaseImpact, FarmID) VALUES (1, 'Bacterial Infection', 0.35, 1); INSERT INTO Disease (DiseaseID, DiseaseName, DiseaseImpact, FarmID) VALUES (2, 'Fungal Infection', 0.25, 2);","completion":"SELECT Farm.FarmID, COUNT(*) FROM Farm INNER JOIN Disease ON Farm.FarmID = Disease.FarmID GROUP BY Farm.FarmID;"}
{"prompt":"How many events were attended by people from rural areas in Texas and Florida? with given SQL schema CREATE TABLE Events (id INT, state VARCHAR(2), city VARCHAR(20), attendees INT); INSERT INTO Events (id, state, city, attendees) VALUES (1, 'TX', 'Austin', 500), (2, 'FL', 'Miami', 300), (3, 'TX', 'Dallas', 400); CREATE TABLE Demographics (id INT, state VARCHAR(2), zip INT, rural VARCHAR(5)); INSERT INTO Demographics (id, state, zip, rural) VALUES (1, 'TX', 75000, 'yes'), (2, 'FL', 33000, 'yes'), (3, 'TX', 78000, 'no');","completion":"SELECT SUM(attendees) FROM Events INNER JOIN Demographics ON Events.state = Demographics.state WHERE rural = 'yes' AND state IN ('TX', 'FL');"}
{"prompt":"What is the total weight of unsold cannabis inventory for Dispensary C? with given SQL schema CREATE TABLE inventory (id INT, dispensary VARCHAR(255), product VARCHAR(255), weight FLOAT, sold BOOLEAN); INSERT INTO inventory (id, dispensary, product, weight, sold) VALUES (1, 'Dispensary C', 'Cannabis', 200.0, FALSE);","completion":"SELECT SUM(weight) FROM inventory WHERE dispensary = 'Dispensary C' AND product = 'Cannabis' AND sold = FALSE;"}
{"prompt":"What is the reactor temperature trend for each production run? with given SQL schema CREATE TABLE production_runs (id INT, reactor_temp FLOAT, reactor_temp_time TIME); INSERT INTO production_runs (id, reactor_temp, reactor_temp_time) VALUES (1, 120.5, '08:00:00'), (1, 122.3, '09:00:00'), (2, 125.3, '08:00:00');","completion":"SELECT id, reactor_temp_time, AVG(reactor_temp) OVER (PARTITION BY id ORDER BY reactor_temp_time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS avg_reactor_temp FROM production_runs;"}
{"prompt":"What is the average temperature in the Arctic region between 2010 and 2015? with given SQL schema CREATE TABLE weather (region VARCHAR(20), year INT, temperature FLOAT); INSERT INTO weather VALUES ('Arctic', 2010, -10.5), ('Arctic', 2011, -12.2), ('Arctic', 2012, -9.8), ('Arctic', 2013, -8.5), ('Arctic', 2014, -7.6), ('Arctic', 2015, -6.2);","completion":"SELECT AVG(temperature) FROM weather WHERE region = 'Arctic' AND year BETWEEN 2010 AND 2015;"}
{"prompt":"What is the percentage of GHG emissions by sector in 2015? with given SQL schema CREATE TABLE ghg_emissions (year INT, sector TEXT, ghg_emission FLOAT); INSERT INTO ghg_emissions (year, sector, ghg_emission) VALUES (2015, 'Energy', 0.32), (2015, 'Industry', 0.21), (2015, 'Transport', 0.15), (2015, 'Residential', 0.14), (2015, 'Commercial', 0.13), (2015, 'Agriculture', 0.05);","completion":"SELECT sector, ROUND(ghg_emission \/ SUM(ghg_emission) OVER(), 2) * 100 AS percentage FROM ghg_emissions WHERE year = 2015;"}
{"prompt":"What is the percentage of uninsured individuals in California? with given SQL schema CREATE TABLE healthcare_access (id INT, individual_id INT, insurance_status TEXT, state TEXT); INSERT INTO healthcare_access (id, individual_id, insurance_status, state) VALUES (1, 1, 'Insured', 'California'); INSERT INTO healthcare_access (id, individual_id, insurance_status, state) VALUES (2, 2, 'Uninsured', 'California');","completion":"SELECT (COUNT(*) FILTER (WHERE insurance_status = 'Uninsured')) * 100.0 \/ COUNT(*) FROM healthcare_access WHERE state = 'California';"}
{"prompt":"What is the success rate of diverse-led startups (at least 1 female or underrepresented racial or ethnic group executive) in the past 3 years? with given SQL schema CREATE TABLE DiverseStartups(id INT, name TEXT, country TEXT, year INT, success BOOLEAN);   INSERT INTO DiverseStartups VALUES (1, 'FemTech', 'USA', 2020, true), (2, 'GreenCity', 'Canada', 2019, false), (3, 'AI-Health', 'UK', 2021, true), (4, 'SolarEnergy', 'USA', 2020, false), (5, 'DataAnalytics', 'Germany', 2019, true), (6, 'SmartGrid', 'USA', 2021, true), (7, 'CloudServices', 'India', 2020, false), (8, 'RenewableEnergy', 'USA', 2019, true);","completion":"SELECT COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM DiverseStartups WHERE year >= YEAR(CURRENT_DATE) - 3) AS success_rate FROM DiverseStartups WHERE year >= YEAR(CURRENT_DATE) - 3 AND success = true;"}
{"prompt":"What is the number of students who received accommodations for each disability type? with given SQL schema CREATE TABLE Disability_Accommodations (Student_ID INT, Student_Name TEXT, Disability_Type TEXT, Accommodation_Type TEXT); INSERT INTO Disability_Accommodations (Student_ID, Student_Name, Disability_Type, Accommodation_Type) VALUES (1, 'John Doe', 'Visual Impairment', 'Extended Time'), (2, 'Jane Smith', 'Hearing Impairment', 'Sign Language Interpreting'), (3, 'Michael Brown', 'ADHD', 'Extended Time');","completion":"SELECT Disability_Type, Accommodation_Type, COUNT(*) FROM Disability_Accommodations GROUP BY Disability_Type, Accommodation_Type;"}
{"prompt":"Add a new decentralized application 'BlockchainBank' with symbol 'BB' and total supply of 500,000,000 to the 'DecentralizedApplications' table with given SQL schema CREATE TABLE DecentralizedApplications (name VARCHAR(64), symbol VARCHAR(8), total_supply DECIMAL(20, 8), platform VARCHAR(64), project_url VARCHAR(128));","completion":"INSERT INTO DecentralizedApplications (name, symbol, total_supply) VALUES ('BlockchainBank', 'BB', 500000000);"}
{"prompt":"What is the name of the user who owns the digital asset named 'Asset1'? with given SQL schema CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(255), digital_asset_id INT, FOREIGN KEY (digital_asset_id) REFERENCES digital_assets(id)); INSERT INTO users (id, name, digital_asset_id) VALUES (1, 'User1', 1), (2, 'User2', 2);","completion":"SELECT u.name FROM users u INNER JOIN digital_assets d ON u.digital_asset_id = d.id WHERE d.name = 'Asset1';"}
{"prompt":"What is the percentage of products that are certified vegan for each brand? with given SQL schema CREATE TABLE products (product_id INT, brand_id INT, product_name VARCHAR(50), certified_vegan BOOLEAN); INSERT INTO products (product_id, brand_id, product_name, certified_vegan) VALUES (1, 1, 'Soap', true), (2, 1, 'Lotion', false), (3, 2, 'Shower Gel', true), (4, 2, 'Body Butter', true), (5, 3, 'Foundation', false); CREATE TABLE brands (brand_id INT, brand_name VARCHAR(50), country VARCHAR(50), cruelty_free BOOLEAN); INSERT INTO brands (brand_id, brand_name, country, cruelty_free) VALUES (1, 'Lush', 'United Kingdom', true), (2, 'The Body Shop', 'United Kingdom', true), (3, 'Bare Minerals', 'United States', true);","completion":"SELECT b.brand_name, (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM products p WHERE p.brand_id = b.brand_id)) as vegan_percentage FROM products p JOIN brands b ON p.brand_id = b.brand_id WHERE p.certified_vegan = true GROUP BY b.brand_name;"}
{"prompt":"What is the percentage of vegan products for each brand? with given SQL schema CREATE TABLE brand_ingredient (brand VARCHAR(255), product_count INT, vegan_product_count INT); INSERT INTO brand_ingredient (brand, product_count, vegan_product_count) VALUES ('Lush', 100, 60), ('The Body Shop', 75, 50), ('Sephora', 150, 30);","completion":"SELECT brand, (vegan_product_count * 100.0 \/ product_count) as vegan_percentage FROM brand_ingredient;"}
{"prompt":"What is the average response time for emergency calls during different times of the day? with given SQL schema CREATE TABLE emergency_calls (id INT, call_time TIME, response_time INT);CREATE TABLE districts (district_id INT, district_name VARCHAR(255));","completion":"SELECT DATEPART(hour, call_time) AS hour_of_day, AVG(response_time) AS avg_response_time FROM emergency_calls JOIN districts ON 1=1 GROUP BY DATEPART(hour, call_time);"}
{"prompt":"What is the minimum number of crimes committed in each type for the past year? with given SQL schema CREATE TABLE crimes (crime_id INT, crime_type VARCHAR(255), committed_date DATE); INSERT INTO crimes (crime_id, crime_type, committed_date) VALUES (1, 'Theft', '2022-01-01'), (2, 'Assault', '2022-01-02'), (3, 'Theft', '2022-01-03');","completion":"SELECT c.crime_type, MIN(COUNT(c.crime_id)) FROM crimes c WHERE c.committed_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY c.crime_type;"}
{"prompt":"What is the minimum response time for fire incidents in each borough? with given SQL schema CREATE TABLE borough (id INT, name VARCHAR(50)); INSERT INTO borough (id, name) VALUES (1, 'Manhattan'), (2, 'Brooklyn'), (3, 'Queens'), (4, 'Bronx'), (5, 'Staten Island'); CREATE TABLE incident (id INT, borough_id INT, type VARCHAR(50), timestamp TIMESTAMP, response_time INT);","completion":"SELECT borough_id, MIN(response_time) as min_response_time FROM incident WHERE type = 'fire' GROUP BY borough_id;"}
{"prompt":"What is the total number of community policing events in 'City Park' in 2021? with given SQL schema CREATE TABLE locations (id INT, name VARCHAR(255)); CREATE TABLE community_policing (id INT, location_id INT, year INT, events INT); INSERT INTO locations (id, name) VALUES (1, 'City Park'); INSERT INTO community_policing (id, location_id, year, events) VALUES (1, 1, 2021, 5);","completion":"SELECT SUM(events) FROM community_policing WHERE location_id = (SELECT id FROM locations WHERE name = 'City Park') AND year = 2021;"}
{"prompt":"List all artists who have created more than 100 pieces of artwork in the 'Modern Art' category. with given SQL schema CREATE TABLE Artists (artist_id INT, artist_name VARCHAR(255), category VARCHAR(255), num_pieces INT); INSERT INTO Artists (artist_id, artist_name, category, num_pieces) VALUES (1, 'Pablo Picasso', 'Modern Art', 120), (2, 'Vincent van Gogh', 'Post-Impressionism', 90), (3, 'Jackson Pollock', 'Modern Art', 150);","completion":"SELECT artist_name, category, num_pieces FROM Artists WHERE category = 'Modern Art' AND num_pieces > 100;"}
{"prompt":"List all military equipment types that require maintenance but haven't had any maintenance requests in the past month with given SQL schema CREATE TABLE military_equipment (equipment_id INT, equipment_type VARCHAR(50), last_maintenance_date DATE); INSERT INTO military_equipment (equipment_id, equipment_type, last_maintenance_date) VALUES (1, 'Tank', '2022-01-05'), (2, 'Helicopter', '2022-02-10'), (3, 'Submarine', NULL);","completion":"SELECT equipment_type FROM military_equipment WHERE last_maintenance_date IS NULL OR last_maintenance_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"Which department has the highest veteran employment rate? with given SQL schema CREATE TABLE veteran_employment (department VARCHAR(100), num_veterans INT, total_employees INT);","completion":"SELECT department, (num_veterans\/total_employees)*100 AS veteran_rate FROM veteran_employment ORDER BY veteran_rate DESC LIMIT 1;"}
{"prompt":"How many peacekeeping missions has the UN conducted in Asia in the last 15 years, excluding those led by China or India? with given SQL schema CREATE TABLE Peacekeeping_Missions (Mission VARCHAR(255), Location VARCHAR(255), Year INT, Leader VARCHAR(255));","completion":"SELECT COUNT(DISTINCT Mission) FROM Peacekeeping_Missions WHERE Location LIKE '%Asia%' AND Year BETWEEN (YEAR(CURRENT_DATE)-15) AND YEAR(CURRENT_DATE) AND Leader NOT IN ('China', 'India');"}
{"prompt":"Show the names of all workers who have the same last name as 'John Doe' with given SQL schema CREATE TABLE workers_last_name (id INT, name VARCHAR(50), last_name VARCHAR(50)); INSERT INTO workers_last_name (id, name, last_name) VALUES (1, 'John Doe', 'Doe'), (2, 'Jane Smith', 'Smith'), (3, 'Alice Johnson', 'Johnson');","completion":"SELECT name FROM workers_last_name WHERE last_name = (SELECT last_name FROM workers_last_name WHERE name = 'John Doe');"}
{"prompt":"What is the average salary of workers in the automotive industry in North America by gender? with given SQL schema CREATE TABLE workers (id INT, name VARCHAR(50), gender VARCHAR(10), industry VARCHAR(50), salary FLOAT); INSERT INTO workers (id, name, gender, industry, salary) VALUES (1, 'John Doe', 'Male', 'Automotive', 50000.0), (2, 'Jane Doe', 'Female', 'Automotive', 55000.0), (3, 'Jim Brown', 'Male', 'Automotive', 48000.0);","completion":"SELECT gender, AVG(salary) FROM workers WHERE industry = 'Automotive' GROUP BY gender;"}
{"prompt":"What is the maximum salary of workers in the automotive industry by country? with given SQL schema CREATE TABLE AutomotiveWorkers (WorkerID INT, Country VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO AutomotiveWorkers (WorkerID, Country, Salary) VALUES (1, 'Germany', 8000), (2, 'Japan', 9000), (3, 'USA', 10000);","completion":"SELECT Country, MAX(Salary) as MaxSalary FROM AutomotiveWorkers GROUP BY Country;"}
{"prompt":"List all cybersecurity strategies and their corresponding budgets. with given SQL schema CREATE TABLE CybersecurityStrategies (id INT, strategy VARCHAR(100), budget FLOAT); INSERT INTO CybersecurityStrategies (id, strategy, budget) VALUES (1, 'Next-Gen Firewalls', 500000.00); INSERT INTO CybersecurityStrategies (id, strategy, budget) VALUES (2, 'Intrusion Prevention Systems', 750000.00);","completion":"SELECT strategy, budget FROM CybersecurityStrategies;"}
{"prompt":"What are the intelligence operations in the 'americas' region? with given SQL schema CREATE TABLE intelligence_operations (id INT, operation TEXT, region TEXT); INSERT INTO intelligence_operations (id, operation, region) VALUES (1, 'Op1', 'americas'), (2, 'Op2', 'americas'), (3, 'Op3', 'asia'), (4, 'Op4', 'asia');","completion":"SELECT operation FROM intelligence_operations WHERE region = 'americas';"}
{"prompt":"Calculate the average number of streams per day for each song released in 2010. with given SQL schema CREATE TABLE songs (song_id INT, title VARCHAR(255), genre_id INT, release_date DATE); INSERT INTO songs VALUES (1, 'Bad Romance', 1, '2010-01-01');","completion":"SELECT s.title, AVG(st.stream_count) as avg_daily_streams FROM songs s JOIN (SELECT song_id, COUNT(*) as stream_count, stream_date FROM streams GROUP BY song_id, stream_date) st ON s.song_id = st.song_id WHERE YEAR(s.release_date) = 2010 GROUP BY s.title;"}
{"prompt":"How many jazz albums were sold in the US in Q4 of 2019? with given SQL schema CREATE TABLE albums (album_id INT, genre VARCHAR(10), country VARCHAR(10), release_quarter INT, sales INT); INSERT INTO albums (album_id, genre, country, release_quarter, sales) VALUES (1, 'jazz', 'US', 4, 1000), (2, 'rock', 'UK', 1, 2000), (3, 'jazz', 'US', 4, 1500);","completion":"SELECT COUNT(*) FROM albums WHERE genre = 'jazz' AND country = 'US' AND release_quarter = 4;"}
{"prompt":"What is the maximum number of hours contributed by a single volunteer in the second quarter of 2026? with given SQL schema CREATE TABLE Volunteers (VolunteerID INT, Name TEXT);CREATE TABLE VolunteerHours (HourID INT, VolunteerID INT, Hours DECIMAL(10,2), HourDate DATE);","completion":"SELECT V.Name, MAX(VH.Hours) as MaxHours  FROM VolunteerHours VH JOIN Volunteers V ON VH.VolunteerID = Volunteers.VolunteerID WHERE VH.HourDate BETWEEN '2026-04-01' AND '2026-06-30' GROUP BY V.VolunteerID, V.Name;"}
{"prompt":"Find the number of employees who were hired in the last 30 days and have not received diversity and inclusion training. with given SQL schema CREATE TABLE Employees (EmployeeID INT, HireDate DATE, Training VARCHAR(50));","completion":"SELECT COUNT(*) FROM Employees WHERE HireDate >= DATEADD(day, -30, GETDATE()) AND Training IS NULL;"}
{"prompt":"What is the average carbon price in the 'carbon_prices' table, grouped by region? with given SQL schema CREATE TABLE carbon_prices (id INT, region VARCHAR(50), price FLOAT); INSERT INTO carbon_prices (id, region, price) VALUES (1, 'EU', 25), (2, 'US', 40), (3, 'EU', 22), (4, 'US', 38), (5, 'EU', 28);","completion":"SELECT c.region, AVG(c.price) as avg_price FROM carbon_prices c GROUP BY c.region;"}
{"prompt":"Insert a new record into the 'production_figures' table with the following details: 'well_id' = 3, 'year' = 2020, 'oil_production' = 1500, 'gas_production' = 2500000 with given SQL schema CREATE TABLE production_figures (well_id INT, year INT, oil_production INT, gas_production INT);","completion":"INSERT INTO production_figures (well_id, year, oil_production, gas_production) VALUES (3, 2020, 1500, 2500000);"}
{"prompt":"What is the average height of players in the basketball team 'Atlanta Hawks'? with given SQL schema CREATE TABLE players (player_name TEXT, team TEXT, height FLOAT); INSERT INTO players (player_name, team, height) VALUES ('John Doe', 'Atlanta Hawks', 196.85); INSERT INTO players (player_name, team, height) VALUES ('Jane Smith', 'Atlanta Hawks', 185.42);","completion":"SELECT AVG(height) FROM players WHERE team = 'Atlanta Hawks';"}
{"prompt":"What is the average funding for projects in the technology for social good category? with given SQL schema CREATE TABLE projects (id INT, name TEXT, category TEXT, funding FLOAT); INSERT INTO projects (id, name, category, funding) VALUES (1, 'ProjA', 'DigitalDivide', 50000), (2, 'ProjB', 'SocialGood', 35000), (4, 'ProjD', 'SocialGood', 80000);","completion":"SELECT AVG(funding) FROM projects WHERE category = 'SocialGood';"}
{"prompt":"Add a column \"region\" to \"stations_view\" with values 'North', 'South', 'East', 'West'. with given SQL schema CREATE TABLE stations (station_id INT, name VARCHAR(255), latitude FLOAT, longitude FLOAT, region VARCHAR(5)); CREATE TABLE routes (route_id INT, name VARCHAR(255), start_station_id INT, end_station_id INT); CREATE VIEW stations_view AS SELECT station_id, name, latitude, longitude, 'North' AS region FROM stations WHERE latitude > 40 AND longitude < -70; SELECT * FROM stations WHERE latitude < 40 OR longitude > -70;","completion":"ALTER VIEW stations_view AS SELECT station_id, name, latitude, longitude, 'North' AS region FROM stations WHERE latitude > 40 AND longitude < -70; SELECT * FROM stations WHERE latitude < 40 OR longitude > -70;"}
{"prompt":"What is the average delivery time for each route in the delivery database? with given SQL schema CREATE TABLE delivery (route VARCHAR(20), delivery_time INT); INSERT INTO delivery (route, delivery_time) VALUES ('Route1', 30), ('Route2', 40), ('Route3', 50);","completion":"SELECT route, AVG(delivery_time) FROM delivery GROUP BY route;"}
{"prompt":"What is the total weight of all shipments from Brazil to India that were handled by 'DEF Logistics'? with given SQL schema CREATE TABLE FreightForwarders (ID INT, Name VARCHAR(50), Country VARCHAR(50)); INSERT INTO FreightForwarders (ID, Name, Country) VALUES (1, 'ABC Logistics', 'USA'), (2, 'XYZ Shipping', 'Canada'), (3, 'DEF Logistics', 'India'); CREATE TABLE Shipments (ID INT, FreightForwarderID INT, Origin VARCHAR(50), Destination VARCHAR(50), Weight INT); INSERT INTO Shipments (ID, FreightForwarderID, Origin, Destination, Weight) VALUES (1, 1, 'Tokyo', 'New York', 100), (2, 2, 'Paris', 'London', 200), (3, 3, 'Brazil', 'India', 300);","completion":"SELECT SUM(Shipments.Weight) FROM FreightForwarders INNER JOIN Shipments ON FreightForwarders.ID = Shipments.FreightForwarderID WHERE FreightForwarders.Name = 'DEF Logistics' AND Shipments.Origin = 'Brazil' AND Shipments.Destination = 'India';"}
{"prompt":"Which biotech startups in Canada have received funding for bioprocess engineering? with given SQL schema CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.startups (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), total_funding FLOAT); CREATE TABLE if not exists biotech.funding (id INT PRIMARY KEY, startup_id INT, type VARCHAR(255), amount FLOAT); INSERT INTO biotech.startups (id, name, country, total_funding) VALUES (1, 'BioCanada', 'Canada', 2000000); INSERT INTO biotech.funding (id, startup_id, type, amount) VALUES (1, 1, 'Bioprocess Engineering', 1000000); INSERT INTO biotech.funding (id, startup_id, type, amount) VALUES (2, 1, 'Biosensor Technology Development', 1000000); INSERT INTO biotech.startups (id, name, country, total_funding) VALUES (2, 'BioQuebec', 'Canada', 3000000); INSERT INTO biotech.funding (id, startup_id, type, amount) VALUES (3, 2, 'Genetic Research', 2000000); INSERT INTO biotech.funding (id, startup_id, type, amount) VALUES (4, 2, 'Bioprocess Engineering', 1000000);","completion":"SELECT s.name FROM biotech.startups s JOIN biotech.funding f ON s.id = f.startup_id WHERE s.country = 'Canada' AND f.type = 'Bioprocess Engineering';"}
{"prompt":"How many public schools are there in California, and what is the average enrollment per school? with given SQL schema CREATE TABLE public_schools (name VARCHAR(255), state VARCHAR(255), enrollment INT); INSERT INTO public_schools (name, state, enrollment) VALUES ('Los Angeles High School', 'California', 3150), ('San Francisco High School', 'California', 2500), ('Oakland High School', 'California', 2200);","completion":"SELECT AVG(enrollment) AS avg_enrollment FROM public_schools WHERE state = 'California';"}
{"prompt":"What is the total number of petitions submitted by each city in the state of California? with given SQL schema CREATE TABLE city (id INT, name VARCHAR(255), state VARCHAR(255)); INSERT INTO city (id, name, state) VALUES (1, 'San Francisco', 'California'); INSERT INTO city (id, name, state) VALUES (2, 'Los Angeles', 'California'); CREATE TABLE petition (id INT, city_id INT, num_signatures INT); INSERT INTO petition (id, city_id, num_signatures) VALUES (1, 1, 300); INSERT INTO petition (id, city_id, num_signatures) VALUES (2, 1, 500); INSERT INTO petition (id, city_id, num_signatures) VALUES (3, 2, 700);","completion":"SELECT city.name, SUM(petition.num_signatures) as total_signatures FROM city JOIN petition ON city.id = petition.city_id WHERE city.state = 'California' GROUP BY city.name;"}
{"prompt":"List all renewable energy projects in the 'renewable_projects' view that started after a specific date (e.g., '2020-01-01'). with given SQL schema CREATE VIEW renewable_projects AS SELECT project_id, city, start_date FROM energy_projects WHERE renewable = TRUE; CREATE TABLE energy_projects (project_id INT, city VARCHAR(255), start_date DATE, renewable BOOLEAN);","completion":"SELECT * FROM renewable_projects WHERE start_date > '2020-01-01';"}
{"prompt":"List all renewable energy projects in the 'renewable_projects' view, along with their corresponding city and start date. with given SQL schema CREATE VIEW renewable_projects AS SELECT project_id, city, start_date FROM energy_projects WHERE renewable = TRUE; CREATE TABLE energy_projects (project_id INT, city VARCHAR(255), start_date DATE, renewable BOOLEAN);","completion":"SELECT * FROM renewable_projects;"}
{"prompt":"What is the average water consumption and waste generation for each building in a specific city? with given SQL schema CREATE TABLE building_data (id INT, building_id INT, city VARCHAR(255), type VARCHAR(255), value FLOAT, timestamp TIMESTAMP); INSERT INTO building_data (id, building_id, city, type, value, timestamp) VALUES (1, 1, 'EcoCity', 'Water Consumption', 5000, '2022-04-01 10:00:00'), (2, 1, 'EcoCity', 'Waste Generation', 200, '2022-04-01 10:00:00');","completion":"SELECT building_id, city, type, AVG(value) as avg_value FROM building_data GROUP BY building_id, city, type;"}
{"prompt":"List the names of hotels in Europe that have sustainable practices. with given SQL schema CREATE TABLE hotels (hotel_id INT, name VARCHAR, location VARCHAR, sustainable BOOLEAN); CREATE VIEW european_hotels AS SELECT * FROM hotels WHERE location LIKE '%%Europe%%';","completion":"SELECT name FROM european_hotels WHERE sustainable = TRUE;"}
{"prompt":"Find the number of paintings created per year for the artist 'Frida Kahlo'. with given SQL schema CREATE TABLE Artists (ArtistID INT, Name VARCHAR(50), Nationality VARCHAR(50)); INSERT INTO Artists (ArtistID, Name, Nationality) VALUES (1, 'Vincent van Gogh', 'Dutch'); INSERT INTO Artists (ArtistID, Name, Nationality) VALUES (2, 'Frida Kahlo', 'Mexican'); CREATE TABLE Paintings (PaintingID INT, Title VARCHAR(50), ArtistID INT, YearCreated INT); INSERT INTO Paintings (PaintingID, Title, ArtistID, YearCreated) VALUES (1, 'The Two Fridas', 2, 1939); INSERT INTO Paintings (PaintingID, Title, ArtistID, YearCreated) VALUES (2, 'Self-Portrait with Cropped Hair', 2, 1940);","completion":"SELECT YearCreated, COUNT(*) as NumberOfPaintings FROM Paintings WHERE ArtistID = 2 GROUP BY YearCreated ORDER BY YearCreated;"}
{"prompt":"What are the most common art mediums in the database? with given SQL schema CREATE TABLE Art (id INT, title VARCHAR(255), medium VARCHAR(50)); CREATE TABLE Medium (id INT, name VARCHAR(50)); CREATE TABLE Art_Medium (art_id INT, medium_id INT);","completion":"SELECT Medium.name, COUNT(Art_Medium.art_id) AS artwork_count FROM Medium JOIN Art_Medium ON Medium.id = Art_Medium.medium_id JOIN Art ON Art_Medium.art_id = Art.id GROUP BY Medium.name ORDER BY artwork_count DESC LIMIT 1;"}
{"prompt":"What is the total cost of projects for each category? with given SQL schema CREATE TABLE Projects (category VARCHAR(20), project_cost INT); INSERT INTO Projects (category, project_cost) VALUES ('Bridge', 5000000), ('Road', 3000000), ('Water Treatment', 6500000), ('Dams Safety', 7500000), ('Transit System', 9000000);","completion":"SELECT category, SUM(project_cost) FROM Projects GROUP BY category;"}
{"prompt":"How many tourists visited Marrakech from Morocco in 2019? with given SQL schema CREATE TABLE visitor_stats_2 (id INT, year INT, country VARCHAR(10), city VARCHAR(20), num_tourists INT); INSERT INTO visitor_stats_2 (id, year, country, city, num_tourists) VALUES (1, 2019, 'Morocco', 'Marrakech', 65000), (2, 2019, 'France', 'Marrakech', 40000), (3, 2018, 'Morocco', 'Marrakech', 55000);","completion":"SELECT SUM(num_tourists) FROM visitor_stats_2 WHERE year = 2019 AND country = 'Morocco' AND city = 'Marrakech';"}
{"prompt":"How many traffic citations were issued to drivers of each age group in California in the last year? with given SQL schema CREATE TABLE traffic_citations (citation_number INT, driver_age INT, issue_date DATE, citation_amount FLOAT); INSERT INTO traffic_citations (citation_number, driver_age, issue_date, citation_amount) VALUES (1, 25, '2021-01-01', 150), (2, 35, '2021-02-01', 200), (3, 45, '2021-03-01', 100), (4, 55, '2021-04-01', 250);","completion":"SELECT FLOOR(DATEDIFF(CURRENT_DATE, issue_date)\/365) AS driver_age, COUNT(*) AS citations_issued FROM traffic_citations GROUP BY FLOOR(DATEDIFF(CURRENT_DATE, issue_date)\/365);"}
{"prompt":"What is the number of cases in each court, broken down by case type and case status? with given SQL schema CREATE TABLE CourtCases (CourtName text, CaseType text, CaseStatus text, NumCases int); INSERT INTO CourtCases VALUES ('Court1', 'Assault', 'Open', 30, '2022-01-01'), ('Court1', 'Theft', 'Closed', 25, '2022-01-01'), ('Court2', 'Assault', 'Open', 28, '2022-01-01'), ('Court2', 'Theft', 'Closed', 22, '2022-01-01');","completion":"SELECT CourtName, CaseType, CaseStatus, SUM(NumCases) FROM CourtCases GROUP BY CourtName, CaseType, CaseStatus;"}
{"prompt":"What is the number of offenders who have not committed any offenses in the last 3 years? with given SQL schema CREATE TABLE offenses (offender_id INT, offense_date DATE); INSERT INTO offenses (offender_id, offense_date) VALUES (1, '2018-01-01'), (1, '2019-01-01'), (2, '2017-01-01');","completion":"SELECT COUNT(DISTINCT offender_id) AS num_offenders_no_offenses FROM offenses WHERE offense_date < DATEADD(year, -3, CURRENT_DATE());"}
{"prompt":"Which countries have more than one marine law? with given SQL schema CREATE TABLE Laws (id INT, country VARCHAR(255), name VARCHAR(255), description TEXT); INSERT INTO Laws (id, country, name, description) VALUES (5, 'UK', 'Maritime Law', 'Regulates navigation and commerce in the UK waters'); INSERT INTO Laws (id, country, name, description) VALUES (6, 'Germany', 'Marine Protection Act', 'Protects the marine environment in Germany');","completion":"SELECT country, COUNT(*) FROM Laws WHERE name LIKE '%Marine%' GROUP BY country HAVING COUNT(*) > 1;"}
{"prompt":"What is the average rating of films directed by women? with given SQL schema CREATE TABLE movies (id INT, title TEXT, rating FLOAT, director TEXT); INSERT INTO movies (id, title, rating, director) VALUES (1, 'Movie1', 7.5, 'DirectorA'), (2, 'Movie2', 8.2, 'DirectorB'), (3, 'Movie3', 6.8, 'DirectorA');","completion":"SELECT AVG(rating) FROM movies WHERE director IN ('DirectorA', 'DirectorC');"}
{"prompt":"What is the average word count of articles published in the last week by authors from historically marginalized communities? with given SQL schema CREATE TABLE articles (title VARCHAR(255), publication_date DATE, author VARCHAR(255), community VARCHAR(255), word_count INT); INSERT INTO articles (title, publication_date, author, community, word_count) VALUES ('Article1', '2023-03-28', 'Author1', 'Historically Marginalized Community1', 800), ('Article2', '2023-03-30', 'Author2', 'Historically Marginalized Community2', 1000), ('Article3', '2023-04-03', 'Author3', 'Historically Marginalized Community1', 1200), ('Article4', '2023-04-05', 'Author4', 'Historically Marginalized Community2', 900), ('Article5', '2023-04-07', 'Author5', 'Historically Marginalized Community3', 1100);","completion":"SELECT AVG(word_count) FROM articles WHERE publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) AND community IN ('Historically Marginalized Community1', 'Historically Marginalized Community2', 'Historically Marginalized Community3');"}
{"prompt":"What is the total duration of videos in the 'Entertainment' category with a rating higher than 8? with given SQL schema CREATE TABLE Videos (video_id INT, title VARCHAR(255), category VARCHAR(50), rating FLOAT, duration INT); INSERT INTO Videos (video_id, title, category, rating, duration) VALUES (1, 'Video1', 'Entertainment', 8.5, 60), (2, 'Video2', 'Entertainment', 7.2, 90), (3, 'Video3', 'Education', 9.0, 120);","completion":"SELECT SUM(duration) FROM Videos WHERE category = 'Entertainment' AND rating > 8;"}
{"prompt":"List all defense projects with a start date after January 1, 2022. with given SQL schema CREATE TABLE DefenseProjects (project_id INT, project_name VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO DefenseProjects (project_id, project_name, start_date, end_date) VALUES (1, 'Project A', '2022-02-01', '2023-01-31'), (2, 'Project B', '2021-06-15', '2022-05-31'), (3, 'Project C', '2023-04-01', '2024-03-31');","completion":"SELECT * FROM DefenseProjects WHERE start_date > '2022-01-01';"}
{"prompt":"Which defense projects have a duration greater than the average defense project duration? with given SQL schema CREATE TABLE Defense_Project_Timelines (project_id INT, project_name VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO Defense_Project_Timelines (project_id, project_name, start_date, end_date) VALUES (1, 'Project X', '2018-01-01', '2020-12-31'); INSERT INTO Defense_Project_Timelines (project_id, project_name, start_date, end_date) VALUES (2, 'Project Y', '2019-01-01', '2021-12-31'); INSERT INTO Defense_Project_Timelines (project_id, project_name, start_date, end_date) VALUES (3, 'Project Z', '2020-01-01', '2022-12-31');","completion":"SELECT project_id, project_name, DATEDIFF('day', start_date, end_date) AS project_duration FROM Defense_Project_Timelines WHERE DATEDIFF('day', start_date, end_date) > AVG(DATEDIFF('day', start_date, end_date)) OVER (PARTITION BY NULL);"}
{"prompt":"Which mining company has the lowest labor productivity in coal extraction? with given SQL schema CREATE TABLE companies (company VARCHAR(50), location VARCHAR(50), material VARCHAR(50), productivity FLOAT); INSERT INTO companies (company, location, material, productivity) VALUES ('ABC Corp', 'USA', 'Coal', 1.2), ('XYZ Inc', 'China', 'Coal', 1.5), ('DEF Mining', 'Australia', 'Coal', 1.3), ('GHI Enterprises', 'India', 'Coal', 1.1);","completion":"SELECT company, MIN(productivity) as lowest_productivity FROM companies WHERE material = 'Coal' GROUP BY company ORDER BY lowest_productivity ASC LIMIT 1;"}
{"prompt":"What is the total quantity of resources extracted by gender and race in the 'mining_operations' database? with given SQL schema CREATE TABLE resource_extraction (resource_id INT PRIMARY KEY, resource_name VARCHAR(50), quantity INT, extractor_gender VARCHAR(10), extractor_race VARCHAR(30)); INSERT INTO resource_extraction (resource_id, resource_name, quantity, extractor_gender, extractor_race) VALUES (1, 'Gold', 1000, 'Male', 'Caucasian'), (2, 'Silver', 800, 'Female', 'African American'), (3, 'Copper', 1200, 'Non-binary', 'Hispanic'), (4, 'Iron', 1500, 'Male', 'Asian');","completion":"SELECT extractor_gender, extractor_race, SUM(quantity) as total_quantity FROM resource_extraction GROUP BY extractor_gender, extractor_race;"}
{"prompt":"What is the total number of mobile subscribers in each state, excluding those with a monthly data usage of 0? with given SQL schema CREATE TABLE states (id INT, name VARCHAR(255), region VARCHAR(255));CREATE TABLE mobile_subscribers (id INT, state_id INT, monthly_data_usage DECIMAL(10,2));","completion":"SELECT s.name, COUNT(ms.id) as total_subscribers FROM states s LEFT JOIN mobile_subscribers ms ON s.id = ms.state_id WHERE ms.monthly_data_usage > 0 GROUP BY s.name;"}
{"prompt":"Which mobile and broadband subscribers have not used their services in the last 30 days? with given SQL schema CREATE TABLE mobile_usage (customer_id INT, last_usage DATE); CREATE TABLE broadband_usage (customer_id INT, last_usage DATE); INSERT INTO mobile_usage (customer_id, last_usage) VALUES (1, '2022-01-01'), (2, '2022-02-01'); INSERT INTO broadband_usage (customer_id, last_usage) VALUES (1, '2022-01-15'), (3, '2022-02-10');","completion":"SELECT customer_id FROM mobile_usage WHERE last_usage < NOW() - INTERVAL 30 DAY UNION SELECT customer_id FROM broadband_usage WHERE last_usage < NOW() - INTERVAL 30 DAY;"}
{"prompt":"Update the name of the 'audience_demographics' table to 'audience' with given SQL schema CREATE TABLE audience_demographics (id INT, age INT, gender VARCHAR(10), location VARCHAR(100));","completion":"ALTER TABLE audience_demographics RENAME TO audience;"}
{"prompt":"What is the maximum water pressure at the deepest point in the Atlantic? with given SQL schema CREATE TABLE deep_sea_pressure (id INT, location VARCHAR(255), pressure INT, depth INT); INSERT INTO deep_sea_pressure (id, location, pressure, depth) VALUES (1, 'Challenger Deep', 1100, 10972), (2, 'Mariana Trench', 800, 10994);","completion":"SELECT MAX(pressure) FROM deep_sea_pressure WHERE location = 'Challenger Deep';"}
{"prompt":"Which vessels have the most severe maritime safety violations? with given SQL schema CREATE TABLE countries (id INT, name TEXT); CREATE TABLE vessels (id INT, country_id INT, name TEXT, num_employees INT); CREATE TABLE violations (id INT, vessel_id INT, severity INT); INSERT INTO countries VALUES (1, 'Peru'), (2, 'Chile'), (3, 'Ecuador'); INSERT INTO vessels VALUES (1, 1, 'Peruvian 1', 20), (2, 2, 'Chilean 1', 30), (3, 3, 'Ecuadorian 1', 40); INSERT INTO violations VALUES (1, 1, 5), (2, 1, 3), (3, 2, 10), (4, 3, 7);","completion":"SELECT v.name, SUM(vio.severity) as total_severity FROM vessels v INNER JOIN violations vio ON v.id = vio.vessel_id GROUP BY v.name ORDER BY total_severity DESC;"}
{"prompt":"Which virtual reality games have been reviewed the most in gaming magazines? with given SQL schema CREATE TABLE Games (GameName VARCHAR(255), MagazineReviews INT); INSERT INTO Games (GameName, MagazineReviews) VALUES ('Game1', 12), ('Game2', 15), ('Game3', 21), ('Game4', 8), ('Game5', 17);","completion":"SELECT GameName FROM Games ORDER BY MagazineReviews DESC LIMIT 2;"}
{"prompt":"How many soil moisture sensors are currently malfunctioning? with given SQL schema CREATE TABLE SensorData (sensor_id INT, status VARCHAR(255), crop VARCHAR(255)); CREATE TABLE SoilMoistureSensor (sensor_id INT, location VARCHAR(255));","completion":"SELECT COUNT(*) FROM SensorData SD JOIN SoilMoistureSensor SMS ON SD.sensor_id = SMS.sensor_id WHERE SD.status = 'malfunctioning';"}
{"prompt":"What is the distribution of property types for properties with a property tax greater than $5000? with given SQL schema CREATE TABLE properties (property_id INT, property_type VARCHAR(50), property_tax FLOAT);","completion":"SELECT property_type, COUNT(*) as count FROM properties WHERE property_tax > 5000 GROUP BY property_type;"}
{"prompt":"Update the type of debris with id 1 to 'Abandoned Spacecraft' with given SQL schema CREATE TABLE space_debris (id INT PRIMARY KEY, debris_name VARCHAR(100), launch_date DATE, type VARCHAR(50));","completion":"UPDATE space_debris SET type = 'Abandoned Spacecraft' WHERE id = 1;"}
{"prompt":"What is the total mass of exoplanets with a discovered atmosphere? with given SQL schema CREATE TABLE exoplanets (id INT, name VARCHAR(50), mass FLOAT, atmosphere BOOLEAN); INSERT INTO exoplanets (id, name, mass, atmosphere) VALUES (1, 'Kepler-10b', 4.5, true), (2, 'Gliese 436 b', 9.4, true), (3, 'CoRoT-7b', 5.7, false);","completion":"SELECT SUM(mass) FROM exoplanets WHERE atmosphere = true;"}
{"prompt":"What is the average mass of spacecraft manufactured by 'Galactic Instruments'? with given SQL schema CREATE TABLE Spacecraft_Manufacturing (Manufacturer VARCHAR(255), Spacecraft_Name VARCHAR(255), Mass FLOAT); INSERT INTO Spacecraft_Manufacturing (Manufacturer, Spacecraft_Name, Mass) VALUES ('Galactic Instruments', 'Starlight Explorer', 2000.5), ('Galactic Instruments', 'Nebula Chaser', 2500.3);","completion":"SELECT AVG(Mass) FROM Spacecraft_Manufacturing WHERE Manufacturer = 'Galactic Instruments';"}
{"prompt":"Identify the top 5 threat actors by the number of successful attacks in the last month. with given SQL schema CREATE TABLE threat_actors (actor_id INT PRIMARY KEY, actor_name VARCHAR(100), num_successful_attacks INT); INSERT INTO threat_actors (actor_id, actor_name, num_successful_attacks) VALUES (1, 'APT28', 150), (2, 'Lazarus Group', 120), (3, 'APT33', 80), (4, 'Carbanak Group', 75), (5, 'Cozy Bear', 60);","completion":"SELECT actor_name, num_successful_attacks FROM threat_actors WHERE attack_date BETWEEN DATEADD(month, -1, GETDATE()) AND GETDATE() GROUP BY actor_name ORDER BY COUNT(*) DESC FETCH FIRST 5 ROWS ONLY;"}
{"prompt":"What is the minimum wage for 'temporary' workers in the 'logistics' sector, and how many such workers are there? with given SQL schema CREATE TABLE employee_records (id INT, employment_type VARCHAR(10), sector VARCHAR(20), wage FLOAT); INSERT INTO employee_records (id, employment_type, sector, wage) VALUES (1, 'temporary', 'logistics', 14.00), (2, 'permanent', 'logistics', 18.00), (3, 'temporary', 'logistics', 13.50), (4, 'permanent', 'logistics', 20.00);","completion":"SELECT MIN(wage), COUNT(*) FROM employee_records WHERE employment_type = 'temporary' AND sector = 'logistics';"}
{"prompt":"What is the average speed for vessels in the Mediterranean? with given SQL schema CREATE TABLE Vessels (VesselID varchar(10), Region varchar(10), Speed int); INSERT INTO Vessels (VesselID, Region, Speed) VALUES ('VesselD', 'Mediterranean', 20), ('VesselE', 'Mediterranean', 25);","completion":"SELECT AVG(Speed) FROM Vessels WHERE Region = 'Mediterranean';"}
{"prompt":"What is the total metal waste generation in Rio de Janeiro in 2021? with given SQL schema CREATE TABLE waste_generation (city VARCHAR(50), waste_type VARCHAR(50), generation_quantity INT, generation_date DATE); INSERT INTO waste_generation (city, waste_type, generation_quantity, generation_date) VALUES ('Rio de Janeiro', 'Metal', 900, '2021-01-01'), ('Rio de Janeiro', 'Organic', 1200, '2021-01-01'), ('Rio de Janeiro', 'Glass', 700, '2021-01-01');","completion":"SELECT SUM(generation_quantity) FROM waste_generation WHERE city = 'Rio de Janeiro' AND waste_type = 'Metal' AND generation_date >= '2021-01-01' AND generation_date <= '2021-12-31';"}
{"prompt":"How much water is used in the agricultural sector in Texas? with given SQL schema CREATE TABLE water_usage_tx (sector VARCHAR(20), usage FLOAT); INSERT INTO water_usage_tx (sector, usage) VALUES ('Industrial', 1100), ('Agriculture', 4000), ('Domestic', 900);","completion":"SELECT usage FROM water_usage_tx WHERE sector = 'Agriculture';"}
{"prompt":"What is the maximum daily water consumption for the water treatment plant with ID 8 in the state of Washington in 2022? with given SQL schema CREATE TABLE water_treatment_plant (plant_id INT, state VARCHAR(50), year INT, month INT, day INT, water_consumption FLOAT); INSERT INTO water_treatment_plant (plant_id, state, year, month, day, water_consumption) VALUES (8, 'Washington', 2022, 1, 1, 12345.6), (8, 'Washington', 2022, 1, 2, 23456.7), (8, 'Washington', 2022, 1, 3, 34567.8);","completion":"SELECT MAX(water_consumption) as max_water_consumption FROM water_treatment_plant WHERE plant_id = 8 AND state = 'Washington' AND year = 2022;"}
{"prompt":"What is the maximum daily water usage in MWh for the industrial sector in October 2021? with given SQL schema CREATE TABLE max_daily_water_usage (year INT, month INT, sector VARCHAR(20), day INT, usage FLOAT); INSERT INTO max_daily_water_usage (year, month, sector, day, usage) VALUES (2021, 10, 'industrial', 1, 8000); INSERT INTO max_daily_water_usage (year, month, sector, day, usage) VALUES (2021, 10, 'industrial', 2, 8500); INSERT INTO max_daily_water_usage (year, month, sector, day, usage) VALUES (2021, 10, 'industrial', 3, 9000);","completion":"SELECT MAX(usage) FROM max_daily_water_usage WHERE year = 2021 AND month = 10 AND sector = 'industrial';"}
{"prompt":"What is the total distance covered in miles by users during their workouts in the month of May 2022? with given SQL schema CREATE TABLE Workouts (UserID INT, Distance FLOAT, WorkoutDate DATE); INSERT INTO Workouts (UserID, Distance, WorkoutDate) VALUES (1, 3.5, '2022-05-01'), (1, 2.8, '2022-05-03'), (2, 4.2, '2022-05-02'), (2, 5.1, '2022-05-04');","completion":"SELECT SUM(Distance) FROM Workouts WHERE WorkoutDate BETWEEN '2022-05-01' AND '2022-05-31';"}
{"prompt":"What is the total number of 'Strength Training' sessions? with given SQL schema CREATE TABLE Workouts (WorkoutID INT, WorkoutType VARCHAR(20), MemberID INT); INSERT INTO Workouts (WorkoutID, WorkoutType, MemberID) VALUES (1, 'Strength Training', 1), (2, 'Yoga', 2), (3, 'Strength Training', 3);","completion":"SELECT COUNT(*) FROM Workouts WHERE WorkoutType = 'Strength Training';"}
{"prompt":"Minimum safety score for AI models developed in Q3 2021. with given SQL schema CREATE TABLE ai_safety (model_name TEXT, safety_score INTEGER, quarter TEXT); INSERT INTO ai_safety (model_name, safety_score, quarter) VALUES ('ModelA', 88, 'Q3'), ('ModelB', 92, 'Q2'), ('ModelC', 75, 'Q3');","completion":"SELECT MIN(safety_score) FROM ai_safety WHERE quarter = 'Q3' AND YEAR(STR_TO_DATE(quarter, '%Y-%q')) = 2021;"}
{"prompt":"Who are the manufacturers with the highest number of overdue maintenance for electrical components? with given SQL schema CREATE TABLE Equipment (EquipmentID INT, EquipmentName VARCHAR(50), Type VARCHAR(50), Manufacturer VARCHAR(50)); INSERT INTO Equipment (EquipmentID, EquipmentName, Type, Manufacturer) VALUES (1, 'Component1', 'Electrical', 'Manufacturer1'); CREATE TABLE Maintenance (EquipmentID INT, EquipmentName VARCHAR(50), Manufacturer VARCHAR(50), LastMaintenance DATE, NextMaintenance DATE); INSERT INTO Maintenance (EquipmentID, EquipmentName, Manufacturer, LastMaintenance, NextMaintenance) VALUES (1, 'Component1', 'Manufacturer1', '2021-12-01', '2022-06-01');","completion":"SELECT M.Manufacturer, COUNT(*) AS OverdueCount FROM Equipment E JOIN Maintenance M ON E.EquipmentID = M.EquipmentID WHERE DATEDIFF(day, M.NextMaintenance, GETDATE()) > 0 GROUP BY M.Manufacturer ORDER BY OverdueCount DESC;"}
{"prompt":"Add a new record to the \"events\" table with given SQL schema CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(100), event_location VARCHAR(100), start_time DATETIME, end_time DATETIME, attendance INT);","completion":"INSERT INTO events (event_id, event_name, event_location, start_time, end_time, attendance) VALUES (5001, 'Art Exhibition', 'Museum of Modern Art', '2022-09-01 10:00:00', '2022-09-01 17:00:00', 300);"}
{"prompt":"How many events have been held in each country, in the past three years, broken down by event type? with given SQL schema CREATE TABLE events (event_id INT, event_location VARCHAR(50), event_date DATE, event_type VARCHAR(20)); INSERT INTO events (event_id, event_location, event_date, event_type) VALUES (1, 'USA', '2021-01-01', 'Concert'); INSERT INTO events (event_id, event_location, event_date, event_type) VALUES (2, 'Canada', '2021-03-15', 'Theater'); INSERT INTO events (event_id, event_location, event_date, event_type) VALUES (3, 'France', '2020-10-10', 'Exhibition');","completion":"SELECT SUBSTRING(event_location, 1, INSTR(event_location, '-') - 1) as country, event_type, COUNT(*) as num_events FROM events WHERE event_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY country, event_type;"}
{"prompt":"What is the average age of attendees for music concerts? with given SQL schema CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), event_type VARCHAR(50), attendance INT, city VARCHAR(50)); CREATE TABLE audience (audience_id INT PRIMARY KEY, audience_name VARCHAR(50), age INT, gender VARCHAR(50), event_id INT, FOREIGN KEY (event_id) REFERENCES events(event_id));","completion":"SELECT AVG(audience.age) AS avg_age FROM events INNER JOIN audience ON events.event_id = audience.event_id WHERE events.event_type = 'Music Concert';"}
{"prompt":"What is the total donation amount by month for the year 2020, in descending order? with given SQL schema CREATE TABLE Donations (id INT, donor_name VARCHAR(100), donation_amount DECIMAL(10,2), donation_date DATE, event_id INT);","completion":"SELECT DATE_TRUNC('month', donation_date) as donation_month, SUM(donation_amount) as total_donations FROM Donations WHERE donation_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY donation_month ORDER BY total_donations DESC;"}
{"prompt":"What is the maximum hourly wage for each labor category in the construction industry? with given SQL schema CREATE TABLE labor_statistics (id INT, industry VARCHAR(255), category VARCHAR(255), title VARCHAR(255), hourly_wage DECIMAL(5,2));","completion":"SELECT industry, category, MAX(hourly_wage) as max_hourly_wage FROM labor_statistics WHERE industry = 'construction' GROUP BY industry, category;"}
{"prompt":"Delete sales records for IL dispensaries from January 2022? with given SQL schema CREATE TABLE sales (id INT, dispensary_id INT, quantity INT, month TEXT, year INT); INSERT INTO sales (id, dispensary_id, quantity, month, year) VALUES (1, 1, 25, 'January', 2022), (2, 2, 30, 'January', 2022); CREATE TABLE dispensaries (id INT, name TEXT, state TEXT); INSERT INTO dispensaries (id, name, state) VALUES (1, 'Dispensary A', 'Illinois'), (2, 'Dispensary B', 'Illinois');","completion":"DELETE s  FROM sales s  JOIN dispensaries d ON s.dispensary_id = d.id  WHERE d.state = 'Illinois' AND s.month = 'January' AND s.year = 2022;"}
{"prompt":"How many dispensaries in Michigan have a loyalty program? with given SQL schema CREATE TABLE dispensaries (id INT, name VARCHAR(50), state VARCHAR(50), loyalty_program BOOLEAN);","completion":"SELECT COUNT(*) FROM dispensaries WHERE state = 'MI' AND loyalty_program = TRUE;"}
{"prompt":"What is the average billing amount for cases handled by female attorneys? with given SQL schema CREATE TABLE attorneys (attorney_id INT, name TEXT, gender TEXT); INSERT INTO attorneys (attorney_id, name, gender) VALUES (1, 'Jane Smith', 'Female'), (2, 'Bob Johnson', 'Male'); CREATE TABLE cases (case_id INT, attorney_id INT, billing_amount INT); INSERT INTO cases (case_id, attorney_id, billing_amount) VALUES (1, 1, 5000), (2, 1, 7000), (3, 2, 6000);","completion":"SELECT AVG(billing_amount) FROM cases WHERE attorney_id IN (SELECT attorney_id FROM attorneys WHERE gender = 'Female')"}
{"prompt":"What is the total billing amount for cases in the 'Criminal Law' category? with given SQL schema CREATE TABLE Cases (CaseID INT, CaseType VARCHAR(255), BillingAmount DECIMAL);","completion":"SELECT SUM(BillingAmount) FROM Cases WHERE CaseType = 'Criminal Law';"}
{"prompt":"What is the total billing amount for cases won by the top 3 attorneys? with given SQL schema CREATE TABLE attorneys (id INT, name VARCHAR(50), total_billing_amount DECIMAL(10,2)); CREATE TABLE cases (id INT, attorney_id INT, case_outcome VARCHAR(10));","completion":"SELECT SUM(total_billing_amount) FROM (SELECT attorney_id, SUM(billing_amount) AS total_billing_amount FROM cases JOIN attorneys ON cases.attorney_id = attorneys.id WHERE case_outcome = 'won' GROUP BY attorney_id ORDER BY total_billing_amount DESC LIMIT 3);"}
{"prompt":"Delete records in 'chemical_usage' table where 'usage_date' is before '2022-01-01' with given SQL schema CREATE TABLE chemical_usage (id INT, chemical_name VARCHAR(50), usage_quantity INT, usage_date DATE);","completion":"DELETE FROM chemical_usage WHERE usage_date < '2022-01-01';"}
{"prompt":"What is the average temperature reading for all chemical storage tanks in the past month? with given SQL schema CREATE TABLE chemical_storage_tanks (tank_id INT, temperature FLOAT, reading_date DATE); INSERT INTO chemical_storage_tanks (tank_id, temperature, reading_date) VALUES (1, 25.6, '2022-01-01'), (2, 24.3, '2022-01-01');","completion":"SELECT AVG(temperature) FROM chemical_storage_tanks WHERE reading_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"prompt":"Add a new record for a non-binary founder from India to the \"company_founding_data\" table with given SQL schema CREATE TABLE company_founding_data (id INT PRIMARY KEY, company_id INT, founder_id INT, founder_name VARCHAR(50), founder_gender VARCHAR(10)); INSERT INTO company_founding_data (id, company_id, founder_id, founder_name, founder_gender) VALUES (1, 1001, 1, 'John Doe', 'male'), (2, 1002, 2, 'Jane Smith', 'female'), (3, 1003, 3, 'Alice Johnson', 'female');","completion":"INSERT INTO company_founding_data (id, company_id, founder_id, founder_name, founder_gender) VALUES (4, 1004, 4, 'Alex Khan', 'non-binary');"}
{"prompt":"Insert a new decentralized application into the decentralized_applications table with the given details. with given SQL schema CREATE TABLE decentralized_applications (app_id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(50), launch_date DATETIME);","completion":"INSERT INTO decentralized_applications (app_id, name, category, launch_date) VALUES (6, 'App6', 'Gaming', '2022-04-01 10:00:00');"}
{"prompt":"What is the maximum consumer preference score for vegan cosmetics? with given SQL schema CREATE TABLE Brands (BrandName VARCHAR(50), Vegan BOOLEAN, ConsumerPreferenceScore INT); INSERT INTO Brands (BrandName, Vegan, ConsumerPreferenceScore) VALUES ('Pacifica', TRUE, 88), ('NYX', FALSE, 82), ('e.l.f.', TRUE, 79);","completion":"SELECT MAX(ConsumerPreferenceScore) FROM Brands WHERE Vegan = TRUE;"}
{"prompt":"What is the total revenue for cosmetics products that are not cruelty-free? with given SQL schema CREATE TABLE product (product_id INT, name TEXT, price FLOAT, cruelty_free BOOLEAN); CREATE TABLE sales (sale_id INT, product_id INT, quantity INT);","completion":"SELECT SUM(price * quantity) FROM product INNER JOIN sales ON product.product_id = sales.product_id WHERE cruelty_free = FALSE;"}
{"prompt":"How many military equipment maintenance requests were submitted per month in 2020? with given SQL schema CREATE TABLE maintenance (request_id INT, request_date DATE, equipment_type VARCHAR(255)); INSERT INTO maintenance (request_id, request_date, equipment_type) VALUES (1, '2020-02-12', 'tank'), (2, '2020-04-15', 'plane'), (3, '2019-10-27', 'ship');","completion":"SELECT EXTRACT(MONTH FROM request_date) AS month, COUNT(*) AS num_requests FROM maintenance WHERE request_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY month;"}
{"prompt":"What is the average time to resolve maintenance requests for military equipment, by equipment type, for the year 2021? with given SQL schema CREATE TABLE MaintenanceRequests (id INT, EquipmentType VARCHAR(50), RequestDate DATE, ResolutionDate DATE); INSERT INTO MaintenanceRequests (id, EquipmentType, RequestDate, ResolutionDate) VALUES (1, 'Tank', '2021-01-01', '2021-01-05'), (2, 'Helicopter', '2021-02-01', '2021-02-10'), (3, 'Tank', '2021-03-01', '2021-03-03');","completion":"SELECT EquipmentType, AVG(DATEDIFF(ResolutionDate, RequestDate)) as AverageResolutionTime FROM MaintenanceRequests WHERE RequestDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY EquipmentType;"}
{"prompt":"What is the total number of veterans employed in the defense industry by region? with given SQL schema CREATE TABLE Veteran_Employment (id INT, region VARCHAR(50), industry VARCHAR(50), employed_count INT);","completion":"SELECT region, SUM(employed_count) FROM Veteran_Employment WHERE industry = 'defense' GROUP BY region;"}
{"prompt":"What is the total number of defense diplomacy events in which each country has participated, ranked from highest to lowest? with given SQL schema CREATE TABLE defense_diplomacy_4 (id INT, year INT, country VARCHAR(255), event VARCHAR(255)); INSERT INTO defense_diplomacy_4 (id, year, country, event) VALUES (1, 2015, 'USA', 'Event1'), (2, 2016, 'China', 'Event2'), (3, 2017, 'Russia', 'Event3'), (4, 2018, 'India', 'Event4'), (5, 2019, 'Germany', 'Event5'), (6, 2015, 'Brazil', 'Event6'), (7, 2016, 'South Africa', 'Event7'), (8, 2017, 'Canada', 'Event8'), (9, 2018, 'Japan', 'Event9'), (10, 2019, 'France', 'Event10');","completion":"SELECT country, COUNT(event) AS total_events FROM defense_diplomacy_4 GROUP BY country ORDER BY total_events DESC;"}
{"prompt":"What was the total military spending by NATO members in 2020? with given SQL schema CREATE TABLE nato_spending (country VARCHAR(50), year INT, amount FLOAT); INSERT INTO nato_spending (country, year, amount) VALUES ('USA', 2020, 778000000), ('UK', 2020, 592000000), ('Germany', 2020, 528000000), ('France', 2020, 507000000), ('Italy', 2020, 275000000), ('Canada', 2020, 242000000);","completion":"SELECT SUM(amount) FROM nato_spending WHERE year = 2020 AND country IN ('USA', 'UK', 'Germany', 'France', 'Italy', 'Canada', 'Belgium', 'Netherlands', 'Norway', 'Spain', 'Turkey');"}
{"prompt":"List the number of vessels and their total cargo handling volume for each country in the 'fleet_management' and 'port_operations' schemas. with given SQL schema CREATE TABLE fleet_management.vessels (id INT, name VARCHAR(50), year_built INT, country VARCHAR(50)); CREATE TABLE port_operations.cargo_handling (id INT, port_id INT, volume INT, vessel_id INT); CREATE TABLE port_operations.ports (id INT, name VARCHAR(50), location VARCHAR(50), country VARCHAR(50));","completion":"SELECT fm.country, COUNT(fm.id), SUM(co.volume) FROM fleet_management.vessels fm INNER JOIN port_operations.cargo_handling co ON fm.id = co.vessel_id INNER JOIN port_operations.ports p ON co.port_id = p.id GROUP BY fm.country;"}
{"prompt":"Get top 3 states with highest prevalence with given SQL schema CREATE TABLE if not exists 'disease_data' (id INT, state TEXT, disease TEXT, prevalence INT, PRIMARY KEY(id));","completion":"SELECT state, AVG(prevalence) AS 'Avg Prevalence' FROM 'disease_data' GROUP BY state ORDER BY 'Avg Prevalence' DESC LIMIT 3;"}
{"prompt":"What is the total number of hospital beds and their distribution across rural and urban areas in Alaska? with given SQL schema CREATE TABLE hospitals(id INT, name TEXT, location TEXT, num_beds INT); INSERT INTO hospitals(id, name, location, num_beds) VALUES (1, 'Hospital A', 'Alaska Rural', 50), (2, 'Hospital B', 'Alaska Rural', 75), (3, 'Hospital C', 'Alaska Urban', 200), (4, 'Hospital D', 'Alaska Urban', 300);","completion":"SELECT location, SUM(num_beds) as total_beds, AVG(num_beds) as avg_beds FROM hospitals GROUP BY location;"}
{"prompt":"Update the 'equipment_status' to 'Active' for the record with 'equipment_id' 2 in the 'military_equipment' table with given SQL schema CREATE TABLE military_equipment (equipment_id INT PRIMARY KEY, equipment_name VARCHAR(100), equipment_type VARCHAR(50), equipment_status VARCHAR(20)); INSERT INTO military_equipment (equipment_id, equipment_name, equipment_type, equipment_status) VALUES (1, 'F-16 Fighting Falcon', 'Aircraft', 'Inactive'), (2, 'M1 Abrams', 'Tank', 'Retired'), (3, 'Tomahawk Cruise Missile', 'Missile', 'Active');","completion":"UPDATE military_equipment SET equipment_status = 'Active' WHERE equipment_id = 2;"}
{"prompt":"What is the total budget allocated for military technology research and development from 2019 to 2022? with given SQL schema CREATE TABLE rnd_budget_history (fiscal_year INT, amount INT, category TEXT);INSERT INTO rnd_budget_history (fiscal_year, amount, category) VALUES (2019, 2000000, 'Military Technology Research and Development');INSERT INTO rnd_budget_history (fiscal_year, amount, category) VALUES (2020, 2500000, 'Military Technology Research and Development');INSERT INTO rnd_budget_history (fiscal_year, amount, category) VALUES (2021, 3000000, 'Military Technology Research and Development');INSERT INTO rnd_budget_history (fiscal_year, amount, category) VALUES (2022, 3500000, 'Military Technology Research and Development');","completion":"SELECT SUM(amount) FROM rnd_budget_history WHERE category = 'Military Technology Research and Development' AND fiscal_year BETWEEN 2019 AND 2022;"}
{"prompt":"How many streams of Country music were there in the United States in February 2021? with given SQL schema CREATE TABLE streams (song_id INT, stream_date DATE, genre VARCHAR(20), country VARCHAR(20), revenue DECIMAL(10,2)); INSERT INTO streams (song_id, stream_date, genre, country, revenue) VALUES (12, '2021-02-28', 'Country', 'USA', 6.00);","completion":"SELECT COUNT(*) FROM streams WHERE genre = 'Country' AND country = 'USA' AND stream_date BETWEEN '2021-02-01' AND '2021-02-28';"}
{"prompt":"How many wells were drilled in the Eagle Ford Shale and Bakken Formation? with given SQL schema CREATE TABLE wells (id INT, region VARCHAR(255), well_type VARCHAR(255), num_drilled INT); INSERT INTO wells (id, region, well_type, num_drilled) VALUES (1, 'Eagle Ford Shale', 'Oil', 2000), (2, 'Eagle Ford Shale', 'Gas', 1500), (3, 'Bakken Formation', 'Oil', 1000), (4, 'Bakken Formation', 'Gas', 1200);","completion":"SELECT SUM(num_drilled) as total_wells FROM wells WHERE region IN ('Eagle Ford Shale', 'Bakken Formation');"}
{"prompt":"Delete records of athletes who haven't participated in any games with given SQL schema CREATE TABLE athletes (athlete_id INT, name VARCHAR(50), sport VARCHAR(50)); INSERT INTO athletes (athlete_id, name, sport) VALUES (1, 'John Doe', 'Basketball'), (2, 'Jane Smith', 'Soccer'); CREATE TABLE games (game_id INT, athlete_id INT, points INT); INSERT INTO games (game_id, athlete_id, points) VALUES (1, 1, 20), (2, 1, 30), (3, NULL, 10);","completion":"DELETE FROM athletes WHERE athlete_id NOT IN (SELECT athlete_id FROM games WHERE athlete_id IS NOT NULL);"}
{"prompt":"List the players and their average points per game in the \"nba_games\" table with given SQL schema CREATE TABLE nba_games (player VARCHAR(255), points INTEGER, games_played INTEGER);","completion":"SELECT player, AVG(points) as avg_points_per_game FROM nba_games GROUP BY player;"}
{"prompt":"How many natural disasters were reported in South America in the year 2020? with given SQL schema CREATE TABLE disasters (id INT, type TEXT, location TEXT, year INT); INSERT INTO disasters (id, type, location, year) VALUES (1, 'Flood', 'South America', 2020), (2, 'Earthquake', 'Asia', 2019), (3, 'Tornado', 'North America', 2020);","completion":"SELECT COUNT(*) FROM disasters WHERE location = 'South America' AND year = 2020;"}
{"prompt":"List the top 2 sectors with the highest donation amounts in the 'Asia' region for the year 2018, ordered by the donation amount in descending order. with given SQL schema CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(255), donation_amount INT, sector VARCHAR(255), region VARCHAR(255), donation_date DATE); INSERT INTO Donors (donor_id, donor_name, donation_amount, sector, region, donation_date) VALUES (1, 'DonorA', 100000, 'Health', 'Asia', '2018-01-01');","completion":"SELECT sector, SUM(donation_amount) AS total_donation FROM Donors WHERE region = 'Asia' AND donation_date >= '2018-01-01' AND donation_date < '2019-01-01' GROUP BY sector ORDER BY total_donation DESC LIMIT 2;"}
{"prompt":"List the digital divide projects led by historically underrepresented communities in the technology for social good domain. with given SQL schema CREATE TABLE Projects (ProjectID INT, ProjectName VARCHAR(50), LeaderCommunity VARCHAR(50), Domain VARCHAR(50)); INSERT INTO Projects (ProjectID, ProjectName, LeaderCommunity, Domain) VALUES (1, 'Bridging the Gap', 'Historically Underrepresented Community 1', 'Social Good'); INSERT INTO Projects (ProjectID, ProjectName, LeaderCommunity, Domain) VALUES (2, 'Tech4All', 'Historically Underrepresented Community 2', 'Social Good');","completion":"SELECT ProjectName FROM Projects WHERE LeaderCommunity LIKE '%Historically Underrepresented%' AND Domain = 'Social Good';"}
{"prompt":"What are the ethical AI principles for the technology projects in India? with given SQL schema CREATE TABLE EthicalAI (principle_id INT, principle_name VARCHAR(50), project_location VARCHAR(20)); INSERT INTO EthicalAI (principle_id, principle_name, project_location) VALUES (1, 'Fairness', 'India'), (2, 'Accountability', 'India'), (3, 'Transparency', 'India'), (4, 'Data Minimization', 'India'), (5, 'Explainability', 'India'), (6, 'Human Oversight', 'India');","completion":"SELECT principle_name FROM EthicalAI WHERE project_location = 'India';"}
{"prompt":"What is the average budget allocated to ethical AI initiatives by companies in the technology sector? with given SQL schema CREATE TABLE company_tech (name TEXT, budget INTEGER); INSERT INTO company_tech (name, budget) VALUES ('TechCo', 500000), ('EthicalAI', 700000), ('GoodTech', 600000);","completion":"SELECT AVG(budget) FROM company_tech WHERE name IN ('TechCo', 'EthicalAI', 'GoodTech') AND budget > 0;"}
{"prompt":"What is the minimum salary of employees in the Social Good team? with given SQL schema CREATE TABLE salaries (id INT, employee_id INT, team VARCHAR(50), salary FLOAT); INSERT INTO salaries (id, employee_id, team, salary) VALUES (1, 1, 'Social Good', 60000.00), (2, 2, 'Ethical AI', 65000.00), (3, 3, 'Social Good', 58000.00);","completion":"SELECT MIN(salary) FROM salaries WHERE team = 'Social Good';"}
{"prompt":"How many circular economy initiatives were implemented in Q1 2022? with given SQL schema CREATE TABLE circular_economy_initiatives (initiative_id INT PRIMARY KEY, initiative_date DATE);","completion":"SELECT COUNT(*) FROM circular_economy_initiatives WHERE initiative_date >= '2022-01-01' AND initiative_date < '2022-04-01';"}
{"prompt":"Update the customer_sizes table to change the size to 'Small' for the customer_id 1002 with given SQL schema CREATE TABLE customer_sizes (customer_id INT PRIMARY KEY, size VARCHAR(255)); INSERT INTO customer_sizes (customer_id, size) VALUES (1001, 'Medium'), (1002, 'Large'), (1003, 'Small');","completion":"UPDATE customer_sizes SET size = 'Small' WHERE customer_id = 1002;"}
{"prompt":"What is the total amount donated for each program, ordered by the total amount in descending order? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, Program TEXT, Amount DECIMAL(10,2)); INSERT INTO Donations (DonationID, DonorID, Program, Amount) VALUES (1, 1, 'ProgramA', 100.00), (2, 1, 'ProgramB', 200.00), (3, 2, 'ProgramA', 50.00);","completion":"SELECT Program, SUM(Amount) AS TotalDonated FROM Donations GROUP BY Program ORDER BY TotalDonated DESC;"}
{"prompt":"Determine the average calorie count for vegetarian dishes with given SQL schema CREATE TABLE menu_items (item_id INT, item_name VARCHAR(50), is_vegetarian BOOLEAN, calorie_count INT);","completion":"SELECT AVG(calorie_count) as avg_calories FROM menu_items WHERE is_vegetarian = TRUE;"}
{"prompt":"How many units of each product were sold in the \"East\" region? with given SQL schema CREATE TABLE Sales(region VARCHAR(20), product VARCHAR(20), quantity INT); INSERT INTO Sales(region, product, quantity) VALUES('East', 'Organic Apples', 50), ('West', 'Organic Apples', 75), ('East', 'Bananas', 30);","completion":"SELECT region, product, SUM(quantity) as total_quantity FROM Sales GROUP BY region, product HAVING region = 'East';"}
{"prompt":"How many pallets are stored in each warehouse in France? with given SQL schema CREATE TABLE Inventory (id INT, warehouse_id INT, pallets INT); INSERT INTO Inventory (id, warehouse_id, pallets) VALUES (1, 1, 100), (2, 1, 200), (3, 2, 150); CREATE TABLE Warehouses (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50)); INSERT INTO Warehouses (id, name, city, country) VALUES (1, 'Warehouse A', 'City A', 'France'), (2, 'Warehouse B', 'City B', 'Country B');","completion":"SELECT w.name, SUM(i.pallets) FROM Inventory i JOIN Warehouses w ON i.warehouse_id = w.id WHERE w.country = 'France' GROUP BY w.id;"}
{"prompt":"What is the total number of packages shipped from the 'Paris' warehouse to 'Berlin' in February 2021, if available, having a weight greater than 15 kg? with given SQL schema CREATE TABLE warehouse (id INT, name VARCHAR(20)); CREATE TABLE shipment (id INT, warehouse_id INT, delivery_location VARCHAR(20), shipped_date DATE, weight FLOAT); INSERT INTO warehouse (id, name) VALUES (1, 'Seattle'), (2, 'NY'), (3, 'LA'), (4, 'Paris'); INSERT INTO shipment (id, warehouse_id, delivery_location, shipped_date, weight) VALUES (1, 4, 'Berlin', '2021-02-02', 18.5), (2, 4, 'Berlin', '2021-02-05', 12.2), (3, 2, 'LA', '2021-03-25', 12.2);","completion":"SELECT COUNT(*) AS total_packages FROM shipment WHERE warehouse_id = 4 AND delivery_location = 'Berlin' AND shipped_date >= '2021-02-01' AND shipped_date < '2021-03-01' AND weight > 15;"}
{"prompt":"Who is the principal investigator for the 'Genetic Diversity in Amazon Rainforest' study? with given SQL schema CREATE SCHEMA if not exists genetics; USE genetics; CREATE TABLE if not exists genetic_research (id INT PRIMARY KEY, study_name VARCHAR(255), principal_investigator VARCHAR(255)); INSERT INTO genetic_research (id, study_name, principal_investigator) VALUES (1, 'Genetic Diversity in Amazon Rainforest', 'Dr. Carlos Mendoza'), (2, 'Genome Analysis in Andean Potatoes', 'Dr. Maria Paz'), (3, 'CRISPR in Tropical Plants', 'Dr. Eduardo Lopez');","completion":"SELECT principal_investigator FROM genetics.genetic_research WHERE study_name = 'Genetic Diversity in Amazon Rainforest';"}
{"prompt":"List the unique types of smart city technologies that have been implemented in the top 3 most populous countries in the world. with given SQL schema CREATE TABLE smart_city_tech (tech_type VARCHAR(255), country VARCHAR(255)); CREATE TABLE country_populations (country VARCHAR(255), population INT);","completion":"SELECT DISTINCT tech_type FROM smart_city_tech SCT WHERE country IN (SELECT country FROM (SELECT country, ROW_NUMBER() OVER (ORDER BY population DESC) as rank FROM country_populations) CP WHERE rank <= 3);"}
{"prompt":"Add a new column \"total_revenue\" to the \"hotel_reviews\" table with given SQL schema CREATE TABLE hotel_reviews (hotel_id INT, review_date DATE, review_score INT);","completion":"ALTER TABLE hotel_reviews ADD total_revenue FLOAT;"}
{"prompt":"What is the number of patients who improved by treatment type? with given SQL schema CREATE TABLE treatment_improvement (patient_id INT, therapy_type VARCHAR(50), improvement BOOLEAN); INSERT INTO treatment_improvement (patient_id, therapy_type, improvement) VALUES (1, 'CBT', TRUE);","completion":"SELECT therapy_type, SUM(improvement) FROM treatment_improvement GROUP BY therapy_type;"}
{"prompt":"What is the number of patients who received therapy in the last 6 months in Texas? with given SQL schema CREATE TABLE patient (patient_id INT, age INT, gender VARCHAR(50), state VARCHAR(50), registration_date DATE); INSERT INTO patient (patient_id, age, gender, state, registration_date) VALUES (1, 35, 'Female', 'Texas', '2020-06-15'); INSERT INTO patient (patient_id, age, gender, state, registration_date) VALUES (2, 42, 'Male', 'California', '2021-01-01'); CREATE TABLE treatment (treatment_id INT, patient_id INT, treatment_name VARCHAR(50), duration INT, treatment_date DATE); INSERT INTO treatment (treatment_id, patient_id, treatment_name, duration, treatment_date) VALUES (1, 1, 'CBT', 12, '2021-02-01'); INSERT INTO treatment (treatment_id, patient_id, treatment_name, duration, treatment_date) VALUES (2, 2, 'DBT', 16, '2020-12-15');","completion":"SELECT COUNT(DISTINCT patient.patient_id) FROM patient INNER JOIN treatment ON patient.patient_id = treatment.patient_id WHERE patient.state = 'Texas' AND treatment.treatment_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"prompt":"How many international tourists visited Portugal in 2020, broken down by continent? with given SQL schema CREATE TABLE international_tourists(tourist_id INT, country TEXT, arrival_year INT, continent TEXT);INSERT INTO international_tourists (tourist_id, country, arrival_year, continent) VALUES (1, 'Spain', 2020, 'Europe'), (2, 'France', 2020, 'Europe'), (3, 'Brazil', 2020, 'South America'), (4, 'United States', 2020, 'North America'), (5, 'China', 2020, 'Asia');","completion":"SELECT continent, COUNT(*) FROM international_tourists WHERE arrival_year = 2020 GROUP BY continent;"}
{"prompt":"Which destinations had a decrease in visitors from 2022 to 2023? with given SQL schema CREATE TABLE if not exists VisitorStatisticsByYear (Year INT, Destination VARCHAR(50), Visitors INT); INSERT INTO VisitorStatisticsByYear (Year, Destination, Visitors) VALUES (2022, 'Paris', 1250000), (2023, 'Paris', 1230000), (2022, 'Rome', 920000), (2023, 'Rome', 910000);","completion":"SELECT a.Destination, (b.Visitors - a.Visitors) AS VisitorChange FROM VisitorStatisticsByYear a, VisitorStatisticsByYear b WHERE a.Destination = b.Destination AND a.Year = 2022 AND b.Year = 2023;"}
{"prompt":"What are the names of all victims who have participated in restorative justice programs in the state of New York? with given SQL schema CREATE TABLE restorative_justice_programs (victim_name TEXT, program_state TEXT); INSERT INTO restorative_justice_programs (victim_name, program_state) VALUES ('Sarah Lee', 'New York');","completion":"SELECT victim_name FROM restorative_justice_programs WHERE program_state = 'New York';"}
{"prompt":"How many unique genres are associated with media published in each country? with given SQL schema CREATE TABLE media (id INT, title VARCHAR(50), location VARCHAR(50), genre VARCHAR(50)); INSERT INTO media (id, title, location, genre) VALUES (1, 'Article 1', 'USA', 'News'), (2, 'Article 2', 'Canada', 'Entertainment'), (3, 'News 1', 'USA', 'Politics'), (4, 'News 2', 'Canada', 'Sports');","completion":"SELECT location, COUNT(DISTINCT genre) FROM media GROUP BY location;"}
{"prompt":"How many gluten-free menu items were sold in the second quarter of 2022? with given SQL schema CREATE TABLE menus (menu_id INT, menu_name TEXT, type TEXT, price DECIMAL, quarter DATE); INSERT INTO menus (menu_id, menu_name, type, price, quarter) VALUES (1, 'Quinoa Salad', 'Vegetarian', 12.99, '2022-01-01'), (2, 'Chicken Caesar Wrap', 'Gluten-free', 10.99, '2022-02-15');","completion":"SELECT COUNT(*) FROM menus WHERE type = 'Gluten-free' AND quarter = '2022-02-15';"}
{"prompt":"What is the total quantity of organic items sold? with given SQL schema CREATE TABLE supplier_data_2 (supplier_id INT, location_id INT, item_id INT, quantity_sold INT, is_organic BOOLEAN); INSERT INTO supplier_data_2 (supplier_id, location_id, item_id, quantity_sold, is_organic) VALUES (1, 1, 1, 30, TRUE), (2, 2, 3, 70, FALSE);","completion":"SELECT SUM(quantity_sold) FROM supplier_data_2 WHERE is_organic = TRUE;"}
{"prompt":"What is the total revenue generated from 4G and 5G services for customers in North America, broken down by service type and state? with given SQL schema CREATE TABLE subscribers (id INT, service VARCHAR(20), state VARCHAR(20), revenue DECIMAL(10,2));","completion":"SELECT service, state, SUM(revenue) FROM subscribers WHERE service IN ('4G', '5G') AND state IS NOT NULL GROUP BY service, state;"}
{"prompt":"What are the total ticket sales for all concerts in the United States and Canada? with given SQL schema CREATE TABLE concerts (id INT, country VARCHAR(255), city VARCHAR(255), artist_name VARCHAR(255), tier VARCHAR(255), price DECIMAL(10,2), num_tickets INT);","completion":"SELECT SUM(price * num_tickets) FROM concerts WHERE country IN ('United States', 'Canada');"}
{"prompt":"What was the average donation amount by age group in 2021? with given SQL schema CREATE TABLE DonorAge (DonorID int, DonorAge int); INSERT INTO DonorAge (DonorID, DonorAge) VALUES (1, 30); INSERT INTO DonorAge (DonorID, DonorAge) VALUES (2, 40); CREATE TABLE DonationsByAge (DonationID int, DonorID int, DonationAmount int); INSERT INTO DonationsByAge (DonationID, DonorID, DonationAmount) VALUES (1, 1, 50); INSERT INTO DonationsByAge (DonationID, DonorID, DonationAmount) VALUES (2, 2, 100);","completion":"SELECT AVG(DonationAmount) as AverageDonation, CASE WHEN DonorAge < 30 THEN 'Under 30' WHEN DonorAge BETWEEN 30 AND 50 THEN '30-50' ELSE 'Over 50' END as AgeGroup FROM DonationsByAge DBA JOIN DonorAge DA ON DBA.DonorID = DA.DonorID WHERE DonationDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY AgeGroup;"}
{"prompt":"How many marine protected areas exist in the Indian Ocean as of 2022? with given SQL schema CREATE TABLE protected_areas (id INT, ocean VARCHAR(50), year INT, num_areas INT); INSERT INTO protected_areas (id, ocean, year, num_areas) VALUES (1, 'Indian Ocean', 2018, 123), (2, 'Indian Ocean', 2019, 156), (3, 'Indian Ocean', 2022, NULL);","completion":"SELECT num_areas FROM protected_areas WHERE ocean = 'Indian Ocean' AND year = 2022;"}
{"prompt":"How many donations have been made to organizations focused on education by donors from the US and Canada in the last 12 months? with given SQL schema CREATE TABLE donors (id INT, name VARCHAR(255), country VARCHAR(255));CREATE TABLE donations (id INT, donor_id INT, cause_id INT, amount DECIMAL(10, 2), donation_date DATE);CREATE TABLE causes (id INT, name VARCHAR(255), category VARCHAR(255));CREATE VIEW v_us_canada AS SELECT 'US' AS country UNION ALL SELECT 'Canada';","completion":"SELECT COUNT(*) FROM donations d INNER JOIN donors dn ON d.donor_id = dn.id INNER JOIN causes c ON d.cause_id = c.id INNER JOIN v_us_canada v ON dn.country = v.country WHERE d.donation_date >= DATE_SUB(NOW(), INTERVAL 12 MONTH) AND c.category = 'education';"}
{"prompt":"What is the average level achieved per hour played for players in the \"Cybernetic Pioneers\" game? with given SQL schema CREATE TABLE PioneerStats (PlayerID INT, GameName VARCHAR(20), Level INT, Playtime FLOAT); INSERT INTO PioneerStats (PlayerID, GameName, Level, Playtime) VALUES (3001, 'Cybernetic Pioneers', 10, 20.5), (3002, 'Cybernetic Pioneers', 25, 40.2), (3003, 'Cybernetic Pioneers', 18, 15.6);","completion":"SELECT AVG(Level * 1.0 \/ Playtime) FROM PioneerStats WHERE GameName = 'Cybernetic Pioneers';"}
{"prompt":"What is the total revenue generated from esports events in Asia in 2022? with given SQL schema CREATE TABLE EsportsEvents (EventID INT PRIMARY KEY, EventType VARCHAR(20), Region VARCHAR(10), Revenue INT, EventYear INT); INSERT INTO EsportsEvents (EventID, EventType, Region, Revenue, EventYear) VALUES (1, 'Tournament', 'Asia', 500000, 2022); INSERT INTO EsportsEvents (EventID, EventType, Region, Revenue, EventYear) VALUES (2, 'Exhibition', 'NA', 300000, 2021);","completion":"SELECT SUM(Revenue) FROM EsportsEvents WHERE EventType = 'Tournament' AND Region = 'Asia' AND EventYear = 2022;"}
{"prompt":"Identify the top 3 mining companies with the highest total production of Praseodymium in 2021 and their respective production amounts. with given SQL schema CREATE TABLE Company (Name TEXT, Location TEXT, Established INT); INSERT INTO Company (Name, Location, Established) VALUES ('Delta Minerals', 'Brazil', 2000), ('Epsilon Ore', 'South Africa', 2010), ('Zeta Extraction', 'Canada', 2005), ('Eta Mines', 'Russia', 2008); CREATE TABLE ProductionCompany (Year INT, Company TEXT, Element TEXT, Quantity INT); INSERT INTO ProductionCompany (Year, Company, Element, Quantity) VALUES (2021, 'Delta Minerals', 'Praseodymium', 1000), (2021, 'Epsilon Ore', 'Praseodymium', 1400), (2021, 'Zeta Extraction', 'Praseodymium', 1800), (2021, 'Eta Mines', 'Praseodymium', 1100);","completion":"SELECT Company, SUM(Quantity) FROM ProductionCompany WHERE Element = 'Praseodymium' AND Year = 2021 GROUP BY Company ORDER BY SUM(Quantity) DESC FETCH FIRST 3 ROWS ONLY;"}
{"prompt":"List the names, addresses, and housing affordability scores of properties in Los Angeles with sustainable urbanism certifications, and show only those with scores below 60. with given SQL schema CREATE TABLE properties (property_id INT, name VARCHAR(255), address VARCHAR(255), city VARCHAR(255), sustainable_urbanism_certified BOOLEAN, housing_affordability_score INT); INSERT INTO properties (property_id, name, address, city, sustainable_urbanism_certified, housing_affordability_score) VALUES (1, 'Green Living', '123 Main St', 'Los Angeles', true, 85), (2, 'Eco Haven', '456 Oak St', 'Los Angeles', false, 60), (3, 'Sustainable Suites', '789 Pine St', 'Los Angeles', true, 55);","completion":"SELECT name, address, housing_affordability_score FROM properties WHERE city = 'Los Angeles' AND sustainable_urbanism_certified = true AND housing_affordability_score < 60;"}
{"prompt":"What is the minimum property tax for properties with more than 3 bedrooms in Vancouver? with given SQL schema CREATE TABLE buildings (id INT, city VARCHAR, size INT, num_bedrooms INT, property_tax DECIMAL);","completion":"SELECT MIN(property_tax) FROM buildings WHERE city = 'Vancouver' AND num_bedrooms > 3;"}
{"prompt":"Get the number of renewable energy projects in Australia for each project type. with given SQL schema CREATE TABLE renewable_projects (id INT PRIMARY KEY, project_name VARCHAR(255), project_location VARCHAR(255), project_type VARCHAR(255), capacity_mw FLOAT);","completion":"SELECT project_type, COUNT(*) FROM renewable_projects WHERE project_location = 'Australia' GROUP BY project_type;"}
{"prompt":"How many electric vehicles were sold in Texas in 2021? with given SQL schema CREATE TABLE electric_vehicles (id INT, year INT, state VARCHAR(255), sales INT); INSERT INTO electric_vehicles (id, year, state, sales) VALUES (1, 2020, 'California', 50000), (2, 2021, 'California', 60000), (3, 2021, 'Texas', 70000);","completion":"SELECT SUM(sales) FROM electric_vehicles WHERE state = 'Texas' AND year = 2021;"}
{"prompt":"Update the inventory count of 'Impossible Burger' to 25 in the menu_items table with given SQL schema CREATE TABLE menu_items (item_id INT, item_name TEXT, category TEXT, price DECIMAL(5,2), inventory_count INT);","completion":"UPDATE menu_items SET inventory_count = 25 WHERE item_name = 'Impossible Burger';"}
{"prompt":"Display the number of times each consumer education event was attended, along with the event location and capacity. with given SQL schema CREATE TABLE events (event_id INT, event_name VARCHAR(255), event_location VARCHAR(255), event_capacity INT);CREATE TABLE attendees (attendee_id INT, FK_event_id REFERENCES events(event_id));","completion":"SELECT e.event_location, e.event_name, COUNT(a.attendee_id) as attendance_count FROM events e JOIN attendees a ON e.event_id = a.event_id GROUP BY e.event_id, e.event_location, e.event_name;"}
{"prompt":"What is the daily sales trend for the top 5 retailers in the last week? with given SQL schema CREATE TABLE Retailer (id INT, name VARCHAR(255)); CREATE TABLE Sales (id INT, retailer_id INT, sale_date DATE, revenue FLOAT);","completion":"SELECT r.name, sale_date, SUM(revenue) as daily_sales FROM Sales s JOIN Retailer r ON s.retailer_id = r.id WHERE retailer_id IN (SELECT id FROM Retailer ORDER BY SUM(revenue) DESC LIMIT 5) AND sale_date >= (CURRENT_DATE - INTERVAL '1 week') GROUP BY ROLLUP(r.name, sale_date) ORDER BY r.name, sale_date DESC;"}
{"prompt":"What is the average altitude of all geostationary satellites? with given SQL schema CREATE TABLE geostationary_satellites (id INT, name VARCHAR(50), type VARCHAR(50), altitude INT); INSERT INTO geostationary_satellites (id, name, type, altitude) VALUES (1, 'Sat1', 'Communication', 35786), (2, 'Sat2', 'Weather', 35800), (3, 'Sat3', 'Observation', 35790), (4, 'Sat4', 'Communication', 35780), (5, 'Sat5', 'Weather', 35810);","completion":"SELECT AVG(altitude) FROM geostationary_satellites;"}
{"prompt":"What is the total cost of all space missions per space agency in the space_missions and space_agencies table? with given SQL schema CREATE TABLE space_agencies (id INT, agency_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE space_missions (id INT, mission_name VARCHAR(50), launch_date DATE, scheduled_date DATE, agency_id INT, cost FLOAT); INSERT INTO space_agencies VALUES (1, 'NASA', 'USA'); INSERT INTO space_missions VALUES (1, 'Artemis I', '2022-08-29', '2022-06-29', 1, 2400000000);","completion":"SELECT agency_name, SUM(cost) OVER (PARTITION BY agency_id) FROM space_agencies sa JOIN space_missions sm ON sa.id = sm.agency_id;"}
{"prompt":"What is the total number of satellites launched by India and the USA? with given SQL schema CREATE TABLE satellite_launches (id INT, launch_year INT, country VARCHAR(50), satellites INT); INSERT INTO satellite_launches (id, launch_year, country, satellites) VALUES (1, 2010, 'India', 5), (2, 2010, 'USA', 10), (3, 2011, 'India', 7), (4, 2011, 'USA', 15);","completion":"SELECT SUM(satellites) FROM satellite_launches WHERE country IN ('India', 'USA');"}
{"prompt":"Show the number of athletes with mental health scores above 90 with given SQL schema CREATE TABLE athlete_wellbeing (athlete_id INT, name VARCHAR(100), mental_health_score INT, physical_health_score INT); INSERT INTO athlete_wellbeing (athlete_id, name, mental_health_score, physical_health_score) VALUES (1, 'John Doe', 80, 85), (2, 'Jane Smith', 95, 90), (3, 'Mary Johnson', 90, 95);","completion":"SELECT COUNT(*) FROM athlete_wellbeing WHERE mental_health_score > 90;"}
{"prompt":"What is the maximum ticket price for any event in the 'sports_venue' table? with given SQL schema CREATE TABLE sports_venue (venue_id INT, event_name VARCHAR(255), price DECIMAL(5,2)); INSERT INTO sports_venue (venue_id, event_name, price) VALUES (1, 'Basketball Game', 120.50), (2, 'Baseball Game', 35.00), (3, 'Football Game', 75.00), (4, 'Hockey Game', 90.00);","completion":"SELECT MAX(price) FROM sports_venue;"}
{"prompt":"What is the total number of tickets sold for each game? with given SQL schema CREATE TABLE games (game_id INT, team_id INT, game_date DATE); INSERT INTO games (game_id, team_id, game_date) VALUES (1, 1, '2021-01-01'), (2, 1, '2021-01-03'), (3, 2, '2021-01-02'), (4, 2, '2021-01-04');","completion":"SELECT g.game_date, t.team_name, COUNT(ts.ticket_id) as total_tickets_sold FROM games g JOIN teams t ON g.team_id = t.team_id JOIN ticket_sales ts ON g.game_date = ts.sale_date GROUP BY g.game_date, t.team_name;"}
{"prompt":"What is the maximum number of simultaneous login attempts allowed by the corporate security policy? with given SQL schema CREATE TABLE security_policies (id INT, policy_name VARCHAR(255), max_simultaneous_logins INT); INSERT INTO security_policies (id, policy_name, max_simultaneous_logins) VALUES (1, 'corporate', 3);","completion":"SELECT MAX(max_simultaneous_logins) FROM security_policies WHERE policy_name = 'corporate';"}
{"prompt":"What is the total number of high-severity vulnerabilities for each software vendor in the last 6 months? with given SQL schema create table vulnerabilities (id int, vendor varchar(255), severity int, date date); insert into vulnerabilities values (1, 'Microsoft', 7, '2022-01-01'); insert into vulnerabilities values (2, 'Microsoft', 5, '2022-01-05'); insert into vulnerabilities values (3, 'Google', 8, '2022-01-10'); insert into vulnerabilities values (4, 'IBM', 2, '2022-04-15'); insert into vulnerabilities values (5, 'IBM', 9, '2022-07-01');","completion":"SELECT vendor, COUNT(*) FROM vulnerabilities WHERE severity >= 7 AND date >= '2022-01-01' GROUP BY vendor;"}
{"prompt":"What is the total number of electric vehicles in the ev_charging_stations table for each city? with given SQL schema CREATE TABLE ev_charging_stations (city VARCHAR(20), year INT, num_chargers INT); INSERT INTO ev_charging_stations (city, year, num_chargers) VALUES ('City A', 2020, 500), ('City A', 2021, 600), ('City B', 2020, 300), ('City B', 2021, 350), ('City C', 2020, 400), ('City C', 2021, 450);","completion":"SELECT city, SUM(num_chargers) FROM ev_charging_stations GROUP BY city;"}
{"prompt":"Create a table named 'manufacturing_regions' to store garment manufacturing regions with given SQL schema CREATE TABLE manufacturing_regions (id INT PRIMARY KEY, region VARCHAR(100), country VARCHAR(100), manufacturing_volume INT);","completion":"CREATE TABLE manufacturing_regions (id INT PRIMARY KEY, region VARCHAR(100), country VARCHAR(100), manufacturing_volume INT);"}
{"prompt":"Calculate the average claim amount for policyholders living in 'TX'. with given SQL schema CREATE TABLE Policyholders (PolicyholderID INT, Name VARCHAR(50), Age INT, Gender VARCHAR(10), State VARCHAR(2)); CREATE TABLE Claims (ClaimID INT, PolicyholderID INT, Amount DECIMAL(10, 2), ClaimDate DATE); INSERT INTO Policyholders (PolicyholderID, Name, Age, Gender, State) VALUES (1, 'Aisha Brown', 68, 'Female', 'NY'); INSERT INTO Policyholders (PolicyholderID, Name, Age, Gender, State) VALUES (2, 'Brian Green', 55, 'Male', 'CA'); INSERT INTO Policyholders (PolicyholderID, Name, Age, Gender, State) VALUES (3, 'Charlotte Lee', 72, 'Female', 'TX'); INSERT INTO Claims (ClaimID, PolicyholderID, Amount, ClaimDate) VALUES (1, 1, 500, '2021-01-01'); INSERT INTO Claims (ClaimID, PolicyholderID, Amount, ClaimDate) VALUES (2, 3, 1000, '2021-02-01');","completion":"SELECT AVG(Claims.Amount) FROM Policyholders JOIN Claims ON Policyholders.PolicyholderID = Claims.PolicyholderID WHERE Policyholders.State = 'TX';"}
{"prompt":"How many electric and hybrid vehicles were sold in total worldwide in 2021? with given SQL schema CREATE TABLE Global_Sales (id INT, vehicle_type TEXT, quantity INT, year INT); INSERT INTO Global_Sales (id, vehicle_type, quantity, year) VALUES (1, 'Electric', 1200, 2021); INSERT INTO Global_Sales (id, vehicle_type, quantity, year) VALUES (2, 'Hybrid', 1500, 2021);","completion":"SELECT SUM(quantity) FROM Global_Sales WHERE vehicle_type IN ('Electric', 'Hybrid') AND year = 2021;"}
{"prompt":"Insert a new safety test result for 'Tesla Model 3' into the 'SafetyTestResults' table. with given SQL schema CREATE TABLE SafetyTestResults (Id INT, Vehicle VARCHAR(50), Test VARCHAR(50), Score INT);","completion":"INSERT INTO SafetyTestResults (Id, Vehicle, Test, Score) VALUES (1, 'Tesla Model 3', 'Crash Test', 93);"}
{"prompt":"List the safe AI practices from the 'safe_ai_practices' view. with given SQL schema CREATE VIEW safe_ai_practices AS SELECT * FROM ai_safety_guidelines WHERE category = 'Safe Practices';","completion":"SELECT * FROM safe_ai_practices;"}
{"prompt":"What is the total number of AI safety incidents for each type of incident, sorted by the number of incidents in descending order? with given SQL schema CREATE TABLE incidents (id INT, model_id INT, incident_type VARCHAR(255)); INSERT INTO incidents (id, model_id, incident_type) VALUES (1, 1, 'Unintended Consequences'), (2, 2, 'Lack of Robustness'), (3, 1, 'Lack of Robustness'), (4, 3, 'Unintended Consequences'), (5, 1, 'Bias'), (6, 2, 'Bias'), (7, 3, 'Bias'), (8, 1, 'Explainability'), (9, 2, 'Explainability'), (10, 3, 'Explainability');","completion":"SELECT incident_type, COUNT(*) as incident_count FROM incidents GROUP BY incident_type ORDER BY incident_count DESC;"}
{"prompt":"What are the names of all the farmers who have adopted precision agriculture techniques in the 'rural_development' schema? with given SQL schema CREATE TABLE farmers (id INT, name VARCHAR(50), technique VARCHAR(50)); INSERT INTO farmers (id, name, technique) VALUES (1, 'John Doe', 'Precision Agriculture');","completion":"SELECT name FROM rural_development.farmers WHERE technique = 'Precision Agriculture';"}
{"prompt":"Which visual art genres have the highest average attendee age? with given SQL schema CREATE TABLE VisualArtEvents (id INT, title VARCHAR(50), genre VARCHAR(50)); INSERT INTO VisualArtEvents (id, title, genre) VALUES (1, 'Modern Art Exhibition', 'Modern Art'); INSERT INTO VisualArtEvents (id, title, genre) VALUES (2, 'Classic Art Exhibition', 'Classic Art'); CREATE TABLE VisualArtAttendees (id INT, event_id INT, age INT, gender VARCHAR(10)); INSERT INTO VisualArtAttendees (id, event_id, age, gender) VALUES (1, 1, 45, 'Female'); INSERT INTO VisualArtAttendees (id, event_id, age, gender) VALUES (2, 2, 35, 'Male');","completion":"SELECT genre, AVG(age) FROM VisualArtAttendees GROUP BY genre ORDER BY AVG(age) DESC;"}
{"prompt":"What is the minimum cost of sustainable construction materials in the 'materials' table? with given SQL schema CREATE TABLE materials (material_name VARCHAR(30), is_sustainable BOOLEAN, cost FLOAT); INSERT INTO materials (material_name, is_sustainable, cost) VALUES ('Recycled Steel', TRUE, 120); INSERT INTO materials (material_name, is_sustainable, cost) VALUES ('Reclaimed Wood', TRUE, 150);","completion":"SELECT MIN(cost) FROM materials WHERE is_sustainable = TRUE;"}
{"prompt":"What is the total number of electricians and plumbers in the construction labor force? with given SQL schema CREATE TABLE LaborStats (StatID INT, StatName TEXT, TotalEmployees INT); INSERT INTO LaborStats VALUES (1, 'Electricians', 400000), (2, 'Plumbers', 300000);","completion":"SELECT SUM(TotalEmployees) FROM LaborStats WHERE StatName IN ('Electricians', 'Plumbers');"}
{"prompt":"Which engineers worked on the 'Wind Turbines' project? with given SQL schema CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Position VARCHAR(50), Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Position, Department) VALUES (2, 'Jane', 'Smith', 'Engineer', 'Construction'); CREATE TABLE Projects (ProjectID INT, ProjectName VARCHAR(50), StartDate DATE, EndDate DATE, Department VARCHAR(50)); INSERT INTO Projects (ProjectID, ProjectName, StartDate, EndDate, Department) VALUES (2, 'Wind Turbines', '2022-04-01', '2022-10-31', 'Construction');","completion":"SELECT Employees.FirstName, Employees.LastName FROM Employees INNER JOIN Projects ON Employees.Department = Projects.Department WHERE Employees.Position = 'Engineer' AND Projects.ProjectName = 'Wind Turbines';"}
{"prompt":"Find the number of cases and total billing amount for cases with a favorable outcome in California. with given SQL schema CREATE TABLE cases (case_id INT, state VARCHAR(2), outcome VARCHAR(10)); INSERT INTO cases (case_id, state, outcome) VALUES (1, 'CA', 'Favorable'), (2, 'CA', 'Unfavorable'), (3, 'NY', 'Favorable'); CREATE TABLE case_outcomes (outcome_id INT, description VARCHAR(20)); INSERT INTO case_outcomes (outcome_id, description) VALUES (1, 'Favorable'), (2, 'Unfavorable');","completion":"SELECT COUNT(*), SUM(billing_amount) FROM cases INNER JOIN case_outcomes ON cases.outcome = case_outcomes.description WHERE state = 'CA' AND description = 'Favorable';"}
{"prompt":"Identify the chemical product with the lowest sales in South Korea and its manufacturing site safety score. with given SQL schema CREATE TABLE korean_products (product_id INT, product_name TEXT, country TEXT, total_sales FLOAT, site_safety_score FLOAT); INSERT INTO korean_products (product_id, product_name, country, total_sales, site_safety_score) VALUES (1, 'Product U', 'South Korea', 45000, 85.6), (2, 'Product V', 'South Korea', 35000, 90.2), (3, 'Product W', 'South Korea', 50000, 87.8), (4, 'Product X', 'South Korea', 40000, 82.9);","completion":"SELECT product_name, total_sales, site_safety_score FROM korean_products WHERE country = 'South Korea' AND total_sales = (SELECT MIN(total_sales) FROM korean_products WHERE country = 'South Korea');"}
{"prompt":"Show the innovation progress for chemical 103 over time, including its innovation score and ranking among other chemicals? with given SQL schema CREATE TABLE innovation_scores (chemical_id INT, innovation_score INT, measurement_date DATE); INSERT INTO innovation_scores (chemical_id, innovation_score, measurement_date) VALUES (103, 65, '2019-01-01'), (103, 68, '2019-04-01'), (103, 72, '2019-07-01'), (103, 75, '2019-10-01'), (101, 60, '2019-01-01'), (101, 63, '2019-04-01'), (101, 66, '2019-07-01'), (101, 69, '2019-10-01');","completion":"SELECT innovation_score, RANK() OVER (PARTITION BY measurement_date ORDER BY innovation_score DESC) as innovation_rank FROM innovation_scores WHERE chemical_id = 103"}
{"prompt":"Update the 'safety_rating' in the 'chemicals' table to 85 for any chemical with an ID present in the 'hazardous_chemicals' table and a safety rating below 85. with given SQL schema CREATE TABLE hazardous_chemicals (chemical_id INT); CREATE TABLE chemicals (id INT, chemical_name VARCHAR(255), safety_rating INT); INSERT INTO hazardous_chemicals (chemical_id) VALUES (1), (3), (5); INSERT INTO chemicals (id, chemical_name, safety_rating) VALUES (1, 'H2O', 80), (2, 'CO2', 70), (3, 'N2', 60), (4, 'O2', 95), (5, 'F2', 75);","completion":"UPDATE chemicals SET safety_rating = 85 WHERE id IN (SELECT chemical_id FROM hazardous_chemicals) AND safety_rating < 85;"}
{"prompt":"What is the total climate finance provided to Indigenous communities for climate communication initiatives between 2015 and 2020? with given SQL schema CREATE TABLE climate_finance (year INT, community VARCHAR(50), initiative VARCHAR(50), amount FLOAT); INSERT INTO climate_finance (year, community, initiative, amount) VALUES (2015, 'Indigenous Community 1', 'climate communication', 75000);","completion":"SELECT SUM(amount) FROM climate_finance WHERE initiative = 'climate communication' AND community LIKE '%Indigenous%' AND year BETWEEN 2015 AND 2020;"}
{"prompt":"What is the total number of vaccinations administered in each province? with given SQL schema CREATE TABLE Vaccinations (Province VARCHAR(50), Vaccinations INT); INSERT INTO Vaccinations (Province, Vaccinations) VALUES ('Alberta', 1000000), ('British Columbia', 1200000), ('Ontario', 2000000);","completion":"SELECT Province, SUM(Vaccinations) FROM Vaccinations GROUP BY Province;"}
{"prompt":"What is the average number of funding rounds for companies in the fintech sector, founded by entrepreneurs over the age of 40? with given SQL schema CREATE TABLE companies (company_id INT, company_name TEXT, industry TEXT, founding_year INT, founder_age INT); INSERT INTO companies (company_id, company_name, industry, founding_year, founder_age) VALUES (1, 'Fintech40', 'Fintech', 2017, 45); CREATE TABLE funding_records (funding_id INT, company_id INT, amount INT, round_number INT); INSERT INTO funding_records (funding_id, company_id, amount, round_number) VALUES (1, 1, 400000, 1);","completion":"SELECT AVG(fr.round_number) FROM companies c JOIN funding_records fr ON c.company_id = fr.company_id WHERE c.industry = 'Fintech' AND c.founder_age > 40;"}
{"prompt":"Determine the top 3 crops with the highest total quantity harvested by farmers in each country in 2021. with given SQL schema CREATE TABLE Farmers (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO Farmers (id, name, location) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'); CREATE TABLE Crops (id INT, farmer_id INT, crop VARCHAR(50), quantity INT, harvest_date DATE, country VARCHAR(50)); INSERT INTO Crops (id, farmer_id, crop, quantity, harvest_date, country) VALUES (1, 1, 'Corn', 100, '2021-01-01', 'USA'), (2, 1, 'Soybeans', 150, '2021-05-10', 'USA'), (3, 2, 'Wheat', 200, '2021-07-15', 'Canada');","completion":"SELECT crop, country, SUM(quantity) as total_quantity, RANK() OVER(PARTITION BY country ORDER BY SUM(quantity) DESC) as crop_rank FROM Crops WHERE harvest_date >= '2021-01-01' AND harvest_date < '2022-01-01' GROUP BY crop, country HAVING crop_rank <= 3;"}
{"prompt":"What is the average size of all marine turtles? with given SQL schema CREATE TABLE marine_turtles (id INT, name TEXT, average_size FLOAT); INSERT INTO marine_turtles (id, name, average_size) VALUES (1, 'Leatherback', 200), (2, 'Loggerhead', 90), (3, 'Green', 120), (4, 'Hawksbill', 80), (5, 'Olive Ridley', 70);","completion":"SELECT AVG(average_size) FROM marine_turtles;"}
{"prompt":"What's the name and market capitalization of digital assets in the 'Cosmos' network with a market capitalization above 300? with given SQL schema CREATE TABLE cosmos_digital_assets (id INT, name VARCHAR(255), network VARCHAR(255), market_cap DECIMAL(10, 2)); INSERT INTO cosmos_digital_assets (id, name, network, market_cap) VALUES (1, 'Asset1', 'cosmos', 400), (2, 'Asset2', 'cosmos', 350);","completion":"SELECT name, market_cap FROM cosmos_digital_assets WHERE network = 'cosmos' AND market_cap > 300;"}
{"prompt":"Which smart contract creator has the most contracts in the Gaming category? with given SQL schema CREATE TABLE smart_contracts (contract_id INT, name VARCHAR(255), creator_address VARCHAR(42), category VARCHAR(255)); INSERT INTO smart_contracts (contract_id, name, creator_address, category) VALUES (1, 'CryptoKitties', '0x1234567890123456789012345678901234567890', 'Gaming'), (2, 'Axie Infinity', '0x1234567890123456789012345678901234567890', 'Gaming'), (3, 'Decentraland', '0x987654321098765432109876543210987654321', 'Virtual Worlds');","completion":"SELECT creator_address, COUNT(*) AS contracts_created FROM smart_contracts WHERE category = 'Gaming' GROUP BY creator_address ORDER BY contracts_created DESC FETCH FIRST 1 ROW ONLY;"}
{"prompt":"Which smart contracts have the highest gas consumption? with given SQL schema CREATE TABLE smart_contracts (id INT, name VARCHAR(50), gas_consumption INT);","completion":"SELECT name, gas_consumption FROM smart_contracts ORDER BY gas_consumption DESC LIMIT 10;"}
{"prompt":"How many forest management practices are recorded in the 'tropical_forests'? with given SQL schema CREATE TABLE forest_management (id INT, forest_type VARCHAR(50), practice_count INT); INSERT INTO forest_management (id, forest_type, practice_count) VALUES (1, 'Tropical Forests', 45); INSERT INTO forest_management (id, forest_type, practice_count) VALUES (2, 'Temperate Forests', 34);","completion":"SELECT practice_count FROM forest_management WHERE forest_type = 'Tropical Forests';"}
{"prompt":"What is the average height of trees in the 'BorealForest' table? with given SQL schema CREATE TABLE BorealForest (id INT, species VARCHAR(255), diameter FLOAT, height FLOAT, volume FLOAT); INSERT INTO BorealForest (id, species, diameter, height, volume) VALUES (1, 'Pine', 2.1, 30, 8.1); INSERT INTO BorealForest (id, species, diameter, height, volume) VALUES (2, 'Spruce', 2.5, 35, 10.5);","completion":"SELECT AVG(height) FROM BorealForest;"}
{"prompt":"Find the average price of organic face creams sold in the United States with given SQL schema CREATE TABLE products (product_id INT, product_name VARCHAR(255), category VARCHAR(255), organic BOOLEAN, price DECIMAL(10, 2)); CREATE TABLE sales (sale_id INT, product_id INT, quantity INT, country VARCHAR(255)); INSERT INTO products (product_id, product_name, category, organic, price) VALUES (1, 'Organic Face Cream', 'Face Care', true, 35.00), (2, 'Regular Face Cream', 'Face Care', false, 25.00); INSERT INTO sales (sale_id, product_id, quantity, country) VALUES (1, 1, 50, 'USA'), (2, 2, 75, 'USA');","completion":"SELECT AVG(products.price) FROM products JOIN sales ON products.product_id = sales.product_id WHERE products.organic = true AND sales.country = 'USA' AND category = 'Face Care';"}
{"prompt":"List all products with a rating lower than the average rating for all products, ordered by rating in ascending order. with given SQL schema CREATE TABLE products (product_id INT, name VARCHAR(255), category VARCHAR(255), rating FLOAT);","completion":"SELECT * FROM products WHERE rating < (SELECT AVG(rating) FROM products) ORDER BY rating ASC;"}
{"prompt":"What is the minimum price of cruelty-free skincare products sold in Italy? with given SQL schema CREATE TABLE skincare_sales(product_name TEXT, price DECIMAL(5,2), is_cruelty_free BOOLEAN, country TEXT); INSERT INTO skincare_sales VALUES ('Cleanser', 10.99, true, 'Italy'); INSERT INTO skincare_sales VALUES ('Toner', 8.99, true, 'Italy'); INSERT INTO skincare_sales VALUES ('Serum', 15.99, false, 'Italy');","completion":"SELECT MIN(price) FROM skincare_sales WHERE is_cruelty_free = true AND country = 'Italy';"}
{"prompt":"Find the number of contracts awarded to company 'ABC Corp' in the year 2020 with given SQL schema CREATE TABLE contracts (contract_id INT, contract_award_date DATE, company_name VARCHAR(255)); INSERT INTO contracts (contract_id, contract_award_date, company_name) VALUES (1, '2020-01-01', 'ABC Corp'); INSERT INTO contracts (contract_id, contract_award_date, company_name) VALUES (2, '2019-01-01', 'XYZ Inc');","completion":"SELECT COUNT(*) FROM contracts WHERE company_name = 'ABC Corp' AND YEAR(contract_award_date) = 2020;"}
{"prompt":"What is the average transaction value in the last week, split by product category and customer demographics? with given SQL schema CREATE TABLE transactions (transaction_id INT, customer_id INT, product_id INT, category_id INT, transaction_date DATE, amount DECIMAL(10,2)); CREATE TABLE customers (customer_id INT, age INT, gender VARCHAR(10), location VARCHAR(255)); CREATE TABLE products (product_id INT, name VARCHAR(255), category_id INT);","completion":"SELECT c.age, c.gender, p.category_id, AVG(t.amount) as avg_transaction_value FROM transactions t INNER JOIN customers c ON t.customer_id = c.customer_id INNER JOIN products p ON t.product_id = p.product_id WHERE t.transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY c.age, c.gender, p.category_id;"}
{"prompt":"What is the total number of ports by region? with given SQL schema CREATE TABLE if not exists ports (id INT, name VARCHAR(255), country VARCHAR(255), region VARCHAR(255)); INSERT INTO ports (id, name, country, region) VALUES (1, 'Port of Los Angeles', 'USA', 'North America'); INSERT INTO ports (id, name, country, region) VALUES (2, 'Port of Rotterdam', 'Netherlands', 'Europe'); CREATE VIEW ports_by_region AS SELECT region, COUNT(*) as total FROM ports GROUP BY region;","completion":"SELECT * FROM ports_by_region;"}
{"prompt":"What is the total number of songs released by each artist? with given SQL schema CREATE TABLE Songs (song_id INT, release_date DATE, artist_name VARCHAR(255), song_title VARCHAR(255)); INSERT INTO Songs (song_id, release_date, artist_name, song_title) VALUES (1, '2020-01-01', 'Arijit Singh', 'Tum Hi Ho'), (2, '2019-12-31', 'Billie Eilish', 'Bad Guy'), (3, '2020-02-14', 'Taylor Swift', 'Love Story');","completion":"SELECT artist_name, COUNT(song_id) as total_songs FROM Songs GROUP BY artist_name;"}
{"prompt":"Create a table named 'Donations' with given SQL schema CREATE TABLE Donations( id INT PRIMARY KEY AUTO_INCREMENT, donor_name VARCHAR(255), donation_amount DECIMAL(10, 2), donation_date DATE)","completion":"CREATE TABLE Donations( id INT PRIMARY KEY AUTO_INCREMENT, donor_name VARCHAR(255), donation_amount DECIMAL(10, 2), donation_date DATE)"}
{"prompt":"What is the maximum donation amount for donors from India? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName TEXT, Country TEXT); INSERT INTO Donors (DonorID, DonorName, Country) VALUES (1, 'John Doe', 'India'), (2, 'Jane Smith', 'Canada');   CREATE TABLE Donations (DonationID INT, DonorID INT, Amount DECIMAL); INSERT INTO Donations (DonationID, DonorID, Amount) VALUES (1, 1, 500), (2, 1, 250), (3, 2, 300);","completion":"SELECT MAX(Donations.Amount) FROM Donors JOIN Donations ON Donors.DonorID = Donations.DonorID WHERE Donors.Country = 'India';"}
{"prompt":"What is the maximum donation amount received from a single donor in a month, and how many times did they donate that month? with given SQL schema CREATE TABLE donations (donor_id INT, donation_date DATE, donation_amount FLOAT); INSERT INTO donations (donor_id, donation_date, donation_amount) VALUES (1, '2021-03-05', 500.00), (1, '2021-03-15', 250.00), (2, '2021-03-25', 1000.00), (3, '2021-03-30', 150.00);","completion":"SELECT MAX(donation_amount) AS max_donation, COUNT(*) AS donation_count FROM donations WHERE MONTH(donation_date) = 3 GROUP BY donor_id HAVING max_donation = (SELECT MAX(donation_amount) FROM donations WHERE MONTH(donation_date) = 3);"}
{"prompt":"What is the total budget allocated to programs with a high community impact score? with given SQL schema CREATE TABLE programs (id INT, name TEXT, community_impact_score INT, budget REAL); INSERT INTO programs (id, name, community_impact_score, budget) VALUES (100, 'Education', 8, 50000), (200, 'Healthcare', 5, 75000), (300, 'Environment', 10, 60000);","completion":"SELECT SUM(budget) FROM programs WHERE community_impact_score >= 8;"}
{"prompt":"What is the total number of points scored by the LA Lakers in the 2020 NBA season? with given SQL schema CREATE TABLE team_points (id INT, team VARCHAR(50), sport VARCHAR(20), season VARCHAR(10), points INT);","completion":"SELECT SUM(points) FROM team_points WHERE team = 'LA Lakers' AND sport = 'NBA' AND season = '2020';"}
{"prompt":"List the top 3 donor names and their total donation amounts for the 'Education' sector in the 'Americas' region for the year 2019, ordered by the donation amount in descending order. with given SQL schema CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(255), donation_amount INT, sector VARCHAR(255), region VARCHAR(255), donation_date DATE); INSERT INTO Donors (donor_id, donor_name, donation_amount, sector, region, donation_date) VALUES (1, 'DonorB', 125000, 'Education', 'Americas', '2019-01-01');","completion":"SELECT donor_name, SUM(donation_amount) AS total_donation FROM Donors WHERE sector = 'Education' AND region = 'Americas' AND donation_date >= '2019-01-01' AND donation_date < '2020-01-01' GROUP BY donor_name ORDER BY total_donation DESC LIMIT 3;"}
{"prompt":"Update the salaries of developers who work on accessibility projects to be 10% higher with given SQL schema CREATE TABLE developers (id INT, name VARCHAR(50), salary FLOAT, project VARCHAR(50));   INSERT INTO developers (id, name, salary, project) VALUES (1, 'Alice', 80000.0, 'Accessibility');   INSERT INTO developers (id, name, salary, project) VALUES (2, 'Bob', 85000.0, 'Machine Learning');","completion":"UPDATE developers SET salary = salary * 1.1 WHERE project = 'Accessibility';"}
{"prompt":"How many accessible metro stations are there in Paris? with given SQL schema CREATE TABLE MetroStations (StationID int, Accessible bit); INSERT INTO MetroStations (StationID, Accessible) VALUES (1, 1), (2, 1), (3, 0);","completion":"SELECT COUNT(*) FROM MetroStations WHERE Accessible = 1;"}
{"prompt":"What is the earliest and latest trip_start_time for route 106? with given SQL schema CREATE TABLE trips (id INT, route_id INT, trip_start_time TIMESTAMP, trip_end_time TIMESTAMP, passengers INT); INSERT INTO trips (id, route_id, trip_start_time, trip_end_time, passengers) VALUES (3, 106, '2022-02-01 06:00:00', '2022-02-01 07:00:00', 50), (4, 106, '2022-02-01 08:00:00', '2022-02-01 09:00:00', 55);","completion":"SELECT route_id, MIN(trip_start_time) as earliest_trip_start_time, MAX(trip_start_time) as latest_trip_start_time FROM trips WHERE route_id = 106;"}
{"prompt":"Insert new records of fair labor practices for a specific factory. with given SQL schema CREATE TABLE fair_labor_practices (factory_id INT PRIMARY KEY, practice_date DATE, hours_worked INT, overtime_hours INT);","completion":"INSERT INTO fair_labor_practices (factory_id, practice_date, hours_worked, overtime_hours) VALUES (123, '2022-06-01', 8, 0), (123, '2022-06-02', 8, 0), (123, '2022-06-03', 8, 0);"}
{"prompt":"What is the maximum wage in factories, by country, for the current year? with given SQL schema CREATE SCHEMA ethical_fashion; CREATE TABLE factories (factory_id INT, country VARCHAR(255), wage FLOAT, year INT); INSERT INTO factories VALUES (1,'USA',9.0,2022),(2,'USA',9.5,2021),(3,'USA',8.5,2020),(4,'Canada',12.0,2022),(5,'Canada',11.5,2021),(6,'Canada',10.5,2020);","completion":"SELECT country, MAX(wage) FROM ethical_fashion.factories WHERE year = 2022 GROUP BY country;"}
{"prompt":"What is the minimum CO2 emissions per unit of sustainable material for brands operating in Spain? with given SQL schema CREATE TABLE brands (brand_id INT, brand_name TEXT, country TEXT); INSERT INTO brands (brand_id, brand_name, country) VALUES (1, 'EcoBrand', 'Spain'), (2, 'GreenFashion', 'France'), (5, 'SpanishEthicalFashion', 'Spain'); CREATE TABLE material_usage (brand_id INT, material_type TEXT, quantity INT, co2_emissions INT); INSERT INTO material_usage (brand_id, material_type, quantity, co2_emissions) VALUES (1, 'recycled_polyester', 1200, 2000), (1, 'organic_cotton', 800, 1000), (5, 'recycled_polyester', 1800, 3000);","completion":"SELECT MIN(mu.co2_emissions \/ mu.quantity) AS min_co2_emissions FROM brands b JOIN material_usage mu ON b.brand_id = mu.brand_id WHERE b.country = 'Spain';"}
{"prompt":"Who are the top 5 suppliers of sustainable materials? with given SQL schema CREATE TABLE Suppliers (supplierID INT, name VARCHAR(50), material VARCHAR(20), sustainabilityScore INT); INSERT INTO Suppliers (supplierID, name, material, sustainabilityScore) VALUES (1, 'GreenFibers', 'Organic Cotton', 90), (2, 'EcoFabrics', 'Recycled Polyester', 85), (3, 'SustainableTextiles', 'Hemp', 95), (4, 'FairTradeFibers', 'Organic Cotton', 88), (5, 'RecycledMaterialsInc', 'Recycled Denim', 92);","completion":"SELECT name, sustainabilityScore FROM Suppliers ORDER BY sustainabilityScore DESC LIMIT 5;"}
{"prompt":"How many customers have a credit card in the Kiva Community Credit Union? with given SQL schema CREATE TABLE credit_cards (customer_id INT, card_type VARCHAR(50)); INSERT INTO credit_cards (customer_id, card_type) VALUES (1, 'Platinum'), (2, 'Gold'), (3, 'Platinum'), (4, 'Silver');","completion":"SELECT COUNT(*) FROM credit_cards WHERE card_type IN ('Platinum', 'Gold');"}
{"prompt":"What is the average financial wellbeing score for customers in Europe? with given SQL schema CREATE TABLE financial_wellbeing_eu (id INT, customer_id INT, country VARCHAR(255), score INT); INSERT INTO financial_wellbeing_eu (id, customer_id, country, score) VALUES (1, 3001, 'Germany', 85), (2, 3002, 'France', 80), (3, 3003, 'UK', 90);","completion":"SELECT AVG(score) FROM financial_wellbeing_eu WHERE country IN ('Germany', 'France', 'UK');"}
{"prompt":"Find the total number of volunteers and the number of volunteers who have completed at least one activity. with given SQL schema CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT); INSERT INTO volunteers (volunteer_id, volunteer_name) VALUES (1, 'Alice'); INSERT INTO volunteers (volunteer_id, volunteer_name) VALUES (2, 'Bob'); INSERT INTO volunteers (volunteer_id, volunteer_name) VALUES (3, 'Charlie'); CREATE TABLE volunteer_activities (volunteer_id INT, activity_id INT); INSERT INTO volunteer_activities (volunteer_id, activity_id) VALUES (1, 1); INSERT INTO volunteer_activities (volunteer_id, activity_id) VALUES (1, 2); INSERT INTO volunteer_activities (volunteer_id, activity_id) VALUES (2, 3);","completion":"SELECT COUNT(DISTINCT volunteer_id) as total_volunteers, COUNT(DISTINCT volunteer_id) - COUNT(DISTINCT CASE WHEN activity_id IS NOT NULL THEN volunteer_id END) as completed_activities FROM volunteers LEFT JOIN volunteer_activities ON volunteers.volunteer_id = volunteer_activities.volunteer_id;"}
{"prompt":"What is the average donation per donor in India? with given SQL schema CREATE TABLE donations (donor_id INT, donation_amount DECIMAL(10, 2), donation_date DATE, country TEXT); INSERT INTO donations VALUES (1, 50.00, '2021-05-15', 'India'), (2, 100.00, '2021-06-10', 'India'), (3, 25.00, '2021-04-01', 'India');","completion":"SELECT AVG(donation_amount) FROM donations WHERE country = 'India';"}
{"prompt":"Identify the number of genetic research projects in each country. with given SQL schema CREATE SCHEMA if not exists genetics;CREATE TABLE if not exists genetics.projects (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO genetics.projects (id, name, country) VALUES (1, 'ProjectX', 'UK'), (2, 'ProjectY', 'Germany'), (3, 'ProjectZ', 'UK'), (4, 'ProjectA', 'USA'), (5, 'ProjectB', 'France');","completion":"SELECT country, COUNT(*) FROM genetics.projects GROUP BY country;"}
{"prompt":"What is the average budget allocated per department for the years 2021 and 2022? with given SQL schema CREATE TABLE Department (id INT, name VARCHAR(255), budget FLOAT, year INT); INSERT INTO Department (id, name, budget, year) VALUES (1, 'Education', 5000000, 2021), (2, 'Healthcare', 7000000, 2021), (3, 'Transportation', 8000000, 2021), (4, 'Education', 6000000, 2022), (5, 'Healthcare', 8000000, 2022), (6, 'Transportation', 9000000, 2022);","completion":"SELECT AVG(budget) FROM Department WHERE year IN (2021, 2022);"}
{"prompt":"Which representatives have not sponsored any bills, displayed in ascending order of their IDs? with given SQL schema CREATE TABLE government_representatives (rep_id INT, rep_name TEXT, sponsored_bills INT); INSERT INTO government_representatives (rep_id, rep_name, sponsored_bills) VALUES (1, 'Representative A', 0), (2, 'Representative B', 3), (3, 'Representative C', 0), (4, 'Representative D', 2), (5, 'Representative E', 1);","completion":"SELECT rep_name FROM government_representatives WHERE sponsored_bills = 0 ORDER BY rep_id ASC;"}
{"prompt":"Delete all grant records with a budget over $100,000. with given SQL schema CREATE TABLE grants (grant_id INT, title VARCHAR(50), budget INT); INSERT INTO grants VALUES (1, 'Research Grant 1', 50000); INSERT INTO grants VALUES (2, 'Research Grant 2', 120000); INSERT INTO grants VALUES (3, 'Research Grant 3', 75000);","completion":"DELETE FROM grants WHERE budget > 100000;"}
{"prompt":"Show the number of unique students who have enrolled in the Data Science program in the last 3 years, by year. with given SQL schema CREATE TABLE students (id INT, name VARCHAR(100), enrollment_date DATE);","completion":"SELECT YEAR(enrollment_date) AS enrollment_year, COUNT(DISTINCT id) AS unique_students FROM students WHERE enrollment_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) AND program = 'Data Science' GROUP BY YEAR(enrollment_date);"}
{"prompt":"What is the average number of research grants received by faculty members in the Engineering department in the last 3 years? with given SQL schema CREATE TABLE faculty_grants (id INT, name VARCHAR(50), department VARCHAR(50), grants_received INT, grant_year INT);","completion":"SELECT AVG(grants_received) FROM faculty_grants WHERE department = 'Engineering' AND grant_year BETWEEN YEAR(CURRENT_DATE) - 3 AND YEAR(CURRENT_DATE);"}
{"prompt":"What is the average research grant amount awarded to professors in the Music department who have published at least one paper? with given SQL schema CREATE TABLE department (name VARCHAR(255), id INT);CREATE TABLE professor (name VARCHAR(255), department_id INT, grant_amount DECIMAL(10,2), publication_year INT);","completion":"SELECT AVG(grant_amount) FROM professor WHERE department_id IN (SELECT id FROM department WHERE name = 'Music') AND publication_year IS NOT NULL;"}
{"prompt":"What is the total amount of research grants awarded to graduate students from underrepresented communities in the last 5 years, partitioned by their home departments? with given SQL schema CREATE TABLE grad_students (student_id INT, name VARCHAR(50), home_dept VARCHAR(50), underrepresented_community BOOLEAN); CREATE TABLE research_grants (grant_id INT, student_id INT, grant_amount DECIMAL(10, 2), grant_date DATE);","completion":"SELECT home_dept, SUM(grant_amount) FROM research_grants rg JOIN grad_students gs ON rg.student_id = gs.student_id WHERE gs.underrepresented_community = TRUE AND rg.grant_date >= DATEADD(year, -5, GETDATE()) GROUP BY home_dept;"}
{"prompt":"How many smart city projects were completed in the US and Canada? with given SQL schema CREATE TABLE smart_city_projects (id INT, name TEXT, country TEXT);","completion":"SELECT COUNT(*) FROM smart_city_projects WHERE country IN ('USA', 'Canada');"}
{"prompt":"What is the total number of Green buildings in the United States certified by BREEAM? with given SQL schema CREATE TABLE green_buildings (id INT, project_name VARCHAR(100), certifier VARCHAR(50), country VARCHAR(50)); INSERT INTO green_buildings (id, project_name, certifier, country) VALUES (1, 'Eco Tower', 'LEED', 'US'), (2, 'Green Heights', 'BREEAM', 'UK'), (3, 'Sustainable Plaza', 'GRIHA', 'India'), (4, 'Green Skyscraper', 'BREEAM', 'US');","completion":"SELECT COUNT(*) FROM green_buildings WHERE certifier = 'BREEAM' AND country = 'US';"}
{"prompt":"What is the average rating of hotels in the US that have a virtual tour? with given SQL schema CREATE TABLE hotels (id INT, name TEXT, country TEXT, rating FLOAT, virtual_tour BOOLEAN); INSERT INTO hotels (id, name, country, rating, virtual_tour) VALUES (1, 'Hotel A', 'USA', 4.5, true), (2, 'Hotel B', 'USA', 3.2, false), (3, 'Hotel C', 'USA', 4.7, true);","completion":"SELECT AVG(rating) FROM hotels WHERE country = 'USA' AND virtual_tour = true;"}
{"prompt":"Delete all art pieces created before 1950 and after 2000 with given SQL schema CREATE TABLE ArtPieces (id INT, title VARCHAR(50), galleryId INT, year INT, value INT, style VARCHAR(20)); INSERT INTO ArtPieces (id, title, galleryId, year, value, style) VALUES (1, 'Piece 1', 1, 2000, 10000, 'Impressionism'), (2, 'Piece 2', 1, 2010, 15000, 'Surrealism'), (3, 'Piece 3', 2, 2020, 20000, 'Cubism'), (4, 'Piece 4', 3, 1990, 5000, 'Surrealism'), (5, 'Piece 5', NULL, 1984, 25000, 'Impressionism'), (6, 'Piece 6', NULL, 2014, 30000, 'Abstract'), (7, 'Piece 7', NULL, 1964, 15000, 'Pop Art');","completion":"DELETE FROM ArtPieces WHERE year < 1950 OR year > 2000;"}
{"prompt":"Delete all paintings created by the artist with ArtistID 2. with given SQL schema CREATE TABLE Artists (ArtistID INT, Name VARCHAR(50), Nationality VARCHAR(50)); INSERT INTO Artists (ArtistID, Name, Nationality) VALUES (1, 'Vincent van Gogh', 'Dutch'); INSERT INTO Artists (ArtistID, Name, Nationality) VALUES (2, 'Pablo Picasso', 'Spanish'); CREATE TABLE Paintings (PaintingID INT, Title VARCHAR(50), ArtistID INT, YearCreated INT); INSERT INTO Paintings (PaintingID, Title, ArtistID, YearCreated) VALUES (1, 'The Starry Night', 1, 1889); INSERT INTO Paintings (PaintingID, Title, ArtistID, YearCreated) VALUES (2, 'Guernica', 2, 1937);","completion":"DELETE FROM Paintings WHERE ArtistID = 2;"}
{"prompt":"What is the total quantity of organic ingredients used in vegan dishes? with given SQL schema CREATE TABLE ingredient (ingredient_id INT, ingredient_name TEXT, organic_flag BOOLEAN); INSERT INTO ingredient (ingredient_id, ingredient_name, organic_flag) VALUES (1, 'Spinach', true), (2, 'Chicken', false); CREATE TABLE recipe (recipe_id INT, dish_id INT, ingredient_id INT, quantity INT); INSERT INTO recipe (recipe_id, dish_id, ingredient_id, quantity) VALUES (1, 1, 1, 2), (2, 2, 2, 1); CREATE TABLE dish (dish_id INT, dish_name TEXT, vegan_flag BOOLEAN, vendor_id INT); INSERT INTO dish (dish_id, dish_name, vegan_flag, vendor_id) VALUES (1, 'Vegan Salad', true, 1), (2, 'Grilled Chicken', false, 2);","completion":"SELECT i.ingredient_name, SUM(r.quantity) as total_quantity FROM ingredient i JOIN recipe r ON i.ingredient_id = r.ingredient_id JOIN dish d ON r.dish_id = d.dish_id WHERE d.vegan_flag = true AND i.organic_flag = true GROUP BY i.ingredient_name;"}
{"prompt":"Find the total production of copper in Chile for the current year. with given SQL schema CREATE TABLE mineral_production (id INT, mine_id INT, location TEXT, year INT, production INT); INSERT INTO mineral_production (id, mine_id, location, year, production) VALUES (1, 1, 'Chile', 2022, 5000); INSERT INTO mineral_production (id, mine_id, location, year, production) VALUES (2, 2, 'Chile', 2021, 6000);","completion":"SELECT SUM(production) FROM mineral_production WHERE location = 'Chile' AND year = YEAR(CURRENT_DATE);"}
{"prompt":"What is the maximum number of safety violations by a single worker in the past year? with given SQL schema CREATE TABLE worker (id INT, name TEXT, department TEXT, hire_date DATE); CREATE TABLE violation (id INT, worker_id INT, date DATE, description TEXT);","completion":"SELECT MAX(violation_count) as max_violations FROM (SELECT worker.name, COUNT(violation.id) as violation_count FROM worker INNER JOIN violation ON worker.id = violation.worker_id WHERE violation.date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE GROUP BY worker.name) as subquery;"}
{"prompt":"What is the total donation amount for each city? with given SQL schema CREATE TABLE Donors (DonorID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), DonationAmount DECIMAL(10,2)); CREATE TABLE Grants (GrantID INT, DonorID INT, NonprofitID INT, GrantAmount DECIMAL(10,2), Date DATE);","completion":"SELECT City, SUM(DonationAmount) FROM Donors D INNER JOIN Grants G ON D.DonorID = G.DonorID GROUP BY City;"}
{"prompt":"Find the top 5 games by rating with given SQL schema CREATE TABLE games (game_id INT PRIMARY KEY, name VARCHAR(50), genre VARCHAR(50), rating DECIMAL(3,2));","completion":"SELECT * FROM (SELECT name, rating, ROW_NUMBER() OVER (ORDER BY rating DESC) as rn FROM games) t WHERE rn <= 5;"}
{"prompt":"Decrease agricultural automation trends data for sensor_id 14 by 10% recorded before '2022-03-15' with given SQL schema CREATE TABLE automation_trends (sensor_id INT, trend_date DATE, automation_level INT); INSERT INTO automation_trends (sensor_id, trend_date, automation_level) VALUES (14, '2022-03-10', 75), (14, '2022-03-12', 80);","completion":"WITH updated_data AS (UPDATE automation_trends SET automation_level = automation_level - (automation_level * 0.1) WHERE sensor_id = 14 AND trend_date < '2022-03-15' RETURNING *) SELECT * FROM updated_data;"}
{"prompt":"How many citizen feedback submissions were made for infrastructure services in New York City in the month of March in the year 2022? with given SQL schema CREATE TABLE feedback (submission_id INT, submission_date DATE, service VARCHAR(50), city VARCHAR(50)); INSERT INTO feedback (submission_id, submission_date, service, city) VALUES (1, '2022-03-01', 'Infrastructure', 'New York City'), (2, '2022-03-10', 'Infrastructure', 'New York City'), (3, '2022-03-20', 'Transportation', 'New York City');","completion":"SELECT COUNT(*) FROM feedback WHERE service = 'Infrastructure' AND city = 'New York City' AND EXTRACT(MONTH FROM submission_date) = 3 AND EXTRACT(YEAR FROM submission_date) = 2022;"}
{"prompt":"What is the maximum rent for sustainable buildings in San Francisco? with given SQL schema CREATE TABLE Rents (RentID int, BuildingID int, Rent int, City varchar(20), Sustainable varchar(5)); CREATE TABLE Buildings (BuildingID int, Certification varchar(20)); INSERT INTO Rents (RentID, BuildingID, Rent, City, Sustainable) VALUES (1, 1, 2000, 'San Francisco', 'Yes'); INSERT INTO Buildings (BuildingID, Certification) VALUES (1, 'Green');","completion":"SELECT MAX(Rent) FROM Rents INNER JOIN Buildings ON Rents.BuildingID = Buildings.BuildingID WHERE Rents.City = 'San Francisco' AND Buildings.Certification IS NOT NULL;"}
{"prompt":"How many sustainable sourcing audits were conducted in 'Florida'? with given SQL schema CREATE TABLE sourcing_audits (restaurant_name TEXT, location TEXT, audit_date DATE); INSERT INTO sourcing_audits (restaurant_name, location, audit_date) VALUES ('Restaurant A', 'Florida', '2021-05-01'), ('Restaurant B', 'California', '2021-07-15'), ('Restaurant C', 'Florida', '2021-08-05');","completion":"SELECT COUNT(*) FROM sourcing_audits WHERE location = 'Florida';"}
{"prompt":"What is the percentage of revenue by menu category for the past month? with given SQL schema CREATE TABLE restaurant_revenue (date DATE, menu_category VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO restaurant_revenue (date, menu_category, revenue) VALUES ('2022-01-01', 'Appetizers', 500.00), ('2022-01-01', 'Entrees', 1000.00), ('2022-01-01', 'Desserts', 600.00), ('2022-01-02', 'Appetizers', 550.00), ('2022-01-02', 'Entrees', 1100.00), ('2022-01-02', 'Desserts', 650.00);","completion":"SELECT menu_category, SUM(revenue) as total_revenue, (SUM(revenue) \/ (SELECT SUM(revenue) FROM restaurant_revenue WHERE date BETWEEN '2022-01-01' AND '2022-01-31') * 100.00) as percentage_revenue FROM restaurant_revenue WHERE date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY menu_category;"}
{"prompt":"List all satellites launched by year and country in the satellite_launches_by_year_country table? with given SQL schema CREATE TABLE satellite_launches_by_year_country (id INT, year INT, country VARCHAR(30), num_satellites INT); INSERT INTO satellite_launches_by_year_country (id, year, country, num_satellites) VALUES (1, 1958, 'USA', 1), (2, 1960, 'USA', 2), (3, 1962, 'USA', 6), (4, 1977, 'USSR', 3), (5, 2000, 'Russia', 12), (6, 2020, 'USA', 93), (7, 2021, 'China', 48);","completion":"SELECT year, country, SUM(num_satellites) FROM satellite_launches_by_year_country GROUP BY year, country;"}
{"prompt":"What is the minimum and maximum speed of spacecraft launched by SpaceX? with given SQL schema CREATE TABLE spacecraft (id INT, name VARCHAR(255), launch_company VARCHAR(255), launch_date DATE, max_speed FLOAT);","completion":"SELECT MIN(max_speed) as min_speed, MAX(max_speed) as max_speed FROM spacecraft WHERE launch_company = 'SpaceX';"}
{"prompt":"Which spacecraft models have been used for missions to Jupiter? with given SQL schema CREATE TABLE Spacecraft (SpacecraftID INT, Name VARCHAR(50), Manufacturer VARCHAR(50)); CREATE TABLE SpacecraftMissions (MissionID INT, SpacecraftID INT, Destination VARCHAR(50));","completion":"SELECT Spacecraft.Name FROM Spacecraft INNER JOIN SpacecraftMissions ON Spacecraft.SpacecraftID = SpacecraftMissions.SpacecraftID WHERE SpacecraftMissions.Destination = 'Jupiter';"}
{"prompt":"What is the average time to resolution for high severity incidents in the energy sector? with given SQL schema CREATE TABLE incidents (incident_id INT, incident_severity VARCHAR(255), incident_sector VARCHAR(255), incident_resolution_time INT);","completion":"SELECT AVG(incident_resolution_time) FROM incidents WHERE incident_severity = 'High' AND incident_sector = 'Energy';"}
{"prompt":"Which countries have the most vulnerabilities reported in the last month? with given SQL schema CREATE TABLE vulnerabilities (id INT, country VARCHAR(50), reported_date DATE, severity INT); INSERT INTO vulnerabilities (id, country, reported_date, severity) VALUES (1, 'USA', '2022-01-01', 5), (2, 'Canada', '2022-01-05', 3), (3, 'Mexico', '2022-01-10', 7); CREATE TABLE countries (id INT, name VARCHAR(50)); INSERT INTO countries (id, name) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'), (4, 'Brazil');","completion":"SELECT c.name, COUNT(v.id) as num_vulnerabilities FROM countries c LEFT JOIN vulnerabilities v ON c.name = v.country AND v.reported_date >= DATEADD(month, -1, GETDATE()) GROUP BY c.name ORDER BY num_vulnerabilities DESC;"}
{"prompt":"Delete all records from the inventory table where the quantity is less than 10 with given SQL schema CREATE TABLE inventory (id INT, garment_id INT, quantity INT);","completion":"DELETE FROM inventory WHERE quantity < 10;"}
{"prompt":"List all underwriting departments in 'Ontario' and 'Quebec' with their count? with given SQL schema CREATE TABLE underwriting (id INT, department TEXT, city TEXT, province TEXT); INSERT INTO underwriting (id, department, city, province) VALUES (1, 'Department A', 'Toronto', 'ON'); INSERT INTO underwriting (id, department, city, province) VALUES (2, 'Department B', 'Montreal', 'QC'); INSERT INTO underwriting (id, department, city, province) VALUES (3, 'Department C', 'Ottawa', 'ON');","completion":"SELECT department, COUNT(*) FROM underwriting WHERE province IN ('ON', 'QC') GROUP BY department;"}
{"prompt":"What is the minimum and maximum age of policyholders who have a policy with a premium between $1500 and $5000? with given SQL schema CREATE TABLE Policyholders (PolicyholderID INT, Age INT, Premium DECIMAL(10, 2)); INSERT INTO Policyholders (PolicyholderID, Age, Premium) VALUES (1, 35, 5000), (2, 45, 1500), (3, 50, 3000), (4, 25, 2000);","completion":"SELECT MIN(Age), MAX(Age) FROM Policyholders WHERE Premium BETWEEN 1500 AND 5000;"}
{"prompt":"Which autonomous driving research studies were conducted in Japan? with given SQL schema CREATE TABLE Research (StudyID int, StudyName varchar(50), Location varchar(50)); INSERT INTO Research (StudyID, StudyName, Location) VALUES (1, 'Autonomous Driving in Cities', 'Japan'), (2, 'Impact of Autonomous Driving on Traffic', 'USA'), (3, 'Safety of Autonomous Vehicles', 'Germany');","completion":"SELECT StudyName FROM Research WHERE Location = 'Japan';"}
{"prompt":"Find the vessel with the highest average speed in the Vessel table. with given SQL schema CREATE TABLE Vessel (ID INT, Name TEXT, AverageSpeed DECIMAL); INSERT INTO Vessel (ID, Name, AverageSpeed) VALUES (1, 'VesselA', 20.5), (2, 'VesselB', 22.3), (3, 'VesselC', 18.9);","completion":"SELECT Name FROM (SELECT Name, AverageSpeed, ROW_NUMBER() OVER (ORDER BY AverageSpeed DESC) AS Rank FROM Vessel) AS RankedVessels WHERE Rank = 1;"}
{"prompt":"Insert a new record in the \"vessels\" table for a vessel named \"Mary Ann\" with id 101, built in 2015, and a gross tonnage of 1500 with given SQL schema CREATE TABLE vessels (id INT, name TEXT, build_year INT, gross_tonnage INT);","completion":"INSERT INTO vessels (id, name, build_year, gross_tonnage) VALUES (101, 'Mary Ann', 2015, 1500);"}
{"prompt":"What is the average weight of a cargo in the 'cargo_tracking' table? with given SQL schema CREATE TABLE cargo_tracking (cargo_id INT, cargo_type VARCHAR(50), weight FLOAT); INSERT INTO cargo_tracking (cargo_id, cargo_type, weight) VALUES (1, 'CargoType1', 5000), (2, 'CargoType2', 7000), (3, 'CargoType3', 6000);","completion":"SELECT AVG(weight) FROM cargo_tracking;"}
{"prompt":"What is the total cargo weight transported by each vessel in the last quarter? with given SQL schema CREATE TABLE Vessels (VesselID INT, VesselName VARCHAR(255)); INSERT INTO Vessels (VesselID, VesselName) VALUES (1, 'VesselA'), (2, 'VesselB'), (3, 'VesselC'); CREATE TABLE Cargo (CargoID INT, VesselID INT, CargoWeight INT, TransportTime TIMESTAMP); INSERT INTO Cargo (CargoID, VesselID, CargoWeight, TransportTime) VALUES (1, 1, 5000, '2022-01-01 10:00:00'), (2, 2, 7000, '2022-03-15 14:30:00'), (3, 3, 6000, '2022-04-08 08:00:00');","completion":"SELECT V.VesselName, SUM(C.CargoWeight) FROM Vessels V INNER JOIN Cargo C ON V.VesselID = C.VesselID WHERE C.TransportTime BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH) AND CURRENT_TIMESTAMP GROUP BY V.VesselName;"}
{"prompt":"What is the total number of cargo and tanker vessels in the 'fleet_inventory' table? with given SQL schema CREATE TABLE fleet_inventory (id INT, vessel_name TEXT, type TEXT, quantity INT); INSERT INTO fleet_inventory (id, vessel_name, type, quantity) VALUES (1, 'Cargo Ship 1', 'Cargo', 20), (2, 'Tanker Vessel 1', 'Tanker', 30);","completion":"SELECT SUM(quantity) FROM fleet_inventory WHERE type IN ('Cargo', 'Tanker');"}
{"prompt":"What is the earliest artwork year? with given SQL schema CREATE TABLE artworks (id INT PRIMARY KEY, title VARCHAR(255), artist VARCHAR(255), year INT);","completion":"SELECT MIN(year) FROM artworks;"}
{"prompt":"What is the average recycling rate in the state of California for the year 2020? with given SQL schema CREATE TABLE recycling_rates (state VARCHAR(20), year INT, recycling_rate FLOAT); INSERT INTO recycling_rates (state, year, recycling_rate) VALUES ('California', 2020, 55.5);","completion":"SELECT recycling_rate FROM recycling_rates WHERE state = 'California' AND year = 2020;"}
{"prompt":"What is the progress of circular economy initiatives in Southeast Asia? with given SQL schema CREATE TABLE circular_economy (country VARCHAR(255), initiative VARCHAR(255), progress FLOAT); INSERT INTO circular_economy (country, initiative, progress) VALUES ('Indonesia', 'Waste-to-Energy', 0.60), ('Singapore', 'Recycling Program', 0.85), ('Thailand', 'Circular Economy Policy', 0.55);","completion":"SELECT AVG(progress) FROM circular_economy WHERE country IN ('Indonesia', 'Singapore', 'Thailand');"}
{"prompt":"List the top 5 most prolific explainable AI researchers and their publications. with given SQL schema CREATE TABLE researcher_publications (id INT, researcher_id INT, title VARCHAR(255));","completion":"SELECT r.researcher_name, COUNT(p.title) as num_publications FROM researchers r JOIN researcher_publications rp ON r.id = rp.researcher_id JOIN publications p ON rp.id = p.id GROUP BY r.researcher_name ORDER BY num_publications DESC;"}
{"prompt":"Which AI research topics have more than 5 papers published in 2021, but do not have any papers published in the top 10 AI journals? with given SQL schema CREATE TABLE ai_topics (id INT, topic VARCHAR(100), papers INT, journal_rank INT);","completion":"SELECT topic FROM ai_topics WHERE papers > 5 AND year = 2021 AND journal_rank IS NULL;"}
{"prompt":"Show the total cost of agricultural innovation projects by implementing organization from the 'rural_development' database with given SQL schema CREATE TABLE agricultural_projects (id INT, name VARCHAR(50), cost DECIMAL(10,2), type VARCHAR(20), implementing_organization VARCHAR(50)); INSERT INTO agricultural_projects (id, name, cost, type, implementing_organization) VALUES (1, 'Precision Farming', 15000.00, 'Innovation', 'Agritech Inc.'); INSERT INTO agricultural_projects (id, name, cost, type, implementing_organization) VALUES (2, 'Vertical Farming', 22000.00, 'Innovation', 'Farming Future'); INSERT INTO agricultural_projects (id, name, cost, type, implementing_organization) VALUES (3, 'Organic Farming', 18000.00, 'Traditional', 'Cooperative Farm');","completion":"SELECT implementing_organization, SUM(cost) FROM agricultural_projects GROUP BY implementing_organization;"}
{"prompt":"Which community development initiatives were implemented in India's rural areas between 2015 and 2017, and what was their combined budget? with given SQL schema CREATE TABLE community_initiatives (initiative VARCHAR(50), country VARCHAR(50), start_year INT, end_year INT, budget FLOAT); INSERT INTO community_initiatives (initiative, country, start_year, end_year, budget) VALUES ('Rural Employment Scheme', 'India', 2015, 2017, 50000000), ('Rural Housing Scheme', 'India', 2015, 2017, 75000000);","completion":"SELECT initiative, SUM(budget) FROM community_initiatives WHERE country = 'India' AND start_year BETWEEN 2015 AND 2017 AND end_year BETWEEN 2015 AND 2017 GROUP BY initiative;"}
{"prompt":"Add a new coldwater fish species 'Trout' to fish_species table. with given SQL schema CREATE TABLE fish_species (id INT, name VARCHAR(255), species_type VARCHAR(255)); INSERT INTO fish_species (id, name, species_type) VALUES (1, 'Salmon', 'Coldwater'), (2, 'Tilapia', 'Tropical');","completion":"INSERT INTO fish_species (name, species_type) VALUES ('Trout', 'Coldwater');"}
{"prompt":"What is the maximum price per gram of hybrid strains sold in Oregon dispensaries? with given SQL schema CREATE TABLE strains (id INT, name VARCHAR(255), type VARCHAR(255));   CREATE TABLE dispensaries (id INT, name VARCHAR(255), state VARCHAR(255));   CREATE TABLE sales (id INT, strain_id INT, dispensary_id INT, price DECIMAL(10, 2), quantity INT);   INSERT INTO strains (id, name, type) VALUES (1, 'Girl Scout Cookies', 'Hybrid');   INSERT INTO dispensaries (id, name, state) VALUES (1, 'Green Mart', 'Oregon');   INSERT INTO sales (id, strain_id, dispensary_id, price, quantity) VALUES (1, 1, 1, 12.00, 100);","completion":"SELECT MAX(sales.price) FROM sales   JOIN strains ON sales.strain_id = strains.id   JOIN dispensaries ON sales.dispensary_id = dispensaries.id   WHERE strains.type = 'Hybrid' AND dispensaries.state = 'Oregon';"}
{"prompt":"What are the names and funding of mitigation projects in India that have funding greater than $500,000? with given SQL schema CREATE TABLE mitigation_projects (id INT, project_name VARCHAR(50), funding INT, country VARCHAR(50), sector VARCHAR(50)); INSERT INTO mitigation_projects (id, project_name, funding, country, sector) VALUES (1, 'Wind Farm', 1200000, 'Germany', 'Renewable Energy'); INSERT INTO mitigation_projects (id, project_name, funding, country, sector) VALUES (2, 'Solar Panel Installation', 800000, 'Spain', 'Renewable Energy'); INSERT INTO mitigation_projects (id, project_name, funding, country, sector) VALUES (3, 'Smart Grid', 600000, 'India', 'Energy Efficiency'); INSERT INTO mitigation_projects (id, project_name, funding, country, sector) VALUES (4, 'Carbon Capture', 700000, 'Canada', 'Carbon Capture');","completion":"SELECT project_name, funding FROM mitigation_projects WHERE country = 'India' AND funding > 500000;"}
{"prompt":"What is the total number of COVID-19 cases in Oceania in 2021? with given SQL schema CREATE TABLE covid (country VARCHAR(255), region VARCHAR(255), year INT, cases INT); INSERT INTO covid (country, region, year, cases) VALUES ('Country A', 'Oceania', 2021, 100), ('Country B', 'Oceania', 2021, 150);","completion":"SELECT SUM(cases) FROM covid WHERE region = 'Oceania' AND year = 2021;"}
{"prompt":"What is the maximum funding amount received by a startup founded by a person of color in the renewable energy sector? with given SQL schema CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_year INT, founder_race TEXT); INSERT INTO companies (id, name, industry, founding_year, founder_race) VALUES (1, 'SolarPioneer', 'Renewable Energy', 2018, 'African American'); INSERT INTO companies (id, name, industry, founding_year, founder_race) VALUES (2, 'WindForce', 'Renewable Energy', 2019, 'Asian'); CREATE TABLE funding (company_id INT, amount INT, funding_round TEXT); INSERT INTO funding (company_id, amount, funding_round) VALUES (1, 10000000, 'Series B'); INSERT INTO funding (company_id, amount, funding_round) VALUES (2, 7000000, 'Series A');","completion":"SELECT MAX(funding.amount) FROM companies JOIN funding ON companies.id = funding.company_id WHERE companies.industry = 'Renewable Energy' AND companies.founder_race IS NOT NULL;"}
{"prompt":"What is the total funding received by startups in the innovation sector? with given SQL schema CREATE TABLE startups(id INT, name TEXT, sector TEXT, funding FLOAT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Technology', 2000000); INSERT INTO startups VALUES (2, 'Beta Corp', 'Retail', 3000000); INSERT INTO startups VALUES (3, 'Gamma Start', 'Innovation', 5000000);","completion":"SELECT SUM(funding) FROM startups WHERE sector = 'Innovation';"}
{"prompt":"What is the total production of maize in East African indigenous food systems? with given SQL schema CREATE TABLE MaizeProduction (Location VARCHAR(20), System VARCHAR(20), Quantity FLOAT); INSERT INTO MaizeProduction (Location, System, Quantity) VALUES ('Kenya', 'Indigenous Food Systems', 12000), ('Tanzania', 'Indigenous Food Systems', 18000), ('Uganda', 'Indigenous Food Systems', 15000);","completion":"SELECT SUM(Quantity) FROM MaizeProduction WHERE Location = 'Kenya' OR Location = 'Tanzania' OR Location = 'Uganda' AND System = 'Indigenous Food Systems';"}
{"prompt":"What is the total budget allocated for accommodations and support programs in the West? with given SQL schema CREATE TABLE Accommodations (ID INT, Type VARCHAR(50), Cost FLOAT, Region VARCHAR(50)); INSERT INTO Accommodations (ID, Type, Cost, Region) VALUES (1, 'Note-taking Services', 20000.0, 'West'), (2, 'Accessible Furniture', 25000.0, 'West'); CREATE TABLE SupportPrograms (ID INT, Type VARCHAR(50), Cost FLOAT, Region VARCHAR(50)); INSERT INTO SupportPrograms (ID, Type, Cost, Region) VALUES (1, 'Assistive Technology Grant', 30000.0, 'West'), (2, 'Disability Awareness Training', 35000.0, 'West');","completion":"SELECT SUM(A.Cost) + SUM(S.Cost) FROM Accommodations A, SupportPrograms S WHERE A.Region = 'West' AND S.Region = 'West';"}
{"prompt":"List the dapps that have deployed the most smart contracts in the 'Solana' network. with given SQL schema CREATE TABLE solana_dapps (dapp_name VARCHAR(20), network VARCHAR(20), smart_contracts INT); INSERT INTO solana_dapps (dapp_name, network, smart_contracts) VALUES ('Serum', 'Solana', 50), ('Raydium', 'Solana', 60), ('Orca', 'Solana', 70);","completion":"SELECT dapp_name, network, smart_contracts, RANK() OVER (ORDER BY smart_contracts DESC) as rank FROM solana_dapps WHERE network = 'Solana';"}
{"prompt":"What is the total value of all transactions in the 'stablecoin' category? with given SQL schema CREATE TABLE transactions (id INT, tx_type VARCHAR(10), tx_category VARCHAR(30), tx_amount FLOAT, tx_time TIMESTAMP); INSERT INTO transactions (id, tx_type, tx_category, tx_amount, tx_time) VALUES (9, 'transfer', 'stablecoin', 100.0, '2022-01-05 10:00:00'); INSERT INTO transactions (id, tx_type, tx_category, tx_amount, tx_time) VALUES (10, 'exchange', 'crypto', 200.0, '2022-01-06 11:00:00');","completion":"SELECT SUM(tx_amount) as total_stablecoin_value FROM transactions WHERE tx_category = 'stablecoin';"}
{"prompt":"What is the CO2 sequestration potential for mangrove forests in 2025? with given SQL schema CREATE TABLE mangroves (id INT, year INT, sequestration FLOAT);","completion":"SELECT sequestration FROM mangroves WHERE year = 2025 AND id = (SELECT MAX(id) FROM mangroves WHERE year < 2025);"}
{"prompt":"What is the total population of all wildlife species in 2020? with given SQL schema CREATE TABLE wildlife (id INT, species VARCHAR(255), year INT, population INT); INSERT INTO wildlife (id, species, year, population) VALUES (1, 'Deer', 2018, 75), (2, 'Bear', 2019, 60), (3, 'Elk', 2020, 45), (4, 'Wolf', 2020, 40), (5, 'Moose', 2020, 55);","completion":"SELECT SUM(population) as total_population FROM wildlife WHERE year = 2020;"}
{"prompt":"List all unique artifact materials and their average analysis costs with given SQL schema CREATE TABLE artifact_materials (id INT, name VARCHAR(255)); CREATE TABLE artifact_analysis (id INT, artifact_material_id INT, cost FLOAT);","completion":"SELECT artifact_materials.name, AVG(artifact_analysis.cost) FROM artifact_materials"}
{"prompt":"List the number of rural hospitals in each state, excluding hospitals with less than 50 beds. with given SQL schema CREATE TABLE hospitals (hospital_id INT, hospital_name TEXT, beds INT, rural BOOLEAN, state_id INT); INSERT INTO hospitals (hospital_id, hospital_name, beds, rural, state_id) VALUES (1, 'Hospital A', 100, true, 1); CREATE TABLE states (state_id INT, state TEXT); INSERT INTO states (state_id, state) VALUES (1, 'Alabama'), (2, 'Alaska');","completion":"SELECT states.state, COUNT(hospitals.hospital_id) hospital_count FROM hospitals JOIN states ON hospitals.state_id = states.state_id WHERE hospitals.rural = true AND hospitals.beds >= 50 GROUP BY states.state;"}
{"prompt":"List the top 3 states with highest prevalence of diabetes in rural areas? with given SQL schema USE rural_healthcare; CREATE TABLE DiabetesPrevalence (id INT, state VARCHAR(100), rural BOOLEAN, prevalence DECIMAL(5,2)); INSERT INTO DiabetesPrevalence VALUES (1, 'California', true, 9.5), (2, 'Texas', true, 11.2), (3, 'Florida', true, 8.8), (4, 'California', false, 7.8), (5, 'Texas', false, 9.1), (6, 'Florida', false, 7.3); CREATE VIEW DiabetesPrevalence_rural AS SELECT * FROM DiabetesPrevalence WHERE rural = true;","completion":"SELECT state, AVG(prevalence) as avg_prevalence FROM DiabetesPrevalence_rural GROUP BY state ORDER BY avg_prevalence DESC LIMIT 3;"}
{"prompt":"Update the ESG score for an investment in the table. with given SQL schema CREATE TABLE investments_scores (id INT, investment_id INT, ESG_score FLOAT); INSERT INTO investments_scores (id, investment_id, ESG_score) VALUES (1, 1, 70), (2, 2, 45), (3, 3, 80), (4, 4, 60), (5, 5, 40);","completion":"UPDATE investments_scores SET ESG_score = 75 WHERE investment_id = 2;"}
{"prompt":"What are the cybersecurity policies of countries in the European Union? with given SQL schema CREATE TABLE cybersecurity_policies (id INT, country VARCHAR(50), policy TEXT);","completion":"SELECT * FROM cybersecurity_policies WHERE country LIKE 'EU%';"}
{"prompt":"List the unique artists who have released songs in the rock genre. with given SQL schema CREATE TABLE song_releases (song_id INT, artist_name VARCHAR(50), genre VARCHAR(20));","completion":"SELECT DISTINCT artist_name FROM song_releases WHERE genre = 'rock';"}
{"prompt":"How many employees were hired in Q1 2022 from underrepresented communities? with given SQL schema CREATE TABLE Hiring (HireID INT, EmployeeID INT, HireDate DATE, Community VARCHAR(50)); INSERT INTO Hiring (HireID, EmployeeID, HireDate, Community) VALUES (1, 5, '2022-01-15', 'LatinX'), (2, 6, '2022-02-20', 'African American'), (3, 7, '2022-03-05', 'LGBTQ+'), (4, 8, '2022-04-12', 'Women in STEM');","completion":"SELECT COUNT(*) FROM Hiring WHERE QUARTER(HireDate) = 1 AND YEAR(HireDate) = 2022 AND Community IN ('LatinX', 'African American', 'LGBTQ+', 'Women in STEM');"}
{"prompt":"Display the daily production rate for Well005 with given SQL schema CREATE TABLE wells (id INT, well_name VARCHAR(255), location VARCHAR(255), drill_year INT, company VARCHAR(255), daily_production_rate DECIMAL(5,2)); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (1, 'Well001', 'Gulf of Mexico', 2020, 'CompanyA', 100.50); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (2, 'Well002', 'North Sea', 2019, 'CompanyB', 150.25); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (3, 'Well003', 'Brazil', 2019, 'CompanyC', 200.00); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (4, 'Well004', 'Gulf of Mexico', 2018, 'CompanyX', 175.25); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (5, 'Well005', 'South China Sea', 2020, 'CompanyY', 120.00);","completion":"SELECT daily_production_rate FROM wells WHERE well_name = 'Well005';"}
{"prompt":"Which countries donated the most in 2019? with given SQL schema CREATE TABLE donors (id INT, name TEXT, country TEXT, amount_donated DECIMAL(10,2)); INSERT INTO donors","completion":"SELECT country, SUM(amount_donated) FROM donors WHERE year = 2019 GROUP BY country ORDER BY SUM(amount_donated) DESC LIMIT 3;"}
{"prompt":"What is the difference between the number of AI projects in the US and the number of AI projects in the EU? with given SQL schema CREATE SCHEMA if not exists ai_projects; CREATE TABLE if not exists ai_projects.projects (id INT PRIMARY KEY, project_name VARCHAR(255), location VARCHAR(255)); INSERT INTO ai_projects.projects (id, project_name, location) VALUES (1, 'AI Project 1', 'USA'), (2, 'AI Project 2', 'USA'), (3, 'AI Project 3', 'EU'), (4, 'AI Project 4', 'EU');","completion":"SELECT COUNT(*) - (SELECT COUNT(*) FROM ai_projects.projects WHERE location = 'EU') as diff FROM ai_projects.projects WHERE location = 'USA';"}
{"prompt":"Which subway line in Seoul has the highest ridership? with given SQL schema CREATE TABLE subway (line_id INT, city VARCHAR(50), daily_ridership INT); INSERT INTO subway (line_id, city, daily_ridership) VALUES (1, 'Seoul', 300000), (2, 'Seoul', 450000), (3, 'Tokyo', 500000), (4, 'Tokyo', 600000);","completion":"SELECT line_id, city, daily_ridership FROM (SELECT line_id, city, daily_ridership, RANK() OVER (PARTITION BY city ORDER BY daily_ridership DESC) as rnk FROM subway) tmp WHERE rnk = 1 AND city = 'Seoul';"}
{"prompt":"How many fair-trade certified garment factories are in Asia? with given SQL schema CREATE TABLE garment_factories (id INT, certification VARCHAR(20), region VARCHAR(20)); INSERT INTO garment_factories (id, certification, region) VALUES (1, 'Fair Trade', 'China'), (2, 'GOTS', 'India'), (3, 'Fair Trade', 'Vietnam');","completion":"SELECT COUNT(*) FROM garment_factories WHERE certification = 'Fair Trade' AND region = 'Asia';"}
{"prompt":"Identify the total revenue generated from circular economy practices in the year 2021 in the 'EthicalFashion' database with given SQL schema CREATE TABLE sales_2021 (sale_id INT, item_id INT, sale_price DECIMAL(10,2), is_circular_economy BOOLEAN, sale_date DATE);","completion":"SELECT SUM(sale_price) FROM sales_2021 WHERE is_circular_economy = TRUE AND YEAR(sale_date) = 2021;"}
{"prompt":"What is the total number of labor violations reported for each production facility? with given SQL schema CREATE TABLE Facility_Violations (violation_id INT, facility_id INT, violation_date DATE);","completion":"SELECT Facility_Violations.facility_id, COUNT(*) as total_violations FROM Facility_Violations GROUP BY Facility_Violations.facility_id;"}
{"prompt":"Which countries have the highest average donation amount? with given SQL schema CREATE TABLE donations (id INT, donor_name VARCHAR, country VARCHAR, amount DECIMAL); INSERT INTO donations (id, donor_name, country, amount) VALUES (1, 'John Doe', 'USA', 100.00), (2, 'Jane Smith', 'Canada', 150.00);","completion":"SELECT country, AVG(amount) as avg_donation FROM donations GROUP BY country ORDER BY avg_donation DESC;"}
{"prompt":"Find the supplier with the lowest average delivery time for orders in the last month. with given SQL schema CREATE TABLE Suppliers (SupplierID int, SupplierName varchar(50)); CREATE TABLE Products (ProductID int, ProductName varchar(50), SupplierID int); CREATE TABLE Orders (OrderID int, ProductID int, OrderDate date, DeliveryTime int); INSERT INTO Suppliers VALUES (1, 'SupplierA'), (2, 'SupplierB'); INSERT INTO Products VALUES (1, 'Organic Apples', 1), (2, 'Bananas', 2); INSERT INTO Orders VALUES (1, 1, '2022-01-01', 2), (2, 2, '2022-01-03', 3);","completion":"SELECT SupplierName, AVG(DeliveryTime) as AvgDeliveryTime FROM Orders o JOIN Products p ON o.ProductID = p.ProductID JOIN Suppliers sp ON p.SupplierID = sp.SupplierID WHERE OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY SupplierName ORDER BY AvgDeliveryTime ASC;"}
{"prompt":"What is the average package weight shipped from each warehouse, excluding shipments over 80 kg? with given SQL schema CREATE TABLE warehouse (id INT, location VARCHAR(255)); INSERT INTO warehouse (id, location) VALUES (1, 'Mumbai'), (2, 'Delhi'); CREATE TABLE packages (id INT, warehouse_id INT, weight FLOAT); INSERT INTO packages (id, warehouse_id, weight) VALUES (1, 1, 50.3), (2, 1, 30.1), (3, 2, 70.0), (4, 2, 85.0);","completion":"SELECT warehouse_id, AVG(weight) as avg_weight FROM packages WHERE weight < 80 GROUP BY warehouse_id;"}
{"prompt":"Calculate the average funding received by biotech startups in each country. with given SQL schema CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.startups(id INT, name TEXT, location TEXT, funding FLOAT);INSERT INTO biotech.startups (id, name, location, funding) VALUES (1, 'StartupA', 'US', 5000000), (2, 'StartupB', 'UK', 3000000), (3, 'StartupC', 'UK', 4000000), (4, 'StartupD', 'Germany', 6000000);","completion":"SELECT location, AVG(funding) FROM biotech.startups GROUP BY location;"}
{"prompt":"How many public schools are there in each state? with given SQL schema CREATE TABLE schools (id INT, school_name VARCHAR(50), state VARCHAR(50)); INSERT INTO schools (id, school_name, state) VALUES (1, 'School A', 'California'), (2, 'School B', 'California'), (3, 'School C', 'Texas');","completion":"SELECT state, COUNT(*) as school_count FROM schools GROUP BY state;"}
{"prompt":"Find cities with no renewable energy projects with given SQL schema CREATE TABLE city_renewable_projects (city VARCHAR(50), project_type VARCHAR(50), PRIMARY KEY (city, project_type));","completion":"SELECT city FROM city_renewable_projects WHERE city NOT IN (SELECT city FROM renewable_projects GROUP BY city);"}
{"prompt":"Which health equity metrics have been collected for patients in the 'rural' region? with given SQL schema CREATE TABLE HealthEquityMetrics (Patient_ID INT, Metric_Name VARCHAR(50), Metric_Value FLOAT, Region VARCHAR(50)); INSERT INTO HealthEquityMetrics (Patient_ID, Metric_Name, Metric_Value, Region) VALUES (1, 'Income', 30000, 'rural'); INSERT INTO HealthEquityMetrics (Patient_ID, Metric_Name, Metric_Value, Region) VALUES (2, 'Education', 8, 'rural');","completion":"SELECT Metric_Name, Metric_Value FROM HealthEquityMetrics WHERE Region = 'rural';"}
{"prompt":"How many local businesses in Madrid offer virtual experiences? with given SQL schema CREATE TABLE local_businesses (business_id INT, city TEXT, virtual_experience BOOLEAN); INSERT INTO local_businesses (business_id, city, virtual_experience) VALUES (1, 'Madrid', true), (2, 'Madrid', false);","completion":"SELECT COUNT(*) FROM local_businesses WHERE city = 'Madrid' AND virtual_experience = true;"}
{"prompt":"List all sustainable tourism initiatives in Canada and their respective number of participants. with given SQL schema CREATE TABLE initiatives (initiative_id INT, name TEXT, country TEXT); CREATE TABLE participants (initiative_id INT, participant_id INT); INSERT INTO initiatives VALUES (1, 'Green Trails', 'Canada'), (2, 'Eco-friendly Cruises', 'Canada'); INSERT INTO participants VALUES (1, 1), (1, 2), (2, 3), (2, 4), (2, 5);","completion":"SELECT initiatives.name, COUNT(participants.participant_id) FROM initiatives INNER JOIN participants ON initiatives.initiative_id = participants.initiative_id WHERE country = 'Canada' GROUP BY initiatives.name;"}
{"prompt":"What is the percentage of hotels adopting 'AI chatbots' in 'Berlin'? with given SQL schema CREATE TABLE Adoption (hotel_id INT, city TEXT, ai_chatbot BOOLEAN); INSERT INTO Adoption (hotel_id, city, ai_chatbot) VALUES (1, 'Berlin', TRUE), (2, 'Berlin', TRUE), (3, 'Berlin', FALSE);","completion":"SELECT 100.0 * SUM(ai_chatbot) \/ COUNT(*) FROM Adoption WHERE city = 'Berlin';"}
{"prompt":"How many Indigenous communities in the Arctic are experiencing negative socio-economic impacts due to climate change? with given SQL schema CREATE TABLE IndigenousCommunities(community TEXT, socio_economic_impact TEXT, climate_change_impact TEXT); INSERT INTO IndigenousCommunities(community, socio_economic_impact, climate_change_impact) VALUES ('Inuit', 'High', 'Very High'), ('Sami', 'Medium', 'High');","completion":"SELECT COUNT(*) FROM IndigenousCommunities WHERE socio_economic_impact = 'High' AND climate_change_impact = 'High' OR socio_economic_impact = 'Very High' AND climate_change_impact = 'Very High';"}
{"prompt":"What is the age distribution of traditional artists in India? with given SQL schema CREATE TABLE traditional_artists (id INT PRIMARY KEY, name TEXT, age INT, art_form TEXT, country TEXT);","completion":"WITH age_groups AS (VALUES (0, 20), (21, 40), (41, 60), (61, 120)) SELECT art_form, SUM(CASE WHEN age >= age_groups.col1 AND age < age_groups.col2 THEN 1 ELSE 0 END) AS artist_count FROM traditional_artists, age_groups WHERE country = 'India' GROUP BY art_form;"}
{"prompt":"What is the success rate of therapy sessions per region? with given SQL schema CREATE TABLE therapy_sessions_outcomes (session_id INT, outcome CHAR(1), region VARCHAR(20)); INSERT INTO therapy_sessions_outcomes (session_id, outcome, region) VALUES (1, 'Y', 'Asia'), (2, 'N', 'Europe'), (3, 'Y', 'America');","completion":"SELECT region, AVG(CASE WHEN outcome = 'Y' THEN 1.0 ELSE 0.0 END) as success_rate FROM therapy_sessions_outcomes GROUP BY region;"}
{"prompt":"What is the total number of lanes for all highways in the database? with given SQL schema CREATE TABLE Highways (id INT, name VARCHAR(100), lanes INT); INSERT INTO Highways (id, name, lanes) VALUES (1, 'I-10', 6), (2, 'I-20', 4), (3, 'I-35', 8);","completion":"SELECT SUM(lanes) FROM Highways;"}
{"prompt":"Which infrastructure projects in 'London' have a budget greater than $2,000,000? with given SQL schema CREATE TABLE InfrastructureD(id INT, city VARCHAR(20), project VARCHAR(30), budget DECIMAL(10,2)); INSERT INTO InfrastructureD(id, city, project, budget) VALUES (1, 'London', 'Tunnel Construction', 2500000.00), (2, 'Rome', 'Railway Upgrade', 1000000.00);","completion":"SELECT city, project, budget FROM InfrastructureD WHERE budget > 2000000.00 AND city = 'London';"}
{"prompt":"Which destinations have travel advisories in South America? with given SQL schema CREATE TABLE countries (name VARCHAR(50)); CREATE TABLE travel_advisories (country VARCHAR(50), advisory VARCHAR(100)); INSERT INTO countries (name) VALUES ('Argentina'), ('Brazil'), ('Colombia'), ('Peru'), ('Ecuador'); INSERT INTO travel_advisories (country, advisory) VALUES ('Brazil', 'Avoid non-essential travel'), ('Venezuela', 'Do not travel');","completion":"SELECT countries.name FROM countries LEFT JOIN travel_advisories ON countries.name = travel_advisories.country WHERE travel_advisories.advisory IS NOT NULL AND countries.name NOT IN ('Venezuela');"}
{"prompt":"What is the total number of cases in the 'Criminal_Justice_Reform' category in the last 6 months? with given SQL schema CREATE TABLE cases (id INT, category VARCHAR(20), date DATE); INSERT INTO cases (id, category, date) VALUES (1, 'Restorative_Justice', '2022-01-01'), (2, 'Access_to_Justice', '2021-12-15'), (3, 'Criminal_Justice_Reform', '2022-02-10'), (4, 'Legal_Technology', '2021-11-05'), (5, 'Criminal_Justice_Reform', '2022-03-01'), (6, 'Criminal_Justice_Reform', '2022-04-15');","completion":"SELECT COUNT(*) FROM cases WHERE category = 'Criminal_Justice_Reform' AND date >= DATEADD(month, -6, GETDATE());"}
{"prompt":"List all the unique ports and countries where oil spills have occurred in the last 5 years. with given SQL schema CREATE TABLE oil_spills (id INT, port VARCHAR(30), country VARCHAR(30), date DATE); INSERT INTO oil_spills (id, port, country, date) VALUES (1, 'Port of Los Angeles', 'USA', '2020-01-01'); INSERT INTO oil_spills (id, port, country, date) VALUES (2, 'Port of Rotterdam', 'Netherlands', '2019-08-15');","completion":"SELECT DISTINCT port, country FROM oil_spills WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);"}
{"prompt":"Update the 'MarineLife' table to include the endangered status for all species with given SQL schema CREATE TABLE MarineLife (id INT, species VARCHAR(50), population INT, last_sighting DATE, endangered BOOLEAN); INSERT INTO MarineLife (id, species, population, last_sighting, endangered) VALUES (1, 'Shark', 500, '2019-01-01', FALSE), (2, 'Starfish', 3000, '2020-05-15', FALSE), (3, 'Jellyfish', 1500, '2018-12-27', FALSE);","completion":"UPDATE MarineLife SET endangered = TRUE WHERE id IN (SELECT id FROM (SELECT MAX(id) FROM MarineLife) AS max_id);"}
{"prompt":"What is the average word count for articles published on the \"politics\" section in 2019? with given SQL schema CREATE TABLE article_text (id INT, article_id INT, text TEXT); CREATE VIEW article_summary AS SELECT a.id, a.title, a.section, a.publish_date, COUNT(at.word) as word_count FROM website_articles a JOIN article_text at ON a.id = at.article_id GROUP BY a.id;","completion":"SELECT AVG(word_count) FROM article_summary WHERE section = 'politics' AND publish_date BETWEEN '2019-01-01' AND '2019-12-31';"}
{"prompt":"Find the earliest start date for defense projects in the 'Asia-Pacific' region. with given SQL schema CREATE TABLE DefenseProjects (project_id INT, project_name VARCHAR(255), region VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO DefenseProjects (project_id, project_name, region, start_date, end_date) VALUES (1, 'Project X', 'Asia-Pacific', '2022-02-01', '2023-01-31'), (2, 'Project Y', 'Europe', '2021-06-15', '2022-05-31'), (3, 'Project Z', 'Asia-Pacific', '2024-04-01', '2025-03-31');","completion":"SELECT MIN(start_date) AS min_start_date FROM DefenseProjects WHERE region = 'Asia-Pacific';"}
{"prompt":"Insert a new defense project timeline with Thailand, 'Type 16 MCV', '2022-04-01', '2024-04-01'. with given SQL schema CREATE TABLE DefenseProjectTimelines (id INT PRIMARY KEY, project_name VARCHAR(50), negotiation_start_date DATE, negotiation_end_date DATE, country VARCHAR(50));","completion":"INSERT INTO DefenseProjectTimelines (project_name, negotiation_start_date, negotiation_end_date, country) VALUES ('Type 16 MCV', '2022-04-01', '2024-04-01', 'Thailand');"}
{"prompt":"Identify the mine with the greatest total CO2 emissions in 2020. with given SQL schema CREATE TABLE Emission_Statistics (Mine_Name VARCHAR(50), CO2_Emissions FLOAT, Year INT); INSERT INTO Emission_Statistics (Mine_Name, CO2_Emissions, Year) VALUES ('Topaz Tops', 1200.0, 2020), ('Moonstone Mines', 1400.5, 2020), ('Jade Jamboree', 1100.2, 2020);","completion":"SELECT Mine_Name FROM Emission_Statistics WHERE Year = 2020 GROUP BY Mine_Name ORDER BY SUM(CO2_Emissions) DESC LIMIT 1;"}
{"prompt":"Update labor_stats table to set 'total_employees' to 250 for 'site_id' 004 with given SQL schema CREATE TABLE labor_stats (site_id VARCHAR(10) PRIMARY KEY, total_employees INT, turnover_rate DECIMAL(5,2));","completion":"UPDATE labor_stats SET total_employees = 250 WHERE site_id = '004';"}
{"prompt":"What is the total quantity of copper extracted by each company? with given SQL schema CREATE TABLE company (id INT, name VARCHAR(50));CREATE TABLE extraction (company_id INT, mineral VARCHAR(10), quantity INT); INSERT INTO company (id, name) VALUES (1, 'XYZ Ltd'), (2, 'ABC Pvt Ltd'); INSERT INTO extraction (company_id, mineral, quantity) VALUES (1, 'gold', 400), (1, 'copper', 600), (2, 'copper', 750), (2, 'zinc', 850);","completion":"SELECT e.company_id, c.name, SUM(e.quantity) AS total_copper_quantity FROM extraction e JOIN company c ON e.company_id = c.id WHERE e.mineral = 'copper' GROUP BY e.company_id, c.name;"}
{"prompt":"What is the average monthly cost of mobile plans for the 'Rural' area in the 'North' region? with given SQL schema CREATE TABLE network_investments (investment_id INT, region VARCHAR(255), area VARCHAR(255), investment_amount DECIMAL(10, 2), investment_date DATE); CREATE TABLE mobile_plans (plan_id INT, plan_name VARCHAR(255), company_name VARCHAR(255), data_limit INT, monthly_cost DECIMAL(10, 2)); INSERT INTO network_investments (investment_id, region, area, investment_amount, investment_date) VALUES (1, 'North', 'Rural', 50000, '2022-01-01'); INSERT INTO mobile_plans (plan_id, plan_name, company_name, data_limit, monthly_cost) VALUES (1, 'Basic', 'Telco Inc.', 1000, 50.00), (2, 'Premium', 'Telco Inc.', 5000, 100.00);","completion":"SELECT AVG(monthly_cost) FROM mobile_plans JOIN network_investments ON 1=1 WHERE region = 'North' AND area = 'Rural';"}
{"prompt":"Calculate the average revenue per concert for artists who have held at least three concerts. with given SQL schema CREATE TABLE concerts (concert_id INT, artist_id INT, city VARCHAR(50), revenue DECIMAL(10,2)); INSERT INTO concerts (concert_id, artist_id, city, revenue) VALUES (1, 101, 'Los Angeles', 50000.00), (2, 102, 'New York', 75000.00), (3, 101, 'Chicago', 60000.00), (4, 101, 'San Francisco', 80000.00), (5, 103, 'Toronto', 40000.00);","completion":"SELECT artist_id, AVG(revenue) AS avg_revenue_per_concert FROM (SELECT artist_id, revenue, ROW_NUMBER() OVER (PARTITION BY artist_id ORDER BY concert_id) AS rn FROM concerts) t WHERE rn >= 3 GROUP BY artist_id;"}
{"prompt":"Get the average age of subscribers who prefer 'Politics' from each country. with given SQL schema CREATE TABLE subscribers (id INT, age INT, country TEXT, interest TEXT);","completion":"SELECT country, AVG(age) AS avg_age FROM subscribers WHERE interest = 'Politics' GROUP BY country;"}
{"prompt":"What is the maximum donation amount given in the year 2022? with given SQL schema CREATE TABLE donations (donation_id INT, donation_date DATE, donation_amount FLOAT); INSERT INTO donations (donation_id, donation_date, donation_amount) VALUES (1, '2022-01-01', 25000.00), (2, '2022-02-01', 30000.00);","completion":"SELECT MAX(donation_amount) FROM donations WHERE YEAR(donation_date) = 2022;"}
{"prompt":"What is the minimum donation amount in the 'Donations' table for each month in 2021? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL(10,2), DonationDate DATE);","completion":"SELECT DATE_FORMAT(DonationDate, '%Y-%m') AS Month, MIN(DonationAmount) FROM Donations WHERE YEAR(DonationDate) = 2021 GROUP BY Month;"}
{"prompt":"Identify the number of marine protected areas in the Arctic region? with given SQL schema CREATE TABLE marine_protected_areas (area_name TEXT, region TEXT); INSERT INTO marine_protected_areas (area_name, region) VALUES ('North Pole', 'Arctic'), ('Franz Josef Land', 'Arctic');","completion":"SELECT COUNT(*) FROM marine_protected_areas WHERE region = 'Arctic';"}
{"prompt":"Insert records for new affordable housing units in Dallas and Houston. with given SQL schema CREATE TABLE AffordableHousing (UnitID INT, City VARCHAR(50), OccupancyRate DECIMAL(4,2));","completion":"INSERT INTO AffordableHousing (UnitID, City, OccupancyRate) VALUES (4, 'Dallas', 0.85), (5, 'Houston', 0.92);"}
{"prompt":"What is the maximum property price in neighborhoods with inclusive housing policies, and the minimum size of properties in those neighborhoods? with given SQL schema CREATE TABLE property (id INT, price INT, size_sqft INT, area VARCHAR(255), has_inclusive_policy BOOLEAN); INSERT INTO property (id, price, size_sqft, area, has_inclusive_policy) VALUES (1, 500000, 1500, 'urban', true), (2, 400000, 1200, 'urban', false);","completion":"SELECT MAX(price), MIN(size_sqft) FROM property WHERE area = 'urban' AND has_inclusive_policy = true;"}
{"prompt":"Calculate the total mass of all satellites in low Earth orbit (LEO) and geostationary orbit (GEO), and show the percentage of mass in each orbit type. with given SQL schema CREATE TABLE Satellite_Orbits ( id INT, satellite_name VARCHAR(255), orbit_type VARCHAR(255), mass FLOAT );","completion":"SELECT orbit_type, SUM(mass) as total_mass, (SUM(mass) \/ (SELECT SUM(mass) FROM Satellite_Orbits) * 100) as percentage FROM Satellite_Orbits WHERE orbit_type IN ('LEO', 'GEO') GROUP BY orbit_type;"}
{"prompt":"What is the average cost of Mars missions? with given SQL schema CREATE TABLE mars_missions (id INT, name VARCHAR(50), cost INT); INSERT INTO mars_missions (id, name, cost) VALUES (1, 'Mars Rover 2001', 2500000), (2, 'Mars Rover 2010', 3000000), (3, 'Mars Orbiter 2020', 2000000000);","completion":"SELECT AVG(cost) FROM mars_missions WHERE name LIKE '%Mars%';"}
{"prompt":"What is the average mass of spacecrafts manufactured by Galactic Innovations? with given SQL schema CREATE TABLE Spacecrafts (id INT, name VARCHAR(100), manufacturer VARCHAR(100), mass FLOAT, launched BOOLEAN); INSERT INTO Spacecrafts (id, name, manufacturer, mass, launched) VALUES (1, 'GalacticShip 1', 'Galactic Innovations', 500, true), (2, 'GalacticShip 2', 'Galactic Innovations', 800, false);","completion":"SELECT AVG(mass) FROM Spacecrafts WHERE manufacturer = 'Galactic Innovations';"}
{"prompt":"What is the average number of wins per season for each coach? with given SQL schema CREATE TABLE Coaches (CoachID INT, CoachName VARCHAR(50), TeamID INT, SeasonYear INT, Wins INT); INSERT INTO Coaches VALUES (1, 'Coach1', 1, 2020, 85), (2, 'Coach1', 1, 2019, 80), (3, 'Coach2', 2, 2020, 90), (4, 'Coach2', 2, 2019, 95);","completion":"SELECT CoachID, AVG(Wins) AS AvgWinsPerSeason FROM Coaches GROUP BY CoachID;"}
{"prompt":"What is the minimum number of passengers for shared autonomous vehicles in District 3? with given SQL schema CREATE TABLE shared_autonomous_vehicles (vehicle_id INT, passengers INT, district INT); INSERT INTO shared_autonomous_vehicles (vehicle_id, passengers, district) VALUES (301, 6, 3), (302, 4, 3), (303, 7, 4);","completion":"SELECT MIN(passengers) FROM shared_autonomous_vehicles WHERE district = 3;"}
{"prompt":"What is the total number of hybrid vehicles in the 'vehicle_data' table, grouped by their 'vehicle_type'? with given SQL schema CREATE TABLE vehicle_data (id INT PRIMARY KEY, make VARCHAR(50), model VARCHAR(50), vehicle_type VARCHAR(50), is_ev BOOLEAN, is_hybrid BOOLEAN, registration_date DATE); INSERT INTO vehicle_data (id, make, model, vehicle_type, is_ev, is_hybrid, registration_date) VALUES (1, 'Toyota', 'Corolla Hybrid', 'Sedan', false, true, '2021-06-10'); INSERT INTO vehicle_data (id, make, model, vehicle_type, is_ev, is_hybrid, registration_date) VALUES (2, 'Honda', 'Civic Hybrid', 'Sedan', false, true, '2021-07-12');","completion":"SELECT vehicle_type, COUNT(*) FROM vehicle_data WHERE is_hybrid = true GROUP BY vehicle_type;"}
{"prompt":"How many members are there in the 'construction_union' table? with given SQL schema CREATE TABLE construction_union (member_id INT, union_name VARCHAR(20)); INSERT INTO construction_union (member_id, union_name) VALUES (1, 'United Union of Construction Workers'), (2, 'Construction Brotherhood'), (3, 'Laborers International Union');","completion":"SELECT COUNT(*) FROM construction_union;"}
{"prompt":"What is the number of employees in each industry, categorized by union status? with given SQL schema CREATE TABLE employees (id INT, name VARCHAR(255), industry VARCHAR(255), union_status VARCHAR(255), num_employees INT); INSERT INTO employees (id, name, industry, union_status, num_employees) VALUES (1, 'John Doe', 'Manufacturing', 'Union', 50), (2, 'Jane Smith', 'Manufacturing', 'Non-Union', 75), (3, 'Bob Johnson', 'Retail', 'Union', 30), (4, 'Alice Williams', 'Retail', 'Union', 40), (5, 'Charlie Brown', 'Construction', 'Non-Union', 100);","completion":"SELECT industry, union_status, SUM(num_employees) as 'Total Employees' FROM employees GROUP BY industry, union_status;"}
{"prompt":"What is the total number of workers represented by labor unions in the healthcare industry? with given SQL schema CREATE TABLE unions (id INT, name TEXT, industry TEXT); INSERT INTO unions (id, name, industry) VALUES (1, 'National Nurses United', 'Healthcare'), (2, 'SEIU', 'Healthcare'), (3, 'AFSCME', 'Public Service');","completion":"SELECT SUM(workers_represented) FROM unions WHERE industry = 'Healthcare';"}
{"prompt":"What is the maximum speed of the Tesla Model S? with given SQL schema CREATE TABLE vehicle_specs (make VARCHAR(255), model VARCHAR(255), max_speed INT); INSERT INTO vehicle_specs (make, model, max_speed) VALUES ('Tesla', 'Model S', 200), ('Tesla', 'Model 3', 140);","completion":"SELECT max_speed FROM vehicle_specs WHERE make = 'Tesla' AND model = 'Model S';"}
{"prompt":"What is the number of hybrid vehicles produced each year since 2010 in the 'production_stats' table? with given SQL schema CREATE TABLE production_stats (make VARCHAR(50), model VARCHAR(50), year INT, vehicle_type VARCHAR(50), quantity INT);","completion":"SELECT year, SUM(quantity) FROM production_stats WHERE vehicle_type = 'hybrid' AND year >= 2010 GROUP BY year;"}
{"prompt":"Insert records for waste generation metrics with given SQL schema CREATE TABLE waste_generation_metrics ( id INT PRIMARY KEY, region VARCHAR(255), total_waste_generated FLOAT, recycled_waste FLOAT, landfilled_waste FLOAT); INSERT INTO waste_generation_metrics (id, region, total_waste_generated, recycled_waste, landfilled_waste) VALUES (1, 'North America', 50000000, 25000000, 20000000), (2, 'Europe', 40000000, 30000000, 5000000), (3, 'Asia', 70000000, 40000000, 25000000);","completion":"INSERT INTO waste_generation_metrics (id, region, total_waste_generated, recycled_waste, landfilled_waste) VALUES (1, 'North America', 50000000, 25000000, 20000000), (2, 'Europe', 40000000, 30000000, 5000000), (3, 'Asia', 70000000, 40000000, 25000000);"}
{"prompt":"Calculate the total water usage in cubic meters for each month in the year 2020 with given SQL schema CREATE TABLE water_usage_by_month (year INT, month INT, usage FLOAT); INSERT INTO water_usage_by_month (year, month, usage) VALUES (2020, 1, 289.56), (2020, 2, 301.23), (2020, 3, 345.78), (2020, 4, 299.67), (2020, 5, 456.34), (2020, 6, 500.89), (2020, 7, 567.89), (2020, 8, 434.56), (2020, 9, 356.78), (2020, 10, 444.45), (2020, 11, 600.11), (2020, 12, 700.22);","completion":"SELECT EXTRACT(MONTH FROM date) AS month, SUM(usage) FROM water_usage_by_month WHERE year = 2020 GROUP BY month;"}
{"prompt":"Show the total water usage for each location and year with given SQL schema CREATE TABLE water_usage (location VARCHAR(255), year INT, usage INT);","completion":"SELECT location, year, SUM(usage) as total_usage FROM water_usage GROUP BY location, year;"}
{"prompt":"Update the operational status of the wastewater_facilities table to 'Under Maintenance' for the 'Screening Facility' in the 'Southeast' region with given SQL schema CREATE TABLE wastewater_facilities ( id INT PRIMARY KEY, name VARCHAR(50), facility_type VARCHAR(50), region VARCHAR(20), capacity_bod INT, operational_status VARCHAR(20) ); INSERT INTO wastewater_facilities (id, name, facility_type, region, capacity_bod, operational_status) VALUES (1, 'Facility A', 'Sewage Treatment Plant', 'Northeast', 500000, 'Operational'), (2, 'Facility B', 'Screening Facility', 'Southeast', 250000, 'Operational'), (3, 'Facility C', 'Sewage Treatment Plant', 'Midwest', 750000, 'Operational');","completion":"UPDATE wastewater_facilities SET operational_status = 'Under Maintenance' WHERE name = 'Facility B' AND region = 'Southeast';"}
{"prompt":"What is the total distance covered by users wearing shoe brand X? with given SQL schema CREATE TABLE shoe_usage (id INT, user_id INT, distance FLOAT, shoe_brand VARCHAR(20)); INSERT INTO shoe_usage (id, user_id, distance, shoe_brand) VALUES (1, 1, 5.0, 'Nike'), (2, 2, 7.0, 'Adidas'), (3, 3, 6.0, 'Nike');","completion":"SELECT SUM(distance) FROM shoe_usage WHERE shoe_brand = 'Nike';"}
{"prompt":"What is the most recent launch date for satellites manufactured by Indian Space Research Organisation (ISRO)? with given SQL schema CREATE TABLE Satellite (id INT, name VARCHAR(255), manufacturer_id INT, launch_date DATE); INSERT INTO Satellite (id, name, manufacturer_id, launch_date) VALUES (1, 'GOES-R', 1, '2016-11-19'); INSERT INTO Satellite (id, name, manufacturer_id, launch_date) VALUES (2, 'Sentinel-2B', 2, '2017-03-07'); INSERT INTO Satellite (id, name, manufacturer_id, launch_date) VALUES (3, 'GSAT-19', 3, '2017-06-28');","completion":"SELECT MAX(launch_date) FROM Satellite WHERE manufacturer_id = (SELECT id FROM Manufacturer WHERE name = 'Indian Space Research Organisation');"}
{"prompt":"What is the average ph level in saltwater aquaculture facilities in the North Atlantic region? with given SQL schema CREATE TABLE saltwater_aquaculture (id INT, name TEXT, location TEXT, ph FLOAT); INSERT INTO saltwater_aquaculture (id, name, location, ph) VALUES (1, 'Facility A', 'North Atlantic', 8.1), (2, 'Facility B', 'North Atlantic', 7.9), (3, 'Facility C', 'Indian Ocean', 8.3);","completion":"SELECT AVG(ph) FROM saltwater_aquaculture WHERE location = 'North Atlantic';"}
{"prompt":"What is the maximum dissolved oxygen level by region and month? with given SQL schema CREATE TABLE Region ( id INT PRIMARY KEY, name VARCHAR(50) ); CREATE TABLE DissolvedOxygen ( region_id INT, date DATE, level DECIMAL(5,2), FOREIGN KEY (region_id) REFERENCES Region(id) );","completion":"SELECT Region.name, DATE_FORMAT(DissolvedOxygen.date, '%Y-%m') AS month, MAX(DissolvedOxygen.level) FROM Region INNER JOIN DissolvedOxygen ON Region.id = DissolvedOxygen.region_id GROUP BY Region.name, month;"}
{"prompt":"Add a new sustainable practice to the SustainablePractices table for a specific project. with given SQL schema CREATE TABLE SustainablePractices (PracticeID INT, PracticeName VARCHAR(50), Description VARCHAR(255), ProjectID INT, FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID));","completion":"INSERT INTO SustainablePractices (PracticeID, PracticeName, Description, ProjectID) VALUES (3, 'Rainwater Harvesting', 'Collection and usage of rainwater', 3);"}
{"prompt":"List all building permits issued for residential buildings in the state of Texas and Washington. with given SQL schema CREATE TABLE permit (id INT, state VARCHAR(20), type VARCHAR(20), permit_number INT); INSERT INTO permit (id, state, type, permit_number) VALUES (1, 'Washington', 'Commercial', 100), (2, 'Washington', 'Residential', 150), (3, 'California', 'Commercial', 80), (4, 'Texas', 'Residential', 200);","completion":"SELECT permit_number FROM permit WHERE (state = 'Texas' OR state = 'Washington') AND type = 'Residential';"}
{"prompt":"What is the average price per gram of concentrate sold by Dispensary X? with given SQL schema CREATE TABLE dispensary (id INT, name VARCHAR(255), product VARCHAR(255), price FLOAT, quantity INT); INSERT INTO dispensary (id, name, product, price, quantity) VALUES (1, 'Dispensary X', 'Concentrate', 12.5, 100);","completion":"SELECT AVG(price \/ 1000) FROM dispensary WHERE name = 'Dispensary X' AND product = 'Concentrate';"}
{"prompt":"Show the maximum billing amount for any case with given SQL schema CREATE TABLE cases (case_id INT, billing_amount INT); INSERT INTO cases (case_id, billing_amount) VALUES (1, 5000), (2, 7000);","completion":"SELECT MAX(billing_amount) FROM cases;"}
{"prompt":"What is the average pro-bono hours per week for each attorney in the 'probono_billing' table? with given SQL schema CREATE TABLE attorney (attorney_id INT, name TEXT, join_date DATE); INSERT INTO attorney (attorney_id, name, join_date) VALUES (4, 'Alex Garcia', '2019-01-02'), (5, 'Dana Stewart', '2020-02-15'), (6, 'Elias Kim', '2018-03-20'); CREATE TABLE probono_billing (attorney_id INT, client_id INT, hours FLOAT, billing_date DATE); INSERT INTO probono_billing (attorney_id, client_id, hours, billing_date) VALUES (4, 104, 15, '2022-01-01'), (5, 105, 20, '2022-01-08'), (6, 106, 18, '2022-01-15');","completion":"SELECT attorney_id, AVG(hours \/ 7) FROM probono_billing JOIN attorney ON probono_billing.attorney_id = attorney.attorney_id GROUP BY attorney_id;"}
{"prompt":"What is the number of reported infectious disease cases in African countries in the past year? with given SQL schema CREATE TABLE infectious_diseases (id INT, country TEXT, date TEXT, cases INT); INSERT INTO infectious_diseases (id, country, date, cases) VALUES (1, 'Nigeria', '2021-01-01', 100), (2, 'Egypt', '2021-02-02', 50), (3, 'South Africa', '2021-03-03', 75), (4, 'Nigeria', '2021-04-04', 120), (5, 'Egypt', '2021-05-05', 60), (6, 'South Africa', '2021-06-06', 80), (7, 'Nigeria', '2022-01-01', 110), (8, 'Egypt', '2022-02-02', 65), (9, 'South Africa', '2022-03-03', 90);","completion":"SELECT country, COUNT(*) FROM infectious_diseases WHERE country IN ('Nigeria', 'Egypt', 'South Africa') AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY country;"}
{"prompt":"List the names of the top 5 most funded startups founded by underrepresented minority founders? with given SQL schema CREATE TABLE companies (id INT, name TEXT, founder_race TEXT);CREATE TABLE funding_rounds (company_id INT, funding_amount INT);","completion":"SELECT c.name FROM companies c JOIN (SELECT company_id, SUM(funding_amount) as total_funding FROM funding_rounds fr GROUP BY company_id ORDER BY total_funding DESC LIMIT 5) f ON c.id = f.company_id WHERE c.founder_race IN ('African American', 'Hispanic', 'Native American', 'Pacific Islander');"}
{"prompt":"Display the names of companies founded by individuals who identify as Black and have raised Seed or Series A funding. with given SQL schema CREATE TABLE startup (id INT, name TEXT, founder_identity TEXT, funding TEXT); INSERT INTO startup (id, name, founder_identity, funding) VALUES (1, 'TechCo', 'Black Female', 'Seed'), (2, 'InnovateIT', 'Black Male', 'Series A'), (3, 'GreenSolutions', 'White Male', 'Seed'), (4, 'DataDriven', 'Asian Female', 'Series B');","completion":"SELECT name FROM startup WHERE founder_identity LIKE 'Black%' AND funding IN ('Seed', 'Series A');"}
{"prompt":"List the agroecology farmers' details and their offered produce in African regions. with given SQL schema CREATE TABLE Agroecology_Farmers (id INT PRIMARY KEY, name VARCHAR(50), age INT, location VARCHAR(50), sustainable_practices BOOLEAN); INSERT INTO Agroecology_Farmers (id, name, age, location, sustainable_practices) VALUES (1, 'Mariam Diop', 45, 'Senegalese Savannah', true); INSERT INTO Agroecology_Farmers (id, name, age, location, sustainable_practices) VALUES (2, 'Moses Owino', 50, 'Kenyan Highlands', true); CREATE TABLE Agroecology_Produce (id INT PRIMARY KEY, product_name VARCHAR(50), price DECIMAL(5,2), farmer_id INT, location VARCHAR(50)); INSERT INTO Agroecology_Produce (id, product_name, price, farmer_id, location) VALUES (1, 'Millet', 0.50, 1, 'Senegalese Savannah'); INSERT INTO Agroecology_Produce (id, product_name, price, farmer_id, location) VALUES (2, 'Tea', 1.00, 2, 'Kenyan Highlands');","completion":"SELECT af.name, af.location, ap.product_name, ap.price FROM Agroecology_Farmers af INNER JOIN Agroecology_Produce ap ON af.id = ap.farmer_id WHERE af.location IN ('Senegalese Savannah', 'Kenyan Highlands');"}
{"prompt":"What is the total yield of organic crops in California and Texas in 2020? with given SQL schema CREATE TABLE organic_farms (id INT, state VARCHAR(2), year INT, yield INT); INSERT INTO organic_farms (id, state, year, yield) VALUES (1, 'CA', 2020, 1500), (2, 'TX', 2020, 1200);","completion":"SELECT SUM(yield) FROM organic_farms WHERE state IN ('CA', 'TX') AND year = 2020;"}
{"prompt":"How many wheelchair accessible spaces are in parking lots with over 50 spaces? with given SQL schema CREATE TABLE ParkingLots (lot_id INT, num_spaces INT, wheelchair_accessible BOOLEAN);","completion":"SELECT COUNT(*) FROM ParkingLots WHERE num_spaces > 50 AND wheelchair_accessible = TRUE;"}
{"prompt":"What is the average budget allocation for disability accommodations by region? with given SQL schema CREATE TABLE disability_accommodations (accom_id INT, accom_name TEXT, budget DECIMAL(10,2), region_id INT);CREATE TABLE regions (region_id INT, region_name TEXT);","completion":"SELECT r.region_name, AVG(d.budget) AS avg_budget FROM disability_accommodations d INNER JOIN regions r ON d.region_id = r.region_id GROUP BY r.region_name;"}
{"prompt":"Show the latest 3 records of ocean salinity measurements from the 'salinity_measurements' table. with given SQL schema CREATE TABLE salinity_measurements (measurement_time TIMESTAMP, salinity FLOAT, location TEXT); INSERT INTO salinity_measurements (measurement_time, salinity, location) VALUES ('2022-01-01 12:00:00', 34.5, 'Atlantic Ocean'), ('2022-01-01 13:00:00', 35.1, 'Atlantic Ocean');","completion":"SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY measurement_time DESC) as rn, * FROM salinity_measurements) tmp WHERE rn <= 3;"}
{"prompt":"Calculate the average carbon sequestered per hectare in mangrove forests with given SQL schema CREATE TABLE forests_carbon (id INT, type VARCHAR(20), area FLOAT, carbon FLOAT); INSERT INTO forests_carbon (id, type, area, carbon) VALUES (1, 'Mangrove', 100, 100000);","completion":"SELECT AVG(carbon \/ area) FROM forests_carbon WHERE type = 'Mangrove';"}
{"prompt":"List timber sales by year and forest, ordered by revenue with given SQL schema CREATE TABLE forests (id INT, name VARCHAR(50), hectares DECIMAL(5,2), year_planted INT, country VARCHAR(50), PRIMARY KEY (id)); INSERT INTO forests (id, name, hectares, year_planted, country) VALUES (1, 'Forest A', 123.45, 1990, 'USA'), (2, 'Forest B', 654.32, 1985, 'Canada'), (3, 'Forest C', 456.78, 2010, 'USA'), (4, 'Forest D', 903.45, 1980, 'Mexico'); CREATE TABLE timber_sales (id INT, forest_id INT, year INT, volume DECIMAL(10,2), price DECIMAL(10,2), PRIMARY KEY (id)); INSERT INTO timber_sales (id, forest_id, year, volume, price) VALUES (1, 1, 2021, 120.50, 100.00), (2, 1, 2022, 150.75, 125.50), (3, 2, 2021, 450.23, 50.00), (4, 2, 2022, 520.89, 75.25), (5, 3, 2021, 300.56, 150.00), (6, 3, 2022, 345.98, 175.50);","completion":"SELECT f.name, t.year, SUM(t.volume * t.price) as revenue FROM forests f INNER JOIN timber_sales t ON f.id = t.forest_id GROUP BY f.name, t.year ORDER BY revenue DESC;"}
{"prompt":"What is the average area of timber production areas in hectares? with given SQL schema CREATE TABLE timber_production (id INT, name VARCHAR(50), area_ha FLOAT, country VARCHAR(50));","completion":"SELECT AVG(area_ha) FROM timber_production;"}
{"prompt":"Show the number of safety incidents for each country's ingredient sourcing. with given SQL schema CREATE TABLE Ingredient_Sourcing (id INT, country VARCHAR(50), incidents INT); INSERT INTO Ingredient_Sourcing (id, country, incidents) VALUES (1, 'USA', 5), (2, 'Canada', 2), (3, 'Mexico', 7);","completion":"SELECT country, incidents FROM Ingredient_Sourcing;"}
{"prompt":"Identify the regions with sales of organic makeup products with given SQL schema CREATE TABLE sales (product_type VARCHAR(20), region VARCHAR(10), sales NUMERIC(10,2)); INSERT INTO sales (product_type, region, sales) VALUES ('foundation', 'North', 500), ('lipstick', 'East', 600), ('eyeshadow', 'West', 400), ('blush', 'South', 700), ('mascara', 'North', 800), ('foundation', 'West', 900); CREATE TABLE products (product_type VARCHAR(20), organic BOOLEAN); INSERT INTO products (product_type, organic) VALUES ('foundation', TRUE), ('lipstick', FALSE), ('eyeshadow', TRUE), ('blush', FALSE), ('mascara', TRUE);","completion":"SELECT DISTINCT region FROM sales INNER JOIN products ON sales.product_type = products.product_type WHERE products.organic = TRUE AND sales.product_type = 'makeup';"}
{"prompt":"Which brands of makeup have a rating of at least 4? with given SQL schema CREATE TABLE makeup_ratings (brand VARCHAR(255), rating DECIMAL(2,1)); INSERT INTO makeup_ratings (brand, rating) VALUES ('CeraVe', 4.5), ('Dermalogica', 4.7), ('Maybelline', 3.8), ('Lancome', 4.6);","completion":"SELECT brand FROM makeup_ratings WHERE rating >= 4.0;"}
{"prompt":"How many artworks in the 'ArtCollection' table were created during the 20th century? with given SQL schema CREATE TABLE ArtCollection (ArtworkID INT, ArtworkYear INT); INSERT INTO ArtCollection (ArtworkID, ArtworkYear) VALUES (1, 1905), (2, 1910), (3, 1915), (4, 1920), (5, 1925), (6, 1930), (7, 1935), (8, 1940), (9, 1945), (10, 1950);","completion":"SELECT COUNT(*) AS Artworks20thCentury FROM ArtCollection WHERE ArtworkYear BETWEEN 1901 AND 2000;"}
{"prompt":"Delete a record from 'military_equipment' table with given SQL schema CREATE TABLE military_equipment (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255)); INSERT INTO military_equipment (id, name, type, country) VALUES (1, 'M1 Abrams', 'Tank', 'USA');","completion":"DELETE FROM military_equipment WHERE id = 1;"}
{"prompt":"Find the top 3 customers with the highest risk score, and their corresponding portfolio values? with given SQL schema CREATE TABLE customers (customer_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), risk_score INT, portfolio_value DECIMAL(10,2));","completion":"SELECT customer_id, name, risk_score, portfolio_value FROM (SELECT customer_id, name, risk_score, portfolio_value, ROW_NUMBER() OVER (ORDER BY risk_score DESC) as rn FROM customers) t WHERE rn <= 3;"}
{"prompt":"What is the minimum balance for customers in the Africa region who have a balance greater than $10,000 in their savings account? with given SQL schema CREATE TABLE account_types (account_id INT, customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2)); INSERT INTO account_types (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 12000.00), (2, 1, 'Checking', 5000.00), (3, 2, 'Savings', 8000.00), (4, 2, 'Checking', 3000.00), (5, 3, 'Savings', 15000.00), (6, 3, 'Checking', 5500.00);","completion":"SELECT MIN(balance) FROM account_types WHERE account_type = 'Savings' AND customer_id IN (SELECT customer_id FROM account_types WHERE account_type = 'Checking' AND balance > 10000);"}
{"prompt":"List all the vessels that entered the port of New York and their corresponding cargo types, sorted by the vessel ID. with given SQL schema CREATE TABLE port (port_id INT, port_name VARCHAR(50)); INSERT INTO port (port_id, port_name) VALUES (1, 'Oakland'), (2, 'Seattle'), (3, 'Long Beach'), (4, 'New York'); CREATE TABLE vessels (vessel_id INT, port_id INT); INSERT INTO vessels (vessel_id, port_id) VALUES (101, 3), (102, 3), (103, 4), (104, 3); CREATE TABLE cargo (cargo_id INT, cargo_type VARCHAR(50), vessel_id INT); INSERT INTO cargo (cargo_id, cargo_type, vessel_id) VALUES (201, 'Containers', 101), (202, 'Vehicles', 102), (203, 'Bulk', 103);","completion":"SELECT vessels.vessel_id, cargo.cargo_type FROM vessels JOIN port ON vessels.port_id = port.port_id JOIN cargo ON vessels.vessel_id = cargo.vessel_id WHERE port.port_name = 'New York' ORDER BY vessels.vessel_id;"}
{"prompt":"What is the minimum weight of containers shipped from the Port of Tokyo to Japan in 2018? with given SQL schema CREATE TABLE ports (port_id INT, port_name TEXT, country TEXT);CREATE TABLE shipments (shipment_id INT, shipment_weight INT, ship_date DATE, port_id INT); INSERT INTO ports VALUES (1, 'Port of Tokyo', 'Japan'), (2, 'Port of Yokohama', 'Japan'); INSERT INTO shipments VALUES (1, 2000, '2018-01-01', 1), (2, 1500, '2018-02-15', 2);","completion":"SELECT MIN(shipment_weight) FROM shipments JOIN ports ON shipments.port_id = ports.port_id WHERE ports.country = 'Japan' AND ports.port_name = 'Port of Tokyo' AND ship_date BETWEEN '2018-01-01' AND '2018-12-31';"}
{"prompt":"Calculate the moving average of energy savings for each program in the 'energy_efficiency' table over the last 3 records. with given SQL schema CREATE TABLE energy_efficiency (program VARCHAR(50), energy_savings FLOAT); INSERT INTO energy_efficiency (program, energy_savings) VALUES ('sustainable_manufacturing', 12.5), ('energy_audits', 7.8), ('smart_meters', 10.2), ('sustainable_manufacturing', 11.7), ('energy_audits', 8.1), ('smart_meters', 10.6);","completion":"SELECT program, AVG(energy_savings) OVER (PARTITION BY program ORDER BY program ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS moving_avg FROM energy_efficiency;"}
{"prompt":"Delete the 'top_ethical_companies' view with given SQL schema CREATE VIEW top_ethical_companies AS SELECT company_name, ethical_certification FROM ethical_manufacturing ORDER BY ethical_certification DESC LIMIT 5;","completion":"DROP VIEW top_ethical_companies;"}
{"prompt":"How many workers are employed in 'renewable energy' sector? with given SQL schema CREATE TABLE workers (id INT, worker_name VARCHAR(255), department VARCHAR(255)); INSERT INTO workers (id, worker_name, department) VALUES (1, 'John Doe', 'renewable energy'), (2, 'Jane Smith', 'textiles'), (3, 'Michael Brown', 'renewable energy');","completion":"SELECT COUNT(*) FROM workers WHERE department = 'renewable energy';"}
{"prompt":"Minimum excavation date in 'asian_archaeology'? with given SQL schema CREATE TABLE asian_archaeology (site_id INT, excavation_date DATE);","completion":"SELECT MIN(excavation_date) FROM asian_archaeology;"}
{"prompt":"What is the total number of military bases in the 'NorthAmerica' schema? with given SQL schema CREATE SCHEMA NorthAmerica; CREATE TABLE MilitaryBases (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); INSERT INTO MilitaryBases (id, name, type, location) VALUES (1, 'Fort Bragg', 'Army Base', 'North Carolina'); INSERT INTO MilitaryBases (id, name, type, location) VALUES (2, 'Camp Pendleton', 'Marine Corps Base', 'California');","completion":"SELECT COUNT(*) FROM NorthAmerica.MilitaryBases;"}
{"prompt":"What is the average amount donated by each donor who has donated more than $100 in total? with given SQL schema CREATE TABLE Donors (DonorID INT, Name TEXT, State TEXT, DonationAmount DECIMAL); INSERT INTO Donors (DonorID, Name, State, DonationAmount) VALUES (1, 'John Doe', 'California', 50.00), (2, 'Jane Smith', 'Texas', 100.00), (3, 'Brian Kim', 'California', 150.00);","completion":"SELECT DonorID, AVG(DonationAmount) FROM Donors GROUP BY DonorID HAVING SUM(DonationAmount) > 100;"}
{"prompt":"What is the average mental health score for students in each gender, grouped by age and ethnicity? with given SQL schema CREATE TABLE students (id INT, name VARCHAR(50), gender VARCHAR(10), mental_health_score INT, age INT, ethnicity VARCHAR(50)); INSERT INTO students (id, name, gender, mental_health_score, age, ethnicity) VALUES (1, 'Jane Doe', 'Female', 80, 19, 'Hispanic');","completion":"SELECT gender, age, ethnicity, AVG(mental_health_score) as avg_score FROM students GROUP BY gender, age, ethnicity;"}
{"prompt":"What is the average mental health score of students who have participated in open pedagogy initiatives? with given SQL schema CREATE TABLE students (student_id INT, mental_health_score INT, participated_in_open_pedagogy BOOLEAN); INSERT INTO students (student_id, mental_health_score, participated_in_open_pedagogy) VALUES (1, 80, TRUE), (2, 70, FALSE), (3, 90, TRUE);","completion":"SELECT AVG(mental_health_score) FROM students WHERE participated_in_open_pedagogy = TRUE;"}
{"prompt":"What is the number of open pedagogy resources accessed by students in each country? with given SQL schema CREATE TABLE student_access (student_id INT, country VARCHAR(10), resource_id VARCHAR(5)); INSERT INTO student_access (student_id, country, resource_id) VALUES (1, 'USA', 'R101'), (2, 'CAN', 'R201'), (3, 'USA', 'R102'), (4, 'MEX', 'R301'), (5, 'CAN', 'R202'); CREATE TABLE open_resources (resource_id VARCHAR(5), resource_name VARCHAR(20)); INSERT INTO open_resources (resource_id, resource_name) VALUES ('R101', 'OER Textbook'), ('R102', 'Open Source Software'), ('R201', 'MOOC Course'), ('R202', 'Online Tutorial'), ('R301', 'Podcast');","completion":"SELECT country, COUNT(*) FROM student_access JOIN open_resources ON student_access.resource_id = open_resources.resource_id GROUP BY country;"}
{"prompt":"What is the percentage of teachers who have completed professional development courses in each district, ordered by the percentage? with given SQL schema CREATE TABLE districts (district_id INT, district_name VARCHAR(50)); INSERT INTO districts VALUES (1, 'District A'), (2, 'District B'), (3, 'District C'); CREATE TABLE teachers (teacher_id INT, district_id INT, completed_pd_course BOOLEAN); INSERT INTO teachers VALUES (1, 1, TRUE), (2, 1, TRUE), (3, 2, TRUE), (4, 2, FALSE), (5, 3, FALSE), (6, 3, FALSE);","completion":"SELECT district_id, district_name, AVG(completed_pd_course) * 100.0 as pct_completed FROM districts JOIN teachers ON districts.district_id = teachers.district_id GROUP BY district_id, district_name ORDER BY pct_completed DESC;"}
{"prompt":"Delete all energy storage projects in France before 2010. with given SQL schema CREATE TABLE energy_storage (name TEXT, country TEXT, technology TEXT, capacity_mwh INTEGER, year INTEGER); INSERT INTO energy_storage (name, country, technology, capacity_mwh, year) VALUES ('Project A', 'France', 'Battery', 50, 2005), ('Project B', 'France', 'Pumped Hydro', 200, 2012);","completion":"DELETE FROM energy_storage WHERE country = 'France' AND technology IN ('Battery', 'Pumped Hydro') AND year < 2010;"}
{"prompt":"What is the total number of oil rigs in the North Sea that were installed after 2010? with given SQL schema CREATE TABLE oil_rigs (id INT, location VARCHAR(20), installation_date DATE);","completion":"SELECT COUNT(*) FROM oil_rigs WHERE location LIKE 'North Sea%' AND installation_date > '2010-01-01';"}
{"prompt":"What is the total number of points scored by each basketball player in the NBA? with given SQL schema CREATE TABLE nba_scores (player_id INT, player_name VARCHAR(50), team_id INT, team_name VARCHAR(50), points INT); INSERT INTO nba_scores (player_id, player_name, team_id, team_name, points) VALUES (1, 'Stephen Curry', 30, 'Golden State Warriors', 3245), (2, 'LeBron James', 23, 'Los Angeles Lakers', 3037), (3, 'Kevin Durant', 7, 'Brooklyn Nets', 2774);","completion":"SELECT player_name, SUM(points) as total_points FROM nba_scores GROUP BY player_name;"}
{"prompt":"What is the total amount of food aid sent to 'countries' table and which countries received it? with given SQL schema CREATE TABLE food_aid (food_aid_id INT, country_id INT, aid_amount DECIMAL(10,2)); CREATE TABLE countries (country_id INT, country_name VARCHAR(50)); INSERT INTO food_aid (food_aid_id, country_id, aid_amount) VALUES (1, 1, 25000), (2, 2, 32000), (3, 3, 18000), (4, 4, 40000), (5, 5, 22000), (6, 1, 10000); INSERT INTO countries (country_id, country_name) VALUES (1, 'Syria'), (2, 'Yemen'), (3, 'South Sudan'), (4, 'Afghanistan'), (5, 'Nigeria'), (6, 'Iraq');","completion":"SELECT country_name, SUM(aid_amount) as total_food_aid FROM countries INNER JOIN food_aid ON countries.country_id = food_aid.country_id GROUP BY country_name;"}
{"prompt":"Which countries have the most unvaccinated children under 5 in the 'vaccinations' table? with given SQL schema CREATE TABLE vaccinations (country VARCHAR(50), num_children_unvaccinated INT); INSERT INTO vaccinations (country, num_children_unvaccinated) VALUES ('Afghanistan', 600000), ('Burkina Faso', 450000), ('Nigeria', 2500000), ('South Sudan', 700000), ('Yemen', 900000);","completion":"SELECT country, SUM(num_children_unvaccinated) as total_unvaccinated FROM vaccinations GROUP BY country ORDER BY total_unvaccinated DESC;"}
{"prompt":"What is the total number of digital divide initiatives in Asia? with given SQL schema CREATE TABLE digital_divide_initiatives (initiative_id INT, region VARCHAR(20), type VARCHAR(20)); INSERT INTO digital_divide_initiatives (initiative_id, region, type) VALUES (1, 'Asia', 'education'), (2, 'Europe', 'infrastructure'), (3, 'North America', 'policy');","completion":"SELECT COUNT(*) FROM digital_divide_initiatives WHERE region = 'Asia';"}
{"prompt":"What is the total fare collected for each bus route? with given SQL schema CREATE TABLE bus_routes (route_id INT, route_name TEXT); CREATE TABLE fares (fare_id INT, route_id INT, fare DECIMAL); INSERT INTO bus_routes VALUES (1, 'Route 1'), (2, 'Route 2'), (3, 'Route 3'); INSERT INTO fares VALUES (1, 1, 2.00), (2, 1, 2.00), (3, 2, 2.50), (4, 3, 3.00), (5, 3, 3.00);","completion":"SELECT bus_routes.route_name, SUM(fares.fare) AS total_fare FROM bus_routes INNER JOIN fares ON bus_routes.route_id = fares.route_id GROUP BY bus_routes.route_id;"}
{"prompt":"How many sustainable material products are supplied by each supplier? with given SQL schema CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), sustainable_materials BOOLEAN); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), supplier_id INT, price DECIMAL(5,2)); INSERT INTO suppliers (id, name, country, sustainable_materials) VALUES (1, 'Green Textiles', 'India', true), (2, 'EcoWeave', 'Nepal', true), (3, 'Fair Fabrics', 'Bangladesh', false); INSERT INTO products (id, name, supplier_id, price) VALUES (1, 'Organic Cotton Shirt', 1, 29.99), (2, 'Hemp Pants', 1, 39.99), (3, 'Bamboo Tote Bag', 2, 14.99), (4, 'Polyester Scarf', 3, 9.99);","completion":"SELECT s.name AS supplier_name, COUNT(p.id) AS product_count FROM suppliers s LEFT JOIN products p ON s.id = p.supplier_id AND s.sustainable_materials = true GROUP BY s.name;"}
{"prompt":"Calculate the average number of likes received by posts containing the hashtag '#bookreviews' in 'France', per day. with given SQL schema CREATE TABLE posts (id INT, date DATE, likes INT, content TEXT); CREATE TABLE hashtags (id INT, post_id INT, hashtag TEXT);","completion":"SELECT AVG(likes \/ DATEDIFF('2023-03-01', date)) AS avg_likes_per_day"}
{"prompt":"What is the total number of ad impressions and clicks for users in Europe, broken down by ad category? with given SQL schema CREATE TABLE ad_data (id INT, user_id INT, ad_category VARCHAR(50), impressions INT, clicks INT); INSERT INTO ad_data (id, user_id, ad_category, impressions, clicks) VALUES (1, 1, 'Social Media', 50, 10), (2, 2, 'E-commerce', 100, 20), (3, 3, 'Entertainment', 75, 15); CREATE TABLE users (id INT, country VARCHAR(50), continent VARCHAR(50)); INSERT INTO users (id, country, continent) VALUES (1, 'Germany', 'Europe'), (2, 'France', 'Europe'), (3, 'Spain', 'Europe');","completion":"SELECT users.continent, ad_category, SUM(impressions) as total_impressions, SUM(clicks) as total_clicks FROM ad_data JOIN users ON ad_data.user_id = users.id WHERE users.continent = 'Europe' GROUP BY users.continent, ad_category;"}
{"prompt":"Remove customers not interested in sustainable fashion with given SQL schema CREATE TABLE CustomerPreferences (CustomerID INT, PrefersSustainable BOOLEAN); INSERT INTO CustomerPreferences (CustomerID, PrefersSustainable) VALUES (1, TRUE), (2, FALSE), (3, TRUE);","completion":"DELETE FROM CustomerPreferences WHERE PrefersSustainable = FALSE;"}
{"prompt":"Calculate the number of new donors each quarter in the past year, and the total amount donated by new donors each quarter. with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationDate DATE, Amount DECIMAL(10,2));","completion":"SELECT DATEPART(quarter, DonationDate) AS Quarter, DATEPART(year, DonationDate) AS Year, COUNT(DISTINCT DonorID) AS NewDonors, SUM(Amount) AS TotalDonated FROM Donors WHERE DonationDate >= DATEADD(year, -1, GETDATE()) GROUP BY DATEPART(quarter, DonationDate), DATEPART(year, DonationDate);"}
{"prompt":"List all programs that have had a volunteer from each country? with given SQL schema CREATE TABLE Volunteer (VolunteerID int, VolunteerName varchar(50), Country varchar(50)); CREATE TABLE VolunteerProgram (ProgramID int, VolunteerID int, ProgramLocation varchar(50));","completion":"SELECT ProgramLocation FROM VolunteerProgram JOIN Volunteer ON VolunteerProgram.VolunteerID = Volunteer.VolunteerID GROUP BY ProgramLocation;"}
{"prompt":"List all suppliers who provide products to 'Organic Foods' store in the 'StoreSuppliers' table with given SQL schema CREATE TABLE StoreSuppliers (store VARCHAR(255), supplier VARCHAR(255)); INSERT INTO StoreSuppliers (store, supplier) VALUES ('Organic Foods', 'Supplier A'), ('Organic Foods', 'Supplier B'), ('Health Foods', 'Supplier C');","completion":"SELECT supplier FROM StoreSuppliers WHERE store = 'Organic Foods';"}
{"prompt":"List Canadian biotech companies working on gene therapy. with given SQL schema CREATE TABLE company_can (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), industry VARCHAR(255)); INSERT INTO company_can (id, name, location, industry) VALUES (1, 'GeneTech', 'Toronto, Canada', 'Biotech'); CREATE TABLE research_can (id INT PRIMARY KEY, company_id INT, research_area VARCHAR(255)); INSERT INTO research_can (id, company_id, research_area) VALUES (1, 1, 'Gene Therapy');","completion":"SELECT c.name FROM company_can c JOIN research_can r ON c.id = r.company_id WHERE c.location = 'Toronto, Canada' AND r.research_area = 'Gene Therapy';"}
{"prompt":"What is the total number of public hospitals in India, excluding private hospitals? with given SQL schema CREATE TABLE hospitals_data (id INT, type TEXT, country TEXT); INSERT INTO hospitals_data (id, type, country) VALUES (1, 'public', 'India'), (2, 'private', 'India'), (3, 'public', 'India'), (4, 'private', 'India'), (5, 'public', 'India');","completion":"SELECT COUNT(*) FROM hospitals_data WHERE type = 'public' AND country = 'India';"}
{"prompt":"List the top 3 most popular online travel agencies in Canada by bookings. with given SQL schema CREATE TABLE otas (ota_id INT, ota_name TEXT, country TEXT, bookings INT); INSERT INTO otas (ota_id, ota_name, country, bookings) VALUES (1, 'OTA A', 'Canada', 1500), (2, 'OTA B', 'Canada', 2000), (3, 'OTA C', 'Canada', 1800), (4, 'OTA D', 'USA', 2500);","completion":"SELECT ota_name, bookings FROM otas WHERE country = 'Canada' ORDER BY bookings DESC LIMIT 3;"}
{"prompt":"What is the market share of Hotel Chain C in South America? with given SQL schema CREATE TABLE market_share_2 (hotel_chain VARCHAR(255), region VARCHAR(255), market_share FLOAT); INSERT INTO market_share_2 (hotel_chain, region, market_share) VALUES ('Hotel Chain A', 'South America', 0.35), ('Hotel Chain B', 'South America', 0.42), ('Hotel Chain C', 'South America', 0.23);","completion":"SELECT market_share * 100 FROM market_share_2 WHERE hotel_chain = 'Hotel Chain C';"}
{"prompt":"What is the total number of bookings for each type of room in the 'Room_Bookings' table? with given SQL schema CREATE TABLE Room_Bookings (room_type VARCHAR(50), bookings INT); INSERT INTO Room_Bookings (room_type, bookings) VALUES ('Standard Room', 200), ('Deluxe Room', 300), ('Suite', 400);","completion":"SELECT room_type, SUM(bookings) FROM Room_Bookings GROUP BY room_type;"}
{"prompt":"What is the total revenue for each hotel in the americas schema for February? with given SQL schema CREATE SCHEMA americas; CREATE TABLE americas.hotel_revenue (hotel_id INT, hotel_name VARCHAR(50), revenue INT, date DATE);","completion":"SELECT hotel_name, SUM(revenue) FROM americas.hotel_revenue WHERE date_trunc('month', date) = '2023-02-01'::DATE GROUP BY hotel_name;"}
{"prompt":"Who are the researchers from the 'University of Anchorage'? with given SQL schema CREATE TABLE researchers (id INT, name VARCHAR(255), affiliation VARCHAR(255), years_of_experience INT); INSERT INTO researchers (id, name, affiliation, years_of_experience) VALUES (1, 'Alice', 'University of Anchorage', 10); INSERT INTO researchers (id, name, affiliation, years_of_experience) VALUES (2, 'Bob', 'Norwegian Polar Institute', 15);","completion":"SELECT name, affiliation FROM researchers WHERE affiliation = 'University of Anchorage';"}
{"prompt":"What indigenous languages are spoken in South American countries? with given SQL schema CREATE TABLE IndigenousLanguages (id INT, language VARCHAR(255), country VARCHAR(255)); INSERT INTO IndigenousLanguages (id, language, country) VALUES (1, 'Quechua', 'Peru'), (2, 'Aymara', 'Bolivia'), (3, 'Guarani', 'Paraguay');","completion":"SELECT IndigenousLanguages.language FROM IndigenousLanguages WHERE IndigenousLanguages.country IN ('Peru', 'Bolivia', 'Paraguay', 'Colombia', 'Argentina');"}
{"prompt":"What is the average age of psychiatrists who have treated mental health patients in Europe, ordered by the number of patients treated? with given SQL schema CREATE TABLE psychiatrists (id INT, name TEXT, age INT, country TEXT, patients INT); INSERT INTO psychiatrists (id, name, age, country, patients) VALUES (1, 'Alex Doe', 50, 'UK', 50), (2, 'Jane Smith', 45, 'France', 75), (3, 'Alice Johnson', 55, 'Germany', 60), (4, 'Bob Brown', 60, 'Italy', 40);","completion":"SELECT AVG(age) as avg_age FROM (SELECT age, ROW_NUMBER() OVER (PARTITION BY country ORDER BY patients DESC) as rn FROM psychiatrists WHERE country IN ('UK', 'France', 'Germany', 'Italy')) t WHERE rn = 1;"}
{"prompt":"What is the sum of all dam construction costs in Spain? with given SQL schema CREATE TABLE Dam (id INT, name TEXT, location TEXT, cost FLOAT, build_date DATE); INSERT INTO Dam (id, name, location, cost, build_date) VALUES (1, 'El Cuerzo Dam', 'Spain', 250000000, '1991-01-01');","completion":"SELECT SUM(cost) FROM Dam WHERE location = 'Spain';"}
{"prompt":"Find the number of visitors who visited 'eco_tourism_spots' more than once. with given SQL schema CREATE TABLE eco_tourism_spots (visitor_id INT, spot_name VARCHAR(50)); INSERT INTO eco_tourism_spots (visitor_id, spot_name) VALUES (1, 'Rainforest'), (1, 'Mountains'), (2, 'Ocean'), (3, 'Desert'), (3, 'Rainforest');","completion":"SELECT COUNT(DISTINCT visitor_id) FROM eco_tourism_spots WHERE visitor_id IN (SELECT visitor_id FROM eco_tourism_spots GROUP BY visitor_id HAVING COUNT(*) > 1);"}
{"prompt":"How many sustainable tourism certifications were issued in Egypt in the last 3 years? with given SQL schema CREATE TABLE certifications (id INT, country VARCHAR(50), cert_date DATE); INSERT INTO certifications (id, country, cert_date) VALUES (1, 'Egypt', '2021-01-01'), (2, 'Egypt', '2020-12-10'), (3, 'Egypt', '2019-07-20'), (4, 'Egypt', '2022-02-15');","completion":"SELECT COUNT(*) FROM certifications WHERE country = 'Egypt' AND cert_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR);"}
{"prompt":"What is the minimum age of tourists visiting New York from the UK in 2022? with given SQL schema CREATE TABLE tourism_data (id INT, name VARCHAR(50), country VARCHAR(50), age INT, destination VARCHAR(50), visit_year INT); INSERT INTO tourism_data (id, name, country, age, destination, visit_year) VALUES (1, 'Alice Brown', 'UK', 25, 'New York', 2022), (2, 'Charlie Davis', 'UK', 30, 'New York', 2022), (3, 'Oliver Johnson', 'UK', NULL, 'New York', 2022);","completion":"SELECT MIN(age) FROM tourism_data WHERE country = 'UK' AND destination = 'New York' AND age IS NOT NULL AND visit_year = 2022;"}
{"prompt":"What is the maximum number of users for each media platform in the last week? with given SQL schema CREATE TABLE Users (user_id INT, platform VARCHAR(50), registration_date DATE, daily_usage INT); INSERT INTO Users (user_id, platform, registration_date, daily_usage) VALUES (1, 'Platform1', '2022-01-01', 10), (2, 'Platform2', '2022-02-15', 7), (3, 'Platform1', '2022-03-01', 15);","completion":"SELECT platform, MAX(daily_usage) FROM Users WHERE registration_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY platform;"}
{"prompt":"What is the total revenue generated by each category? with given SQL schema CREATE TABLE menus (menu_id INT, menu_name TEXT, category TEXT, price DECIMAL(5,2)); INSERT INTO menus (menu_id, menu_name, category, price) VALUES (1, 'Classic Burger', 'Beef', 7.99), (2, 'Veggie Burger', 'Vegetarian', 6.99), (3, 'Tofu Wrap', 'Vegan', 5.99);","completion":"SELECT category, SUM(price) as total_revenue FROM menus GROUP BY category;"}
{"prompt":"What is the total reclamation cost and number of employees for mines in the South America region with more than 300 employees? with given SQL schema CREATE TABLE production_data (id INT PRIMARY KEY, mine_id INT, year INT, monthly_production INT);CREATE TABLE reclamation_data (id INT PRIMARY KEY, mine_id INT, year INT, reclamation_cost INT);CREATE TABLE mine_employees (id INT PRIMARY KEY, mine_id INT, employee_id INT, employment_start_date DATE, employment_end_date DATE);CREATE TABLE employee_demographics (id INT PRIMARY KEY, employee_id INT, gender VARCHAR(255), ethnicity VARCHAR(255));CREATE VIEW employee_stats AS SELECT mine_id, COUNT(employee_id) as employee_count FROM mine_employees GROUP BY mine_id;CREATE VIEW operation_duration AS SELECT mine_id, COUNT(DISTINCT year) as operation_years FROM production_data GROUP BY mine_id;","completion":"SELECT r.mine_id, SUM(r.reclamation_cost) as total_reclamation_cost, e.employee_count FROM reclamation_data r JOIN employee_stats e ON r.mine_id = e.mine_id WHERE r.mine_id IN (SELECT mine_id FROM employee_stats WHERE employee_count > 300) AND e.mine_id IN (SELECT mine_id FROM employee_stats WHERE employee_count > 300) AND r.mine_id IN (SELECT mine_id FROM operation_duration WHERE operation_years > 5) GROUP BY r.mine_id;"}
{"prompt":"What is the total number of mobile and broadband customers in the state of Florida? with given SQL schema CREATE TABLE customer_counts (id INT, location VARCHAR(50), service VARCHAR(50)); INSERT INTO customer_counts (id, location, service) VALUES (1, 'Florida', 'mobile'), (2, 'Texas', 'broadband'), (3, 'Florida', 'mobile'), (4, 'California', 'mobile');","completion":"SELECT COUNT(*) FROM customer_counts WHERE location = 'Florida';"}
{"prompt":"Show the top 3 cities with the highest total ticket sales. with given SQL schema CREATE TABLE concerts (id INT, country VARCHAR(255), city VARCHAR(255), artist_name VARCHAR(255), tier VARCHAR(255), price DECIMAL(10,2), num_tickets INT); CREATE VIEW city_sales AS SELECT city, SUM(price * num_tickets) AS total_sales FROM concerts GROUP BY city;","completion":"SELECT city, total_sales FROM city_sales ORDER BY total_sales DESC LIMIT 3;"}
{"prompt":"Insert a new record into the 'Donors' table with given SQL schema CREATE TABLE Donors (DonorID INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Email VARCHAR(100));","completion":"INSERT INTO Donors (DonorID, FirstName, LastName, Email) VALUES (101, 'Jamie', 'Bautista', 'jamie.bautista@example.com');"}
{"prompt":"What is the total amount donated to climate change mitigation in Brazil? with given SQL schema CREATE TABLE Donations (donation_id INT, donor_id INT, cause TEXT, amount DECIMAL); CREATE TABLE Donors (donor_id INT, donor_name TEXT, country TEXT);","completion":"SELECT SUM(amount) FROM Donations JOIN Donors ON Donations.donor_id = Donors.donor_id WHERE cause = 'climate change mitigation' AND country = 'Brazil';"}
{"prompt":"What is the average performance score for each player by game category? with given SQL schema CREATE TABLE PlayerPerformance (PlayerID INT, GameID INT, GameCategory VARCHAR(50), PerformanceScore INT);","completion":"SELECT p.GameCategory, AVG(pp.PerformanceScore) as AvgScore FROM PlayerPerformance pp JOIN Games g ON pp.GameID = g.GameID GROUP BY p.GameCategory;"}
{"prompt":"Show the minimum and maximum playtime for multiplayer games, ordered by the number of players in descending order. with given SQL schema CREATE TABLE Players (PlayerID INT, Name VARCHAR(100), Country VARCHAR(50), TotalHoursPlayed INT, Platform VARCHAR(50)); INSERT INTO Players VALUES (1, 'John Johnson', 'Brazil', 70, 'PC'); INSERT INTO Players VALUES (2, 'Anna Lee', 'Russia', 80, 'Console'); CREATE TABLE GameDesign (GameID INT, GameName VARCHAR(100), Multiplayer BIT); INSERT INTO GameDesign VALUES (1, 'GameX', 1); INSERT INTO GameDesign VALUES (2, 'GameY', 0);","completion":"SELECT MIN(P.TotalHoursPlayed) as MinPlaytime, MAX(P.TotalHoursPlayed) as MaxPlaytime, COUNT(DISTINCT P.PlayerID) as Players FROM Players P JOIN GameDesign GD ON P.PlayerID = GD.GameID WHERE GD.Multiplayer = 1 GROUP BY GD.GameID ORDER BY Players DESC;"}
{"prompt":"What was the production of Lutetium in 2019 and 2021? with given SQL schema CREATE TABLE production_data (year INT, element VARCHAR(10), quantity INT); INSERT INTO production_data (year, element, quantity) VALUES (2018, 'Lutetium', 10), (2019, 'Lutetium', 12), (2020, 'Lutetium', 14), (2021, 'Lutetium', 16);","completion":"SELECT quantity FROM production_data WHERE element = 'Lutetium' AND year IN (2019, 2021);"}
{"prompt":"Delete properties from the 'properties' table that are not located in 'Vancouver' or 'Toronto'. with given SQL schema CREATE TABLE properties (id INT, city VARCHAR(50)); INSERT INTO properties (id, city) VALUES (1, 'Vancouver'), (2, 'Toronto'), (3, 'Montreal');","completion":"DELETE FROM properties WHERE city NOT IN ('Vancouver', 'Toronto');"}
{"prompt":"Find properties with size greater than 1500 sq ft in urban_properties table. with given SQL schema CREATE TABLE urban_properties (id INT, size FLOAT, location VARCHAR(255)); INSERT INTO urban_properties (id, size, location) VALUES (1, 1200.0, 'San Francisco'), (2, 1800.0, 'New York'), (3, 1300.0, 'Los Angeles');","completion":"SELECT * FROM urban_properties WHERE size > 1500;"}
{"prompt":"How many carbon offset programs were implemented in 'Country Z' each year? with given SQL schema CREATE TABLE carbon_offset_programs (program_id INT, country VARCHAR(255), start_year INT, end_year INT); INSERT INTO carbon_offset_programs (program_id, country, start_year, end_year) VALUES (1, 'Country Z', 2010, 2015), (2, 'Country Z', 2015, 2020), (3, 'Country X', 2018, 2023);","completion":"SELECT start_year, COUNT(*) as num_programs FROM carbon_offset_programs WHERE country = 'Country Z' GROUP BY start_year;"}
{"prompt":"What is the maximum revenue for restaurants serving Japanese food? with given SQL schema CREATE TABLE Restaurants (id INT, name TEXT, type TEXT, revenue FLOAT); INSERT INTO Restaurants (id, name, type, revenue) VALUES (1, 'Restaurant A', 'Italian', 5000.00), (2, 'Restaurant B', 'Japanese', 7000.00), (3, 'Restaurant C', 'Japanese', 10000.00);","completion":"SELECT MAX(revenue) FROM Restaurants WHERE type = 'Japanese';"}
{"prompt":"Delete countries with no satellites from the countries table with given SQL schema CREATE TABLE satellites (id INT, name VARCHAR(255), international_designator VARCHAR(20), country VARCHAR(50)); CREATE TABLE countries (id INT, name VARCHAR(50), region VARCHAR(50)); INSERT INTO countries (id, name, region) VALUES (1, 'USA', 'North America'), (2, 'Russia', 'Europe'), (3, 'China', 'Asia'), (4, 'Antarctica', 'Antarctica'); INSERT INTO satellites (id, name, country, international_designator) VALUES (1, 'Spitzer Space Telescope', 'USA', '979F'), (2, 'Lomonosov', 'Russia', 'C345D'), (3, 'Tiangong-1', 'China', 'A666F');","completion":"DELETE FROM countries WHERE id NOT IN (SELECT country FROM satellites);"}
{"prompt":"What is the average age of athletes in the MLB who have participated in the Home Run Derby? with given SQL schema CREATE TABLE IF NOT EXISTS athletes (id INT, name VARCHAR(50), age INT, sport VARCHAR(50), derby BOOLEAN);","completion":"SELECT AVG(age) FROM athletes WHERE sport = 'MLB' AND derby = true;"}
{"prompt":"What is the average CO2 emission of ride-hailing vehicles in San Francisco? with given SQL schema CREATE TABLE SFRideHailing (id INT, company VARCHAR(20), co2_emission DECIMAL(5,2));","completion":"SELECT AVG(co2_emission) FROM SFRideHailing WHERE company = 'Uber';"}
{"prompt":"Determine the percentage of autonomous vehicles in the 'inventory' table, partitioned by location. with given SQL schema CREATE TABLE inventory (vehicle_type VARCHAR(10), inventory_location VARCHAR(10), quantity_on_hand INT);","completion":"SELECT inventory_location, 100.0 * AVG(CASE WHEN vehicle_type LIKE '%Autonomous%' THEN 1.0 ELSE 0.0 END) AS autonomy_percentage FROM inventory GROUP BY inventory_location;"}
{"prompt":"Find the top 3 most visited exhibitions by visitors from the Asia-Pacific region. with given SQL schema CREATE TABLE Exhibition (id INT, name VARCHAR(100), Visitor_id INT); CREATE TABLE Visitor (id INT, name VARCHAR(100), country VARCHAR(50)); INSERT INTO Exhibition (id, name, Visitor_id) VALUES (1, 'Ancient Civilizations', 1), (2, 'Modern Art', 2), (3, 'Nature Photography', 3); INSERT INTO Visitor (id, name, country) VALUES (1, 'James Bond', 'Singapore'), (2, 'Maria Garcia', 'Australia'), (3, 'Anna Kim', 'South Korea');","completion":"SELECT Exhibition.name FROM Exhibition JOIN Visitor ON Exhibition.Visitor_id = Visitor.id WHERE Visitor.country IN ('Singapore', 'Australia', 'South Korea') GROUP BY Exhibition.name ORDER BY COUNT(DISTINCT Exhibition.Visitor_id) DESC LIMIT 3;"}
{"prompt":"List all wastewater treatment plants in California that were built before 1990. with given SQL schema CREATE TABLE wastewater_plants (id INT, name VARCHAR(50), state VARCHAR(20), build_year INT); INSERT INTO wastewater_plants (id, name, state, build_year) VALUES (1, 'Plant A', 'California', 1985), (2, 'Plant B', 'California', 1995), (3, 'Plant C', 'Texas', 1988);","completion":"SELECT name FROM wastewater_plants WHERE state = 'California' AND build_year < 1990;"}
{"prompt":"What is the total amount of water wasted per drought category in California for the year 2019? with given SQL schema CREATE TABLE drought_impact (category VARCHAR(20), region VARCHAR(20), wastewater_volume FLOAT, year INT); INSERT INTO drought_impact (category, region, wastewater_volume, year) VALUES ('severe', 'California', 1500000, 2019); INSERT INTO drought_impact (category, region, wastewater_volume, year) VALUES ('moderate', 'California', 1000000, 2019);","completion":"SELECT category, SUM(wastewater_volume) FROM drought_impact WHERE region = 'California' AND year = 2019 GROUP BY category;"}
{"prompt":"How many algorithmic fairness incidents were reported in North America in the last week? with given SQL schema CREATE TABLE fairness_incidents (incident_id INT, incident_date DATE, region TEXT); INSERT INTO fairness_incidents (incident_id, incident_date, region) VALUES (1, '2022-09-15', 'North America'), (2, '2022-09-11', 'North America'), (3, '2022-09-01', 'North America');","completion":"SELECT COUNT(*) FROM fairness_incidents WHERE region = 'North America' AND incident_date >= '2022-09-08' AND incident_date < '2022-09-15';"}
{"prompt":"What is the average satisfaction score for explainable AI models developed in the last 3 years? with given SQL schema CREATE TABLE explainable_ai (model_name TEXT, satisfaction_score INTEGER, date DATE); INSERT INTO explainable_ai (model_name, satisfaction_score, date) VALUES ('Model1', 80, '2020-01-01'), ('Model2', 85, '2019-04-03'), ('Model3', 90, '2021-05-22');","completion":"SELECT AVG(satisfaction_score) FROM explainable_ai WHERE date >= DATE('now', '-3 year');"}
{"prompt":"Delete all flight safety records for a specific aircraft with given SQL schema CREATE SCHEMA if not exists aerospace;CREATE TABLE if not exists aerospace.flight_safety (id INT, incident VARCHAR(255), incident_date DATE, aircraft_id INT);INSERT INTO aerospace.flight_safety (id, incident, incident_date, aircraft_id) VALUES (1, 'Inc1', '2017-01-01', 1), (2, 'Inc2', '2018-01-01', 1);","completion":"DELETE FROM aerospace.flight_safety WHERE aircraft_id = 1;"}
{"prompt":"How many 'endangered_species' are there in each 'habitat_type' in the 'habitat_preservation' table? with given SQL schema CREATE TABLE endangered_species_new(id INT, animal_name VARCHAR(50), conservation_status VARCHAR(50), habitat_type VARCHAR(50)); INSERT INTO endangered_species_new(id, animal_name, conservation_status, habitat_type) VALUES (1, 'Amur Leopard', 'Critically Endangered', 'Rainforest'), (2, 'Black Rhino', 'Critically Endangered', 'Savannah'), (3, 'Bengal Tiger', 'Endangered', 'Rainforest'); CREATE TABLE habitat_preservation_new(id INT, habitat_name VARCHAR(50), habitat_area FLOAT, habitat_type VARCHAR(50)); INSERT INTO habitat_preservation_new(id, habitat_name, habitat_area, habitat_type) VALUES (1, 'Rainforest', 10000, 'Rainforest'), (2, 'Mangrove Forest', 1200, 'Coastal'), (3, 'Coral Reef', 300, 'Marine');","completion":"SELECT hp.habitat_type, COUNT(es.id) FROM endangered_species_new es JOIN habitat_preservation_new hp ON es.habitat_type = hp.habitat_type GROUP BY hp.habitat_type;"}
{"prompt":"What is the total number of animals in the rehabilitation center and habitat preservation program? with given SQL schema CREATE TABLE animals_total (animal_id INT, location VARCHAR(50)); INSERT INTO animals_total (animal_id, location) VALUES (1, 'Rehabilitation Center'), (2, 'Habitat Preservation'), (3, 'Rehabilitation Center'), (4, 'Habitat Preservation');","completion":"SELECT COUNT(*) FROM animals_total WHERE location IN ('Rehabilitation Center', 'Habitat Preservation');"}
{"prompt":"What is the total funding received by cultural programs for women and non-binary individuals? with given SQL schema CREATE TABLE Funding (program TEXT, amount INT); INSERT INTO Funding (program, amount) VALUES ('Women in Art', 50000), ('Non-Binary Dance Troupe', 75000), ('Female Composers Initiative', 25000);","completion":"SELECT SUM(amount) FROM Funding WHERE program LIKE '%Women%' OR program LIKE '%Non-binary%';"}
{"prompt":"What is the maximum production budget of Marvel movies? with given SQL schema CREATE TABLE Marvel_Movies (title TEXT, budget INTEGER); INSERT INTO Marvel_Movies (title, budget) VALUES ('Movie1', 150000000), ('Movie2', 200000000), ('Movie3', 250000000), ('Movie4', 300000000), ('Movie5', 350000000), ('Movie6', 400000000);","completion":"SELECT MAX(budget) FROM Marvel_Movies;"}
{"prompt":"What is the total marketing budget for each music artist in the pop genre? with given SQL schema CREATE TABLE music_artists (id INT, artist VARCHAR(255), genre VARCHAR(255), marketing_budget INT); INSERT INTO music_artists (id, artist, genre, marketing_budget) VALUES (1, 'Artist1', 'Pop', 2000000), (2, 'Artist2', 'Pop', 3000000), (3, 'Artist3', 'Rock', 1500000);","completion":"SELECT genre, artist, SUM(marketing_budget) AS total_marketing_budget FROM music_artists WHERE genre = 'Pop' GROUP BY genre, artist;"}
{"prompt":"How many building permits were issued in California in the last year? with given SQL schema CREATE TABLE Building_Permits (id INT, permit_date DATE, state TEXT);","completion":"SELECT COUNT(*) FROM Building_Permits WHERE state = 'California' AND permit_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"prompt":"List all the strains and their average potency for growers located in Colorado with a social equity score above 80? with given SQL schema CREATE TABLE growers (grower_id INT, name VARCHAR(255), state VARCHAR(255), social_equity_score INT); INSERT INTO growers (grower_id, name, state, social_equity_score) VALUES (1, 'Grower X', 'CO', 85), (2, 'Grower Y', 'CO', 70), (3, 'Grower Z', 'WA', 82); CREATE TABLE strains (strain_id INT, name VARCHAR(255), potency DECIMAL(3, 2), grower_id INT); INSERT INTO strains (strain_id, name, potency, grower_id) VALUES (1, 'Strain A', 22.5, 1), (2, 'Strain B', 28.0, 1), (3, 'Strain C', 19.0, 2), (4, 'Strain D', 30.0, 3);","completion":"SELECT s.name, AVG(s.potency) as avg_potency FROM strains s INNER JOIN growers g ON s.grower_id = g.grower_id WHERE g.state = 'CO' AND g.social_equity_score > 80 GROUP BY s.name;"}
{"prompt":"What is the total billing amount for cases in the year 2020? with given SQL schema CREATE TABLE cases (case_id INT, case_year INT, billing_amount INT);","completion":"SELECT SUM(billing_amount) FROM cases WHERE case_year = 2020;"}
{"prompt":"Find the number of chemicals with safety inspections in the last 3 months. with given SQL schema CREATE TABLE safety_inspections (id INT PRIMARY KEY, chemical_id INT, inspection_date DATE); INSERT INTO safety_inspections (id, chemical_id, inspection_date) VALUES (1, 1, '2022-03-15');","completion":"SELECT COUNT(DISTINCT chemical_id) FROM safety_inspections WHERE inspection_date >= DATEADD(month, -3, GETDATE());"}
{"prompt":"How many climate mitigation initiatives were launched in Southeast Asia between 2015 and 2020 that involved women-led organizations? with given SQL schema CREATE TABLE climate_initiatives (initiative VARCHAR(50), region VARCHAR(50), start_year INT, end_year INT, gender_focus BOOLEAN); INSERT INTO climate_initiatives (initiative, region, start_year, end_year, gender_focus) VALUES ('Initiative A', 'Southeast Asia', 2015, 2020, TRUE); INSERT INTO climate_initiatives (initiative, region, start_year, end_year, gender_focus) VALUES ('Initiative B', 'Southeast Asia', 2016, 2021, FALSE); INSERT INTO climate_initiatives (initiative, region, start_year, end_year, gender_focus) VALUES ('Initiative C', 'Southeast Asia', 2017, 2022, TRUE); INSERT INTO climate_initiatives (initiative, region, start_year, end_year, gender_focus) VALUES ('Initiative D', 'Southeast Asia', 2018, 2023, FALSE);","completion":"SELECT COUNT(*) FROM climate_initiatives WHERE region = 'Southeast Asia' AND start_year BETWEEN 2015 AND 2020 AND gender_focus = TRUE;"}
{"prompt":"What is the minimum R&D expenditure for drugs approved in 2022? with given SQL schema CREATE TABLE drug_approval (drug_name TEXT, approval_year INTEGER);","completion":"SELECT MIN(expenditure) FROM rd_expenditure INNER JOIN drug_approval a ON rd_expenditure.drug_name = a.drug_name WHERE a.approval_year = 2022;"}
{"prompt":"What is the average number of tests performed per day in laboratories in the state of Texas? with given SQL schema CREATE TABLE laboratories (name TEXT, state TEXT, tests_performed INTEGER, tests_per_day INTEGER); INSERT INTO laboratories (name, state, tests_performed, tests_per_day) VALUES ('Quest Diagnostics', 'Texas', 12000, 400), ('LabCorp', 'Texas', 10000, 333), ('BioReference Laboratories', 'Texas', 8000, 267);","completion":"SELECT AVG(tests_per_day) FROM laboratories WHERE state = 'Texas';"}
{"prompt":"Find the farm in the African region with the highest yield per acre for any crop, and display the farm name, crop, and yield per acre. with given SQL schema CREATE TABLE Farm (id INT, name TEXT, crop TEXT, yield_per_acre FLOAT, region TEXT); INSERT INTO Farm (id, name, crop, yield_per_acre, region) VALUES (1, 'Mwangi Farm', 'Cassava', 250, 'African'), (2, 'Sisi Farm', 'Sorghum', 180, 'African'), (3, 'Kofi Farm', 'Maize', 220, 'African');","completion":"SELECT name, crop, yield_per_acre FROM (SELECT name, crop, yield_per_acre, RANK() OVER (PARTITION BY region ORDER BY yield_per_acre DESC) as rn FROM Farm WHERE region = 'African') x WHERE rn = 1;"}
{"prompt":"What is the name of the farms with a size greater than 150 acres located in 'Texas'? with given SQL schema CREATE TABLE farms (id INT PRIMARY KEY, name VARCHAR(50), size INT, location VARCHAR(50)); INSERT INTO farms (id, name, size, location) VALUES (1, 'Smith Farms', 200, 'Texas'), (2, 'Johnson Farms', 100, 'California');","completion":"SELECT name FROM farms WHERE size > 150 AND location = 'Texas'"}
{"prompt":"What is the total revenue generated from the sale of crops in 'Autumnfield'? with given SQL schema CREATE TABLE farmers (id INT, name VARCHAR(50), location VARCHAR(50), crops VARCHAR(50)); CREATE TABLE crops (id INT, name VARCHAR(50), yield INT); CREATE TABLE sales (id INT, farmer_id INT, crop_name VARCHAR(50), quantity INT, price DECIMAL(5,2)); CREATE VIEW sales_view AS SELECT farmer_id, crop_name, SUM(quantity * price) AS revenue FROM sales GROUP BY farmer_id, crop_name; INSERT INTO farmers VALUES (1, 'Jane Doe', 'Autumnfield', 'Potatoes'); INSERT INTO crops VALUES (1, 'Potatoes', 100); INSERT INTO sales VALUES (1, 1, 'Potatoes', 50, 2.50);","completion":"SELECT SUM(revenue) FROM sales_view INNER JOIN farmers ON sales_view.farmer_id = farmers.id WHERE farmers.location = 'Autumnfield';"}
{"prompt":"What is the total hectares of forests in each country? with given SQL schema CREATE TABLE Forests (id INT PRIMARY KEY, name VARCHAR(255), hectares DECIMAL(5,2), country VARCHAR(255)); INSERT INTO Forests (id, name, hectares, country) VALUES (1, 'Greenwood', 520.00, 'Canada'); CREATE TABLE Countries (code CHAR(2), name VARCHAR(255), population INT); INSERT INTO Countries (code, name, population) VALUES ('CA', 'Canada', 37410003);","completion":"SELECT Forests.country, SUM(Forests.hectares) as total_hectares FROM Forests GROUP BY Forests.country;"}
{"prompt":"For each ingredient, list the number of vegan cosmetic products that source it, ranked in descending order. with given SQL schema CREATE TABLE ingredients (ingredient_id INT, ingredient_name VARCHAR(50)); CREATE TABLE vegan_products (product_id INT, ingredient_id INT, is_vegan BOOLEAN);","completion":"SELECT i.ingredient_name, COUNT(vp.product_id) as vegan_product_count FROM ingredients i JOIN vegan_products vp ON i.ingredient_id = vp.ingredient_id WHERE vp.is_vegan = true GROUP BY i.ingredient_name ORDER BY vegan_product_count DESC;"}
{"prompt":"What is the total number of crime incidents reported in the state of Texas in 2020? with given SQL schema CREATE TABLE crime_data (id INT, state VARCHAR(50), year INT, incidents INT); INSERT INTO crime_data (id, state, year, incidents) VALUES (1, 'Texas', 2020, 10000); INSERT INTO crime_data (id, state, year, incidents) VALUES (2, 'Texas', 2019, 9000);","completion":"SELECT SUM(incidents) FROM crime_data WHERE state = 'Texas' AND year = 2020;"}
{"prompt":"Identify the artist with the most works in the 'Modern Art' gallery. with given SQL schema CREATE TABLE Art (artist TEXT, gallery TEXT, piece_name TEXT); INSERT INTO Art (artist, gallery, piece_name) VALUES ('Picasso', 'Modern Art', 'Guernica'); INSERT INTO Art (artist, gallery, piece_name) VALUES ('Van Gogh', 'Modern Art', 'Starry Night'); INSERT INTO Art (artist, gallery, piece_name) VALUES ('Matisse', 'Modern Art', 'The Dance'); INSERT INTO Art (artist, gallery, piece_name) VALUES ('Dali', 'Surrealism', 'Persistence of Memory');","completion":"SELECT artist, COUNT(piece_name) AS piece_count FROM Art WHERE gallery = 'Modern Art' GROUP BY artist ORDER BY piece_count DESC LIMIT 1;"}
{"prompt":"List all artists who have exhibited at the Louvre Museum in Paris. with given SQL schema CREATE TABLE artists (name VARCHAR(255), exhibitions VARCHAR(255)); INSERT INTO artists (name, exhibitions) VALUES ('Vincent van Gogh', 'Louvre Museum, Paris'), ('Pablo Picasso', 'Louvre Museum, Paris'), ('Claude Monet', 'Louvre Museum, Paris');","completion":"SELECT name FROM artists WHERE exhibitions LIKE '%Louvre Museum, Paris%';"}
{"prompt":"What is the maximum cost of a defense contract in Japan? with given SQL schema CREATE TABLE defense_contracts (id INT, country VARCHAR(50), cost FLOAT); INSERT INTO defense_contracts (id, country, cost) VALUES (1, 'Japan', 1750000), (2, 'Japan', 700000), (3, 'Japan', 1100000);","completion":"SELECT MAX(cost) FROM defense_contracts WHERE country = 'Japan';"}
{"prompt":"Delete records of military equipment older than 10 years from the 'equipment' table with given SQL schema CREATE TABLE equipment (id INT PRIMARY KEY, name VARCHAR(100), type VARCHAR(50), acquisition_date DATE);","completion":"DELETE FROM equipment WHERE acquisition_date < DATE_SUB(CURRENT_DATE, INTERVAL 10 YEAR);"}
{"prompt":"What military innovations were introduced by the US Navy between 2015 and 2020? with given SQL schema CREATE TABLE military_innovations (id INT, innovation_name VARCHAR(255), innovation_type VARCHAR(255), introducing_military VARCHAR(255), introduction_date DATE); INSERT INTO military_innovations (id, innovation_name, innovation_type, introducing_military, introduction_date) VALUES (1, 'Electromagnetic Railgun', 'Weapon', 'US Navy', '2016-01-01');","completion":"SELECT innovation_name FROM military_innovations WHERE introducing_military = 'US Navy' AND introduction_date BETWEEN '2015-01-01' AND '2020-12-31';"}
{"prompt":"What is the total production output for factories in the 'renewable energy' sector, grouped by country? with given SQL schema CREATE TABLE factory (id INT, name TEXT, sector TEXT, country TEXT); INSERT INTO factory (id, name, sector, country) VALUES (1, 'FactoryA', 'automotive', 'France'), (2, 'FactoryB', 'renewable energy', 'Spain'), (3, 'FactoryC', 'electronics', 'Germany'), (4, 'FactoryD', 'renewable energy', 'France'), (5, 'FactoryE', 'renewable energy', 'Germany'); CREATE TABLE production (factory_id INT, output REAL); INSERT INTO production (factory_id, output) VALUES (1, 1000), (1, 1200), (2, 1500), (3, 1800), (4, 2000), (4, 2500), (5, 3000);","completion":"SELECT factory.country, SUM(production.output) FROM production INNER JOIN factory ON production.factory_id = factory.id WHERE factory.sector = 'renewable energy' GROUP BY factory.country;"}
{"prompt":"What is the average investment amount for strategies in the 'Affordable Housing' sector? with given SQL schema CREATE TABLE investment_amounts (strategy VARCHAR(50), investment_amount FLOAT); INSERT INTO investment_amounts (strategy, investment_amount) VALUES ('Microfinance', 50000), ('Sustainable Agriculture', 75000), ('Green Energy', 100000), ('Affordable Housing', 80000);","completion":"SELECT AVG(investment_amount) FROM investment_amounts WHERE strategy IN (SELECT strategy FROM strategies WHERE investments.sector = 'Affordable Housing');"}
{"prompt":"Who are the top 3 artists with the highest revenue from digital music sales? with given SQL schema CREATE TABLE MusicSales (SaleID INT, ArtistName VARCHAR(20), Genre VARCHAR(10), SalesAmount DECIMAL(10,2)); INSERT INTO MusicSales (SaleID, ArtistName, Genre, SalesAmount) VALUES (1, 'Ella Fitzgerald', 'Jazz', 12.99), (2, 'The Beatles', 'Rock', 15.00), (3, 'Ariana Grande', 'Pop', 19.45), (4, 'Billie Eilish', 'Pop', 11.99);","completion":"SELECT ArtistName, SUM(SalesAmount) as TotalRevenue FROM MusicSales GROUP BY ArtistName ORDER BY TotalRevenue DESC LIMIT 3;"}
{"prompt":"Delete the 'Racial Bias in Education' open pedagogy resource. with given SQL schema CREATE TABLE open_pedagogy_resources (resource_name VARCHAR(50), topic VARCHAR(50));","completion":"DELETE FROM open_pedagogy_resources WHERE resource_name = 'Racial Bias in Education';"}
{"prompt":"What is the production count for well 'E05' in 'Amazon Rainforest'? with given SQL schema CREATE TABLE wells (well_id VARCHAR(10), well_location VARCHAR(20)); INSERT INTO wells (well_id, well_location) VALUES ('E05', 'Amazon Rainforest'); CREATE TABLE production (well_id VARCHAR(10), production_count INT); INSERT INTO production (well_id, production_count) VALUES ('E05', 9000);","completion":"SELECT production_count FROM production WHERE well_id = 'E05';"}
{"prompt":"How many supplies were sent to each country in 2020? with given SQL schema CREATE TABLE countries (id INT, name VARCHAR(255)); CREATE TABLE supplies (id INT, country_id INT, sent_date DATE, quantity INT);","completion":"SELECT countries.name, COUNT(supplies.id) FROM supplies JOIN countries ON supplies.country_id = countries.id WHERE supplies.sent_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY supplies.country_id;"}
{"prompt":"What is the total number of relief_operations in 'relief_ops' table for 'Asia' in Q1 2022? with given SQL schema CREATE TABLE relief_ops (operation_id INT, operation_type VARCHAR(50), operation_date DATE, region VARCHAR(50)); INSERT INTO relief_ops (operation_id, operation_type, operation_date, region) VALUES (1, 'food distribution', '2022-01-01', 'Asia'), (2, 'medical aid', '2022-01-02', 'Asia');","completion":"SELECT COUNT(operation_id) FROM relief_ops WHERE EXTRACT(QUARTER FROM operation_date) = 1 AND region = 'Asia';"}
{"prompt":"What's the average budget for accessible technology projects in Africa? with given SQL schema CREATE TABLE Accessible_Tech_Projects (ID INT, Project_Name VARCHAR(100), Location VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO Accessible_Tech_Projects (ID, Project_Name, Location, Budget) VALUES (1, 'Tech4All', 'Africa', 150000.00), (2, 'AI4Good', 'Asia', 200000.00), (3, 'EqualWeb', 'Europe', 120000.00);","completion":"SELECT AVG(Budget) FROM Accessible_Tech_Projects WHERE Location = 'Africa';"}
{"prompt":"Which bus had the highest fare collection on April 1st, 2021? with given SQL schema CREATE SCHEMA trans schemas.trans; CREATE TABLE bus_routes (route_id INT, fare FLOAT, bus_number INT, date DATE); INSERT INTO bus_routes (route_id, fare, bus_number, date) VALUES (201, 1.75, 1201, '2021-04-01'), (201, 1.75, 1201, '2021-04-01'), (202, 2.25, 1202, '2021-04-01'), (203, 1.50, 1203, '2021-04-01');","completion":"SELECT bus_number, MAX(fare) FROM bus_routes WHERE date = '2021-04-01' GROUP BY bus_number;"}
{"prompt":"Identify the total quantity of 'hemp' material sold by all suppliers, excluding 'GreenFabrics'. with given SQL schema CREATE TABLE HempSales (SaleID INT, SupplierName TEXT, Material TEXT, Quantity INT); INSERT INTO HempSales (SaleID, SupplierName, Material, Quantity) VALUES (1, 'StandardTextiles', 'Hemp', 25), (2, 'GreenFabrics', 'Hemp', 35), (3, 'EcoWeave', 'Hemp', 45);","completion":"SELECT SUM(Quantity) FROM HempSales WHERE SupplierName != 'GreenFabrics' AND Material = 'Hemp';"}
{"prompt":"Update the customer_sizes table to change the size to 'Medium' for the customer_id 1001 with given SQL schema CREATE TABLE customer_sizes (customer_id INT PRIMARY KEY, size VARCHAR(255)); INSERT INTO customer_sizes (customer_id, size) VALUES (1001, 'Large'), (1002, 'Small'), (1003, 'Medium');","completion":"UPDATE customer_sizes SET size = 'Medium' WHERE customer_id = 1001;"}
{"prompt":"Identify the client with the highest balance in the Shariah-compliant finance database, and show their balance and name. with given SQL schema CREATE TABLE shariah_compliant_finance (client_id INT, name TEXT, balance DECIMAL(10, 2)); INSERT INTO shariah_compliant_finance (client_id, name, balance) VALUES (3, 'Ali', 25000.50), (4, 'Fatima', 30000.75);","completion":"SELECT client_id, name, balance FROM shariah_compliant_finance ORDER BY balance DESC LIMIT 1;"}
{"prompt":"What is the total amount spent on each program type in the year 2019, sorted by the total amount spent in descending order? with given SQL schema CREATE TABLE Programs (ProgramType TEXT, Budget DECIMAL(10,2)); CREATE TABLE Spending (SpendingID INT, ProgramType TEXT, SpendingDate DATE, Amount DECIMAL(10,2));","completion":"SELECT P.ProgramType, SUM(S.Amount) as TotalSpending  FROM Spending S JOIN Programs P ON S.ProgramType = P.ProgramType WHERE YEAR(SpendingDate) = 2019 GROUP BY P.ProgramType ORDER BY TotalSpending DESC;"}
{"prompt":"What is the total number of hours volunteered per week, and how many volunteers volunteered during each week? with given SQL schema CREATE TABLE volunteer_hours (id INT, volunteer_id INT, hours DECIMAL, week INT); INSERT INTO volunteer_hours (id, volunteer_id, hours, week) VALUES (1, 1, 5.0, 1), (2, 2, 10.0, 1), (3, 3, 7.5, 1), (4, 1, 4.0, 2), (5, 3, 8.0, 2);","completion":"SELECT SUM(hours), COUNT(DISTINCT volunteer_id) FROM volunteer_hours GROUP BY week;"}
{"prompt":"How much of each food category is supplied daily? with given SQL schema CREATE TABLE DailySupply (SupplyDate DATE, Category TEXT, Quantity INT);","completion":"SELECT Category, AVG(Quantity) AS DailyQuantity   FROM DailySupply   GROUP BY Category;"}
{"prompt":"What is the average daily calorie intake per person for each country in the 'Europe' region? with given SQL schema CREATE TABLE Countries (CountryID INT, CountryName VARCHAR(50), Region VARCHAR(50), Population INT); INSERT INTO Countries (CountryID, CountryName, Region, Population) VALUES (1, 'France', 'Europe', 67062000), (2, 'Germany', 'Europe', 83166711), (3, 'Spain', 'Europe', 47351567); CREATE TABLE Meals (MealID INT, CountryID INT, MealDate DATE, Calories INT); INSERT INTO Meals (MealID, CountryID, MealDate, Calories) VALUES (1, 1, '2022-01-01', 3500), (2, 1, '2022-01-02', 3000), (3, 2, '2022-01-01', 4000), (4, 2, '2022-01-02', 3500), (5, 3, '2022-01-01', 2500), (6, 3, '2022-01-02', 3000);","completion":"SELECT C.CountryName, AVG(M.Calories\/C.Population) AS AvgDailyCalories FROM Meals M INNER JOIN Countries C ON M.CountryID = C.CountryID WHERE C.Region = 'Europe' GROUP BY C.CountryName;"}
{"prompt":"What is the average serving size of dishes that meet the daily recommended intake of protein? with given SQL schema CREATE TABLE dishes (dish_id INT, name VARCHAR(50), protein INT, serving_size INT); INSERT INTO dishes (dish_id, name, protein, serving_size) VALUES (1, 'Chicken and Quinoa Bowl', 30, 400), (2, 'Tuna Salad', 40, 300), (3, 'Black Bean Burger', 25, 250);","completion":"SELECT AVG(serving_size) FROM dishes WHERE protein >= (SELECT serving_size * 0.3) GROUP BY protein HAVING COUNT(*) > 0;"}
{"prompt":"List all warehouse management transactions for 'Warehouse3' with their corresponding statuses and dates. with given SQL schema CREATE TABLE Warehouses (WarehouseID INT, WarehouseName VARCHAR(20)); INSERT INTO Warehouses (WarehouseID, WarehouseName) VALUES (1, 'Warehouse1'), (2, 'Warehouse2'), (3, 'Warehouse3'); CREATE TABLE WarehouseManagementTransactions (TransactionID INT, WarehouseID INT, TransactionStatus VARCHAR(20), TransactionDate DATE); INSERT INTO WarehouseManagementTransactions (TransactionID, WarehouseID, TransactionStatus, TransactionDate) VALUES (1, 3, 'Received', '2022-01-01'), (2, 3, 'Stored', '2022-01-02');","completion":"SELECT WarehouseManagementTransactions.TransactionID, WarehouseManagementTransactions.TransactionStatus, WarehouseManagementTransactions.TransactionDate FROM Warehouses JOIN WarehouseManagementTransactions ON Warehouses.WarehouseID = WarehouseManagementTransactions.WarehouseID WHERE Warehouses.WarehouseName = 'Warehouse3';"}
{"prompt":"What is the maximum funding for a biosensor technology startup in Canada? with given SQL schema CREATE SCHEMA biosensors; CREATE TABLE biosensors.startups (id INT, name VARCHAR(100), country VARCHAR(50), funding FLOAT); INSERT INTO biosensors.startups (id, name, country, funding) VALUES (1, 'StartupC', 'Canada', 8000000.00); INSERT INTO biosensors.startups (id, name, country, funding) VALUES (2, 'StartupD', 'Canada', 12000000.00);","completion":"SELECT MAX(funding) FROM biosensors.startups WHERE country = 'Canada';"}
{"prompt":"Which departments have no reported cases of fraud, displayed in alphabetical order? with given SQL schema CREATE TABLE government_departments (dept_name TEXT, fraud_cases INT); INSERT INTO government_departments (dept_name, fraud_cases) VALUES ('Department A', 0), ('Department B', 3), ('Department C', 0), ('Department D', 2), ('Department E', 1);","completion":"SELECT dept_name FROM government_departments WHERE fraud_cases = 0 ORDER BY dept_name ASC;"}
{"prompt":"How many articles were published by each author in the last year? with given SQL schema CREATE TABLE if NOT EXISTS authors (author_id INT, author_name VARCHAR(50)); CREATE TABLE if NOT EXISTS articles (article_id INT, author_id INT, publication_date DATE); INSERT INTO authors (author_id, author_name) VALUES (1, 'John Doe'), (2, 'Jane Doe'); INSERT INTO articles (article_id, author_id, publication_date) VALUES (1, 1, '2021-01-01'), (2, 2, '2020-12-31');","completion":"SELECT authors.author_name, COUNT(articles.article_id) as num_articles FROM authors INNER JOIN articles ON authors.author_id = articles.author_id WHERE articles.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY authors.author_name;"}
{"prompt":"List the top 3 graduate programs with the highest enrollment of underrepresented students, along with the number of underrepresented students enrolled in each program. with given SQL schema CREATE TABLE Graduate_Programs (program VARCHAR(50), enrollment INT, underrepresented_student BOOLEAN); INSERT INTO Graduate_Programs (program, enrollment, underrepresented_student) VALUES ('Computer Science', 150, true), ('Mathematics', 120, true), ('Physics', 180, false), ('Chemistry', 100, true), ('Biology', 200, true);","completion":"SELECT program, SUM(underrepresented_student) as underrepresented_enrollment FROM Graduate_Programs WHERE underrepresented_student = true GROUP BY program ORDER BY underrepresented_enrollment DESC LIMIT 3;"}
{"prompt":"What is the maximum capacity of smart city technology adoptions in the city of Beijing? with given SQL schema CREATE TABLE smart_city_tech_adoptions (id INT, name TEXT, city TEXT, capacity INT); INSERT INTO smart_city_tech_adoptions (id, name, city, capacity) VALUES (1, 'Tech Adoption 1', 'Beijing', 10000); INSERT INTO smart_city_tech_adoptions (id, name, city, capacity) VALUES (2, 'Tech Adoption 2', 'Beijing', 15000); INSERT INTO smart_city_tech_adoptions (id, name, city, capacity) VALUES (3, 'Tech Adoption 3', 'New York', 20000);","completion":"SELECT MAX(capacity) FROM smart_city_tech_adoptions WHERE city = 'Beijing';"}
{"prompt":"What is the minimum installation cost (in USD) of electric vehicle charging stations in urban areas, grouped by station type and year, where the minimum cost is greater than 5,000 USD? with given SQL schema CREATE TABLE ev_charging_stations_urban (station_id INT, station_type VARCHAR(50), year INT, installation_cost INT);","completion":"SELECT station_type, year, MIN(installation_cost) FROM ev_charging_stations_urban GROUP BY station_type, year HAVING MIN(installation_cost) > 5000;"}
{"prompt":"What is the total cost of renewable energy projects in the European region? with given SQL schema CREATE TABLE renewable_energy_projects (project_id INT, project_name VARCHAR(50), region VARCHAR(20), cost DECIMAL(10,2)); INSERT INTO renewable_energy_projects (project_id, project_name, region, cost) VALUES (1, 'Wind Farm', 'Europe', 15000000.00), (2, 'Solar Park', 'Asia', 20000000.00), (3, 'Geothermal Plant', 'Africa', 12000000.00);","completion":"SELECT SUM(cost) FROM renewable_energy_projects WHERE region = 'Europe';"}
{"prompt":"What is the total number of community health workers serving Indigenous communities in Canada? with given SQL schema CREATE TABLE community_health_workers (id INT, name TEXT, community TEXT); INSERT INTO community_health_workers (id, name, community) VALUES (1, 'John Doe', 'First Nations'); INSERT INTO community_health_workers (id, name, community) VALUES (2, 'Jane Smith', 'Inuit'); INSERT INTO community_health_workers (id, name, community) VALUES (3, 'Maria Garcia', 'M\u00e9tis'); INSERT INTO community_health_workers (id, name, community) VALUES (4, 'David Kim', 'First Nations');","completion":"SELECT COUNT(*) FROM community_health_workers WHERE community IN ('First Nations', 'Inuit', 'M\u00e9tis');"}
{"prompt":"What is the average rating of eco-friendly hotels in Spain? with given SQL schema CREATE TABLE eco_hotels (hotel_id INT, hotel_name TEXT, country TEXT, rating FLOAT); INSERT INTO eco_hotels (hotel_id, hotel_name, country, rating) VALUES (1, 'Eco Hotel Madrid', 'Spain', 4.3), (2, 'Green Vila', 'Spain', 4.6);","completion":"SELECT AVG(rating) FROM eco_hotels WHERE country = 'Spain';"}
{"prompt":"What is the total revenue generated by sustainable accommodations in each region? with given SQL schema CREATE TABLE accommodation (id INT, name TEXT, region TEXT, sustainable INT, price INT); INSERT INTO accommodation (id, name, region, sustainable, price) VALUES (1, 'Eco Retreat', 'North America', 1, 100); INSERT INTO accommodation (id, name, region, sustainable, price) VALUES (2, 'Sustainable Resort', 'South America', 1, 150);","completion":"SELECT region, SUM(price) as total_revenue FROM accommodation WHERE sustainable = 1 GROUP BY region;"}
{"prompt":"What is the total revenue generated from cultural heritage sites in Tokyo? with given SQL schema CREATE TABLE cultural_sites (id INT, name TEXT, city TEXT, revenue FLOAT); INSERT INTO cultural_sites (id, name, city, revenue) VALUES (1, 'Temple of Gold', 'Tokyo', 1000000.00), (2, 'Shrine of Silver', 'Tokyo', 1200000.00), (3, 'Museum of History', 'Tokyo', 800000.00);","completion":"SELECT SUM(revenue) FROM cultural_sites WHERE city = 'Tokyo';"}
{"prompt":"What is the average rating of hotels in the United States that offer AI-powered services? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT, ai_services BOOLEAN, rating FLOAT); INSERT INTO hotels (hotel_id, hotel_name, country, ai_services, rating) VALUES (1, 'The Smart Hotel', 'USA', true, 4.5), (2, 'The Classic Inn', 'USA', false, 4.2), (3, 'Innovative Resort', 'USA', true, 4.8);","completion":"SELECT AVG(rating) FROM hotels WHERE ai_services = true AND country = 'USA';"}
{"prompt":"Identify the artworks with the earliest creation year for each art movement. with given SQL schema CREATE TABLE Movements (MovementID INT, Name VARCHAR(50), OriginYear INT); INSERT INTO Movements (MovementID, Name, OriginYear) VALUES (1, 'Impressionism', 1874); INSERT INTO Movements (MovementID, Name, OriginYear) VALUES (2, 'Cubism', 1907);","completion":"SELECT A.Title, M.Name FROM Artworks A JOIN Movements M ON A.ArtMovement = M.Name WHERE A.Year = (SELECT MIN(Year) FROM Artworks WHERE ArtMovement = M.Name) GROUP BY M.Name;"}
{"prompt":"What is the minimum price of paintings sold by African artists in the last 15 years? with given SQL schema CREATE TABLE ArtWork (id INT, title VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2), sale_year INT, artist_continent VARCHAR(255)); INSERT INTO ArtWork (id, title, type, price, sale_year, artist_continent) VALUES (1, 'Painting1', 'Painting', 500, 2006, 'Africa');","completion":"SELECT MIN(price) FROM ArtWork WHERE type = 'Painting' AND artist_continent = 'Africa' AND sale_year >= 2006;"}
{"prompt":"How many language preservation grants worth over $70,000 were issued in Africa? with given SQL schema CREATE TABLE GrantsAfrica (id INT, name TEXT, type TEXT, amount INT, region TEXT); INSERT INTO GrantsAfrica (id, name, type, amount, region) VALUES (1, 'Grant 1', 'Language', 75000, 'Africa'), (2, 'Grant 2', 'Heritage', 60000, 'Africa'), (3, 'Grant 3', 'Language', 80000, 'Africa');","completion":"SELECT COUNT(*) FROM GrantsAfrica WHERE type = 'Language' AND amount > 70000 AND region = 'Africa'"}
{"prompt":"Which traditional Japanese art forms have more than 500 active practitioners? with given SQL schema CREATE TABLE art_forms (id INT, name TEXT, type TEXT, num_practitioners INT); INSERT INTO art_forms (id, name, type, num_practitioners) VALUES (1, 'Ukiyo-e', 'Printmaking', 400), (2, 'Kabuki', 'Theater', 600), (3, 'Ikebana', 'Flower Arrangement', 700);","completion":"SELECT name FROM art_forms WHERE type = 'Printmaking' OR type = 'Theater' OR type = 'Flower Arrangement' HAVING num_practitioners > 500;"}
{"prompt":"List the top 3 therapists with the most group therapy sessions in the therapy_sessions table. with given SQL schema CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE, session_duration TIME, session_type VARCHAR(255));","completion":"SELECT therapist_id, COUNT(*) as session_count FROM therapy_sessions WHERE session_type = 'group therapy' GROUP BY therapist_id ORDER BY session_count DESC LIMIT 3;"}
{"prompt":"What is the average water quality index for water treatment plants in Texas, categorized by plant type and water source? with given SQL schema CREATE TABLE Plants (id INT, state VARCHAR(2), plant_type VARCHAR(10), water_source VARCHAR(10), water_quality_index FLOAT); INSERT INTO Plants (id, state, plant_type, water_source, water_quality_index) VALUES (1, 'TX', 'Surface', 'River', 80), (2, 'TX', 'Ground', 'Well', 85), (3, 'TX', 'Surface', 'Lake', 75);","completion":"SELECT plant_type, water_source, AVG(water_quality_index) FROM Plants WHERE state = 'TX' GROUP BY plant_type, water_source;"}
{"prompt":"Identify the destinations with the highest number of repeat visitors from the US. with given SQL schema CREATE TABLE RepeatTravelers (Visitor VARCHAR(20), Destination VARCHAR(20), VisitCount INT); INSERT INTO RepeatTravelers (Visitor, Destination, VisitCount) VALUES ('David', 'Paris', 3), ('Ella', 'London', 4), ('Fiona', 'Paris', 2);","completion":"SELECT Destination, AVG(VisitCount) AS AvgVisitCount FROM RepeatTravelers WHERE Visitor LIKE '%USA%' GROUP BY Destination ORDER BY AvgVisitCount DESC;"}
{"prompt":"How many legal aid clinics and community mediation centers are there in total, and what is the sum of cases handled by each type of center, for centers located in the state of California? with given SQL schema CREATE TABLE LegalAidClinics (ClinicName text, State text, NumCases int); INSERT INTO LegalAidClinics VALUES ('Clinic1', 'CA', 30, '2022-01-01'), ('Clinic2', 'CA', 25, '2022-01-01'); CREATE TABLE CommunityMediationCenters (CenterName text, State text, NumCases int); INSERT INTO CommunityMediationCenters VALUES ('CM1', 'CA', 22, '2022-01-01'), ('CM2', 'CA', 28, '2022-01-01');","completion":"SELECT State, 'Legal Aid Clinics' AS CenterType, COUNT(*) AS NumCenters, SUM(NumCases) AS TotalCases FROM LegalAidClinics WHERE State = 'CA' UNION ALL SELECT State, 'Community Mediation Centers', COUNT(*), SUM(NumCases) FROM CommunityMediationCenters WHERE State = 'CA';"}
{"prompt":"What is the maximum population of any marine species in the Atlantic ocean? with given SQL schema CREATE TABLE marine_species (id INT, name TEXT, population INT, location TEXT); INSERT INTO marine_species (id, name, population, location) VALUES (1, 'Dolphin', 50, 'Atlantic'); INSERT INTO marine_species (id, name, population, location) VALUES (2, 'Turtle', 25, 'Atlantic'); INSERT INTO marine_species (id, name, population, location) VALUES (3, 'Shark', 100, 'Pacific');","completion":"SELECT MAX(population) FROM marine_species WHERE location = 'Atlantic';"}
{"prompt":"Update the name of language with ID 3 to 'Italian' and ID 4 to 'Russian' with given SQL schema CREATE TABLE Languages (LanguageID int, LanguageName varchar(50)); INSERT INTO Languages (LanguageID, LanguageName) VALUES (1, 'English'), (2, 'Spanish'), (3, 'French'), (4, 'German');","completion":"UPDATE Languages SET LanguageName = CASE LanguageID WHEN 3 THEN 'Italian' WHEN 4 THEN 'Russian' ELSE LanguageName END;"}
{"prompt":"Update the quantity of 'Fighter Jet' sales records in 'Africa' to 15 for the year '2025' with given SQL schema CREATE TABLE military_sales (id INT PRIMARY KEY, region VARCHAR(20), year INT, equipment_name VARCHAR(30), quantity INT, value FLOAT); INSERT INTO military_sales (id, region, year, equipment_name, quantity, value) VALUES (1, 'Africa', 2025, 'Fighter Jet', 10, 6000000), (2, 'Africa', 2025, 'Helicopter', 15, 9000000), (3, 'Africa', 2025, 'Tank', 20, 13000000);","completion":"UPDATE military_sales SET quantity = 15 WHERE region = 'Africa' AND equipment_name = 'Fighter Jet' AND year = 2025;"}
{"prompt":"What is the average cost of air defense systems sold by ApexCorp in the Asia-Pacific region? with given SQL schema CREATE TABLE IF NOT EXISTS air_defense_sales (system_id int, cost float, company varchar(30), region varchar(30)); INSERT INTO air_defense_sales (system_id, cost, company, region) VALUES (1, 5000000, 'ApexCorp', 'Asia-Pacific'), (2, 6000000, 'ApexCorp', 'Asia-Pacific'), (3, 4500000, 'ApexCorp', 'Asia-Pacific');","completion":"SELECT AVG(cost) FROM air_defense_sales WHERE company = 'ApexCorp' AND region = 'Asia-Pacific';"}
{"prompt":"What is the earliest start date of defense project negotiations with Saudi Arabia? with given SQL schema CREATE TABLE DefenseProjectTimelines (id INT PRIMARY KEY, project_name VARCHAR(50), negotiation_start_date DATE, negotiation_end_date DATE, country VARCHAR(50)); INSERT INTO DefenseProjectTimelines (id, project_name, negotiation_start_date, negotiation_end_date, country) VALUES (1, 'S-400 Missile Defense System', '2016-01-01', '2018-01-01', 'Saudi Arabia'), (2, 'AK-12 Assault Rifle', '2017-01-01', '2019-01-01', 'Saudi Arabia');","completion":"SELECT MIN(negotiation_start_date) FROM DefenseProjectTimelines WHERE country = 'Saudi Arabia';"}
{"prompt":"What is the total amount of minerals extracted by each mining company in each state? with given SQL schema CREATE TABLE mineral_extraction (company VARCHAR(255), state VARCHAR(255), year INT, total_tons FLOAT); INSERT INTO mineral_extraction (company, state, year, total_tons) VALUES ('STU Mining', 'New Mexico', 2017, 50000), ('STU Mining', 'New Mexico', 2018, 55000), ('VWX Mining', 'Texas', 2017, 60000), ('VWX Mining', 'Texas', 2018, 65000);","completion":"SELECT company, state, SUM(total_tons) as total_tons FROM mineral_extraction GROUP BY company, state;"}
{"prompt":"What is the percentage of women and non-binary individuals in leadership roles in the mining industry? with given SQL schema CREATE TABLE workers (id INT, role TEXT, gender TEXT); INSERT INTO workers (id, role, gender) VALUES (1, 'Manager', 'Male'), (2, 'Engineer', 'Female'), (3, 'Operator', 'Non-binary'), (4, 'Manager', 'Female'), (5, 'Engineer', 'Non-binary'), (6, 'Operator', 'Male');","completion":"SELECT (COUNT(*) FILTER (WHERE (role = 'Manager' AND gender IN ('Female', 'Non-binary')))) * 100.0 \/ COUNT(*) FROM workers WHERE role = 'Manager';"}
{"prompt":"Find the top 3 recipients by total donations? with given SQL schema CREATE TABLE Donations (DonationID int, Recipient varchar(50), Amount decimal(10,2)); INSERT INTO Donations (DonationID, Recipient, Amount) VALUES (1, 'UNICEF', 500), (2, 'Red Cross', 750), (3, 'Greenpeace', 300), (4, 'Red Cross', 800), (5, 'UNICEF', 900), (6, 'Doctors Without Borders', 600);","completion":"SELECT Recipient, SUM(Amount) as TotalDonated FROM Donations GROUP BY Recipient ORDER BY TotalDonated DESC LIMIT 3;"}
{"prompt":"What is the total number of players and esports events? with given SQL schema CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (2, 30, 'Female', 'Canada'); CREATE TABLE EsportsEvents (EventID INT, PlayerID INT, EventName VARCHAR(50)); INSERT INTO EsportsEvents (EventID, PlayerID, EventName) VALUES (1, 1, 'GameX Championship'); INSERT INTO EsportsEvents (EventID, PlayerID, EventName) VALUES (2, 2, 'CyberSport Cup');","completion":"SELECT COUNT(Players.PlayerID) + COUNT(EsportsEvents.EventID) FROM Players;"}
{"prompt":"How many IoT devices are active in the 'Asia' region? with given SQL schema CREATE TABLE IoTDevices (device_id INT, device_type VARCHAR(20), region VARCHAR(10), active BOOLEAN); INSERT INTO IoTDevices (device_id, device_type, region, active) VALUES (1, 'Soil Moisture Sensor', 'West', TRUE); INSERT INTO IoTDevices (device_id, device_type, region, active) VALUES (2, 'Soil Moisture Sensor', 'East', TRUE); INSERT INTO IoTDevices (device_id, device_type, region, active) VALUES (3, 'Soil Moisture Sensor', 'North', FALSE); INSERT INTO IoTDevices (device_id, device_type, region, active) VALUES (4, 'Soil Moisture Sensor', 'South', TRUE); INSERT INTO IoTDevices (device_id, device_type, region, active) VALUES (5, 'Soil Moisture Sensor', 'Asia', TRUE);","completion":"SELECT COUNT(*) FROM IoTDevices WHERE region = 'Asia' AND active = TRUE;"}
{"prompt":"How many public schools are there in the state of Texas? with given SQL schema CREATE TABLE schools (state VARCHAR(20), city VARCHAR(20), school_name VARCHAR(30), type VARCHAR(20)); INSERT INTO schools VALUES ('Texas', 'Houston', 'Houston High School', 'Public'), ('Texas', 'Dallas', 'Dallas High School', 'Public');","completion":"SELECT COUNT(*) FROM schools WHERE state = 'Texas' AND type = 'Public';"}
{"prompt":"What is the average budget for public schools in each region? with given SQL schema CREATE TABLE Schools (Region VARCHAR(20), School VARCHAR(20), Budget DECIMAL(10,2)); INSERT INTO Schools (Region, School, Budget) VALUES ('Northeast', 'SchoolA', 15000.00), ('West', 'SchoolB', 20000.00), ('Southeast', 'SchoolC', 18000.00);","completion":"SELECT AVG(Budget) FROM Schools GROUP BY Region;"}
{"prompt":"What is the total number of public parks in the city of Philadelphia? with given SQL schema CREATE TABLE parks (park_id INT, park_city TEXT, park_type TEXT); INSERT INTO parks (park_id, park_city, park_type) VALUES (1, 'Philadelphia', 'public'), (2, 'Philadelphia', 'private'), (3, 'New York', 'public');","completion":"SELECT COUNT(*) FROM parks WHERE park_city = 'Philadelphia' AND park_type = 'public';"}
{"prompt":"Update the green space percentage for the GreenVille area in the SustainableUrbanism table. with given SQL schema CREATE TABLE SustainableUrbanism (area TEXT, green_space_percentage FLOAT, public_transportation_score INT, walkability_score INT); INSERT INTO SustainableUrbanism (area, green_space_percentage, public_transportation_score, walkability_score) VALUES ('Eastside', 0.3, 8, 9), ('Westside', 0.5, 7, 8), ('GreenVille', 0.4, 8, 8);","completion":"UPDATE SustainableUrbanism SET green_space_percentage = 0.5 WHERE area = 'GreenVille';"}
{"prompt":"What is the maximum property price in the sustainable_communities table? with given SQL schema CREATE TABLE sustainable_communities (id INT, property_price FLOAT); INSERT INTO sustainable_communities (id, property_price) VALUES (1, 700000), (2, 800000), (3, 900000);","completion":"SELECT MAX(property_price) FROM sustainable_communities;"}
{"prompt":"What is the minimum square footage of an inclusive housing unit in the city of Miami? with given SQL schema CREATE TABLE housing (id INT, city VARCHAR(20), size INT, inclusive BOOLEAN); INSERT INTO housing (id, city, size, inclusive) VALUES (1, 'Miami', 800, TRUE), (2, 'Miami', 1000, FALSE), (3, 'Miami', 1200, TRUE);","completion":"SELECT MIN(size) FROM housing WHERE city = 'Miami' AND inclusive = TRUE;"}
{"prompt":"Identify menu items that have not been inspected in the last 30 days with given SQL schema CREATE TABLE menu_items (id INT, name VARCHAR(255), restaurant_id INT); INSERT INTO menu_items (id, name, restaurant_id) VALUES (1, 'Burger', 1), (2, 'Pizza', 1), (3, 'Pasta', 2), (4, 'Salad', 2); CREATE TABLE food_safety_inspections (id INT, menu_item_id INT, score INT, inspection_date DATE); INSERT INTO food_safety_inspections (id, menu_item_id, score, inspection_date) VALUES (1, 1, 95, '2022-01-01'), (2, 1, 90, '2022-02-01'), (3, 2, 98, '2022-01-01'), (4, 2, 92, '2022-02-01'), (5, 3, 88, '2022-01-01'), (6, 3, 90, '2022-02-01'), (7, 4, 95, '2022-01-01'), (8, 4, 92, '2022-02-01');","completion":"SELECT mi.name FROM menu_items mi LEFT JOIN food_safety_inspections fsi ON mi.id = fsi.menu_item_id WHERE fsi.inspection_date IS NULL OR fsi.inspection_date < NOW() - INTERVAL '30 days';"}
{"prompt":"List all menu items and their prices for 'Sustainable Seafood Restaurant'. with given SQL schema CREATE TABLE Menu (Restaurant VARCHAR(255), Item VARCHAR(255), Price DECIMAL(5,2)); INSERT INTO Menu (Restaurant, Item, Price) VALUES ('Vegan Bistro', 'Tofu Stir Fry', 12.99), ('Vegan Bistro', 'Quinoa Salad', 10.99), ('Sustainable Seafood Restaurant', 'Grilled Salmon', 19.99), ('Sustainable Seafood Restaurant', 'Lobster Bisque', 7.99);","completion":"SELECT Item, Price FROM Menu WHERE Restaurant = 'Sustainable Seafood Restaurant';"}
{"prompt":"What is the maximum altitude reached by a SpaceX Falcon 9 rocket? with given SQL schema CREATE TABLE RocketAltitudes (rocket TEXT, altitude FLOAT); INSERT INTO RocketAltitudes (rocket, altitude) VALUES ('Falcon 9', 700.0), ('Falcon 9', 800.0), ('Falcon 9', 900.0), ('Falcon Heavy', 2500.0);","completion":"SELECT MAX(altitude) FROM RocketAltitudes WHERE rocket = 'Falcon 9';"}
{"prompt":"What is the total cost of satellite launches for each country? with given SQL schema CREATE TABLE satellites (country VARCHAR(50), num_satellites INT, cost INT); INSERT INTO satellites (country, num_satellites, cost) VALUES ('USA', 1800, 4000000000), ('China', 400, 1000000000), ('Russia', 300, 1500000000);","completion":"SELECT country, SUM(cost) as total_cost FROM satellites GROUP BY country;"}
{"prompt":"Add a new column 'assists' to the 'athlete_stats' table with given SQL schema CREATE TABLE athlete_stats (athlete_id INT PRIMARY KEY, name VARCHAR(100), sport VARCHAR(50), team VARCHAR(50), games_played INT, goals_scored INT);","completion":"ALTER TABLE athlete_stats ADD COLUMN assists INT;"}
{"prompt":"Update the ticket_price of seat_section 'General' in the 'ticket_sales' table to $100 with given SQL schema CREATE TABLE ticket_sales (seat_section VARCHAR(10), ticket_price DECIMAL(5,2)); INSERT INTO ticket_sales (seat_section, ticket_price) VALUES ('General', 75.00), ('VIP', 100.00);","completion":"UPDATE ticket_sales SET ticket_price = 100.00 WHERE seat_section = 'General';"}
{"prompt":"Update the speed of electric trains in New York to reflect the latest measurements. with given SQL schema CREATE TABLE public.trains (id SERIAL PRIMARY KEY, name TEXT, speed FLOAT, city TEXT); INSERT INTO public.trains (name, speed, city) VALUES ('Electric Train 1', 85.2, 'New York'), ('Electric Train 2', 88.9, 'New York');","completion":"UPDATE public.trains SET speed = 86.1 WHERE city = 'New York' AND name LIKE 'Electric Train%';"}
{"prompt":"What is the maximum number of passengers carried by a public bus in Sydney? with given SQL schema CREATE TABLE passengers (id INT PRIMARY KEY, type VARCHAR(20), capacity INT, city VARCHAR(20));","completion":"SELECT MAX(capacity) FROM passengers WHERE type = 'Public Bus' AND city = 'Sydney';"}
{"prompt":"What is the ratio of electric cars to electric bikes in Seoul? with given SQL schema CREATE TABLE electric_vehicles (vehicle_id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO electric_vehicles (vehicle_id, type, city) VALUES (1, 'Car', 'Seoul'), (2, 'Car', 'Seoul'), (3, 'Bike', 'Seoul'), (4, 'Bike', 'Seoul');","completion":"SELECT city, COUNT(*) FILTER (WHERE type = 'Car') * 1.0 \/ COUNT(*) FILTER (WHERE type = 'Bike') AS car_to_bike_ratio FROM electric_vehicles WHERE city = 'Seoul' GROUP BY city;"}
{"prompt":"What are the total sales for each product category in Q2 of 2022? with given SQL schema CREATE TABLE sales (sale_id INT, product_id INT, sale_date DATE, sale_amount DECIMAL(10,2));","completion":"SELECT product_id, SUM(sale_amount) FROM sales WHERE sale_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY product_id;"}
{"prompt":"What are the top 3 autonomous vehicles with the highest safety ratings in the 'auto_show' table? with given SQL schema CREATE TABLE auto_show (id INT, vehicle_name VARCHAR(50), safety_rating INT);","completion":"SELECT vehicle_name, safety_rating FROM (SELECT vehicle_name, safety_rating, ROW_NUMBER() OVER (ORDER BY safety_rating DESC) as safety_rank FROM auto_show WHERE vehicle_name LIKE '%Autonomous%') AS auton_ranks WHERE safety_rank <= 3;"}
{"prompt":"What is the safety rating of the most recent vehicle manufactured by BMW? with given SQL schema CREATE TABLE Vehicles (id INT, make VARCHAR(255), model VARCHAR(255), safety_rating FLOAT, manufacturing_date DATE); INSERT INTO Vehicles (id, make, model, safety_rating, manufacturing_date) VALUES (1, 'Toyota', 'Corolla', 4.2, '2017-01-01'); INSERT INTO Vehicles (id, make, model, safety_rating, manufacturing_date) VALUES (2, 'BMW', '3 Series', 4.8, '2022-01-01');","completion":"SELECT safety_rating FROM Vehicles WHERE make = 'BMW' ORDER BY manufacturing_date DESC LIMIT 1;"}
{"prompt":"Add new cargo type 'Grains' to vessel with ID 2. with given SQL schema CREATE TABLE vessels (id INT, name VARCHAR(255)); INSERT INTO vessels (id, name) VALUES (1, 'VesselA'), (2, 'VesselB'), (3, 'VesselC'); CREATE TABLE cargo (id INT, vessel_id INT, cargo_type VARCHAR(255)); INSERT INTO cargo (id, vessel_id, cargo_type) VALUES (1, 1, 'Fuel'), (2, 1, 'Containers');","completion":"INSERT INTO cargo (id, vessel_id, cargo_type) VALUES (3, 2, 'Grains');"}
{"prompt":"How many accidents were reported for vessels with more than 5000 tons cargo capacity? with given SQL schema CREATE TABLE vessels (id INT, name VARCHAR(255), cargo_capacity INT); INSERT INTO vessels (id, name, cargo_capacity) VALUES (1, 'Vessel_A', 6000), (2, 'Vessel_B', 4000), (3, 'Vessel_C', 5500); CREATE TABLE accidents (id INT, vessel_id INT, date DATE); INSERT INTO accidents (id, vessel_id, date) VALUES (1, 1, '2021-02-12'), (2, 1, '2021-04-01'), (3, 2, '2021-01-15'), (4, 3, '2021-03-20');","completion":"SELECT COUNT(a.vessel_id) as accidents_count FROM accidents a JOIN vessels v ON a.vessel_id = v.id WHERE v.cargo_capacity > 5000;"}
{"prompt":"What is the average speed of Taiwanese-flagged vessels traveling to Port H in Q1 2022? with given SQL schema CREATE TABLE Vessels (id INT, name TEXT, speed FLOAT, flag_country TEXT, arrive_port TEXT, arrive_date DATE); INSERT INTO Vessels (id, name, speed, flag_country, arrive_port, arrive_date) VALUES (1, 'Vessel1', 21.5, 'Taiwan', 'Port H', '2022-01-15'); INSERT INTO Vessels (id, name, speed, flag_country, arrive_port, arrive_date) VALUES (2, 'Vessel2', 23.0, 'Taiwan', 'Port H', '2022-02-01');","completion":"SELECT AVG(speed) FROM Vessels WHERE flag_country = 'Taiwan' AND arrive_port = 'Port H' AND EXTRACT(YEAR FROM arrive_date) = 2022 AND EXTRACT(QUARTER FROM arrive_date) = 1;"}
{"prompt":"What is the total investment in circular economy initiatives in North America in USD? with given SQL schema CREATE TABLE circular_investments (year INT, region TEXT, investment FLOAT); INSERT INTO circular_investments (year, region, investment) VALUES (2018, 'Latin America', 1500000), (2018, 'North America', 2500000), (2019, 'Latin America', 1800000), (2019, 'North America', 3000000);","completion":"SELECT SUM(investment) FROM circular_investments WHERE region = 'North America';"}
{"prompt":"Delete records of users who joined after Jan 5, 2022 from the \"Members\" table with given SQL schema CREATE TABLE Members (Id INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), JoinDate DATETIME, LastLogin DATETIME);","completion":"DELETE FROM Members WHERE JoinDate > '2022-01-05';"}
{"prompt":"Delete all records in the ai_safety table where the algorithm column is 'DeepLearning' and the risk_level is 'high' with given SQL schema CREATE TABLE ai_safety (algorithm TEXT, risk_level TEXT, dataset TEXT, last_updated TIMESTAMP);","completion":"DELETE FROM ai_safety WHERE algorithm = 'DeepLearning' AND risk_level = 'high';"}
{"prompt":"How many AI safety research papers were published by each author? with given SQL schema CREATE TABLE SafetyPapers (id INT, author VARCHAR(255), title VARCHAR(255));","completion":"SELECT author, COUNT(*) FROM SafetyPapers GROUP BY author;"}
{"prompt":"How many community development initiatives were completed in Brazil between 2015 and 2019? with given SQL schema CREATE TABLE community_development_initiatives (id INT, initiative_name VARCHAR(50), country VARCHAR(50), completion_year INT); INSERT INTO community_development_initiatives (id, initiative_name, country, completion_year) VALUES (1, 'Fome Zero', 'Brazil', 2003), (2, 'Bolsa Fam\u00edlia', 'Brazil', 2015), (3, 'Minha Casa, Minha Vida', 'Brazil', 2019);","completion":"SELECT COUNT(*) FROM community_development_initiatives WHERE country = 'Brazil' AND completion_year BETWEEN 2015 AND 2019;"}
{"prompt":"How many rural infrastructure projects were completed in 2020? with given SQL schema CREATE TABLE rural_infrastructure (id INT, project_name VARCHAR(255), sector VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO rural_infrastructure (id, project_name, sector, location, start_date, end_date) VALUES (1, 'Rural Road Project', 'Infrastructure', 'Village C, Country Z', '2020-01-01', '2020-12-31');","completion":"SELECT COUNT(*) FROM rural_infrastructure WHERE YEAR(end_date) = 2020;"}
{"prompt":"Delete all records from the 'maintenance_records' table where the 'aircraft_model' is '787' and 'manufacturing_year' is greater than 2015 with given SQL schema CREATE TABLE maintenance_records (id INT PRIMARY KEY, aircraft_model VARCHAR(50), manufacturing_year INT, total_maintenance_hours INT);","completion":"DELETE FROM maintenance_records WHERE aircraft_model = '787' AND manufacturing_year > 2015;"}
{"prompt":"What is the average size (in square kilometers) of habitats for animals in the 'habitats' table that are not birds? with given SQL schema CREATE TABLE habitats (id INT, animal_type VARCHAR(50), size_km FLOAT); INSERT INTO habitats (id, animal_type, size_km) VALUES (1, 'Mammal', 45.1), (2, 'Reptile', 25.1), (3, 'Bird', 12.5);","completion":"SELECT AVG(size_km) FROM habitats WHERE animal_type != 'Bird';"}
{"prompt":"Compare the number of building permits for residential and commercial types in California and Florida with a size between 1500 and 4000 square feet in 2020 with given SQL schema CREATE TABLE BuildingPermits (ID INT PRIMARY KEY, State VARCHAR(20), City VARCHAR(20), Type VARCHAR(20), Size INT, Date DATE, Year INT); INSERT INTO BuildingPermits (ID, State, City, Type, Size, Date, Year) VALUES (5, 'California', 'San Diego', 'Residential', 1500, '2020-01-02', 2020), (6, 'California', 'San Francisco', 'Commercial', 5000, '2020-03-15', 2020), (7, 'Florida', 'Miami', 'Residential', 2500, '2020-06-01', 2020), (8, 'Florida', 'Orlando', 'Commercial', 3500, '2020-09-01', 2020);","completion":"SELECT Type, COUNT(*) FROM BuildingPermits WHERE State IN ('California', 'Florida') AND Size BETWEEN 1500 AND 4000 AND Year = 2020 GROUP BY Type;"}
{"prompt":"Delete all records for production sites located in Japan from the production_sites table. with given SQL schema CREATE TABLE production_sites(id INT, site_name TEXT, location TEXT); INSERT INTO production_sites (id, site_name, location) VALUES (1, 'Site A', 'Japan'), (2, 'Site B', 'Canada'), (3, 'Site C', 'USA');","completion":"DELETE FROM production_sites WHERE location = 'Japan';"}
{"prompt":"Delete all climate finance records related to 'fossil fuel divestment' in Europe. with given SQL schema CREATE TABLE climate_finance (id INT, initiative VARCHAR(255), location VARCHAR(255), funding FLOAT); INSERT INTO climate_finance (id, initiative, location, funding) VALUES (1, 'Coal Divestment Campaign', 'Europe', 2000000);","completion":"DELETE FROM climate_finance WHERE initiative LIKE '%fossil fuel divestment%' AND location = 'Europe';"}
{"prompt":"Who is the manufacturer of the drug with the highest sales? with given SQL schema CREATE TABLE sales_data (drug_name TEXT, manufacturer TEXT, sales INTEGER);","completion":"SELECT manufacturer FROM sales_data WHERE sales = (SELECT MAX(sales) FROM sales_data);"}
{"prompt":"Calculate the average funding amount for companies founded in the last decade with given SQL schema CREATE TABLE company_founding (company_name VARCHAR(255), foundation_year INT); INSERT INTO company_founding (company_name, foundation_year) VALUES ('Tech Titan Inc', 2011), ('Innovate Inc', 2015), ('GreenTech LLC', 2018), ('Delta Co', 2016); CREATE TABLE funding (company_name VARCHAR(255), funding_amount INT); INSERT INTO funding (company_name, funding_amount) VALUES ('Tech Titan Inc', 500000), ('Innovate Inc', 750000), ('GreenTech LLC', 600000), ('Delta Co', 400000);","completion":"SELECT AVG(funding_amount) FROM funding JOIN company_founding ON funding.company_name = company_founding.company_name WHERE foundation_year >= 2011 AND foundation_year <= 2021;"}
{"prompt":"Delete funding_rounds records for company_id 103 with given SQL schema CREATE TABLE companies (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE funding_rounds (id INT PRIMARY KEY, company_id INT, round_type VARCHAR(255), raised_amount DECIMAL(10,2));","completion":"DELETE FROM funding_rounds WHERE company_id = 103;"}
{"prompt":"What is the number of companies founded by immigrants each year? with given SQL schema CREATE TABLE founders (founder_id INT, company_id INT, immigrant BOOLEAN); CREATE TABLE companies (company_id INT, founding_year INT); INSERT INTO founders (founder_id, company_id, immigrant) VALUES (1, 1, true), (2, 2, false), (3, 3, true), (4, 4, false); INSERT INTO companies (company_id, founding_year) VALUES (1, 2018), (2, 2017), (3, 2019), (4, 2018);","completion":"SELECT founding_year, COUNT(f.founder_id) as num_immigrant_founded_companies FROM founders f JOIN companies c ON f.company_id = c.company_id WHERE f.immigrant = true GROUP BY founding_year;"}
{"prompt":"Show decentralized applications and their respective developers who have worked together on more than 2 projects. with given SQL schema CREATE TABLE DApps (DAppId INT, DAppName VARCHAR(50), DeveloperId INT); CREATE TABLE Developers (DeveloperId INT, DeveloperName VARCHAR(50)); INSERT INTO DApps (DAppId, DAppName, DeveloperId) VALUES (1, 'App1', 1); INSERT INTO DApps (DAppId, DAppName, DeveloperId) VALUES (2, 'App2', 1); INSERT INTO DApps (DAppId, DAppName, DeveloperId) VALUES (3, 'App3', 1); INSERT INTO DApps (DAppId, DAppName, DeveloperId) VALUES (4, 'App4', 2); INSERT INTO DApps (DAppId, DAppName, DeveloperId) VALUES (5, 'App5', 2); INSERT INTO DApps (DAppId, DAppName, DeveloperId) VALUES (6, 'App6', 3); INSERT INTO Developers (DeveloperId, DeveloperName) VALUES (1, 'James'); INSERT INTO Developers (DeveloperId, DeveloperName) VALUES (2, 'Kim'); INSERT INTO Developers (DeveloperId, DeveloperName) VALUES (3, 'Lena');","completion":"SELECT d1.DAppName, d2.DeveloperName FROM DApps d1 INNER JOIN DApps d2 ON d1.DeveloperId = d2.DeveloperId WHERE d1.DAppId <> d2.DAppId GROUP BY d1.DAppName, d2.DeveloperName HAVING COUNT(*) > 2;"}
{"prompt":"Which species have a population growth rate higher than the average for protected areas? with given SQL schema CREATE TABLE species (id INT, name VARCHAR(50), population DECIMAL(5,2), protected_area_id INT, growth_rate DECIMAL(5,2)); INSERT INTO species (id, name, population, protected_area_id, growth_rate) VALUES (1, 'Species 1', 500.00, 1, 0.05), (2, 'Species 2', 800.00, 1, 0.03), (3, 'Species 3', 1200.00, 2, 0.07), (4, 'Species 4', 700.00, 2, 0.02); CREATE TABLE protected_areas (id INT, name VARCHAR(50)); INSERT INTO protected_areas (id, name) VALUES (1, 'Area 1'), (2, 'Area 2');","completion":"SELECT s.name, s.growth_rate FROM species s INNER JOIN protected_areas pa ON s.protected_area_id = pa.id GROUP BY s.name, s.growth_rate HAVING s.growth_rate > (SELECT AVG(s.growth_rate) FROM species s INNER JOIN protected_areas pa ON s.protected_area_id = pa.id);"}
{"prompt":"What is the average response time for emergencies in each district for the past month? with given SQL schema CREATE TABLE districts (district_id INT, district_name VARCHAR(255)); INSERT INTO districts (district_id, district_name) VALUES (1, 'Central'), (2, 'North'), (3, 'South'), (4, 'East'), (5, 'West'); CREATE TABLE emergencies (emergency_id INT, district_id INT, response_time INT, emergency_date DATE);","completion":"SELECT d.district_name, AVG(e.response_time) FROM districts d INNER JOIN emergencies e ON d.district_id = e.district_id WHERE e.emergency_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY d.district_name;"}
{"prompt":"What is the maximum number of artworks an artist has donated to a museum? with given SQL schema CREATE TABLE donations (id INT, artist VARCHAR(100), museum VARCHAR(50), artworks INT); INSERT INTO donations (id, artist, museum, artworks) VALUES (1, 'Mohamed', 'Metropolitan Museum', 15), (2, 'Sophia', 'Louvre Museum', 20), (3, 'Juan', 'Metropolitan Museum', 10);","completion":"SELECT MAX(artworks) FROM donations;"}
{"prompt":"How many military innovation projects were initiated in 2019? with given SQL schema CREATE TABLE military_innovation (id INT, year INT, projects INT); INSERT INTO military_innovation (id, year, projects) VALUES (1, 2017, 50), (2, 2018, 55), (3, 2019, 60), (4, 2020, 65), (5, 2021, 70);","completion":"SELECT SUM(projects) FROM military_innovation WHERE year = 2019;"}
{"prompt":"List the top 5 countries with the highest military spending as a percentage of their GDP in the year 2020. with given SQL schema CREATE TABLE military_expenditure (country TEXT, year INT, amount INT, gdp INT); INSERT INTO military_expenditure (country, year, amount, gdp) VALUES ('USA', 2020, 731000, 21433227);","completion":"SELECT country, (amount \/ gdp) * 100 AS military_spending_percentage FROM military_expenditure WHERE year = 2020 ORDER BY military_spending_percentage DESC LIMIT 5;"}
{"prompt":"What was the maximum total funding for excavation sites in Asia? with given SQL schema CREATE TABLE excavation_sites (id INT, site_name VARCHAR(50), location VARCHAR(50), total_funding DECIMAL(10,2));","completion":"SELECT MAX(total_funding) as max_funding FROM excavation_sites WHERE location LIKE 'Asia%'"}
{"prompt":"Which artifacts were discovered before 2000 in the 'Pompeii' excavation site? with given SQL schema CREATE TABLE ExcavationSites (site_id INT, site_name VARCHAR(50)); CREATE TABLE Artifacts (artifact_id INT, site_id INT, discovered_year INT); INSERT INTO ExcavationSites (site_id, site_name) VALUES (1, 'Pompeii'); INSERT INTO Artifacts (artifact_id, site_id, discovered_year) VALUES (1, 1, 1998), (2, 1, 2005), (3, 1, 1999), (4, 1, 1987);","completion":"SELECT Artifacts.artifact_id, Artifacts.site_id, Artifacts.discovered_year FROM Artifacts INNER JOIN ExcavationSites ON Artifacts.site_id = ExcavationSites.site_id WHERE ExcavationSites.site_name = 'Pompeii' AND Artifacts.discovered_year < 2000;"}
{"prompt":"What is the average age of patients who have been diagnosed with diabetes in the rural health clinic located in Texas? with given SQL schema CREATE TABLE rural_clinic (clinic_id INT, location VARCHAR(20), capacity INT); INSERT INTO rural_clinic (clinic_id, location, capacity) VALUES (1, 'Texas', 50); CREATE TABLE patient (patient_id INT, clinic_id INT, age INT, diagnosis VARCHAR(20)); INSERT INTO patient (patient_id, clinic_id, age, diagnosis) VALUES (1, 1, 45, 'diabetes'), (2, 1, 60, 'asthma'), (3, 1, 30, 'diabetes');","completion":"SELECT AVG(age) FROM patient WHERE diagnosis = 'diabetes' AND clinic_id = 1;"}
{"prompt":"What is the maximum age of patients diagnosed with Hypertension? with given SQL schema CREATE TABLE Patients (PatientID INT, Age INT, Gender VARCHAR(10), Diagnosis VARCHAR(20), Location VARCHAR(20)); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (1, 35, 'Male', 'Asthma', 'Texas'); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (2, 42, 'Female', 'Asthma', 'Texas'); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (3, 50, 'Male', 'Diabetes', 'Urban'); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (4, 60, 'Female', 'Hypertension', 'Rural');","completion":"SELECT MAX(Age) FROM Patients WHERE Diagnosis = 'Hypertension';"}
{"prompt":"What is the name and region of the rural health department with the lowest patient-to-physician ratio? with given SQL schema CREATE TABLE departments (name VARCHAR(255), patient_count INT, physician_count INT); INSERT INTO departments (name, patient_count, physician_count) VALUES (1, 100, 50), (2, 150, 75);","completion":"SELECT name, region, patient_count, physician_count, (patient_count \/ NULLIF(physician_count, 0)) AS patient_physician_ratio FROM departments ORDER BY patient_physician_ratio ASC LIMIT 1;"}
{"prompt":"How many 'diversity and inclusion' initiatives were implemented by companies in the 'finance' sector in 2022? with given SQL schema CREATE TABLE initiatives_companies (id INT, company_sector VARCHAR(20), initiative VARCHAR(30), implementation_year INT); INSERT INTO initiatives_companies (id, company_sector, initiative, implementation_year) VALUES (1, 'finance', 'diversity and inclusion', 2022), (2, 'technology', 'climate change', 2020), (3, 'finance', 'sustainability', 2019);","completion":"SELECT COUNT(*) FROM initiatives_companies WHERE company_sector = 'finance' AND initiative = 'diversity and inclusion' AND implementation_year = 2022;"}
{"prompt":"What is the total investment in the 'Green Energy' sector? with given SQL schema CREATE TABLE sector_investments (sector VARCHAR(20), investment_amount FLOAT); INSERT INTO sector_investments (sector, investment_amount) VALUES ('Healthcare', 300000), ('Finance', 500000), ('Green Energy', 700000), ('Affordable Housing', 400000);","completion":"SELECT SUM(investment_amount) FROM sector_investments WHERE sector = 'Green Energy';"}
{"prompt":"List all intelligence operations in the Middle East and their corresponding budgets. with given SQL schema CREATE TABLE IntelligenceOperations (OperationID INT, Operation TEXT, Region TEXT, Budget INT); INSERT INTO IntelligenceOperations (OperationID, Operation, Region, Budget) VALUES (1, 'Operation Desert Storm', 'Middle East', 80000000); INSERT INTO IntelligenceOperations (OperationID, Operation, Region, Budget) VALUES (2, 'Operation Enduring Freedom', 'Middle East', 120000000);","completion":"SELECT Operation, Budget FROM IntelligenceOperations WHERE Region = 'Middle East';"}
{"prompt":"List the programs that have more than 50 participants and their total budget. with given SQL schema CREATE TABLE programs (id INT, name TEXT, participants INT, budget INT); INSERT INTO programs (id, name, participants, budget) VALUES (1, 'Education', 60, 10000), (2, 'Health', 40, 12000), (3, 'Environment', 70, 8000);","completion":"SELECT name, SUM(budget) AS total_budget FROM programs WHERE participants > 50 GROUP BY name;"}
{"prompt":"What is the minimum donation amount received in the month of August? with given SQL schema CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount DECIMAL); INSERT INTO Donations (DonationID, DonorID, DonationDate, DonationAmount) VALUES (1, 1, '2022-08-01', 200.00), (2, 2, '2022-08-15', 150.00), (3, 3, '2022-07-01', 250.00);","completion":"SELECT MIN(DonationAmount) FROM Donations WHERE MONTH(DonationDate) = 8;"}
{"prompt":"What is the average age of teachers who have completed professional development courses in the last 5 years? with given SQL schema CREATE TABLE Teacher (TeacherID INT, Age INT, CompletedProfessionalDevelopment YEAR); INSERT INTO Teacher (TeacherID, Age, CompletedProfessionalDevelopment) VALUES (1, 35, 2021); INSERT INTO Teacher (TeacherID, Age, CompletedProfessionalDevelopment) VALUES (2, 40, 2020); CREATE VIEW ProfessionalDevelopmentLast5Years AS SELECT * FROM Teacher WHERE CompletedProfessionalDevelopment >= YEAR(CURRENT_DATE) - 5;","completion":"SELECT AVG(Age) FROM ProfessionalDevelopmentLast5Years;"}
{"prompt":"What is the difference between the average salary for employees who identify as male and female? with given SQL schema SAME AS ABOVE","completion":"SELECT AVG(Employees.Salary) - (SELECT AVG(Employees.Salary) FROM Employees WHERE Gender = 'Male') AS Difference FROM Employees WHERE Gender = 'Female';"}
{"prompt":"Insert a new wind energy production record for Quebec in the year 2026 with 6000 MWh with given SQL schema CREATE TABLE wind_energy (id INT, region VARCHAR(50), year INT, production FLOAT);","completion":"INSERT INTO wind_energy (id, region, year, production) VALUES (2, 'Quebec', 2026, 6000);"}
{"prompt":"What is the average energy consumption per capita by country in 2021? with given SQL schema CREATE TABLE EnergyConsumptionPerCapita (Country VARCHAR(255), Year INT, Consumption FLOAT); INSERT INTO EnergyConsumptionPerCapita (Country, Year, Consumption) VALUES ('US', 2021, 10000), ('Canada', 2021, 9000), ('UK', 2021, 8000), ('Germany', 2021, 7000), ('Australia', 2021, 12000), ('Japan', 2021, 6000), ('India', 2021, 3000);","completion":"SELECT Country, AVG(Consumption) AS AverageConsumptionPerCapita FROM EnergyConsumptionPerCapita WHERE Year = 2021 GROUP BY Country;"}
{"prompt":"What is the maximum power usage for industrial buildings in California? with given SQL schema CREATE TABLE power_usage (id INT PRIMARY KEY, building_type VARCHAR(255), usage FLOAT, location VARCHAR(255)); INSERT INTO power_usage (id, building_type, usage, location) VALUES (1, 'Residential', 500.0, 'California'); INSERT INTO power_usage (id, building_type, usage, location) VALUES (2, 'Commercial', 1000.0, 'Texas'); INSERT INTO power_usage (id, building_type, usage, location) VALUES (3, 'Industrial', 2000.0, 'California');","completion":"SELECT building_type, MAX(usage) FROM power_usage WHERE building_type = 'Industrial' AND location = 'California';"}
{"prompt":"What is the minimum oil production for wells in Alberta? with given SQL schema CREATE TABLE exploration_data (data_id INT, well_id INT, date DATE, gas_production FLOAT, oil_production FLOAT); INSERT INTO exploration_data (data_id, well_id, date, gas_production, oil_production) VALUES (1, 1, '2020-01-01', 50.3, 150.2), (2, 2, '2020-02-15', 60.1, 200.5), (3, 3, '2019-12-10', 45.8, 175.3), (4, 5, '2020-03-10', 35.8, 100.3), (5, 6, '2020-04-05', 40.1, 125.0);","completion":"SELECT well_id, MIN(oil_production) FROM exploration_data WHERE location = 'Alberta' GROUP BY well_id;"}
{"prompt":"What was the total gas production in the North Sea for 2019 and 2020? with given SQL schema CREATE TABLE production (id INT, year INT, region VARCHAR(255), gas_production DECIMAL(5,2)); INSERT INTO production (id, year, region, gas_production) VALUES (1, 2018, 'North Sea', 200.0), (2, 2019, 'North Sea', 250.0), (3, 2020, 'North Sea', 300.0);","completion":"SELECT SUM(CASE WHEN year IN (2019, 2020) AND region = 'North Sea' THEN gas_production ELSE 0 END) as total_gas_production FROM production;"}
{"prompt":"How many tennis matches were played on grass courts in the 'tennis_tournaments' table? with given SQL schema CREATE TABLE tennis_tournaments (player VARCHAR(50), court VARCHAR(50), matches INT); INSERT INTO tennis_tournaments (player, court, matches) VALUES ('Novak Djokovic', 'Grass', 5), ('Roger Federer', 'Grass', 6), ('Rafael Nadal', 'Grass', 3);","completion":"SELECT SUM(matches) FROM tennis_tournaments WHERE court = 'Grass';"}
{"prompt":"What is the average distance (in meters) scored by each player in their last 5 three-point shots? with given SQL schema CREATE TABLE players (id INT, name TEXT, distance_last_3p FLOAT); INSERT INTO players (id, name, distance_last_3p) VALUES (1, 'John Doe', 8.5), (2, 'Jane Smith', 9.2);","completion":"SELECT name, AVG(distance_last_3p) OVER (PARTITION BY name ORDER BY name ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) as avg_distance FROM players;"}
{"prompt":"What is the total number of fans who attended the football matches of 'Manchester United' in the year 2020? with given SQL schema CREATE TABLE matches (team TEXT, year INTEGER, fans_attended INTEGER); INSERT INTO matches (team, year, fans_attended) VALUES ('Manchester United', 2020, 50000); INSERT INTO matches (team, year, fans_attended) VALUES ('Manchester United', 2020, 55000);","completion":"SELECT SUM(fans_attended) FROM matches WHERE team = 'Manchester United' AND year = 2020;"}
{"prompt":"How many 'lightrail' vehicles were serviced in February 2022? with given SQL schema CREATE TABLE public.vehicle (vehicle_id SERIAL PRIMARY KEY, vehicle_type VARCHAR(20), station_id INTEGER, FOREIGN KEY (station_id) REFERENCES public.station(station_id)); INSERT INTO public.vehicle (vehicle_type, station_id) VALUES ('lightrail', 1), ('lightrail', 2); CREATE TABLE public.service (service_id SERIAL PRIMARY KEY, service_type VARCHAR(20), service_date DATE, vehicle_id INTEGER, FOREIGN KEY (vehicle_id) REFERENCES public.vehicle(vehicle_id)); INSERT INTO public.service (service_type, service_date, vehicle_id) VALUES ('routine maintenance', '2022-02-03', 1), ('repair', '2022-02-15', 2);","completion":"SELECT COUNT(*) FROM public.service INNER JOIN public.vehicle ON public.service.vehicle_id = public.vehicle.vehicle_id WHERE vehicle_type = 'lightrail' AND service_date >= '2022-02-01' AND service_date <= '2022-02-28'"}
{"prompt":"What is the total fare revenue of buses in New York on a given day? with given SQL schema CREATE TABLE bus_rides (id INT, route_id INT, timestamp TIMESTAMP, fare DECIMAL);  CREATE VIEW daily_bus_revenue AS SELECT route_id, SUM(fare) as daily_revenue FROM bus_rides WHERE DATE(timestamp) = '2023-03-16' GROUP BY route_id;","completion":" SELECT SUM(daily_revenue) as total_daily_revenue FROM daily_bus_revenue JOIN bus_stops ON daily_bus_revenue.route_id = bus_stops.id WHERE location LIKE 'New York%';"}
{"prompt":"What is the total number of bus trips in London with a bike rack? with given SQL schema CREATE TABLE bus_trips (trip_id INT, has_bike_rack BOOLEAN, city VARCHAR(50)); INSERT INTO bus_trips (trip_id, has_bike_rack, city) VALUES (1, true, 'London'), (2, false, 'London'), (3, true, 'London');","completion":"SELECT COUNT(*) FROM bus_trips WHERE has_bike_rack = true AND city = 'London';"}
{"prompt":"What are the advertising impressions for posts in a specific time range? with given SQL schema CREATE TABLE ads (id INT PRIMARY KEY, post_id INT, impressions INT, timestamp TIMESTAMP); INSERT INTO ads (id, post_id, impressions, timestamp) VALUES (1, 1, 500, '2022-01-01 10:00:00'); INSERT INTO ads (id, post_id, impressions, timestamp) VALUES (2, 2, 750, '2022-01-02 11:00:00');","completion":"SELECT p.content, a.impressions FROM posts p INNER JOIN ads a ON p.id = a.post_id WHERE a.timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-07 23:59:59';"}
{"prompt":"Who are the top 5 users with the most followers, and what is their location? with given SQL schema CREATE TABLE user_data (user_id INT, name VARCHAR(50), followers INT, location VARCHAR(50)); INSERT INTO user_data (user_id, name, followers, location) VALUES (1, 'Alice', 10000, 'New York'), (2, 'Bob', 15000, 'California'), (3, 'Charlie', 12000, 'Texas'), (4, 'David', 8000, 'Florida'), (5, 'Eve', 9000, 'Illinois');","completion":"SELECT name, location FROM (SELECT name, location, ROW_NUMBER() OVER (ORDER BY followers DESC) AS rank FROM user_data) AS user_ranks WHERE rank <= 5;"}
{"prompt":"Add a new customer record for 'Alexei' from 'Russia' with size '42' to the 'customers' table with given SQL schema CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), size INT);","completion":"INSERT INTO customers (id, name, country, size) VALUES (1, 'Alexei', 'Russia', 42);"}
{"prompt":"What is the total quantity of sustainable fabrics sourced from each country in the past year? with given SQL schema CREATE TABLE TextileVendors (VendorID INT, VendorName TEXT, Country TEXT); CREATE TABLE FabricSourcing (SourcingID INT, VendorID INT, FabricType TEXT, Quantity INT, SourcingDate DATE); INSERT INTO TextileVendors VALUES (1, 'VendorA', 'India'), (2, 'VendorB', 'Bangladesh'), (3, 'VendorC', 'China'); INSERT INTO FabricSourcing VALUES (1, 1, 'SustainableFabric1', 50, '2022-01-01'), (2, 2, 'SustainableFabric2', 30, '2022-02-01'), (3, 3, 'SustainableFabric3', 40, '2022-03-01');","completion":"SELECT v.Country, SUM(fs.Quantity) AS TotalQuantity FROM TextileVendors v JOIN FabricSourcing fs ON v.VendorID = fs.VendorID WHERE fs.SourcingDate >= DATEADD(YEAR, -1, CURRENT_DATE) AND fs.FabricType IN ('SustainableFabric1', 'SustainableFabric2', 'SustainableFabric3') GROUP BY v.Country;"}
{"prompt":"Which sustainable fabrics are used in the production of women's clothing? with given SQL schema CREATE TABLE Fabrics (Fabric_ID INT, Fabric_Name TEXT, Sustainable BOOLEAN); INSERT INTO Fabrics (Fabric_ID, Fabric_Name, Sustainable) VALUES (1, 'Organic Cotton', true), (2, 'Polyester', false), (3, 'Hemp', true), (4, 'Viscose', false); CREATE TABLE Women_Clothing (Clothing_ID INT, Fabric_ID INT); INSERT INTO Women_Clothing (Clothing_ID, Fabric_ID) VALUES (1, 1), (2, 3), (3, 4);","completion":"SELECT Fabrics.Fabric_Name FROM Fabrics INNER JOIN Women_Clothing ON Fabrics.Fabric_ID = Women_Clothing.Fabric_ID WHERE Fabrics.Sustainable = true;"}
{"prompt":"What is the median financial capability score for women-led businesses in South America? with given SQL schema CREATE TABLE financial_capability (id INT, business_id INT, gender VARCHAR(255), region VARCHAR(255), score FLOAT);","completion":"SELECT MEDIAN(score) FROM financial_capability WHERE gender = 'female' AND region = 'South America';"}
{"prompt":"Which program had the highest total impact score in 2019? with given SQL schema CREATE TABLE programs (program_id INT, impact_score INT, program_year INT); INSERT INTO programs (program_id, impact_score, program_year) VALUES (1, 85, 2019), (2, 78, 2019), (3, 91, 2018);","completion":"SELECT program_id, MAX(impact_score) FROM programs WHERE program_year = 2019 GROUP BY program_id;"}
{"prompt":"Identify the number of genetically modified ingredients in dishes served at 'Green Leaf'? with given SQL schema CREATE TABLE dishes_gm (dish_id INT, name VARCHAR(50), gm_ingredients INT); INSERT INTO dishes_gm VALUES (1, 'Tofu Stir Fry', 0); INSERT INTO dishes_gm VALUES (2, 'Chickpea Salad', 0); CREATE TABLE served_at (dish_id INT, location VARCHAR(50)); INSERT INTO served_at VALUES (1, 'Green Leaf'); INSERT INTO served_at VALUES (2, 'Green Leaf');","completion":"SELECT COUNT(dg.gm_ingredients) FROM dishes_gm dg JOIN served_at sa ON dg.dish_id = sa.dish_id WHERE sa.location = 'Green Leaf';"}
{"prompt":"How many bioprocess engineering projects were completed in Q1 of 2022, grouped by their completion status and project category? with given SQL schema CREATE TABLE bioprocess_engineering (id INT PRIMARY KEY, project_name VARCHAR(255), completion_status VARCHAR(255), project_category VARCHAR(255), completion_date DATE);","completion":"SELECT completion_status, project_category, COUNT(*) FROM bioprocess_engineering WHERE completion_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY completion_status, project_category;"}
{"prompt":"List all states and their respective percentage of total government spending on education. with given SQL schema CREATE TABLE government_spending (state VARCHAR(20), category VARCHAR(20), amount INT); INSERT INTO government_spending (state, category, amount) VALUES ('New York', 'Education', 120000000), ('California', 'Education', 180000000), ('Texas', 'Education', 150000000), ('Florida', 'Education', 100000000), ('Illinois', 'Education', 110000000);","completion":"SELECT state, ROUND(100.0*SUM(CASE WHEN category = 'Education' THEN amount ELSE 0 END)\/SUM(amount), 1) AS education_percentage FROM government_spending GROUP BY state;"}
{"prompt":"Update the name of the government program in the state of California with the ID of 3 to 'Program X'. with given SQL schema CREATE TABLE programs (id INT, name VARCHAR(255), budget FLOAT, state VARCHAR(255)); INSERT INTO programs (id, name, budget, state) VALUES (1, 'Program A', 2.5, 'Florida'), (2, 'Program B', 1.2, 'Florida'), (3, 'Program C', 1.8, 'California');","completion":"UPDATE programs SET name = 'Program X' WHERE id = 3 AND state = 'California';"}
{"prompt":"Find the top 5 cities with the highest average energy consumption per building in the 'GreenBuildings' schema. with given SQL schema CREATE TABLE GreenBuildings.CityEnergy (city VARCHAR(50), avg_energy_per_building FLOAT); INSERT INTO GreenBuildings.CityEnergy (city, avg_energy_per_building) VALUES ('NYC', 1100.5), ('LA', 1300.2), ('SF', 1000.7), ('Chicago', 1400.3), ('Houston', 1500.0), ('Denver', 1200.4);","completion":"SELECT city, AVG(energy_consumption) AS avg_energy_per_building FROM GreenBuildings.Buildings GROUP BY city ORDER BY avg_energy_per_building DESC LIMIT 5;"}
{"prompt":"How many mental health parity complaints were received by region in the last year? with given SQL schema CREATE TABLE MentalHealthParity (ComplaintID INT, Region VARCHAR(255), Date DATE); INSERT INTO MentalHealthParity (ComplaintID, Region, Date) VALUES (1, 'Northeast', '2021-01-01'), (2, 'Southeast', '2021-02-15'), (3, 'Midwest', '2021-03-05'), (4, 'West', '2021-04-10');","completion":"SELECT Region, COUNT(*) as ComplaintCount FROM MentalHealthParity WHERE Date >= DATEADD(year, -1, GETDATE()) GROUP BY Region;"}
{"prompt":"What is the maximum number of virtual tours engaged with in a single day for hotels in New York City, USA? with given SQL schema CREATE TABLE virtual_tours (id INT, hotel_id INT, engagement_count INT, engagement_date DATE); CREATE TABLE hotels (id INT, name TEXT, city TEXT, country TEXT);","completion":"SELECT MAX(engagement_count) FROM virtual_tours vt INNER JOIN hotels h ON vt.hotel_id = h.id WHERE h.city = 'New York City' AND h.country = 'USA';"}
{"prompt":"what is the average temperature change per decade in the arctic with given SQL schema CREATE TABLE temperature_data (measurement_id INT PRIMARY KEY, measurement_date DATE, temperature REAL); INSERT INTO temperature_data (measurement_id, measurement_date, temperature) VALUES (1, '2010-01-01', 12.3), (2, '2000-01-01', 10.2);","completion":"SELECT (EXTRACT(YEAR FROM measurement_date) - 2000) \/ 10 * 10 AS decade, AVG(temperature) FROM temperature_data GROUP BY decade;"}
{"prompt":"What is the average age of patients who received CBT treatment in California? with given SQL schema CREATE TABLE patients (id INT, name TEXT, age INT, state TEXT);CREATE TABLE treatments (id INT, patient_id INT, therapy TEXT);INSERT INTO patients (id, name, age, state) VALUES (1, 'John Doe', 35, 'California');INSERT INTO treatments (id, patient_id, therapy) VALUES (1, 1, 'CBT');","completion":"SELECT AVG(patients.age) FROM patients INNER JOIN treatments ON patients.id = treatments.patient_id WHERE patients.state = 'California' AND treatments.therapy = 'CBT';"}
{"prompt":"What is the minimum number of sessions completed by a volunteer in the volunteers table who is over 30 years old? with given SQL schema CREATE TABLE volunteers (id INT, name VARCHAR(50), age INT, sessions_completed INT);","completion":"SELECT MIN(sessions_completed) FROM volunteers WHERE age > 30;"}
{"prompt":"Calculate the total biomass of marine species in 'OceanMappingProjectA' and 'OceanMappingProjectB' with given SQL schema CREATE TABLE SpeciesBiomass (species VARCHAR(255), biomass FLOAT); INSERT INTO SpeciesBiomass (species, biomass) VALUES ('Coral', 250.0), ('Starfish', 150.0), ('Jellyfish', 300.0); CREATE TABLE OceanMappingProjects (species VARCHAR(255), project VARCHAR(255)); INSERT INTO OceanMappingProjects (species, project) VALUES ('Coral', 'OceanMappingProjectA'), ('Starfish', 'OceanMappingProjectA'), ('Jellyfish', 'OceanMappingProjectB');","completion":"SELECT SUM(biomass) FROM SpeciesBiomass INNER JOIN OceanMappingProjects ON SpeciesBiomass.species = OceanMappingProjects.species WHERE OceanMappingProjects.project IN ('OceanMappingProjectA', 'OceanMappingProjectB');"}
{"prompt":"What are the total running times of movies by genre in the Media database? with given SQL schema CREATE TABLE GenreRunningTimes (MovieTitle VARCHAR(50), Genre VARCHAR(50), RunningTime INT); INSERT INTO GenreRunningTimes (MovieTitle, Genre, RunningTime) VALUES ('The Godfather', 'Crime', 175), ('The Shawshank Redemption', 'Drama', 142), ('The Godfather: Part II', 'Crime', 202), ('The Dark Knight', 'Crime', 152), ('Star Wars: Episode IV - A New Hope', 'Sci-Fi', 121);","completion":"SELECT Genre, SUM(RunningTime) as TotalRunningTime FROM GenreRunningTimes GROUP BY Genre;"}
{"prompt":"What is the total number of customer complaints for each type of service? with given SQL schema CREATE TABLE customer_complaints (id INT, service VARCHAR(20), complaint_reason VARCHAR(30)); INSERT INTO customer_complaints (id, service, complaint_reason) VALUES (1, 'mobile', 'coverage'), (2, 'mobile', 'data_speed'), (3, 'broadband', 'coverage'), (4, 'broadband', 'data_speed'), (5, 'mobile', 'customer_service');","completion":"SELECT service, COUNT(*) FROM customer_complaints GROUP BY service;"}
{"prompt":"Who is the oldest female reporter in the 'reporters' table? with given SQL schema CREATE TABLE reporters (id INT, name VARCHAR(50), gender VARCHAR(10), age INT); INSERT INTO reporters (id, name, gender, age) VALUES (1, 'Alice', 'Female', 40), (2, 'Bob', 'Male', 30);","completion":"SELECT name FROM reporters WHERE gender = 'Female' ORDER BY age DESC LIMIT 1;"}
{"prompt":"What is the percentage of total donations for each program? with given SQL schema CREATE TABLE program (id INT, name VARCHAR(50)); INSERT INTO program (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE donation (id INT, amount DECIMAL(10,2), program_id INT);","completion":"SELECT d.program_id, (SUM(d.amount) \/ (SELECT SUM(d2.amount) FROM donation d2)) * 100 as pct_total_donations FROM donation d GROUP BY d.program_id;"}
{"prompt":"List all underwater volcanoes in the Arctic region with a depth greater than 3000 meters. with given SQL schema CREATE TABLE underwater_volcanoes (id INT, name VARCHAR(255), region VARCHAR(50), depth INT); INSERT INTO underwater_volcanoes (id, name, region, depth) VALUES (1, 'Jan Mayen Volcano', 'Arctic', 3200), (2, 'Erebus Volcano', 'Antarctic', 3794);","completion":"SELECT name FROM underwater_volcanoes WHERE region = 'Arctic' AND depth > 3000;"}
{"prompt":"Show the number of safety inspections per vessel in the Mediterranean sea. with given SQL schema CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(255), region VARCHAR(255)); CREATE TABLE safety_inspections (inspection_id INT, vessel_id INT, inspection_date DATE); INSERT INTO vessels (vessel_id, vessel_name, region) VALUES (1, 'Sea Tiger', 'Mediterranean'), (2, 'Ocean Wanderer', 'Atlantic'); INSERT INTO safety_inspections (inspection_id, vessel_id, inspection_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-02-01'), (3, 2, '2022-03-01');","completion":"SELECT vessels.vessel_name, COUNT(safety_inspections.inspection_id) FROM vessels INNER JOIN safety_inspections ON vessels.vessel_id = safety_inspections.vessel_id WHERE vessels.region = 'Mediterranean' GROUP BY vessels.vessel_name;"}
{"prompt":"Insert a new donor with donor_id 8, donation amount $5000 in 2022, and gender 'intersex'. with given SQL schema CREATE TABLE donors (donor_id INT, donation_amount DECIMAL(10,2), donation_year INT, gender VARCHAR(255));","completion":"INSERT INTO donors (donor_id, donation_amount, donation_year, gender) VALUES (8, 5000.00, 2022, 'intersex');"}
{"prompt":"Count the number of events per game with given SQL schema CREATE TABLE esports_events (event_id INT PRIMARY KEY, name VARCHAR(50), date DATE, game VARCHAR(50), location VARCHAR(50));","completion":"SELECT game, COUNT(*) as event_count FROM esports_events GROUP BY game;"}
{"prompt":"Find the total hours played by players in a specific game title with given SQL schema CREATE TABLE GameSessions (PlayerID INT, GameTitle VARCHAR(50), HoursPlayed DECIMAL(5,2)); INSERT INTO GameSessions (PlayerID, GameTitle, HoursPlayed) VALUES (1, 'GameA', 10.5), (2, 'GameA', 5.3), (3, 'GameB', 7.2);","completion":"SELECT SUM(HoursPlayed) FROM GameSessions WHERE GameTitle = 'GameA';"}
{"prompt":"What is the average total spending by players from North America in the 'gaming_facts' table? with given SQL schema CREATE TABLE gaming_facts (player_id INT, country VARCHAR(50), total_spending FLOAT); INSERT INTO gaming_facts (player_id, country, total_spending) VALUES (1, 'USA', 450.25), (2, 'Canada', 520.35), (3, 'Mexico', 399.83), (4, 'China', 420.65), (5, 'Japan', 375.89);","completion":"SELECT AVG(total_spending) as avg_north_america_spending FROM gaming_facts WHERE country IN ('USA', 'Canada', 'Mexico');"}
{"prompt":"What is the average citizen feedback score for public libraries in the state of Illinois and Michigan? with given SQL schema CREATE TABLE Feedback (library VARCHAR(50), state VARCHAR(20), score INT); INSERT INTO Feedback (library, state, score) VALUES ('LibraryA', 'Illinois', 8), ('LibraryB', 'Illinois', 9), ('LibraryC', 'Michigan', 7);","completion":"SELECT AVG(score) FROM Feedback WHERE state IN ('Illinois', 'Michigan') AND library LIKE '%Library%';"}
{"prompt":"How many distinct suppliers provided Dysprosium in 2018? with given SQL schema CREATE TABLE supply_data (year INT, element VARCHAR(10), supplier VARCHAR(20)); INSERT INTO supply_data VALUES (2015, 'Dysprosium', 'Supplier A'), (2016, 'Dysprosium', 'Supplier B'), (2017, 'Dysprosium', 'Supplier C'), (2018, 'Dysprosium', 'Supplier D'), (2018, 'Dysprosium', 'Supplier E');","completion":"SELECT COUNT(DISTINCT supplier) FROM supply_data WHERE year = 2018 AND element = 'Dysprosium';"}
{"prompt":"What's the total number of properties in each city with inclusive housing policies? with given SQL schema CREATE TABLE properties (property_id INT, price DECIMAL(10,2), size INT, city VARCHAR(50), inclusive_policy BOOLEAN); INSERT INTO properties (property_id, price, size, city, inclusive_policy) VALUES (1, 500000, 2000, 'Oakland', true), (2, 600000, 2500, 'San Francisco', false), (3, 450000, 1000, 'Oakland', true);","completion":"SELECT city, COUNT(*) FROM properties WHERE inclusive_policy = true GROUP BY city;"}
{"prompt":"What is the total installed capacity of wind farms in the state of 'California'? with given SQL schema CREATE TABLE wind_farms (id INT, name VARCHAR(50), state VARCHAR(50), capacity FLOAT); INSERT INTO wind_farms (id, name, state, capacity) VALUES (1, 'Wind Farm A', 'California', 150.5), (2, 'Wind Farm B', 'Texas', 200.0);","completion":"SELECT SUM(capacity) FROM wind_farms WHERE state = 'California';"}
{"prompt":"Display the product names and supplier names for products that are not supplied by 'Green Cotton Inc.'. with given SQL schema CREATE TABLE products (id INT, name VARCHAR(50), price DECIMAL(5,2), supplier_id INT); INSERT INTO products (id, name, price, supplier_id) VALUES (1, 'Organic Cotton Shirt', 29.99, 1), (2, 'Hemp Tote Bag', 19.99, 2), (3, 'Recycled Sweater', 39.99, 3), (4, 'Bamboo T-Shirt', 24.99, 1), (5, 'Eco-Leather Jacket', 89.99, 4); CREATE TABLE suppliers (id INT, name VARCHAR(50), country VARCHAR(50), sustainability_rating INT); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (1, 'Green Cotton Inc.', 'India', 90), (2, 'Happy Hemp Farms', 'Nepal', 95), (3, 'Eco Rubber Co.', 'Malaysia', 85), (4, 'Bamboo Textiles', 'China', 80);","completion":"SELECT p.name, s.name FROM products p JOIN suppliers s ON p.supplier_id = s.id WHERE p.supplier_id != 1;"}
{"prompt":"List the suppliers that provide materials for both product A and product C. with given SQL schema CREATE TABLE products (product_id INT, product_name TEXT); CREATE TABLE materials (material_id INT, material_name TEXT, product_id INT, supplier_id INT); INSERT INTO products (product_id, product_name) VALUES (1, 'Product A'), (2, 'Product B'), (3, 'Product C'); INSERT INTO materials (material_id, material_name, product_id, supplier_id) VALUES (1, 'Material 1', 1, 101), (2, 'Material 2', 1, 102), (3, 'Material 3', 2, 103), (4, 'Material 4', 3, 101), (5, 'Material 5', 3, 102);","completion":"SELECT supplier_id FROM materials WHERE product_id = 1 INTERSECT SELECT supplier_id FROM materials WHERE product_id = 3;"}
{"prompt":"Add the name 'Hubble Space Telescope' to the satellites table with given SQL schema CREATE TABLE satellites (id INT, name VARCHAR(255), international_designator VARCHAR(20)); INSERT INTO satellites (id, name, international_designator) VALUES (1, 'Spitzer Space Telescope', '979F');","completion":"INSERT INTO satellites (name) VALUES ('Hubble Space Telescope');"}
{"prompt":"Find the total mass of all space debris in Geostationary Orbit (GSO) that originate from defunct satellites. with given SQL schema CREATE TABLE gso_debris (id INT, name VARCHAR(50), type VARCHAR(50), orbit VARCHAR(50), mass FLOAT, source VARCHAR(50)); INSERT INTO gso_debris (id, name, type, orbit, mass, source) VALUES (1, 'Debris1', 'Panel', 'GSO', 50.3, 'Defunct Satellite'), (2, 'Debris2', 'Bolt', 'GSO', 0.05, 'Rocket Body'), (3, 'Debris3', 'Rod', 'GSO', 2.8, 'Defunct Satellite');","completion":"SELECT SUM(mass) FROM gso_debris WHERE orbit = 'GSO' AND source = 'Defunct Satellite';"}
{"prompt":"What is the maximum cost of a rover mission? with given SQL schema CREATE TABLE rover_missions (id INT, name VARCHAR(50), cost INT); INSERT INTO rover_missions (id, name, cost) VALUES (1, 'Mars Rover 2001', 5000000), (2, 'Moon Rover 2020', 10000000), (3, 'Titan Rover 2030', 20000000);","completion":"SELECT name, MAX(cost) as max_cost FROM rover_missions WHERE name LIKE '%Rover%';"}
{"prompt":"What is the total cost of all space missions? with given SQL schema CREATE TABLE space_missions (id INT, mission_name VARCHAR(255), country VARCHAR(255), cost FLOAT); INSERT INTO space_missions (id, mission_name, country, cost) VALUES (1, 'Apollo 11', 'USA', 25500000), (2, 'Mars Orbiter Mission', 'India', 73000000), (3, 'Chandrayaan-1', 'India', 79000000), (4, 'Grail', 'USA', 496000000);","completion":"SELECT SUM(cost) FROM space_missions;"}
{"prompt":"Which countries are the source of unsuccessful login attempts on system S009, and what are their respective counts? with given SQL schema CREATE TABLE unsuccessful_logins (id INT, login_country VARCHAR(20), system_target VARCHAR(5)); INSERT INTO unsuccessful_logins (id, login_country, system_target) VALUES (1, 'France', 'S009'), (2, 'Brazil', 'S009'), (3, 'India', 'S010'), (4, 'Australia', 'S009'), (5, 'USA', 'S009');","completion":"SELECT login_country, COUNT(*) as count FROM unsuccessful_logins WHERE system_target = 'S009' GROUP BY login_country;"}
{"prompt":"What is the minimum distance traveled by autonomous vehicles in the 'autonomous_vehicles' table, grouped by their 'vehicle_type'? with given SQL schema CREATE TABLE autonomous_vehicles (id INT, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), distance_traveled INT);","completion":"SELECT vehicle_type, MIN(distance_traveled) FROM autonomous_vehicles GROUP BY vehicle_type;"}
{"prompt":"What is the total quantity of garments sold in each country in 2022? with given SQL schema CREATE TABLE sales_country (sale_id INT, country VARCHAR(50), sale_date DATE, total_quantity INT);","completion":"SELECT country, SUM(total_quantity) FROM sales_country WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY country;"}
{"prompt":"What is the total quantity of garments sold per category for the current year? with given SQL schema CREATE TABLE garment_sales_data(sale_id INT, garment_id INT, sale_date DATE, category VARCHAR(255), quantity INT, price FLOAT); INSERT INTO garment_sales_data(sale_id, garment_id, sale_date, category, quantity, price) VALUES (1, 1, '2022-03-01', 'Tops', 4, 20), (2, 2, '2022-04-15', 'Bottoms', 6, 30), (3, 3, '2022-05-05', 'Outerwear', 8, 45);","completion":"SELECT category, SUM(quantity) FROM garment_sales_data WHERE YEAR(sale_date) = YEAR(CURRENT_DATE) GROUP BY category;"}
{"prompt":"Select the average age of policyholders with given SQL schema CREATE TABLE Policyholders (PolicyholderID INT, Age INT, Gender VARCHAR(10)); INSERT INTO Policyholders (PolicyholderID, Age, Gender) VALUES (1, 34, 'Female'), (2, 45, 'Male'), (3, 52, 'Male');","completion":"SELECT AVG(Age) FROM Policyholders;"}
{"prompt":"How many vessels are in the 'vessels' table? with given SQL schema CREATE TABLE vessels (id INT, name TEXT, type TEXT); INSERT INTO vessels (id, name, type) VALUES (1, 'Cargo Ship 1', 'Cargo'), (2, 'Tanker 1', 'Tanker');","completion":"SELECT COUNT(*) FROM vessels;"}
{"prompt":"Update recycling_rates table, setting the recycling_rate to 55 where the region is 'EU' with given SQL schema CREATE TABLE recycling_rates (region VARCHAR(50), recycling_rate INT); INSERT INTO recycling_rates (region, recycling_rate) VALUES ('Asia', 45), ('EU', 50);","completion":"UPDATE recycling_rates SET recycling_rate = 55 WHERE region = 'EU';"}
{"prompt":"What is the recycling rate of plastic in the residential sector in the state of New York? with given SQL schema CREATE TABLE recycling_rates_city (sector VARCHAR(20), city VARCHAR(20), material VARCHAR(20), recycling_rate DECIMAL(5,2)); INSERT INTO recycling_rates_city (sector, city, material, recycling_rate) VALUES ('residential', 'New York City', 'plastic', 0.25), ('commercial', 'New York City', 'plastic', 0.30), ('residential', 'New York City', 'paper', 0.45), ('commercial', 'New York City', 'paper', 0.50), ('residential', 'Los Angeles', 'plastic', 0.20), ('commercial', 'Los Angeles', 'plastic', 0.35), ('residential', 'Los Angeles', 'paper', 0.40), ('commercial', 'Los Angeles', 'paper', 0.50);","completion":"SELECT recycling_rate FROM recycling_rates_city WHERE sector = 'residential' AND material = 'plastic' AND city = 'New York City';"}
{"prompt":"Calculate the average daily water usage in cubic meters for each city in the 'water_usage' table with given SQL schema CREATE TABLE water_usage (city VARCHAR(50), water_usage FLOAT, meter_type VARCHAR(50), date DATE);","completion":"SELECT city, AVG(water_usage) as avg_daily_water_usage FROM water_usage GROUP BY city;"}
{"prompt":"What is the average water consumption for wastewater treatment plants in Texas from 2017 to 2019? with given SQL schema CREATE TABLE wastewater_plants ( id INT, state_id INT, year INT, water_consumption FLOAT ); INSERT INTO wastewater_plants (id, state_id, year, water_consumption) VALUES (1, 1, 2017, 200), (2, 1, 2018, 220), (3, 1, 2019, 250), (4, 2, 2017, 150), (5, 2, 2018, 170), (6, 2, 2019, 190), (7, 3, 2017, 280), (8, 3, 2018, 300), (9, 3, 2019, 320);","completion":"SELECT AVG(water_consumption) FROM wastewater_plants WHERE state_id = 1 AND year BETWEEN 2017 AND 2019;"}
{"prompt":"Which regions had a precipitation amount higher than 850 in the years they experienced droughts? with given SQL schema CREATE TABLE precipitation (region VARCHAR(255), year INT, precipitation_amount INT); INSERT INTO precipitation (region, year, precipitation_amount) VALUES ('North', 2018, 800), ('North', 2019, 850), ('North', 2020, 900), ('South', 2018, 750), ('South', 2019, 700), ('South', 2020, 720); CREATE TABLE drought_info (region VARCHAR(255), year INT, severity INT); INSERT INTO drought_info (region, year, severity) VALUES ('North', 2018, 3), ('North', 2019, 5), ('South', 2018, 2), ('South', 2019, 4);","completion":"SELECT p.region FROM precipitation p JOIN drought_info d ON p.region = d.region WHERE p.precipitation_amount > 850 AND d.year = p.year AND d.severity > 0;"}
{"prompt":"List the top 3 countries with the highest total calories burned in workouts. with given SQL schema CREATE TABLE workouts (id INT, user_id INT, workout_date DATE, calories INT, country VARCHAR(50)); INSERT INTO workouts (id, user_id, workout_date, calories, country) VALUES (1, 123, '2022-01-01', 300, 'USA'); INSERT INTO workouts (id, user_id, workout_date, calories, country) VALUES (2, 456, '2022-01-02', 400, 'Canada');","completion":"SELECT country, SUM(calories) AS total_calories FROM workouts GROUP BY country ORDER BY total_calories DESC LIMIT 3;"}
{"prompt":"What is the average heart rate for each user during spin classes? with given SQL schema CREATE TABLE workouts (id INT, user_id INT, workout_type VARCHAR(20), heart_rate INT); INSERT INTO workouts (id, user_id, workout_type, heart_rate) VALUES (1, 101, 'Spin', 120), (2, 102, 'Spin', 145), (3, 103, 'Spin', 130), (4, 104, 'Yoga', 85);","completion":"SELECT user_id, AVG(heart_rate) as avg_heart_rate FROM workouts WHERE workout_type = 'Spin' GROUP BY user_id;"}
{"prompt":"List all the agricultural innovation projects in Central America that have received funding from both the World Bank and the Inter-American Development Bank. with given SQL schema CREATE TABLE AgriculturalInnovations (id INT, project_name TEXT, location TEXT, funder TEXT); INSERT INTO AgriculturalInnovations (id, project_name, location, funder) VALUES (1, 'AgriTech Central America', 'Central America', 'World Bank'); INSERT INTO AgriculturalInnovations (id, project_name, location, funder) VALUES (2, 'Smart Farm Central America', 'Central America', 'Inter-American Development Bank'); INSERT INTO AgriculturalInnovations (id, project_name, location, funder) VALUES (3, 'Farm Innovation Central America', 'Central America', 'Government of Central America');","completion":"SELECT project_name, location FROM AgriculturalInnovations WHERE funder IN ('World Bank', 'Inter-American Development Bank') AND location = 'Central America' GROUP BY project_name HAVING COUNT(DISTINCT funder) = 2;"}
{"prompt":"What is the average water temperature for marine finfish farms in Norway during June? with given SQL schema CREATE TABLE marinefinfish (country VARCHAR(20), month INTEGER, avg_temp FLOAT); INSERT INTO marinefinfish (country, month, avg_temp) VALUES ('Norway', 6, 12.3), ('Norway', 6, 11.9), ('Norway', 7, 13.1);","completion":"SELECT AVG(avg_temp) FROM marinefinfish WHERE country = 'Norway' AND month = 6;"}
{"prompt":"What is the maximum water temperature for aquatic farms in the 'South China Sea' region? with given SQL schema CREATE TABLE aquatic_farms (id INT, name TEXT, region TEXT); INSERT INTO aquatic_farms (id, name, region) VALUES (1, 'Farm D', 'South China Sea'), (2, 'Farm E', 'Mediterranean Sea'), (3, 'Farm F', 'South China Sea'); CREATE TABLE temperature_readings (id INT, farm_id INT, temperature FLOAT); INSERT INTO temperature_readings (id, farm_id, temperature) VALUES (1, 1, 29.5), (2, 1, 29.6), (3, 2, 18.2);","completion":"SELECT MAX(temperature_readings.temperature) FROM temperature_readings INNER JOIN aquatic_farms ON temperature_readings.farm_id = aquatic_farms.id WHERE aquatic_farms.region = 'South China Sea';"}
{"prompt":"What is the percentage of organic certified fish farms in the Mediterranean in 2021? with given SQL schema CREATE TABLE fish_farms (farm_id INT, region VARCHAR(50), certification_status VARCHAR(50), year INT);","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM fish_farms WHERE year = 2021)) as percentage FROM fish_farms WHERE region = 'Mediterranean' AND certification_status = 'organic' AND year = 2021;"}
{"prompt":"How many artworks were created by artists from each country, joined with the \"artworks\" and \"artists\" tables, between 2010 and 2021? with given SQL schema CREATE TABLE artworks (artwork_id INT, artwork_name VARCHAR(50), artist_id INT, artwork_year INT); CREATE TABLE artists (artist_id INT, artist_name VARCHAR(50), country VARCHAR(50));","completion":"SELECT a.country, COUNT(DISTINCT aw.artwork_id) as total_artworks FROM artworks aw INNER JOIN artists a ON aw.artist_id = a.artist_id WHERE aw.artwork_year BETWEEN 2010 AND 2021 GROUP BY a.country;"}
{"prompt":"What is the percentage of attendees at 'Family Day' events who are children under 12? with given SQL schema CREATE TABLE AgeDistribution (event_name VARCHAR(50), attendee_age INT, age_distribution_children BOOLEAN); INSERT INTO AgeDistribution (event_name, attendee_age, age_distribution_children) VALUES ('Family Day', 5, TRUE); INSERT INTO AgeDistribution (event_name, attendee_age, age_distribution_children) VALUES ('Family Day', 35, FALSE); INSERT INTO AgeDistribution (event_name, attendee_age, age_distribution_children) VALUES ('Family Day', 7, TRUE); INSERT INTO AgeDistribution (event_name, attendee_age, age_distribution_children) VALUES ('Family Day', 12, FALSE);","completion":"SELECT attendee_age, age_distribution_children, age_distribution_children * 100.0 \/ SUM(age_distribution_children) OVER() AS percentage FROM AgeDistribution WHERE event_name = 'Family Day' AND attendee_age < 12;"}
{"prompt":"What was the total donation amount by returning donors in Q1 2022? with given SQL schema CREATE TABLE Donors (DonorID int, DonationDate date, DonationAmount numeric); INSERT INTO Donors VALUES (1, '2022-01-01', 50), (2, '2022-02-01', 100), (3, '2022-03-01', 200), (1, '2022-02-01', 150), (4, '2022-01-01', 200);","completion":"SELECT SUM(DonationAmount) FROM (SELECT DonationAmount FROM Donors WHERE DonorID IN (SELECT DonorID FROM Donors GROUP BY DonorID HAVING COUNT(*) > 1) AND EXTRACT(MONTH FROM DonationDate) BETWEEN 1 AND 3 AND EXTRACT(YEAR FROM DonationDate) = 2022)"}
{"prompt":"How has user viewership of movies and TV shows changed over time? with given SQL schema CREATE TABLE MovieWatchHistory (UserId INT, WatchTime DATETIME, MediaType VARCHAR(50), MediaId INT); INSERT INTO MovieWatchHistory (UserId, WatchTime, MediaType, MediaId) VALUES (1, '2021-05-01 15:00:00', 'Movie', 1), (2, '2021-05-02 10:00:00', 'TVShow', 2), (3, '2021-05-03 18:00:00', 'Movie', 3);","completion":"SELECT DATEPART(YEAR, WatchTime) AS Year, DATEPART(MONTH, WatchTime) AS Month, MediaType, COUNT(*) AS WatchCount FROM MovieWatchHistory GROUP BY Year, Month, MediaType;"}
{"prompt":"What is the average 'adaptation fund' spent by 'India' per 'month' in the 'adaptation' table? with given SQL schema CREATE TABLE adaptation (country VARCHAR(255), fund DECIMAL(10,2), date DATE);","completion":"SELECT AVG(fund) FROM adaptation WHERE country = 'India' GROUP BY EXTRACT(MONTH FROM date);"}
{"prompt":"What is the total number of climate communication campaigns launched in Africa since 2010? with given SQL schema CREATE TABLE climate_communication (id INT, campaign VARCHAR(255), location VARCHAR(255), launch_year INT);","completion":"SELECT SUM(*) FROM climate_communication WHERE location LIKE '%Africa%' AND launch_year >= 2010;"}
{"prompt":"Which healthcare facilities offer mental health services in City D? with given SQL schema CREATE TABLE Facilities (ID INT, Name TEXT, Location TEXT, Services TEXT); INSERT INTO Facilities (ID, Name, Location, Services) VALUES (1, 'Hospital W', 'City D', 'General, Mental Health'); INSERT INTO Facilities (ID, Name, Location, Services) VALUES (2, 'Clinic V', 'City D', 'Pediatrics');","completion":"SELECT DISTINCT Name FROM Facilities WHERE Location = 'City D' AND Services LIKE '%Mental Health%';"}
{"prompt":"What is the total funding amount received by companies founded by LGBTQ+ entrepreneurs in the transportation industry? with given SQL schema CREATE TABLE Companies (id INT, name TEXT, founders TEXT, industry TEXT); INSERT INTO Companies (id, name, founders, industry) VALUES (1, 'MoveFast', 'LGBTQ+, Male', 'Transportation'); INSERT INTO Companies (id, name, founders, industry) VALUES (2, 'TechBoost', 'Asian, Male', 'Technology'); CREATE TABLE Investment_Rounds (company_id INT, funding_amount INT, round_number INT); INSERT INTO Investment_Rounds (company_id, funding_amount, round_number) VALUES (1, 1000000, 1); INSERT INTO Investment_Rounds (company_id, funding_amount, round_number) VALUES (1, 1500000, 2); INSERT INTO Investment_Rounds (company_id, funding_amount, round_number) VALUES (2, 3000000, 1);","completion":"SELECT SUM(r.funding_amount) FROM Companies c JOIN Investment_Rounds r ON c.id = r.company_id WHERE c.founders LIKE '%LGBTQ+%' AND c.industry = 'Transportation';"}
{"prompt":"What is the minimum conservation status score of marine species in the Atlantic Ocean? with given SQL schema CREATE TABLE conservation_status_scores (id INT, species_id INT, score FLOAT, location TEXT, PRIMARY KEY (id, species_id), FOREIGN KEY (species_id) REFERENCES marine_species(id)); INSERT INTO conservation_status_scores (id, species_id, score, location) VALUES (1, 1, 60.0, 'Atlantic Ocean'), (2, 2, 85.0, 'Pacific Ocean'), (3, 3, 35.0, 'Indian Ocean');","completion":"SELECT MIN(score) FROM conservation_status_scores WHERE location = 'Atlantic Ocean';"}
{"prompt":"how many tree species are there in each continent? with given SQL schema CREATE TABLE trees (id INT, species VARCHAR(255), continent VARCHAR(255));","completion":"SELECT continent, COUNT(DISTINCT species) as num_species FROM trees GROUP BY continent;"}
{"prompt":"What is the total revenue of skincare products from the natural cosmetics line? with given SQL schema CREATE TABLE Natural_Cosmetics (product_id INT, product_name VARCHAR(255), category VARCHAR(255), price DECIMAL(10,2), revenue DECIMAL(10,2)); INSERT INTO Natural_Cosmetics (product_id, product_name, category, price, revenue) VALUES (1, 'Skincare 1', 'Skincare', 19.99, 0), (2, 'Skincare 2', 'Skincare', 29.99, 0), (3, 'Skincare 3', 'Skincare', 39.99, 0);","completion":"SELECT SUM(revenue) FROM Natural_Cosmetics WHERE category = 'Skincare';"}
{"prompt":"What percentage of products are rated 5 stars in Spain? with given SQL schema CREATE TABLE Products (ProductID INT, ProductName VARCHAR(100), Rating INT); INSERT INTO Products (ProductID, ProductName, Rating) VALUES (1, 'Product A', 5), (2, 'Product B', 3), (3, 'Product C', 4), (4, 'Product D', 5), (5, 'Product E', 2);","completion":"SELECT 100.0 * COUNT(*) \/ (SELECT COUNT(*) FROM Products WHERE Country = 'Spain') FROM Products WHERE Country = 'Spain' AND Rating = 5;"}
{"prompt":"Insert a new record with an incident_type of 'theft', location of '123 Main St', and occurred_on date of '2022-10-15' into the 'incidents' table with given SQL schema CREATE TABLE incidents (id INT, incident_type VARCHAR(255), location VARCHAR(255), occurred_on DATE);","completion":"INSERT INTO incidents (incident_type, location, occurred_on) VALUES ('theft', '123 Main St', '2022-10-15');"}
{"prompt":"What is the average emergency response time by region for fire incidents? with given SQL schema CREATE TABLE Regions (RegionID INT, RegionName VARCHAR(255)); CREATE TABLE Incidents (IncidentID INT, IncidentType VARCHAR(255), RegionID INT, ResponseTime INT);","completion":"SELECT AVG(ResponseTime) as AvgResponseTime, RegionName FROM Incidents i JOIN Regions r ON i.RegionID = r.RegionID WHERE IncidentType = 'Fire' GROUP BY RegionName;"}
{"prompt":"What was the average response time for emergency calls in the 'downtown' precinct for the month of July 2021? with given SQL schema CREATE TABLE emergency_calls (id INT, precinct VARCHAR(20), response_time INT, call_date DATE); INSERT INTO emergency_calls (id, precinct, response_time, call_date) VALUES (1, 'downtown', 12, '2021-07-01');","completion":"SELECT AVG(response_time) FROM emergency_calls WHERE precinct = 'downtown' AND call_date BETWEEN '2021-07-01' AND '2021-07-31';"}
{"prompt":"Calculate the number of military equipment maintenance records for each month with given SQL schema CREATE TABLE monthly_maintenance (id INT, equipment_type VARCHAR(255), maintenance_date DATE);","completion":"SELECT YEAR(maintenance_date), MONTH(maintenance_date), COUNT(*) FROM monthly_maintenance GROUP BY YEAR(maintenance_date), MONTH(maintenance_date);"}
{"prompt":"Add new military equipment to 'military_equipment' table with given SQL schema CREATE TABLE military_equipment (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255)); INSERT INTO military_equipment (id, name, type, country) VALUES (1, 'M1 Abrams', 'Tank', 'USA');","completion":"INSERT INTO military_equipment (id, name, type, country) VALUES (2, 'Leopard 2', 'Tank', 'Germany');"}
{"prompt":"What is the total number of peacekeeping personnel contributed by each country in the 'peacekeeping_personnel' and 'countries' tables? with given SQL schema CREATE TABLE countries (country_id INT, country_name VARCHAR(50)); CREATE TABLE peacekeeping_personnel (personnel_id INT, personnel_count INT, country_id INT); INSERT INTO countries VALUES (1, 'USA'), (2, 'China'), (3, 'India'); INSERT INTO peacekeeping_personnel VALUES (1, 500, 1), (2, 800, 2), (3, 1000, 3);","completion":"SELECT c.country_name, SUM(pp.personnel_count) as total_personnel FROM countries c JOIN peacekeeping_personnel pp ON c.country_id = pp.country_id GROUP BY c.country_name;"}
{"prompt":"Get the details of vessels that departed from the Port of New York between June 15 and June 30, 2019. with given SQL schema CREATE TABLE vessel (vessel_name VARCHAR(255), vessel_type VARCHAR(255), departed_date DATE); INSERT INTO vessel VALUES ('Container Ship', 'New York', '2019-06-16'); INSERT INTO vessel VALUES ('Bulk Carrier', 'New York', '2019-06-30'); CREATE TABLE port (port_name VARCHAR(255)); INSERT INTO port VALUES ('New York');","completion":"SELECT v.vessel_name, v.vessel_type, v.departed_date, p.port_name FROM vessel v INNER JOIN port p ON v.port_id = p.id WHERE p.port_name = 'New York' AND v.departed_date BETWEEN '2019-06-15' AND '2019-06-30';"}
{"prompt":"Which suppliers in the 'EthicalManufacturing' table have not been updated in the past year? with given SQL schema CREATE TABLE EthicalManufacturing (SupplierID INT, LastUpdate DATETIME);","completion":"SELECT SupplierID FROM EthicalManufacturing WHERE LastUpdate < DATEADD(year, -1, GETDATE());"}
{"prompt":"Find sites in 'european_sites' with more than 15 artifacts with given SQL schema CREATE TABLE european_sites (id INT, site_name VARCHAR(50), artifact_name VARCHAR(50));","completion":"SELECT site_name FROM european_sites GROUP BY site_name HAVING COUNT(artifact_name) > 15;"}
{"prompt":"Identify counties in New Mexico with increasing healthcare costs over the past 4 years. with given SQL schema CREATE TABLE costs (county_id INT, year INT, cost INT);","completion":"SELECT county_id, COUNT(*) AS years FROM costs WHERE costs[ROW_NUMBER() OVER (PARTITION BY county_id ORDER BY year) - 1] < cost GROUP BY county_id HAVING COUNT(*) = 4 AND county_id IN (SELECT county_id FROM costs WHERE state = 'New Mexico');"}
{"prompt":"List all cybersecurity strategies in the strategies table that were implemented in the year 2018. with given SQL schema CREATE TABLE strategies (name TEXT, description TEXT, year INT); INSERT INTO strategies (name, description, year) VALUES ('Intrusion Detection Systems', 'Monitor network traffic for suspicious activity.', 2018), ('Multi-Factor Authentication', 'Require users to provide multiple forms of authentication.', 2016), ('Penetration Testing', 'Test systems for vulnerabilities.', 2019);","completion":"SELECT name FROM strategies WHERE year = 2018;"}
{"prompt":"What was the total amount donated in each region, along with the corresponding number of donors, in the year 2021? with given SQL schema CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonorRegion TEXT, DonationAmount FLOAT); INSERT INTO Donors (DonorID, DonorName, DonorRegion, DonationAmount) VALUES (1, 'John Doe', 'North', 5000.00), (2, 'Jane Smith', 'South', 3500.00);","completion":"SELECT DonorRegion, SUM(DonationAmount) as TotalDonated, COUNT(DISTINCT DonorID) as DonorCount FROM Donors WHERE YEAR(DonationDate) = 2021 GROUP BY DonorRegion;"}
{"prompt":"What is the average lifelong learning progress for students in each school? with given SQL schema CREATE TABLE lifelong_learning (student_id INT, school_id INT, progress INT); INSERT INTO lifelong_learning (student_id, school_id, progress) VALUES (1, 100, 25), (2, 100, 50), (3, 101, 75), (4, 101, 100); CREATE TABLE schools (school_id INT, name VARCHAR(20)); INSERT INTO schools (school_id, name) VALUES (100, 'Maple'), (101, 'Oak');","completion":"SELECT s.school_id, s.name, AVG(ll.progress) as avg_progress FROM lifelong_learning ll JOIN schools s ON ll.school_id = s.school_id GROUP BY s.school_id, s.name;"}
{"prompt":"How many hours of diversity and inclusion training have been completed by employees in the 'IT' department? with given SQL schema CREATE TABLE Training (Employee_ID INT, Training_Type VARCHAR(50), Hours_Spent DECIMAL(5,2)); INSERT INTO Training (Employee_ID, Training_Type, Hours_Spent) VALUES (1, 'Technical Skills', 10.00), (1, 'Leadership', 5.00), (2, 'Diversity and Inclusion', 6.00), (3, 'Technical Skills', 8.00), (4, 'Diversity and Inclusion', 4.00), (4, 'Cybersecurity', 7.00);","completion":"SELECT SUM(Hours_Spent) FROM Training WHERE Employee_ID IN (SELECT Employee_ID FROM Employee WHERE Department = 'IT') AND Training_Type = 'Diversity and Inclusion';"}
{"prompt":"How many wells are there in the 'offshore' category with a production quantity greater than 1500? with given SQL schema CREATE TABLE wells (id INT, name VARCHAR(255), category VARCHAR(255), production_quantity INT); INSERT INTO wells (id, name, category, production_quantity) VALUES (1, 'Well A', 'onshore', 1000), (2, 'Well B', 'offshore', 2000), (3, 'Well C', 'onshore', 1500), (4, 'Well D', 'offshore', 2500);","completion":"SELECT COUNT(*) FROM wells WHERE category = 'offshore' AND production_quantity > 1500;"}
{"prompt":"List the wells with daily production rate greater than 125 with given SQL schema CREATE TABLE wells (id INT, well_name VARCHAR(255), location VARCHAR(255), drill_year INT, company VARCHAR(255), daily_production_rate DECIMAL(5,2)); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (1, 'Well001', 'Texas', 2020, 'CompanyA', 100.50); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (2, 'Well002', 'Colorado', 2019, 'CompanyB', 150.25); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (3, 'Well003', 'California', 2019, 'CompanyC', 200.00); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (4, 'Well004', 'Oklahoma', 2018, 'CompanyD', 175.25);","completion":"SELECT * FROM wells WHERE daily_production_rate > 125;"}
{"prompt":"How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'? with given SQL schema CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament TEXT); INSERT INTO games (game_id, team_id, tournament) VALUES (1, 1, 'Champions League'), (2, 1, 'Champions League'), (3, 2, 'Champions League');","completion":"SELECT SUM(cards) FROM yellow_cards JOIN games ON yellow_cards.team_id = games.team_id WHERE games.tournament = 'Champions League' AND yellow_cards.team_id = 1;"}
{"prompt":"Which basketball players in the 'ncaa_players' table are taller than 7 feet? with given SQL schema CREATE TABLE ncaa_players (player_id INT, player_name VARCHAR(50), height INT, position VARCHAR(20), team_name VARCHAR(50));","completion":"SELECT player_name FROM ncaa_players WHERE height > 96;"}
{"prompt":"What is the average number of refugees helped per disaster in each country? with given SQL schema CREATE TABLE disasters (disaster_id INT, country VARCHAR(50), refugees_helped INT); INSERT INTO disasters (disaster_id, country, refugees_helped) VALUES (1, 'Country A', 300), (2, 'Country B', 500), (3, 'Country C', 250), (4, 'Country A', 400), (5, 'Country C', 350), (6, 'Country B', 600);","completion":"SELECT country, AVG(refugees_helped) AS avg_refugees_per_disaster FROM disasters GROUP BY country"}
{"prompt":"What was the total amount spent on 'food aid' and 'water aid' in 2018? with given SQL schema CREATE TABLE expenses (id INT, category TEXT, year INT, amount FLOAT); INSERT INTO expenses (id, category, year, amount) VALUES (1, 'Food Aid', 2018, 5000.00); INSERT INTO expenses (id, category, year, amount) VALUES (2, 'Water Aid', 2018, 3000.00); INSERT INTO expenses (id, category, year, amount) VALUES (3, 'Clothing', 2019, 4000.00);","completion":"SELECT SUM(amount) FROM expenses WHERE (category = 'Food Aid' OR category = 'Water Aid') AND year = 2018;"}
{"prompt":"List all unique bus stops and their respective routes in the 'madrid' schema. with given SQL schema CREATE TABLE madrid.bus_stops (id INT, stop_name VARCHAR); CREATE TABLE madrid.stop_routes (id INT, stop_id INT, route_number INT);","completion":"SELECT DISTINCT madrid.bus_stops.stop_name, madrid.stop_routes.route_number FROM madrid.bus_stops INNER JOIN madrid.stop_routes ON madrid.bus_stops.id = madrid.stop_routes.stop_id;"}
{"prompt":"What is the average daily fare collection for the light rail line in the city of Los Angeles? with given SQL schema CREATE TABLE light_rail_lines (line_id INT, line_name VARCHAR(255), city VARCHAR(255)); INSERT INTO light_rail_lines (line_id, line_name, city) VALUES (1, 'Line 1', 'Los Angeles'), (2, 'Line 2', 'Los Angeles'); CREATE TABLE light_rail_fares (fare_id INT, line_id INT, fare_amount DECIMAL(5,2), fare_date DATE); INSERT INTO light_rail_fares (fare_id, line_id, fare_amount, fare_date) VALUES (1, 1, 2.00, '2022-01-01'), (2, 1, 2.00, '2022-01-02'), (3, 2, 3.00, '2022-01-01'), (4, 2, 3.00, '2022-01-02');","completion":"SELECT AVG(lrf.fare_amount) FROM light_rail_fares lrf JOIN light_rail_lines lrl ON lrf.line_id = lrl.line_id WHERE lrl.city = 'Los Angeles';"}
{"prompt":"What is the average distance covered by route type 'Light Rail'? with given SQL schema CREATE TABLE routes (id INT, route_name VARCHAR(255), type VARCHAR(255), length FLOAT, frequency INT); INSERT INTO routes (id, route_name, type, length, frequency) VALUES (106, 'Riverfront - Northside', 'Light Rail', 15.0, 12), (107, 'Southside - Airport', 'Bus', 25.0, 20);","completion":"SELECT type, AVG(length) as avg_length FROM routes WHERE type = 'Light Rail';"}
{"prompt":"What percentage of factories in Bangladesh follow fair labor practices? with given SQL schema CREATE TABLE factories (factory_id INT, name VARCHAR(255), location VARCHAR(255), follows_fair_practices BOOLEAN); INSERT INTO factories (factory_id, name, location, follows_fair_practices) VALUES (1, 'Green Factory', 'Bangladesh', true), (2, 'Blue Factory', 'Bangladesh', false);","completion":"SELECT (COUNT(*) FILTER (WHERE follows_fair_practices = true)) * 100.0 \/ COUNT(*) FROM factories WHERE location = 'Bangladesh';"}
{"prompt":"What is the minimum number of likes for posts made by users located in the United Kingdom, in the last month? with given SQL schema CREATE TABLE users (id INT, location VARCHAR(50)); CREATE TABLE posts (id INT, user_id INT, likes INT, created_at DATETIME);","completion":"SELECT MIN(posts.likes) FROM posts INNER JOIN users ON posts.user_id = users.id WHERE users.location = 'United Kingdom' AND posts.created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"}
{"prompt":"What is the total number of unique users in Australia and New Zealand who have interacted with at least one ad, and what was the total engagement time for these users, broken down by day? with given SQL schema CREATE TABLE ad_interactions (user_id INT, ad_id INT, country VARCHAR(2), interaction_date DATE, interaction_time FLOAT); INSERT INTO ad_interactions (user_id, ad_id, country, interaction_date, interaction_time) VALUES (1, 1001, 'AU', '2022-02-01', 25.3), (2, 1002, 'NZ', '2022-02-02', 30.5), (1, 1003, 'AU', '2022-02-01', 15.6);","completion":"SELECT interaction_date, COUNT(DISTINCT user_id) as total_users, SUM(interaction_time) as total_engagement_time FROM ad_interactions WHERE country IN ('AU', 'NZ') GROUP BY interaction_date ORDER BY interaction_date DESC LIMIT 7;"}
{"prompt":"How many financially capable clients have a loan? with given SQL schema CREATE TABLE clients (client_id INT, is_financially_capable BOOLEAN); INSERT INTO clients (client_id, is_financially_capable) VALUES (1, true), (2, false), (3, true), (4, true), (5, false); CREATE TABLE loans (loan_id INT, client_id INT); INSERT INTO loans (loan_id, client_id) VALUES (1001, 1), (1002, 3), (1003, 4), (1004, 5);","completion":"SELECT COUNT(*) FROM clients INNER JOIN loans ON clients.client_id = loans.client_id WHERE clients.is_financially_capable = true;"}
{"prompt":"What is the total number of new and returning volunteers in each program in each month? with given SQL schema CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, ProgramID INT, VolunteerDate DATE, IsReturning BOOLEAN); INSERT INTO Volunteers (VolunteerID, VolunteerName, ProgramID, VolunteerDate, IsReturning) VALUES (6, 'David Kim', 1, '2022-03-01', FALSE), (7, 'Emily Chen', 2, '2022-03-15', TRUE), (8, 'James Lee', 2, '2022-04-01', FALSE), (9, 'Grace Park', 3, '2022-04-15', TRUE), (10, 'Daniel Kim', 1, '2022-04-01', FALSE);","completion":"SELECT ProgramID, EXTRACT(MONTH FROM VolunteerDate) AS Month, SUM(CASE WHEN IsReturning THEN 1 ELSE 0 END) OVER (PARTITION BY ProgramID, EXTRACT(MONTH FROM VolunteerDate) ORDER BY ProgramID, EXTRACT(MONTH FROM VolunteerDate)) + COUNT(DISTINCT VolunteerID) OVER (PARTITION BY ProgramID, EXTRACT(MONTH FROM VolunteerDate) ORDER BY ProgramID, EXTRACT(MONTH FROM VolunteerDate)) AS TotalVolunteers FROM Volunteers;"}
{"prompt":"List all suppliers who supply ingredients to restaurants with an 'Organic' rating? with given SQL schema CREATE TABLE suppliers (supplier_id INT, supplier_name VARCHAR(50)); INSERT INTO suppliers VALUES (1, 'Green Earth'), (2, 'Farm Fresh'), (3, 'Local Harvest'); CREATE TABLE restaurants (restaurant_id INT, restaurant_name VARCHAR(50), rating VARCHAR(50)); INSERT INTO restaurants VALUES (1, 'Organic Bistro', 'Organic'), (2, 'Gourmet Delight', 'Fine Dining'); CREATE TABLE ingredients (ingredient_id INT, ingredient_name VARCHAR(50), supplier_id INT, restaurant_id INT); INSERT INTO ingredients VALUES (1, 'Spinach', 1, 1), (2, 'Tomatoes', 2, 1), (3, 'Beef', 3, 2);","completion":"SELECT s.supplier_name FROM suppliers s INNER JOIN ingredients i ON s.supplier_id = i.supplier_id INNER JOIN restaurants r ON i.restaurant_id = r.restaurant_id WHERE r.rating = 'Organic';"}
{"prompt":"Get the number of warehouses in 'City Y' with a capacity greater than 100,000? with given SQL schema CREATE TABLE Warehouses (id INT, name VARCHAR(255), city VARCHAR(255), capacity INT); INSERT INTO Warehouses (id, name, city, capacity) VALUES (1, 'Warehouse A', 'City A', 100000); INSERT INTO Warehouses (id, name, city, capacity) VALUES (2, 'Warehouse B', 'City B', 120000); INSERT INTO Warehouses (id, name, city, capacity) VALUES (3, 'Warehouse C', 'City C', 155000); INSERT INTO Warehouses (id, name, city, capacity) VALUES (4, 'Warehouse D', 'City Y', 180000);","completion":"SELECT COUNT(id) FROM Warehouses WHERE city = 'City Y' AND capacity > 100000;"}
{"prompt":"What is the average annual income for each household type in a given city? with given SQL schema CREATE TABLE household_data (city VARCHAR(255), household_type VARCHAR(255), annual_income FLOAT); INSERT INTO household_data (city, household_type, annual_income) VALUES ('City X', 'Single', 30000,), ('City X', 'Married', 60000), ('City X', 'Retiree', 40000), ('City Y', 'Single', 35000), ('City Y', 'Married', 70000), ('City Y', 'Retiree', 45000);","completion":"SELECT s1.household_type, AVG(s1.annual_income) as avg_annual_income FROM household_data s1 GROUP BY s1.household_type;"}
{"prompt":"What is the total number of mental health clinics that are in compliance with mental health parity regulations and located in neighborhoods with high health equity metrics? with given SQL schema CREATE TABLE MentalHealthClinics (ClinicID INT, Location VARCHAR(50), Type VARCHAR(20), ParityCompliance DATE, HealthEquityMetrics INT); CREATE TABLE Neighborhoods (NeighborhoodID INT, Location VARCHAR(50), HealthEquityMetrics INT); INSERT INTO MentalHealthClinics (ClinicID, Location, Type, ParityCompliance, HealthEquityMetrics) VALUES (1, '123 Main St', 'Psychiatric', '2022-01-01', 80); INSERT INTO Neighborhoods (NeighborhoodID, Location, HealthEquityMetrics) VALUES (1, '123 Main St', 80); INSERT INTO Neighborhoods (NeighborhoodID, Location, HealthEquityMetrics) VALUES (2, '456 Elm St', 60);","completion":"SELECT COUNT(*) FROM MentalHealthClinics INNER JOIN Neighborhoods ON MentalHealthClinics.Location = Neighborhoods.Location WHERE ParityCompliance IS NOT NULL AND HealthEquityMetrics >= 70;"}
{"prompt":"What is the average occupancy rate per hotel in New York City, ordered by occupancy rate in descending order? with given SQL schema CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, occupancy_rate DECIMAL(5,2)); INSERT INTO hotels (hotel_id, hotel_name, city, occupancy_rate) VALUES (1, 'Hotel A', 'New York City', 0.85), (2, 'Hotel B', 'New York City', 0.78), (3, 'Hotel C', 'New York City', 0.92);","completion":"SELECT AVG(occupancy_rate) AS avg_occupancy_rate, hotel_name FROM hotels WHERE city = 'New York City' GROUP BY hotel_name ORDER BY avg_occupancy_rate DESC;"}
{"prompt":"Identify language preservation programs and their respective annual budgets. with given SQL schema CREATE TABLE lang_preservation(id INT, program_name TEXT, annual_budget INT); INSERT INTO lang_preservation VALUES (1, 'Endangered Languages Fund', 200000), (2, 'The Living Tongues Institute for Endangered Languages', 150000);","completion":"SELECT program_name, annual_budget FROM lang_preservation;"}
{"prompt":"What are the names of the top 3 countries with the most heritage sites, and how many heritage sites do they have? with given SQL schema CREATE TABLE heritagesites (name VARCHAR(255), country VARCHAR(255)); INSERT INTO heritagesites (name, country) VALUES ('Taj Mahal', 'India'); INSERT INTO heritagesites (name, country) VALUES ('Machu Picchu', 'Peru');","completion":"SELECT country, COUNT(name) OVER (PARTITION BY country) as num_sites FROM heritagesites ORDER BY num_sites DESC FETCH FIRST 3 ROWS ONLY;"}
{"prompt":"How many infrastructure projects are there for each 'state'? with given SQL schema CREATE TABLE InfrastructureProjects (id INT, name TEXT, state TEXT, category TEXT, budget FLOAT); INSERT INTO InfrastructureProjects (id, name, state, category, budget) VALUES (1, 'Highway 12 Expansion', 'California', 'Transportation', 2000000); INSERT INTO InfrastructureProjects (id, name, state, category, budget) VALUES (2, 'Bridgewater Park Pedestrian Path', 'New York', 'Parks', 500000); INSERT INTO InfrastructureProjects (id, name, state, category, budget) VALUES (3, 'Railway Crossing Upgrade', 'Texas', 'Transportation', 1500000); INSERT INTO InfrastructureProjects (id, name, state, category, budget) VALUES (4, 'New Community Center', 'Florida', 'Community', 3000000); INSERT INTO InfrastructureProjects (id, name, state, category, budget) VALUES (5, 'Wastewater Treatment Plant', 'Louisiana', 'Waste Management', 1200000);","completion":"SELECT state, COUNT(*) FROM InfrastructureProjects GROUP BY state;"}
{"prompt":"How many public works projects are there in 'Sydney' and 'Melbourne' combined? with given SQL schema CREATE TABLE PublicWorksC(id INT, city VARCHAR(20), project VARCHAR(30)); INSERT INTO PublicWorksC(id, city, project) VALUES (1, 'Sydney', 'Park Renovation'), (2, 'Melbourne', 'Sidewalk Repair');","completion":"SELECT COUNT(*) FROM (SELECT city FROM PublicWorksC WHERE city = 'Sydney' UNION ALL SELECT city FROM PublicWorksC WHERE city = 'Melbourne') AS Total;"}
{"prompt":"What was the change in tourist numbers between 2017 and 2018 for destinations in Central America? with given SQL schema CREATE TABLE central_america_tourism (country VARCHAR(255), year INT, visitors INT); INSERT INTO central_america_tourism (country, year, visitors) VALUES ('Costa Rica', 2017, 5000), ('Guatemala', 2017, 3000), ('Belize', 2017, 2000), ('Costa Rica', 2018, 5500), ('Guatemala', 2018, 3200), ('Belize', 2018, 2100);","completion":"SELECT a.country, (b.visitors - a.visitors) as visitor_change FROM central_america_tourism a JOIN central_america_tourism b ON a.country = b.country WHERE a.year = 2017 AND b.year = 2018;"}
{"prompt":"What is the minimum age of an offender who participated in a restorative justice program? with given SQL schema CREATE TABLE restorative_justice_programs (offender_id INT, age INT, program_type VARCHAR(20));","completion":"SELECT MIN(age) FROM restorative_justice_programs;"}
{"prompt":"Find the top 5 media outlets by number of fact-checked articles in 2021. with given SQL schema CREATE TABLE media_outlets (outlet_id INT, outlet_name VARCHAR(100), outlet_type VARCHAR(50)); CREATE TABLE fact_checks (fact_check_id INT, fact_check_date DATE, outlet_id INT, is_true BOOLEAN); INSERT INTO media_outlets (outlet_id, outlet_name, outlet_type) VALUES (1, 'Snopes', 'Fact-checking website'); INSERT INTO fact_checks (fact_check_id, fact_check_date, outlet_id, is_true) VALUES (1, '2021-01-01', 1, TRUE);","completion":"SELECT o.outlet_name, COUNT(*) as num_fact_checked_articles FROM media_outlets o INNER JOIN fact_checks f ON o.outlet_id = f.outlet_id WHERE f.fact_check_date >= '2021-01-01' AND f.fact_check_date < '2022-01-01' GROUP BY o.outlet_name ORDER BY num_fact_checked_articles DESC LIMIT 5;"}
{"prompt":"What are the items with low stock levels and their cost that are not supplied by 'XYZ Corporation'? with given SQL schema CREATE TABLE Suppliers (SupplierID INT, Name VARCHAR(50), Item VARCHAR(50), Quantity INT, Cost DECIMAL(5,2)); CREATE VIEW LowStock AS SELECT SupplierID, Item FROM Suppliers WHERE Quantity < 10;","completion":"SELECT Suppliers.Item, Suppliers.Cost FROM Suppliers JOIN LowStock ON Suppliers.SupplierID = LowStock.SupplierID WHERE Suppliers.Name != 'XYZ Corporation';"}
{"prompt":"List the defense projects that have a contract value over $10 million and a start date after 2018 for Boeing. with given SQL schema CREATE TABLE DefenseProjects (project_id INT, contractor VARCHAR(50), contract_value FLOAT, start_date DATE); INSERT INTO DefenseProjects (project_id, contractor, contract_value, start_date) VALUES (1, 'Boeing', 15000000, '2019-01-01'), (2, 'Boeing', 12000000, '2017-01-01'), (3, 'Lockheed Martin', 20000000, '2020-01-01'), (4, 'Boeing', 11000000, '2021-01-01');","completion":"SELECT * FROM DefenseProjects WHERE contractor = 'Boeing' AND contract_value > 10000000 AND start_date > '2018-01-01';"}
{"prompt":"What is the total revenue of military equipment sales for the US in the year 2020? with given SQL schema CREATE TABLE MilitaryEquipmentSales (sale_id INT, country VARCHAR(50), amount FLOAT, year INT); INSERT INTO MilitaryEquipmentSales (sale_id, country, amount, year) VALUES (1, 'USA', 1500000, 2020); INSERT INTO MilitaryEquipmentSales (sale_id, country, amount, year) VALUES (2, 'USA', 1200000, 2019);","completion":"SELECT SUM(amount) FROM MilitaryEquipmentSales WHERE country = 'USA' AND year = 2020;"}
{"prompt":"What is the maximum number of workers in a single mine, for mines that are of the 'Open Pit' type? with given SQL schema CREATE TABLE mine (id INT, name VARCHAR(255), type VARCHAR(255), workers INT); INSERT INTO mine (id, name, type, workers) VALUES (1, 'Arizona Copper Mine', 'Open Pit', 300), (2, 'Nevada Silver Mine', 'Open Pit', 250), (3, 'California Gold Mine', 'Underground', 150);","completion":"SELECT MAX(workers) as max_workers FROM mine WHERE type = 'Open Pit';"}
{"prompt":"Find the top 3 news article titles with the highest word count from 'CBS News'? with given SQL schema CREATE TABLE cbs_news (article_id INT, title TEXT, word_count INT, publish_date DATE); INSERT INTO cbs_news (article_id, title, word_count, publish_date) VALUES (1, 'Article Title 1 with many words', 500, '2022-01-01'), (2, 'Article Title 2 with fewer words', 250, '2022-01-02'), (3, 'Article Title 3 with medium words', 350, '2022-01-03');","completion":"SELECT title FROM cbs_news ORDER BY word_count DESC LIMIT 3"}
{"prompt":"List organizations with more than 200 volunteers, and their average donation amounts, excluding donations less than $10. with given SQL schema CREATE TABLE organizations (org_id INT, org_name TEXT, social_impact_score INT);CREATE TABLE volunteers (vol_id INT, org_id INT, vol_country TEXT);CREATE TABLE donations (donation_id INT, donor_id INT, donation_amount INT, donation_date DATE);","completion":"SELECT o.org_name, AVG(donation_amount) AS avg_donation_amount FROM organizations o JOIN volunteers v ON o.org_id = v.org_id JOIN donations don ON o.org_id = don.org_id WHERE donation_amount >= 10 GROUP BY o.org_name HAVING COUNT(v.vol_id) > 200;"}
{"prompt":"What is the total amount donated to a specific cause? with given SQL schema CREATE TABLE causes (id INT, name TEXT); CREATE TABLE donations (id INT, donor_id INT, cause_id INT, donation_amount DECIMAL(10,2)); INSERT INTO causes (id, name) VALUES (1, 'Cause A'), (2, 'Cause B'); INSERT INTO donations (id, donor_id, cause_id, donation_amount) VALUES (1, 1, 1, 50.00), (2, 2, 1, 100.00);","completion":"SELECT SUM(donation_amount) FROM donations JOIN causes ON donations.cause_id = causes.id WHERE causes.name = 'Cause A';"}
{"prompt":"How many donors have made recurring donations in each region? with given SQL schema CREATE TABLE Donors (DonorID INT, Region VARCHAR(50), RecurringDonor BOOLEAN);","completion":"SELECT Region, COUNT(DonorID) FROM Donors WHERE RecurringDonor = TRUE GROUP BY Region;"}
{"prompt":"What's the maximum donation amount in the last 6 months? with given SQL schema CREATE TABLE donations_time (donation_time DATETIME, donation_amount DECIMAL(10,2)); INSERT INTO donations_time (donation_time, donation_amount) VALUES ('2022-01-01 12:00:00', 500.00), ('2022-06-01 15:00:00', 1000.00);","completion":"SELECT MAX(donation_amount) FROM donations_time WHERE donation_time >= DATE_SUB(NOW(), INTERVAL 6 MONTH);"}
{"prompt":"What are the top 3 countries with the most players? with given SQL schema CREATE TABLE Players (PlayerID INT, Country VARCHAR(20));INSERT INTO Players (PlayerID, Country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'USA'), (4, 'Mexico');","completion":"SELECT Country, COUNT(PlayerID) AS PlayerCount FROM Players GROUP BY Country ORDER BY PlayerCount DESC LIMIT 3;"}
{"prompt":"Create a table named 'ticket_sales' to store ticket sales data with given SQL schema CREATE TABLE ticket_sales (sale_id INT, event_date DATE, team VARCHAR(50), section VARCHAR(50), price DECIMAL(5,2), quantity INT);","completion":"CREATE TABLE ticket_sales (sale_id INT, event_date DATE, team VARCHAR(50), section VARCHAR(50), price DECIMAL(5,2), quantity INT);"}
{"prompt":"What is the breakdown of multimodal mobility usage by city? with given SQL schema CREATE TABLE MultimodalMobilityUsage(City VARCHAR(50), Mode VARCHAR(50), Usage FLOAT);","completion":"SELECT City, Mode, SUM(Usage) FROM MultimodalMobilityUsage GROUP BY City, Mode;"}
{"prompt":"Count the number of suppliers from the United States. with given SQL schema CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sustainable BOOLEAN); INSERT INTO suppliers (id, name, location, sustainable) VALUES (1, 'Eco Friendly', 'California', true);","completion":"SELECT COUNT(*) FROM suppliers WHERE location = 'California';"}
{"prompt":"What is the average retail price of all organic cotton t-shirts? with given SQL schema CREATE TABLE garments (id INT, type VARCHAR(255), material VARCHAR(255), price DECIMAL(5,2)); INSERT INTO garments (id, type, material, price) VALUES","completion":"SELECT AVG(price) FROM garments WHERE type = 'T-Shirt' AND material = 'Organic Cotton';"}
{"prompt":"What is the total CO2 emission for each manufacturing process in the Asia region in 2022? with given SQL schema CREATE TABLE emissions_asia (emission_id INT, manufacturing_process VARCHAR(50), co2_emission DECIMAL(10, 2), region VARCHAR(50));","completion":"SELECT manufacturing_process, SUM(co2_emission) FROM emissions_asia WHERE region = 'Asia' AND YEAR(emission_date) = 2022 GROUP BY manufacturing_process;"}
{"prompt":"Update the risk_score of policyholder with policy_holder_id 789 in the 'policy_holder' table to 350. with given SQL schema CREATE TABLE policy_holder (policy_holder_id INT, first_name VARCHAR(20), last_name VARCHAR(20), risk_score INT);","completion":"UPDATE policy_holder SET risk_score = 350 WHERE policy_holder_id = 789;"}
{"prompt":"Show the names of unions that have more than 5000 members with given SQL schema CREATE TABLE union_members (id INT, union_name VARCHAR(50), member_count INT); INSERT INTO union_members (id, union_name, member_count) VALUES (1, 'Union A', 6000), (2, 'Union B', 3000), (3, 'Union C', 4000);","completion":"SELECT union_name FROM union_members WHERE member_count > 5000;"}
{"prompt":"Update the collective bargaining agreement date for the 'Construction Workers Union' to '2022-05-01'. with given SQL schema CREATE TABLE CollectiveBargaining (CBAID INT, UnionID INT, AgreementDate DATE);   INSERT INTO CollectiveBargaining (CBAID, UnionID, AgreementDate) VALUES (1, 1, '2020-01-01'), (2, 2, '2019-06-15'), (3, 3, '2018-09-01');","completion":"UPDATE CollectiveBargaining   SET AgreementDate = '2022-05-01'   WHERE UnionID = (SELECT UnionID FROM Unions WHERE UnionName = 'Construction Workers Union');"}
{"prompt":"What is the percentage of workers in unions that are in the 'Healthcare' industry and have collective bargaining agreements? with given SQL schema CREATE TABLE unions (id INT, industry VARCHAR(255), has_cba BOOLEAN); CREATE TABLE workers (id INT, union_id INT);","completion":"SELECT (COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM workers)) AS percentage FROM workers JOIN unions ON workers.union_id = unions.id WHERE unions.industry = 'Healthcare' AND unions.has_cba = TRUE;"}
{"prompt":"What is the average number of autonomous vehicle research studies conducted annually in Germany? with given SQL schema CREATE TABLE ResearchStudies (Id INT, Title VARCHAR(100), Country VARCHAR(50), Year INT, IsAutonomous BOOLEAN); INSERT INTO ResearchStudies (Id, Title, Country, Year, IsAutonomous) VALUES (1, 'Autonomous Vehicle Safety Testing', 'Germany', 2015, true), (2, 'AD Research Study', 'Germany', 2016, true), (3, 'AV Research Study', 'Germany', 2018, true);","completion":"SELECT AVG(Year) FROM ResearchStudies WHERE Country = 'Germany' AND IsAutonomous = true;"}
{"prompt":"What is the average speed of vessels that transported hazardous materials in the last 6 months? with given SQL schema CREATE TABLE Vessels (VesselID int, Name varchar(50), Type varchar(50), AverageSpeed float); CREATE TABLE Cargo (CargoID int, VesselID int, MaterialType varchar(50), TransportDate date); INSERT INTO Vessels VALUES (1, 'Vessel1', 'Transport', 15); INSERT INTO Cargo VALUES (1, 1, 'Hazardous', '2022-01-01');","completion":"SELECT AVG(V.AverageSpeed) FROM Vessels V INNER JOIN Cargo C ON V.VesselID = C.VesselID WHERE C.TransportDate >= DATEADD(month, -6, GETDATE()) AND C.MaterialType = 'Hazardous';"}
{"prompt":"List the top 5 water-consuming zip codes in California. with given SQL schema CREATE TABLE zip_water_usage (zip VARCHAR, water_consumption FLOAT); INSERT INTO zip_water_usage (zip, water_consumption) VALUES ('90001', 5000), ('90002', 6000), ('90003', 4500), ('90004', 7000), ('90005', 5500), ('90006', 6500);","completion":"SELECT zip, water_consumption FROM zip_water_usage ORDER BY water_consumption DESC LIMIT 5;"}
{"prompt":"What is the average water consumption in the residential sector in Brazil for the year 2018? with given SQL schema CREATE TABLE water_consumption_kl (region VARCHAR(20), sector VARCHAR(20), year INT, value FLOAT); INSERT INTO water_consumption_kl (region, sector, year, value) VALUES ('Brazil', 'Residential', 2018, 6000000);","completion":"SELECT AVG(value) FROM water_consumption_kl WHERE sector = 'Residential' AND region = 'Brazil' AND year = 2018;"}
{"prompt":"Determine the number of AI safety incidents per month globally in the past 2 years. with given SQL schema CREATE TABLE ai_safety_incidents (id INT, incident_name VARCHAR(255), incident_date DATE);","completion":"SELECT DATEPART(YEAR, incident_date) as year, DATEPART(MONTH, incident_date) as month, COUNT(*) FROM ai_safety_incidents WHERE incident_date >= DATEADD(year, -2, GETDATE()) GROUP BY DATEPART(YEAR, incident_date), DATEPART(MONTH, incident_date);"}
{"prompt":"Find the number of explainable AI projects and their total budget, partitioned by project type, ordered by budget in descending order? with given SQL schema CREATE TABLE explainable_ai_projects (project_id INT, project_type VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO explainable_ai_projects (project_id, project_type, budget) VALUES (1, 'Healthcare', 50000.00), (2, 'Finance', 75000.00), (3, 'Education', 35000.00), (4, 'Manufacturing', 60000.00);","completion":"SELECT project_type, COUNT(*) as num_projects, SUM(budget) as total_budget FROM explainable_ai_projects GROUP BY project_type ORDER BY total_budget DESC;"}
{"prompt":"List all AI safety violations for algorithms released in 2020 and their corresponding risk levels with given SQL schema CREATE TABLE ai_safety_violations (id INT PRIMARY KEY, algorithm_name VARCHAR(50), violation_type VARCHAR(20), violation_date DATE, risk_level VARCHAR(10)); CREATE TABLE algorithm_details (id INT PRIMARY KEY, algorithm_name VARCHAR(50), developer VARCHAR(50), release_year INT);","completion":"SELECT algorithm_details.algorithm_name, ai_safety_violations.violation_type, ai_safety_violations.violation_date, ai_safety_violations.risk_level FROM algorithm_details JOIN ai_safety_violations ON algorithm_details.algorithm_name = ai_safety_violations.algorithm_name WHERE algorithm_details.release_year = 2020;"}
{"prompt":"What is the average satisfaction score for AI safety models in Australia? with given SQL schema CREATE TABLE ai_safety_models (model_name TEXT, satisfaction_score INTEGER, country TEXT);","completion":"SELECT AVG(satisfaction_score) FROM ai_safety_models WHERE country = 'Australia';"}
{"prompt":"What was the total agricultural innovation output for each country in Southeast Asia in 2019? with given SQL schema CREATE TABLE agri_innovation (project_id INT, country VARCHAR(255), innovation_output INT, year INT); INSERT INTO agri_innovation (project_id, country, innovation_output, year) VALUES (1, 'Vietnam', 1000, 2019), (2, 'Thailand', 1200, 2019), (3, 'Indonesia', 1500, 2019);","completion":"SELECT country, SUM(innovation_output) FROM agri_innovation WHERE year = 2019 AND country IN ('Vietnam', 'Thailand', 'Indonesia') GROUP BY country;"}
{"prompt":"Delete records for fish species that are not tilapiids. with given SQL schema CREATE TABLE fish_species (id INT, name VARCHAR(255), species_family VARCHAR(255)); INSERT INTO fish_species (id, name, species_family) VALUES (1, 'Salmon', 'Salmonidae'), (2, 'Tuna', 'Scombridae'), (3, 'Tilapia', 'Cichlidae'); CREATE TABLE fish_data (id INT, species_id INT, weight DECIMAL(5,2), length DECIMAL(5,2)); INSERT INTO fish_data (id, species_id, weight, length) VALUES (1, 1, 3.5, 0.6), (2, 1, 4.2, 0.7), (3, 2, 22.3, 1.3), (4, 3, 1.2, 0.3);","completion":"DELETE FROM fish_data WHERE species_id NOT IN (SELECT id FROM fish_species WHERE species_family = 'Cichlidae');"}
{"prompt":"List all fish species and their populations in sustainable fisheries in the Mediterranean Sea. with given SQL schema CREATE TABLE fisheries (fishery_name VARCHAR(50), fish_species VARCHAR(50), population INT); INSERT INTO fisheries (fishery_name, fish_species, population) VALUES ('Mediterranean Sea Sustainable 1', 'Sardine', 150000), ('Mediterranean Sea Sustainable 1', 'Anchovy', 200000), ('Mediterranean Sea Sustainable 2', 'Tuna', 50000), ('Mediterranean Sea Sustainable 2', 'Swordfish', 30000);","completion":"SELECT fish_species, population FROM fisheries WHERE fishery_name LIKE 'Mediterranean Sea Sustainable%';"}
{"prompt":"Which are the top 2 countries with the highest average dissolved oxygen levels in ocean water in the last 12 months? with given SQL schema CREATE TABLE monitoring_stations (id INT, name TEXT, location TEXT, country TEXT); INSERT INTO monitoring_stations (id, name, location, country) VALUES (1, 'Station A', 'Pacific Ocean Coast', 'USA'), (2, 'Station B', 'Atlantic Ocean Coast', 'USA'), (3, 'Station C', 'North Sea', 'Germany'), (4, 'Station D', 'Mediterranean Sea', 'Italy'); CREATE TABLE oxygen_readings (id INT, station_id INT, reading DATE, level DECIMAL(5,2), country TEXT); INSERT INTO oxygen_readings (id, station_id, reading, level, country) VALUES (1, 1, '2022-03-01', 8.2, 'USA'), (2, 1, '2022-03-15', 8.4, 'USA'), (3, 2, '2022-03-05', 7.8, 'USA'), (4, 2, '2022-03-20', 8.0, 'USA'), (5, 3, '2022-03-02', 9.2, 'Germany'), (6, 3, '2022-03-17', 9.0, 'Germany');","completion":"SELECT country, AVG(level) avg_oxygen FROM oxygen_readings WHERE reading >= DATEADD(month, -12, CURRENT_DATE) GROUP BY country ORDER BY avg_oxygen DESC FETCH FIRST 2 ROWS ONLY;"}
{"prompt":"How many events have more attendees than the average number of attendees for all events? with given SQL schema CREATE TABLE Events (event_id INT, event_location VARCHAR(20), event_type VARCHAR(20), num_attendees INT); INSERT INTO Events (event_id, event_location, event_type, num_attendees) VALUES (1, 'New York', 'Concert', 500), (2, 'Los Angeles', 'Theater', 300), (3, 'Chicago', 'Exhibition', 400), (4, 'San Francisco', 'Theater', 200), (5, 'Seattle', 'Exhibition', 150);","completion":"SELECT COUNT(*) FROM Events WHERE num_attendees > (SELECT AVG(num_attendees) FROM Events);"}
{"prompt":"How many first-time attendees were there at each event, in the past six months, broken down by funding source? with given SQL schema CREATE TABLE Events (id INT, date DATE, funding_source VARCHAR(50)); INSERT INTO Events (id, date, funding_source) VALUES (1, '2021-01-01', 'Government'), (2, '2021-02-01', 'Private'); CREATE TABLE Attendance (id INT, event_id INT, is_new_attendee BOOLEAN); INSERT INTO Attendance (id, event_id, is_new_attendee) VALUES (1, 1, TRUE), (2, 1, FALSE), (3, 2, TRUE);","completion":"SELECT e.funding_source, COUNT(a.id) AS count FROM Events e INNER JOIN Attendance a ON e.id = a.event_id AND a.is_new_attendee = TRUE WHERE e.date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY e.funding_source;"}
{"prompt":"How many viewers are there for the TV show 'The Crown'? with given SQL schema CREATE TABLE tv_show_viewers (show_id INT, title VARCHAR(255), viewer_count INT); INSERT INTO tv_show_viewers (show_id, title, viewer_count) VALUES (1, 'The Crown', 5000000), (2, 'Stranger Things', 7000000), (3, 'Friends', 6000000), (4, 'Breaking Bad', 8000000);","completion":"SELECT SUM(viewer_count) as total_viewers FROM tv_show_viewers WHERE title = 'The Crown';"}
{"prompt":"to represent the fanbase size for each genre with given SQL schema INSERT INTO music_genres_ext (id, genre, popularity) VALUES (3, 'Pop', 25000000);","completion":"INSERT INTO music_genres_ext (id, genre, popularity) VALUES (3, 'Pop', 25000000);"}
{"prompt":"What is the total amount of chemicals stored in the storage facilities, grouped by the state and the facility name? with given SQL schema CREATE TABLE StorageFacilities (FacilityID INT, FacilityName TEXT, State TEXT, Chemical TEXT, Quantity DECIMAL(5,2)); INSERT INTO StorageFacilities (FacilityID, FacilityName, State, Chemical, Quantity) VALUES (1, 'Cool Storage', 'Texas', 'Acetone', 50.5), (2, 'Warm Storage', 'California', 'Acetone', 75.3), (3, 'Freezer', 'Texas', 'Nitrogen', 150.5), (4, 'Hot Storage', 'California', 'Nitrogen', 250.3);","completion":"SELECT State, FacilityName, SUM(Quantity) AS TotalQuantity FROM StorageFacilities GROUP BY State, FacilityName;"}
{"prompt":"How many marine protected areas are there per country? with given SQL schema CREATE TABLE marine_protected_areas (name VARCHAR(255), country VARCHAR(255));","completion":"SELECT country, COUNT(*) FROM marine_protected_areas GROUP BY country;"}
{"prompt":"What is the total number of smart contracts by category? with given SQL schema CREATE TABLE smart_contracts (id INT, category VARCHAR(255), name VARCHAR(255)); INSERT INTO smart_contracts (id, category, name) VALUES (1, 'DeFi', 'Compound'), (2, 'DEX', 'Uniswap'), (3, 'DeFi', 'Aave'), (4, 'NFT', 'CryptoKitties'), (5, 'DEX', 'SushiSwap'), (6, 'DeFi', 'MakerDAO');","completion":"SELECT category, COUNT(*) as total FROM smart_contracts GROUP BY category;"}
{"prompt":"How many timber harvest permits were issued in each region in 2019? with given SQL schema CREATE TABLE harvest_permits (id INT, region VARCHAR(255), issued_date DATE);","completion":"SELECT region, COUNT(*) as num_permits FROM harvest_permits WHERE EXTRACT(YEAR FROM issued_date) = 2019 GROUP BY region;"}
{"prompt":"What is the number of art pieces in each collection? with given SQL schema CREATE TABLE ArtCollections (id INT, name VARCHAR(255), location VARCHAR(255));   CREATE TABLE ArtPieces (id INT, collection_id INT, title VARCHAR(255), artist VARCHAR(255));","completion":"SELECT c.name, COUNT(p.id) FROM ArtCollections c JOIN ArtPieces p ON c.id = p.collection_id GROUP BY c.name;"}
{"prompt":"Which countries had the most artists win awards in 2021? with given SQL schema CREATE TABLE artists (id INT, name TEXT, country TEXT, awards_won INT); INSERT INTO artists (id, name, country, awards_won) VALUES (1, 'John Doe', 'Nigeria', 3), (2, 'Jane Smith', 'Kenya', 2), (3, 'Mohamed Ahmed', 'Egypt', 1), (4, 'Aisha Mohamed', 'Senegal', 4), (5, 'Pedro Gonzales', 'South Africa', 5);","completion":"SELECT country, SUM(awards_won) AS total_awards FROM artists WHERE YEAR(artists.awards_won) = 2021 GROUP BY country ORDER BY total_awards DESC;"}
{"prompt":"Find the number of threat intelligence reports created in Q1 2022 with given SQL schema CREATE TABLE threat_intelligence (report_id int, report_date date, report_type varchar(255));","completion":"SELECT COUNT(*) FROM threat_intelligence WHERE QUARTER(report_date) = 1 AND YEAR(report_date) = 2022;"}
{"prompt":"Update the number of troops deployed in the first quarter of 2020 in peacekeeping missions to 7000 and display the updated table. with given SQL schema CREATE TABLE peacekeeping_missions (id INT, year INT, quarter INT, troops INT); INSERT INTO peacekeeping_missions (id, year, quarter, troops) VALUES (1, 2018, 1, 4000), (2, 2018, 2, 5000), (3, 2019, 1, 5500), (4, 2019, 2, 6000), (5, 2020, 1, 6500), (6, 2020, 2, 7000);","completion":"UPDATE peacekeeping_missions SET troops = 7000 WHERE year = 2020 AND quarter = 1; SELECT * FROM peacekeeping_missions;"}
{"prompt":"Who are the top 3 contributors to defense diplomacy? with given SQL schema CREATE TABLE Contributors (id INT, country VARCHAR(50), amount INT); INSERT INTO Contributors (id, country, amount) VALUES (1, 'Country1', 5000000), (2, 'Country2', 6000000), (3, 'Country3', 7000000);","completion":"SELECT country, amount FROM Contributors ORDER BY amount DESC LIMIT 3;"}
{"prompt":"What is the total value of trades executed by the trading desk in London? with given SQL schema CREATE TABLE trades (id INT, desk VARCHAR(50), value DECIMAL(10,2), currency VARCHAR(10)); INSERT INTO trades (id, desk, value, currency) VALUES (1, 'New York', 1000.00, 'USD'), (2, 'London', 2000.00, 'GBP'), (3, 'Paris', 1500.00, 'EUR');","completion":"SELECT SUM(value * currency_rate) FROM trades t JOIN currency_rates cr ON t.currency = cr.currency WHERE t.desk = 'London' AND t.trade_date >= CURRENT_DATE - INTERVAL '1 month';"}
{"prompt":"How many patients with diabetes are in each rural county in Texas? with given SQL schema CREATE TABLE patients (id INTEGER, county VARCHAR(255), state VARCHAR(255), disease VARCHAR(255));","completion":"SELECT county, disease, COUNT(*) FROM patients WHERE state = 'Texas' AND county LIKE '%rural%' AND disease = 'diabetes' GROUP BY county;"}
{"prompt":"What is the average investment amount in 'Asia'? with given SQL schema CREATE TABLE investment_regions (region VARCHAR(20), investment_amount FLOAT); INSERT INTO investment_regions (region, investment_amount) VALUES ('Africa', 450000), ('Asia', 650000), ('South America', 700000), ('Europe', 800000);","completion":"SELECT AVG(investment_amount) FROM investment_regions WHERE region = 'Asia';"}
{"prompt":"List all countries that have a military alliance with the United States. with given SQL schema CREATE TABLE military_alliances (id INT, country TEXT, allied_country TEXT);INSERT INTO military_alliances (id, country, allied_country) VALUES (1, 'United States', 'Japan');INSERT INTO military_alliances (id, country, allied_country) VALUES (2, 'United States', 'South Korea');","completion":"SELECT allied_country FROM military_alliances WHERE country = 'United States';"}
{"prompt":"What is the total number of cybersecurity incidents per country in the African region since 2018? with given SQL schema CREATE TABLE CybersecurityIncidents (Id INT, Country VARCHAR(50), IncidentType VARCHAR(50), Year INT, Quantity INT);INSERT INTO CybersecurityIncidents (Id, Country, IncidentType, Year, Quantity) VALUES (1, 'Egypt', 'Malware', 2018, 200), (2, 'Algeria', 'Phishing', 2019, 150), (3, 'South Africa', 'Ransomware', 2020, 250);","completion":"SELECT Country, SUM(Quantity) AS TotalIncidents FROM CybersecurityIncidents WHERE Country IN ('Egypt', 'Algeria', 'South Africa') AND Year >= 2018 GROUP BY Country;"}
{"prompt":"List all job titles that have more than 5 employees in the \"employee\" and \"job\" tables with given SQL schema CREATE TABLE employee (id INT, job_id INT); CREATE TABLE job (id INT, title TEXT);","completion":"SELECT j.title FROM job j JOIN employee e ON j.id = e.job_id GROUP BY j.title HAVING COUNT(*) > 5;"}
{"prompt":"What is the count of job applications received from historically underrepresented communities in the last 6 months? with given SQL schema CREATE TABLE JobApplications (ApplicationID int, ApplicationDate date, ApplicantCommunity varchar(50)); INSERT INTO JobApplications (ApplicationID, ApplicationDate, ApplicantCommunity) VALUES (1, '2022-01-01', 'Underrepresented'), (2, '2022-02-15', 'Not Underrepresented'), (3, '2022-03-20', 'Underrepresented'), (4, '2022-04-01', 'Not Underrepresented');","completion":"SELECT COUNT(*) FROM JobApplications WHERE ApplicantCommunity = 'Underrepresented' AND ApplicationDate >= DATEADD(month, -6, GETDATE());"}
{"prompt":"List the top 2 producing wells in the Arctic region, partitioned by month. with given SQL schema CREATE TABLE well_production_arctic (well_name VARCHAR(20), production_qty FLOAT, production_date DATE, location VARCHAR(20)); INSERT INTO well_production_arctic (well_name, production_qty, production_date, location) VALUES ('Well X', 1000, '2020-01-01', 'Arctic'); INSERT INTO well_production_arctic (well_name, production_qty, production_date, location) VALUES ('Well X', 1200, '2020-01-02', 'Arctic'); INSERT INTO well_production_arctic (well_name, production_qty, production_date, location) VALUES ('Well Y', 1500, '2020-01-01', 'Arctic'); INSERT INTO well_production_arctic (well_name, production_qty, production_date, location) VALUES ('Well Y', 1700, '2020-01-02', 'Arctic');","completion":"SELECT well_name, EXTRACT(MONTH FROM production_date) as month, RANK() OVER (PARTITION BY EXTRACT(MONTH FROM production_date) ORDER BY production_qty DESC) as rank FROM well_production_arctic WHERE well_name LIKE 'Well%' AND production_date BETWEEN '2020-01-01' AND '2021-12-31' AND location = 'Arctic' ORDER BY production_date, rank;"}
{"prompt":"What is the total number of goals scored by players in the SoccerTeams and SoccerPlayerGoals tables, for teams that have a mascot starting with the letter 'C'? with given SQL schema CREATE TABLE SoccerTeams (TeamID INT, TeamName VARCHAR(50), Mascot VARCHAR(50)); CREATE TABLE SoccerPlayerGoals (PlayerID INT, TeamID INT, Goals INT);","completion":"SELECT SUM(Goals) FROM SoccerPlayerGoals INNER JOIN SoccerTeams ON SoccerPlayerGoals.TeamID = SoccerTeams.TeamID WHERE Mascot LIKE 'C%';"}
{"prompt":"What is the total number of matches played in the CricketMatches table, for matches that were rained out? with given SQL schema CREATE TABLE CricketMatches (MatchID INT, HomeTeam VARCHAR(50), AwayTeam VARCHAR(50), Weather VARCHAR(50));","completion":"SELECT COUNT(*) FROM CricketMatches WHERE Weather = 'Rain';"}
{"prompt":"What is the total amount of aid provided by each government, for community development projects in Southeast Asia, in the last 10 years, and the average duration of the projects? with given SQL schema CREATE TABLE community_development_projects (project_id INT, government_id INT, start_date DATE, end_date DATE, aid DECIMAL(10,2)); INSERT INTO community_development_projects VALUES (1, 1, '2011-01-01', '2013-12-31', 50000); INSERT INTO community_development_projects VALUES (2, 1, '2014-01-01', '2016-12-31', 75000); INSERT INTO community_development_projects VALUES (3, 2, '2015-01-01', '2017-12-31', 100000); INSERT INTO community_development_projects VALUES (4, 2, '2018-01-01', '2020-12-31', 80000);","completion":"SELECT government.name as government, SUM(aid) as total_aid, AVG(DATEDIFF(end_date, start_date) \/ 365) as avg_project_duration FROM community_development_projects JOIN government ON community_development_projects.government_id = government.government_id WHERE government.region = 'Southeast Asia' AND community_development_projects.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 10 YEAR) GROUP BY government.name;"}
{"prompt":"What is the total fare collected on route 123? with given SQL schema CREATE TABLE Routes(id INT, name TEXT); CREATE TABLE Fares(route_id INT, fare FLOAT);","completion":"SELECT SUM(fare) FROM Fares JOIN Routes ON Fares.route_id = Routes.id WHERE Routes.name = '123';"}
{"prompt":"What is the percentage of total sustainable materials used by companies located in Europe? with given SQL schema CREATE TABLE company_location_sustainability (company_id INT, location TEXT, sustainability_score INT); INSERT INTO company_location_sustainability (company_id, location, sustainability_score) VALUES (1, 'Asia-Pacific', 85), (2, 'Europe', 92), (3, 'Asia-Pacific', 78), (4, 'Europe', 60), (5, 'Europe', 88);","completion":"SELECT (SUM(CASE WHEN location = 'Europe' THEN sustainability_score ELSE 0 END) \/ SUM(sustainability_score)) * 100 FROM company_location_sustainability;"}
{"prompt":"How many fashion brands in each country have a size diversity policy? with given SQL schema CREATE TABLE brands (id INT, name VARCHAR(255), country VARCHAR(255), size_diversity_policy BOOLEAN); INSERT INTO brands (id, name, country, size_diversity_policy) VALUES (1, 'BrandA', 'USA', true), (2, 'BrandB', 'Canada', false), (3, 'BrandC', 'France', true), (4, 'BrandD', 'UK', true), (5, 'BrandE', 'Germany', false), (6, 'BrandF', 'Italy', true), (7, 'BrandG', 'Spain', false);","completion":"SELECT country, COUNT(*) as brand_count FROM brands WHERE size_diversity_policy = true GROUP BY country;"}
{"prompt":"Find the total assets of Shariah-compliant financial institutions in the Middle East and North Africa? with given SQL schema CREATE TABLE financial_institutions (name TEXT, location TEXT, shariah_compliant BOOLEAN, assets NUMERIC); INSERT INTO financial_institutions (name, location, shariah_compliant, assets) VALUES ('Al Rajhi Bank', 'Saudi Arabia', TRUE, 123456.78), ('Kuwait Finance House', 'Kuwait', TRUE, 987654.32);","completion":"SELECT SUM(assets) FROM financial_institutions WHERE shariah_compliant = TRUE AND location LIKE 'Middle East%' OR location LIKE 'North Africa%';"}
{"prompt":"Insert a new record into the 'customer_data' table for 'DavidChoi' with a score of 75. with given SQL schema CREATE TABLE customer_data (id INT, name VARCHAR(20), state VARCHAR(2), score INT); INSERT INTO customer_data (id, name, state, score) VALUES (1, 'JohnDoe', 'CA', 75), (2, 'JaneDoe', 'NY', 80), (3, 'MikeSmith', 'CA', 65);","completion":"INSERT INTO customer_data (name, score, state) VALUES ('DavidChoi', 75, 'CA');"}
{"prompt":"What is the total amount of socially responsible loans issued by each lender in Q1 2022? with given SQL schema CREATE TABLE lenders (lender_id INT, lender_name VARCHAR(255));CREATE TABLE loans (loan_id INT, lender_id INT, issue_date DATE, loan_amount DECIMAL(10,2));INSERT INTO lenders (lender_id, lender_name) VALUES (1, 'Lender A'), (2, 'Lender B');","completion":"SELECT l.lender_name, SUM(l.loan_amount) as total_loan_amount FROM loans l INNER JOIN lenders le ON l.lender_id = le.lender_id WHERE l.issue_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY l.lender_id;"}
{"prompt":"Create a table for storing staff member details with columns: id, name, role, and department. with given SQL schema CREATE TABLE staff_members (id INT, name VARCHAR(50), role VARCHAR(50), department VARCHAR(50));","completion":"INSERT INTO staff_members (id, name, role, department) VALUES (1, 'John Doe', 'Manager', 'Finance'), (2, 'Jane Smith', 'Director', 'Marketing'), (3, 'Mike Johnson', 'Specialist', 'IT');"}
{"prompt":"Calculate the total funding received by biotech startups founded in 2018. with given SQL schema CREATE TABLE startups (name TEXT, year INTEGER, funding FLOAT); INSERT INTO startups (name, year, funding) VALUES ('StartupA', 2017, 5000000), ('StartupB', 2018, 7000000), ('StartupC', 2018, 6000000);","completion":"SELECT SUM(funding) FROM startups WHERE year = 2018;"}
{"prompt":"What is the number of public parks in each borough in the city of New York, including their names and area size? with given SQL schema CREATE TABLE boroughs(id INT, name TEXT); INSERT INTO boroughs VALUES (1, 'Borough A'); INSERT INTO boroughs VALUES (2, 'Borough B'); INSERT INTO boroughs VALUES (3, 'Borough C'); CREATE TABLE parks(id INT, borough_id INT, name TEXT, area_size INT); INSERT INTO parks VALUES (1, 1, 'Park A', 50); INSERT INTO parks VALUES (2, 1, 'Park B', 75); INSERT INTO parks VALUES (3, 2, 'Park C', 60); INSERT INTO parks VALUES (4, 3, 'Park D', 80);","completion":"SELECT b.name as borough_name, p.name as park_name, COUNT(*) as park_count, SUM(p.area_size) as total_area FROM boroughs b JOIN parks p ON b.id = p.borough_id GROUP BY b.name, p.name;"}
{"prompt":"How many graduate students in the Arts program have published more than one paper? with given SQL schema CREATE TABLE students (id INT, name VARCHAR(50), gender VARCHAR(10), program VARCHAR(50), publications INT); INSERT INTO students (id, name, gender, program, publications) VALUES (1, 'Charlie', 'Non-binary', 'Arts', 3), (2, 'Dana', 'Female', 'Physics', 1), (3, 'Eli', 'Male', 'Engineering', 0);","completion":"SELECT COUNT(*) FROM students WHERE program = 'Arts' AND publications > 1;"}
{"prompt":"How many cultural heritage sites are in Japan and Spain? with given SQL schema CREATE TABLE Countries (country_id INT, name TEXT, region TEXT); CREATE TABLE Cultural_Heritage_Sites (site_id INT, country_id INT, name TEXT); INSERT INTO Countries (country_id, name, region) VALUES (1, 'Japan', 'Asia'), (2, 'Spain', 'Europe'); INSERT INTO Cultural_Heritage_Sites (site_id, country_id, name) VALUES (1, 1, 'Mount Fuji'), (2, 1, 'Himeji Castle'), (3, 2, 'Alhambra'), (4, 2, 'Sagrada Familia');","completion":"SELECT COUNT(DISTINCT country_id) FROM Cultural_Heritage_Sites WHERE country_id IN (1, 2);"}
{"prompt":"What is the total revenue generated from sustainable tourism activities in Indonesia? with given SQL schema CREATE TABLE tourism_activities(activity_id INT, name TEXT, country TEXT, revenue FLOAT); INSERT INTO tourism_activities (activity_id, name, country, revenue) VALUES (1, 'Eco-Trekking', 'Indonesia', 15000), (2, 'Cultural Festival', 'Indonesia', 20000);","completion":"SELECT SUM(revenue) FROM tourism_activities WHERE country = 'Indonesia' AND sustainable = TRUE;"}
{"prompt":"List all hotels with their total revenue from OTA partners. with given SQL schema CREATE TABLE hotel_revenue (hotel_id INT, partner_id INT, revenue FLOAT); INSERT INTO hotel_revenue (hotel_id, partner_id, revenue) VALUES (1, 1, 10000), (1, 2, 15000), (2, 1, 8000), (2, 2, 12000), (3, 1, 13000), (3, 2, 17000); CREATE TABLE hotels (id INT, name TEXT); INSERT INTO hotels (id, name) VALUES (1, 'The Grand Hotel'), (2, 'Park Lane Hotel'), (3, 'Ocean View Hotel');","completion":"SELECT h.name, SUM(hr.revenue) AS total_revenue FROM hotels h JOIN hotel_revenue hr ON h.id = hr.hotel_id GROUP BY h.name;"}
{"prompt":"What is the average number of heritage sites per region? with given SQL schema CREATE TABLE HeritageSites (id INT, region VARCHAR(255), site_name VARCHAR(255)); INSERT INTO HeritageSites (id, region, site_name) VALUES (1, 'Africa', 'Giza Pyramids'), (2, 'Asia', 'Great Wall'), (3, 'Europe', 'Colosseum'), (4, 'Africa', 'Victoria Falls'), (5, 'Asia', 'Angkor Wat');","completion":"SELECT region, AVG(ROW_NUMBER() OVER(PARTITION BY region) ) as avg_heritage_sites FROM HeritageSites;"}
{"prompt":"What is the maximum cost of projects in the 'infrastructure_development' table? with given SQL schema CREATE TABLE infrastructure_development (id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO infrastructure_development (id, project_name, location, cost) VALUES (1, 'Highway Expansion', 'City K', 35000000.00), (2, 'Transit Hub', 'Region L', 28000000.00);","completion":"SELECT MAX(cost) FROM infrastructure_development;"}
{"prompt":"What is the percentage change in the number of international tourists in 2021 compared to 2020? with given SQL schema CREATE TABLE visitor_stats (country VARCHAR(50), visitors INT, year INT); INSERT INTO visitor_stats (country, visitors, year) VALUES ('Australia', 42, 2020), ('China', 39, 2020), ('Australia', 44, 2021), ('China', 41, 2021);","completion":"SELECT year, (SUM(visitors) - LAG(SUM(visitors)) OVER (ORDER BY year)) * 100.0 \/ LAG(SUM(visitors)) OVER (ORDER BY year) as visitors_percentage_diff FROM visitor_stats GROUP BY year;"}
{"prompt":"What is the total number of cases heard in the justice_data schema's court_hearings table where the defendant is of Hispanic or Latino origin? with given SQL schema CREATE TABLE justice_data.court_hearings (id INT, case_number INT, hearing_date DATE, defendant_race VARCHAR(50));","completion":"SELECT COUNT(*) FROM justice_data.court_hearings WHERE defendant_race LIKE '%Hispanic%';"}
{"prompt":"How many whales were spotted in the North Atlantic during the summer months of 2021? with given SQL schema CREATE TABLE whale_sightings (id INT, species VARCHAR(50), location VARCHAR(50), sighting_date DATE); INSERT INTO whale_sightings (id, species, location, sighting_date) VALUES (1, 'Blue Whale', 'North Atlantic', '2021-07-15'); INSERT INTO whale_sightings (id, species, location, sighting_date) VALUES (2, 'Humpback Whale', 'North Atlantic', '2021-08-03');","completion":"SELECT COUNT(*) FROM whale_sightings WHERE species = 'Blue Whale' OR species = 'Humpback Whale' AND location = 'North Atlantic' AND sighting_date BETWEEN '2021-06-01' AND '2021-08-31';"}
{"prompt":"What are the top 3 selling menu categories? with given SQL schema CREATE TABLE orders (order_id INT, menu_category VARCHAR(255), quantity INT); INSERT INTO orders (order_id, menu_category, quantity) VALUES (1, 'Appetizers', 2), (2, 'Entrees', 3), (3, 'Desserts', 1), (4, 'Appetizers', 1), (5, 'Entrees', 4);","completion":"SELECT menu_category, SUM(quantity) as total_quantity FROM orders GROUP BY menu_category ORDER BY total_quantity DESC LIMIT 3;"}
{"prompt":"What is the average rating for 'Gluten-Free' items? with given SQL schema CREATE TABLE ratings (item_name TEXT, is_gluten_free BOOLEAN, rating INTEGER); INSERT INTO ratings (item_name, is_gluten_free, rating) VALUES ('Quinoa Salad', true, 4); INSERT INTO ratings (item_name, is_gluten_free, rating) VALUES ('Chicken Stir Fry', false, 5);","completion":"SELECT AVG(rating) FROM ratings WHERE is_gluten_free = true;"}
{"prompt":"How many high-risk assessments exist for projects in the Asia-Pacific region? with given SQL schema CREATE TABLE risk_assessments (id INT PRIMARY KEY, project_id INT, region VARCHAR(255), risk_level VARCHAR(255), assessment_date DATE); INSERT INTO risk_assessments (id, project_id, region, risk_level, assessment_date) VALUES (1, 1, 'Asia-Pacific', 'High', '2022-09-01');","completion":"SELECT COUNT(*) FROM risk_assessments WHERE region = 'Asia-Pacific' AND risk_level = 'High';"}
{"prompt":"What were the total military sales to India in 2021? with given SQL schema CREATE TABLE military_sales(id INT, country VARCHAR(50), sale_value FLOAT, sale_date DATE); INSERT INTO military_sales(id, country, sale_value, sale_date) VALUES (1, 'India', 7000000, '2021-01-01'); INSERT INTO military_sales(id, country, sale_value, sale_date) VALUES (2, 'India', 6000000, '2021-02-01');","completion":"SELECT SUM(sale_value) FROM military_sales WHERE country = 'India' AND YEAR(sale_date) = 2021;"}
{"prompt":"What is the maximum production volume of tin in Indonesia? with given SQL schema CREATE TABLE mines (id INT, name TEXT, location TEXT, product TEXT, production_volume INT); INSERT INTO mines (id, name, location, product, production_volume) VALUES (1, 'Grasberg', 'Indonesia', 'Tin', 10000);","completion":"SELECT MAX(production_volume) FROM mines WHERE location = 'Indonesia' AND product = 'Tin';"}
{"prompt":"Which mine in Australia produces the most gold? with given SQL schema CREATE TABLE gold_mines (mine_name VARCHAR(30), country VARCHAR(20), production_tons INT); INSERT INTO gold_mines (mine_name, country, production_tons) VALUES ('Mine X', 'Australia', 550), ('Mine Y', 'Australia', 650), ('Mine Z', 'Australia', 400);","completion":"SELECT mine_name, MAX(production_tons) FROM gold_mines WHERE country = 'Australia';"}
{"prompt":"List the top 5 mining operations with the highest number of employees. with given SQL schema CREATE TABLE mining_operations (id INT, name VARCHAR(50), num_employees INT);","completion":"SELECT name, num_employees FROM (SELECT name, num_employees, ROW_NUMBER() OVER (ORDER BY num_employees DESC) as rn FROM mining_operations) tmp WHERE rn <= 5;"}
{"prompt":"How many broadband customers does each regional office have? with given SQL schema CREATE TABLE broadband_subscribers (subscriber_id INT, regional_office VARCHAR(20)); INSERT INTO broadband_subscribers (subscriber_id, regional_office) VALUES (1, 'Boston'), (2, 'Boston'), (3, 'NYC'), (4, 'NYC'), (5, 'NYC');","completion":"SELECT regional_office, COUNT(*) FROM broadband_subscribers GROUP BY regional_office;"}
{"prompt":"Show the average number of streams per day for artists who have held concerts in the USA and Canada. with given SQL schema CREATE TABLE music_streaming (artist_id INT, artist_name VARCHAR(100), genre VARCHAR(50), total_streams BIGINT, stream_date DATE); CREATE TABLE concert_ticket_sales (concert_id INT, artist_id INT, concert_date DATE, venue VARCHAR(100), country VARCHAR(50));","completion":"SELECT AVG(ms.total_streams \/ COUNT(DISTINCT ms.stream_date)) AS avg_daily_streams FROM music_streaming ms INNER JOIN concert_ticket_sales cts ON ms.artist_id = cts.artist_id WHERE cts.country IN ('USA', 'Canada');"}
{"prompt":"Insert a new record for an article about media ethics published on March 1, 2022 into the 'articles' table with given SQL schema CREATE TABLE articles (article_id INT PRIMARY KEY, title VARCHAR(255), content TEXT, publication_date DATE);","completion":"INSERT INTO articles (title, content, publication_date) VALUES ('Media Ethics: A Guide for Journalists', 'An in-depth look at the ethical principles that guide journalists and the media...', '2022-03-01');"}
{"prompt":"What is the average age of users who have interacted with articles about climate change? with given SQL schema CREATE TABLE user_interactions (user_id INT, article_id INT, interaction_date DATE); INSERT INTO user_interactions (user_id, article_id, interaction_date) VALUES (1, 101, '2021-01-01'); INSERT INTO user_interactions (user_id, article_id, interaction_date) VALUES (2, 102, '2021-01-02'); CREATE TABLE users (user_id INT, age INT, gender VARCHAR(10)); INSERT INTO users (user_id, age, gender) VALUES (1, 30, 'Female'); INSERT INTO users (user_id, age, gender) VALUES (2, 45, 'Male'); CREATE TABLE articles (article_id INT, title VARCHAR(100), topic VARCHAR(50)); INSERT INTO articles (article_id, title, topic) VALUES (101, 'Climate Change Impact', 'climate_change'); INSERT INTO articles (article_id, title, topic) VALUES (102, 'Political News', 'politics');","completion":"SELECT AVG(users.age) FROM users INNER JOIN user_interactions ON users.user_id = user_interactions.user_id WHERE user_interactions.article_id IN (SELECT article_id FROM articles WHERE articles.topic = 'climate_change');"}
{"prompt":"What is the average level of satisfaction for VR games in the 'Gaming' category? with given SQL schema CREATE TABLE Games (id INT, name VARCHAR(100), category VARCHAR(50), satisfaction FLOAT);","completion":"SELECT AVG(satisfaction) FROM Games WHERE category = 'Gaming';"}
{"prompt":"Delete all records related to the 'Battle Royale' game genre in the 'games' table. with given SQL schema CREATE TABLE games (id INT, name VARCHAR(30), genre VARCHAR(20)); INSERT INTO games (id, name, genre) VALUES (1, 'Fortnite', 'Battle Royale'), (2, 'PUBG', 'Battle Royale'), (3, 'Overwatch', 'FPS'), (4, 'CS:GO', 'FPS');","completion":"DELETE FROM games WHERE genre = 'Battle Royale';"}
{"prompt":"How many players from Africa have designed adventure games and have more than 2,000 players? with given SQL schema CREATE TABLE game_designers (designer_id INT, country VARCHAR(50), genre VARCHAR(10), players INT);","completion":"SELECT COUNT(*) FROM game_designers WHERE country = 'Africa' AND genre = 'adventure' AND players > 2000;"}
{"prompt":"What is the average number of sustainable urban properties in each city? with given SQL schema CREATE TABLE sustainable_cities (id INT, city VARCHAR(20), properties INT); INSERT INTO sustainable_cities (id, city, properties) VALUES (1, 'Buenos Aires', 500), (2, 'Rio de Janeiro', 300), (3, 'Santiago', 400), (4, 'Bogota', 600);","completion":"SELECT city, AVG(properties) FROM sustainable_cities GROUP BY city;"}
{"prompt":"List all solar projects in the 'carbon_offset' schema. with given SQL schema CREATE SCHEMA carbon_offset; CREATE TABLE solar_projects (id INT, name VARCHAR(100), location VARCHAR(100)); INSERT INTO solar_projects (id, name, location) VALUES (1, 'Solar Project C', 'California'), (2, 'Solar Project D', 'Nevada');","completion":"SELECT * FROM carbon_offset.solar_projects;"}
{"prompt":"Which carbon offset programs have a budget greater than $5 million and less than $15 million in the carbon_offset schema? with given SQL schema CREATE TABLE carbon_offset_programs (id INT, name VARCHAR(50), budget FLOAT, start_date DATE, end_date DATE); INSERT INTO carbon_offset_programs (id, name, budget, start_date, end_date) VALUES (1, 'Program 1', 12000000, '2020-01-01', '2025-12-31'); INSERT INTO carbon_offset_programs (id, name, budget, start_date, end_date) VALUES (2, 'Program 2', 9000000, '2020-01-01', '2024-12-31'); INSERT INTO carbon_offset_programs (id, name, budget, start_date, end_date) VALUES (3, 'Program 3', 7000000, '2020-01-01', '2024-12-31');","completion":"SELECT name FROM carbon_offset.carbon_offset_programs WHERE budget > 5000000 AND budget < 15000000;"}
{"prompt":"Insert a new food safety inspection record for 'Burrito Bar' restaurant. with given SQL schema CREATE TABLE food_safety_inspections (restaurant_name VARCHAR(255), inspection_date DATE, score INT); INSERT INTO food_safety_inspections (restaurant_name, inspection_date, score) VALUES ('Pizza Palace', '2022-01-01', 85);","completion":"INSERT INTO food_safety_inspections (restaurant_name, inspection_date, score) VALUES ('Burrito Bar', '2022-04-01', 88);"}
{"prompt":"What was the total revenue for 'Bistro A' in the first quarter of 2022? with given SQL schema CREATE TABLE Pizzeria (Date DATE, Revenue INT); INSERT INTO Pizzeria (Date, Revenue) VALUES ('2022-01-01', 500), ('2022-01-02', 700), ('2022-01-03', 800), ('2022-02-01', 500), ('2022-02-02', 700), ('2022-02-03', 800), ('2022-03-01', 500), ('2022-03-02', 700), ('2022-03-03', 800);","completion":"SELECT SUM(Revenue) FROM Pizzeria WHERE Date BETWEEN '2022-01-01' AND '2022-03-31' AND Date LIKE '2022-01%' OR Date LIKE '2022-02%' OR Date LIKE '2022-03%' AND Restaurant = 'Bistro A';"}
{"prompt":"What was the total revenue for each restaurant in the month of April 2022? with given SQL schema CREATE TABLE restaurant_sales (restaurant_id INT, sale_date DATE, revenue DECIMAL(10,2)); INSERT INTO restaurant_sales (restaurant_id, sale_date, revenue) VALUES (1, '2022-04-01', 5000.00), (1, '2022-04-02', 6000.00), (2, '2022-04-01', 8000.00), (3, '2022-04-01', 9000.00), (3, '2022-04-02', 10000.00); CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255)); INSERT INTO restaurants (restaurant_id, name) VALUES (1, 'Restaurant A'), (2, 'Restaurant B'), (3, 'Restaurant C');","completion":"SELECT r.name, SUM(rs.revenue) FROM restaurant_sales rs JOIN restaurants r ON rs.restaurant_id = r.restaurant_id WHERE EXTRACT(MONTH FROM rs.sale_date) = 4 AND EXTRACT(YEAR FROM rs.sale_date) = 2022 GROUP BY r.name;"}
{"prompt":"Which companies have produced spacecrafts that have been piloted by astronauts from more than one country? with given SQL schema CREATE TABLE SpacecraftManufacturing (id INT, company VARCHAR(255), spacecraft VARCHAR(255)); CREATE TABLE SpacecraftPilots (id INT, astronaut_id INT, spacecraft VARCHAR(255), country VARCHAR(255));","completion":"SELECT DISTINCT SpacecraftManufacturing.company FROM SpacecraftManufacturing INNER JOIN SpacecraftPilots ON SpacecraftManufacturing.spacecraft = SpacecraftPilots.spacecraft GROUP BY SpacecraftManufacturing.company HAVING COUNT(DISTINCT SpacecraftPilots.country) > 1;"}
{"prompt":"What are the total ticket sales by month for a specific team? with given SQL schema CREATE TABLE ticket_sales (sale_id INT, team_id INT, sale_date DATE, sales INT); INSERT INTO ticket_sales (sale_id, team_id, sale_date, sales) VALUES (1, 1, '2022-01-01', 10000), (2, 1, '2022-02-01', 12000), (3, 1, '2022-03-01', 15000);","completion":"SELECT EXTRACT(MONTH FROM sale_date) as month, SUM(sales) as total_sales FROM ticket_sales WHERE team_id = 1 GROUP BY EXTRACT(MONTH FROM sale_date);"}
{"prompt":"What is the percentage of ticket sales in the first quarter for each team, ranked from highest to lowest? with given SQL schema CREATE TABLE Teams (TeamID INT, TeamName VARCHAR(50)); CREATE TABLE TicketSales (TicketID INT, TeamID INT, SaleDate DATE); INSERT INTO Teams (TeamID, TeamName) VALUES (1, 'TeamA'), (2, 'TeamB'); INSERT INTO TicketSales (TicketID, TeamID, SaleDate) VALUES (1, 1, '2023-01-01'), (2, 1, '2023-04-03'), (3, 2, '2023-03-02'), (4, 2, '2023-01-04');","completion":"SELECT TeamName, ROUND(COUNT(*) * 100.0 \/ (SELECT COUNT(*) FROM TicketSales WHERE SaleDate BETWEEN '2023-01-01' AND '2023-03-31') * 100.0, 2) AS Percentage FROM TicketSales JOIN Teams ON TicketSales.TeamID = Teams.TeamID WHERE SaleDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY TeamName ORDER BY Percentage DESC;"}
{"prompt":"What is the total revenue generated from merchandise sales for the 'Milwaukee Bucks' in the 'Central' division for the year 2021? Assume the 'merchandise_sales' table has columns 'team_name', 'sale_year', 'revenue'. with given SQL schema CREATE TABLE TEAMS (team_name VARCHAR(50), division VARCHAR(50)); INSERT INTO TEAMS (team_name, division) VALUES ('Milwaukee Bucks', 'Central'); CREATE TABLE merchandise_sales (team_name VARCHAR(50), sale_year INT, revenue DECIMAL(10,2)); INSERT INTO merchandise_sales (team_name, sale_year, revenue) VALUES ('Milwaukee Bucks', 2021, 80000.00);","completion":"SELECT SUM(revenue) FROM merchandise_sales WHERE team_name = 'Milwaukee Bucks' AND sale_year = 2021 AND division = (SELECT division FROM TEAMS WHERE team_name = 'Milwaukee Bucks');"}
{"prompt":"What are the top 5 most common security incidents in the financial sector in the last year? with given SQL schema CREATE TABLE incidents (incident_id INT, incident_type VARCHAR(255), sector VARCHAR(255), incident_date DATE); INSERT INTO incidents (incident_id, incident_type, sector, incident_date) VALUES (1, 'Phishing', 'Financial', '2021-06-01'), (2, 'Malware', 'Financial', '2021-06-05'), (3, 'Ransomware', 'Healthcare', '2021-06-10'), (4, 'DDoS', 'Financial', '2021-06-15'), (5, 'Insider Threat', 'Financial', '2021-06-20'), (6, 'Data Breach', 'Retail', '2021-06-25'), (7, 'Phishing', 'Financial', '2021-06-30');","completion":"SELECT incident_type, COUNT(*) as incident_count FROM incidents WHERE sector = 'Financial' GROUP BY incident_type ORDER BY incident_count DESC LIMIT 5;"}
{"prompt":"What is the average claim amount for policyholders with a car model of 'Corolla'? with given SQL schema CREATE TABLE Auto (policyholder_id INT, car_model VARCHAR(20)); CREATE TABLE Claims (claim_id INT, policyholder_id INT, amount FLOAT);","completion":"SELECT AVG(amount) FROM Claims INNER JOIN Auto ON Claims.policyholder_id = Auto.policyholder_id WHERE car_model = 'Corolla';"}
{"prompt":"What is the policy term length for the policyholder with the highest risk assessment score? with given SQL schema CREATE TABLE policies (id INT, policyholder_id INT, policy_term_length INT, risk_assessment_score INT); INSERT INTO policies (id, policyholder_id, policy_term_length, risk_assessment_score) VALUES (1, 1, 36, 850), (2, 2, 24, 600), (3, 3, 60, 725), (4, 4, 12, 900), (5, 5, 48, 700);","completion":"SELECT policy_term_length FROM policies WHERE risk_assessment_score = (SELECT MAX(risk_assessment_score) FROM policies);"}
{"prompt":"How many workplace safety violations were recorded in the manufacturing sector last year? with given SQL schema CREATE TABLE safety_violations (violation_id INT, sector VARCHAR(50), violation_date DATE); INSERT INTO safety_violations (violation_id, sector, violation_date) VALUES (1, 'manufacturing', '2021-01-01'), (2, 'manufacturing', '2021-02-01'), (3, 'construction', '2021-03-01');","completion":"SELECT COUNT(*) FROM safety_violations WHERE sector = 'manufacturing' AND YEAR(violation_date) = 2021;"}
{"prompt":"Delete records in the cargo table where the cargo_type is 'Chemicals' and weight is less than 2000 with given SQL schema CREATE TABLE cargo (cargo_id INT, vessel_id INT, cargo_type VARCHAR(20), weight INT);","completion":"DELETE FROM cargo WHERE cargo_type = 'Chemicals' AND weight < 2000;"}
{"prompt":"List the number of users who have completed a workout of a specific type (e.g. Running) and have a membership status of 'Active'. with given SQL schema CREATE TABLE workouts (id INT, user_id INT, workout_type VARCHAR(20)); CREATE TABLE members (id INT, name VARCHAR(50), membership_status VARCHAR(20), state VARCHAR(20)); INSERT INTO workouts (id, user_id, workout_type) VALUES (1, 1, 'Running'), (2, 1, 'Cycling'), (3, 2, 'Running'), (4, 3, 'Cycling'), (5, 3, 'Swimming'), (6, 4, 'Running'), (7, 4, 'Swimming'); INSERT INTO members (id, name, membership_status, state) VALUES (1, 'John Doe', 'Active', 'Texas'), (2, 'Jane Doe', 'Inactive', 'California'), (3, 'Bob Smith', 'Active', 'Texas'), (4, 'Alice Johnson', 'Active', 'California');","completion":"SELECT COUNT(*) FROM (SELECT user_id FROM workouts WHERE workout_type = 'Running' INTERSECT SELECT id FROM members WHERE membership_status = 'Active') AS user_set;"}
{"prompt":"Top 3 most expensive creative AI projects. with given SQL schema CREATE TABLE creative_ai_projects (id INT PRIMARY KEY, project_name VARCHAR(50), cost FLOAT); INSERT INTO creative_ai_projects (id, project_name, cost) VALUES (1, 'AI-generated Art', 75000.0), (2, 'AI-written Poetry', 32000.0), (3, 'AI-composed Music', 48000.0), (4, 'AI-designed Fashion', 51000.0), (5, 'AI-generated Architecture', 80000.0);","completion":"SELECT project_name, cost FROM creative_ai_projects ORDER BY cost DESC LIMIT 3;"}
{"prompt":"What is the average amount of funding for women-led agricultural innovation projects in Nigeria, partitioned by the year the project was funded? with given SQL schema CREATE TABLE AgriculturalInnovations (ProjectID INT, ProjectName VARCHAR(255), ProjectLocation VARCHAR(255), FundingAmount DECIMAL(10,2), LeaderGender VARCHAR(10)); INSERT INTO AgriculturalInnovations (ProjectID, ProjectName, ProjectLocation, FundingAmount, LeaderGender) VALUES (1, 'AgriProject1', 'Nigeria', 50000, 'Female');","completion":"SELECT AVG(FundingAmount) as AvgFunding, EXTRACT(YEAR FROM ProjectStartDate) as YearFromDate FROM AgriculturalInnovations WHERE ProjectLocation = 'Nigeria' AND LeaderGender = 'Female' GROUP BY YearFromDate;"}
{"prompt":"What was the total number of rural infrastructure projects completed in Southeast Asia in 2018? with given SQL schema CREATE TABLE rural_infrastructure (country VARCHAR(50), year INT, project VARCHAR(50)); INSERT INTO rural_infrastructure (country, year, project) VALUES ('Indonesia', 2018, 'Road Construction'), ('Thailand', 2018, 'Bridge Building'), ('Philippines', 2018, 'Electrification'), ('Vietnam', 2018, 'Water Supply'), ('Malaysia', 2018, 'School Construction');","completion":"SELECT COUNT(DISTINCT project) as total_projects FROM rural_infrastructure WHERE country IN ('Indonesia', 'Thailand', 'Philippines', 'Vietnam', 'Malaysia') AND year = 2018;"}
{"prompt":"What is the total cost of all space missions by mission type and launch year? with given SQL schema CREATE TABLE SpaceMissions (MissionID INT, MissionType VARCHAR(50), LaunchYear INT, Cost INT);","completion":"SELECT MissionType, LaunchYear, SUM(Cost) AS TotalCost FROM SpaceMissions GROUP BY MissionType, LaunchYear;"}
{"prompt":"Calculate the average establishment date for feed manufacturers from Asia. with given SQL schema CREATE TABLE continent_map (id INT, country VARCHAR(255), continent VARCHAR(255)); INSERT INTO continent_map (id, country, continent) VALUES (1, 'China', 'Asia'), (2, 'India', 'Asia'), (3, 'Indonesia', 'Asia'), (4, 'Japan', 'Asia'), (5, 'Vietnam', 'Asia'); CREATE TABLE feed_manufacturers_continent (manufacturer_id INT, continent VARCHAR(255)); INSERT INTO feed_manufacturers_continent (manufacturer_id, continent) SELECT id, continent FROM feed_manufacturers JOIN continent_map ON country = country;","completion":"SELECT AVG(establishment_date) FROM feed_manufacturers_continent WHERE continent = 'Asia';"}
{"prompt":"Find the total revenue of movies produced by Blue Studios. with given SQL schema CREATE TABLE studio (studio_id INT, name VARCHAR(100)); INSERT INTO studio (studio_id, name) VALUES (1, 'Blue Studios'); CREATE TABLE movie (movie_id INT, title VARCHAR(100), studio_id INT, revenue INT);","completion":"SELECT SUM(movie.revenue) FROM movie WHERE movie.studio_id = 1;"}
{"prompt":"How many construction labor hours were spent on projects in the year 2018? with given SQL schema CREATE TABLE labor_hours (labor_hour_id INT, project_id INT, city VARCHAR(20), hours INT, year INT); INSERT INTO labor_hours (labor_hour_id, project_id, city, hours, year) VALUES (1, 201, 'Dallas', 100, 2020), (2, 201, 'Dallas', 200, 2019), (3, 202, 'Houston', 150, 2020), (6, 501, 'Miami', 250, 2018);","completion":"SELECT SUM(hours) FROM labor_hours WHERE year = 2018;"}
{"prompt":"How many cases were handled by attorneys in the 'Los Angeles' office? with given SQL schema CREATE TABLE offices (office_id INT, office_name VARCHAR(20), city VARCHAR(20), state VARCHAR(20)); INSERT INTO offices (office_id, office_name, city, state) VALUES (1, 'Boston', 'Boston', 'MA'), (2, 'New York', 'New York', 'NY'), (3, 'Los Angeles', 'Los Angeles', 'CA'); CREATE TABLE attorneys (attorney_id INT, office_id INT); INSERT INTO attorneys (attorney_id, office_id) VALUES (1, 1), (2, 2), (3, 3); CREATE TABLE cases (case_id INT, attorney_id INT); INSERT INTO cases (case_id, attorney_id) VALUES (1, 1), (2, 2), (3, 3);","completion":"SELECT COUNT(*) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.attorney_id JOIN offices ON attorneys.office_id = offices.office_id WHERE offices.city = 'Los Angeles';"}
{"prompt":"How many cases were handled by the attorney with the highest total billing amount? with given SQL schema CREATE TABLE attorneys (id INT, name VARCHAR(20)); INSERT INTO attorneys (id, name) VALUES (1, 'Smith'), (2, 'Garcia'), (3, 'Kim'); CREATE TABLE cases (id INT, attorney_id INT, case_type VARCHAR(10), billing_amount INT);","completion":"SELECT COUNT(*) FROM (SELECT attorney_id, SUM(billing_amount) AS total_billing FROM cases GROUP BY attorney_id ORDER BY total_billing DESC LIMIT 1) AS top_attorney;"}
{"prompt":"Insert a new case for attorney 'Laura Johnson' with case ID 4, open date '2022-06-01', and billing amount $6000. with given SQL schema CREATE TABLE attorneys (attorney_id INT, last_name VARCHAR(20), first_name VARCHAR(20)); INSERT INTO attorneys (attorney_id, last_name, first_name) VALUES (1, 'Garcia', 'Jose'), (2, 'Johnson', 'Laura'); CREATE TABLE cases (case_id INT, attorney_id INT, open_date DATE, billing_amount INT);","completion":"INSERT INTO cases (case_id, attorney_id, open_date, billing_amount) VALUES (4, (SELECT attorney_id FROM attorneys WHERE last_name = 'Johnson' AND first_name = 'Laura'), '2022-06-01', 6000);"}
{"prompt":"Delete records in the safety_protocols table where the chemical_name is LMN. with given SQL schema CREATE TABLE safety_protocols (id INT PRIMARY KEY, chemical_name VARCHAR(100), protocol VARCHAR(500)); INSERT INTO safety_protocols (id, chemical_name, protocol) VALUES (1, 'XYZ', 'Store in a cool, dry place. Use protective gloves and eyewear.'), (2, 'ABC', 'Keep away from heat and open flames.'), (3, 'LMN', 'Use in a well-ventilated area.');","completion":"DELETE FROM safety_protocols WHERE chemical_name = 'LMN';"}
{"prompt":"Which chemical compounds were used in the production of each product category, and in what quantities? with given SQL schema CREATE TABLE Product(Id INT, Category VARCHAR(50)); CREATE TABLE ChemicalUsage(Id INT, ProductId INT, ChemicalId INT, QuantityUsed INT); CREATE TABLE Chemical(Id INT, Name VARCHAR(50));","completion":"SELECT p.Category, c.Name AS ChemicalName, SUM(cu.QuantityUsed) AS TotalQuantityUsed FROM ChemicalUsage cu JOIN Product p ON cu.ProductId = p.Id JOIN Chemical c ON cu.ChemicalId = c.Id GROUP BY p.Category, c.Name;"}
{"prompt":"What is the total amount of climate finance dedicated to afforestation projects in Asia before 2015? with given SQL schema CREATE TABLE climate_finance_projects (id INT, region VARCHAR(255), year INT, sector VARCHAR(255), amount FLOAT); INSERT INTO climate_finance_projects (id, region, year, sector, amount) VALUES (1, 'Asia', 2008, 'afforestation', 2000000);","completion":"SELECT SUM(amount) FROM climate_finance_projects WHERE region = 'Asia' AND sector = 'afforestation' AND year < 2015;"}
{"prompt":"What was the total funding amount for startups founded by veterans in Japan? with given SQL schema CREATE TABLE company (id INT, name TEXT, country TEXT, founding_date DATE, founder_veteran BOOLEAN); INSERT INTO company (id, name, country, founding_date, founder_veteran) VALUES (1, 'Pi Corp', 'Japan', '2016-01-01', TRUE); INSERT INTO company (id, name, country, founding_date, founder_veteran) VALUES (2, 'Rho Inc', 'Japan', '2017-01-01', FALSE);","completion":"SELECT SUM(funding_amount) FROM funding INNER JOIN company ON funding.company_id = company.id WHERE company.country = 'Japan' AND company.founder_veteran = TRUE;"}
{"prompt":"List the top 3 industries with the highest average total funding per company, excluding companies with less than $1M in total funding. with given SQL schema CREATE TABLE Companies (id INT, name TEXT, industry TEXT, total_funding FLOAT, num_investments INT); INSERT INTO Companies (id, name, industry, total_funding, num_investments) VALUES (1, 'Acme Inc', 'Software', 2500000, 2), (2, 'Beta Corp', 'Software', 5000000, 1), (3, 'Gamma Startup', 'Hardware', 1000000, 3), (4, 'Delta LLC', 'Hardware', 2000000, 1), (5, 'Epsilon Ltd', 'Biotech', 3000000, 2), (6, 'Zeta PLC', 'Biotech', 500000, 1);","completion":"SELECT industry, AVG(total_funding) AS industry_avg_funding FROM Companies WHERE total_funding >= 1000000 GROUP BY industry ORDER BY industry_avg_funding DESC LIMIT 3;"}
{"prompt":"What is the average temperature in Brazil's Northeast region in January? with given SQL schema CREATE TABLE weather (country VARCHAR(255), region VARCHAR(255), month INT, temperature FLOAT); INSERT INTO weather (country, region, month, temperature) VALUES ('Brazil', 'Northeast', 1, 28.3), ('Brazil', 'Northeast', 1, 28.7), ('Brazil', 'Northeast', 1, 27.9), ('Brazil', 'Northeast', 1, 28.4);","completion":"SELECT AVG(temperature) FROM weather WHERE country = 'Brazil' AND region = 'Northeast' AND month = 1;"}
{"prompt":"What is the total number of indigenous food systems in Australia? with given SQL schema CREATE TABLE indigenous_food_systems (system_id INT, name TEXT, location TEXT, type TEXT, community TEXT, country TEXT); INSERT INTO indigenous_food_systems (system_id, name, location, type, community, country) VALUES (1, 'Bush Tucker Project', ' rural area', 'gardening', 'Aboriginal community', 'Australia');","completion":"SELECT COUNT(*) FROM indigenous_food_systems WHERE country = 'Australia';"}
{"prompt":"What is the total number of digital assets issued by companies based in the United States, ordered by the date of issuance? with given SQL schema CREATE TABLE digital_assets (id INT, name VARCHAR(100), issuer_country VARCHAR(50), issue_date DATE); INSERT INTO digital_assets (id, name, issuer_country, issue_date) VALUES (1, 'CryptoCoin', 'USA', '2018-01-01'); INSERT INTO digital_assets (id, name, issuer_country, issue_date) VALUES (2, 'BitAsset', 'USA', '2019-03-15');","completion":"SELECT SUM(id) OVER (ORDER BY issue_date) as total_assets_issued, name, issuer_country, issue_date FROM digital_assets WHERE issuer_country = 'USA' ORDER BY issue_date;"}
{"prompt":"Increase the price of all makeup products from the United States by 5%. with given SQL schema CREATE TABLE products (id INT, name TEXT, price DECIMAL, country TEXT);","completion":"UPDATE products SET price = price * 1.05 WHERE country = 'United States' AND product_type = 'makeup';"}
{"prompt":"What is the total sales volume of natural hair care products sold in the US? with given SQL schema CREATE TABLE hair_care_sales(product_name TEXT, price DECIMAL(5,2), is_natural BOOLEAN, country TEXT); INSERT INTO hair_care_sales VALUES ('Shampoo', 12.99, true, 'USA'); INSERT INTO hair_care_sales VALUES ('Conditioner', 14.99, true, 'USA'); INSERT INTO hair_care_sales VALUES ('Styling Cream', 8.99, false, 'USA');","completion":"SELECT SUM(sales_volume) FROM (SELECT product_name, sales_volume FROM sales_volume JOIN hair_care_sales ON sales_volume.product_name = hair_care_sales.product_name WHERE hair_care_sales.is_natural = true AND hair_care_sales.country = 'USA') AS subquery;"}
{"prompt":"What is the most common type of crime in each region? with given SQL schema CREATE TABLE regions (region_id INT, region_name VARCHAR(255));CREATE TABLE districts (district_id INT, district_name VARCHAR(255), region_id INT);CREATE TABLE crimes (crime_id INT, district_id INT, crime_type VARCHAR(255), crime_date DATE);","completion":"SELECT r.region_name, c.crime_type, COUNT(*) AS count FROM regions r JOIN districts d ON r.region_id = d.region_id JOIN crimes c ON d.district_id = c.district_id GROUP BY r.region_name, c.crime_type ORDER BY count DESC;"}
{"prompt":"List the top 3 countries with the most veteran employment in the IT industry with given SQL schema CREATE TABLE veteran_employment (employee_id INT, industry VARCHAR(255), salary DECIMAL(10,2), state VARCHAR(2), country VARCHAR(255)); CREATE TABLE countries (country_id INT, country VARCHAR(255));","completion":"SELECT country, COUNT(*) as num_veterans FROM veteran_employment JOIN countries ON veteran_employment.country = countries.country WHERE industry = 'IT' GROUP BY country ORDER BY num_veterans DESC LIMIT 3;"}
{"prompt":"Update the 'troops' value for 'Afghanistan' in the year 2005 to 850 in the 'peacekeeping_operations' table with given SQL schema CREATE TABLE peacekeeping_operations (id INT PRIMARY KEY, country VARCHAR(50), year INT, troops INT, cost FLOAT);","completion":"WITH cte AS (UPDATE peacekeeping_operations SET troops = 850 WHERE country = 'Afghanistan' AND year = 2005 RETURNING *) INSERT INTO peacekeeping_operations SELECT * FROM cte;"}
{"prompt":"Which are the top 5 ports with the highest cargo weight handled in 2021? with given SQL schema CREATE TABLE port (port_id INT, port_name VARCHAR(50), country VARCHAR(50)); INSERT INTO port VALUES (1, 'Port of Shanghai', 'China'); INSERT INTO port VALUES (2, 'Port of Singapore', 'Singapore'); CREATE TABLE cargo (cargo_id INT, port_id INT, cargo_weight INT, handling_date DATE); INSERT INTO cargo VALUES (1, 1, 50000, '2021-01-01');","completion":"SELECT p.port_name, SUM(c.cargo_weight) as total_weight FROM port p JOIN cargo c ON p.port_id = c.port_id WHERE handling_date >= '2021-01-01' AND handling_date < '2022-01-01' GROUP BY p.port_name ORDER BY total_weight DESC LIMIT 5;"}
{"prompt":"Which excavation sites have over 2000 artifacts? with given SQL schema CREATE TABLE Excavation_Sites (Site_ID INT, Site_Name TEXT, Country TEXT, Number_of_Artifacts INT);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (1, 'Pompeii', 'Italy', 10000);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (2, 'Tutankhamun', 'Egypt', 5000);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (3, 'Machu Picchu', 'Peru', 3000);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (4, 'Angkor Wat', 'Cambodia', 2500);INSERT INTO Excavation_Sites (Site_ID, Site_Name, Country, Number_of_Artifacts) VALUES (5, 'Teotihuacan', 'Mexico', 2001);","completion":"SELECT Site_ID, Site_Name, Number_of_Artifacts FROM Excavation_Sites WHERE Number_of_Artifacts > 2000;"}
{"prompt":"How many employees have completed compliance training by quarter? with given SQL schema CREATE TABLE training_records (id INT, employee_id INT, training_type VARCHAR(255), completion_date DATE); INSERT INTO training_records (id, employee_id, training_type, completion_date) VALUES (1, 1, 'Diversity and Inclusion', '2022-02-01'), (2, 2, 'Sexual Harassment Prevention', '2022-03-15'), (3, 3, 'Compliance', '2022-01-05'), (4, 4, 'Sexual Harassment Prevention', '2022-04-30'), (5, 5, 'Compliance', '2022-03-01');","completion":"SELECT QUARTER(completion_date) as completion_quarter, COUNT(*) as num_completed FROM training_records WHERE training_type = 'Compliance' AND completion_date IS NOT NULL GROUP BY completion_quarter;"}
{"prompt":"Who has the most Grand Slam titles in tennis? with given SQL schema CREATE TABLE tennis_players (player_id INT, name VARCHAR(50), country VARCHAR(50), grand_slam_titles INT); INSERT INTO tennis_players (player_id, name, country, grand_slam_titles) VALUES (1, 'Roger Federer', 'Switzerland', 20); INSERT INTO tennis_players (player_id, name, country, grand_slam_titles) VALUES (2, 'Serena Williams', 'United States', 23);","completion":"SELECT name FROM tennis_players WHERE grand_slam_titles = (SELECT MAX(grand_slam_titles) FROM tennis_players);"}
{"prompt":"Calculate the percentage of Shariah-compliant investments held by each investor in the top 5 countries with the highest percentage? with given SQL schema CREATE TABLE investors (investor_id INT, investor_name TEXT, country TEXT); INSERT INTO investors (investor_id, investor_name, country) VALUES (1, 'Al Thani', 'Qatar'), (2, 'Saudi Investment Group', 'Saudi Arabia'), (3, 'Temasek Holdings', 'Singapore'); CREATE TABLE investments (investment_id INT, investor_id INT, investment_type TEXT, investment_value DECIMAL, is_shariah_compliant BOOLEAN); INSERT INTO investments (investment_id, investor_id, investment_type, investment_value, is_shariah_compliant) VALUES (1, 1, 'Real Estate', 15000000, true), (2, 2, 'Stocks', 20000000, false);","completion":"SELECT investor_name, ROUND((SUM(CASE WHEN is_shariah_compliant THEN investment_value ELSE 0 END) \/ SUM(investment_value)) * 100, 2) AS percentage FROM investments JOIN investors ON investments.investor_id = investors.investor_id GROUP BY investor_name ORDER BY percentage DESC LIMIT 5;"}
{"prompt":"Find the total number of unique donors from the year 2020 who have never donated again? with given SQL schema CREATE TABLE Donors (id INT, donor_name VARCHAR(255), first_donation_date DATE, last_donation_date DATE); INSERT INTO Donors (id, donor_name, first_donation_date, last_donation_date) VALUES (1, 'John Doe', '2020-01-01', '2020-12-31'), (2, 'Jane Smith', '2020-02-01', '2021-01-01'), (3, 'Alice Johnson', '2020-03-01', '2020-03-31');","completion":"SELECT COUNT(DISTINCT donor_name) as total_unique_donors FROM Donors WHERE first_donation_date >= '2020-01-01' AND last_donation_date < '2021-01-01' AND NOT EXISTS (SELECT 1 FROM Donors d2 WHERE d2.donor_name = Donors.donor_name AND d2.last_donation_date > '2020-12-31');"}
{"prompt":"What is the minimum donation amount for each program? with given SQL schema CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); CREATE TABLE Donations (DonationID INT, DonationAmount NUMERIC, ProgramID INT);","completion":"SELECT Programs.ProgramName, MIN(Donations.DonationAmount) FROM Programs JOIN Donations ON Programs.ProgramID = Donations.ProgramID GROUP BY Programs.ProgramName;"}
{"prompt":"Show the capacity of all warehouses located in California with given SQL schema CREATE TABLE warehouse (id INT, city VARCHAR(20), capacity INT); INSERT INTO warehouse (id, city, capacity) VALUES (1, 'Chicago', 1000), (2, 'Houston', 1500), (3, 'Miami', 800), (4, 'Los Angeles', 1200), (5, 'San Francisco', 1800);","completion":"SELECT capacity FROM warehouse WHERE city IN ('Los Angeles', 'San Francisco');"}
{"prompt":"Find the average investment amount in biotech startups for the year 2019. with given SQL schema CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.investments (id INT, startup_id INT, amount DECIMAL(10,2), investment_year INT); INSERT INTO biotech.investments (id, startup_id, amount, investment_year) VALUES (1, 1, 500000, 2020), (2, 2, 300000, 2019), (3, 1, 750000, 2020), (4, 4, 250000, 2019);","completion":"SELECT AVG(amount) FROM biotech.investments WHERE investment_year = 2019;"}
{"prompt":"Find the initiative names with type 'Education' and their costs? with given SQL schema CREATE TABLE Initiatives (initiative_id INT, initiative_name VARCHAR(50), initiative_cost INT, initiative_type VARCHAR(20));","completion":"SELECT initiative_name, initiative_cost FROM Initiatives WHERE initiative_type = 'Education';"}
{"prompt":"Determine the number of female and male students in the School of Engineering, and calculate the percentage of each gender in the school, rounded to two decimal places. with given SQL schema CREATE TABLE StudentDemographics (id INT, name VARCHAR(255), department VARCHAR(255), gender VARCHAR(10));","completion":"SELECT department, gender, COUNT(*) as count, ROUND(COUNT(*) * 100.0 \/ SUM(COUNT(*)) OVER (PARTITION BY department), 2) as percentage FROM StudentDemographics WHERE department LIKE 'Engineering%' GROUP BY department, gender;"}
{"prompt":"What is the percentage of female faculty members in each department? with given SQL schema CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50), gender VARCHAR(10)); INSERT INTO faculty VALUES (1, 'Alice', 'Computer Science', 'Female'); INSERT INTO faculty VALUES (2, 'Bob', 'Physics', 'Male'); INSERT INTO faculty VALUES (3, 'Eve', 'Computer Science', 'Female'); CREATE TABLE departments (id INT, name VARCHAR(50)); INSERT INTO departments VALUES (1, 'Computer Science'); INSERT INTO departments VALUES (2, 'Physics');","completion":"SELECT departments.name, COUNT(faculty.id), COUNT(CASE WHEN faculty.gender = 'Female' THEN 1 END)\/COUNT(faculty.id)*100 FROM faculty JOIN departments ON faculty.department = departments.name GROUP BY departments.name;"}
{"prompt":"What is the total installed capacity of renewable energy projects in the United States? with given SQL schema CREATE TABLE RenewableEnergyProjects (project_id INT, project_name VARCHAR(255), country VARCHAR(255), capacity FLOAT, technology VARCHAR(255));","completion":"SELECT SUM(capacity) FROM RenewableEnergyProjects WHERE country = 'United States';"}
{"prompt":"What is the count of community health workers who speak Spanish, by job title? with given SQL schema CREATE TABLE CommunityHealthWorkers (CHW_ID INT, Name VARCHAR(50), Job_Title VARCHAR(50), Language VARCHAR(50)); INSERT INTO CommunityHealthWorkers (CHW_ID, Name, Job_Title, Language) VALUES (1, 'Ana', 'Community Health Worker', 'Spanish'); INSERT INTO CommunityHealthWorkers (CHW_ID, Name, Job_Title, Language) VALUES (2, 'Carlos', 'Senior Community Health Worker', 'Spanish');","completion":"SELECT Job_Title, COUNT(*) FROM CommunityHealthWorkers WHERE Language = 'Spanish' GROUP BY Job_Title;"}
{"prompt":"What are the average energy consumption and carbon emissions per tourist for each country? with given SQL schema CREATE TABLE energy_consumption (country VARCHAR(50), tourists INT, energy_consumption FLOAT); INSERT INTO energy_consumption (country, tourists, energy_consumption) VALUES ('Canada', 10000, 5000000), ('Mexico', 12000, 4500000), ('France', 15000, 4000000); CREATE TABLE carbon_emissions (country VARCHAR(50), tourists INT, emissions FLOAT); INSERT INTO carbon_emissions (country, tourists, emissions) VALUES ('Canada', 10000, 1200000), ('Mexico', 12000, 1100000), ('France', 15000, 900000);","completion":"SELECT e.country, AVG(e.energy_consumption \/ t.tourists) AS avg_energy_consumption, AVG(c.emissions \/ t.tourists) AS avg_carbon_emissions FROM energy_consumption e JOIN carbon_emissions c ON e.country = c.country JOIN (SELECT country, SUM(tourists) AS tourists FROM (SELECT country, tourists FROM energy_consumption UNION ALL SELECT country, tourists FROM carbon_emissions) combined GROUP BY country) t ON e.country = t.country GROUP BY e.country;"}
{"prompt":"What is the average rating of eco-friendly hotels in France? with given SQL schema CREATE TABLE eco_hotels(hotel_id INT, hotel_name TEXT, country TEXT, rating FLOAT); INSERT INTO eco_hotels(hotel_id, hotel_name, country, rating) VALUES (1, 'Hotel Eco Ville', 'France', 4.2), (2, 'Eco Chateau', 'France', 4.5), (3, 'Green Provence Hotel', 'France', 4.7);","completion":"SELECT AVG(rating) FROM eco_hotels WHERE country = 'France';"}
{"prompt":"What's the name and birthplace of the artist with the most works in the Post-Impressionism genre? with given SQL schema CREATE TABLE Artists (ArtistID INT, Name TEXT, Birthplace TEXT);CREATE TABLE Artworks (ArtworkID INT, Title TEXT, Genre TEXT, ArtistID INT); INSERT INTO Artists (ArtistID, Name, Birthplace) VALUES (1, 'Vincent van Gogh', 'Netherlands'); INSERT INTO Artworks (ArtworkID, Title, Genre, ArtistID) VALUES (1, 'Starry Night', 'Post-Impressionism', 1);","completion":"SELECT Artists.Name, Artists.Birthplace FROM Artists INNER JOIN Artworks ON Artists.ArtistID = Artworks.ArtistID WHERE Genre = 'Post-Impressionism' GROUP BY Artists.ArtistID ORDER BY COUNT(Artworks.ArtworkID) DESC LIMIT 1;"}
{"prompt":"Delete all records from the 'research_projects' table where the 'funding_amount' is greater than $500000 with given SQL schema CREATE TABLE research_projects (id INT PRIMARY KEY, project_name VARCHAR(255), funding_source VARCHAR(255), funding_amount DECIMAL(10,2)); INSERT INTO research_projects (id, project_name, funding_source, funding_amount) VALUES (1, 'Climate Change Impact Study', 'National Science Foundation', 750000.00), (2, 'Biodiversity Loss in Arctic Region', 'European Union', 450000.00), (3, 'Indigenous Communities and Climate Change', 'World Bank', 800000.00), (4, 'Arctic Resource Management', 'Global Environment Facility', 550000.00);","completion":"DELETE FROM research_projects WHERE funding_amount > 500000.00;"}
{"prompt":"How many records are there in the 'arctic_weather' table for each month? with given SQL schema CREATE TABLE arctic_weather (date DATE, temperature FLOAT);","completion":"SELECT EXTRACT(MONTH FROM date) AS month, COUNT(*) AS records_count FROM arctic_weather GROUP BY month;"}
{"prompt":"What is the average temperature per year in the Arctic Research Lab? with given SQL schema CREATE TABLE ArcticResearchLab (id INT, year INT, temperature FLOAT); INSERT INTO ArcticResearchLab (id, year, temperature) VALUES (1, 2000, -10.5), (2, 2001, -11.3), (3, 2002, -12.1);","completion":"SELECT AVG(temperature) FROM ArcticResearchLab GROUP BY year;"}
{"prompt":"What is the average temperature recorded in the Arctic Research Station 15 in March? with given SQL schema CREATE TABLE Arctic_Research_Station_15 (date DATE, temperature FLOAT);","completion":"SELECT AVG(temperature) FROM Arctic_Research_Station_15 WHERE EXTRACT(MONTH FROM date) = 3;"}
{"prompt":"What is the total length of highways in 'Highways' table for each state? with given SQL schema CREATE TABLE Highways(state VARCHAR(255), length FLOAT, type VARCHAR(255)); INSERT INTO Highways VALUES('California',500.0,'Rural'),('California',700.0,'Urban'),('Texas',400.0,'Rural'),('Texas',800.0,'Urban'),('NewYork',300.0,'Rural'),('NewYork',600.0,'Urban');","completion":"SELECT state, SUM(length) FROM Highways GROUP BY state;"}
{"prompt":"What is the minimum depth recorded in the Mariana Trench? with given SQL schema CREATE TABLE ocean_floor_mapping (location VARCHAR(255), depth FLOAT);   INSERT INTO ocean_floor_mapping (location, depth) VALUES ('Mariana Trench', 10994.0), ('Challenger Deep', 10972.8);","completion":"SELECT MIN(depth) FROM ocean_floor_mapping WHERE location = 'Mariana Trench';"}
{"prompt":"How many employees of each position work in the 'drilling' department? with given SQL schema CREATE TABLE departments (id INT, name VARCHAR(50)); CREATE TABLE employee_positions (id INT, name VARCHAR(50), dept_id INT, emp_id INT); CREATE TABLE employee_dept (id INT, dept_id INT, emp_id INT); CREATE TABLE employees (id INT, name VARCHAR(50), salary DECIMAL(10, 2));","completion":"SELECT e.position, COUNT(*) as num_employees FROM employee_positions ep JOIN employees e ON e.id = ep.emp_id JOIN employee_dept ed ON e.id = ed.emp_id JOIN departments d ON d.id = ed.dept_id WHERE d.name = 'drilling' GROUP BY e.position;"}
{"prompt":"List all subscribers who have both mobile and broadband services, along with their contract start and end dates. with given SQL schema CREATE TABLE subscribers (subscriber_id INT, name VARCHAR(50), mobile_contract_start_date DATE, mobile_contract_end_date DATE, broadband_contract_start_date DATE, broadband_contract_end_date DATE); INSERT INTO subscribers (subscriber_id, name, mobile_contract_start_date, mobile_contract_end_date, broadband_contract_start_date, broadband_contract_end_date) VALUES (1, 'John Doe', '2021-01-01', '2022-01-01', '2021-02-01', '2022-02-01'), (2, 'Jane Smith', '2021-03-01', '2022-03-01', '2021-04-01', '2022-04-01');","completion":"SELECT subscriber_id, name, mobile_contract_start_date, mobile_contract_end_date, broadband_contract_start_date, broadband_contract_end_date FROM subscribers WHERE mobile_contract_start_date IS NOT NULL AND broadband_contract_start_date IS NOT NULL;"}
{"prompt":"What is the most common word in the 'politics' category? with given SQL schema CREATE TABLE news (title VARCHAR(255), author VARCHAR(255), word_count INT, category VARCHAR(255), word VARCHAR(255)); INSERT INTO news (title, author, word_count, category, word) VALUES ('Sample News', 'Jane Smith', 800, 'Politics', 'Democracy');","completion":"SELECT word, COUNT(*) as count FROM news WHERE category = 'Politics' GROUP BY word ORDER BY count DESC LIMIT 1;"}
{"prompt":"What is the average depth of the five deepest trenches in the Pacific Ocean? with given SQL schema CREATE TABLE TRENCHES (NAME TEXT, DEPTH NUMERIC, REGION TEXT); INSERT INTO TRENCHES (NAME, DEPTH, REGION) VALUES ('Mariana Trench', 36090, 'Pacific Ocean'), ('Tonga Trench', 35702, 'Pacific Ocean'), ('Kuril-Kamchatka Trench', 34455, 'Pacific Ocean'), ('Philippine Trench', 33100, 'Pacific Ocean'), ('Sibuyan Sea Trench', 33070, 'Pacific Ocean'), ('Izu-Bonin Trench', 31890, 'Pacific Ocean');","completion":"SELECT AVG(DEPTH) FROM (SELECT DEPTH FROM TRENCHES WHERE REGION = 'Pacific Ocean' ORDER BY DEPTH DESC LIMIT 5) AS T;"}
{"prompt":"What is the maximum temperature recorded in 'Field D'? with given SQL schema CREATE TABLE sensors (sensor_id INT, location VARCHAR(50)); INSERT INTO sensors (sensor_id, location) VALUES (004, 'Field D'); CREATE TABLE temps (sensor_id INT, temp FLOAT, timestamp TIMESTAMP); INSERT INTO temps (sensor_id, temp, timestamp) VALUES (004, 29.5, '2022-01-01 10:00:00'); INSERT INTO temps (sensor_id, temp, timestamp) VALUES (004, 31.6, '2022-01-02 11:00:00');","completion":"SELECT MAX(temp) FROM temps WHERE sensor_id = 004;"}
{"prompt":"What is the minimum price of Promethium from 2016 to 2018? with given SQL schema CREATE TABLE price_data (element VARCHAR(10), year INT, price DECIMAL(5,2)); INSERT INTO price_data VALUES ('Promethium', 2015, 22.50), ('Promethium', 2016, 23.10), ('Promethium', 2017, 21.90), ('Promethium', 2018, 22.80), ('Promethium', 2019, 23.30);","completion":"SELECT MIN(price) FROM price_data WHERE element = 'Promethium' AND year BETWEEN 2016 AND 2018;"}
{"prompt":"List the top 3 most affordable properties based on their sustainability scores in the 'RenewableHeights' neighborhood, ordered by size. with given SQL schema CREATE TABLE Properties (PropertyID INT, Price INT, SustainabilityScore INT, Neighborhood VARCHAR(20), Size INT); INSERT INTO Properties (PropertyID, Price, SustainabilityScore, Neighborhood, Size) VALUES (1, 300000, 80, 'RenewableHeights', 1200), (2, 450000, 95, 'RenewableHeights', 1500), (3, 250000, 60, 'RenewableHeights', 1800), (4, 200000, 85, 'RenewableHeights', 1000);","completion":"SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY Neighborhood ORDER BY Price, Size) AS rn FROM Properties WHERE Neighborhood = 'RenewableHeights' ORDER BY Price, Size) sub WHERE rn <= 3;"}
{"prompt":"What is the average size, in square feet, of co-owned properties in the city of Seattle? with given SQL schema CREATE TABLE property (id INT, size INT, city VARCHAR(20), co_owned BOOLEAN); INSERT INTO property (id, size, city, co_owned) VALUES (1, 1200, 'Seattle', TRUE), (2, 1500, 'Seattle', FALSE), (3, 900, 'Seattle', TRUE);","completion":"SELECT AVG(size) FROM property WHERE city = 'Seattle' AND co_owned = TRUE;"}
{"prompt":"What is the total number of threat indicators for the energy sector with a confidence level higher than 75? with given SQL schema CREATE TABLE threat_indicators (id INT, sector TEXT, confidence INT); INSERT INTO threat_indicators (id, sector, confidence) VALUES (1, 'Energy', 80); INSERT INTO threat_indicators (id, sector, confidence) VALUES (2, 'Transportation', 70); INSERT INTO threat_indicators (id, sector, confidence) VALUES (3, 'Energy', 78);","completion":"SELECT SUM(confidence) FROM threat_indicators WHERE sector = 'Energy' AND confidence > 75;"}
{"prompt":"Update the fuel type for cars produced before 2010 in the cars table to 'conventional'. with given SQL schema cars (id, make, model, year, fuel_type)","completion":"UPDATE cars SET fuel_type = 'conventional' WHERE cars.year < 2010;"}
{"prompt":"What is the average fuel efficiency of hybrid vehicles in Japan? with given SQL schema CREATE TABLE JPHybridVehicles (id INT, company VARCHAR(30), model VARCHAR(30), fuel_efficiency DECIMAL(5,2));","completion":"SELECT AVG(fuel_efficiency) FROM JPHybridVehicles WHERE company = 'Toyota';"}
{"prompt":"List the total quantity of sustainable fabric types used in 2020. with given SQL schema CREATE TABLE Fabrics (id INT PRIMARY KEY, type VARCHAR(20), year INT, quantity INT); INSERT INTO Fabrics (id, type, year, quantity) VALUES (1, 'Organic_Cotton', 2020, 5000), (2, 'Recycled_Polyester', 2020, 7000);","completion":"SELECT SUM(quantity) FROM Fabrics WHERE year = 2020 AND type IN ('Organic_Cotton', 'Recycled_Polyester');"}
{"prompt":"What is the average lead time for eco-friendly packaging suppliers? with given SQL schema CREATE TABLE suppliers (id INT, name VARCHAR(255), material VARCHAR(255), lead_time INT); INSERT INTO suppliers (id, name, material, lead_time) VALUES","completion":"SELECT AVG(lead_time) FROM suppliers WHERE material = 'Eco-friendly Packaging';"}
{"prompt":"List all claims that were processed in the last 60 days. with given SQL schema CREATE TABLE Claims (ClaimID INT, ProcessingDate DATE); INSERT INTO Claims (ClaimID, ProcessingDate) VALUES (1, '2022-02-01'), (2, '2022-02-15'), (3, '2022-01-01');","completion":"SELECT ClaimID, ProcessingDate FROM Claims WHERE ProcessingDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 60 DAY);"}
{"prompt":"What is the total claim amount for each gender? with given SQL schema CREATE TABLE policyholders (id INT, policyholder_name TEXT, state TEXT, age INT, gender TEXT); INSERT INTO policyholders (id, policyholder_name, state, age, gender) VALUES (1, 'John Doe', 'NY', 35, 'Male'); INSERT INTO policyholders (id, policyholder_name, state, age, gender) VALUES (2, 'Jane Smith', 'NY', 42, 'Female'); CREATE TABLE claims (id INT, policyholder_id INT, claim_amount INT); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (1, 1, 500); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (2, 2, 750);","completion":"SELECT gender, SUM(claim_amount) AS total_claim_amount FROM claims JOIN policyholders ON claims.policyholder_id = policyholders.id GROUP BY gender;"}
{"prompt":"Which states have no union members? with given SQL schema CREATE TABLE union_members (id INT, name VARCHAR(50), state VARCHAR(2), joined_date DATE); INSERT INTO union_members (id, name, state, joined_date) VALUES (1, 'John Doe', 'NY', '2020-01-01'); INSERT INTO union_members (id, name, state, joined_date) VALUES (2, 'Jane Smith', 'CA', '2019-06-15'); INSERT INTO union_members (id, name, state, joined_date) VALUES (3, 'Maria Rodriguez', 'CA', '2018-12-21'); INSERT INTO union_members (id, name, state, joined_date) VALUES (4, 'David Kim', 'NY', '2019-04-10');","completion":"SELECT state FROM union_members GROUP BY state HAVING COUNT(*) = 0;"}
{"prompt":"How many visitors are from the city of \"Seattle\" in the \"Visitor\" table? with given SQL schema CREATE TABLE visitor (visitor_id INT, visitor_city VARCHAR(255)); INSERT INTO visitor (visitor_id, visitor_city) VALUES (1, 'Seattle');","completion":"SELECT COUNT(*) FROM visitor WHERE visitor_city = 'Seattle';"}
{"prompt":"What is the total waste generation in kilograms for all organizations in the 'urban' sector for the year 2021? with given SQL schema CREATE TABLE organizations (id INT, name TEXT, sector TEXT, annual_waste_generation_kg FLOAT); INSERT INTO organizations (id, name, sector, annual_waste_generation_kg) VALUES (1, 'EcoCity Recycling', 'urban', 15000.5); INSERT INTO organizations (id, name, sector, annual_waste_generation_kg) VALUES (2, 'GreenTech Waste Solutions', 'urban', 12000.3);","completion":"SELECT SUM(annual_waste_generation_kg) FROM organizations WHERE sector = 'urban' AND YEAR(event_date) = 2021;"}
{"prompt":"What is the maximum wastewater volume treated by each plant in New York on February 10, 2022? with given SQL schema CREATE TABLE WasteWaterTreatment (Id INT PRIMARY KEY, Plant VARCHAR(255), Volume FLOAT, Date DATE); INSERT INTO WasteWaterTreatment (Id, Plant, Volume, Date) VALUES (1, 'Plant A', 500, '2022-02-10'); INSERT INTO WasteWaterTreatment (Id, Plant, Volume, Date) VALUES (2, 'Plant B', 600, '2022-02-10'); INSERT INTO WasteWaterTreatment (Id, Plant, Volume, Date) VALUES (3, 'Plant C', 700, '2022-02-10');","completion":"SELECT Plant, MAX(Volume) FROM WasteWaterTreatment WHERE Date = '2022-02-10' AND Plant IN ('Plant A', 'Plant B', 'Plant C') GROUP BY Plant;"}
{"prompt":"Calculate the total workout duration and number of workouts for each user in the month of January. with given SQL schema CREATE TABLE Workouts (user_id INT, workout_date DATE, workout_duration INT); INSERT INTO Workouts (user_id, workout_date, workout_duration) VALUES (1, '2022-01-01', 60), (1, '2022-01-02', 30), (2, '2022-01-01', 45), (2, '2022-01-02', 60);","completion":"SELECT user_id, SUM(workout_duration) as total_duration, COUNT(*) as num_workouts FROM Workouts WHERE MONTH(workout_date) = 1 GROUP BY user_id;"}
{"prompt":"How many users have a higher heart rate on weekends compared to weekdays? with given SQL schema CREATE TABLE heart_rates (id INT, user_id INT, heart_rate INT, day_type VARCHAR(9)); INSERT INTO heart_rates (id, user_id, heart_rate, day_type) VALUES (1, 1, 120, 'Weekday'), (2, 2, 130, 'Weekend');","completion":"SELECT COUNT(*) FROM (SELECT user_id, CASE WHEN day_type = 'Weekday' THEN heart_rate END AS weekday_heart_rate, CASE WHEN day_type = 'Weekend' THEN heart_rate END AS weekend_heart_rate FROM heart_rates) AS subquery WHERE weekend_heart_rate > weekday_heart_rate;"}
